intmain(){ int@@ l1,l2,@@ s=0; double@@ r,@@ d; chars1@@ [max@@ +1],@@ s2@@ [max@@ +1]; scanf("%lf%s%s",&@@ r,@@ s1,@@ s2); l1=strlen(@@ s1); l2=strlen(@@ s2); if(l1!=l2@@ ){ printf("error"); return0; }else{@@ for(inti=0;i<@@ l1@@ ;i++){ if((@@ s1@@ [i]!='A'&&@@ s1@@ [i]!='G'&&@@ s1@@ [i]!='C'&&@@ s1@@ [i]!='T')@@ ||(@@ s2@@ [i]!='A'&&@@ s2@@ [i]!='G'&&@@ s2@@ [i]!='C'&&@@ s2@@ [i]!='T')@@ ){ printf("error"); return0; } } for(intj=0;j<@@ l1@@ ;j++){ if(s1@@ [j]==@@ s2@@ [j]){ s++; } } d@@ =1.0*@@ s/@@ l1; if(d@@ >@@ r@@ ){ printf("yes"); }@@ else{printf("no");} } return0; }  
c -1
h -1
int@@ k@@ [26@@ ][2@@ ]; intmain(){ inti,j,n,@@ m=0; scanf("%d",&n); for(i=1;i<=n;i++){ scanf("%d",&@@ k@@ [i]@@ [1]); k@@ [i]@@ [0]=1; for(j=0;j<i;j++){ if(k@@ [j]@@ [1]@@ >=@@ k@@ [i]@@ [1]@@ &&k@@ [j]@@ [0]@@ +1>@@ k@@ [i][0]@@ )@@ k@@ [i]@@ [0]=@@ k@@ [j]@@ [0]@@ +1; } if(k@@ [i][0]@@ >@@ m)@@ m=@@ k@@ [i]@@ [0]; } printf("%d",m); return0; }  
c -1
h -1
0

intmain() { inta[100][100],@@ i,j,k,@@ sum,@@ row,col; scanf("%d%d",&row,&col); for(i=1;i<=@@ row;i++) { for(j=1;j<=col;j++) { scanf("%d",&@@ a[i-1]@@ [j-1]); } } for(@@ sum=0;@@ sum@@ <=col@@ -1;@@ sum@@ ++) { for(i=0;i<=@@ row-1;i++) { if(sum@@ -i@@ <0) break; printf("%d\n",@@ a[i][@@ sum@@ -i]); } } for(@@ sum=@@ col@@ ;@@ sum@@ <=col@@ +row@@ -2@@ ;@@ sum@@ ++) { for(i=@@ sum@@ -col@@ +1;i<=@@ row-1;i++) { if(sum@@ -i@@ <0@@ )break; printf("%d\n",@@ a[i][@@ sum@@ -i]); } } return0; }  
c -1
h -1
int@@ A@@ ,@@ B@@ ; inta[@@ 250@@ ],b[@@ 250@@ ],c[@@ 501]; voidinput() {scanf("%d",&@@ A@@ ); scanf("%d",&@@ B@@ ); for(inti=0;i<@@ A@@ ;i++){ scanf("%d",&a[i]);} for(intj=0;j<@@ B@@ ;j++){ scanf("%d",&@@ b[j]@@ );} } voidpaixu@@ () { for(intj=@@ A@@ -1@@ ;j>0;j--) { for(int@@ r=0;r@@ <j@@ ;r++) {@@ if(a[@@ r@@ ]>@@ a[r@@ +1]) {int@@ tmp; tmp=@@ a[r@@ +1]; a[r@@ +1@@ ]=a[@@ r@@ ]; a[r@@ ]=@@ tmp; } } } for(intj=@@ B@@ -1@@ ;j>0;j--) { for(int@@ r=0;r@@ <j@@ ;r++) {if(@@ b[r@@ ]>@@ b[r@@ +1]) {int@@ tmp; tmp=@@ b[r@@ +1]; b[r@@ +1]=@@ b[r@@ ]; b[r@@ ]=@@ tmp; } } } } voidhebing@@ () { for(inti=0;i<@@ A@@ ;i++) {@@ c[i]=@@ a[i];} for(inti=@@ A@@ ;i<@@ A@@ +@@ B@@ ;i++) {@@ c[i]=b[i-@@ A@@ ];} } void@@ show@@ () { for(intj=0;j<@@ A@@ +@@ B@@ ;j++) {printf("%d",@@ c@@ [j]); if(j<@@ A@@ +@@ B@@ -1) {@@ printf("@@ ");@@ }} } main() { scanf("%d",&@@ A@@ ); scanf("%d",&@@ B@@ ); for(inti=0;i<@@ A@@ ;i++){ scanf("%d",&a[i]);} for(intj=0;j<@@ B@@ ;j++){ scanf("%d",&@@ b[j]@@ );} for(intj=@@ A@@ -1@@ ;j>0;j--) { for(int@@ r=0;r@@ <j@@ ;r++) {@@ if(a[@@ r@@ ]>@@ a[r@@ +1]) {int@@ tmp; tmp=@@ a[r@@ +1]; a[r@@ +1@@ ]=a[@@ r@@ ]; a[r@@ ]=@@ tmp; } } } for(intj=@@ B@@ -1@@ ;j>0;j--) { for(int@@ r=0;r@@ <j@@ ;r++) {if(@@ b[r@@ ]>@@ b[r@@ +1]) {int@@ tmp; tmp=@@ b[r@@ +1]; b[r@@ +1]=@@ b[r@@ ]; b[r@@ ]=@@ tmp; } } } for(inti=0;i<@@ A@@ ;i++) {@@ c[i]=@@ a[i];} for(inti=@@ A@@ ;i<@@ A@@ +@@ B@@ ;i++) {@@ c[i]=b[i-@@ A@@ ];} for(intj=0;j<@@ A@@ +@@ B@@ ;j++) {printf("%d",@@ c@@ [j]); if(j<@@ A@@ +@@ B@@ -1) {@@ printf("@@ ");@@ }} }  
c -1
h -1
0

intmain() { int@@ w@@ =0,@@ g=0; doublen; char@@ v@@ [100],@@ c[100]; scanf("%lf",&n); scanf("%s",@@ v@@ ); scanf("%s",c); char@@ A@@ ,@@ T@@ ,@@ G@@ ,@@ C@@ ; if(strlen(@@ v@@ )!=strlen(@@ c@@ )) { printf("error"); } else { for(inti=0;i<=@@ strlen(@@ v@@ )@@ -1;i++) { if(((@@ v@@ [i]!='A')&&(@@ v@@ [i]!='G')@@ &&(@@ v@@ [i]!='C')&&(@@ v@@ [i]!='T')@@ )||((@@ c@@ [i]!='A')&&(@@ c@@ [i]!='G')@@ &&(@@ c@@ [i]!='C')&&(@@ c@@ [i]!='T')@@ )) {@@ g@@ =1; printf("error"); break; } elseif(@@ v@@ [i]==@@ c@@ [i]) { w@@ ++; } } double@@ l@@ =1.0*@@ w@@ /@@ strlen(@@ v@@ ); if((@@ l>@@ n@@ )&&(@@ g@@ ==0)@@ ){printf("yes");} elseif((@@ l@@ <=@@ n@@ )&&(@@ g@@ ==0)@@ ){@@ printf("no");} } int@@ u@@ ;@@ scanf("%d",&@@ u@@ ); return0; }  
c -1
h -1
voidmain() { inta,b,@@ s,@@ i,j; intx@@ [100][100]; intn; scanf("%d",&n); for(i=0;i<n;i++) { for(j=0;j<n;j++) { scanf("%d",&@@ x@@ [i][j]); } } for(i=0;i<n;i++) { a=0; for(j=0;j<n;j++) { if(x@@ [i][j]==@@ 255) continue; if(x@@ [i][j]==0) a=@@ a@@ +1; } if(a@@ >0) break; } for(j=0;j<n;j++) { b=0; for(i=0;i<n;i++) { if(x@@ [i][j]==@@ 255) continue; if(x@@ [i][j]==0) b=b@@ +1; } if(b@@ >0) break; } s=(@@ a@@ -2)*(@@ b@@ -2); printf("%d",s); }  
c -1
h -1
0

intmain(intargc,char*argv[]) { intyear,month,@@ date; int@@ a=0; scanf("%d%d%d",&year,&month,&@@ date@@ ); if(((@@ year%@@ 4==0)&&(@@ year%100!=0@@ ))@@ ||@@ year%@@ 400@@ ==0){ switch(month@@ ){ case1:@@ a=@@ date;break; case2:@@ a@@ =31+@@ date;break; case3:@@ a=31+29@@ +@@ date;break; case4:@@ a=31+29@@ +31+@@ date;break; case5:@@ a=31+29@@ +31+30@@ +@@ date;break; case6:@@ a=31+29@@ +31+30+31+@@ date;break; case7:@@ a=31+29@@ +31+30+31+30@@ +@@ date;break; case8:@@ a=31+29@@ +31+30+31+30+31+@@ date;break; case9:@@ a=31+29@@ +31+30+31+30+31+31+@@ date;break; case10:@@ a=31+29@@ +31+30+31+30+31+31+30@@ +@@ date;break; case11:@@ a=31+29@@ +31+30+31+30+31+31+30+31+@@ date;break; case12:@@ a=31+29@@ +31+30+31+30+31+31+30+31+30@@ +@@ date;break; } } else{ switch(month@@ ){ case1:@@ a=@@ date;break; case2:@@ a@@ =31+@@ date;break; case3:@@ a=31+28@@ +@@ date;break; case4:@@ a=31+28@@ +31+@@ date;break; case5:@@ a=31+28@@ +31+30@@ +@@ date;break; case6:@@ a=31+28@@ +31+30+31+@@ date;break; case7:@@ a=31+28@@ +31+30+31+30@@ +@@ date;break; case8:@@ a=31+28@@ +30@@ +31+30+31+@@ date;break; case9:@@ a=31+28@@ +31+30+31+30+31+31+@@ date;break; case10:@@ a=31+28@@ +31+30+31+30+31+31+30@@ +@@ date;break; case11:@@ a=31+28@@ +31+30+31+30+31+31+30+31+@@ date;break; case12:@@ a=31+28@@ +31+30+31+30+31+31+30+31+30@@ +@@ date;break; } } printf("%d\n",@@ a); return0; }  
c -1
h -1
int@@ find@@ (int*@@ x,int@@ y,int@@ z) { intcount=0; for(inti=0;i<@@ y;i++) {@@ if(x@@ [i]==@@ z@@ )@@ count@@ ++;} returncount; } intcount@@ (int*@@ x,int@@ y) { int@@ count1@@ =0; for(inti=0;i<@@ y;i++) {@@ count1@@ +=@@ find@@ (@@ x,y,@@ 2*@@ x[i]@@ );} return@@ count1@@ ; } intmain() { int@@ temp@@ [@@ 16]; int@@ len@@ =0; scanf("%d",&@@ temp@@ [@@ len@@ ]); while(@@ temp@@ [@@ len@@ ]!=@@ -1) { while(@@ temp@@ [@@ len@@ ]!=0) {@@ len@@ ++; scanf("%d",&@@ temp@@ [@@ len@@ ]); } printf("%d\n",@@ count@@ (@@ temp,@@ len@@ )); scanf("%d",&@@ temp@@ [0]); len@@ =0; } return0; }  
c -1
h -1
0

intf@@ (intx,int@@ min@@ ){ if(x@@ <@@ min@@ )return0; int@@ r@@ =1; for(inti=@@ min@@ ;i<@@ x@@ /2@@ ;i++){ if(x@@ %i==0){ r@@ +=@@ f(@@ x@@ /i,i); } } return@@ r; } intmain(){ intn; cin>>n; while(n@@ --){ intx; cin>>x; cout<<@@ f(@@ x,@@ 2)<<endl; } }  
c -1
h -1
intmain() { intn,i,j,@@ sum[@@ 10000@@ ]={0}; inta[100][100@@ ]={0},@@ k; int*p=@@ sum,@@ x,y; scanf("%d",&n); for(k=0;k<n;k++) { scanf("%d%d",&@@ x,&@@ y); for(i=0;i<x;i++) { for(j=0;j<@@ y;j++) scanf("%d",&a[i][j]); } if(x@@ !=1) { for(j=0;j<@@ y;j++) { *(p@@ +k)@@ +=@@ a[0]@@ [j]+@@ a[x@@ -1][j]; } for(i=1;i<@@ x@@ -1;i++) { *(p@@ +k)@@ +=@@ a[i][0]+@@ a[i][@@ y@@ -1]; } } else { for(j=0;j<@@ y;j++) { *(p@@ +k)@@ +=@@ a[0][j]; } } } for(@@ ;p<@@ (@@ sum@@ +@@ n);@@ p++) { printf("%d\n",@@ *p@@ ); } return0; }  
c -1
h -1
0

voidmain() { inti,j,@@ m,@@ a[@@ 26@@ ][@@ 999@@ ],@@ num[@@ 26]={0},@@ t,@@ max; char@@ zz@@ [27]; scanf("%d",&m); for(i=0;i<m;i++) { scanf("%d%s",&@@ t,@@ zz@@ ); for(j=0;j<strlen(@@ zz@@ );j++) { a[@@ (int)@@ (@@ zz@@ [j]@@ -'@@ A')@@ ][@@ num[@@ (int)@@ (@@ zz@@ [j]@@ -'@@ A')@@ ]@@ ]=t; num[@@ (int)@@ (@@ zz@@ [j]@@ -'@@ A')@@ ]++; } } max=0; for(i=0;i<26;i++) { if(num@@ [i]>@@ num[@@ max@@ ]) max=i; } printf("%c\n%d\n",@@ max@@ +'A',@@ num[@@ max@@ ]); for(i=0;i<@@ num[@@ max@@ ]@@ ;i++) printf("%d\n",a[@@ max@@ ][i]); }  
c -1
h -1
inta[@@ 1001@@ ],@@ n; int@@ comp@@ (constvoid*a,constvoid*@@ b) { return@@ *(int*)@@ a@@ -*@@ (int*)@@ b; } int@@ findx@@ (int@@ l@@ ,int@@ r@@ ,int@@ key@@ ) { if(l@@ >@@ r@@ )return0; if(r@@ ==@@ l@@ ){ if(a[@@ r@@ ]==@@ key@@ ) return1; else return0; } if(a[@@ (@@ r@@ +l@@ )@@ /2@@ ]==@@ key@@ ){ return1; } elseif(@@ a[@@ (@@ r@@ +l@@ )@@ >>@@ 1@@ ]<@@ key@@ ) { return@@ findx@@ ((@@ (@@ r@@ +l@@ )@@ /2@@ )@@ +1,@@ r,@@ key@@ ); } else return@@ findx@@ (@@ l,@@ ((@@ r@@ +l@@ )@@ /2@@ )@@ -1,@@ key@@ ); } intmain() { inti,@@ k; scanf("%d%d",&n,&k); for(i=1;i<=n;i++) scanf("%d",&a[i]); qsort@@ (a@@ +1,@@ n,@@ sizeof(int),@@ comp@@ ); for(i=1;i<n;i++) if(@@ findx@@ (i+1,@@ n,@@ k-@@ a[i]@@ )) { printf("yes"); return0; } printf("no"); return0; }  
c -1
h -1
0

intmain() { charstring@@ [256],@@ sub[256],@@ re@@ [256]; inti,j; gets(@@ string); gets(sub); gets(@@ re); int@@ len1=strlen(@@ string@@ ),@@ len2=strlen(@@ sub@@ ),@@ len3@@ =strlen(@@ re); for(i=0;i<=@@ len1@@ -len2@@ ;i++) { for(j=0;j<len2@@ ;j++) { if(@@ sub@@ [j]!=@@ string@@ [i+j@@ ]@@ )break; } if(j!=@@ len2@@ )continue; if(j==@@ len2) { for(j=0;j<len2@@ ;j++)@@ string@@ [i+j@@ ]=@@ re@@ [j]; break; } } puts(@@ string); return0; }  
c -1
h -1
intmain() { intn; cin>>n; ints[@@ 25]; intmax@@ [25]; inti,j; for(i=0;i<n;i++) { cin>>@@ s[i]; } max@@ [0]=1; for(i=1;i<n;i++) { int@@ m=1; for(j=0;j<i;j++) { if(s@@ [i]<=@@ s[j]@@ &&@@ max@@ [j]+1>@@ m) m=@@ max@@ [j]+1; } max@@ [i]=@@ m; } int@@ p=@@ max@@ [0]; for(i=1;i<n;i++) { if(max@@ [i]>@@ p) p=@@ max@@ [i]; } cout<<@@ p@@ <<endl; }  
c -1
h -1
0

intmain(){ intn,k,@@ s; s=0; intsz[1000]; scanf("%d%d",&n,&k); for(inti=0;i<n;i++){ scanf("%d",&sz[i]); } for(inti=0;i<n;i++){ for(intj=0;j<n;j++){ if((@@ sz@@ [j]+@@ sz[i]@@ )==@@ k@@ &&j@@ !=@@ i){ s++; }}} if(s@@ ==0){ printf("no"); }else{ printf("yes"); } return0; }  
c -1
h -1
voidmain() { inta[@@ 20],@@ i,@@ m,n,@@ k; for(;;) { k=0; scanf("%d",&a[0]); if(a[0]==-1) break; for(i=1;;i++) { scanf("%d",&a[i]); if(a[i]==0) break; } for(m=0;m<@@ i@@ ;m++) for(n=0;n@@ <i@@ ;n++) if(a[m@@ ]==2*@@ a[n@@ ]) k++; printf("%d\n",@@ k); } }  
c -1
h -1
0

intmain(){ intn,k,i,@@ s@@ ,j,@@ sz[@@ 1000],@@ h,@@ f=0; scanf("%d%d",&n,&k); s=0; for(h=0;h@@ <n;@@ h@@ ++){ scanf("%d",&(@@ sz[@@ h@@ ]@@ )); } for(i=0;i<n;i++){ for(j=i+1;j<n;j++){ if(((@@ sz[i]@@ +sz@@ [j]@@ )==@@ k@@ )&&(@@ f@@ ==0)@@ ){ printf("yes"); f=1; break; } } if(f@@ ==1)break; } if(f@@ ==0){ printf("no"); } return0; }  
c -1
h -1
voidmain() { int@@ w; for(@@ w@@ =1;@@ ;@@ w@@ ++) { inta[16],@@ b=0; inti,j,@@ q; for(i=1;;i++) { scanf("%d",&a[i]); if(a[1@@ ]==@@ -1)break; if(a[i]==0)break; b++; } if(a[1@@ ]==@@ -1)break; intm=0; for(j=1;j<@@ b;j++) { for(q@@ =j+1@@ ;q@@ <=@@ b@@ ;q++) { if(a[j]==2*@@ a[q@@ ])@@ m++; elseif(@@ a[q@@ ]==2*@@ a[j])@@ m++; } } printf("%d\n",m); } }  
c -1
h -1
0

intm,n,@@ a[@@ 10@@ ],b[@@ 10@@ ],c[@@ 20]; voidshuru@@ () { inti; scanf("%d%d",&m,&n); for(i=1;i<=m;i++) scanf("%d",&@@ a[i@@ -1]); for(i=1;i<=n;i++) scanf("%d",&@@ b@@ [i@@ -1]); } voidpaixu@@ () { int@@ c,@@ i,j; for(j=0;j<m-1;j++) for(i=0;i<m@@ -1-j;i++) if(a[i]>a[i+1]) { c=@@ a[i]; a[i]=a[i+1]; a[i+1]=@@ c; } for(j=0;j<n-1;j++) for(i=0;i<n@@ -1-j;i++) if(b[i]>b[i+1]) { c=@@ b[i]; b[i]=b[i+1]; b[i+1]=@@ c; } } void@@ zhenghe@@ () { inti; for(i=0;i<m;i++) c[i]=a[i]; for(i=m;i<@@ m+n;i++) c[i]=b[i-@@ m]; } voidshuchu@@ () { inti; for(i=0;i<m+@@ n-1;i++) printf("%d",c[i]); printf("%d",c[@@ m+@@ n-1]); } voidmain() { shuru@@ (); paixu@@ (); zhenghe@@ (); shuchu@@ (); }  
c -1
h -1
intnum[@@ 1000][1000]; intmain(){ intk,@@ i,j; scanf("%d",&k); for(i=0;i<k;i++) { for(j=0;j<k;j++) { scanf("%d",&@@ num@@ [i][j]); } } intm,n,@@ p,q,@@ s,@@ w; w@@ =0; for(i=0;i<@@ k@@ &&@@ w@@ ==0@@ ;i++) { for(j=0;j<@@ k@@ &&@@ w@@ ==0@@ ;j++) { if(num@@ [i][j]==0) { m=i; p=@@ j; w@@ =1; } } } n=0; q=0; for(i=@@ m,@@ j=@@ p@@ ;j<@@ k;j++) { if(num@@ [i][j]==0) { n++; } } for(i=@@ m,@@ j=@@ p@@ ;i<@@ k;i++) { if(num@@ [i][j]==0) { q++; } } s=(@@ n-2@@ )*(@@ q@@ -2); printf("%d",s); return0; }  
c -1
h -1
0

int@@ min@@ (inta,intb) { if(a@@ <b@@ )@@ return@@ a; else@@ return@@ b; } main() { inta[100][100]; introw,col,@@ i,j,k,@@ l; scanf("%d%d",&row,&col); for(i=0;i<row;i++) { for(j=0;j<col;j++) scanf("%d",&a[i][j]); } for(i=0;i<col;i++) { for(j=0;j<@@ min@@ (i+1,@@ row@@ );j++) { printf("%d\n",@@ a[j][i-j@@ ]); } } for(k=1;k<@@ row@@ ;k++) { for(l=0;l<@@ min@@ (@@ row@@ -@@ k,@@ col@@ );@@ l++) printf("%d\n",@@ a[k@@ +l@@ ][col@@ -1@@ -l@@ ]); } }  
c -1
h -1
intmain() { intn,i,j,@@ a,b,@@ x,y,@@ s; a=0; b=0; x@@ =-1; y@@ =-1; scanf("%d",&n); int@@ tx@@ [1000][1000]; for(i=0;i<n;i++) { for(j=0;j<n;j++) { scanf("%d",&@@ tx@@ [i][j]); } } for(i=0;i<n;i++) { for(j=0;j<n;j++) { if(@@ tx@@ [i][j]==0) { x@@ =j; y@@ =i; break; } } if((x@@ ==@@ j@@ )&&(@@ y@@ ==@@ i@@ )) break; } for(x@@ =j@@ ;x@@ <n;@@ x++) { if(@@ tx@@ [x@@ ]@@ [i]==0) { a=@@ a@@ +1; } } for(@@ y@@ =i;@@ y@@ <n;@@ y@@ ++) { if(@@ tx@@ [j]@@ [y@@ ]==0) { b=b@@ +1; } } s=@@ a*@@ b@@ -2@@ *(a+@@ b@@ -2); printf("%d",s); return0; }  
c -1
h -1
0

intmain() { int@@ array[100][100]; intn,@@ sum,@@ row,col; int*@@ point@@ ; point@@ =@@ *@@ array@@ ; cin>>n; for(@@ ;n@@ >0@@ ;n@@ --) { sum=0; cin>>row>>col; for(@@ point@@ =@@ *@@ array@@ ;@@ point@@ <*@@ array@@ +row@@ *col@@ ;@@ point@@ ++) cin>>@@ *@@ point@@ ; point@@ =@@ *@@ array@@ ; for(;@@ point@@ <*@@ array@@ +col@@ ;@@ point@@ ++) { sum=sum+*@@ point@@ ; } point@@ --; for(@@ point@@ =@@ point@@ +col@@ ;@@ point@@ <*@@ array@@ +row@@ *col@@ ;@@ point@@ =@@ point@@ +col@@ ) { sum=sum+*@@ point@@ ; } point@@ -=@@ col; for(@@ point@@ =@@ point@@ -1;@@ point@@ >=@@ *@@ array@@ +(@@ row@@ -1)*@@ col@@ ;@@ point@@ --) sum=sum+*@@ point@@ ; point@@ ++; for(@@ point@@ =@@ point@@ -col@@ ;@@ point@@ >*@@ array@@ ;@@ point@@ =@@ point@@ -col@@ ) sum=sum+*@@ point@@ ; cout<<sum<<endl; } return0; }  
c -1
h -1
inti,@@ m,n,@@ a[@@ 1000],b[1000],@@ c; voidf@@ (inta[@@ 1000@@ ],int@@ m) { for(i=0;i<m@@ -1;i++){ for(intj=0;j<@@ m-1@@ -i;j++){ if(a[j]>a[j+1@@ ]){ c=@@ a[j];a[j]=a[j+1];@@ a[j+1]=@@ c; }}} cout<<a[0]; for(i=1;i<m;i++) cout<<""<<a[i]; } intmain(){ cin>>m>>n; for(i=0;i<m;i++){ cin>>a[i]; } f(a,@@ m); for(i=0;i<n;i++){ cin>>b[i]; } cout<<"@@ "; f(@@ b,@@ n); return0; }  
c -1
h -1
0

voidmain() { intn,k,i,j,@@ p=0; inta[1000]; scanf("%d%d",&n,&k); for(i=0;i<n;i++) scanf("%d",&a[i]); for(i=0;i<n;i++) { for(j=1;j<n;j++) { if((@@ a[i]+@@ a[j]@@ )==@@ k) { p=1; break; } } if(p@@ ==1) break; } if(p@@ ==1) printf("yes"); else printf("no"); }  
c -1
h -1
voidmain() { intn,a[@@ 26]={0},@@ i,j,@@ z,@@ l@@ [26@@ ]={@@ 1@@ }; scanf("%d",&n); for(i=n@@ ;i>0;i--) scanf("%d",&a[i]); for(i=1;i<=n;i++) {@@ for(z@@ =j@@ =0;j<@@ i;j++) if(a[i]>=@@ a[j]&&@@ z@@ <=@@ l@@ [j]) z=@@ l@@ [j]+1; l[i]=@@ z; } for(z@@ =i@@ =0;i<=@@ n;i++) if(l@@ [i]>@@ z) z=@@ l@@ [i]; printf("%d\n",@@ z@@ -1); }  
c -1
h -1
0

intmain() { intyear,month,day,@@ days; scanf("%d%d%d",&year,&month,&day); if(month@@ ==1)@@ days=@@ day; elseif(month==@@ 2)@@ days=@@ day+@@ 31; elseif(month==@@ 3)@@ days=@@ day+@@ 59@@ ; elseif(month==@@ 4)@@ days=@@ day+@@ 90@@ ; elseif(month==@@ 5@@ )@@ days=@@ day+@@ 120@@ ; elseif(month==@@ 6@@ )@@ days=@@ day+@@ 151@@ ; elseif(month==@@ 7@@ )@@ days=@@ day+@@ 181@@ ; elseif(month==@@ 8@@ )@@ days=@@ day+@@ 212@@ ; elseif(month==@@ 9@@ )@@ days=@@ day+@@ 243@@ ; elseif(month==@@ 10@@ )@@ days=@@ day+@@ 273@@ ; elseif(month==@@ 11@@ )@@ days=@@ day+@@ 304@@ ; elseif(month==@@ 12@@ )@@ days=@@ day+@@ 334@@ ; if(year%@@ 100@@ ==0@@ ,@@ year%@@ 400@@ !=0)@@ printf("%d",@@ days@@ ); elseif(@@ year%100!=0@@ ,@@ year%@@ 4@@ !=0)@@ printf("%d",@@ days@@ ); elseif(@@ year%100!=0@@ ,@@ year%@@ 4==0) { if(month@@ >=@@ 1,@@ month@@ <=@@ 2)@@ printf("%d",@@ days@@ ); elseif(@@ month@@ >@@ 2,@@ month@@ <=@@ 12@@ )@@ printf("%d",@@ days@@ +1); } elseif(@@ year%400==0) { if(month@@ >=@@ 1,@@ month@@ <=@@ 2)@@ printf("%d",@@ days@@ ); elseif(@@ month@@ >@@ 2,@@ month@@ <=@@ 12@@ )@@ printf("%d",@@ days@@ +1); } }  
c -1
h -1
intmain(){ inta[@@ 20@@ ][@@ 20@@ ],i,j,@@ b[@@ 20],@@ s,@@ n=0,@@ k; for(i=0;i<@@ 20@@ ;i++){ for(j=0;j<@@ 16@@ ;j++){ cin>>a[i][j]; if(a[i]@@ [0]@@ ==-1)break; if(a[i][j]@@ ==0){@@ b[i]@@ =j@@ ;break;} } if(a[i]@@ [0]@@ ==-1)break; } s@@ =i; for(i=0;i<@@ s@@ ;i++){ for(j=0;j<@@ b[i]@@ ;j++){ for(k=j+1;k<@@ b[i]@@ ;k++){ if(((@@ a[i][j]@@ %@@ a[i][k]@@ ==0)&&(@@ a[i][j]@@ /@@ a[i]@@ [k]==@@ 2)@@ )||((@@ a[i][k]@@ %@@ a[i][j]@@ ==0)&&(@@ a[i][k]@@ /@@ a[i]@@ [j]==@@ 2)@@ )) n=n+1; } } cout<<n<<endl; n=0; } return0; }  
c -1
h -1
0

voidmain() { int@@ *p,@@ i,k,@@ m,n,@@ t,@@ sum@@ [100]={0},@@ j,@@ q,@@ x; scanf("%d@@ \n@@ %"@@ ,&@@ k); p=@@ (int*)malloc(@@ 10000@@ *sizeof(int)); for(x=0;x@@ <k;@@ x++) { scanf("%d%d",&m,&n); for(i=0;i<m@@ *@@ n;i++) scanf("%d",p@@ +i); for(j=0;j<n;j++) sum[@@ x@@ ]=sum[@@ x@@ ]+@@ (@@ *(p+j)@@ )+@@ (@@ *(p+@@ n@@ *(@@ m-1)@@ +j)); for(q@@ =1;@@ q@@ <m-1@@ ;q++) sum[@@ x@@ ]=sum[@@ x@@ ]+@@ (@@ *(p+@@ q@@ *@@ n@@ ))@@ +(@@ *(p+@@ q@@ *@@ n+@@ n-1@@ )); } for(x=0;x@@ <k;@@ x++) printf("%d\n",@@ sum[@@ x@@ ]); }  
c -1
h -1
intmain() { int@@ photo@@ [300@@ ][@@ 300@@ ]={@@ 1@@ }; intn; inti,j; cin>>n; for(i=1;i<=n;i++) { for(j=1;j<=n;j++) { intt; cin>>t; if(t==@@ 255) t=1; photo@@ [i][j]=@@ t; } } int@@ found@@ =0; int@@ Lx@@ ,@@ Ly@@ ,@@ Bx@@ ,@@ By@@ ; for(i=1;i<=n;i++) { for(j=1;j<=n;j++) { if(@@ photo@@ [i][j]==0) { Lx@@ =i; Ly@@ =j; found@@ =1; break; } } if(@@ found@@ )break; } found@@ =0; for(i=n@@ ;i>=1;i--) { for(j=n@@ ;j@@ >=1@@ ;j--) { if(@@ photo@@ [i][j]==0) { Bx@@ =i; By@@ =j; found@@ =1; break; } if(@@ found@@ )break; } } int@@ w=@@ Bx@@ -@@ Lx@@ -1; int@@ h=@@ By@@ -@@ Ly@@ -1; cout<<@@ w@@ *@@ h@@ <<endl; return0; }  
c -1
h -1
0

voidmain() { void@@ maopao@@ (intc[],int@@ l); int@@ c1@@ [100],@@ c2@@ [100],@@ l1,l2@@ ; inti,@@ n1,n2; scanf("%d%d",&n1,&n2); for(i=0;i<n1;i++) {scanf("%d",&@@ c1@@ [i]@@ );@@ l1@@ =i+1@@ ;} for(i=0;i<n2;i++) {scanf("%d",&@@ c2@@ [i]@@ );@@ l2@@ =i+1@@ ;} maopao@@ (@@ c1@@ ,@@ l1@@ ); printf(""); maopao@@ (@@ c2@@ ,@@ l2@@ ); } void@@ maopao@@ (intc[],int@@ l) { inti,j,t; for(j=1;j<@@ l@@ ;j++) for(i=0;i<l@@ -j;i++) if(c@@ [i]>@@ c@@ [i+1]) { t=@@ c@@ [i+1]; c@@ [i+1]=@@ c[i]; c[i]=@@ t; } printf("%d",c@@ [0]); for(i=1;i<@@ l@@ ;i++) printf("%d",c[i]); }  
c -1
h -1
structpatient { charid[10]; intage; structpatient*next; }; intn; structpatient*@@ creat@@ (intx) { structpatient*@@ head; structpatient*@@ p1,*p2; n=0; p1=p2=(struct@@ patient@@ *)malloc(LEN); scanf("%s@@ %d\n",@@ p1->id,&p1->age); head=NULL; while(n@@ !=@@ x) { n=n+1; if(n@@ ==1)head=p1; elsep2->next=p1; p2=p1; p1=(struct@@ patient@@ *)malloc(LEN); scanf("%s@@ %d\n",@@ p1->id,&p1->age); } p2->next=NULL; return(head); } voidmain() { intm,i,j,@@ v@@ ,@@ t@@ ,*@@ b; structpatient@@ *head,*@@ p1; b=@@ (int*)malloc(@@ 100*sizeof(int)); scanf("%d\n",&@@ m); head=creat@@ (m); p1=head; for(i=0;i<m@@ ;i++){@@ *(@@ b@@ +i)@@ =p1->@@ age@@ ;@@ p1=p1->next@@ ;} for(j=0;j<m-1;j++) for(i=0;i<m@@ -1-j;i++) if(*(@@ b@@ +i)@@ <*@@ (@@ b@@ +i@@ +1@@ )) {@@ t@@ =*(@@ b@@ +i@@ );@@ *(@@ b@@ +i)@@ =*(@@ b@@ +i@@ +1@@ );@@ *(@@ b@@ +i@@ +1)@@ =@@ t;} for(i=0;i<m;i++)@@ if(*(@@ b@@ +i)@@ <60@@ ){@@ v@@ =i;@@ break;} p1=head; for(j=0;j<@@ v@@ ;j++) { p1=head; while(p1!=NULL) { if(p1->age@@ ==@@ *(@@ b@@ +j@@ )&&(@@ j@@ ==0||@@ *(@@ b@@ +j)@@ !=@@ *(@@ b@@ +j@@ -1)@@ ))@@ printf("%s\n",@@ p1->@@ id); p1=p1->next; } } p1=head; while(p1!=NULL) { if(p1->age@@ <60@@ )@@ printf("%s\n",@@ p1->@@ id); p1=p1->next; } }  
c -1
h -1
0

int@@ compare@@ (intx,inty) { if(x@@ <=@@ y) x=@@ y@@ +1; return@@ x; } main() { inti,n,@@ r,@@ a,@@ j; scanf("%d",&n); int*p=@@ (int*)malloc(n*sizeof(int)); for(i=0;i<n;i++) scanf("%d",&@@ p[i]); int*@@ q=@@ (int*)malloc(n*sizeof(int)); for(j=n-1;j>=0;j--) { q@@ [j]@@ =1; for(@@ r=@@ n-1;@@ r@@ !=@@ j@@ ;r@@ --) { if(p@@ [j]>=@@ p[@@ r@@ ]) q@@ [j]=@@ compare@@ (@@ q@@ [j],@@ q@@ [r@@ ]); } } int@@ max; max=@@ q@@ [0]; for(a@@ =1;@@ a@@ <n;@@ a++) { if(q@@ [a]@@ >max) max=@@ q@@ [a@@ ]; } printf("%d",max); return0; }  
c -1
h -1
intmain() { int@@ id,@@ chinese@@ ,@@ math@@ ,@@ total; intn,i,@@ a=0,b=0,@@ c=0,@@ x=0,@@ y=0,@@ z=0; scanf("%d",&n); for(i=1;i<=n;i++) { scanf("%d%d%d",&@@ id,&@@ chinese@@ ,&@@ math); total=@@ chinese+@@ math; if(@@ total>@@ a) { c=@@ b; z=@@ y; b=@@ a; y=@@ x; a=@@ total; x=@@ id; } elseif(@@ total@@ <=@@ a@@ &&@@ total>@@ b) { c=@@ b; z=@@ y; b=@@ total; y=@@ id; } elseif(@@ total@@ <=@@ b@@ &&@@ total>@@ c) { c=@@ total; z=@@ id; } } printf("%d%d\n",@@ x,@@ a); printf("%d%d\n",@@ y,@@ b); printf("%d%d\n",@@ z,@@ c); return0; }  
c -1
h -1
0

intmain() { inta[16@@ ]={0},@@ n,@@ i=1; for(;@@ a[i]@@ !=@@ -1;@@ ) { n=0; for(i=0;;i++) { cin>>a[i]; for(intj=0;j<i;j++) { if(a[j]@@ *2==@@ a[i]@@ ||@@ a[j]==@@ a[i]@@ *2@@ ){@@ n@@ ++;} } if(a[i]@@ ==0||@@ a[i]==@@ -1@@ ){@@ break;} } if(a[i]!=@@ -1@@ ){@@ cout<<n@@ <<endl;} } }  
c -1
h -1
voidmain() { intn,i,j,@@ a[100][100],@@ x=0,@@ y=0,@@ s,@@ place@@ ; scanf("%d",&n); for(i=0;i<n;i++) for(j=0;j<n;j++) scanf("%d",&a[i][j]); for(i=0;i<n;i++) { if(x@@ ==0) for(j=0;j<n;j++) {@@ if(a[i][j]@@ ==0)@@ x@@ ++;} elsebreak; } for(j=0;j<n;j++) { if(y@@ ==0) for(i=0;i<n;i++) {@@ if(a[i][j]==0) y@@ ++;} elsebreak; } s=(@@ y@@ -2)*(@@ x@@ -2); printf("%d",s); }  
c -1
h -1
0

intmain() { inti,n,@@ k,@@ j,@@ m=0; scanf("%d%d",&n,&k); inta[@@ 1000000@@ ],b[@@ 1000000@@ ]; for(i=0;i<n;i++) { scanf("%d",&a[i]); } for(i=0;i<n;i++) { b[i]=@@ k-@@ a[i]; } for(i=0;i<n;i++) { for(j=0;j<n;j++) { if(b[i]==@@ a[j]) { m=m+1; } if(b[i]@@ !=@@ a[j]) { m=@@ m; } } } if(m@@ !=0) { printf("yes\n"); } if(m==0) { printf("no\n"); } }  
c -1
h -1
intmain(){ intn,i,j,@@ t; struct@@ ill@@ { charnum[10]; intage@@ ,@@ id; }@@ man@@ [N@@ ],@@ ex@@ ; scanf("%d",&n); for(i=0;i<n;i++) { scanf("%s%d",@@ man@@ [i].num,&@@ man@@ [i].age); man@@ [i].@@ id@@ =i; } for(i=0;i<n;i++) { for(j=i+1;j<n;j++) { if(@@ man@@ [i].age@@ <@@ man@@ [j].age@@ ) { ex@@ =@@ man@@ [i]; man@@ [i]=@@ man@@ [j]; man@@ [j]=@@ ex@@ ; } } } for(i=0;i<n;i++) { if(@@ man@@ [i].age<60) { t=i; break; } } for(i=0;i<t;i++) { for(j=i+1;j<@@ t;j++) { if(@@ man@@ [i].age@@ ==@@ man@@ [j].age@@ &&@@ man@@ [i].@@ id@@ >@@ man@@ [j].@@ id@@ ) { ex@@ =@@ man@@ [i]; man@@ [i]=@@ man@@ [j]; man@@ [j]=@@ ex@@ ; } } } for(i=@@ t@@ ;i<n;i++) { for(j=i+1;j<n;j++) { if(@@ man@@ [i].@@ id@@ >@@ man@@ [j].@@ id@@ ) { ex@@ =@@ man@@ [i]; man@@ [i]=@@ man@@ [j]; man@@ [j]=@@ ex@@ ; } } } for(i=0;i<n;i++) { printf("%s\n",@@ man@@ [i].num); } for(i=0;i<n@@ ;i++@@ ); return0; }  
c -1
h -1
0

main() { inta,b,c,@@ n; scanf("%d%d%d",&a,&b,&c); switch(@@ b) { case1:@@ n=@@ c@@ ;break; case2:@@ n=31+@@ c@@ ;break; case3:@@ n=31+28@@ +c@@ ;break; case4:@@ n=31+28@@ +31+@@ c@@ ;break; case5:@@ n=31+28@@ +31+30@@ +c@@ ;break; case6:@@ n=31+28@@ +31+30+31+@@ c@@ ;break; case7:@@ n=31+28@@ +31+30+31+30@@ +c@@ ;break; case8:@@ n=31+28@@ +31+30+31+30+31+@@ c@@ ;break; case9:@@ n=31+28@@ +31+30+31+30+31+31+@@ c@@ ;break; case10:@@ n=31+28@@ +31+30+31+30+31+31+30@@ +c@@ ;break; case11:@@ n=31+28@@ +31+30+31+30+31+31+30+31+@@ c@@ ;break; case12:@@ n=31+28@@ +31+30+31+30+31+31+30+31+30@@ +c@@ ;break; } if(((@@ a%@@ 100==0&&@@ a%@@ 400==0)||(@@ a%@@ 400==0)@@ )&&@@ b@@ >=@@ 3) n=n+1; printf("%d",n); getchar(); getchar(); }  
c -1
h -1
intmain() { inta[@@ 1001@@ ][@@ 1001]; intn,i,j,k,@@ s=0; scanf("%d",&n); for(i=1;i<=n;i++) { for(j=1;j<=n;j++) { scanf("%d",&a[i][j]); } } for(i=1;i<=n;i++) { for(j=1;j<=@@ n-2@@ ;j++) { if(a[i][j]==0) { for(k=j+1@@ ;k<=@@ n;k++) { if(a[i]@@ [k]@@ ==0) { s=s+@@ (k@@ -j@@ -1); break; } } } } } printf("%d",s); return0; }  
c -1
h -1
0

intmain(){ int@@ s=0,@@ i,@@ x,y,@@ e=0; double@@ r; chara[500],b[500]; scanf("%lf",&@@ r); scanf("%s%s",a,b); x@@ =strlen(a); y@@ =strlen(b); if(x@@ !=@@ y@@ ){@@ printf("error");} else{ for(i=0;i<x;i++){ if(a[i]!='A'&&a[i]!='T'&&a[i]!='C'&&a[i]!='@@ G')@@ {@@ e=@@ e@@ +1;} else{@@ if(a[i]==b[i]@@ ){@@ s=s@@ +1;@@ }} } if(e@@ !=0@@ ){@@ printf("error");} else{ if(1.0*@@ s/@@ x@@ >@@ r@@ ){printf("yes");} else@@ printf("no@@ ");@@ }} return0; }  
c -1
h -1
intmain() {int@@ just@@ (int@@ y); inty,m,d,@@ t=0; cin>>y>>m>>d; inta[@@ 12]={31,28,31,30,31,30,31,31,30,31,30,31}; intb[@@ 12]={31,29,31,30,31,30,31,31,30,31,30,31}; if(@@ just@@ (@@ y)@@ ==1) {@@ if(m==1) t=0; else for(inti=0;i<=@@ m@@ -2;i++) t+=@@ b[i]; } else {@@ if(m==1) t=0; else for(inti=0;i<=@@ m@@ -2;i++) t+=@@ a[i]; } cout<<t@@ +d; return0; } int@@ just@@ (int@@ y) {int@@ m=0; if(y%@@ 4==0&&@@ y%@@ 100!=0) {@@ return1; } if(y%@@ 400==0) {@@ return@@ 1@@ ;} return0;}  
c -1
h -1
0

struct@@ jisuan@@ { intnum; charname[26]; }@@ book[1000]; intmain() { inti,j,@@ m,n,@@ k,@@ e; intcount@@ [26]={0},@@ author@@ [26]; scanf("%d",&m); for(i=0;i<26;i++) author@@ [i]=@@ 65@@ +@@ i; for(i=0;i<m;i++){ scanf("%d",&@@ book[i].@@ num); gets(@@ book[i].name); } for(i@@ ='A'@@ ;i<=@@ 'Z'@@ ;i++){ for(j=0;j<m;j++){ n=strlen(@@ book[j].@@ name); for(k=0;k<n;k++){ if(i==@@ book[j].@@ name@@ [k]) count@@ [i-@@ 65@@ ]++; } } } for(i=0;i<@@ 25@@ ;i++){ if(count@@ [i]>@@ count@@ [i+1@@ ]){ e=@@ count@@ [i]; count@@ [i]=@@ count@@ [i+1]; count@@ [i+1]=@@ e; e=@@ author@@ [i]; author@@ [i]=@@ author@@ [i+1]; author@@ [i+1]=@@ e; } } printf("%c\n%d\n",@@ author@@ [25],@@ count@@ [25@@ ]); for(i=0;i<m;i++){ n=strlen(@@ book[i].name); for(k=0;k<n;k++){ if(book[i].@@ name@@ [k]==@@ author@@ [25@@ ]) printf("%d\n",book[i].@@ num); } } return0; }  
c -1
h -1
intmain() { intn,i,j,@@ t=0; inta[20000]; scanf("%d",&n); scanf("%d",&@@ a[1]); printf("%d",@@ a[1]); for(i=2;i<=n;i++) { scanf("%d",&a[i]); for(j=1;j<i;j++) { t=0; if(a[i]==a[j]@@ ){ t=1; break; } } if(t==0) printf("%d",a[i]); } return0; }  
c -1
h -1
0

intmain() { intdays@@ [@@ ]={0,31,@@ 28,31,30,31,30,31,31,30,31,30,31}; inty,m,d,@@ i,@@ c; cin>>y>>m>>d; if((y%@@ 4==0)&&(@@ y%100!=0@@ )||(y%@@ 400==0)) { days@@ [2@@ ]++; } c=@@ d; for(i=1;i<m;i++) { c@@ +=@@ days@@ [i]; } cout<<@@ c@@ <<endl; return0; }  
c -1
h -1
intmain() { int@@ e,@@ f@@ =0,@@ g@@ [1000]; intn; scanf("%d",&n); inti=0; while(i<@@ n){ int@@ k@@ =0;@@ while(k@@ <@@ n){ scanf("%d",&@@ e); if(e@@ ==0){ f@@ ++; } k++; } g@@ [i]=@@ f; f=0; i++; } intm=0,@@ x,y; int@@ j@@ =0;@@ while(j<@@ n){ if(g@@ [j]>@@ m){ m=@@ g@@ [j]; } if(g@@ [j]@@ ==0&&@@ g@@ [j+1]@@ !=0){ x@@ =j; } if(g@@ [j]@@ !=0&&@@ g@@ [j+1]@@ ==0){ y@@ =j; } j++; } int@@ d,@@ sum; d=@@ y@@ -@@ x; sum=(@@ m@@ -2)*(@@ d@@ -2); printf("%d\n",sum); return0; }  
c -1
h -1
0

int@@ count; voidf@@ (intx,inty) { inti=0; if(x@@ >=@@ y) for(i=y@@ ;i<=@@ x;i++) { if(i==@@ x)@@ count++; if(x@@ %i==0)@@ f(@@ x@@ /i,i); } } main() { intt; intn,i,@@ x@@ ,j; scanf("%d",&n); for(i=0;i<n;i++) { count=0; scanf("%d",&x); f(@@ x,@@ 2); printf("%d\n",@@ count); } }  
c -1
h -1
voidmain() { chara[@@ 300@@ ],b[100],@@ e@@ [100],@@ c@@ [100]={0},@@ g@@ [100]={0},@@ s[@@ 300@@ ]={0}; intj,@@ i,k,@@ f,@@ l,@@ d,@@ h@@ =1; gets(a); gets(b); gets(@@ e); k@@ =strlen(a); d@@ =strlen(b); for(i=0;i<@@ k@@ &&@@ h@@ <@@ 2@@ ;i++) { if(a[i]==@@ b[0]) { j=i; strncpy@@ (@@ g,@@ a,@@ j); for(@@ f@@ =0;@@ f@@ <@@ d@@ ;@@ f@@ ++@@ ,j@@ ++) { c[@@ f@@ ]=@@ a[j]; } j=i; for(@@ f@@ =0,@@ l@@ =j@@ +d@@ ;@@ f@@ <k@@ -j@@ -@@ d@@ ;@@ f@@ ++,@@ l++) { s[@@ f@@ ]=a[@@ l@@ ]; } s@@ [k@@ -@@ d@@ -j@@ ]=0; if(@@ strcmp@@ (b,@@ c)@@ ==0) { h=@@ h@@ +1; printf("%s",@@ g@@ ); printf("%s",@@ e); printf("%s",s); } } } if(h@@ ==1) printf("%s",a); }  
c -1
h -1
0

voidmain() { inta,@@ k,i,j,@@ s=0,@@ m,@@ n@@ ,*@@ p@@ [100][100]; scanf("%d",&k); for(a=0;a@@ <k;@@ a++) { scanf("%d%d",&m,&n); for(i=0;i<m;i++) { for(j=0;j<n;j++) {@@ p@@ [i][j]=@@ (int*)malloc(@@ 1@@ *sizeof(int)); scanf("%d",@@ &*@@ p@@ [i][j]); if(j==@@ n-1)@@ scanf("\n@@ ");} } for(j=0;j<n;j++) s=s+@@ (*p@@ [0]@@ [j]@@ )+@@ (*p@@ [m@@ -1]@@ [j]); for(i=1;i<m-1;i++) s=s+@@ (*p@@ [i][0]@@ )+@@ (*p@@ [i]@@ [@@ n-1]); printf("%d\n",s@@ );@@ s=0; } }  
c -1
h -1
intmain() { char@@ str1@@ [@@ 258@@ ],@@ str2@@ [@@ 258@@ ],@@ str3@@ [@@ 258@@ ],@@ ch@@ [@@ 600]; intlen1,len2,@@ len3@@ ,@@ i=0,@@ j=0; intm,@@ n=0; cin>>@@ str1@@ ; cin>>@@ str2@@ ; cin>>@@ str3@@ ; len1=strlen(@@ str1); len2=strlen(@@ str2); len3@@ =strlen(@@ str3@@ ); for(i=0;i<len1;i++) { n=0; m=i; if(@@ str1@@ [m@@ ]==@@ str2@@ [j]) { n=1; for(j=0@@ ,@@ m@@ ;j<@@ len2@@ ;j++,@@ m@@ ++) { if(@@ str1@@ [m@@ ]!=@@ str2@@ [j]) { n=0; j=0; break; } } if(n==1) { m=i; for(i=0;i<len1@@ +@@ len3@@ -len2@@ ;i++) { if(i>=@@ m@@ &&i@@ <@@ m+@@ len3@@ ) ch@@ [i]=@@ str3@@ [i-@@ m]; else if(i<@@ m) ch@@ [i]=@@ str1@@ [i]; else ch@@ [i]=@@ str1@@ [@@ len2@@ +i@@ -@@ len3@@ ]; } break; } } } if(n==1) for(i=0;i<len1@@ +@@ len3@@ -len2@@ ;i++) cout<<@@ ch@@ [i]; else for(i=0;i<len1;i++) cout<<@@ str1@@ [i]; return0; }  
c -1
h -1
0

intmain() { intn,k,@@ t=0; cin>>n>>k; inta[n]; for(inti=0;i<@@ n;i++)@@ cin>>a[i]; for(int@@ ia@@ =0,@@ ib@@ =1;@@ ia@@ <@@ n-1;@@ ia@@ ++) { for(@@ ib@@ =@@ ia@@ +1;@@ ib@@ <n;@@ ib@@ ++) { if(a[@@ ia@@ ]+@@ a[@@ ib@@ ]==@@ k) { cout<<"yes"; t=1; break; } } if(t@@ ==1)break; } if(t@@ ==0)@@ cout<<"no"; return0; }  
c -1
h -1
intmain() { inti,j,k,@@ x=0,@@ n,@@ a[@@ 20000]; cin>>n; for(i=0;i<n;i++) { cin>>a[i]; } for(i=0;i<n;i++) { k=0; for(j=0;j<i;j++) { if(a[i]==a[j]) { k++; } } if(k==0) { x++; if(x==1) { cout<<a[i]; } else { cout<<""<<a[i]; } } } return0; }  
c -1
h -1
0

int@@ deal@@ (int@@ num,int@@ p) { inti,@@ sum=0; if(num@@ ==1) return1; for(i=@@ p@@ ;i<=@@ num@@ ;++i) if(num@@ %i==0) sum+=@@ deal@@ (@@ num@@ /i,i); returnsum; } intmain() { intn,@@ a; cin>>n; while(n--) { cin>>a; cout<<@@ deal@@ (a,@@ 2)<<endl; } return0; }  
c -1
h -1
intmain() { int@@ test@@ (int@@ n); inta[@@ 13]={0,31,28,31,30,31,30,31,31,30,31,30,31}; intb[@@ 13]={0,31,@@ 29,31,30,31,30,31,31,30,31,30,31}; inty,m,d,@@ s,@@ i; scanf("%d%d%d",&y,&m,&d); if(@@ test@@ (@@ y)@@ ==1) { s=@@ d; for(i=0;i<m;i++) s=s+@@ b[i]; } else { s=@@ d; for(i=0;i<m;i++) s=s+@@ a[i]; } printf("%d",s); getchar(); getchar(); } int@@ test@@ (intn) { if(n%@@ 400==0)@@ n=1; else if(n@@ %100!=0@@ &&n@@ %@@ 4==0) n=1; else@@ n=0; return(@@ n); }  
c -1
h -1
0

intmain() { doublen,@@ b; scanf("%lf",&n); inti,@@ m,@@ a,@@ o@@ ; a=0; char@@ ji@@ [1000],@@ yin@@ [1000]; scanf("%s",@@ ji@@ ); scanf("%s",@@ yin@@ ); m=strlen(@@ ji@@ ); o@@ =strlen(@@ yin@@ ); if(m!=@@ o@@ ) { printf("error"); return0; } for(i=0;i<m;i++) { if((@@ ji@@ [i]!='A'&&@@ ji@@ [i]!='C'&&@@ ji@@ [i]!='G'&&@@ ji@@ [i]!='T')@@ ||(@@ yin@@ [i]!='A'&&@@ yin@@ [i]!='C'&&@@ yin@@ [i]!='G'&&@@ yin@@ [i]!='T')@@ ) { printf("error"); return0; } } if(n@@ >=@@ 1) { printf("no"); return0; } for(i=0;i<m;i++) { if(@@ ji@@ [i]==@@ yin@@ [i]) { a++; } } b@@ =1.0*@@ a/@@ 1.0*@@ m; if(b@@ >=@@ n) { printf("yes"); } else { printf("no"); } return0; }  
c -1
h -1
intf@@ (intx) { if(x%@@ 4@@ !=0) return0; elseif((@@ x%@@ 100@@ ==0)&&(@@ x%@@ 400!=0)) return0; else return1; } main() { inty,m,@@ d; int@@ j=1; intn=0; scanf("%d%d%d",&y,&m,&d); inta[@@ 13@@ ]; a[1@@ ]=31; if(@@ f(@@ y)@@ ==0) a[2]=@@ 28; else a[2]=@@ 29; a[@@ 3@@ ]=31; a[@@ 4@@ ]=30; a[@@ 5@@ ]=31; a[@@ 6@@ ]=30; a[@@ 7@@ ]=31; a[@@ 8@@ ]=31; a[@@ 9@@ ]=30; a[@@ 10@@ ]=31; a[@@ 11@@ ]=30; a[@@ 12@@ ]=31; for(j=1;j<@@ m;j++) n=n+@@ a[j]; n=n+@@ d; printf("%d\n",n); }  
c -1
h -1
0

int@@ factor@@ (intn,int@@ min@@ ){ int@@ result@@ =1,i; if(n@@ <@@ min@@ ){ return0;} for(i=min@@ ;i<@@ n;i++){ if(n@@ %i==0){ result=result+@@ factor@@ (n/i,i); } } returnresult; } intmain(){ intn,a[@@ 100000@@ ],b[@@ 100000]; scanf("%d",&n); for(intj=0;j<=@@ n-1@@ ;j++){ scanf("%d",&a[j]); b[j]=@@ factor@@ (@@ a[j]@@ ,@@ 2); printf("%d\n",@@ b[j]); } return0;}  
c -1
h -1
intmain() { chara[256],b[256],c[256]; inti; char*@@ p; cin>>a>>@@ b@@ >>@@ c; p=@@ strstr@@ (a,b); if(p@@ !=NULL) { for(i=0;i<p@@ -@@ a;i++) cout<<a[i]; cout<<@@ c; for(@@ p=p+@@ strlen(b@@ );@@ p@@ <@@ a+@@ strlen(@@ a);@@ p++) cout<<@@ *p; } else cout<<@@ a; cout<<endl; return0; }  
c -1
h -1
0

int@@ n1,n2,@@ num1@@ [@@ 10001@@ ],@@ num2@@ [@@ 10001@@ ]; void@@ init@@ () { inti; cin>>@@ n1@@ >>@@ n2; for(i=0;i<n1@@ ;i++)@@ cin>>@@ num1@@ [i]; for(i=0;i<n2@@ ;i++)@@ cin>>@@ num2@@ [i]; } voidsort@@ () { inti,j,t; for(i=0;i<n1@@ -1;i++) for(j=0;j<@@ n1@@ -i-1;j++) if(@@ num1@@ [j]>@@ num1@@ [j+1]) { t=@@ num1@@ [j];@@ num1@@ [j]=@@ num1@@ [j+1];@@ num1@@ [j+1]=t; } for(i=0;i<n2@@ -1;i++) for(j=0;j<@@ n2@@ -i-1;j++) if(@@ num2@@ [j]>@@ num2@@ [j+1]) { t=@@ num2@@ [j];@@ num2@@ [j]=@@ num2@@ [j+1];@@ num2@@ [j+1]=t; } } void@@ merge@@ () { inti,j; for(i=@@ n1@@ ,j@@ =0;j<@@ n2@@ ;i++,j@@ ++)@@ num1@@ [i]=@@ num2@@ [j]; n1@@ +=@@ n2; } void@@ show@@ () { inti; cout<<@@ num1@@ [0]; for(i=1;i<@@ n1@@ ;i++)@@ cout<<'@@ '@@ <<@@ num1@@ [i]; cout<<endl; } intmain() { init@@ (); sort@@ (); merge@@ (); show@@ (); return0; }  
c -1
h -1
intmain(intargc,char*argv[]) { intx,y,@@ z,@@ s; scanf("%d%d%d",&@@ x,&@@ y,&@@ z); inta; if(x%@@ 4==0) if(x%@@ 100==0) if(x%@@ 400==0) a=@@ 29; else a=@@ 28; else a=@@ 29; else a=@@ 28; if(y@@ ==1||@@ y@@ ==@@ 2) { s=(@@ y@@ -1)*@@ 31+@@ z; } elseif(@@ y@@ ==@@ 3@@ ||@@ y@@ ==@@ 7@@ ||@@ y@@ ==@@ 5) { s=(@@ y@@ -1)@@ /@@ 2*@@ 31+@@ (y@@ -@@ 3)@@ /@@ 2*@@ 30@@ +a+@@ z; } elseif(@@ y@@ ==@@ 4@@ ||@@ y@@ ==@@ 6) { s=@@ y@@ /@@ 2*@@ 31+@@ (y@@ -@@ 4)@@ /@@ 2*@@ 30@@ +a+@@ z; } elseif(@@ y@@ ==@@ 9@@ ||@@ y@@ ==@@ 11) { s=(@@ y@@ +1)@@ /@@ 2*@@ 31+@@ (y@@ -@@ 5@@ )@@ /@@ 2*@@ 30@@ +a+@@ z; } elseif(@@ y@@ ==@@ 8@@ ||@@ y@@ ==@@ 10@@ ||@@ y@@ ==@@ 12) { s=@@ y@@ /@@ 2*@@ 31+@@ (y@@ -@@ 4)@@ /@@ 2*@@ 30@@ +a+@@ z; } printf("%d\n",s); return0; }  
c -1
h -1
0

intmain(intargc,char*argv[]) { intN@@ ; inta[@@ 26]={0}; structbook{ intx; char@@ y@@ [27]; }@@ A@@ [1000]; scanf("%d",&N); inti,j; for(i=0;i<N;i++) { scanf("%d%s",&@@ A@@ [i].@@ x,@@ A@@ [i].@@ y); for(j=0;@@ A@@ [i].y@@ [j]!='\0';j++) { if(A@@ [i].y@@ [j]=='@@ A'@@ ) { a[0]@@ ++; } elseif(A@@ [i].y@@ [j]=='@@ B@@ ') { a[1@@ ]++; } elseif(A@@ [i].y@@ [j]=='@@ C') { a[2@@ ]++; } elseif(A@@ [i].y@@ [j]=='@@ D@@ ') { a[@@ 3@@ ]++; } elseif(A@@ [i].y@@ [j]=='@@ E@@ ') { a[@@ 4@@ ]++; } elseif(A@@ [i].y@@ [j]=='@@ F@@ ') { a[@@ 5@@ ]++; } elseif(A@@ [i].y@@ [j]=='@@ G') { a[@@ 6@@ ]++; } elseif(A@@ [i].y@@ [j]=='@@ H@@ ') { a[@@ 7@@ ]++; } elseif(A@@ [i].y@@ [j]=='@@ I@@ ') { a[@@ 8@@ ]++; }elseif(@@ A@@ [i].y@@ [j]=='@@ J@@ ') { a[@@ 9@@ ]++; } elseif(A@@ [i].y@@ [j]=='@@ K@@ ') { a[@@ 10@@ ]++; } elseif(A@@ [i].y@@ [j]=='@@ L@@ ') { a[@@ 11@@ ]++; } elseif(A@@ [i].y@@ [j]=='@@ M@@ ') { a[@@ 12@@ ]++; } elseif(A@@ [i].y@@ [j]=='@@ N@@ ') { a[@@ 13@@ ]++; } elseif(A@@ [i].y@@ [j]=='@@ O@@ ') { a[@@ 14@@ ]++; } elseif(A@@ [i].y@@ [j]=='@@ P@@ ') { a[@@ 15@@ ]++; } elseif(A@@ [i].y@@ [j]=='@@ Q@@ ') { a[@@ 16@@ ]++; } elseif(A@@ [i].y@@ [j]=='@@ R@@ ') { a[@@ 17@@ ]++; } elseif(A@@ [i].y@@ [j]=='@@ S@@ ') { a[@@ 18@@ ]++; } elseif(A@@ [i].y@@ [j]=='@@ T@@ ') { a[@@ 19@@ ]++; } elseif(A@@ [i].y@@ [j]=='@@ U@@ ') { a[@@ 20@@ ]++; } elseif(A@@ [i].y@@ [j]=='@@ V@@ ') { a[@@ 21@@ ]++; } elseif(A@@ [i].y@@ [j]=='@@ W@@ ') { a[@@ 22@@ ]++; } elseif(A@@ [i].y@@ [j]=='@@ X@@ ') { a[@@ 23@@ ]++; } elseif(A@@ [i].y@@ [j]=='@@ Y@@ ') { a[@@ 24@@ ]++; } elseif(A@@ [i].y@@ [j]=='@@ Z@@ ') { a[@@ 25@@ ]++; } } } intp; int@@ max; p=0; max=@@ a[0]; for(i=0;i<26;i++) { if(a[i]>max) { p=i; max=a[i]; } } char@@ d; d@@ =(@@ 'A'+@@ p); printf("%c\n%d\n",@@ d,@@ max); for(i=0;i<N;i++) { for(j=0;@@ A@@ [i].y@@ [j]!='\0';j++) { if(A@@ [i].y@@ [j]==@@ (p@@ +'@@ A')@@ ) printf("%d\n",@@ A@@ [i].@@ x); } } return0; }  
c -1
h -1
voidf@@ (inta[],intn) { inti,j,k; for(i=0;i<n;i++) for(j=i+1;j<n;j++) if(a[j]@@ <@@ a[i]) { k=@@ a[i];a[i]=@@ a[j];a[j]=@@ k; } } void@@ cmp@@ (inta[@@ ],intn,@@ intb[@@ ],int@@ m) {int@@ i=@@ n,@@ j; for(j=0;j<m;j++) {@@ a[i]=@@ b[j]@@ ;i++@@ ;} } intmain() {@@ intn,m,@@ i,@@ a[@@ 1000],b[@@ 500]; scanf("%d%d",&n,&m); for(i=0;i<n;i++) { scanf("%d",&a[i]); } for(i=0;i<m;i++) { scanf("%d",&b[i]); } f(a,@@ n); f(@@ b,@@ m); cmp@@ (a,n,@@ b,@@ m); for(i=0;i<n@@ +m@@ -1;i++) printf("%d",a[i]); printf("%d",a[@@ n+@@ m-1@@ ]); }  
c -1
h -1
0

int@@ breakways@@ (int@@ num,int@@ min); intmain() { intn; cin>>n; intnumber; for(inti=1;i<=n;i++) { cin>>@@ number; cout<<@@ breakways@@ (@@ number,@@ 2)<<endl; } } int@@ breakways@@ (int@@ num,int@@ min) { intsum=0; for(intj=@@ min@@ ;j<=@@ num@@ ;j++) { if(num@@ %j==0) { if(num@@ !=@@ j) sum+=@@ breakways@@ (@@ num@@ /j,j); else sum+=@@ 1; } } returnsum; }  
c -1
h -1
intl,@@ n; inta[@@ 30]; void@@ measure@@ (int@@ k,@@ ints@@ ,int@@ m) { inti; if(k==@@ n@@ ){@@ if(s@@ >@@ l@@ )@@ l=@@ s@@ ;} else{ for(i=k@@ +1;i<=@@ n;i++) if(a@@ [i-1]@@ <=@@ m) measure@@ (i,@@ s@@ +1,@@ a[i@@ -1]); measure@@ (n,@@ s,@@ m); } } voidmain() { inti; scanf("%d",&n); for(i=0;i<n;i++) scanf("%d",&a[i]); measure@@ (@@ 0,0,@@ 10000@@ ); printf("%d\n",@@ l); }  
c -1
h -1
0

inta[16@@ ]={0},@@ k; void@@ scan@@ (); voidmain() { scanf("%d",&a[0]); while(@@ a[0]@@ >0) { scan@@ (); scanf("%d",&a[0]); } } void@@ scan@@ () { int@@ i,j@@ =1,@@ n=0,@@ h,@@ t; while(@@ scanf("%d",&@@ a[j])@@ &&@@ a[j]@@ !=0) { j++; } for(i=0;i<j;i++) { for(h@@ =i;@@ h@@ <j@@ ;@@ h++) { if(a[i]>@@ a[h@@ ]) { t=a[i]; a[i]=@@ a[h@@ ]; a[h@@ ]=t; } } } for(i=0;i<j@@ -1;i++) { for(h@@ =i+1@@ ;@@ h@@ <j@@ ;@@ h++) { if(a[@@ h@@ ]==2*@@ a[i]) { n++; break; } } } printf("%d\n",n); }  
c -1
h -1
intmain(){ intn,@@ l; cin>>n; intm[@@ n]; for(inti=0;i<n;i++) cin>>@@ m[i]; int@@ cishu@@ [@@ 101@@ ]={0}; for(inti=0;i<n;i++) { cishu@@ [m@@ [i]@@ ]++; if(@@ cishu@@ [m@@ [i]@@ ]>=@@ 2) m@@ [i]=0; } for(inti=0;i<n;i++) { if(i==0) cout<<@@ m[i]; else if(m@@ [i]!=0) cout<<""<<@@ m[i]; } return0; }  
c -1
h -1
0

intmain() { void@@ qz@@ (ints[],int@@ m); void@@ px@@ (ints[],int@@ m); void@@ hb@@ (ints[],int@@ t@@ [],int@@ m,int@@ n); void@@ xs@@ (ints[],int@@ m); intn,m; inta[@@ 200@@ ],b[@@ 200]; scanf("%d%d",&m,&n); qz@@ (a,m); qz@@ (b,n); px@@ (a,m); px@@ (b,n); hb@@ (a,b,m,n); xs@@ (a,@@ m+@@ n); return0; } void@@ qz@@ (ints[],int@@ m) { inti; for(i=0;i<m;i++) { scanf("%d",&s[i]); } } void@@ px@@ (ints[],int@@ m) { inti,j,t; for(i=0;i<=@@ m-1;i++) { for(j=i+1;j<=@@ m-1;j++) { if(s@@ [j]<@@ s@@ [i]) { t=@@ s[i]; s[i]=@@ s[j]; s[j]=@@ t; } } } } void@@ hb@@ (ints[],int@@ t@@ [],int@@ m,intn) { inti; for(i=m@@ ;i<=@@ m+@@ n-1;i++) { s[i]=@@ t@@ [i-@@ m]; } } void@@ xs@@ (ints[],int@@ m) { inti; printf("%d",@@ s@@ [0]); for(i=1;i<m;i++) { printf("%d",@@ s[i]); } }  
c -1
h -1
intmain() { intn,i,j,a[@@ 20001@@ ],@@ flag@@ [@@ 20001@@ ]={0},@@ k=0; scanf("%d",&n); for(i=0;i<n;i++) scanf("%d",&a[i]); for(i=0;i<n;i++) { for(j=i+1;j<n;j++) { if(a[j]==a[i]) flag@@ [j]@@ =1; } if(flag@@ [i]@@ ==0&&@@ k@@ ==0) { printf("%d",a[i]); k++; } elseif(@@ flag@@ [i]==0) printf("%d",a[i]); } }  
c -1
h -1
0

voidmain() { intn,m,@@ i,j,k,@@ t,@@ max=0; inta[@@ 1000],b[@@ 26]={0}; chars[@@ 1000][@@ 30]; charc; scanf("%d",&n); for(i=0;i<n;i++) scanf("%d%s",&a[i],@@ s[i]); for(i=0;i<n;i++) { m=strlen(@@ s[i]); for(j=0;j<m;j++) { t=@@ s@@ [i][j]@@ -65@@ ; b[t@@ ]++; } } for(i=0;i<26;i++) if(b[i]@@ >=@@ max@@ )max=@@ b[i]; for(i=0;i<26;i++) { if(b[i]==@@ max) { k=i; c@@ =i+65; printf("%c\n",@@ c); printf("%d\n",max); } } for(i=0;i<n;i++) { m=strlen(@@ s[i]); for(j=0;j<m;j++) if(s@@ [i][j]==@@ 65@@ +k)@@ printf("%d\n",a[i]); } }  
c -1
h -1
voidmain() { structstu {intnum; intchi; int@@ mat@@ ; }stu[100000]; intn,i,@@ max1,@@ max2@@ ,max3@@ ,@@ maxn1@@ ,@@ maxn2@@ ,@@ maxn3@@ ; int@@ sum[@@ 100000]; scanf("%d",&n); for(i=0;i<n;i++) {scanf("%d",&@@ stu[i].@@ num); scanf("%d",&@@ stu[i].@@ chi@@ ); scanf("%d",&@@ stu[i].@@ mat@@ ); sum[i]=@@ stu[i].@@ chi@@ +stu[i].@@ mat@@ ; } max1=@@ sum[@@ 0]; maxn1@@ =stu@@ [0].@@ num; for(i=1;i<n;i++) { if(sum[i]>@@ max1@@ ) { max1=@@ sum[i]; maxn1@@ =stu[i].@@ num; } } printf("%d%d\n",@@ maxn1@@ ,@@ max1@@ ); max2=@@ sum[@@ 0]; maxn2@@ =stu@@ [0].@@ num; for(i=1;i<n;i++) { if(sum[i]>@@ max2@@ &&i!=@@ maxn1@@ -1) { max2=@@ sum[i]; maxn2@@ =stu[i].@@ num; } } printf("%d%d\n",@@ maxn2@@ ,@@ max2@@ ); max3=@@ sum[@@ 0]; maxn3@@ =stu@@ [0].@@ num; for(i=1;i<n;i++) { if(sum[i]>@@ max3@@ &&i!=@@ maxn1@@ -1@@ &&i!=@@ maxn2@@ -1) { max3=@@ sum[i]; maxn3@@ =stu[i].@@ num; } } printf("%d%d\n",@@ maxn3@@ ,max3@@ ); }  
c -1
h -1
0

struct@@ pat { charnum[@@ 11]; intage; structpat@@ *next; }; voidmain() { intn,i; scanf("%d",&n); structpat@@ *head,*@@ p1,*p2,*@@ pre@@ ; p1=(struct@@ pat@@ *)malloc(sizeof(struct@@ pat@@ )); scanf("%s%d",@@ p1->num,&p1->@@ age); head=p1; p1->next=NULL; for(i=1;i<n;i++) { p1=(struct@@ pat@@ *)malloc(sizeof(struct@@ pat@@ )); scanf("%s%d",@@ p1->num,&p1->@@ age); if(p1->age@@ <60) { p2=head; while(@@ p2@@ ) { if(@@ p2->next@@ ==NULL) { p2->next@@ =p1;@@ p1->next@@ =NULL@@ ;break; } p2=p2->next; } } elseif(@@ p1->age@@ >=60) {@@ p2=head; while(@@ p2@@ ) { if(@@ p2@@ ==@@ head@@ &&@@ p1->age@@ >@@ p2->age@@ ) { head@@ =p1;@@ p1->next@@ =p2@@ ;break; } elseif(@@ p1->age@@ >@@ p2->age@@ ) { pre@@ ->next@@ =p1;@@ p1->next@@ =p2@@ ;break; } elseif(@@ p2->next@@ ==NULL) { p2->next@@ =p1;@@ p1->next@@ =NULL@@ ;break; } else{@@ pre@@ =p2@@ ;@@ p2=@@ p2->next@@ ;} } } } p1=head; while(p1@@ ) { printf("%s\n",@@ p1->num); p1=p1->next; } }  
c -1
h -1
intmain() { int@@ d[@@ 12@@ ]={0}; inta,b,c,@@ i,@@ sum=0; int@@ run@@ (int@@ x); scanf("%d%d%d",&a,&b,&c); for(i=1;i<@@ b;i++) { if((i@@ ==1)@@ ||(@@ i==@@ 3@@ )||(@@ i==@@ 5@@ )||(@@ i==@@ 7@@ )||(@@ i==@@ 8@@ )||(@@ i==@@ 10@@ )) { d[i]=@@ 31; sum+=@@ d[i]; } elseif((@@ i==@@ 4@@ )||(@@ i==@@ 6@@ )||(@@ i==@@ 9@@ )||(@@ i==@@ 11@@ )) { d[i]=@@ 30; sum+=@@ d[i]; } else { if(@@ run@@ (@@ a)@@ ==1)@@ d[i]=@@ 29; else@@ d[i]=@@ 28; sum+=@@ d[i]; } } sum+=@@ c; printf("%d\n",sum); } int@@ run@@ (intx) { int@@ z; if((x@@ %@@ 400==0)||(@@ (x@@ %100!=0@@ )&&(@@ x%@@ 4@@ ==0)@@ )) z=1; return@@ z; }  
c -1
h -1
0

intmain(){ inti,n,@@ k; scanf("%d%d",&n,&k); intsz[1000]; for(i=0;i<n;i++){ scanf("%d",&sz[i]); } intj; for(i=0;i<n;i++){ for(j=0;j<n;j++){ if((@@ sz[i]@@ +sz@@ [j]@@ )==@@ k){ printf("yes"); break; } } if((@@ sz[i]@@ +sz@@ [j]@@ )==@@ k){ break;} } int@@ a=@@ i,@@ b=j; if((@@ a@@ ==@@ n@@ )&&(@@ b==@@ n@@ )&&(@@ sz[@@ n-1@@ ]+sz[@@ n-1@@ ]!=@@ k@@ )){ printf("no"); } return0; }  
c -1
h -1
voidinput@@ (intm,@@ intn,@@ inta[@@ 300@@ ],intb[@@ 300@@ ]) { inti=0,j=0; scanf("%d%d",&m,&n); for(i=0;i<m;i++) {@@ scanf("%d",&a[i]); } for(j=0;j<n;j++) { scanf("%d",&@@ b[j]); } } void@@ row@@ (inta[@@ 300@@ ]) { inti,j,t; for(i=0;i<@@ 300@@ ;i++) { for(j=i+1;j<@@ 300@@ ;j++) { if((a[j]@@ <@@ a[i]@@ )&&(@@ a[j]@@ !=0)) { t=a[j]; a[j]=@@ a[i]; a[i]=@@ t; } } } } void@@ com@@ (inta[@@ 300@@ ],intb[@@ 300@@ ]) { inti=0,j=0,@@ k; for(i=0;i<@@ 300@@ ;i++) { if(a[i]==0) {@@ k@@ =i;@@ break;} } for(j=0;j<@@ 300@@ ;j++) {@@ if(b[j]@@ !=0) a[k]=@@ b[j]@@ ;k@@ ++; } } voidoutput@@ (inta[@@ 300@@ ]) { inti; for(i=0;i<@@ 300@@ ;i++) { if(a[i]!=0) {@@ printf("%d",a[i]); break;} } i++; for(i@@ ;i<@@ 300@@ ;i++) { if(a[i]!=0) {printf("%d",@@ a[i]);} } } voidmain() { intx,y,@@ a[@@ 300@@ ]={0},b[@@ 300@@ ]={0}; input@@ (@@ x,y,@@ a,b); row@@ (a@@ );@@ row@@ (@@ b); com@@ (a,b); output@@ (a); }  
c -1
h -1
0

int@@ F@@ (intn,int@@ a) { if(n@@ ==1)@@ return1; if(a@@ ==1)@@ return0; if(n%@@ a@@ ==0)@@ return@@ F@@ (n@@ /@@ a,@@ a)@@ +@@ F@@ (n,@@ a@@ -1); return@@ F@@ (n,@@ a@@ -1); } main() { intn,a,@@ i; scanf("%d",&n); for(i=1;i<=n;i++) { scanf("%d",&a); printf("%d\n",@@ F@@ (a,@@ a@@ )); } }  
c -1
h -1
voidmain() { inta[100][100],@@ i,j,@@ m,n,@@ row,col; scanf("%d%d",&row,&col); for(i=0;i<=@@ row-1;i++) for(j=0;j<=@@ col@@ -1;j++) scanf("%d",&a[i][j]); m=@@ row+col-2@@ ; for(n=0;n@@ <=@@ m;@@ n++) for(i=0;i<=@@ row-1;i++) for(j=0;j<=@@ col@@ -1;j++) if(i+j@@ ==@@ n) printf("%d\n",a[i][j]); }  
c -1
h -1
0

int@@ turn@@ (inta,intb) { inti,@@ k; if(a@@ ==1)@@ k=1; elseif(a@@ <b@@ )@@ k=0; else { k=0; for(i=b@@ ;i<=a;i++) if(a%i==0) k=k@@ +@@ turn@@ (a/i,i); } return@@ k; } intmain() { intn,i,@@ a[1000],@@ t; scanf("%d",&n); for(i=0;i<n;i++) { scanf("%d",&a[i]); t=@@ turn@@ (a[i],@@ 2); printf("%d\n",t); } return0; }  
c -1
h -1
intmain() { int@@ h,@@ z,@@ i,@@ sz@@ [100][100],@@ k; scanf("%d%d",&@@ h@@ ,&@@ z); for(i=0;i<@@ h@@ ;i++) { for(k=0;k<@@ z@@ ;k++) { scanf("%d",&@@ sz[i]@@ [k]); } } for(i=0;i<=@@ h@@ +@@ z@@ -2;i++) { for(k=0;k<@@ h@@ ;k++) { if(i@@ -k@@ <0@@ ||@@ i@@ -k@@ >=@@ z) { continue; } else { printf("%d\n",sz@@ [k]@@ [i-@@ k@@ ]); } } } return0; }  
c -1
h -1
0

voidmain() { char@@ f(@@ charstr@@ [@@ ],@@ char@@ substr@@ [@@ ],@@ char@@ rep@@ [@@ ]); charstr[256],@@ substr@@ [256],@@ rep@@ [256]; scanf("%s%s%s",@@ str,@@ substr@@ ,@@ rep); f(@@ str,@@ substr@@ ,@@ rep); puts(@@ str); } char@@ f(@@ charstr[256],@@ char@@ substr@@ [256],@@ char@@ rep@@ [256@@ ]) { chars[@@ 256]; inti=0,@@ j,@@ k; for(i=0;@@ str@@ [i]!='\0';i++) { if(str[i]==@@ substr@@ [0]) { for(j=0;j<strlen(@@ substr@@ );j++) s[j]=@@ str@@ [j+i@@ ]; s[j]@@ ='\0'; if(strcmp(@@ substr@@ ,@@ s)@@ ==0) { for(k=0;k<@@ strlen(@@ rep@@ )@@ ;k++@@ ,i++) str[i]=@@ rep@@ [k]; return0; } } } return0; }  
c -1
h -1
intmain(){ intage@@ [N@@ ],@@ n,@@ i,@@ k; charid@@ [N@@ ][@@ LEN@@ ]; scanf("%d",&n); for(i=0;i<n;i++){ scanf("%s%d",@@ id@@ [i],@@ &@@ (@@ age@@ [i]@@ )); } int@@ e@@ ;@@ char@@ e_id@@ [@@ LEN@@ ]; for(k=1;k<=@@ n;k++){ for(i=0;i<n-@@ k;i++){ if((@@ age@@ [i]<@@ age@@ [i+1]@@ &&@@ age@@ [i]@@ >=60@@ )||(@@ age@@ [i]@@ <60&&@@ age@@ [i+1]@@ >=60@@ )){ e=@@ age@@ [i+1]; strcpy(@@ e_id@@ ,@@ id@@ [i+1]); age@@ [i+1]=@@ age[i]; strcpy(id@@ [i+1],@@ id[i]); age@@ [i]=@@ e; strcpy(id@@ [i],@@ e_id@@ ); } } } for(i=0;i<n;i++){ printf("%s\n",@@ id[i]); } return0; }  
c -1
h -1
0

inta[@@ 300],b[@@ 300],@@ m,n,@@ i,j,@@ t,@@ c[@@ 300]; voidf1@@ (){ cin>>m>>n; for(i=0;i<m;i++){ cin>>a[i]; } for(i=0;i<n;i++){ cin>>b[i]; } } voidf2@@ (){ for(i=0;i<m@@ -1;i++){ for(j=i+1;j<=@@ m-1@@ ;j++){ if(a[i]>@@ a[j]@@ ){ t=@@ a[i];a[i]=@@ a[j];a[j]=@@ t; } } } for(i=0;i<n-1;i++){ for(j=i+1;j<=@@ n-1@@ ;j++){ if(b[i]>@@ b[j]@@ ){ t=@@ b[i]@@ ;@@ b[i]=b[j]@@ ;@@ b[j]=@@ t; } } } } void@@ f3@@ (){ for(i=0;i<m;i++){ c[i]=a[i]; } for(i=m;i<@@ m+@@ n;i++){ c[i]=b[i-@@ m]; } } void@@ f4@@ (){ cout<<c[@@ 0]; for(i=1;i<@@ m+@@ n;i++){ cout<<''<<@@ c[i]; } } intmain(){ f1@@ (); f2@@ (); f3@@ (); f4@@ (); }  
c -1
h -1
intmain(intargc,char*argv[]) { inti,j,@@ k;@@ int@@ nowi@@ ;@@ int@@ output@@ ; int@@ part@@ [@@ 20@@ ][@@ 16@@ ];@@ static@@ int@@ jcount@@ [@@ 20],@@ group@@ [20]; for(i=0;i<@@ 20@@ ;i++) { for(j=0;j<@@ 16@@ ;j++) { cin>>@@ part@@ [i][j]; jcount@@ [i]++; if(@@ part@@ [i][j]@@ <=@@ 0@@ ) break; } if(@@ part@@ [i][j]@@ ==-1) break; } nowi@@ =i; for(i=0;i<@@ nowi@@ ;i++) { for(j=0;j<@@ jcount@@ [i]@@ -1;j++) { for(k=0;k<@@ jcount@@ [i]@@ -1;k++) { if((@@ part@@ [i][j]@@ /@@ part@@ [i]@@ [k]==@@ 2@@ )&&(@@ part@@ [i][j]@@ %@@ part@@ [i][k]@@ ==0)) group@@ [i]++; } } } for(@@ output@@ =0;@@ output@@ <@@ nowi@@ ;@@ output@@ ++) cout<<@@ group@@ [@@ output@@ ]<<endl; return@@ EXIT_SUCCESS@@ ; }  
c -1
h -1
0

intmain() { intn,m; scanf("%d%d",&n,&m); ints@@ [100][100]; inti,j; intk=0,@@ l=0; for(i=0;i<=n-1;i++) { for(j=0;j<=@@ m-1;j++) { scanf("%d",&s@@ [i][j]); } } for(i=0;i<=@@ m-1;i++) { k@@ =0;@@ l@@ =i; for(j=0;;j++) { printf("%d\n",s@@ [k@@ ][l@@ ]); if(l@@ ==0||@@ k==@@ n-1) { break; } k=k+1; l=l@@ -1; } } for(i=1;i<=n-1;i++) { k@@ =i;@@ l=@@ m-1@@ ; for(j=0;;j++) { printf("%d\n",s@@ [k@@ ][l@@ ]); if(k==@@ n-1@@ ||@@ l@@ ==0) { break; } k=k+1; l=l@@ -1; } } return0; }  
c -1
h -1
intmain() { static@@ inta[16@@ ],b[@@ 16]; intn,i,j,@@ s=0; while(@@ scanf("%d",&@@ a[0]@@ ),@@ a[0]@@ !=-1) { for(i=1;@@ a[i-1]@@ !=0;i++) {@@ b@@ [i-1@@ ]=@@ 2*@@ a[i@@ -1]; scanf("%d",&a[i]);} n@@ =i@@ -2@@ ; s=0; for(i=0;i<=@@ n;i++) for(j=0;j<=@@ n;j++) if(a[i]==@@ b[j]) { s@@ ++@@ ;break; } printf("%d\n",s); } }  
c -1
h -1
0

struct { intnum; char@@ au@@ [27]; }@@ book[999]; intmain() { intm,@@ a[@@ 26]={0},@@ i,j,@@ t,@@ max=0; scanf("%d",&m); for(i=0;i<m;i++) { scanf("%d%s",&book[i].num,@@ book[i].@@ au); int@@ au_n@@ =strlen(@@ book[i].@@ au); for(j=0;j<@@ au_n@@ ;j++) { if(book[i].@@ au@@ [j]<=@@ 90@@ &&@@ book[i].@@ au@@ [j]>=@@ 65@@ ) { int@@ k=@@ book[i].@@ au@@ [j]-65@@ ; a[k@@ ]++; if(a[k]@@ >max)max=@@ a[k]; } } } for(i=0;i<26;i++) { if(a[i]==@@ max) { char@@ r@@ =i+65; printf("%c\n%d\n",@@ r,@@ max); break; } } for(t=0;t@@ <m;@@ t++) { int@@ au_n@@ =strlen(@@ book@@ [t@@ ].@@ au); for(j=0;j<@@ au_n@@ ;j++) { if(@@ book@@ [t@@ ].@@ au@@ [j]==@@ i@@ +65@@ )@@ printf("%d\n",@@ book@@ [t@@ ].@@ num); } } return0; }  
c -1
h -1
intmain() { inti,j,@@ x,y,@@ m,@@ l=0,@@ t; charb[@@ N@@ ],@@ a[@@ N@@ ],c[@@ N]; scanf("%s",b); scanf("%s",a); scanf("%s",c); for(@@ y@@ =0;i<@@ N@@ ;y@@ ++) { if(a[@@ y@@ ]==@@ '\0') break; } for(i=0;i<N;i++) { m=0; for(j=i@@ ;j@@ -i@@ <@@ y;j++) { if(a@@ [j-i@@ ]==@@ b[j]) m++; } if(m@@ >=@@ y) break; } for(t@@ =i;@@ c[@@ t@@ -i@@ ]@@ !=0&&@@ t@@ <@@ 256@@ ;t++) { b[t@@ ]=@@ c[@@ t@@ -i@@ ]; if(@@ c[@@ t@@ -i@@ ]==@@ '\0') break; } puts(@@ b); return0; }  
c -1
h -1
0

voidmain() { intn,i,j,@@ max=0; scanf("%d",&n); intnum[@@ 1000]; intsum@@ [26]; for(i=0;i<26;i++){ sum@@ [i]=0; } chara[@@ 1000][@@ 27]; for(i=0;i<n;i++){ scanf("%d%s",&@@ num@@ [i],@@ a[i]); } for(i=0;i<n;i++){ for(j=0;@@ a[i][j]@@ !='\0';j++){ sum[@@ a[i][j]@@ -'A'@@ ]=sum[@@ a[i][j]@@ -'A'@@ ]+1; } } for(i=1;i<@@ 26@@ ;i++){ if(sum[i]>@@ sum[@@ max@@ ]){ max=i; } } printf("%c\n",@@ max@@ +'A'@@ ); printf("%d\n",@@ sum[@@ max@@ ]); for(i=0;i<n;i++){ for(j=0;@@ a[i][j]@@ !='\0';j++){ if(a[i][j]==@@ max@@ +'A'@@ ){ printf("%d\n",@@ num[i]); break; } } } }  
c -1
h -1
intmain(){ intn,k,@@ i,j; intsz[@@ 10000]; scanf("%d%d",&n,&k); for(i=0;i<n-1;i++){ scanf("%d",&sz[i]); } if(i@@ =@@ n-1){ scanf("%d",&sz[i]); }@@ int@@ r=0; for(i=0;i<n;i++){ for(j=i+1;j<n;j++){ if(sz[i]+sz@@ [j]==k){ r@@ =1; break; }else{ continue; } } } if(r@@ ==1){ printf("yes"); }elseif(@@ r@@ ==0){ printf("no"); } return0; }  
c -1
h -1
0

intmain(){ inti,n; double@@ x,@@ t=0; scanf("%lf",&x); chara[500],b[500]; scanf("%s%s",a,b); if(strlen(a)!=strlen(b@@ ))@@ printf("error"); else{ n@@ =strlen(a); for(i=0;a[i]@@ !=@@ '\0@@ '&&@@ b[i]@@ !='\0';i++){ if((@@ a[i]=='@@ A'||a[i]=='T'||a[i]=='@@ C'||@@ a[i]=='@@ G')&&(@@ b[i]=='@@ A'||@@ b[i]=='@@ T'||@@ b[i]=='@@ C'||@@ b[i]=='@@ G')){ if(a[i]==b[i]@@ )@@ t++; }else{ printf("error"); return0; } } if(t@@ /@@ n@@ >@@ x)@@ printf("yes"); elseprintf("no"); } return0; }  
c -1
h -1
intmain(){ inty,m,d,@@ i,@@ D@@ ; int@@ p[@@ 12]={31,28,31,30,31,30,31,31,30,31,30,31}; D@@ =0; scanf("%d%d%d",&y,&m,&d); if(((@@ y%@@ 4==0)&&(@@ y%100!=0@@ )@@ )||((@@ y%@@ 400@@ )@@ ==0)@@ ){ for(i=0;i<m@@ -1;i++){ D=@@ D@@ +@@ p[i]; } D=@@ D@@ +d@@ +1; printf("%d",D@@ ); } else{ for(i=0;i<m@@ -1;i++){ D=@@ D@@ +@@ p[i]; } D=@@ D@@ +d; printf("%d",D@@ ); } return0; }  
c -1
h -1
0

intmain(intargc@@ ,@@ const@@ char*@@ argv[]) { double@@ rate@@ ; char@@ gen1@@ [500],@@ gen2@@ [500]; cin>>@@ rate@@ >>@@ gen1@@ >>@@ gen2@@ ; int@@ len1=strlen(@@ gen1@@ ),@@ len2=strlen(@@ gen2@@ ),@@ S@@ =0; if(len1!=@@ len2){ cout<<"@@ error@@ "<<endl; return0; } for(inti=0;i<@@ len1@@ ;i++){ if((@@ gen2@@ [i]!='A'&&@@ gen2@@ [i]!='T'&&@@ gen2@@ [i]!='C'&&@@ gen2@@ [i]!='G')||(@@ gen1@@ [i]!='A'&&@@ gen1@@ [i]!='T'&&@@ gen1@@ [i]!='C'&&@@ gen1@@ [i]!='G')){ cout<<"@@ error@@ "<<endl; return0; } if(@@ gen1@@ [i]==@@ gen2@@ [i]){ S@@ ++; } } double@@ R@@ ; R@@ =(double)@@ S@@ /@@ len1; if(@@ R@@ >=@@ rate@@ ){ cout<<"yes@@ "<<endl; return0; } else { cout<<"no@@ "<<endl; return0; } return0; }  
c -1
h -1
intsz[@@ 1000][1000]; intmain() { intn; introw,col; inta,b,c,@@ d; int@@ x,y; intnum; int@@ e=0,@@ f=0; scanf("%d",&n); for(row=0;row<n;@@ row++) { for(col=0;col<n;col@@ ++) { scanf("%d",&@@ sz[row][col@@ ]); } } for(row=0;row<n;@@ row++) { for(col=0;col<n;col@@ ++) { if(@@ sz[row][col@@ ]==0) { a=@@ row; b=@@ col; e=1; break; } } if(e@@ ==1) { break; } } for(row@@ =@@ n-1;@@ row@@ >=0;@@ row@@ --) { for(col@@ =@@ n-1;@@ col@@ >=0;@@ col@@ --) { if(@@ sz[row][col@@ ]==0) { c=@@ row; d=@@ col; f=1; break; } } if(f@@ ==1) { break; } } x=@@ c-a@@ -1; y=@@ d-b@@ -1; num=@@ x@@ *@@ y; printf("%d\n",num); return0; }  
c -1
h -1
0

intmain(){ intn,k,i,j,@@ t=0; intsz[@@ 1000][1000]; scanf("%d%d",&n,&k); for(i=1;i<=n;i++){ scanf("%d",&sz@@ [0]@@ [i]); sz[i]@@ [0]=@@ sz[0]@@ [i]; } for(i=1;i<=n;i++){ for(j=1;j<=n;j++){ if(i==@@ j){ continue; }else{ sz@@ [i][j]=@@ sz[i]@@ [0]+@@ sz[0]@@ [j]; } } } for(i=1;i<=n;i++){ for(j=1;j<=n;j++){ if(sz@@ [i][j]==@@ k){ t=1; } } } if(t@@ ==1){ printf("yes"); }else{ printf("no"); } return0; }  
c -1
h -1
intmain() { inta[100][100]; intk,m,n,i,j,@@ l,@@ s; scanf("%d",&k); for(i=1;i<=k;i++) { scanf("%d%d",&m,&n); for(j=0;j<m;j++) for(l=0;l<n;l++) scanf("%d",&a[j]@@ [l]); if((@@ m@@ ==1@@ )&&(@@ n@@ ==1@@ )) printf("%d\n",@@ a[0][0]@@ ); elseif(m@@ ==1) { s=0; for(j=0;j<n@@ ;j++)@@ s=s+@@ a[0][j]; printf("%d\n",s); } elseif(n@@ ==1) { s=0; for(j=0;j<m@@ ;j++)@@ s=s+@@ a[j]@@ [0]; printf("%d\n",s); } else { s=0; for(j=0;j<n-1;j++) s=s+@@ a[0][j]; for(j=0;j<m-1;j++) s=s+@@ a[j]@@ [n-1]; for(j=n-1@@ ;j>0;j--) s=s+@@ a[m-1][j]; for(j=@@ m-1@@ ;j>0;j--) s=s+@@ a[j]@@ [0]; printf("%d\n",s); } } }  
c -1
h -1
0

voidmain() { inti,j,k,@@ n,m,@@ sum=0,@@ max,@@ min@@ ,@@ a[100@@ ][100@@ ]={0}; chars[@@ 81@@ ]={@@ ""@@ }; scanf("%d%d",&m,&n); for(i=0;i<m;i++) for(j=0;j<n;j++) scanf("%d",&a[i][j]); for(k=0;k<@@ m+@@ n-1;k++) for(i=0;i<m;i++) for(j=0;j<n;j++) if(i+j@@ ==@@ k)@@ printf("%d\n",a[i][j]); }  
c -1
h -1
intn; int@@ d@@ [100]; int@@ dp@@ [30]; intmain() { while(@@ scanf("%d",&@@ n)@@ ==1) { for(inti=1;i<=n;i++) scanf("%d",@@ d@@ +i); d[@@ 0]=@@ (@@ -@@ 1u@@ )@@ >>@@ 1; for(inti=1;i<=n;i++) { dp@@ [i]=0; for(intj=0;j<i;j++) if(d@@ [j]>=@@ d@@ [i]) dp@@ [i]=@@ max(@@ dp@@ [i],@@ dp@@ [j]@@ +1); } int@@ ans=0; for(inti=1;i<=n;i++) ans=@@ max(@@ ans@@ ,@@ dp@@ [i]); printf("%d\n",@@ ans); } return0; }  
c -1
h -1
0

intmain() { intn,@@ sz[@@ 1000],@@ k,@@ j,@@ i,@@ m; scanf("%d%d",&@@ n,@@ &@@ k); for(i=0;i<n;i++){ if(i@@ ==0){ scanf("%d",&sz[i]); }else{ scanf("%d",&sz[i]); } } for(i=0;i<n;i++){ for(j=i+1;j<n;j++){ if(sz[i]+sz@@ [j]==k){ printf("yes"); m=1; break; } }@@ if(m@@ ==1){ break; } }@@ if(m@@ !=1@@ ){ printf("no"); } return0; }  
c -1
h -1
inta[100],b[100]; intm,n; intmain() { void@@ getdata@@ (void@@ ); void@@ bubblesort@@ (inta[],intb[@@ ]); void@@ merge@@ (void@@ ); void@@ putdata@@ (void@@ ); getdata@@ (); bubblesort@@ (a,b); merge@@ (); putdata@@ (); return0; } void@@ getdata@@ (void) { inti; cin>>m>>n; for(i=0;i<m;i++) cin>>a[i]; for(i=0;i<n;i++) cin>>b[i]; } void@@ bubblesort@@ (inta[],intb[]) { inti,j; for(i=1;i<m;i++) for(j=0;j<m@@ -i;j++) if(a[j]>a[j+1]) { a[j]=@@ a[j]@@ ^@@ a[j+1@@ ]; a[j+1]=@@ a[j]@@ ^@@ a[j+1@@ ]; a[j]=@@ a[j]@@ ^@@ a[j+1@@ ]; } for(i=1;i<n;i++) for(j=0;j<n-i;j++) if(b[j]>b[j+1]) { b[j]=@@ b[j]@@ ^@@ b@@ [j+1]; b[j+1]=@@ b[j]@@ ^@@ b@@ [j+1]; b[j]=@@ b[j]@@ ^@@ b@@ [j+1]; } } void@@ merge@@ (void) { inti; for(i=0;i<n;i++) a[i@@ +m@@ ]=b[i]; } void@@ putdata@@ (void) { inti; cout<<a[0]; for(i=1;i<@@ m+n;i++) cout<<""<<a[i]; }  
c -1
h -1
0

const@@ int@@ maxn=@@ 100; intmain() { int@@ line@@ ,@@ row; intnum[@@ maxn@@ ][@@ maxn@@ ]; cin>>@@ line@@ >>@@ row; int@@ nowline@@ ,@@ nowrow@@ ; int@@ step@@ ; inti,j; for(i=0@@ ;i@@ !=@@ line@@ ;i++) for(j=0@@ ;j@@ !=@@ row@@ ;j++)@@ cin>>@@ num[i]@@ [j]; for(@@ step@@ =0;@@ step@@ !=@@ line@@ +row@@ -1;@@ step@@ ++) { nowline@@ =(@@ step@@ >=@@ row@@ ?@@ step@@ -@@ row@@ +1@@ :@@ 0); nowrow@@ =(@@ step@@ >=@@ row@@ ?@@ row-1@@ :@@ step@@ ); while(@@ nowline@@ !=@@ line@@ &&@@ nowrow@@ !=-1) { cout<<@@ num[@@ nowline@@ ][@@ nowrow@@ ]<<endl; nowline@@ ++;@@ nowrow@@ --; } } return0; }  
c -1
h -1
intmain(){ ints[@@ 101][101]; intk,m,n,@@ i@@ ,*@@ pointer1@@ ,*@@ pointer2@@ ,@@ i1@@ ,@@ i2@@ ,@@ sum=0;@@ ; cin>>k; for(i=1;i<=@@ k;i++){ cin>>m>>n; for(@@ i1@@ =0;@@ i1@@ <m;@@ i1@@ ++){ for(@@ i2@@ =0;@@ i2@@ <n;@@ i2@@ ++) cin>>@@ s[@@ i1@@ ][@@ i2@@ ]; } pointer1@@ =&@@ s[@@ 0][@@ 1@@ ]; pointer2@@ =&@@ s[@@ 0][@@ 0]; for(@@ i1@@ =1;@@ i1@@ <@@ n-1;@@ i1@@ ++){ pointer1@@ =&@@ s[@@ 0][@@ i1@@ ]; sum+=@@ *@@ pointer1@@ ; } for(@@ i1@@ =0;@@ i1@@ <m;@@ i1@@ ++){ if(n@@ !=1@@ ){ pointer1@@ =&@@ s[@@ i1@@ ][n-1]; pointer2@@ =&@@ s[@@ i1@@ ][0]; sum=sum+*@@ pointer1@@ +*@@ pointer2@@ ; } else{ pointer2@@ =&@@ s[@@ i1@@ ][0]; sum=sum+*@@ pointer1@@ +*@@ pointer2@@ ; } } for(@@ i1@@ =1;@@ i1@@ <@@ n-1;@@ i1@@ ++){ pointer2@@ =&@@ s[@@ m-1][@@ i1@@ ]; sum+=@@ *@@ pointer2@@ ; } cout<<sum<<endl; sum=0; } return0; }  
c -1
h -1
0

intmain(){ intn,k,@@ a[1000],@@ i,@@ x,@@ s; s=1; scanf("%d",&n); scanf("%d",&k); for(i=0;i<n;i++){ scanf("%d",&a[i]); } for(i=0;i<n-1;i++){ for(x@@ =1;@@ x@@ <=@@ n-1@@ -i@@ ;x@@ ++){ if(a[i]+@@ a[i@@ +@@ x@@ ]==k){ s=s@@ *@@ 0@@ ; } } } if(s@@ ==0){ printf("yes"); } else{ printf("no"); } return0; }  
c -1
h -1
voidread@@ (int@@ *,@@ int*@@ ); main() { inta[@@ 100000@@ ],b[@@ 100000]; read@@ (a,b); } voidread@@ (int*a,@@ int*@@ b) { inti,@@ n1,n2; void@@ bubble@@ (int@@ *,@@ const@@ int@@ ); void@@ print1@@ (int@@ *,@@ int@@ n); void@@ print2@@ (int@@ *,@@ int@@ n); scanf("%d%d",&n1,&n2); for(i=0;i<=@@ n1@@ -1;i++) scanf("%d",&a[i]); for(i=0;i<=@@ n2@@ -1;i++) scanf("%d",&b[i]); bubble@@ (a,@@ n1); bubble@@ (b,@@ n2); print1@@ (a,@@ n1); print2@@ (b,@@ n2); } void@@ bubble@@ (int*a,@@ const@@ int@@ n) { int@@ pass@@ ,i; void@@ swap@@ (int@@ *,@@ int*@@ ); for(@@ pass@@ =1;@@ pass@@ <=@@ n-1;@@ pass@@ ++) for(i=0;i<=@@ n-2;i++) if(a[i]>=@@ a[i+1]) swap(@@ &@@ a[i],&@@ a[i+1@@ ]); } void@@ swap@@ (int*a,@@ int*@@ b) { int@@ hold@@ ; hold@@ =*@@ a; *a@@ =*@@ b; *@@ b=@@ hold@@ ; } void@@ print1@@ (int*@@ a,int@@ n) { inti; for(i=0;i<=n-1;i++) { printf("%d",a[i]); printf(""); } } void@@ print2@@ (int*@@ a,int@@ n) { inti; for(i=0;i<=@@ n-2;i++) { printf("%d",a[i]); printf(""); } printf("%d",a[@@ n-1]); }  
c -1
h -1
0

intmain(intargc,char*argv[]) { intn,k; inti,j,@@ p=1; intnum[@@ 1000]; scanf("%d%d",&n,&k); for(i=0;i<n;i++){ scanf("%d",&@@ num[i]); } for(i=0;i<n-1;i++){ for(j=i+1;j<@@ n@@ -i;j++){ if(num@@ [i]+@@ num@@ [j]==k){ p=0; } } } if(p@@ ==0){ printf("yes\n"); } elseif(@@ p@@ =1@@ ){ printf("no\n"); } return0; }  
c -1
h -1
intmain() { inti,@@ x,@@ m,@@ c,@@ r,@@ k; doublen,@@ y; chara[@@ 502@@ ],b[@@ 502@@ ]; x=0; scanf("%lf",&n); scanf("%s",a); scanf("%s",b); m=strlen(a); c@@ =strlen(b); r@@ =1; k=1; if(m!=@@ c){ k=0; } for(i=0;i<m;i++){ if(a[i]@@ =='@@ A'||a[i]=='T'||a[i]=='@@ G'||@@ a[i]=='@@ C'||@@ b[i]=='@@ A'||@@ b[i]=='@@ T'||@@ b[i]=='@@ G'||@@ b[i]=='@@ C'){ r@@ =1; } else{ r=0; } if(r@@ ==0||@@ k@@ ==0){ printf("error"); break; } } if(r@@ ==1&&@@ k@@ ==1){ for(i=0;i<m;i++){ if(a[i]==b[i]){ x++; } } y@@ =1.0*@@ x/@@ m; if(y@@ >n){ printf("yes"); } else{ printf("no"); } } return0; }  
c -1
h -1
0

intmain(){ doublen; scanf("%lf",&n); charzfc@@ [500],@@ sz[@@ 500]; scanf("%s%s",@@ zfc@@ ,@@ sz@@ ); int@@ a=strlen(@@ zfc); int@@ b=strlen(@@ sz@@ ); intm; if(a!=@@ b@@ ){@@ printf("error");} else{ m=@@ a; intk=0; inty; for(y=0;y@@ <m;@@ y@@ ++){ if(@@ zfc@@ [y@@ ]!='@@ A'&&@@ zfc@@ [y@@ ]!='@@ T'&&@@ zfc@@ [y@@ ]!='@@ C'&&@@ zfc@@ [y@@ ]!='@@ G'&&@@ zfc@@ [y@@ ]!='\0'@@ ){ printf("error"); k=1; break;} if(sz[@@ y@@ ]!='@@ A'&&@@ sz[@@ y@@ ]!='@@ T'&&@@ sz[@@ y@@ ]!='@@ C'&&@@ sz[@@ y@@ ]!='@@ G'&&@@ zfc@@ [y@@ ]!='\0'@@ ){ printf("error"); k=1; break;} } if(k@@ ==0){ inti,@@ c=0; for(i=0;i<m;i++){ if(@@ zfc@@ [i]==@@ sz[i]@@ ){ c++; } } double@@ s=@@ c@@ *1.0/@@ m; if(s@@ >@@ n@@ ){printf("yes");} else{printf("no");} } } return0; }  
c -1
h -1
intmain() { intn,i,j,k,@@ cn@@ ; cin>>n; inta[n]; cn@@ =0; for(i=0;i<n;i++) { cin>>k; for(j=0;j<=@@ cn@@ ;j++) if(a[j]==@@ k) break; if(j==@@ cn@@ +1) { a[@@ cn@@ ]=@@ k; cn@@ ++; } } for(i=0;i<@@ cn@@ -1;i++) cout<<a[i]<<""; cout<<a[@@ cn@@ -1]; return0; }  
c -1
h -1
0

intmain() { inta[100][100],@@ k,@@ n,@@ m; cin>>k; for(inti=0;i<k;i++) { intsum=0; cin>>m>>n; for(intj=0;j<m;j++) for(intk=0;k<@@ n;k++) cin>>a[j]@@ [k]; int*p=@@ a[0]; for(@@ ;p<@@ a[0]@@ +n;@@ p++) sum+=@@ *p; if(m==1) { cout<<sum<<endl; continue; } p=@@ a[@@ m-1@@ ]; for(@@ ;p<@@ a[m-1]@@ +n;@@ p++) sum+=@@ *p; int@@ (*@@ q@@ )@@ [100@@ ]=@@ a@@ +1; for(@@ ;q@@ <=@@ a+@@ m@@ -2@@ ;q++) sum+=@@ **@@ q@@ +@@ *(@@ (*@@ q@@ )+@@ n-1); if(n==1) { cout<<(@@ sum@@ -@@ a[0][0]@@ -@@ a[@@ m-1@@ ][0]@@ )@@ /2@@ +@@ a[0][0]@@ +@@ a[m-1][@@ 0]; continue; } cout<<sum<<endl; } return0; }  
c -1
h -1
intmain() { intk,@@ n,@@ b[@@ 20001@@ ],c[@@ 20001@@ ],@@ i=0,@@ j@@ =1,@@ l,@@ m; cin>>n; for(l=0;l<@@ 20001@@ ;l++) {@@ b[l@@ ]@@ =0;} for(m=0;m<@@ 20001@@ ;m++) {@@ c[m@@ ]@@ =0;} while(j@@ <=@@ n) {@@ cin>>k; if(@@ b[k@@ ]==0) c[i]=@@ k; b[k@@ ]++; i++; j@@ ++;} cout<<c[@@ 0]; for(i=1;i<n;i++) { if(c@@ [i]!=0) {@@ cout<<""<<@@ c[i]@@ ;} } return0; }  
c -1
h -1
0

structstudent { charnum[@@ 30]; intsum; structstudent*next; }; voidmain() { intn,i; structstudent*@@ p1,*p2,*@@ p3@@ ,*@@ head; scanf("%d",&n); for(i=0;i<n;i++) { p1@@ =(structstudent*)malloc(sizeof(structstudent)); if(i==0) head=p1; scanf("%s%d",@@ p1->num,&p1->@@ sum); p1->next=NULL; if(i@@ !=0) { p3@@ =head; if(p1->@@ sum@@ >=60){ while((@@ p1->@@ sum<=@@ p3->@@ sum@@ )&&@@ p3@@ ->next@@ !=NULL) { p2=@@ p3; p3=@@ p3@@ ->next; } if(p1->@@ sum>@@ p3->@@ sum) { if(head@@ ==@@ p3@@ ) { head=p1; p1->next=@@ p3; } else { p2->next=p1; p1->next=@@ p3; } } else { p3@@ ->next@@ =p1; p1->next=NULL; } } else{@@ for(@@ p2=@@ head;@@ ;@@ p2=@@ p2->next@@ ){@@ if(@@ p2->next@@ ==NULL@@ )@@ break;} p2->next=p1; p1->next@@ =NULL@@ ;} } } p1=head; for(i=0;@@ (i@@ <n@@ &&@@ p1@@ !=NULL@@ );i++) { printf("%s\n",@@ p1->num); p1=p1->next; } }  
c -1
h -1
voidmain() { intk,i,j,@@ l=0; inta[@@ 25@@ ]={0},b[@@ 25@@ ]={0}; scanf("%d",&k); for(i=0;i<=k-1;i++) scanf("%d",&a[i]); b[k@@ -1]@@ =1; for(i=k-2;i>=0;i--) { for(j=i+1;j<=@@ k@@ -1;j++) if(a[i]>=@@ a[j]&&@@ b[i]@@ <=@@ b[j]) b[i]=b[j]+1; if(b[i]@@ ==0) b[i]=1; } for(i=0;i<=@@ k@@ -2;i++) for(j=0;j<=@@ k@@ -2@@ -i;j++) if(b[j]>b[j+1]) { l=@@ b@@ [j+1]; b[j+1]=@@ b[j]; b[j]=@@ l; } printf("%d\n",@@ b[k@@ -1]); }  
c -1
h -1
0

structpatient { charid[10]; int@@ old@@ ; }@@ pt@@ [100]; main() { intn,i,j,k,@@ e,@@ h; int@@ yx@@ [100],@@ byx@@ [100]; scanf("%d",&n); j=0; k=0; for(i=0;i<n;i++){ scanf("%s%d",&@@ pt@@ [i].id,&@@ pt@@ [i].@@ old@@ ); if(@@ pt@@ [i].@@ old@@ >=60){ yx@@ [j]@@ =i; j++; } else{ byx@@ [k]=@@ i; k++; } } for(i=0;i<j@@ ;i++){ for(h=0;h@@ <j@@ -1;@@ h@@ ++){ if(@@ pt@@ [@@ yx@@ [h@@ ]@@ ].@@ old@@ <@@ pt@@ [@@ yx@@ [h@@ +1@@ ]@@ ].@@ old@@ ){ e=@@ yx@@ [h@@ ]; yx@@ [h@@ ]=@@ yx@@ [h@@ +1]; yx@@ [h@@ +1]=@@ e; } } } for(i=0;i<j@@ ;i++){ printf("%s\n",@@ pt@@ [@@ yx@@ [i]@@ ].id); } for(i=0;i<k;i++){ printf("%s\n",@@ pt@@ [@@ byx@@ [i]@@ ].id); } }  
c -1
h -1
intmain() { intn,i,j; int@@ d1@@ ,@@ d2@@ ; scanf("%d",&n); int@@ sx@@ =0,@@ sy@@ ,@@ tx@@ ,@@ ty@@ ; for(i=0;i<n;i++) { scanf("%d",&@@ d1@@ ); for(j=1;j<n;j++) { scanf("%d",&@@ d2@@ ); if((@@ d1@@ ==0)&&(@@ d2@@ ==0)) { if(@@ sx@@ ==0) { sx@@ =i;@@ sy@@ =j; } tx@@ =i;@@ ty@@ =j+1; } d1@@ =@@ d2@@ ; } } printf("%ld@@ ",@@ (@@ long@@ )@@ (@@ ty@@ -@@ sy@@ -1)*(@@ long@@ )@@ (@@ tx@@ -@@ sx@@ -1)); return0; }  
c -1
h -1
0

intmain() { intk,m,n,i,j,@@ c; inta[100][100]; intb[100@@ ]={0}; scanf("%d",&k); for(c=0;c@@ <k;@@ c++) { scanf("%d%d",&m,&n); for(i=0;i<m;i++) { for(j=0;j<n;j++) { scanf("%d",&a[i][j]); } } for(i=0;i<m;i++) { for(j=0;j<n;j++) { if(i==0||i==@@ m-1) { b[@@ c@@ ]+=@@ a[i][j]; } else { if(j@@ ==0||j==@@ n-1) { b[@@ c@@ ]+=@@ a[i][j]; } } } } } for(c=0;c@@ <k;@@ c++) { printf("%d\n",@@ b[@@ c@@ ]); } return0; }  
c -1
h -1
voidmain() { inta[@@ 200],@@ k,@@ i,@@ n=0,@@ j=0; for(i=0;i<@@ 200@@ ;i++) { scanf("%d",&a[i]); if(a[i]!=@@ -1@@ &&a[i]@@ !=0) n=n+1; if(a[i]==-1) break; if(a[i]==0) { for(k=0;k<n;k++) { for(i=0;i<n;i++) { if(a[k@@ ]==2*@@ a[i]) j=j+1; } } printf("%d\n",@@ j); j=0; i@@ =-1; n=0; } } }  
c -1
h -1
0

intmain(intargc,char*argv[]) { intm,i,j,@@ A@@ [26]={0},@@ B@@ [26]; char@@ s; scanf("%d",&m); structbook{ intnum; char@@ n@@ [26]; }@@ *@@ book@@ ; book@@ =(struct@@ book@@ *)malloc(sizeof(struct@@ book@@ )*@@ m); for(i=0;i<m;i++) { scanf("%d%s",&book[i].num,@@ book[i].@@ n); for(j=0;@@ book[i].@@ n@@ [j]!='\0';j++) { switch(@@ book[i].@@ n@@ [j]) { case@@ 65@@ :@@ A@@ [0]@@ ++@@ ;break; case@@ 66@@ :@@ A@@ [1]@@ ++@@ ;break; case@@ 67@@ :@@ A@@ [2@@ ]++;break; case@@ 68@@ :@@ A@@ [3@@ ]++;break; case@@ 69@@ :@@ A[@@ 4@@ ]++;break; case@@ 70@@ :@@ A@@ [5@@ ]++;break; case@@ 71@@ :@@ A[@@ 6@@ ]++;break; case@@ 72@@ :@@ A[@@ 7@@ ]++;break; case@@ 73@@ :@@ A[@@ 8@@ ]++;break; case@@ 74@@ :@@ A[@@ 9@@ ]++;break; case@@ 75@@ :@@ A[@@ 10@@ ]++;break; case@@ 76@@ :@@ A@@ [11@@ ]++;break; case@@ 77@@ :@@ A[@@ 12@@ ]++;break; case@@ 78@@ :@@ A[@@ 13@@ ]++;break; case@@ 79@@ :@@ A[@@ 14@@ ]++;break; case@@ 80@@ :@@ A[@@ 15@@ ]++;break; case@@ 81@@ :@@ A[@@ 16@@ ]++;break; case@@ 82@@ :@@ A[@@ 17@@ ]++;break; case@@ 83@@ :@@ A[@@ 18@@ ]++;break; case@@ 84@@ :@@ A[@@ 19@@ ]++;break; case@@ 85@@ :@@ A[@@ 20@@ ]++;break; case@@ 86@@ :@@ A[@@ 21@@ ]++;break; case@@ 87@@ :@@ A[@@ 22@@ ]++;break; case@@ 88@@ :@@ A[@@ 23@@ ]++;break; case@@ 89@@ :@@ A[@@ 24@@ ]++;break; case@@ 90@@ :@@ A@@ [25@@ ]++;break; } } } intk,@@ max; for(i=0;i<26;i++) { B@@ [i]=@@ A@@ [i]; } for(i=@@ 25@@ ;i>0;i--) { if(@@ B@@ [i]>@@ B@@ [i-1@@ ]) { B@@ [i-1@@ ]=@@ B@@ [i]; max=@@ B@@ [i]; } else { max=@@ B@@ [i-1]; } } for(i=@@ 25@@ ;i>=0;i--) { if(A@@ [i]==@@ max) k=i; } s=@@ k@@ +65; printf("%c\n%d\n",@@ s,@@ max); for(i=0;i<m;i++) { for(j=0;@@ book[i].@@ n@@ [j]!='\0';j++) { if(book[i].@@ n@@ [j]==@@ s) { printf("%d\n",book[i].@@ num); break; } } } return0; }  
c -1
h -1
structbook { intnum; charname@@ [27]; }@@ book[1000]; intmain(intargc,char*argv[]) { intm,i,j,@@ a[@@ 27@@ ],@@ len,@@ max=0,@@ number; char@@ p; for(i=1;i<=@@ 26@@ ;i++){ a[i]=0; } scanf("%d",&m); for(i=1;i<=@@ m;i++){ scanf("%d%s",&book[i].@@ num,&@@ book[i].name); len=strlen(@@ book[i].name); for(j=0;j<=@@ len@@ -1;j++){ p=@@ book[i].@@ name@@ [j]; a[p@@ -@@ 64@@ ]@@ +=1; } } for(i=1;i<=@@ 26@@ ;i++){ if(a[i]@@ >max){ max=a[i]; number@@ =i; } } printf("%c\n%d\n",@@ number@@ +@@ 64@@ ,a[@@ number@@ ]); for(i=1;i<=@@ m;i++){ len=strlen(@@ book[i].name); for(j=0;j<=@@ len@@ -1;j++){ if(book[i].@@ name[j]==@@ number@@ +@@ 64@@ ){ printf("%d\n",book[i].@@ num); } } } return0; }  
c -1
h -1
1


intmain(){ intn,i,k,@@ l,@@ b[100@@ ],@@ n1@@ =0,@@ n2@@ =0,@@ ha@@ [100],@@ pp@@ [100],@@ x; chara[100@@ ][@@ 11@@ ],@@ yi@@ [100][10],@@ er@@ [100][10],@@ y@@ [11]; scanf("%d",&n); for(i=0;i<n;i++) { scanf("%s",@@ a[i]); scanf("%d",&b[i]); } for(i=0;i<n;i++) { if(b[i]@@ >=60) { n1@@ ++; } else { n2@@ ++; } } for(i=0,@@ k=0,@@ l@@ =0;i<n;i++) { if(b[i]@@ >=60) { ha@@ [k]=@@ b[i]; strcpy(@@ yi@@ [k],@@ a[i]); k++; } else { pp@@ [l@@ ]=b[i]; strcpy(@@ er@@ [l@@ ],@@ a[i]); l++; } } for(i=1;i<@@ n1@@ ;i++) { for(k=0;k<@@ n1@@ -i@@ ;k++) { if(@@ ha@@ [k]@@ <@@ ha@@ [k+1@@ ]) { x=@@ ha@@ [k]; ha@@ [k]=@@ ha@@ [k+1]; ha@@ [k+1]=@@ x; strcpy(@@ y,@@ yi@@ [k]); strcpy(@@ yi@@ [k],@@ yi@@ [k+1@@ ]); strcpy(@@ yi@@ [k+1@@ ],@@ y); } } } for(i=0;i<n1@@ ;i++){ printf("%s\n",@@ yi@@ [i]); } for(i=0;i<n2@@ ;i++){ printf("%s\n",@@ er@@ [i]); } return0; }  
c -1
h -1
intmain() { intn,i,@@ max1@@ =0,@@ max2@@ =0,@@ max3@@ =0,@@ t1@@ =0,@@ t2@@ =0,@@ t3@@ =0; int@@ ID@@ [100000],@@ y[@@ 100000],@@ m[@@ 100000],@@ s[@@ 100000]; scanf("%d",&n); for(i=0;i<n;i++) scanf("%d%d%d",&@@ ID@@ [i],&@@ y@@ [i],&@@ m[i]); for(i=0;i<n;i++) s[i]=@@ y@@ [i]@@ +m@@ [i]; for(i=0;i<n;i++) { if(@@ max1@@ <@@ s@@ [i]) { max1=@@ s[i]; t1@@ =i; } } s[@@ t1@@ ]=0; for(i=0;i<n;i++) { if(@@ max2@@ <@@ s@@ [i]) { max2=@@ s[i]; t2@@ =i; } } s[@@ t2@@ ]=0; for(i=0;i<n;i++) { if(@@ max3@@ <@@ s@@ [i]) { max3=@@ s[i]; t3@@ =i; } } printf("%d%d\n",@@ ID@@ [@@ t1@@ ],@@ max1@@ ); printf("%d%d\n",@@ ID@@ [@@ t2@@ ],@@ max2@@ ); printf("%d%d\n",@@ ID@@ [@@ t3@@ ],@@ max3@@ ); getchar(); getchar(); getchar(); return0; }  
c -1
h -1
0

intmain() { introw,col,@@ i,j,k,@@ n,m,@@ a[100][100]; scanf("%d%d",&row,&col); for(i=0;i<row;i++){ for(j=0;j<col;j++){ scanf("%d",&a[i][j]); } } for(k=0;k<@@ row+col@@ -1@@ ;k++){ for(m=0;m@@ <row@@ ;m++){ if((@@ k-@@ m)@@ <0) {break;} for(n=@@ k-@@ m;@@ ;) { if((@@ k-@@ m@@ )>@@ (@@ col@@ -1)) {break;} printf("%d\n",@@ a[m@@ ][n@@ ]); break; } } } return0; }  
c -1
h -1
voidmain() { intk,@@ h@@ [26],@@ p@@ [26@@ ],i,j,@@ m,@@ t,@@ a[@@ 26@@ ][@@ 26]; scanf("%d",&k); for(i=1;i<=k;i++) scanf("%d",&h[i]); for(i=1;i<=k;i++) p[i]=@@ h@@ [i]; for(i=1;i<k;i++) { m=i; for(j=i+1;j<=@@ k;j++) if(p@@ [j]>@@ p@@ [m@@ ]) m@@ =j; t=@@ p[i]@@ ;p@@ [i]=@@ p@@ [m]@@ ;p@@ [m]=@@ t; } for(i=0;i<=@@ k;i++) for(j=0;j<=@@ k;j++) a[i][j]@@ =0; for(i=1;i<=k;i++) for(j=1;j<=@@ k;j++) {@@ if(h@@ [i]==@@ p@@ [j]) a[i]@@ [j]=@@ a[i-1]@@ [j-1]@@ +1; else{@@ if(a@@ [i-1]@@ [j]>@@ a[i]@@ [j-1]) a[i]@@ [j]=@@ a[i-1]@@ [j]; else@@ a[i]@@ [j]=@@ a[i][j-1]@@ ;}} printf("%d",@@ a[k@@ ][k@@ ]); }  
c -1
h -1
0

intmain() { intm,i,j,@@ a[1000],@@ c[@@ 91@@ ]={0},@@ k,@@ n,@@ p=0; charb[@@ 1000][@@ 26],@@ q; scanf("%d",&m); for(i=1;i<=m;i++) { scanf("%d%s",&a[i],@@ b[i]); n=strlen(@@ b[i]); for(j=0;j<=n-1;j++) { k=@@ b[i]@@ [j]; c@@ [k]++; } } for(i=@@ 65@@ ;i<@@ 91@@ ;i++)@@ if(c@@ [i]>@@ p@@ ){@@ p=@@ c[i]@@ ;q@@ =i;} printf("%c\n%d\n",@@ q,@@ p); for(i=1;i<=m;i++) { n=strlen(@@ b[i]); for(j=0;j<=@@ n-1@@ ;j++)@@ if(b[i]@@ [j]==@@ q@@ )@@ printf("%d\n",a[i]); } return0; }  
c -1
h -1
intmain() { inta[@@ M@@ ],@@ len@@ [@@ M@@ ],@@ n,i,j,@@ max,@@ longest@@ ; scanf("%d",&n); for(i=0;i<n;i++){ scanf("%d",&a[i]); } longest@@ =1; for(i=0;i<n;i++) { max=1; len@@ [i]=1; for(j=0;j<i;j++) { if(a[i]<=@@ a[j]) max=@@ len@@ [j]+1; if(@@ len@@ [i]<@@ max) len@@ [i]=@@ max; } if(@@ len@@ [i]>@@ longest@@ ) longest@@ =@@ len@@ [i]; } printf("%d\n",@@ longest@@ ); return0; }  
c -1
h -1
0

int@@ first@@ [100]; int@@ second@@ [100]; int@@ combination@@ [@@ 200]; inta,b; void@@ cin_number@@ () { inti; cin>>a>>@@ b; for(i=0;i<a;i++) { cin>>@@ first@@ [i]; } for(i=0;i<b;i++) { cin>>@@ second@@ [i]; } } void@@ rank@@ () { inti,j,temp; for(i=@@ (a@@ -1)@@ ;i>0;i--) { for(j=0;j<i;j++) { if(@@ first@@ [j]>@@ first@@ [j+1]) { temp=@@ first@@ [j]; first@@ [j]=@@ first@@ [j+1]; first@@ [j+1]=temp; } } } for(i=@@ (@@ b@@ -1)@@ ;i>0;i--) { for(j=0;j<i;j++) { if(@@ second@@ [j]>@@ second@@ [j+1]) { temp=@@ second@@ [j]; second@@ [j]=@@ second@@ [j+1]; second@@ [j+1]=temp; } } } } voidcombine@@ () { inti; for(i=0;i<a;i++) { combination@@ [i]=@@ first@@ [i]; } for(i=0;i<b;i++) { combination@@ [a@@ +i]=@@ second@@ [i]; } } void@@ cout_combination@@ () { inti; for(i=0;i<(@@ a+@@ b@@ -1);i++) cout<<@@ combination@@ [i]@@ <<""; cout<<@@ combination@@ [i]<<endl; } intmain() { cin_number@@ (); rank@@ (); combine@@ (); cout_combination@@ (); return0; }  
c -1
h -1
struct@@ score { intnum; intyuwen; intshuxue; }@@ student[@@ 100000]; intmax@@ (inta,intb) { return(@@ a@@ >b@@ )@@ ?@@ a@@ :@@ b; } int@@ min@@ (inta,intb) { return(@@ a@@ <b@@ )@@ ?@@ a@@ :@@ b; } intmain() { intmax@@ (inta,int@@ b); int@@ total@@ [100000]; intn,i; int@@ max1@@ =0,@@ max2@@ =0,@@ max3@@ =0; int@@ maxnum1@@ =0,@@ maxnum2@@ =0,@@ maxnum3@@ =0; scanf("%d",&n); for(i=0;i<n;i++){ scanf("%d",&@@ student[i].@@ num); scanf("%d",&@@ student[i].@@ yuwen@@ ); scanf("%d",&@@ student[i].@@ shuxue); total@@ [i]=@@ student[i].@@ yuwen@@ +@@ student[i].@@ shuxue; if(@@ total@@ [i]>=@@ max1@@ ){ if(@@ total@@ [i]==@@ max1@@ ){ max3=max2; max2=@@ max1; max1=@@ total@@ [i]; maxnum3@@ =@@ maxnum2@@ ; maxnum2@@ =@@ max(@@ maxnum1@@ ,i@@ +1); maxnum1@@ =@@ min@@ (@@ maxnum1@@ ,i@@ +1); } else{ max3=max2; max2=@@ max1; max1=@@ total@@ [i]; maxnum3@@ =@@ maxnum2@@ ; maxnum2@@ =@@ maxnum1@@ ; maxnum1@@ =i+1; } } elseif(@@ total@@ [i]<@@ max1@@ &&@@ total@@ [i]>=@@ max2@@ ){ if(@@ total@@ [i]==@@ max2@@ ){ max3=max2; max2=@@ total@@ [i]; maxnum3@@ =@@ max(@@ maxnum2@@ ,i@@ +1); maxnum2@@ =@@ min@@ (@@ maxnum2@@ ,i@@ +1); } else{ max3=max2; max2=@@ total@@ [i]; maxnum3@@ =@@ maxnum2@@ ; maxnum2@@ =i+1; } } elseif(@@ total@@ [i]<@@ max2@@ &&@@ total@@ [i]>=@@ max3@@ ){ if(@@ total@@ [i]==@@ max3@@ ){ max3=@@ total@@ [i]; maxnum3@@ =@@ min@@ (i+1,@@ maxnum3@@ ); } else{ max3=@@ total@@ [i]; maxnum3@@ =i+1; } } } printf("%d%d\n",@@ maxnum1@@ ,@@ max1@@ ); printf("%d%d\n",@@ maxnum2@@ ,@@ max2@@ ); printf("%d%d",@@ maxnum3@@ ,max3@@ ); return0; }  
c -1
h -1
0

inta[100],b[100]; int@@ p,q; voidinput() { cin>>@@ p@@ >>@@ q; inti=0; for(i=0;i<p@@ ;i++) { cin>>a[i]; } for(i=0;i<@@ q@@ ;i++) { cin>>b[i]; } } voidpaixu@@ (inta[100],int@@ b[100@@ ]) { inti=0,j=0; intc; for(i=1;i<=@@ p@@ -1;i++){ for(j=0;j<@@ p@@ -i;j++){ if(a[j]>a[j+1]) { c=@@ a[j]; a[j]=a[j+1]; a[j+1]=@@ c; } } } for(i=1;i<=@@ q@@ -1;i++){ for(j=0;j<@@ q@@ -i;j++){ if(b[j]>b[j+1]) { c=@@ b[j]; b[j]=b[j+1]; b[j+1]=@@ c; } } } } void@@ connect@@ (inta[100],int@@ b[100@@ ]) { for(inti=0;i<@@ q@@ ;i++) { a[p@@ +i]=b[i]; } } voidoutput@@ (inta[100@@ ]) { inti=0; cout<<a[0]; for(i=1;i<@@ p+@@ q@@ ;i++) { cout<<""<<a[i]; } } intmain() { input(); paixu@@ (a,b); connect@@ (a,b); output@@ (a); return0; }  
c -1
h -1
intmain() { intn,i,j,k,@@ l,@@ m,@@ s; cin>>n; int@@ max1@@ =0,@@ max2@@ =0,@@ min1@@ =@@ n,@@ min2@@ =@@ n; inta[100][100]; for(i=0;i<n;i++) { for(j=0;j<n;j++) { cin>>a[i][j]; } } for(i=0;i<n;i++) { for(j=0;j<n;j++) { if(a[i][j]==0) { if(@@ max1@@ <@@ i) { max1@@ =i; } if(@@ max2@@ <@@ j) { max2@@ =j; } if(@@ min1@@ >@@ i) { min1@@ =i; } if(@@ min2@@ >@@ j) {@@ min2@@ =j;} } } } s=(@@ max1@@ -@@ min1@@ -1)*(@@ max2@@ -@@ min2@@ -1); cout<<@@ s; return0; }  
c -1
h -1
0

intmain() { intn,k,@@ i; cin>>n>>k; inta[1000]; for(i=0;i<n;i++) { cin>>a[i]; } intj=0; for(i=0;i<n-1;i++) { for(j=i+1;j<n;j++) { if(k==@@ a[i]+@@ a[j]) { cout<<"yes@@ "<<endl; return0; } } } cout<<"no@@ "<<endl; }  
c -1
h -1
intmain(){ inti; chara[500],b[500]; double@@ x,y,@@ k,@@ n,@@ m; scanf("%lf",&x); scanf("%s\n@@ %s",@@ a,b); n@@ =strlen(a); m@@ =strlen(b); for(i=0;i<n;i++){ if(m==@@ n@@ &&(@@ a[i]=='@@ A'||a[i]=='@@ G'||@@ a[i]=='@@ C'||@@ a[i]=='@@ T'||@@ b[i]=='@@ A'||@@ b[i]=='@@ G'||@@ b[i]=='@@ C'||@@ b[i]!='@@ T')@@ ){ if(a[i]==b[i]@@ ){@@ k=k+1; } }else{ printf("error"); return0; } } y=@@ k/@@ n; if(y@@ >@@ x){ printf("yes"); }else{ printf("no"); } return0; }  
c -1
h -1
0

intmain(){ inti,j,@@ c,@@ k=1; chars[@@ 300],@@ w@@ [300],@@ t@@ [300]; scanf("%s",@@ w); scanf("%s",s); scanf("%s",@@ t); int@@ l1=strlen(@@ s@@ );@@ int@@ l2=strlen(@@ w@@ );@@ int@@ l3@@ =strlen(@@ t); for(i=0;i<@@ l2@@ ;i++){ c=0; for(j=0;j<@@ l1@@ ;j++){ if(!@@ (@@ s@@ [j]==@@ w@@ [j+i@@ ])@@ ){@@ c@@ =1;break;} } if((@@ !@@ c@@ )&&(@@ k@@ )){ for(j=i;j<i+@@ l3@@ ;j++){@@ w@@ [j]=@@ t@@ [j-i@@ ];} k=0; } } printf("%s",@@ w); return0; }  
c -1
h -1
intmain() { structpatient { charnum[@@ 11]; intage; } pat@@ [@@ 101],@@ t; intn,i,j; scanf("%d",&n); for(i=0;i<n;i++) { scanf("%s%d",&@@ pat[i].@@ num,&@@ pat@@ [i].age); } for(i=0;i<n-1;i++) { for(j=0;j<n-1-i;j++) { if((@@ pat@@ [j].age@@ <60&&@@ pat@@ [j+1@@ ].age@@ >=60@@ )||(@@ pat@@ [j].age@@ >=60&&@@ pat@@ [j+1@@ ].age@@ >@@ pat@@ [j].age@@ )) { t=@@ pat@@ [j]; pat@@ [j]=@@ pat@@ [j+1]; pat@@ [j+1]=t; } } } for(i=0;i<n;i++) { printf("%s\n",@@ pat[i].@@ num); } return0; }  
c -1
h -1
0

intmain() { inta[@@ 999@@ ];@@ char@@ r@@ [@@ 999@@ ][@@ 26@@ ];@@ intb[@@ 125@@ ]={0@@ }@@ ;@@ intn,i,j,@@ maxi@@ ,@@ s; scanf("%d",&n); for(i=0;i<=n-1;i++) { scanf("%d",&a[i]); scanf("%s",@@ r@@ [i]); s@@ =strlen(@@ r@@ [i])@@ -1; for(j=0;j<=@@ s@@ ;j++) { b[r@@ [i][j]@@ ]=@@ b[r@@ [i][j]@@ ]+1; } } maxi@@ =@@ 65@@ ; for(i=@@ 66@@ ;i<=@@ 90@@ ;i++) { if(b[i]>@@ b[@@ maxi@@ ])@@ maxi@@ =i; } printf("%c\n",@@ maxi@@ ); printf("%d\n",@@ b[@@ maxi@@ ]); for(i=0;i<=n-1;i++) { s@@ =strlen(@@ r@@ [i])@@ -1; for(j=0;j<=@@ s@@ ;j++) { if(r@@ [i][j]==@@ maxi@@ ) { printf("%d\n",a[i]); break; } } } return0; }  
c -1
h -1
struct@@ info { intnum; int@@ chin@@ ; intmath; struct@@ info@@ *next; }; struct@@ info@@ *@@ create@@ (intn) { inti; struct@@ info@@ *head,*p1,*p2; p1=(struct@@ info@@ *)malloc(sizeof(struct@@ info@@ )); scanf("%d%d%d",&p1->num,&p1->@@ chin@@ ,&p1->math); p1->next=NULL; head=p1; p2=p1; i=1; do { p1=(struct@@ info@@ *)malloc(sizeof(struct@@ info@@ )); scanf("%d%d%d",&p1->num,&p1->@@ chin@@ ,&p1->math); p1->next=NULL; p2->next=p1; p2=p1; i++; }@@ while(i<@@ n); return(head); } void@@ arrange@@ (struct@@ info@@ *head) { intm,@@ no1@@ ,@@ no2@@ ,@@ no3@@ ; struct@@ info@@ *p; p=head; m=0; while(p) { if(p->@@ chin@@ +p->@@ math@@ >@@ m) {@@ m=@@ p->@@ chin@@ +p->@@ math@@ ;@@ no1@@ =p->@@ num@@ ;} p=p->next; } printf("%d%d\n",@@ no1@@ ,@@ m); m=0; p=head; no2@@ =p->@@ num; while(p) { if(p->@@ chin@@ +p->@@ math@@ >@@ m@@ &&@@ p->@@ num@@ !=@@ no1@@ ) {@@ m=@@ p->@@ chin@@ +p->@@ math@@ ;@@ no2@@ =p->@@ num@@ ;} p=p->next; } printf("%d%d\n",@@ no2@@ ,@@ m); m=0; p=head; no3@@ =p->@@ num; while(p) { if(p->@@ chin@@ +p->@@ math@@ >@@ m@@ &&@@ p->@@ num@@ !=@@ no1@@ &&@@ p->@@ num@@ !=@@ no2@@ ) {@@ m=@@ p->@@ chin@@ +p->@@ math@@ ;@@ no3@@ =p->@@ num@@ ;} p=p->next; } printf("%d%d\n",@@ no3@@ ,@@ m); } intmain() { intn; struct@@ info@@ *@@ head; scanf("%d",&n); head=@@ create@@ (n); arrange@@ (head); }  
c -1
h -1
0

int@@ answer@@ =0; voidf@@ (intn,int@@ N@@ ){ if(n@@ <@@ N@@ ) N@@ =@@ n; if(N@@ ==1){ answer@@ ++; return; } while(@@ N@@ >1@@ ){ if(n%@@ N@@ ==0) f(@@ n/@@ N@@ ,@@ N); N@@ --; } } intmain() { intn,@@ a; cin>>n; for(inti=0;i<n;i++) { cin>>a; f(a,@@ a); cout<<@@ answer@@ <<endl; answer@@ =0; } return0; }  
c -1
h -1
voidmain() { int@@ a=@@ 16@@ ,@@ i,j,k,@@ n=@@ 15@@ ,@@ b[@@ 16],@@ num=0,@@ t=0; ahead@@ :@@ for(i=0;i<a;i++) { scanf("%d",&b[i]); t++; if(b[i]@@ ==0) { t@@ --; break; } if(b[i]@@ ==-1) { return; } elsecontinue; } for(i=0;i<t;i++) { k=i; for(j=i;j<@@ t;j++) { if((@@ b@@ [j+1]@@ -2*@@ b[i]@@ ==0)||(@@ b[i]@@ -2*@@ b@@ [j+1]@@ ==0)) { num=num@@ +1; } elsecontinue; } } printf("%d\n",num); num=0; t=0; goto@@ ahead@@ ; return; }  
c -1
h -1
0

intmain() { structbook { intnum; charauthor[26]; }@@ list@@ [@@ 999@@ ]@@ ,*p; intn; intcount@@ [26]={0}; inti; char@@ k@@ ='A'; int@@ max; scanf("%d",&n); for(p=@@ list@@ ;p<@@ list@@ +n;@@ p++){ scanf("%d%s",&@@ p->@@ num,@@ p->@@ author); } for(p=@@ list@@ ;p<@@ list@@ +n;@@ p++){ for(i=0;@@ ;i++){ if(p->@@ author@@ [i]==@@ '\0'@@ ){ break; }else{ count[@@ p->@@ author@@ [i]@@ -65]++; } } } max=count@@ [0]; for(i=1;i<@@ 26@@ ;i++){ if(count@@ [i]@@ >max){ max=count@@ [i]; k@@ =i+65; } } printf("%c\n",@@ k); printf("%d\n",max); for(p=@@ list@@ ;p<@@ list@@ +n;@@ p++){ for(i=0;@@ ;i++){ if(k==@@ p->@@ author@@ [i]){ printf("%d\n",p->num); } if(p->@@ author@@ [i]==@@ '\0'@@ ){ break; } } } return0; }  
c -1
h -1
intmain() { inta[16],@@ k,@@ m,n,@@ j; do {@@ j=0; scanf("%d",&a[0]); if(a[0]@@ !=-1) { for(k=1;k<=@@ 15@@ ;k++) { scanf("%d",&@@ a[k]); if(!@@ a[k]@@ )break; } for(m=0;m<@@ k-1@@ ;m++) { for(n=@@ m@@ +1@@ ;n@@ <k;@@ n++) { if((@@ a[m]@@ -2*@@ a[n@@ ]@@ ==0)||(@@ a[n@@ ]@@ -2*@@ a[m]@@ ==0)) j++; } } printf("%d\n",@@ j); } } while(@@ a[0]@@ !=-1); return0; }  
c -1
h -1
0

intmain() {@@ intyear,@@ mon@@ ,@@ day; scanf("%d%d%d",&year,&@@ mon@@ ,&@@ day); int@@ re@@ ; if((@@ year%@@ 4==0&&@@ year%@@ 400@@ ==0&&@@ year%@@ 100@@ ==0)||(@@ year%4==0&&year%100!=0@@ )) { switch(@@ mon@@ ) { case1:@@ re@@ =@@ day;break; case2:@@ re@@ =31+@@ day;break; case3:@@ re@@ =31+29@@ +day;break; case4:@@ re@@ =31+29@@ +31+@@ day;break; case5:@@ re@@ =31+29@@ +31+30@@ +day;break; case6:@@ re@@ =31+29@@ +31+30+31+@@ day;break; case7:@@ re@@ =31+29@@ +31+30+31+30@@ +day;break; case8:@@ re@@ =31+29@@ +31+30+31+30+31+@@ day;break; case9:@@ re@@ =31+29@@ +31+30+31+30+31+31+@@ day;break; case10:@@ re@@ =31+29@@ +31+30+31+30+31+31+30@@ +day;break; case11:@@ re@@ =31+29@@ +31+30+31+30+31+31+30+31+@@ day;break; case12:@@ re@@ =31+29@@ +31+30+31+30+31+31+30+31+30@@ +day;break; } } else {@@ switch(@@ mon@@ ) { case1:@@ re@@ =@@ day;break; case2:@@ re@@ =31+@@ day;break; case3:@@ re@@ =31+28@@ +day;break; case4:@@ re@@ =31+28@@ +31+@@ day;break; case5:@@ re@@ =31+28@@ +31+30@@ +day;break; case6:@@ re@@ =31+28@@ +31+30+31+@@ day;break; case7:@@ re@@ =31+28@@ +31+30+31+30@@ +day;break; case8:@@ re@@ =31+28@@ +31+30+31+30+31+@@ day;break; case9:@@ re@@ =31+28@@ +31+30+31+30+31+31+@@ day;break; case10:@@ re@@ =31+28@@ +31+30+31+30+31+31+30@@ +day;break; case11:@@ re@@ =31+28@@ +31+30+31+30+31+31+30+31+@@ day;break; case12:@@ re@@ =31+28@@ +31+30+31+30+31+31+30+31+30@@ +day;break; } } printf("%d",@@ re); return0; }  
c -1
h -1
intmain() { intn,i; cin>>n; intnum,@@ count@@ [100]={0}; cin>>num; count[@@ num@@ ]++; cout<<@@ num; for(i=2;i<=n;i++) { cin>>num; count[@@ num@@ ]++; if(count@@ [@@ num@@ ]@@ ==1) cout<<""<<@@ num; } return0; }  
c -1
h -1
0

int@@ Divide@@ (inta,int@@ b); intmain() { int@@ Times@@ =0; int@@ Num@@ =0; inti=0; int@@ Temp@@ [100]={0}; cin>>@@ Times@@ ; for(i=0;i<@@ Times@@ ;i++) {@@ cin>>@@ Num@@ ; Temp@@ [i]=@@ Divide@@ (@@ Num@@ ,@@ Num@@ ); } for(i=0;i<@@ Times@@ ;i++) {@@ cout<<@@ Temp@@ [i]@@ <<endl;} return0; } int@@ Divide@@ (inta,intb) { int@@ Sum@@ =0; inti=0; int@@ Flag@@ =0; if(a@@ !=1) {@@ for(i=b@@ ;i@@ >1@@ ;i--) {@@ if(a%i==0) Sum@@ +=@@ Divide@@ (a/i,i); Flag@@ =1; } } if(@@ Flag@@ ==0||@@ a@@ ==1) {@@ Sum@@ =1;} return@@ Sum@@ ; }  
c -1
h -1
intmain() { intn,m,@@ i,j,@@ *@@ p=@@ NULL@@ ; cin>>n>>m; inta[n@@ ][@@ m]; for(p=@@ *a@@ ;p<@@ *(a@@ )+@@ n*@@ m@@ ;p++) cin>>@@ *p; for(i=0,j@@ =0;i<n;i++) { for(@@ ;j<@@ m;j++) { p=@@ *@@ a+@@ m*@@ i@@ +j@@ ; for(intk=0@@ ;k<=@@ j@@ &&k@@ <=@@ m@@ &&k@@ <=@@ n@@ &&k@@ <n@@ -i@@ ;k++) cout<<@@ *(p+@@ (m@@ -1)*@@ k@@ )<<endl; } j--; } return0; }  
c -1
h -1
0

intmain() { int@@ month@@ [12]={31,28,31,30,31,30,31,31,30,31,30,31}; intn,m,@@ d; cin>>n>>@@ m>>d; int@@ counter@@ =0; for(inti=0;i<@@ m-1@@ ;i++){ if(i@@ ==1@@ &&(@@ n@@ %@@ 4@@ ==0@@ &&(@@ n@@ %100!=0@@ )||@@ n@@ %@@ 400==0)@@ ){ counter@@ ++; } counter@@ =@@ counter@@ +@@ month@@ [i]; } counter@@ =@@ counter@@ +d; cout<<@@ counter@@ ; }  
c -1
h -1
intmain() { intN@@ ,@@ i,j,k,@@ m=0; cin>>@@ N; const@@ int@@ n=@@ N; inta[n]; for(i=0;i<n;i++) { cin>>a[i]; } for(i=0;i<n-@@ m;i++) for(j=i;j<=@@ n-@@ m;j++) { if(a[i]==@@ a[j+1@@ ]) { for(k=j+1;k<@@ n-@@ m;k++) a[k]=a[k@@ +1]; m++; j--; } } cout<<a[0]; for(i=1;i<@@ n-@@ m;i++){ cout<<""<<a[i]; } return0; }  
c -1
h -1
0

intmain() { inti,j,k; chara[256],b[256],c[256]; scanf("%s",a); scanf("%s",b); scanf("%s",c); for(i=0;i<@@ 256@@ ;i++) {@@ k=0; for(j=0;j<strlen(@@ b@@ );j++) { if(a@@ [j+i@@ ]!=@@ b[j]) { k@@ =1;break;} } if(k==0) {@@ for(j=0;j<i;j++) printf("%c",@@ a[j]); for(j=0;j<strlen(@@ c@@ );j++) printf("%c",@@ c@@ [j]); for(j=i@@ +@@ strlen(b@@ )@@ ;j<@@ strlen(a)@@ ;j++) printf("%c",@@ a[j]); break; } }@@ if(k==1) { for(j=0;j<@@ strlen(a)@@ ;j++) printf("%c",@@ a[j]); } return0; }  
c -1
h -1
intmain(){ intn,i,j,k,@@ num=0; cin>>n; inta[n]; for(i=0;i<=n-1;i++) cin>>a[i]; for(i=n-1@@ ;i>0;i--) for(k=i@@ -1@@ ;k>=0@@ ;k@@ --){ if(a[i]==@@ a[k]@@ ){ if(i==@@ n-1){ a[i]=0; num++; break; }else{ for(j=i;j<@@ n-1;j++) a[j]=a[j+1]; a[j]=0; num++; break; } } } cout<<a[0]; for(i=1;i<@@ n-@@ num;i++) cout<<""<<a[i]; cout<<endl; return0; }  
c -1
h -1
0

intmain() { introw,col,@@ i,j; int@@ array[100][100]; scanf("%d%d",&row,&col); for(i=0;i<row;i++){ for(j=0;j<col;j++){ scanf("%d",&array@@ [i][j]@@ );}} for(i=0;i<@@ col@@ ;i++){ for(j=0;j<row@@ ;j++){ printf("%d\n",array@@ [j]@@ [i-j@@ ]); if(i@@ -j@@ ==0)break; } } for(i=1;i<@@ row;i++){ for(j=i;j<@@ row@@ ;j++){ printf("%d\n",array@@ [j]@@ [@@ col-1@@ -j@@ +i@@ ]); if(@@ col-1@@ -j@@ +i@@ ==0)@@ break;}} return0; }  
c -1
h -1
intmain(){ inta,b,@@ c=0; double@@ t,@@ k=0; chars[@@ 500@@ ]={'\0'},@@ x[@@ 500@@ ]={'\0'}; scanf("%lf%s%s",&@@ t,@@ s,@@ x); for(a@@ =0;@@ s[@@ a@@ ]!='\0'@@ ;a@@ ++){ if(s[@@ a@@ ]@@ >'@@ Z@@ '){ k=1; break; } } for(b@@ =0;@@ x[@@ b@@ ]!='\0'@@ ;@@ b++){ if(x@@ [b@@ ]@@ >'@@ Z@@ '){ k=1; break; } } if(a!=@@ b@@ ||@@ k@@ ==1){ printf("error"); } else{ for(a=0;a@@ <b@@ ;a@@ ++){ if(s[@@ a@@ ]==@@ x@@ [a@@ ]){ c++; } } k@@ =1.0*@@ c@@ /@@ b; if(k@@ >@@ t@@ ){ printf("yes"); } else{ printf("no"); } } return0; }  
c -1
h -1
0

voidmain() { inti,j,k,@@ a[@@ 16],@@ s,@@ q; do { scanf("%d",&@@ q); a[0]=@@ q; if(q@@ ==-1)break; for(i=1;i<=@@ 15;i++) { scanf("%d",&a[i]); if(a[i]==0)break; } s=0; for(j=0;j<i;j++) { for(k=0;k<i;k++) { if(a[j]==2*@@ a[k]@@ )@@ s=s+1; else@@ s=@@ s; } } printf("%d\n",s); } while(@@ q@@ !=-1); }  
c -1
h -1
main() { intn,i,j,a[@@ 100000@@ ],b[@@ 100000],@@ k,@@ sum=0; scanf("%d",&n); for(i=0;i<n;i++) scanf("%d",&a[i]); printf("%d",a[0]); for(i=1;i<n;i++) { for(j=0;j<i;j++) { if(a[i]==a[j]) break; elseif(@@ j==@@ i@@ -1) printf("%d",a[i]); } } }  
c -1
h -1
0

inta[@@ 25],@@ num; intb[@@ 25]; inti,j,k; intmain(){ cin>>num; for(i=0;i<@@ num@@ ;i++){ cin>>a[i]; b[i]=1; } intmax=0; b[0]@@ =1; for(i=1;i<@@ num@@ ;i++){ for(j=i-1@@ ;j>=0;j--){ if(a[j]>=@@ a[i]@@ ){ k=@@ b[j]@@ +1; if(k@@ >@@ b[i]@@ ){ b[i]=@@ k; if(k@@ >max){ max=@@ k; } } } } } cout<<max<<endl; return0; }  
c -1
h -1
intmain() { intn,i,@@ m,@@ flag; scanf("%d",&n); inta[@@ 200000@@ ]; for(i=1;i<=n;i++) { scanf("%d",&a[i]); } if(n==1) printf("%d",@@ a[1]); else { printf("%d",@@ a[1]); for(i=2;i<=n;i++) { for(m=1;m@@ <i@@ ;m++) { if(a[i]==@@ a[m@@ ]) { flag=1; break; } else flag@@ =-1; } if(flag@@ ==-1) printf("%d",a[i]); } } return0; }  
c -1
h -1
0

intsum=0; intmain() {@@ void@@ shu@@ (inta,int@@ b); intn=0,@@ i=0,@@ a=0,@@ c=0,@@ j=0; scanf("%d",&n); for(i=1;i<=n;i++) {@@ scanf("%d",&a); for(j=2;j<=@@ sqrt(@@ (double)@@ a)@@ ;j++) {@@ if(a%@@ j@@ ==0) {@@ sum=sum+1; shu@@ (@@ j,@@ a/@@ j); } } printf("%d",@@ sum@@ +1); if(i<@@ n) printf("\n"); sum=0; } return(0); } void@@ shu@@ (inta,intb) {int@@ i=0; for(i=a@@ ;i<=sqrt(@@ (double)@@ b@@ );i++) {@@ if(b@@ %i==0) {@@ sum=sum+1; shu@@ (i,@@ b@@ /i); } } }  
c -1
h -1
intmain() { chars[256],@@ a[@@ 256],b[@@ 256]; inti,n,@@ f,@@ t@@ ,j,@@ k,@@ m,@@ l,@@ p,@@ q=0,@@ o@@ ; gets(s); gets(a); gets(b); p@@ =strlen(s); m=strlen(a); n@@ =strlen(b); for(i=0;s[i]@@ !='\0';i++){ if(s[i]==@@ a[0]@@ ){ f=0; for(j=0;j<m;j++){ if(s@@ [j+i@@ ]!=@@ a[j])@@ f=1; } if(f@@ ==0){ t=i; if(t@@ !=0){ for(k=0;k<@@ t@@ ;k++){ printf("%c",s@@ [k]); q=1; } } for(l=0;l<n;@@ l++){ printf("%c",@@ b[l@@ ]); } if(s[@@ m+@@ t@@ ]!='\0'@@ ){ for(k=@@ m+@@ t@@ ;k<@@ p@@ ;k++){ printf("%c",s@@ [k]); } printf(@@ '\0'@@ ); q=1; } if(q@@ ==1)break; } if(q@@ ==1)break; } if(q@@ ==1)break; } if(q@@ ==0)@@ printf("%s",s); scanf("%d",&@@ o@@ ); return0; }  
c -1
h -1
0

voidmain() { intn,m,@@ i,j,@@ max,@@ l,@@ sign@@ =0; scanf("%d",&n); struct@@ tt { char@@ pp@@ [10]; intage; struct@@ tt@@ *next; }; struct@@ tt@@ *head,*@@ p1,*p2,*@@ p3; head=(struct@@ tt@@ *)malloc(LEN); p1=@@ head;@@ p2=head; scanf("%s",@@ head->@@ pp@@ ); scanf("%d",&@@ head@@ ->age@@ ); for(i=1;i<n;i++) { p1=(struct@@ tt@@ *)malloc(LEN@@ );@@ ; p2->next=p1; scanf("%s",@@ p1->@@ pp@@ ); scanf("%d",&@@ p1->@@ age); p2=p1; } p2->next=NULL; for(i=1;i<=n;i++) { if(@@ sign@@ ==1) { printf("%s\n",@@ head->@@ pp@@ ); head=@@ head->next; } elseif(@@ sign@@ ==0) { max@@ =(@@ -1); for(@@ p2@@ =NULL@@ ,@@ p1=@@ head;@@ p1@@ !=NULL;@@ p1=p1->next) { if(p1->age@@ >max){max=@@ p1->age@@ ;@@ p3@@ =p2@@ ;} p2=p1; } if(max@@ <60@@ ){@@ sign@@ =1@@ ;i@@ --@@ ;@@ continue;} elseif(@@ max@@ >=60) { if(@@ p3@@ ==NULL) { printf("%s\n",@@ head->@@ pp@@ ); head=@@ head->next; } else { p1=@@ p3@@ ->next; printf("%s\n",@@ p1->@@ pp@@ ); p3@@ ->next=@@ p1->next; } } } } }  
c -1
h -1
intmain() { struct@@ s { intid; int@@ ch; int@@ ma; }@@ s; long@@ intn; inti=0,@@ j,@@ zong@@ ,@@ c=0; inta[@@ 3@@ ]={0},b[@@ 3@@ ]={0}; intt; scanf("%d",&n); for(i=0;i<3;i++) { scanf("%d%d%d",&@@ s.@@ id,&@@ s.@@ ch@@ ,&@@ s.@@ ma@@ ); a[i]@@ =i+1; b[i]=@@ s.@@ ma@@ +@@ s.@@ ch; } for(i=0;i<2@@ ;i++) { if(b[i]>@@ b[1@@ +i@@ ]) { t=@@ b[i]@@ ;@@ b[i]=b@@ [i+1@@ ];@@ b[i+1]=@@ t; t=@@ a[i];@@ a[i]=a[i+1@@ ];@@ a[i+1]=@@ t; } } for(i=@@ 3@@ ;i<n;i++) { scanf("%d%d%d",&@@ s.@@ id,&@@ s.@@ ch@@ ,&@@ s.@@ ma@@ ); zong@@ =@@ s.@@ ch@@ +@@ s.@@ ma; for(j=0;j<3;j++) { if(@@ zong@@ >@@ b[j]@@ )@@ c++; } if(c@@ ==1) { a[0]=@@ s.@@ id; b[0]=@@ zong@@ ; } if(c==@@ 2) { a[0]=@@ a[1]; b[0]=@@ b[1@@ ]; a[1]=@@ s.@@ id; b[1@@ ]=@@ zong@@ ; } if(c==@@ 3) { a[0]=@@ a[1]; a[1@@ ]=a[@@ 2@@ ]; a[2]=@@ s.@@ id; b[0]=@@ b[1@@ ]; b[1@@ ]=@@ b[2@@ ]; b[2@@ ]=@@ zong@@ ; } c=0; } for(i=2@@ ;i>=0;i--) { printf("%d%d\n",@@ a[i],@@ b[i]); } }  
c -1
h -1
0

intmain() { ints[@@ 1000@@ ][100]; inti=0,j=0,@@ h@@ =0,@@ a,@@ m=0,@@ sum=0; scanf("%d",&a); while(@@ a@@ !=-1) { if(a@@ !=0) s[i]@@ [j@@ ++]=@@ a; else {@@ s@@ [i][j]=@@ a; i++; j@@ =0;} scanf("%d",&a); } for(h=0;h@@ <i@@ ;@@ h++) {@@ while(@@ s[@@ h@@ ][j]@@ !=0) {@@ m=0; while(@@ s[@@ h@@ ][m@@ ]!=0) { if(((@@ float)@@ s[@@ h@@ ][j]@@ /2@@ )==@@ (@@ float)@@ s[@@ h@@ ][m@@ ]) sum++; m++; } j++; } printf("%d\n",sum); sum=0; j=0; } return0; }  
c -1
h -1
intmain() { intn; int@@ o@@ ,@@ e,@@ p,@@ f; scanf("%d",&n); intnum@@ [100][100]; for(int@@ a@@ =0;a@@ <n;@@ a++) { for(int@@ b@@ =0;b@@ <n;@@ b++) { scanf("%d",&@@ num[@@ a@@ ][b@@ ]); } } for(int@@ c@@ =0;c@@ <=n;@@ c++) { for(int@@ d@@ =0;d@@ <=n;@@ d++) { if(@@ "@@ num[@@ c@@ ][@@ d@@ ]@@ ==0@@ "@@ ) { e=@@ c; f=@@ d; break; } else{@@ continue;} } } for(int@@ g=@@ n-1;@@ g@@ >0@@ ;@@ g@@ --) { for(int@@ h=@@ n-1;@@ h@@ >0@@ ;@@ h@@ --) { if(@@ "@@ num[@@ g@@ ][@@ h@@ ]@@ ==0@@ "@@ ) { o@@ =@@ g; p=@@ h; break; } else{@@ continue;} } } inti; i@@ =-@@ (@@ o@@ -@@ e@@ -1)@@ *(p@@ -@@ f@@ -1)@@ /@@ 7@@ ; if(i==@@ 9) { printf("%d",@@ i); } elseif(i==@@ 3) printf("%d",@@ i@@ -1); return0;}  
c -1
h -1
0

intf(inta,int@@ min) { int@@ result@@ =1,i; if(a<@@ min) return0; else { for(i=min@@ ;i<=a;i++) { if(a%i==0) { result+=@@ f(a@@ /i,i); } } returnresult; } } intmain() { intn,a,@@ i; scanf("%d",&n); for(i=0;i<n;i++) { scanf("%d",&a); printf("%d\n",@@ f(a,@@ 2)); } return0; }  
c -1
h -1
struct@@ author { intnum; char@@ aut@@ [27]; }a[@@ 999]; voidmain() { void@@ search@@ (struct@@ author@@ b[@@ ],intn,@@ char@@ marker@@ ); intm,@@ i,@@ times@@ [@@ 30]={0}; int@@ length@@ =0,@@ j; intmax=0,@@ flag@@ =@@ 9@@ ; char@@ chac@@ ; scanf("%d",&m); for(i=0;i<m;i++) { scanf("%d%s",&@@ a[i].@@ num,&@@ a[i].@@ aut@@ ); length@@ =strlen(@@ a[i].@@ aut@@ ); for(j=0;j<@@ length@@ ;j++) { chac@@ =@@ a[i].@@ aut@@ [j]; times@@ [@@ chac@@ -'A']++; } } for(i=0;i<26;i++) { if(max<@@ times@@ [i]) { max=@@ times@@ [i]; flag@@ =i; } } printf("%c\n%d\n",@@ (char)(@@ flag@@ +'@@ A')@@ ,max); search@@ (a,@@ m,@@ (char)(@@ flag@@ +'@@ A')@@ ); } void@@ search@@ (struct@@ author@@ b[@@ ],intn,@@ char@@ marker@@ ) { inti,j; for(i=0;i<n;i++) { for(j=0;j<strlen(@@ b[i].@@ aut@@ );j++) { if(b[i].@@ aut@@ [j]==@@ marker@@ ) printf("%d\n",b[i].@@ num); } } }  
c -1
h -1
0

intmain() { introw,col,@@ i,j,k,@@ a[@@ 110][110@@ ]={0}; cin>>row>>col; for(i=0;i<row;i++) for(j=0;j<col;j++) cin>>*(*(a+i)+j); for(k=0;k<@@ row+col@@ -1;k++) { i=0; j=@@ k; while(j@@ >=0) { if((i@@ <row@@ )&&(@@ j@@ <col@@ )) cout<<@@ *(*(a+i)@@ +j)<<endl; i++; j--; } } return0; }  
c -1
h -1
main() { inti,j,k,@@ p; chara[@@ 300],b[@@ 300@@ ],c[@@ 300]; scanf("%s",a); scanf("%s",b); scanf("%s",c); p@@ =strlen(b); for(i=0;a[i]!='\0';i++) if(a[i]==@@ b[0]) { for(j=i,@@ k@@ =0@@ ;k<@@ p@@ ;j++@@ ,k++) { if(a[j]!=@@ b[k@@ ]@@ )break; } if(k==@@ p) { for(j=i,@@ k@@ =0@@ ;k<@@ p@@ ;j++@@ ,k++) a[j]=@@ c@@ [k]; printf("%s",@@ a)@@ ;break; } } if(a[i]==@@ '\0') printf("%s",a); }  
c -1
h -1
0

intmain() { intn,i,j,k,@@ m=0; cin>>n; inta[n]; for(i=0;i<n;i++) cin>>a[i]; for(i=0;i<=@@ n-@@ m;i++) { for(j=i+1;j<=@@ n-@@ m;j++) { if(a[j]==a[i]) { m=m+1; for(k=j@@ ;k<=@@ n-@@ m;k++) a[k]=a[k@@ +1]; j=j-1; } } } for(i=0;i<n-@@ m-1;i++) cout<<a[i]<<""; cout<<a[@@ n-@@ m@@ -1]@@ <<endl; return0; }  
c -1
h -1
structstudent { long@@ num; int@@ scorec@@ ; int@@ scorem@@ ; structstudent*next; }; structstudent*creat@@ (void) { structstudent*head,*@@ p0@@ ,*@@ p1,*p2; inti=0; head@@ =(structstudent*)malloc(len); head@@ ->next=NULL; scanf("%ld%d%d",&@@ head->@@ num,&@@ head->@@ scorec@@ ,&@@ head->@@ scorem@@ ); while(i<@@ 2) { p1=head; p0@@ =(structstudent*)malloc(len); scanf("%ld%d%d",&@@ p0->@@ num,&@@ p0->@@ scorec@@ ,&@@ p0->@@ scorem@@ ); while((@@ p0->@@ scorec@@ +@@ p0->@@ scorem@@ )@@ <=@@ (@@ p1->@@ scorec@@ +p1->@@ scorem@@ )&&(@@ p1->next@@ !=NULL@@ )) { p2=p1; p1=p1->next; } if((@@ p0->@@ scorec@@ +@@ p0->@@ scorem@@ )>@@ (@@ p1->@@ scorec@@ +p1->@@ scorem@@ )) { if(head@@ ==@@ p1@@ )@@ head=@@ p0; else@@ p2->next=@@ p0; p0->next@@ =p1; } else { p1->next=@@ p0; p0@@ ->next=NULL; } i++; } return(head); } structstudent*@@ sort(@@ structstudent*head@@ ,intn) { structstudent*@@ p0@@ ,*@@ p1,*p2; int@@ i=@@ 3@@ ; while(i<n) { p1=head; p0@@ =(structstudent*)malloc(len); scanf("%ld%d%d",&@@ p0->@@ num,&@@ p0->@@ scorec@@ ,&@@ p0->@@ scorem@@ ); while((@@ p0->@@ scorec@@ +@@ p0->@@ scorem@@ )@@ <=@@ (@@ p1->@@ scorec@@ +p1->@@ scorem@@ )&&(@@ p1->next@@ !=NULL@@ )) { p1=p1->next; } if((@@ p0->@@ scorec@@ +@@ p0->@@ scorem@@ )>@@ (@@ p1->@@ scorec@@ +p1->@@ scorem@@ )) { if(head@@ ==@@ p1@@ ) { p2=p1->next; (*@@ p2->next@@ ).@@ num=@@ p2->@@ num; (*@@ p2->next@@ ).@@ scorec@@ =@@ p2->@@ scorec@@ ; (*@@ p2->next@@ ).@@ scorem@@ =@@ p2->@@ scorem@@ ; p2->@@ num=@@ p1->@@ num; p2->@@ scorec@@ =p1->@@ scorec@@ ; p2->@@ scorem@@ =p1->@@ scorem@@ ; p1->@@ num=@@ p0->@@ num; p1->@@ scorec@@ =@@ p0->@@ scorec@@ ; p1->@@ scorem@@ =@@ p0->@@ scorem@@ ; } elseif(@@ p1@@ ==@@ head@@ ->next) { (*@@ p1->next@@ ).@@ num=@@ p1->@@ num; (*@@ p1->next@@ ).@@ scorec@@ =p1->@@ scorec@@ ; (*@@ p1->next@@ ).@@ scorem@@ =p1->@@ scorem@@ ; p1->@@ num=@@ p0->@@ num; p1->@@ scorec@@ =@@ p0->@@ scorec@@ ; p1->@@ scorem@@ =@@ p0->@@ scorem@@ ; } else { p1->@@ num=@@ p0->@@ num; p1->@@ scorec@@ =@@ p0->@@ scorec@@ ; p1->@@ scorem@@ =@@ p0->@@ scorem@@ ; } } free(@@ p0@@ ); i++; } return(head); } voidmain() { structstudent*head,*p1,*p2; intn; scanf("%d",&n); head=creat(); head=@@ sort(@@ head,@@ n); p1=@@ head->next; p2=p1->next; printf("%ld%d\n",@@ head->@@ num,@@ (@@ head->@@ scorec@@ +@@ head->@@ scorem@@ )); printf("%ld%d\n",@@ p1->@@ num,@@ (@@ p1->@@ scorec@@ +p1->@@ scorem@@ )); printf("%ld@@ %d",@@ p2->@@ num,@@ (@@ p2->@@ scorec@@ +@@ p2->@@ scorem@@ )); }  
c -1
h -1
0

structbook { intnum; charname@@ [27]; structbook*next; }; structbook*@@ creat@@ (intn) { structbook@@ *head,*p1,*p2; intm=0; head@@ =p1@@ =p2@@ =NULL; p1=p2=(struct@@ book@@ *)malloc(sizeof(structbook)); scanf("%d%s",&p1->num,p1->name); while(1) { m@@ +=1; if(m@@ >=@@ n@@ )break; if(m@@ ==1)head=p1; elsep2->next=p1; p2=p1; p1=(structbook@@ *)malloc(sizeof(structbook)); scanf("%d%s",&p1->num,p1->name); } p2->next=p1; p2=p1; p2->next=NULL; return(head); } voidmain() { structbook@@ *head,*p; char@@ maxchar@@ ; intm,@@ i=0,@@ max=0,@@ a[@@ 26]={0}; scanf("%d",&m); head=creat@@ (m); for(p=head@@ ;p!=NULL;p=p->next) { for(i=0;@@ p->@@ name@@ [i]!='\0';i++) { int@@ c=@@ p->@@ name@@ [i]@@ -'A'; a[c@@ ]++; } } for(i=0;i<26;i++) { if(a[i]>max) { max=a[i]; maxchar@@ ='A'+i; } } printf("%c\n%d\n",@@ maxchar@@ ,max); for(p=head@@ ;p!=NULL;p=p->next) for(i=0;@@ p->@@ name@@ [i]!='\0';i++) { if(p->@@ name@@ [i]==@@ maxchar@@ ) { printf("%d\n",p->num); break; } } }  
c -1
h -1
intmain() { intk,@@ i,n,@@ j,@@ count,@@ r=0; inta[1000]; scanf("%d%d",&n,&k); for(i=0;i<n;i++) { scanf("%d",&a[i]); } for(i=0;i<n;i++) { for(j=i+1;j<n;j++) { count=@@ a[i]+a[j]; if(count@@ ==k) { printf("yes"); break; } if(count@@ !=@@ k) { r++; } } if(count@@ ==k) { break; } } if(r@@ ==@@ (n@@ *(@@ n-1)@@ /2@@ )&&(@@ a[@@ n-1@@ ]+@@ a[@@ n-2@@ ])@@ !=@@ k) { printf("no"); } return0; }  
c -1
h -1
0

main() { intn,i,j,@@ d; scanf("%d",&n); int*p=@@ (int*)malloc(n*sizeof(int)); int*@@ q=@@ (int*)malloc(n*sizeof(int)); for(i=0;i<n;i++)@@ scanf("%d",&@@ p[i]); q@@ [n-1@@ ]=1; for(i=n-2;i>=0;i--) { q@@ [i]=1; d=0; for(j=i+1;j<n;j++) { if(p@@ [i]>=@@ p@@ [j]) if(d@@ <@@ q@@ [j]@@ )@@ d=@@ q@@ [j]; } q@@ [i]=@@ q@@ [i]+@@ d; } for(i=0;i<n;i++) if(d@@ <@@ q@@ [i])@@ d=@@ q@@ [i]; printf("%d\n",@@ d); }  
c -1
h -1
intmain() { intn; scanf("%d",&n); intsz[100][100]; inti,j,@@ a,b,c,d,@@ x; for(i=0;i<n;i++) { for(j=0;j<n;j++){ scanf("%d",&sz[i][j]); } } int@@ tag@@ ; for(i=0;i<n;i++){ tag@@ =0; for(j=0;j<n;j++){ if((@@ sz@@ [i][j]@@ ==0)&&(@@ sz[i]@@ [j-1]@@ !=0)&&(@@ sz@@ [i-1][j]@@ !=0@@ )){ a=i; b=j; tag@@ =1; break; } } if(tag@@ ==1){@@ break;} } for(i=n-1;i>=0;i--){ for(j=n-1@@ ;j>=0;j--){ if((@@ sz@@ [i][j]@@ ==0)&&(@@ sz@@ [i+1][j]@@ !=0)&&(@@ sz[i]@@ [j+1]@@ !=0@@ )){ c=i; d=j; tag@@ =@@ 2; break; } } if(tag@@ ==@@ 2@@ ){@@ break;} } x@@ =(@@ c-a-1)*(d-b-1); printf("%d",x); return0; }  
c -1
h -1
0

intmain() { intk,@@ l,@@ m,n,@@ i,j,@@ sum=0; int@@ array[100][100]; cin>>k; for(l=1;l@@ <=k;@@ l++) { sum=0; cin>>m>>n; if(m@@ ==1||@@ n@@ ==1) { for(i=0;i<m;i++) { for(j=0;j<n;j++) { cin>>array[i][j]; sum+=@@ array@@ [i][j]; } } cout<<sum<<endl; break; } i=0; for(j=0;j<n;j++) { cin>>array@@ [0]@@ [j]; sum+=@@ array@@ [0]@@ [j]; } for(i=1;i<m-1;i++) { for(j=0;j<n;j++) {@@ cin>>array@@ [i][j]@@ ;} sum=sum+@@ array@@ [i]@@ [0]+@@ array@@ [i]@@ [j-1]; } i=@@ m-1@@ ; for(j=0;j<n;j++) { cin>>array@@ [m@@ -1][j]; sum+=@@ array@@ [m@@ -1][j]; } cout<<sum<<endl; } return0; }  
c -1
h -1
intmain() { charstr@@ [1000]; char@@ sub@@ [257],@@ rep@@ [257]; inti,j,k,@@ ss@@ =0,@@ se@@ =0; gets(str); gets(sub); gets(@@ rep); for(i=0;@@ str@@ [i]@@ !=0;i++) { if(str[i]==@@ sub@@ [0]) { for(k@@ =i+1@@ ,j@@ =1;@@ str@@ [k]@@ !=0&&@@ sub@@ [j]@@ !=0@@ ;k++@@ ,j@@ ++) { if(str@@ [k]@@ !=@@ sub@@ [j]) { break; } } if(@@ sub@@ [j]@@ ==0) { ss@@ =i; se@@ =k; break; } } } if(@@ ss@@ <@@ se@@ ){ if(strlen(@@ sub)@@ <=@@ strlen(@@ rep@@ )) { for(i=@@ ss@@ ,j@@ =0;@@ rep@@ [j]@@ !=0@@ ;i++,j@@ ++){ str[i]=@@ rep@@ [j]; } for(k=@@ se@@ ;@@ str@@ [k]@@ !=0@@ ;k++@@ ,i++) { str[i]=@@ str@@ [k]; } for(i=@@ ss@@ ,j@@ =0;@@ rep@@ [j]@@ !=0@@ ;i++,j++) { str[i]=@@ rep@@ [j]; } } } printf(@@ str); return0; }  
c -1
h -1
0

intmain() { intm; cin>>m; charstr@@ [1000][@@ 26]; inta[@@ 1000],@@ count@@ [26]={0}; intt=0; int@@ shu@@ =0; for(inti=0;i<m;i++) { t=0; cin>>a[i]; cin>>@@ str@@ [i]; t@@ =strlen(@@ str[i]); for(intj=0;j<@@ t;j++) { shu@@ =@@ str@@ [i][j]@@ -'A'; count[@@ shu@@ ]++; } } intmax=@@ count@@ [0]; int@@ hao@@ =0; for(intk@@ =1@@ ;k<@@ 26@@ ;k++) { if(count@@ [k]@@ >max) { max=count@@ [k]; hao@@ =k; } } char@@ c=@@ hao@@ +'A'@@ ; cout<<@@ c@@ <<endl; cout<<max<<endl; for(intl@@ =0;@@ l<@@ m;@@ l++) { for(int@@ o@@ =0;@@ str@@ [l@@ ][@@ o@@ ]!='\0'@@ ;@@ o@@ ++) { if(str@@ [l@@ ][@@ o@@ ]==@@ c) { cout<<@@ a[l@@ ]<<endl; break; } } } return0; }  
c -1
h -1
intmain() { intn,i,j,@@ x1,y1,x2,y2@@ ,@@ situ@@ =1; inta[100][100]; scanf("%d",&n); for(i=0;i<n;i++){ for(j=0;j<n;j++){ scanf("%d",&a[i][j]); if(a[i][j]@@ ==0){ y2@@ =i;@@ x2@@ =j; } } } for(i=0;@@ situ@@ ;i++){ for(j=0;j<n;j++){ if(a[i][j]@@ ==0){ x1@@ =j@@ ;@@ y1@@ =i; situ@@ =0; break; } else{@@ continue;} } } n@@ =(@@ x2-x1@@ +1)*(@@ y2-y1@@ +1)@@ -(@@ 2@@ *(@@ x2-x1@@ +1)@@ +@@ 2@@ *(@@ y2-y1@@ +1)@@ -@@ 4@@ ); printf("%d",n); return0; }  
c -1
h -1
0

intmain() { intk=0,@@ n=0,@@ m=0,@@ i=0,@@ w@@ =0,@@ j=0,@@ sum=0,@@ s[@@ 101][@@ 101@@ ]={0}; cin>>k; for(@@ w@@ =1;@@ w@@ <=k;@@ w@@ ++) { sum=0; cin>>n>>m; for(i=1;i<=n;i++) { for(j=1;j<=m;j++) { cin>>@@ *(@@ s[i]@@ +j); if((i@@ ==1)@@ ||(@@ i==@@ n@@ )||(@@ j@@ ==1)@@ ||(@@ j==@@ m@@ )) sum+=*(@@ s[i]@@ +j); } } cout<<sum<<endl; } return0; }  
c -1
h -1
void@@ right@@ (@@ chara[@@ ],int@@ l@@ ,int@@ t) { inti; for(i=@@ l@@ ;i@@ >=@@ t@@ ;i--) a[i]=@@ a[i@@ -1]; a[l@@ +1@@ ]='\0'; } void@@ left@@ (@@ chara[@@ ],int@@ l@@ ,int@@ t) { inti; for(i=@@ t@@ ;i<=@@ l@@ ;i++) a[i@@ -2@@ ]=a[i@@ -1]; a[l@@ -1]@@ ='\0'; } intmain() { chara[@@ 256]; charb[@@ 256]; charc[@@ 256]; inti,j,@@ l1,l2,@@ l3@@ ,@@ d,@@ e,@@ s,@@ r; scanf("%s",a); scanf("%s",b); scanf("%s",c); l1@@ =strlen(a); l2@@ =strlen(b); l3@@ =strlen(c); if(@@ l2@@ >@@ l3@@ ) { s=1; r=@@ l2@@ -@@ l3@@ ; } elseif(@@ l2@@ ==@@ l3@@ ) s=@@ r=0; else { s@@ =-1; r=@@ l3@@ -@@ l2@@ ; } for(i=1;i<=@@ l1@@ ;i++) { e=@@ a[i-1]@@ -@@ b[0]; if(e@@ ==0) { d=0; for(j=1;j<=@@ l2@@ -1;j++) { e=@@ a[i+j@@ -1]@@ -@@ b[j]; if(e@@ !=0) d=1; } if(d@@ ==0) { for(j=1;j<=@@ r@@ ;j++) { if(s@@ >0) left@@ (a,@@ l1@@ ,i@@ +@@ l2@@ ); if(s@@ <0) right@@ (a,@@ l1,@@ i); } for(j=1;j<=@@ l3@@ ;j++) a[i+j@@ -2@@ ]=@@ c@@ [j-1]; break; } } } printf("%s",a); return0; }  
c -1
h -1
0

int@@ mhang@@ (int@@ a){ return@@ a@@ +1; } int@@ mlie@@ (int@@ a){ return@@ a@@ -1; } intmain() { intsz[100][100]; introw,col,@@ i,j,@@ hang@@ =0,@@ lie@@ =0; scanf("%d%d",&row,&col); for(i=0;i<row;i++){ for(j=0;j<col;j++){ scanf("%d",&sz[i][j]); } } for(i=0;i<@@ col@@ ;i++){ hang@@ =0; lie@@ =i; while(1){ printf("%d\n",@@ sz[@@ hang@@ ][@@ lie@@ ]); hang@@ =@@ mhang@@ (@@ hang@@ ); lie@@ =@@ mlie@@ (@@ lie@@ ); if(@@ hang@@ >=@@ row@@ ||@@ lie@@ <0@@ ){ break; } } } for(i=1;i<@@ row;i++){ hang@@ =i; lie@@ =@@ col-1; while(1){ printf("%d\n",@@ sz[@@ hang@@ ][@@ lie@@ ]); hang@@ =@@ mhang@@ (@@ hang@@ ); lie@@ =@@ mlie@@ (@@ lie@@ ); if(@@ hang@@ >=@@ row@@ ||@@ lie@@ <0@@ ){ break; } } } return0; }  
c -1
h -1
intmain(intargc,char*argv[]) { inta,b,c,@@ x=0,@@ i; scanf("%d%d%d",&a,&b,&c); for(i=1;i<@@ b;i++) { if(i==1||i==3||i==5||i==7||i==8||i==10@@ ||i==@@ 12) {@@ x=x+@@ 31@@ ;} elseif(i==@@ 2@@ ){ x=x+@@ 28@@ ;} else x=x+@@ 30; } if(((@@ a%@@ 4==0)&&(@@ a%100!=0@@ )||(@@ a%@@ 400==0)@@ )&&(@@ b@@ >2@@ )){ x=x@@ +1;} x=x@@ +c; printf("%d\n",x); return0; }  
c -1
h -1
0

intmain() { intn,@@ number,@@ i,j,k,@@ t,@@ len,@@ max; int@@ map@@ [26@@ ][@@ 1000]={0}; charname@@ [27]; cin>>n; for(i=0;i<=25;i++) map@@ [i][0]@@ =0; for(i=1;i<=n;i++) { cin>>@@ number@@ >>@@ name@@ ; len=strlen(@@ name); for(j=0;j<=@@ len@@ -1;j++) { k=@@ name@@ [j]@@ -'A'; map@@ [k@@ ][0]@@ ++; t=@@ map@@ [k@@ ][0]; map@@ [k@@ ][@@ t@@ ]=@@ number; } } max=0; for(i=0;i<=25;i++) { if(@@ map@@ [i][0]@@ >max) { max=@@ map@@ [i]@@ [0]; k=i; } } cout<<@@ (char)(@@ 65@@ +k@@ )<<endl; cout<<@@ map@@ [k@@ ][0]; for(i=1;i<=@@ map@@ [k@@ ][0]@@ ;i++) cout<<@@ endl@@ <<@@ map@@ [k]@@ [i]; return0; }  
c -1
h -1
intmain() { double@@ per@@ ; double@@ SUM@@ ,@@ sum=0; int@@ len; char@@ DNA@@ [500]; char@@ dna@@ [500]; scanf("%lf",&@@ per@@ ); scanf("%s",&@@ DNA@@ ); scanf("%s",&@@ dna@@ ); SUM@@ =strlen(@@ DNA@@ ); len=strlen(@@ dna@@ ); if(@@ SUM@@ !=@@ len@@ ) { printf("error\n"); return0; } for(intj=0;j<@@ SUM@@ ;j++) { if(@@ DNA@@ [j]!='@@ A'&&@@ DNA@@ [j]!='@@ T'&&@@ DNA@@ [j]!='@@ C'&&@@ DNA@@ [j]!='@@ G') { printf("error\n"); return0; } if(@@ dna@@ [j]!='@@ A'&&@@ dna@@ [j]!='@@ T'&&@@ dna@@ [j]!='@@ C'&&@@ dna@@ [j]!='@@ G') { printf("error\n"); return0; } } for(inti=0;i<@@ SUM@@ ;i++) { if(@@ DNA@@ [i]==@@ dna@@ [i]) { sum++; } } SUM@@ =@@ sum/@@ SUM@@ ; if(@@ SUM@@ >@@ per@@ ) { printf("yes\n"); } else { printf("no\n"); } return0; }  
c -1
h -1
0

int@@ fen@@ (intm,int@@ k) { inti,@@ t@@ =1,@@ n=0; for(i=2;i<=@@ m;i++) { if(m@@ %i==0)@@ n++; } if(n@@ ==1||@@ m@@ ==1)@@ return1; else for(i=2;i<=@@ m;i++) { if(m@@ %i==0&&@@ m@@ /i@@ >=i@@ &&i@@ >=@@ k) { k=i; t=t+@@ fen@@ (m@@ /i,@@ k); } } return@@ t; } intmain() { int@@ fen@@ (intm,int@@ k); intn,i,@@ x; scanf("%d\n",&n); for(i=0;i<n;i++) { scanf("%d",&x); printf("%d\n",@@ fen@@ (x,@@ 1@@ )); } }  
c -1
h -1
intm,n; inta[100],b[100]; int@@ ans@@ [@@ 200]; voidread@@ (inta[],intb[]) { cin>>m; cin>>n; for(inti=1;i<=@@ m;i++) cin>>a[i]; for(inti=1;i<=n;i++) cin>>b[i]; } voidsort@@ (inta[],int@@ m) { inttemp; for(inti=1;i<@@ m;i++) { for(intj=i+1@@ ;j<=@@ m;j++) { if(a[i]>a[j]) { temp=a[i]; a[i]=a[j]; a[j]=@@ temp; } } } } void@@ add@@ (inta[],intb[]) { for(inti=1;i<=@@ m;i++) ans@@ [i]=@@ a[i]; for(inti=1;i<=n;i++) ans@@ [m@@ +i]=b[i]; } voidout@@ (inta[],int@@ m) { cout<<@@ a[1]; for(inti=2;i<=@@ m;i++) cout<<'@@ '@@ <<@@ a[i]; } intmain() { read@@ (a,b); sort@@ (a,m); sort@@ (b,n); add@@ (a,b); out@@ (@@ ans@@ ,@@ m+@@ n); return0; }  
c -1
h -1
0

intmain() { intn,k,@@ s[@@ 1000],@@ i,j; scanf("%d%d",&n,&k); for(i=0;i<n;i++) { scanf("%d",&s[i]); } for(i=0;i<n;i++) { for(j=0;j<i;j++) { if(s@@ [i]+@@ s@@ [j]==k) { printf("yes"); return0; } } for(j=i+1;j<n;j++) { if(s@@ [i]+@@ s@@ [j]==k) { printf("yes"); return0; } } } printf("no"); return0; }  
c -1
h -1
structstu { intnum; int@@ yu@@ ; int@@ shu; int@@ tol@@ ; structstu*next; }; intn; structstu*@@ creat@@ (void) { structstu*@@ p1,*p2,*@@ head@@ ,*p; inti,@@ k; p1=p2=(struct@@ stu*)malloc(sizeof(structstu)); scanf("%d%d%d",&p1->num,&p1->@@ yu@@ ,&p1->@@ shu); p1->@@ tol@@ =p1->@@ yu@@ +p1->@@ shu; p1->next@@ =0; head=p1; p=@@ p1; p1=(struct@@ stu*)malloc(sizeof(structstu)); for(i=1;i<n;i++) { p=head; p2=p1; k=0; scanf("%d%d%d",&p1->num,&p1->@@ yu@@ ,&p1->@@ shu); p1->@@ tol@@ =p1->@@ yu@@ +p1->@@ shu; while(p@@ !=0&&@@ p->@@ tol@@ >=@@ p1->@@ tol@@ ) { p2=@@ p; p=p->next; k++; } if(k@@ <=@@ 3) { if(p==@@ head@@ ) { head=p1; p1->next@@ =p; } if(p@@ ==0) { p2->next=p1; p1->next@@ =0; } if(p@@ !=@@ head@@ &&p@@ !=0) { p2->next=p1; p1->next@@ =p; } } p1=(struct@@ stu*)malloc(sizeof(structstu)); } returnhead; } voidmain() { structstu@@ *head,*p; inti=0; scanf("%d",&n); head=creat(); p=head; while(i<@@ 3) { printf("%d%d\n",@@ p->@@ num,@@ p->@@ tol@@ ); i++; p=p->next; } }  
c -1
h -1
0

voidmain() { intm,i,j,@@ temp,@@ max; chara[@@ 1000][@@ 10@@ ],b[@@ 1000][@@ 20],@@ w; intc[@@ 26]; scanf("%d",&m); for(i=0;i<26@@ ;i++)@@ c[i]@@ =0; for(i=0;i<m;i++) { scanf("%s%s",@@ a[i],@@ b[i]); } for(i=0;i<m;i++) { for(j=0;j<strlen(@@ b[i]@@ );j++) { if(b[i][j]=='@@ A')@@ c@@ [0]@@ ++; if(b[i][j]=='@@ B@@ ')c[@@ 1@@ ]++; if(b[i][j]=='@@ C')@@ c[@@ 2@@ ]++; if(b[i][j]=='@@ D@@ ')c[@@ 3@@ ]++; if(b[i][j]=='@@ E@@ ')c[@@ 4@@ ]++; if(b[i][j]=='@@ F@@ ')c[@@ 5@@ ]++; if(b[i][j]=='@@ G')@@ c[@@ 6@@ ]++; if(b[i][j]=='@@ H@@ ')c[@@ 7@@ ]++; if(b[i][j]=='@@ I@@ ')c[@@ 8@@ ]++; if(b[i][j]=='@@ J@@ ')c[@@ 9@@ ]++; if(b[i][j]=='@@ K@@ ')c[@@ 10@@ ]++; if(b[i][j]=='@@ L@@ ')c[@@ 11@@ ]++; if(b[i][j]=='@@ M@@ ')c[@@ 12@@ ]++; if(b[i][j]=='@@ N@@ ')c[@@ 13@@ ]++; if(b[i][j]=='@@ O@@ ')c[@@ 14@@ ]++; if(b[i][j]=='@@ P@@ ')c[@@ 15@@ ]++; if(b[i][j]=='@@ Q@@ ')c[@@ 16@@ ]++; if(b[i][j]=='@@ R@@ ')c[@@ 17@@ ]++; if(b[i][j]=='@@ S@@ ')c[@@ 18@@ ]++; if(b[i][j]=='@@ T')@@ c[@@ 19@@ ]++; if(b[i][j]=='@@ U@@ ')c[@@ 20@@ ]++; if(b[i][j]=='@@ V@@ ')c[@@ 21@@ ]++; if(b[i][j]=='@@ W@@ ')c[@@ 22@@ ]++; if(b[i][j]=='@@ X@@ ')c[@@ 23@@ ]++; if(b[i][j]=='@@ Y@@ ')c[@@ 24@@ ]++; if(b[i][j]=='@@ Z@@ ')c[@@ 25@@ ]++; } } for(i=0;i<26;i++) {@@ temp=0; for(j=0;j<26;j++) { if(c@@ [i]>=@@ c@@ [j]) { temp@@ ++; } } if(temp@@ ==@@ 26@@ ){@@ max@@ =i;@@ break;} } w@@ ='A'+i; printf("%c\n",@@ w); printf("%d\n",@@ c[i]); for(i=0;i<m;i++) { for(j=0;j<strlen(@@ b[i]@@ );j++) { if(b[i]@@ [j]==@@ w@@ ){@@ printf("%s\n",@@ a[i]@@ );break;} } } }  
c -1
h -1
intmain(intargc,char*argv[]) { intyear,month,day,@@ which@@ ; scanf("%d%d%d",&year,&month,&day); which@@ =@@ day; month@@ --; if(month@@ >0){ which@@ +=@@ 31; month@@ --; } if(month@@ >0){ if(year%@@ 4@@ !=0)@@ which@@ +=@@ 28; elseif(@@ year%@@ 100==0&&@@ year%@@ 400@@ !=0)@@ which@@ +=@@ 28; else@@ which@@ +=@@ 29; month@@ --; } if(month@@ >0){ which@@ +=@@ 31; month@@ --; } if(month@@ >0){ which@@ +=@@ 30; month@@ --; } if(month@@ >0){ which@@ +=@@ 31; month@@ --; } if(month@@ >0){ which@@ +=@@ 30; month@@ --; } if(month@@ >0){ which@@ +=@@ 31; month@@ --; } if(month@@ >0){ which@@ +=@@ 31; month@@ --; } if(month@@ >0){ which@@ +=@@ 30; month@@ --; } if(month@@ >0){ which@@ +=@@ 31; month@@ --; } if(month@@ >0){ which@@ +=@@ 30; month@@ --; } printf("%d",@@ which@@ ); return0; }  
c -1
h -1
0

intmain() {@@ char@@ p=0; intm,i,j,@@ max@@ [1000]; structbook{ intnum; chars[@@ 27]; }@@ book[1000]; memset(@@ max,@@ 0,sizeof(@@ max@@ )); scanf("%d",&m); for(i=0;i<m;i++) {@@ scanf("%d%s",&book[i].num,@@ book[i].@@ s@@ );} for(i=0;i<m;i++) {@@ for(j=0;@@ book[i].@@ s[j]@@ ;j++) {if(@@ ++@@ max@@ [@@ book[i].@@ s[j]@@ ]@@ >max@@ [p@@ ]) p=@@ book[i].@@ s[j]; }} printf("%c\n%d\n",@@ p,@@ max@@ [p@@ ]); for(i=0;i<m;i++) {if(@@ strchr(@@ book[i].@@ s,@@ p@@ )) printf("%d\n",book[i].@@ num@@ );} return0; }  
c -1
h -1
main() { intn,i,j,@@ f; intk=0; scanf("%d",&n); chara[100@@ ][@@ 2000@@ ],@@ e@@ [11]; char@@ d@@ [100][@@ 2000]; intb[100@@ ]; int@@ c[100]; for(i=0;i<=n-1;i++) scanf("%s%d",@@ a[i],&@@ b[i]); for(i=0;i<n;i++) { if(b[i]@@ >=60) { c@@ [k]=@@ b[i]; strcpy(@@ d@@ [k],@@ a[i]); k++; } } for(j=k@@ -2@@ ;j>=0;j--) { for(i=j@@ ;i<=@@ k@@ -2;i++) { if(c@@ [i]<@@ c@@ [i+1]) { strcpy(@@ e,@@ d[i]); strcpy(@@ d@@ [i],@@ d@@ [i+1]); strcpy(@@ d@@ [i+1],@@ e); f=@@ c[i]@@ ;@@ c[i]=@@ c@@ [i+1@@ ];@@ c@@ [i+1]=@@ f; } } } for(i=0;i<k;i++) printf("%s\n",@@ d[i]); k=0; for(i=0;i<n;i++) { if(b[i]@@ <60) { c@@ [k]=@@ b[i]; strcpy(@@ d@@ [k],@@ a[i]); k++; } } for(i=0;i<k;i++) printf("%s\n",@@ d[i]); }  
c -1
h -1
0

intmain() { inti,j,n,@@ m,@@ k,@@ sum; inta[100][100]; cin>>k; while(k@@ >0) { sum=0; k--; cin>>m>>n; for(i=0;i<m;i++) for(j=0;j<n;j++) cin>>*(*(a+i)+j); for(j=0;j<n;j++) { if(m==1) sum+=*(@@ *a@@ +j); else sum+=*(@@ *a@@ +j)@@ +*(@@ *(a@@ +m-1)@@ +j); } for(i=1;i<m-1;i++) sum+=@@ a[i][0]+@@ a[i][n-1]; cout<<sum<<endl; } return0; }  
c -1
h -1
voidmain() { ints[@@ 16],@@ i,n,@@ a=0,@@ j; scanf("%d",&s@@ [0]); loop@@ : a=0; i=1; do { scanf("%d",&s[i]); i++; } while(@@ s@@ [i-1]@@ !=0); n@@ =i-1; for(i=0;i<n;i++) { for(j=1;j<@@ n@@ -i;j++) if(s[i]==@@ 2*@@ s[i+j@@ ]@@ ||@@ s[i+j@@ ]==@@ s[i]@@ *2@@ )@@ a=@@ a@@ +1; } printf("%d\n",@@ a); scanf("%d",&s@@ [0]); if(s@@ [0]@@ !=@@ -1)@@ goto@@ loop@@ ; }  
c -1
h -1
0

struct@@ info { intnum; charauthor@@ [30]; struct@@ info@@ *next; }; struct@@ info@@ *@@ create@@ (intn) { struct@@ info@@ *@@ p1,*p2,*head; inti; p1=(struct@@ info@@ *)malloc(sizeof(struct@@ info@@ )); scanf("%d%s",&p1->num,p1->@@ author); p1->next=NULL; p2=p1; head=p1; i=1; while(i<n) { p1=(struct@@ info@@ *)malloc(sizeof(struct@@ info@@ )); scanf("%d%s",&p1->num,p1->@@ author); p1->next=NULL; p2->next=p1; p2=p1; i++; } returnhead; } intmain() { intn,i,@@ t,@@ index@@ ,j; struct@@ info@@ *head,*p; int*@@ g; scanf("%d",&n); head=@@ create@@ (n); g=@@ (int*)malloc(@@ 26@@ *sizeof(int)); p=head; for(i=0,@@ t@@ =0;i<@@ 26;i++) { *(@@ g@@ +i)@@ =0; } for(i=0;i<n;i++) { j=0; while(@@ *(@@ p->@@ author@@ +j)@@ !='\0') {@@ (*(@@ g@@ +@@ (*(@@ p->@@ author@@ +j)@@ )@@ -65@@ ))@@ ++@@ ;j++@@ ;} p=p->next; } for(i=0,@@ t@@ =0;i<@@ 26;i++) { if(*(@@ g@@ +i)@@ >@@ t) {@@ t@@ =*(@@ g@@ +i@@ );@@ index@@ =i;} } printf("%c\n",@@ index@@ +65); printf("%d\n",*(@@ g@@ +@@ index@@ )); p=head; for(i=0;i<n;i++) { j=0; while(@@ *(@@ p->@@ author@@ +j)@@ !='\0') {if(@@ *(@@ p->@@ author@@ +j)@@ ==@@ index@@ +65) {@@ printf("%d\n",p->@@ num@@ );} j++; } p=p->next; } }  
c -1
h -1
intmain(intargc,char*argv[]) { int@@ a@@ =1,@@ i=0,@@ j,k,@@ n=0,@@ zs@@ =0; intnum[@@ 15]; while(@@ a@@ !=@@ -1){ scanf("%d",&a); if(a@@ !=0){ num[i]=@@ a; n++; i++; } else{ for(j=0;j<n;j++){ for(k=0;k<n;k++){ if(num@@ [j]==2*@@ num@@ [k]@@ ){ zs@@ ++;@@ }}} printf("%d\n",@@ zs@@ ); i=0; n=0; zs@@ =0;} } return0; }  
c -1
h -1
0

intmain() { intn,k,i,j,@@ sz[@@ 1000],@@ m; scanf("%d%d",&n,&k); for(i=0;i<n;i++){ scanf("%d",@@ (@@ &@@ sz[i]@@ )); } for(i=0;i<n@@ -2@@ ;i++){ for(j=i+1;j<@@ n-1@@ ;j++){ for(m@@ =j+1@@ ;m@@ <n;m++){ if(sz[i]+sz@@ [j]+@@ sz[m@@ ]==k){ printf("yes"); return0; } } } } printf("no"); return0; }  
c -1
h -1
intmain() { inta[@@ 12]={31,@@ 28,31,30,31,30,31,31,30,31,30,31@@ },@@ year@@ =0,@@ mon@@ =0,@@ day@@ =0,@@ i=0,@@ sum=0; cin>>year>>@@ mon@@ >>@@ day; if((@@ year%@@ 100==0&&@@ year%@@ 400==0)||(@@ year%100!=0@@ &&@@ year%@@ 4@@ ==0)) a[1]=29; for(i=0;i<@@ mon@@ -1;i++) sum=sum+@@ a[i]; sum=sum+day; cout<<sum<<endl; return0; }  
c -1
h -1
0

intmain(){ double@@ v@@ ; scanf("%lf\n",&@@ v@@ ); chars[@@ 600@@ ],@@ z[@@ 600]; scanf("%s\n@@ %s",@@ s,@@ z); inta,b; a@@ =strlen(s); b=strlen(@@ z); intm,n,@@ p=0,@@ q=0; for(m=0;m<@@ a@@ ;m++){ if(s[@@ m@@ ]!='@@ A'&&@@ s[m@@ ]!='@@ T'&&@@ s[m@@ ]!='@@ C'&&@@ s[m@@ ]!='@@ G')@@ {@@ p@@ =1;} } for(n=0;n@@ <a@@ ;n++){ if(z@@ [n@@ ]!='@@ A'&&@@ z@@ [n@@ ]!='@@ T'&&@@ z@@ [n@@ ]!='@@ C'&&@@ z@@ [n@@ ]!='@@ G')@@ {@@ q@@ =1;} } int@@ w@@ =0; double@@ u@@ ; if(m!=@@ n@@ ||@@ q@@ ==1||@@ p@@ ==1){@@ printf("error");@@ w@@ =1;} intsum=0; for(n=0;n@@ <a@@ ;n++){ if(s[@@ n@@ ]==@@ z@@ [n@@ ]){@@ sum@@ ++;} } u@@ =1.0*@@ sum/@@ a; if(w@@ ==1){@@ ;} else{ if(@@ u@@ >@@ v@@ ){@@ printf("yes");@@ }@@ else{printf("no");} } return0; }  
c -1
h -1
struct@@ people { charnum[10]; intage; struct@@ people@@ *next; }; voidmain() { struct@@ people@@ *head,*@@ p0@@ ,*@@ p,*@@ s; head=(struct@@ people@@ *)malloc(sizeof(struct@@ people@@ )); head@@ ->next=NULL; intn,i; scanf("%d",&n); for(i=0;i<n;i++) { p0@@ =head; p=@@ p0@@ ->next; s@@ =(struct@@ people@@ *)malloc(sizeof(struct@@ people@@ )); s@@ ->next=NULL; scanf("%s%d",@@ s@@ ->@@ num,&@@ s@@ ->age@@ ); while(p@@ !=NULL@@ &&(@@ (@@ s@@ ->age@@ >=60&&@@ s@@ ->age@@ <=@@ p->age@@ )||@@ s@@ ->age@@ <60@@ )) { p0@@ =p; p=p->next; } p0@@ ->next=@@ s; s@@ ->next=p; } p=head->next; while(p!=NULL) { printf("%s\n",p->@@ num); p=p->next; } }  
c -1
h -1
0

intmain() { introw,col; intnum[@@ 120@@ ][@@ 120@@ ]; scanf("%d%d",&@@ row,@@ &@@ col); for(inti=0;i<row;i++) { for(intj=0;j<@@ col@@ ;j++)@@ scanf("%d",&@@ num@@ [i][j]); } for(intk=0@@ ;k<=@@ col@@ +row@@ -1;k++) { int@@ minRow@@ ,@@ minCol@@ ; if(k@@ <col@@ )@@ minRow@@ =0; elseminRow@@ =@@ k-@@ col@@ +1; if(k@@ <row@@ )@@ minCol@@ =0; elseminCol@@ =@@ k-@@ row@@ +1; for(inti=@@ minRow@@ ;i<=@@ k;i++) { if((@@ k@@ -i@@ )@@ >=@@ minCol@@ )@@ printf("%d\n",@@ num[i]@@ [k-i]); } } return0; }  
c -1
h -1
intmain() { intn; scanf("%d",&n); inti,j,k,@@ sum,@@ x,y; inta[100],b[100],@@ ar@@ [100][100]; for(i=0;i<n;i++){ scanf("%d%d",&@@ a[i],&@@ b[i]); x=@@ a[i]@@ -1; y=@@ b[i]@@ -1; for(j=0;j<@@ a[i]@@ ;j++){ for(k=0;k<@@ b[i]@@ ;k++){ scanf("%d",&@@ ar@@ [j]@@ [k]); } } sum=0; for(j=0;j<@@ a[i]@@ ;j++){ sum=sum+@@ ar@@ [j]@@ [0]+@@ ar@@ [j]@@ [y@@ ]; } for(k=0;k<@@ b[i]@@ ;k++){ sum=sum+@@ ar@@ [0][@@ k@@ ]+@@ ar@@ [x@@ ][k@@ ]; } sum=sum-@@ ar@@ [0][@@ 0]-@@ ar@@ [0][@@ y@@ ]-@@ ar@@ [x@@ ][0]-@@ ar@@ [x@@ ][y@@ ]; printf("%d\n",sum); sum=0; } return0; }  
c -1
h -1
0

voidmain() { inti,j=0,@@ n,@@ k; int*@@ head,*@@ p1,*p2; scanf("%d%d",&n,&k); head=@@ (int*)malloc(n*sizeof(int)); p1=head; for(i=0;i<n;i++) { scanf("%d",@@ p1); p1@@ ++; } for(p1=@@ head;@@ p1@@ <@@ head@@ +n;@@ p1@@ ++) { for(@@ p2@@ =p1@@ +1;@@ p2@@ <@@ head@@ +n;@@ p2@@ ++) { if(*@@ p1@@ +*@@ p2@@ ==@@ k){@@ printf("yes@@ "@@ )@@ ;j@@ =1;break;} } if(j@@ )break; } if(j@@ ==0)@@ printf("no"); }  
c -1
h -1
intmain() { intn,k,@@ s[@@ 1000],@@ i,j; scanf("%d%d",&n,&k); for(i=0;i<n;i++) { scanf("%d",&s[i]); } for(i=0;i<n;i++) { for(j=0;j<i;j++) { if(s@@ [i]+@@ s@@ [j]==k) { printf("yes"); return0; } } for(j=i+1;j<n;j++) { if(s@@ [i]+@@ s@@ [j]==k) { printf("yes"); return0; } } } printf("no"); return0; }  
c -1
h -1
1


intmain() { inta[@@ 20000],@@ k,@@ j,@@ b,@@ c,d,@@ e,f,@@ i; scanf("%d",&b); for(i=0;i<b;i++) {@@ scanf("%d",&a[i]);} printf("%d",a[0]); for(j=1;j<@@ b;j++) {@@ for(k=0;k<j@@ ;k++) {if(@@ a[k]==@@ a[j])@@ break;} if(k==@@ j)@@ printf("%d",@@ a[j]@@ );} return0; }  
c -1
h -1
intmain(){ structstudent{ int@@ stuno@@ ; int@@ score1@@ ; int@@ score2; int@@ score0@@ ; }; intn,i,j,@@ temp; cin>>n; structstudent@@ num[@@ n]; for(i=0;i<n;i++){ cin>>@@ num[i].@@ stuno@@ ; cin>>@@ num[i].@@ score1@@ ; cin>>@@ num[i].@@ score2; num[i].@@ score0@@ =@@ num[i].@@ score1@@ +@@ num[i].@@ score2; } for(i=0;i<3;i++) for(j=i+1;j<n;j++) if(num@@ [i].@@ score0@@ <@@ num@@ [j].@@ score0@@ ){ temp=@@ num[i].@@ score0@@ ; num[i].@@ score0@@ =@@ num@@ [j].@@ score0@@ ; num@@ [j].@@ score0@@ =temp; temp=@@ num[i].@@ stuno@@ ; num[i].@@ stuno@@ =@@ num@@ [j].@@ stuno@@ ; num@@ [j].@@ stuno@@ =temp; } for(i=0;i<@@ 3@@ &&i@@ <@@ n;i++) cout<<num@@ [i].@@ stuno@@ <<""<<@@ num[i].@@ score0@@ <<endl; return0; }  
c -1
h -1
0

int@@ dingwei@@ (char@@ duan@@ [50@@ ],@@ char@@ chang@@ [50@@ ]) { inti,@@ geshu1@@ =0,@@ geshu2@@ =0; for(i=0;@@ duan@@ [i]!='\0';i++){ geshu1@@ +=1; } for(i=0;@@ chang@@ [i]!='\0';i++){ geshu2@@ +=1; } intj,@@ cishu@@ =0,@@ weizhi@@ =0; for(i=0;i<=@@ (@@ geshu2@@ -@@ geshu1@@ );i++){ for(j=0;j<@@ geshu1@@ ;j++){ if(@@ duan@@ [j]==@@ chang@@ [i]){ cishu@@ ++; i++; }else{ break; } } if(@@ cishu@@ ==@@ geshu1@@ ){ weizhi@@ =i@@ -@@ geshu1@@ ; break; }else{ cishu@@ =0; continue; } } if(@@ cishu@@ ==0){ return-1; }else{ return@@ weizhi@@ ; } } intmain() { charzfc@@ [300],@@ beiti@@ [256],@@ ti@@ [256]; scanf("%s%s%s",@@ zfc@@ ,@@ beiti@@ ,@@ ti@@ ); int@@ lenzfc@@ ,@@ lenbt@@ ,@@ lent@@ ,@@ weizhi@@ ,i; lenzfc@@ =strlen(@@ zfc); lenbt@@ =strlen(@@ beiti@@ ); lent@@ =strlen(@@ ti@@ ); weizhi@@ =@@ dingwei@@ (@@ beiti@@ ,@@ zfc); if(@@ weizhi@@ <0@@ ){ printf("%s\n",@@ zfc); }else{ if(@@ lenbt@@ ==@@ lent@@ ){ for(i=0;i<@@ lenbt@@ ;i++){ zfc@@ [@@ weizhi@@ +i]=@@ ti@@ [i]; } } elseif(@@ lenbt@@ >@@ lent@@ ){ for(i=0;i<@@ lent@@ ;i++){ zfc@@ [@@ weizhi@@ +i]=@@ ti@@ [i]; } for(i=0;i<(@@ lenzfc@@ -@@ lenbt@@ -@@ weizhi@@ );i++){ zfc@@ [@@ weizhi@@ +@@ lent@@ +i]=@@ zfc@@ [@@ weizhi@@ +@@ lenbt@@ +i@@ ]; } zfc@@ [@@ lenzfc@@ -@@ lenbt@@ +@@ lent@@ ]='\0'; }elseif(@@ lenbt@@ <@@ lent@@ ){ for(i=@@ lenzfc@@ -1@@ ;i@@ >=@@ weizhi@@ +@@ lenbt@@ ;i--){ zfc@@ [i+@@ lent@@ -@@ lenbt@@ ]=@@ zfc@@ [i]; } for(i=0;i<@@ lent@@ ;i++){ zfc@@ [@@ weizhi@@ +i]=@@ ti@@ [i]; } zfc@@ [@@ lenzfc@@ +@@ lent@@ -@@ lenbt@@ ]='\0'; } printf("%s\n",@@ zfc); } return0; }  
c -1
h -1
intmain(intargc,char*argv[]) { int@@ x1,@@ x2,@@ n[@@ 15],@@ y; inti; intt; while(1){ i=0; while(1){ scanf("%d",&t); if(t==@@ -1){ return0; } if(t==0) break; else{ n[i]=@@ t; i++; } } y=0; for(@@ x1@@ =i@@ -1;@@ x1@@ >=0;@@ x1@@ --){ for(@@ x2@@ =@@ x1@@ -1;@@ x2@@ >=0;@@ x2@@ --){ if(n@@ [@@ x1@@ ]==@@ n[@@ x2@@ ]@@ *2@@ ||@@ n[@@ x2@@ ]==@@ n[@@ x1@@ ]*@@ 2) y@@ +=1; } } printf("%d\n",@@ y); } return0; }  
c -1
h -1
0

int@@ count; void@@ fun@@ (inti,int@@ j) { intk; for(k=i@@ ;k<=@@ sqrt(@@ j)@@ ;k++){ if(j@@ %@@ k@@ ==0){ count++; fun@@ (@@ k,@@ j@@ /@@ k); } } } intmain() { intN@@ ,@@ turn@@ ,@@ c; scanf("%d",&@@ turn@@ ); for(c@@ =1;@@ c@@ <=@@ turn@@ ;c@@ ++) { intn,i; scanf("%d",&n); for(i=2;i<=@@ sqrt(n@@ );i++){ if(n@@ %i==0){ count++; fun@@ (i,@@ n@@ /i); } } printf("%d\n",@@ count@@ +1); count=0; } }  
c -1
h -1
inta[100@@ ],b[100],c[@@ 200]; int@@ x,y; void@@ oh@@ () { inti; scanf("%d%d",&@@ x,&@@ y); for(i=0;i<x@@ -1;i++) scanf("%d",&a[i]); scanf("%d\n",&@@ a[x@@ -1]); for(i=0;i<@@ y@@ -1;i++) scanf("%d",&b[i]); scanf("%d\n",&@@ b[@@ y@@ -1]); } void@@ ba@@ () { inti,j,k; for(i=0;i<x;i++) for(j=i;j<@@ x;j++) { if(a[i]>a[j]) { k=@@ a[i]; a[i]=a[j]; a[j]=@@ k; } } for(i=0;i<y;i++) for(j=i;j<@@ y;j++) { if(b[i]>@@ b[j]) { k=@@ b[i]; b[i]=@@ b[j]; b[j]=@@ k; } } } void@@ zha@@ () { inti; for(i=0;i<x;i++) c[i]=a[i]; for(i=x@@ ;i<@@ x+@@ y;i++) c[i]=b[i-@@ x@@ ]; } void@@ hei@@ () { inti; for(i=0;i<@@ x+@@ y@@ -1;i++) { printf("%d",c[i]); } printf("%d",c[@@ x+@@ y@@ -1]); } intmain() { oh@@ (); ba@@ (); zha@@ (); hei@@ (); }  
c -1
h -1
0

intmain(){ intk,i,@@ m,@@ sz@@ [100][100],@@ row,col,@@ a,b; scanf("%d%d",&row,&col); for(a=0;a@@ <row@@ ;a@@ ++){ for(b=0;b@@ <col@@ ;@@ b++){ scanf("%d",&@@ sz[a@@ ][b@@ ]); } } if(row@@ >=@@ col@@ ){ for(k=0;k<col@@ ;k++){ for(i=0;i<=@@ k;i++){ printf("%d\n",@@ sz[i]@@ [k-i]); } } for(k=@@ col@@ ;k<@@ (@@ row+col@@ -1)@@ ;k++){ m=@@ k-@@ col@@ +1; for(i=0;@@ (i@@ <(@@ row@@ -@@ m)@@ &&i@@ <=@@ (@@ k-@@ m@@ ))@@ ;i++){ printf("%d\n",sz@@ [i@@ +m@@ ][k@@ -i@@ -m@@ ]); } } } else{ for(k=0;k<@@ row@@ ;k++){ for(i=0;i<=@@ k;i++){ printf("%d\n",@@ sz[i]@@ [k-i]); } } for(k=@@ row@@ ;k<@@ col@@ ;k++){ for(i=0;i<row;i++){ printf("%d\n",@@ sz[i]@@ [k-i]); } } for(k=@@ col@@ ;k<@@ row+col@@ -1@@ ;k++){ m=@@ k-@@ col@@ +1; for(i=0;i<@@ row@@ -@@ m;i++){ printf("%d\n",sz@@ [i@@ +m@@ ][k@@ -i@@ -m@@ ]); } } } return0; }  
c -1
h -1
intmain() { double@@ dz@@ ; char@@ xl1@@ [500],@@ xl2@@ [500]; scanf("%lf",&@@ dz@@ ); scanf("%s\n@@ %s",@@ xl1@@ ,@@ xl2@@ ); int@@ len1,len2@@ ; len1=strlen(@@ xl1@@ ); len2=strlen(@@ xl2@@ ); int@@ e=0; if(len1!=@@ len2){ printf("error"); e++; } inti; if(e@@ ==0){ for(i=0;i<len1;i++){ if((@@ xl1@@ [i]!='A'&&@@ xl1@@ [i]!='T'&&@@ xl1@@ [i]!='C'&&@@ xl1@@ [i]!='G')||(@@ xl2@@ [i]!='A'&&@@ xl2@@ [i]!='T'&&@@ xl2@@ [i]!='C'&&@@ xl2@@ [i]!='G')){ e++; } } if(e@@ !=0)@@ printf("error"); } intsum=0; if(e@@ ==0){ for(i=0;i<len1;i++){ if(@@ xl1@@ [i]==@@ xl2@@ [i])@@ sum++; } if(1.0*@@ sum/@@ len1@@ >@@ dz@@ )@@ printf("yes"); elseprintf("no"); } scanf("%d",&@@ e); return0; }  
c -1
h -1
0

intmain() { intn,k,@@ a,b,@@ c; int@@ z@@ [1000]; scanf("%d",&n); scanf("%d",&k); c=0; for(a=0;a@@ <=@@ n-1;@@ a++) { scanf("%d",&@@ z@@ [a@@ ]); } for(a=0;a@@ <=@@ n-1;@@ a++) { for(b=0;b@@ <=@@ n-1;@@ b++) { if(z@@ [a@@ ]+@@ z@@ [b@@ ]==@@ k)@@ c=1; } } if(c@@ ==1)@@ printf("yes"); elseprintf("no"); return0; }  
c -1
h -1
intmain() { chara[@@ 280@@ ],b[@@ 280@@ ],c[@@ 280@@ ]; char@@ res@@ [@@ 280@@ ]; char@@ t[@@ 280@@ ]; inti,j; int@@ check@@ =0; scanf("%s%s%s",a,b,c); for(i=0;i<@@ strlen(a)@@ ;i++) { if(@@ check@@ ==1)break; if(@@ b[0]@@ ==@@ a[i]) { for(j=0;j<@@ 280@@ ;j++)@@ t@@ [j]@@ ='\0'; for(j=0;j<@@ 280@@ ;j++)@@ res@@ [j]@@ ='\0'; for(j=i;j<i+@@ strlen(b@@ )@@ ;j++)@@ t@@ [j-i@@ ]=@@ a[j]; if(@@ strcmp@@ (b,@@ t)@@ ==0) { check@@ =1; for(j=0;j<@@ i@@ ;j++)@@ res@@ [j]=@@ a[j]; for(j=i;j<@@ strlen(@@ c)@@ +i@@ ;j++)@@ res@@ [j]=@@ c@@ [j-i@@ ]; for(j@@ =strlen(@@ c)@@ +i@@ ;j<@@ strlen(a)@@ +@@ strlen(@@ c)@@ -@@ strlen(b@@ )@@ ;j++)@@ res@@ [j]=@@ a@@ [j@@ +@@ strlen(b@@ )@@ -strlen(@@ c)@@ ]; } } } if(@@ check@@ ==1)@@ printf("%s\n",@@ res@@ ); else@@ printf("%s\n",@@ a); return0; }  
c -1
h -1
0

int@@ first@@ [100]; int@@ second@@ [100]; int@@ combination@@ [@@ 200]; inta,b; void@@ cin_number@@ () { inti; cin>>a>>@@ b; for(i=0;i<a;i++) { cin>>@@ first@@ [i]; } for(i=0;i<b;i++) { cin>>@@ second@@ [i]; } } void@@ rank@@ () { inti,j,temp; for(i=@@ (a@@ -1)@@ ;i>0;i--) { for(j=0;j<i;j++) { if(@@ first@@ [j]>@@ first@@ [j+1]) { temp=@@ first@@ [j]; first@@ [j]=@@ first@@ [j+1]; first@@ [j+1]=temp; } } } for(i=@@ (@@ b@@ -1)@@ ;i>0;i--) { for(j=0;j<i;j++) { if(@@ second@@ [j]>@@ second@@ [j+1]) { temp=@@ second@@ [j]; second@@ [j]=@@ second@@ [j+1]; second@@ [j+1]=temp; } } } } voidcombine@@ () { inti; for(i=0;i<a;i++) { combination@@ [i]=@@ first@@ [i]; } for(i=0;i<b;i++) { combination@@ [a@@ +i]=@@ second@@ [i]; } } void@@ cout_combination@@ () { inti; for(i=0;i<(@@ a+@@ b@@ -1);i++) cout<<@@ combination@@ [i]@@ <<""; cout<<@@ combination@@ [i]<<endl; } intmain() { cin_number@@ (); rank@@ (); combine@@ (); cout_combination@@ (); return0; }  
c -1
h -1
inta[1000][1000]; intmain() { intn,i,j,@@ i1@@ ,@@ j1@@ ,@@ i2@@ ,@@ j2@@ ,@@ flag=1; cin>>n; for(i=0;i<n;i++) { for(j=0;j<n;j++) { cin>>*(*(a+i)+j); if(flag@@ &&@@ *(*(a+i)@@ +j)@@ ==0){@@ i1@@ =i;@@ j1@@ =j@@ ;@@ flag@@ =0;} } } for(i=@@ i1@@ ;i<n;i++) { if(@@ *(*(a+i)@@ +@@ j1@@ )@@ !=0@@ ){@@ i2@@ =i@@ -1;@@ break;} } if(i==@@ n)@@ i2@@ =i-1; for(j=@@ j1@@ ;j<n;j++) { if(@@ *(*(a@@ +@@ i2@@ )@@ +j)@@ !=0@@ ){@@ j2@@ =j@@ -1;@@ break;} } if(j==@@ n)@@ j2@@ =j@@ -1; cout<<(@@ i2@@ -@@ i1@@ -1)*(@@ j2@@ -@@ j1@@ -1)@@ <<endl; return0; }  
c -1
h -1
0

intmain() { struct@@ m@@ { charid[10]; int@@ year; }@@ p@@ [100],@@ a[100],@@ tmp; intn,i,j,@@ k=0; scanf("%d",&n); for(i=0;i<n;i++){ scanf("%s%d",@@ p[i].@@ id,&@@ p[i].@@ year@@ ); if(p@@ [i].@@ year@@ >=60){ a[k]=@@ p[i]; k++; p[i].@@ year@@ =0; } } for(i=0;i<k;i++){ for(j=@@ k-1@@ ;j>i@@ ;j--){ if(a[j]@@ .@@ year@@ >@@ a@@ [j-1].@@ year@@ ){ tmp=@@ a@@ [j-1]; a@@ [j-1]=@@ a[j]; a[j]=@@ tmp; } } } for(i=0;i<k;i++){ printf("%s\n",@@ a[i].@@ id); } for(i=0;i<n;i++){ if(p@@ [i].@@ year@@ ==0) continue; printf("%s\n",@@ p@@ [i].id); } return0; }  
c -1
h -1
structstudent { intnum; int@@ yw@@ ; int@@ sx; }; intmain() { intn,i,@@ x=0,@@ y=0,@@ z=0; scanf("%d",&n); structstudent@@ a[@@ n]; intb[@@ n]; for(i=0;i<n;i++) { scanf("%d%d%d",&a[i].@@ num,&@@ a[i].@@ yw@@ ,&a[i].@@ sx@@ ); b[i]=@@ a[i].@@ yw@@ +a[i].@@ sx; } for(i=1;i<n;i++) { if(b[@@ x@@ ]<@@ b[i]) x@@ =i; } printf("%d%d\n",@@ a[x@@ ].num,@@ b[@@ x@@ ]); for(i=1;i<n;i++) { if(i==@@ x)@@ continue; if(b[@@ y@@ ]<@@ b[i]) y@@ =i; } printf("%d%d\n",@@ a[@@ y@@ ].num,@@ b[@@ y@@ ]); for(i=1;i<n;i++) { if(i==@@ x)@@ continue; if(i==@@ y)@@ continue; if(b[@@ z@@ ]<@@ b[i]) z@@ =i; } printf("%d%d\n",@@ a[@@ z@@ ].num,@@ b[@@ z@@ ]); getchar(); getchar(); }  
c -1
h -1
0

int@@ comp@@ (constvoid*a,constvoid*@@ b); intmain() { intn,m,@@ i,j,k; scanf("%d%d",&n,&m); inta[n@@ ],b[@@ m]; for(i=0;i<n;i++) scanf("%d",&a[i]); for(i=0;i<m;i++) scanf("%d",&b[i]); qsort@@ (a,n,@@ sizeof(int),@@ comp@@ ); qsort@@ (b,@@ m,@@ sizeof(int),@@ comp@@ ); for(i=0;i<n;i++) printf("%d",a[i]); for(i=0;i<m;i++) {@@ printf("%d",b[i]); if(i<@@ m-1) printf(""); } return0; } int@@ comp@@ (constvoid*a,constvoid*@@ b) { return@@ *(int*)@@ a@@ -*@@ (int*)@@ b; }  
c -1
h -1
voidmain() { int@@ cnt@@ (int@@ *,@@ int@@ ); intb[@@ 50@@ ],@@ a[@@ 16@@ ],i,j,@@ h; for(i=0;i<@@ 50@@ ;i++) { scanf("%d",&@@ h); if(h@@ ==-1)break; for(@@ a[0]=@@ h@@ ,j@@ =1@@ ;j<@@ 16@@ ;j++) { scanf("%d",&a[j]); if(a[j]@@ ==0)break; } b[i]=@@ cnt@@ (a,@@ j); } for(j=0;j<i;j++) printf("%d\n",@@ b[j]); } int@@ cnt@@ (int*@@ m,intn) { intk,@@ l,@@ p=0; for(k=0;k<n;k++) for(l=0;l<n;l++) if(@@ 2@@ **@@ (@@ m+@@ k@@ )==@@ *(@@ m+@@ l@@ ))@@ p++; return(@@ p); }  
c -1
h -1
0

intmain() { inti,@@ c=0,@@ d=0,@@ e=0,@@ g=0; double@@ f,@@ k; chara[@@ 503@@ ],b[@@ 503@@ ]; scanf("%lf",&@@ k); scanf("%s",a); scanf("%s",b); for(i=0;i<@@ 503@@ ;i++) { if(a[i]==@@ '\0') break; else c=c@@ +1; if(a[i]!='@@ T'&&a[i]!='@@ A'&&a[i]!='@@ C'&&a[i]!='@@ G') g=@@ g@@ +1; } for(i=0;i<@@ 503@@ ;i++) { if(b[i]==@@ '\0') break; else d=d@@ +1; if(@@ b[i]!='@@ T'&&@@ b[i]!='A'&&b[i]!='@@ C'&&b[i]!='@@ G') g=@@ g@@ +1; } if(c@@ !=@@ d@@ ||@@ g@@ !=0) printf("error\n"); else { for(i=0;i<c@@ ;i++) { if(a[i]==b[i]) e=@@ e@@ +1; } f@@ =1.0*@@ e@@ /@@ c; if(f@@ >@@ k) printf("yes\n"); else printf("no\n"); } return0; }  
c -1
h -1
intmain(){ intn,@@ l; cin>>n; intm[@@ n]; for(inti=0;i<n;i++) cin>>@@ m[i]; int@@ cishu@@ [@@ 101@@ ]={0}; for(inti=0;i<n;i++) { cishu@@ [m@@ [i]@@ ]++; if(@@ cishu@@ [m@@ [i]@@ ]>=@@ 2) m@@ [i]=0; } for(inti=0;i<n;i++) { if(i==0) cout<<@@ m[i]; else if(m@@ [i]!=0) cout<<""<<@@ m[i]; } return0; }  
c -1
h -1
0

voidmain() { int@@ s=0,@@ n,i,j,@@ b[@@ 26]={0},@@ t,@@ x,@@ m,@@ q; chara[@@ 1000][@@ 27]; scanf("%d\n",&n); for(i=0;i<n;i++) { gets(@@ a[i]); } for(i=0;i<n;i++) { t@@ =strlen(@@ a[i]); for(j=@@ 4@@ ;j<@@ t;j++) { x=@@ a[i][j]; b[@@ x@@ -65@@ ]=@@ b[@@ x@@ -65@@ ]+1; } } for(i=0;i<26;i++) { if(b[i]>@@ s) {@@ s=@@ b[i]@@ ;x@@ =i;} } printf("%c\n",@@ x@@ +65); printf("%d\n",s); for(i=0;i<n;i++) { t@@ =strlen(@@ a[i]); for(j=@@ 4@@ ;j<@@ t;j++) { m=@@ a[i][j]; if(m==@@ x@@ +65) { for(q=0;q@@ <@@ 2@@ ;q++) {@@ printf("%c",@@ a[i][@@ q@@ ]@@ );} printf("%c\n",@@ a[i]@@ [2@@ ]); } } } }  
c -1
h -1
intmain() { inta,b,c,@@ n,@@ s[@@ 12@@ ],@@ i,@@ t; scanf("%d%d%d",&a,&b,&c); s[@@ 0]=@@ 31; s[2@@ ]=31; s[@@ 3@@ ]=30; s[@@ 4@@ ]=31; s[@@ 5@@ ]=30; s[@@ 6@@ ]=31; s[@@ 7@@ ]=31; s[@@ 8@@ ]=30; s[@@ 9@@ ]=31; s[@@ 10@@ ]=30; s[@@ 11@@ ]=31; t=0; for(i=0;i<b@@ -1;i++) { if((@@ a%4==0&&a%100!=0@@ )||@@ a%@@ 400==0) { s@@ [1]=@@ 29; t=@@ s[i]@@ +@@ t; } else { s@@ [1]=@@ 28; t=@@ s[i]@@ +@@ t; } } n=@@ t@@ +c; printf("%d\n",n); return0; }  
c -1
h -1
0

intmain() { int@@ c1@@ ,@@ c2@@ ,@@ d,@@ i,@@ x=0,@@ k,@@ m,n; int@@ sum[@@ L@@ ]; inta[@@ L@@ ][@@ L@@ ],b[@@ L@@ ]; scanf("%d",&k); for(i=0;i<@@ L@@ ;i++){ sum@@ [i]=0; } for(i=0;i<k;i++){ scanf("%d%d",&m,&n); for(@@ c1@@ =0;@@ c1@@ <m;@@ c1@@ ++){ for(@@ c2@@ =0;@@ c2@@ <n;@@ c2@@ ++){ scanf("%d",&a[@@ c1@@ ][@@ c2@@ ]); } } for(d@@ =0;d@@ <m;@@ d@@ ++){ sum[@@ x@@ ]+=@@ a[d@@ ][0]+@@ a[d@@ ][n-1]; } for(d@@ =1;@@ d@@ <@@ n-1;@@ d@@ ++){ sum[@@ x@@ ]+=@@ a[0][@@ d@@ ]+@@ a[m-1][@@ d@@ ]; } x++; } for(i=0;i<x;i++){ printf("%d\n",sum@@ [i]); } return0; }  
c -1
h -1
intmain(intargc,char*argv[]) { inta,b,c,@@ x=0,@@ i; scanf("%d%d%d",&a,&b,&c); for(i=1;i<@@ b;i++) { if(i==1||i==3||i==5||i==7||i==8||i==10@@ ||i==@@ 12) {@@ x=x+@@ 31@@ ;} elseif(i==@@ 2@@ ){ x=x+@@ 28@@ ;} else x=x+@@ 30; } if(((@@ a%@@ 4==0)&&(@@ a%100!=0@@ )||(@@ a%@@ 400==0)@@ )&&(@@ b@@ >2@@ )){ x=x@@ +1;} x=x@@ +c; printf("%d\n",x); return0; }  
c -1
h -1
0

intmain(){ char@@ DNA1@@ [501],@@ DNA2@@ [501]; double@@ rate@@ ; scanf("%lf",&@@ rate@@ ); scanf("%s%s",@@ DNA1@@ ,@@ DNA2@@ ); inti,@@ len1,len2,@@ flag=0; len1=strlen(@@ DNA1@@ ); len2=strlen(@@ DNA2@@ ); if(len1!=@@ len2){ flag=1; } for(i=0;i<len1;i++){ if(@@ DNA1@@ [i]=='A'||@@ DNA1@@ [i]=='T'||@@ DNA1@@ [i]=='C'||@@ DNA1@@ [i]=='@@ G'){ continue; } else{@@ flag@@ =1;} } for(i=0;i<@@ len2@@ ;i++){ if(@@ DNA2@@ [i]=='A'||@@ DNA2@@ [i]=='T'||@@ DNA2@@ [i]=='C'||@@ DNA2@@ [i]=='@@ G'){ continue; } else{@@ flag@@ =1;} } if(flag@@ ==1){ printf("error\n"); } else{ int@@ c=0; double@@ result; for(i=0;@@ DNA1@@ [i]@@ ;i++){ if(@@ DNA1@@ [i]==@@ DNA2@@ [i]){ c++; } } result@@ =1.0*@@ c@@ /@@ len1; if(result@@ >@@ rate@@ ){ printf("yes"); } else{ printf("no"); } } return0; }  
c -1
h -1
int@@ data@@ [@@ K@@ ]; int@@ ju@@ [@@ K@@ ][@@ K@@ ]; int@@ weight@@ [@@ K@@ ]; intmain(intargc,char*argv[]) { intn=0; inti=0; intj=0; intmax=0; freopen@@ (@@ "@@ in.@@ txt@@ ",@@ "@@ r@@ ",@@ stdin@@ ); freopen@@ (@@ "@@ out@@ .@@ txt@@ ",@@ "@@ w@@ ",@@ stdout@@ ); scanf("%d",&n); memset(@@ ju@@ ,0,sizeof(@@ ju@@ )); for(i=0;i<n;i++) { scanf("%d",&@@ data@@ [i]); weight@@ [i]=1; } for(i=0;i<n-1;i++) { for(j=i+1;j<n;j++) { if(@@ data@@ [i]>=@@ data@@ [j]) { ju@@ [i][j]@@ =1; } } } for(i=n-2;i>=0;i--) { for(j=i+1;j<n;j++) { if(@@ ju@@ [i][j]@@ ) { if(@@ weight@@ [i]<@@ weight@@ [j]@@ +1) { weight@@ [i]=@@ weight@@ [j]+1; } } } } max=0; for(i=0;i<n;i++) { if(max<@@ weight@@ [i]) max=@@ weight@@ [i]; } printf("%d\n",max); return0; }  
c -1
h -1
0

structstudent { int@@ No@@ ; intchinese; intmath; int@@ all@@ ; }stu[@@ STUDENT_NUM@@ ],@@ temp; voidmain() { intn; scanf("%d",&n); inti,@@ k; for(i=0;i<n;i++){ scanf("%d%d%d",&stu[i].@@ No@@ ,&stu[i].@@ chinese@@ ,&stu[i].math); stu[i].@@ all@@ =stu[i].@@ chinese+@@ stu[i].@@ math; } for(k=1;k<@@ 4@@ ;k++){ for(i=0;i<n-@@ k;i++){ if(stu[i].@@ all@@ >=@@ stu[i+1].@@ all@@ ){ temp=@@ stu@@ [i+1]; stu@@ [i+1]=@@ stu[i]; stu[i]=@@ temp; } } } for(i=n-1;i@@ >@@ n-@@ 4@@ ;i--){ printf("%d%d\n",stu[i].@@ No@@ ,@@ stu[i].@@ all@@ ); } }  
c -1
h -1
intmain() { inta[@@ 1000][1000],@@ n,i,j,@@ col1@@ =0,@@ row1@@ =0,@@ col2@@ =0,@@ row2@@ =0; scanf("%d",&n); for(i=0;i<n;i++) for(j=0;j<n;j++) scanf("%d",&a[i][j]); for(i=0;i<n;i++) for(j=0;j<n;j++) {@@ if(a[i][j]@@ ==0){@@ col1@@ =i;@@ row1@@ =j@@ ;break; }} for(i=n-1;i>=0;i--) for(j=n-1;j>=0;j--) {@@ if(a[i][j]@@ ==0){@@ col2@@ =i;@@ row2@@ =j@@ ;break; } } printf("%d",(@@ col1@@ -@@ col2@@ -1)*(@@ row2@@ -@@ row1@@ -1)); return0; }  
c -1
h -1
0

intmain() { inta,b,@@ c,d,@@ len,@@ lena@@ ; double@@ r,@@ ra@@ ; char@@ z[@@ 200]; char@@ x[@@ 200]; scanf("%lf",&@@ r); scanf("%s",@@ z); scanf("%s",@@ x); len=strlen(@@ z); lena@@ =strlen(@@ x); d=0; for(a=0;a@@ <=@@ len@@ -1;@@ a++) { if(@@ len@@ !=@@ lena@@ )@@ d=1; if((@@ z@@ [a@@ ]!='@@ A')&&(@@ z@@ [a@@ ]!='@@ T')&&(@@ z@@ [a@@ ]!='@@ C')&&(@@ z@@ [a@@ ]!='@@ G')@@ )@@ d=1; if((x@@ [a@@ ]!='@@ A')&&(@@ x@@ [a@@ ]!='@@ T')&&(@@ x@@ [a@@ ]!='@@ C')&&(@@ x@@ [a@@ ]!='@@ G')@@ )@@ d=1; } if(d@@ ==1) { printf("error"); return0; } b@@ =0;@@ c=0; for(a=0;a@@ <=@@ len@@ -1;@@ a++) { c++; if(z@@ [a@@ ]==@@ x@@ [a@@ ])@@ b++; } ra@@ =@@ b@@ *1.0/@@ c; if(@@ ra@@ >@@ r@@ )@@ printf("yes"); elseprintf("no"); return0; }  
c -1
h -1
intmain() { intk,@@ a[100][100],@@ i,j,@@ m,n,@@ sum=0; cin>>k; for(intl@@ =0;@@ l<@@ k;@@ l++) { cin>>m>>n; for(i=0;i<m;i++) for(j=0;j<n;j++) cin>>a[i][j]; for(j=0;j<n;j++) { sum=sum+@@ a[0]@@ [j]+@@ a[m-1][j]; if(m@@ -1@@ ==0) sum=sum-@@ a[m-1][j]; } for(i=1;i<m-1;i++) { sum=sum+@@ a[i][0]+@@ a[i][n-1]; if(@@ n-1@@ ==0) sum=sum-@@ a[i][n-1]; } cout<<sum<<endl; sum=0; } return0; }  
c -1
h -1
0

intmain() { int@@ n;@@ charname@@ [1000][@@ 26@@ ];@@ intnum[@@ 1000]; int@@ i,j@@ ;@@ charb[@@ 26@@ ]={'A','B','C','D','E','F','G','H','I','J','K','L','M','N','O','P','@@ Q','R','S','T','U','V','W','X','Y','@@ Z'}; scanf("%d",&n); for(i=0;i<n;i++) { scanf("%d%s",&@@ num@@ [i],@@ name@@ [i]); } inta[@@ 26@@ ]={0@@ }@@ ;@@ char@@ k; for(i=0;i<n;i++) { for(j=0;@@ (@@ k=@@ name@@ [i][j]@@ !=@@ '\0')@@ ;j++) { if(name[i][j]=='@@ A'@@ ) a[0]@@ ++; if(name[i][j]=='@@ B@@ ') a[1@@ ]++; if(name[i][j]=='@@ C') a[2@@ ]++; if(name[i][j]=='@@ D@@ ') a[@@ 3@@ ]++; if(name[i][j]=='@@ E@@ ') a[@@ 4@@ ]++; if(name[i][j]=='@@ F@@ ') a[@@ 5@@ ]++; if(name[i][j]=='@@ G') a[@@ 6@@ ]++; if(name[i][j]=='@@ H@@ ') a[@@ 7@@ ]++; if(name[i][j]=='@@ I@@ ') a[@@ 8@@ ]++; if(name[i][j]=='@@ J@@ ') a[@@ 9@@ ]++; if(name[i][j]=='@@ K@@ ') a[@@ 10@@ ]++; if(name[i][j]=='@@ L@@ ') a[@@ 11@@ ]++; if(name[i][j]=='@@ M@@ ') a[@@ 12@@ ]++; if(name[i][j]=='@@ N@@ ') a[@@ 13@@ ]++; if(name[i][j]=='@@ O@@ ') a[@@ 14@@ ]++; if(name[i][j]=='@@ P@@ ') a[@@ 15@@ ]++; if(name[i][j]=='@@ Q@@ ') a[@@ 16@@ ]++; if(name[i][j]=='@@ R@@ ') a[@@ 17@@ ]++; if(name[i][j]=='@@ S@@ ') a[@@ 18@@ ]++; if(name[i][j]=='@@ T@@ ') a[@@ 19@@ ]++; if(name[i][j]=='@@ U@@ ') a[@@ 20@@ ]++; if(name[i][j]=='@@ V@@ ') a[@@ 21@@ ]++; if(name[i][j]=='@@ W@@ ') a[@@ 22@@ ]++; if(name[i][j]=='@@ X@@ ') a[@@ 23@@ ]++; if(name[i][j]=='@@ Y@@ ') a[@@ 24@@ ]++; if(name[i][j]=='@@ Z@@ ') a[@@ 25@@ ]++; } } intmax=@@ a[0]@@ ;@@ int@@ o@@ =0; for(i=0;i<26;i++) { if(a[i]>max) {max=@@ a[i];@@ o@@ =i;} } printf("%c\n%d\n",@@ b[@@ o@@ ],@@ a[@@ o@@ ]); for(i=0;i<n;i++) { for(j=0;@@ (@@ k=@@ name@@ [i][j]@@ !=@@ '\0')@@ ;j++) { if(name@@ [i][j]==@@ b[@@ o@@ ]) printf("%d\n",@@ num[i]); } } scanf("%d",&@@ i); return0; }  
c -1
h -1
intmain() { intb[@@ 20000@@ ]={0},@@ a[@@ 20000],@@ i,n,@@ j,@@ flag=0; cin>>n; for(i=0;i<=n-1;i++) cin>>a[i]; for(i=0;i<=n-1;i++) for(j=n-1@@ ;j>=i@@ +1@@ ;j--) if(a[i]==@@ a[j])@@ b[j]@@ =1; for(i=0;i<=n-1;i++) if(b[i]@@ ==0) { if(flag==0) { cout<<a[i]; flag=1; continue; } cout<<""<<a[i]; } return0; }  
c -1
h -1
0

intmain(){ inti,j,k,n,@@ row@@ [@@ 99@@ ],@@ col@@ [@@ 99@@ ],@@ s[@@ 99@@ ][@@ 99@@ ][@@ 99@@ ],@@ sum[@@ 99@@ ]={0}; scanf("%d",&n); for(i=0;i<n;i++){ scanf("%d%d",&row@@ [i],&@@ col@@ [i]); for(j=0;j<row@@ [i]@@ ;j++){ for(k=0;k<col@@ [i]@@ ;k++){ scanf("%d",&s@@ [i][j]@@ [k]); if((@@ j@@ ==0)||(@@ k@@ ==0)||(@@ j==@@ (@@ row@@ [i]@@ -1)@@ )||(@@ k==@@ col@@ [i]@@ -1)) {@@ sum[i]@@ +=@@ s@@ [i][j]@@ [k]@@ ;} } } } for(i=0;i<n;i++){ printf("%d\n",sum@@ [i]); } return0; }  
c -1
h -1
intmain(intargc,char*argv[]) { int@@ shu@@ [1000][1000]; intn,@@ a,b,c,d,@@ l; inti,j; scanf("%d",&n); for(i=1;i<=n;i++) { for(j=1;j<=n;j++) { scanf("%d",&@@ shu@@ [i][j]); } scanf("\n@@ "); } for(i=1;i<=n;i++) { for(j=1;j<=n;j++) { if(@@ shu@@ [i][j]==0) {@@ a=i; b=j; break;} } if(a@@ !=0) break; } for(i=n@@ ;i>=1;i--) { for(j=n@@ ;j@@ >=1@@ ;j--) { if(@@ shu@@ [i][j]==0) {@@ c=i; d=j; break;} } if(c@@ !=0@@ )break; } printf("%d",(@@ c-a-1)*(d-b@@ -1)); return0; }  
c -1
h -1
0

void@@ pai@@ (inta[],int@@ m); voidshuru@@ (inta[@@ 10@@ ],intb[@@ 10@@ ],int@@ m,int@@ n); voidmain(){ inta[@@ 10@@ ],b[@@ 10]; intm,n; scanf("%d%d",&m,&n); shuru@@ (a,b,m,n); } voidshuru@@ (inta[@@ 10@@ ],intb[@@ 10@@ ],int@@ m,int@@ n){ inti; for(i=0;i<m;i++) scanf("%d",&a[i]); for(i=0;i<n;i++) scanf("%d",&b[i]); printf("\n"); pai@@ (a,m); pai@@ (b,n); for(i=0;i<m;i++) printf("%d",a[i]); for(i=0;i<n-1;i++) printf("%d",b[i]); printf("%d",b[@@ n-1]); } void@@ pai@@ (inta[],int@@ m){ inti,j,t; for(j=0;j<m-1;j++) for(i=0;i<m@@ -1-j;i++) if(a[i]>a[i+1]) { t=a[i]; a[i]=a[i+1]; a[i+1]=@@ t; } }  
c -1
h -1
intmain() { inta[@@ 1000][1000],@@ h1@@ ,@@ h2@@ ,@@ l1,l2,@@ c=0,@@ b=0; intn,i,j,@@ h,@@ k; scanf("%d",&n); for(i=0;i<n;i++) { for(j=0;j<n;j++) { scanf("%d",&a[i][j]); } } for(h=0;h@@ <n;@@ h++) { for(k=0;k<n;k++) { if(a[@@ h@@ ][k@@ ]==0) { h1@@ =@@ h; l1@@ =k; c=1; break; } } if(c@@ ==1)break; } for(i=n-1@@ ;i>0;i--) { for(j=n-1@@ ;j>0;j--) { if(a[i][j]==0) { h2@@ =i; l2@@ =j; b=1; break; } } if(b@@ ==1)break; } printf("%d\n",@@ (@@ h2@@ -@@ h1@@ -1)*(@@ l2@@ -@@ l1@@ -1)); return0; }  
c -1
h -1
0

intsum=0; void@@ divide@@ (intn,int@@ a) { for(inti=@@ a@@ ;i<=n;i++) { if((@@ n@@ %i==0)@@ ) { if(n@@ /i@@ ==1) sum++; else divide@@ (n/i,i); } } } intmain() { intN@@ =0,@@ n=0,@@ i=0; cin>>@@ N; for(i=0;i<N;i++) { cin>>n; divide@@ (n,@@ 2); cout<<sum<<endl; sum=0; } return0; }  
c -1
h -1
intmain(){ int@@ a=0,@@ n=0,@@ m=0,@@ i=0,@@ k=0; cin>>n; k=@@ n; intnum[@@ n]; for(@@ ;i<@@ n;i++)@@ cin>>num[i]; for(i=0;i<k;i++){ for(m@@ =i+1@@ ;m@@ <k@@ ;m++){ if(@@ num[m@@ ]==@@ num@@ [i]){ for(@@ a=@@ m;@@ a@@ <k;@@ a@@ ++)@@ num[@@ a@@ ]=@@ num[@@ a@@ +1]; k--; m@@ --@@ ;} } } for(i=0;i<@@ k-1@@ ;i++)@@ cout<<@@ num[i]@@ <<""; cout<<num@@ [k-1]@@ <<endl; return0; }  
c -1
h -1
0

main() { intyear,month,day; scanf("%d%d%d",&year,&month,&day); if(year%@@ 400==0) { if(month==1) printf("%d",@@ day); if(month==2) printf("%d",day+@@ 31@@ ); if(month==3) printf("%d",day+@@ 60@@ ); if(month==@@ 4) printf("%d",day+@@ 91@@ ); if(month==@@ 5) printf("%d",day+@@ 121@@ ); if(month==@@ 6) printf("%d",day+@@ 152@@ ); if(month==@@ 7) printf("%d",day+@@ 182@@ ); if(month==8) printf("%d",day+@@ 213@@ ); if(month==@@ 9) printf("%d",day+@@ 244@@ ); if(month==@@ 10) printf("%d",day+@@ 274@@ ); if(month==@@ 11) printf("%d",day+@@ 305@@ ); if(month==@@ 12) printf("%d",day+@@ 335@@ ); } elseif(@@ year%@@ 4==0&&@@ year%@@ 100!=0) { if(month==1) printf("%d",@@ day); if(month==2) printf("%d",day+@@ 31@@ ); if(month==3) printf("%d",day+@@ 60@@ ); if(month==@@ 4) printf("%d",day+@@ 91@@ ); if(month==@@ 5) printf("%d",day+@@ 121@@ ); if(month==@@ 6) printf("%d",day+@@ 152@@ ); if(month==@@ 7) printf("%d",day+@@ 182@@ ); if(month==8) printf("%d",day+@@ 213@@ ); if(month==@@ 9) printf("%d",day+@@ 244@@ ); if(month==@@ 10) printf("%d",day+@@ 274@@ ); if(month==@@ 11) printf("%d",day+@@ 305@@ ); if(month==@@ 12) printf("%d",day+@@ 335@@ ); } else { if(month==1) printf("%d",@@ day); if(month==2) printf("%d",day+@@ 31@@ ); if(month==3) printf("%d",day+@@ 59@@ ); if(month==@@ 4) printf("%d",day+@@ 90@@ ); if(month==@@ 5) printf("%d",day+@@ 120@@ ); if(month==@@ 6) printf("%d",day+@@ 151@@ ); if(month==@@ 7) printf("%d",day+@@ 181@@ ); if(month==8) printf("%d",day+@@ 212@@ ); if(month==@@ 9) printf("%d",day+@@ 243@@ ); if(month==@@ 10) printf("%d",day+@@ 273@@ ); if(month==@@ 11) printf("%d",day+@@ 304@@ ); if(month==@@ 12) printf("%d",day+@@ 334@@ ); } }  
c -1
h -1
intmain() { inta[100@@ ]={0}; intb,@@ d,@@ e,f,@@ g,@@ i,j,k,@@ l,@@ m,n,@@ p; scanf("%d",&n); scanf("%d",&@@ p); printf("%d",@@ p); a[p@@ ]++; for(i=2;i<=n;i++) {scanf("%d",&@@ p); if(a[@@ p@@ ]@@ ==0){@@ printf("%d",@@ p@@ );@@ a[p@@ ]@@ ++;} } return@@ 7@@ ; }  
c -1
h -1
0

structbook { intid; charwriter@@ [30]; }@@ book[@@ 1200@@ ]; intmain() { intn,@@ l,@@ t,@@ a[@@ 30]; char@@ m; cin>>n; for(inti=0;i<@@ 30@@ ;i++)@@ a[i]=0; for(inti=0;i<n;i++) { cin>>@@ book[i].@@ id@@ >>@@ book[i].@@ writer@@ ; l=strlen(@@ book[i].@@ writer); for(intj=0;j<@@ l@@ ;j++) { t=@@ book[i].@@ writer@@ [j]-65@@ ; a[t@@ ]++; } } t=@@ a[0]@@ ;@@ l=0; for(inti=0;i<@@ 26;i++) { if(a[i]>@@ t) { l@@ =i; t=a[i]; } } m=@@ l@@ +65; cout<<@@ m@@ <<endl; cout<<t@@ <<endl; for(inti=0;i<@@ 30@@ ;i++)@@ a[i]=0; for(inti=0;i<n;i++) { l=strlen(@@ book[i].@@ writer); for(intj=0;j<@@ l@@ ;j++) { if(book[i].@@ writer@@ [j]==@@ m) cout<<@@ book[i].@@ id@@ <<endl; } } return0; }  
c -1
h -1
voidmain() { inta[@@ 2@@ ],i,j,@@ b[2@@ ][100],@@ p,@@ c[100],@@ s,@@ t; for(i=0;i<2@@ ;i++) scanf("%d",&a[i]); for(i=0;i<2@@ ;i++) for(j=0;j<@@ a[i]@@ ;j++) scanf("%d",&@@ b[i]@@ [j]); for(i=0;i<2@@ ;i++) { for(s=0;s@@ <@@ a[i]@@ -1;@@ s++) { for(t=0;t@@ <@@ a[i]@@ -1@@ -@@ s@@ ;t++) if(b[i]@@ [t@@ ]>@@ b[i]@@ [t@@ +1]) { p=@@ b[i]@@ [t@@ ]; b[i]@@ [t@@ ]=@@ b[i]@@ [t@@ +1]; b[i]@@ [t@@ +1]=@@ p; } } } for(i=0;i<@@ a[0]@@ ;i++) c[i]=@@ b[0]@@ [i]; for(j=0;j<@@ a[1]@@ ;j++) c[@@ a[0]@@ +j@@ ]=@@ b[1@@ ]@@ [j]; for(s=0;s@@ <@@ a[0]@@ +@@ a[1]@@ -1;@@ s++) printf("%d",c[@@ s@@ ]); printf("%d",c[@@ a[0]@@ +@@ a[1]@@ -1]); }  
c -1
h -1
0

voidmain() { intn,k; int@@ arr@@ [@@ 1001]; inti,j,@@ bb@@ ; scanf("%d%d",&n,&k); for(i=0;i<n;i++) { scanf("%d",&@@ arr@@ [i]); } for(i=0;i<n-1;i++) { bb@@ =@@ k-@@ arr@@ [i]; for(j=i+1;j<n;j++) { if(@@ bb@@ ==@@ arr@@ [j]) { printf("yes\n"); return0; } } } if(i==@@ n-1)@@ printf("no\n"); }  
c -1
h -1
intx,y,@@ a[100],b[100],@@ temp; int@@ input@@ () { intk=0,@@ t=0,@@ temp=0; cin>>x@@ >>@@ y; for(inti=0;i<@@ x;i++) cin>>a[i]; for(intj=0;j<@@ y;j++) cin>>@@ b[j]; return0; } int@@ bubble@@ () { for(inti=0;i<@@ x@@ -1;i++) for(intt@@ =i+1@@ ;t@@ <@@ x@@ ;t++) { if(a[i]>@@ a[t@@ ]) { temp=@@ a[t@@ ]; a[t@@ ]=a[i]; a[i]=@@ temp; } } for(intj=0;j<@@ y@@ -1;j++) for(intt@@ =j+1@@ ;t@@ <@@ y@@ ;t++) { if(b[j]@@ >@@ b[t@@ ]) { temp=@@ b[t@@ ]; b[t@@ ]=@@ b[j]; b[j]=@@ temp; } } return0; } int@@ combine@@ () { for(inti=0;i<@@ x;i++) cout<<a[i]@@ <<''; for(intj=0;j<@@ y@@ -1;j++) cout<<@@ b[j]@@ <<''; cout<<b[@@ y@@ -1]; return0; } intmain() { input(); bubble@@ (); combine@@ (); return0; }  
c -1
h -1
0

struct@@ pat { charnum[10]; intage; structpat@@ *next; }; structpat@@ *creat@@ (intn) { structpat@@ *@@ p1,*p2,*head; inti; p2=@@ head@@ =p1@@ =(struct@@ pat@@ *)malloc(sizeof(struct@@ pat@@ )); for(i=0;i<n;i++) { scanf("%s%d",@@ p1->num,&p1->@@ age); if(i==0) head=p1; p2->next=p1; p2=p1; p1=(struct@@ pat@@ *)malloc(sizeof(struct@@ pat@@ )); } p2@@ =NULL; returnhead; } void@@ array@@ (struct@@ pat@@ *head@@ ,intn) { inti,j,@@ ta@@ ; charstr@@ [10]; structpat@@ *p1,*p2; p1=head; for(i=0;i<n-1;i++) { for(j=0;j<n-1-i;j++) { p2=p1; p1=p1->next; if((@@ p1->age@@ )>@@ (@@ p2->age@@ )&&(@@ p1->age@@ )@@ >=60) { strcpy(@@ str,@@ p2->@@ num); strcpy(@@ p2->@@ num,p1->@@ num); strcpy(@@ p1->@@ num,@@ str); ta@@ =p1->@@ age; p1->age@@ =@@ p2->@@ age; p2->age@@ =@@ ta@@ ; } } p1=head; } } voidmain() { intn; scanf("%d",&n); structpat@@ *p; p=@@ creat@@ (n); array@@ (p,@@ n); inti; for(i=0;i<n;i++) { printf("%s\n",p->@@ num); p=p->next; } }  
c -1
h -1
struct@@ result {intnum; int@@ chn@@ ; intmath; inttotal; }; intmain() {@@ intn,k; cin>>n; struct@@ result@@ student@@ [n@@ +1]; for(k=1;k<=n;k++) {@@ cin>>@@ student@@ [k].@@ num@@ >>@@ student@@ [k].@@ chn@@ >>@@ student@@ [k].@@ math; student@@ [k].@@ total=@@ student@@ [k].@@ chn@@ +@@ student@@ [k].@@ math; } inti,j; struct@@ result@@ temp; for(i=1;i<@@ 4;i++) for(j=1;j<=@@ n@@ -i;j++) {if(@@ student[j].@@ total@@ >=@@ student@@ [j+1].@@ total) {@@ temp=@@ student@@ [j]; student@@ [j]=@@ student@@ [j+1]; student@@ [j+1]=temp; } } cout<<@@ student@@ [n@@ ].num@@ <<""<<@@ student@@ [n@@ ].@@ total@@ <<endl; cout<<@@ student[@@ n-1@@ ].num@@ <<""<<@@ student[@@ n-1@@ ].@@ total@@ <<endl; cout<<@@ student[@@ n-2@@ ].num@@ <<""<<@@ student[@@ n-2@@ ].@@ total@@ <<endl; return0; }  
c -1
h -1
0

structbook { intnum; charwriter@@ [20]; structbook*next; }; intmain() { intn,i,j,@@ m,@@ k,@@ c[@@ 26],@@ max; chara[@@ 26]; scanf("%d",&m); structbook*@@ p1,*p2,*head; for(i=0;i<m;i++) { p1=(structbook@@ *)malloc(@@ Len@@ ); if(i==0) { head=p1; } else { p2->next=p1; } p2=p1; scanf("%d%s",&p1->num,p1->@@ writer); } p2->next=NULL; p1=head; for(i=0;i<26;i++) { a[i]@@ =i+65; c[i]@@ =0; } for(j=0;j<m;j++) { for(i=0;i<26;i++) { n=strlen(@@ p1->@@ writer); for(k=0;k<n;k++) { if(a[i]==@@ p1->@@ writer@@ [k]) { c[i]@@ ++; } } } p1=p1->next; } max=0; for(i=0;i<26;i++) { if(c@@ [i]>@@ c[@@ max@@ ]) { max=i; } } printf("%c\n%d\n",@@ a[@@ max@@ ],c[@@ max@@ ]); p1=head; for(i=0;i<m;i++) { n=strlen(@@ p1->@@ writer); for(j=0;j<n;j++) { if(p1->@@ writer@@ [j]==@@ a[@@ max@@ ]) { printf("%d\n",@@ p1->num); } } p1=p1->next; } return0; }  
c -1
h -1
intmain() { intk,@@ n,@@ i,j; scanf("%d%d",&n,&k); int*@@ a=@@ (int*)malloc(sizeof(int)*n); for(i=0;i<n;i++) { scanf("%d",&a[i]); } int@@ flag=0; for(i=0;i<n;i++) { for(j=0;j<n;j++) { if(a[i]+a[j]==k) { flag=1; break; } } if(flag@@ ==1)break; } if(flag@@ ==1)@@ printf("yes\n"); if(flag@@ ==0)@@ printf("no\n"); return0; }  
c -1
h -1
0

intmain() { intleap@@ (intyear@@ ); int@@ cal@@ (int@@ month@@ ,int@@ day); int@@ call@@ (int@@ month@@ ,int@@ day); intk,@@ year,@@ month,@@ day,@@ num; scanf("%d%d%d",&year,&month,&day); k=@@ leap@@ (year@@ ); if(k==0) { num=@@ cal@@ (@@ month,@@ day); } if(k==1) { num=@@ call@@ (@@ month,@@ day); } printf("%d\n",num); return0; } intleap@@ (intyear@@ ) { intk; if(year%@@ 4==0) { if(year%@@ 100==0) { if(year%@@ 400==0) k=1; else k=0; } else k=1; } else k=0; return@@ k; } int@@ cal@@ (int@@ month@@ ,int@@ day@@ ) { intk; switch(month) { case1:@@ k=@@ day;break; case2:@@ k=@@ day+@@ 31;break; case3:@@ k=@@ day+31+28@@ ;break; case4:@@ k=@@ day+31+28@@ +31;break; case5:@@ k=@@ day+31+28@@ +31+30@@ ;break; case6:@@ k=@@ day+31+28@@ +31+30@@ +31;break; case7:@@ k=@@ day+31+28@@ +31+30+31+30@@ ;break; case8:@@ k=@@ day+31+28@@ +31+30+31+30@@ +31;break; case9:@@ k=@@ day+31+28@@ +31+30+31+30+31+@@ 31;break; case10:@@ k=@@ day+31+28@@ +31+30+31+30+31+31+30@@ ;break; case11:@@ k=@@ day+31+28@@ +31+30+31+30+31+31+30@@ +31;break; case12:@@ k=@@ day+31+28@@ +31+30+31+30+31+31+30+31+30@@ ;break; } return@@ k; } int@@ call@@ (int@@ month@@ ,int@@ day@@ ) { intk; switch(month) { case1:@@ k=@@ day;break; case2:@@ k=@@ day+@@ 31;break; case3:@@ k=@@ day+31+29@@ ;break; case4:@@ k=@@ day+31+29@@ +31;break; case5:@@ k=@@ day+31+29@@ +31+30@@ ;break; case6:@@ k=@@ day+31+29@@ +31+30@@ +31;break; case7:@@ k=@@ day+31+29@@ +31+30+31+30@@ ;break; case8:@@ k=@@ day+31+29@@ +31+30+31+30@@ +31;break; case9:@@ k=@@ day+31+29@@ +31+30+31+30+31+@@ 31;break; case10:@@ k=@@ day+31+29@@ +31+30+31+30+31+31+30@@ ;break; case11:@@ k=@@ day+31+29@@ +31+30+31+30+31+31+30@@ +31;break; case12:@@ k=@@ day+31+29@@ +31+30+31+30+31+31+30+31+30@@ ;break; } return@@ k; }  
c -1
h -1
intmain() { inti,n,@@ a[100@@ ]={0},@@ p; scanf("%d",&@@ p); while(p@@ >0) { for(i=0;i<@@ 100@@ ;i=i+1@@ ) a[i]=0; for(@@ ;p@@ >0@@ ;) { a[p@@ ]=1; scanf("%d",&@@ p); } n=0; for(i=1;i<@@ 50@@ ;i=i+1@@ ) if(a[i]@@ &&@@ a[@@ 2*@@ i@@ ])@@ n=n+1; printf("%d\n",n); scanf("%d",&@@ p); } return0; }  
c -1
h -1
0

int@@ ana@@ (intn,int@@ p) { inti; intt,@@ s=1; t=@@ pow@@ (n,@@ 0@@ .@@ 5@@ ); for(i=@@ p@@ ;i<=@@ t;i++) if(n%i==0) s=s+@@ ana@@ (n/i,i); return@@ s; } intmain() { intn; inta[100]; inti; cin>>n; for(i=0;i<n;i++) cin>>a[i]; for(i=0;i<n;i++) cout<<@@ ana@@ (a[i],@@ 2)<<endl; return0; }  
c -1
h -1
struct@@ HaHa { intx,y,@@ z@@ [2][@@ 1000],@@ g@@ [@@ 2000]; }; struct@@ HaHa@@ scan@@ () { struct@@ HaHa@@ hehe@@ ; inti,j; scanf("%d%d",&@@ hehe@@ .@@ x,&@@ hehe@@ .@@ y); for(i=0;i<@@ hehe@@ .@@ x;i++) scanf("%d",&@@ hehe@@ .z@@ [0]@@ [i]); for(j=0;j<@@ hehe@@ .@@ y;j++) scanf("%d",&@@ hehe@@ .z@@ [1]@@ [j]); return(@@ hehe@@ ); } struct@@ HaHa@@ line@@ (struct@@ HaHa@@ yahoo@@ ) { inti,@@ temp@@ ,j; struct@@ HaHa@@ yahoo1@@ ; for(i=0;i<@@ yahoo@@ .@@ x;i++) { for(j=i;j<@@ yahoo@@ .@@ x;j++) { if(@@ yahoo@@ .z@@ [0]@@ [i]>@@ yahoo@@ .z@@ [0]@@ [j]) { temp=@@ yahoo@@ .z@@ [0]@@ [i]; yahoo@@ .z@@ [0]@@ [i]=@@ yahoo@@ .z@@ [0]@@ [j]; yahoo@@ .z@@ [0]@@ [j]=temp; } } } for(i=0;i<@@ yahoo@@ .@@ y;i++) { for(j=i;j<@@ yahoo@@ .@@ y;j++) { if(@@ yahoo@@ .z@@ [1]@@ [i]>@@ yahoo@@ .z@@ [1]@@ [j]) { temp=@@ yahoo@@ .z@@ [1]@@ [i]; yahoo@@ .z@@ [1]@@ [i]=@@ yahoo@@ .z@@ [1]@@ [j]; yahoo@@ .z@@ [1]@@ [j]=temp; } } } yahoo1@@ =@@ yahoo@@ ; return(@@ yahoo1@@ ); } struct@@ HaHa@@ combine@@ (struct@@ HaHa@@ xx@@ ) { inti; struct@@ HaHa@@ xx1@@ ; for(i=0;i<@@ xx@@ .@@ x;i++) { xx@@ .@@ g@@ [i]=@@ xx@@ .z@@ [0]@@ [i]; } for(i=0;i<@@ xx@@ .@@ y;i++) { xx@@ .@@ g@@ [i+@@ xx@@ .@@ x@@ ]=@@ xx@@ .z@@ [1]@@ [i]; } xx1@@ =@@ xx@@ ; return(@@ xx1@@ ); } voidprint(struct@@ HaHa@@ xxx@@ ) { inti; for(i=0;i<@@ xxx@@ .@@ x+@@ xxx@@ .@@ y@@ -1;i++) { printf("%d",@@ xxx@@ .@@ g@@ [i]); } printf("%d",@@ xxx@@ .@@ g@@ [@@ xxx@@ .@@ x+@@ xxx@@ .@@ y@@ -1]); } voidmain() { print(@@ combine@@ (@@ line@@ (@@ scan@@ (@@ ))@@ )); }  
c -1
h -1
0

intmain(){ inti,j,@@ x,y,@@ u@@ =0,@@ t=0; doublen; chara[@@ 505@@ ],b[@@ 505@@ ]; scanf("%lf",&n); scanf("%s",a); scanf("%s",@@ b@@ );@@ ; x@@ =strlen(a); y@@ =strlen(b); if(x@@ !=@@ y)@@ t=0; else{ for(i=0;i<x;i++){ if((@@ a[i]=='@@ A'||a[i]=='T'||a[i]=='@@ G'||@@ a[i]=='@@ C')&&(@@ b[i]=='@@ A'||@@ b[i]=='@@ T'||@@ b[i]=='@@ G'||@@ b[i]=='@@ C')){ t@@ +=1; if(a[i]==b[i]) u@@ +=1; } elseif((@@ a[i]!='@@ A'&&a[i]!='T'&&a[i]!='G'&&a[i]!='@@ C')||(@@ b[i]!='A'&&b[i]!='T'&&b[i]!='G'&&b[i]!='@@ C')@@ ) t=0; } } if(t@@ ==0)@@ printf("error"); elseif(@@ u@@ *1.0/@@ x@@ >=@@ n)@@ printf("yes"); elseif(@@ u@@ *1.0/@@ x@@ <@@ n)@@ printf("no"); return0; }  
c -1
h -1
intleap@@ (int@@ a) { int@@ z; if((@@ a%@@ 4==0)&&(@@ a%100!=0@@ )||(@@ a%@@ 400==0)@@ )@@ z=1; else@@ z=0; return@@ z; } voidmain() { inti,@@ m; int@@ n[@@ 5@@ ][@@ 3@@ ]; int@@ total@@ [5@@ ]; for(i=0;i<=@@ 4@@ ;i++)@@ scanf("%d%d%d",&@@ n[i]@@ [0]@@ ,&@@ n[i]@@ [1]@@ ,&@@ n[i]@@ [2@@ ]); int@@ month@@ [12]={31,28,31,30,31,30,31,31,30,31,30,31}; for(i=0;i<=@@ 4;i++) { month@@ [1]=@@ 28@@ +@@ leap@@ (n@@ [i]@@ [0]); total@@ [i]=0; for(m=0;m@@ <=@@ n[i]@@ [1]@@ -2@@ ;m@@ ++)@@ total@@ [i]=@@ total@@ [i]+@@ month@@ [m]; total@@ [i]=@@ total@@ [i]+@@ n[i]@@ [2]; printf("%d\n",@@ total@@ [i]); } }  
c -1
h -1
0

intmain() { charstr@@ [501],@@ subs@@ [501],@@ rep@@ [501]; inti,j,k,@@ len,@@ len1; scanf("%s%s%s",@@ str,@@ subs@@ ,@@ rep); i=0; len=strlen(@@ str); while(@@ str@@ [i]@@ !='\0') { if(str[i]==@@ subs@@ [0]) { len1=strlen(@@ subs@@ ); for(j=0;j<@@ len1@@ ;j++) if(str@@ [i+j]!=@@ subs@@ [j]@@ )break; if(j==@@ len1@@ ) { for(k=0;k<i;k++) printf("%c",str@@ [k]); printf("%s",@@ rep); for(k=i+@@ len1@@ ;k<@@ len@@ ;k++) printf("%c",str@@ [k]); break; } } i++; } if(str[i]==@@ '\0') printf("%s",str); return0; }  
c -1
h -1
intmain() { intn=0; cin>>n; inti=0,j=0; inta[n]; for(i=0;i<n;i++) { cin>>a[i]; } cout<<a[0]; for(i=1;i<n;i++) { for(j=0;j<=i;j++) { if(a[i]==a[j]) break; } if(i==@@ j) cout<<""<<a[i]; } return0; }  
c -1
h -1
0

intmain(){ double@@ q,@@ c; intt,@@ s,@@ i,@@ l1,l2@@ ; chara[501],b[501]; scanf("%lf",&@@ q); scanf("%s%s",a,b); l1@@ =strlen(a); l2@@ =strlen(b); if(l1!=l2@@ )@@ printf("error"); else{ t=0; for(i=0;i<l1;i++) if(((@@ a[i]!='@@ A')&&(@@ a[i]!='@@ T')&&(@@ a[i]!='@@ C')&&(@@ a[i]!='@@ G')@@ )||((@@ b[i]!='@@ A')&&(@@ b[i]!='@@ T')&&(@@ b[i]!='@@ C')&&(@@ b[i]!='@@ G')@@ )){ printf("error"); t=1; break; } if(t@@ ==0){ s=0; for(i=0;i<l1;i++) if(a[i]==b[i]@@ )@@ s=s+1; c@@ =1.0*@@ s/@@ l1; if(c@@ >@@ q@@ )@@ printf("yes"); elseprintf("no"); } } return0; }  
c -1
h -1
intmain() { intdays@@ [13]={0,31,28,31,30,31,30,31,31,30,31,30,31}; intyear,month,day; int@@ isleapyear@@ ; scanf("%d%d%d",&year,&month,&day); isleapyear@@ =(@@ year%4==0&&year%100!=0@@ )||@@ year%@@ 400==0@@ ; if(@@ isleapyear@@ &&@@ month==@@ 2@@ &&(@@ day@@ <@@ 1@@ ||@@ day@@ >@@ 29@@ )) { printf("@@ Illegal@@ input@@ .@@ \n"); return-1; } if(@@ isleapyear@@ &&@@ month@@ !=@@ 2@@ &&(@@ day@@ <@@ 1@@ ||@@ day@@ >@@ days@@ [@@ month@@ ]@@ )) { printf("@@ Illegal@@ input@@ .@@ \n"); return-1; } if(!@@ isleapyear@@ &&(@@ day@@ <@@ 1@@ ||@@ day@@ >@@ days@@ [@@ month@@ ]@@ )) { printf("@@ Illegal@@ input@@ .@@ \n"); return-1; } intn=0; inti; for(i=0;i<@@ month;i++) { n+=@@ days@@ [i]; } n+=@@ day; if(month@@ >2@@ &&@@ isleapyear@@ ) n++; printf("%d",n); return0; }  
c -1
h -1
0

void@@ fenjie@@ (int@@ ,int@@ ,int); int@@ g_num@@ ,@@ g_count@@ ; intmain() { intn,i; cin>>n; for(i=1;i<=n;i++) { g_count@@ =0; cin>>@@ g_num@@ ; fenjie@@ (2,@@ g_num@@ ,@@ 1); cout<<@@ g_count@@ <<endl; } return0; } void@@ fenjie@@ (inta,int@@ num,int@@ sum) { while(@@ a@@ <=@@ g_num@@ ) { sum@@ *=@@ a; if(sum@@ ==@@ g_num@@ ) g_count@@ ++; if(sum@@ <@@ g_num@@ ) fenjie@@ (a,@@ g_num@@ ,@@ sum); if(sum@@ >@@ g_num@@ ) return; sum@@ /=@@ a; a++; } }  
c -1
h -1
intmain() { inta[16],@@ i,j,k,@@ temp,@@ num@@ [100]; for(k=0;k<=@@ 99@@ ;k++) { num@@ [k]@@ =0; for(i=0;i<=@@ 15;i++) { a[i]=0; } for(i=0;i<=@@ 15;i++) { cin>>a[i]; if(a[i]<=@@ 0@@ ) break; } if(a[0]@@ <0) break; for(j=0;j<=@@ 13@@ ;j++) { for(i=0;i<=@@ 13@@ -j;i++) { if(a[i]@@ <@@ a[i+1]) { temp=@@ a[i],@@ a[i]=a[i+1@@ ],@@ a[i+1]=@@ temp; } } } for(i=0;i<=@@ 13@@ ;i++) { for(j=1;j<=@@ 14@@ -i;j++) { if(a[i]==2*@@ a[i+j@@ ]@@ &&@@ a[i+j@@ ]@@ >0) num@@ [k]=@@ num@@ [k]@@ +1; else num@@ [k]=@@ num@@ [k]; } } } for(i=0;i<=k-1;i++) { cout<<@@ num[i]@@ <<endl; } }  
c -1
h -1
0

structpatient { intage; charid@@ [12@@ ]; }; void@@ swap@@ (structpatient@@ *@@ a,@@ structpatient*@@ b) { structpatient@@ tmp; tmp=@@ *@@ a; *@@ a=@@ *@@ b; *@@ b=@@ tmp; } intmain() { intn,i,j=0,@@ k=0,@@ l; scanf("%d",&n); structpatient@@ tmp; structpatient@@ young@@ [@@ 120@@ ]; structpatient@@ old@@ [@@ 120@@ ]; for(i=0;i<n;i++) { scanf("%s",@@ tmp.@@ id); scanf("%d",&@@ tmp.@@ age); if(@@ tmp.@@ age@@ >=60) old@@ [j@@ ++]=@@ tmp; else young@@ [k@@ ++]=@@ tmp; } for(i=0;i<j;i++) { for(l=0;l<@@ j@@ -i@@ -1;@@ l++) { if(old@@ [l@@ ].age@@ <@@ old@@ [l@@ +1@@ ].age) swap(@@ &@@ old@@ [l@@ ]@@ ,&@@ old@@ [l@@ +1@@ ]); } } for(i=0;i<j;i++) printf("%s\n",old@@ [i].id); for(i=0;i<k;i++) printf("%s\n",@@ young@@ [i].id); return0; }  
c -1
h -1
structstudent { intid; intchinese; intmath; inttotal; }; intmain() { structstudentstu[100000]; structstudent@@ max@@ [3@@ ]={0@@ ,@@ 0,0,0,0,0,0,0,0,@@ 0,0,@@ 0@@ }; intn,i; scanf("%d",&n); for(i=0;i<n;i++) { scanf("%d%d@@ %d@@ \n",&@@ stu[i].@@ id@@ ,&stu[i].@@ chinese@@ ,&stu[i].math); stu[i].@@ total=@@ stu[i].@@ chinese+@@ stu[i].@@ math; } for(i=0;i<n;i++) { if(stu[i].@@ total@@ >max@@ [1].@@ total) { max@@ [1]=@@ stu[i]; } } for(i=0;i<n;i++) { if(stu[i].@@ total@@ >max@@ [2].@@ total@@ &&stu[i].@@ total@@ <=@@ max@@ [1].@@ total@@ &&stu[i].@@ id@@ !=@@ max@@ [1].@@ id@@ ) { max@@ [2]=@@ stu[i]; } } for(i=0;i<n;i++) { if(stu[i].@@ total@@ >max@@ [3].@@ total@@ &&stu[i].@@ total@@ <=@@ max@@ [2].@@ total@@ &&stu[i].@@ id@@ !=@@ max@@ [2].@@ id@@ &&stu[i].@@ id@@ !=@@ max@@ [1].@@ id@@ ) { max@@ [3@@ ]=@@ stu[i]; } } for(i=1;i<@@ 4;i++) { printf("%d%d\n",@@ max@@ [i].@@ id,@@ max@@ [i].@@ total); } return0; }  
c -1
h -1
0

intmain(intargc,char*argv[]) { inta,b,c; scanf("%d%d%d",&a,&b,&c); if((@@ a%4==0&&a%100!=0@@ )||(@@ a%400==0)) { intm[@@ 12]={31,29,31,30,31,30,31,31,30,31,30,31}; inti; intk=0; for(i=0;i<(@@ b@@ -1);i++) { k=k@@ +m@@ [i]; } k=k@@ +c; printf("%d",k); } else { intm[@@ 12]={31,28,31,30,31,30,31,31,30,31,30,31}; inti; intk=0; for(i=0;i<(@@ b@@ -1);i++) { k=k@@ +m@@ [i]; } k=k@@ +c; printf("%d",k); } return0; }  
c -1
h -1
intmain() { inty,m,d,@@ dd@@ =0,@@ i; scanf("%d%d%d",&y,&m,&d); if((y%@@ 4==0)&&(@@ y%100!=0@@ )||(y%@@ 400==0)) { for(i=1;i<m;i++) { switch(@@ i) { case1: case3: case5: case7: case8: case10: dd@@ +=@@ 31; break; case2: dd@@ +=@@ 29; break; case4: case6: case9: case11: dd@@ +=@@ 30; break; } } dd@@ =@@ dd@@ +d; printf("%d",@@ dd@@ ); } else { for(i=1;i<m;i++) { switch(@@ i) { case1: case3: case5: case7: case8: case10: dd@@ +=@@ 31; break; case2: dd@@ +=@@ 28; break; case4: case6: case9: case11: dd@@ +=@@ 30; break; } } dd@@ =@@ dd@@ +d; printf("%d",@@ dd@@ ); } return0; }  
c -1
h -1
1


voidmain() { int@@ st@@ (inta,int@@ b); intj,@@ n,m,@@ sum; scanf("%d",&n); for(j=1;j<=n;j++) { scanf("%d",&m); sum=@@ st@@ (2,@@ m); printf("%d\n",sum); } } int@@ st@@ (inta,intb) { inti,@@ c; c=0; if(a==0) c=c@@ +1; else { for(i=a@@ ;i<=sqrt(@@ b@@ );i++) { if(b@@ %i==0) c=@@ st@@ (i,@@ (@@ b@@ /i@@ ))@@ +c; } if(i>@@ sqrt(@@ b@@ )) c=c@@ +1; } return@@ c; }  
c -1
h -1
intmain() { chara[@@ 1000],b[1000],@@ c[@@ 1000]; inti,j,k,@@ m,n,@@ l,@@ t; gets(a); gets(b); gets(c); m=strlen(a); n@@ =strlen(b); l=strlen(@@ c); for(i=0;i<m;i++) { k=1; if(a[i]==@@ b[0]) { k=0; t=i; for(j=1;j<n;j++) { if(a@@ [i+j]!=@@ b[j]) { k=1; } } } if(k==0) { for(j=0;j<l@@ ;j++)@@ printf("%c",@@ c@@ [j]); for(i=@@ t@@ +l@@ ;i<@@ m@@ ;i++)@@ printf("%c",a[i]); break; } if(k==1) { printf("%c",a[i]); } } return0; }  
c -1
h -1
0

struct@@ v { chara[@@ 10]; intb; }; intmain() { intn,i,j=0,@@ l,@@ k; struct@@ v@@ *@@ c; struct@@ v@@ e@@ [100],@@ y; scanf("%d",&n); c@@ =(struct@@ v@@ *)malloc(@@ n*@@ sizeof(struct@@ v@@ )); for(i=0;i<n;i++) { scanf("%s%d",@@ c@@ [i].@@ a,&@@ c@@ [i].@@ b); } for(i=0;i<n;i++) { if(c@@ [i].@@ b@@ >=60) { e@@ [j]=@@ c[i]; j=j+1; } } k=j; for(l=1;@@ l<@@ k;@@ l++) { for(j=0;j<@@ k-@@ l@@ ;j++) { if(e@@ [j].@@ b<@@ e@@ [j+1].@@ b) { y=@@ e@@ [j]; e@@ [j]=@@ e@@ [j+1]; e@@ [j+1]=@@ y; } } } for(j=0;j<k;j++) { printf("%s\n",@@ e@@ [j].@@ a); } for(i=0;i<n;i++) { if(c@@ [i].@@ b@@ <60) { printf("%s\n",@@ c@@ [i].@@ a); } } return0; }  
c -1
h -1
structstudent { intnum; int@@ all@@ ; }@@ person@@ [@@ 99999@@ ]; intmain() { intn,i,j,k,@@ x,@@ y@@ ;@@ ; structstudent@@ temp1@@ ,@@ temp2@@ ; scanf("%d",&n); for(i=2@@ ;i>=0;i--) { scanf("%d%d%d",&@@ person@@ [i].num,&@@ x,&@@ y); person@@ [i].@@ all=@@ x+@@ y; } for(i=@@ 3@@ ;i<=@@ n-1;i++) { scanf("%d%d%d",&@@ person@@ [i].num,&@@ x,&@@ y); person@@ [i].@@ all=@@ x+@@ y; k=@@ person@@ [i].@@ all@@ ; if(k@@ >@@ person@@ [0].@@ all@@ ){@@ temp1@@ =@@ person@@ [0]@@ ;@@ temp2@@ =@@ person@@ [1]@@ ;@@ person@@ [0]=@@ person@@ [i];@@ person@@ [1]=@@ temp1@@ ;@@ person@@ [2]=@@ temp2@@ ;@@ continue;} if(k@@ <=@@ person@@ [0].@@ all@@ &&k@@ >@@ person@@ [1].@@ all@@ ){@@ temp1@@ =@@ person@@ [1]@@ ;@@ person@@ [1]=@@ person@@ [i];@@ person@@ [2]=@@ temp1@@ ;@@ continue;} if(k@@ <=@@ person@@ [1].@@ all@@ &&k@@ >@@ person@@ [2].@@ all@@ ){@@ person@@ [2]=@@ person@@ [i];@@ continue;} if(k@@ <@@ person@@ [2].@@ all@@ ){@@ continue;} } printf("%d%d\n",@@ person@@ [0].@@ num,@@ person@@ [0].@@ all@@ ); printf("%d%d\n",@@ person@@ [1].@@ num,@@ person@@ [1].@@ all@@ ); printf("%d%d",@@ person@@ [2@@ ].num,@@ person@@ [2].@@ all@@ ); return0; }  
c -1
h -1
0

intmain() { inti,j,k,l,@@ s@@ [100][100],@@ n@@ [100],@@ m@@ [100],@@ num@@ [100]; int@@ num1@@ [100]={0}; int@@ num2@@ [100]={0}; scanf("%d",&k); for(i=0;i<k;i++) { scanf("%d%d",&@@ n@@ [i],&@@ m[i]); for(j=0;j<n@@ [i];j++) { for(l=0;l<@@ m@@ [i];@@ l++) { scanf("%d",&@@ s[j]@@ [l]); num1@@ [i]@@ +=@@ s[j]@@ [l]; } } for(j=1;j<@@ n[i]@@ -1;j++) { for(l=1;@@ l<@@ m[i]@@ -1;@@ l++) { num2@@ [i]@@ +=@@ s[j]@@ [l]; } } num[i]=@@ num1@@ [i]@@ -@@ num2@@ [i]; } for(i=0;i<k;i++) { printf("%d\n",@@ num[i]); } return0; }  
c -1
h -1
intmain() { intk,i,j,@@ h,@@ m,n; intsum=0,@@ minus@@ =0; inta[100][100]; intb[100@@ ]; scanf("%d",&k); for(h=0;h@@ <k;@@ h++) { scanf("%d%d",&m,&n); for(i=0;i<m;i++) { for(j=0;j<n;j++) { scanf("%d",&a[i][j]); sum+=@@ a[i][j]; } } for(i=1;i<m-1;i++) { for(j=1;j<@@ n-1;j++) { minus@@ +=@@ a[i][j]; } } b[@@ h@@ ]=@@ sum@@ -@@ minus@@ ; sum=0; minus@@ =0; } for(h=0;h@@ <k;@@ h++) { printf("%d\n",@@ b[@@ h@@ ]); } return0; }  
c -1
h -1
1


int@@ yinshu@@ (int@@ num,int@@ min); intmain(){ intn,i; scanf("%d",&n); for(i=0;i<n;i++){ inta,@@ result; scanf("%d",&a); result=@@ yinshu@@ (a,@@ 2)@@ +1; printf("%d\n",@@ result); } return0; } int@@ yinshu@@ (int@@ num,int@@ min@@ ){ intr,@@ x=0; if(num@@ <@@ min@@ ){ return0; } else{ for(@@ r=@@ min@@ ;r@@ *@@ r@@ <=@@ num@@ ;r@@ ++){ if(num@@ %@@ r@@ ==0){ x=x@@ +1@@ +@@ yinshu@@ (@@ num@@ /@@ r,@@ r); } } return@@ x; }}  
c -1
h -1
intmain() { inti,n,@@ j; inta[20000]; scanf("%d",&n); for(i=0;i<=n-1;i++) { scanf("%d",&a[i]); } for(i=0;i<=n-1;i++) { if(i==0)@@ printf("%d",a[i]); else { for(j=0;j<i;j++) { if(a[i]==a[j]@@ )break; } if(j==@@ i)@@ printf("%d",a[i]); } } }  
c -1
h -1
0

intmain() { char@@ book[@@ 1000][@@ 20@@ ]={'\0'},@@ name@@ [1000][@@ 30@@ ]={'\0'}; int@@ length@@ ,@@ n,i,j,@@ number@@ [@@ 30@@ ]={0},@@ memory@@ ,@@ largest@@ ,@@ temp; scanf("%d",&n); for(i=0;i<n;i++) { scanf("%s%s",@@ book@@ [i],@@ name@@ [i]); } for(i=0;i<n;i++) { length@@ =strlen(@@ name@@ [i]); for(j=0;j<@@ length@@ ;j++) { temp=@@ name@@ [i][j]@@ -'A'; number@@ [@@ temp@@ ]@@ +=1; } } largest@@ =0; for(i=0;i<26;i++) { if(@@ number@@ [i]>@@ largest@@ ) { largest@@ =@@ number@@ [i]; memory@@ =i; } } printf("%c\n%d\n",@@ 'A'+@@ memory@@ ,@@ number@@ [@@ memory@@ ]); for(i=0;i<n;i++) { length@@ =strlen(@@ name@@ [i]); for(j=0;j<@@ length@@ ;j++) { if(name[i][j]=='@@ A'+@@ memory@@ ) { printf("%s\n",@@ book@@ [i]); } } } return0; }  
c -1
h -1
intmain() { intk,m,n,i,j,@@ sum,@@ matrix@@ [100][100]; scanf("%d",&k); while(k@@ >0){ k--; sum=0; scanf("%d%d",&@@ m,@@ &@@ n); for(i=0;i<m;i++){ for(j=0;j<n;j++) scanf("%d",@@ *(@@ matrix@@ +i)@@ +j); } if(m@@ ==1&&n@@ ==1) printf("%d\n",@@ **@@ matrix@@ ); elseif(m@@ ==1){ for(i=0;i<n;i++) sum+=*(@@ *@@ matrix@@ +i); printf("%d\n",sum); } elseif(n@@ ==1){ for(i=0;i<m;i++) sum+=@@ **@@ (@@ matrix@@ +i); printf("%d\n",sum); } else{ for(i=0;i<n;i++) sum+=*(@@ *@@ matrix@@ +i); for(i=0;i<n;i++) sum+=@@ *(*(@@ matrix@@ +m-1)@@ +i); for(i=1;i<m-1;i++) sum+=@@ (@@ **@@ (@@ matrix@@ +i)@@ +*(@@ *(@@ matrix@@ +i)@@ +@@ n-1@@ )); printf("%d\n",sum); } } return0; }  
c -1
h -1
0

voidmain() { intm,n,@@ a[100][100],@@ i,j,@@ sum,@@ t; scanf("%d",&t); while(t@@ --){ sum=0; scanf("%d%d",&m,&n); for(i=0;i<m;i++) for(j=0;j<n@@ ;j++)@@ scanf("%d",&a[i][j]); if(m@@ >1@@ )@@ for(i=0;i<m;i++)@@ sum+=@@ a[i][0]+@@ a[i][n-1]; else@@ for(i=0;i<m;i++)@@ sum+=@@ a[i][0]; if(n@@ >1@@ )@@ for(i=1;i<@@ n-1@@ ;i++)@@ sum+=@@ a[0]@@ [i]+@@ a[m-1]@@ [i]; else@@ for(i=1;i<@@ n-1@@ ;i++)@@ sum+=@@ a[0][i]; printf("%d\n",sum); } }  
c -1
h -1
struct@@ p { char@@ i@@ [10]; inta; struct@@ p@@ *next; }; voidmain() { struct@@ p@@ *@@ p1,*p2,*@@ head,*@@ head2@@ ,*@@ q1@@ ,*@@ q2@@ ; intn,i,@@ k=0,@@ b=0,@@ x=0; scanf("%d",&n); p1=p2=(struct@@ p@@ *)malloc(len); scanf("%s%d",p1->@@ i@@ ,&p1->@@ a); for(i=0;i<n;i++) { k++; if(k@@ ==1)head=p1; elsep2->next=p1; p2=p1; p1=(struct@@ p@@ *)malloc(len); scanf("%s%d",p1->@@ i@@ ,&p1->@@ a); } p2->next=NULL; for(p1=@@ head;@@ p1@@ !=NULL;@@ p1=p1->next@@ )@@ if(p1->@@ a@@ >=60@@ )@@ x++; k=0; for(p1=@@ head;@@ p1@@ !=NULL;@@ p1=p1->next) if(p1->@@ a@@ >=60&&@@ p1->@@ a@@ >b@@ ){@@ b=@@ p1->@@ a;@@ p2@@ =p1;} q1=@@ q2@@ =(struct@@ p@@ *)malloc(len); strcpy(@@ q1->@@ i,@@ p2->@@ i@@ );@@ q1->@@ a=@@ p2->@@ a;@@ p2->@@ a=0; for(i=0;i<x@@ -1;i++) {@@ k++; if(k@@ ==1)@@ head2@@ =@@ q1@@ ; else@@ q2@@ ->next=@@ q1@@ ; q2@@ =@@ q1@@ ;@@ b=0; for(p1=@@ head;@@ p1@@ !=NULL;@@ p1=p1->next) if(p1->@@ a@@ >=60&&@@ p1->@@ a@@ >b@@ ){@@ b=@@ p1->@@ a;@@ p2@@ =p1;} q1@@ =(struct@@ p@@ *)malloc(len); strcpy(@@ q1->@@ i,@@ p2->@@ i@@ );@@ q1->@@ a=@@ p2->@@ a;@@ p2->@@ a=0; } q2@@ ->next=@@ q1@@ ;@@ q2@@ =@@ q1@@ ; for(p1=@@ head;@@ p1@@ !=NULL;@@ p1=p1->next) if(p1->@@ a@@ >0){ q1@@ =(struct@@ p@@ *)malloc(len); strcpy(@@ q1->@@ i,@@ p1->@@ i@@ );@@ q1->@@ a=@@ p1->@@ a;@@ p1->@@ a=0; q2@@ ->next=@@ q1@@ ;@@ q2@@ =@@ q1@@ ; } q2@@ ->next=NULL; for(@@ q1=@@ head2@@ ;@@ q1@@ !=NULL;@@ q1=@@ q1@@ ->next) printf("%s\n",@@ q1->@@ i); }  
c -1
h -1
0

intmain() { intn,k,i,j,@@ a; scanf("%d%d",&n,&k); intsz[1000]; for(i=0;i<n;i++) { scanf("%d",&sz[i]); } intm=0; for(i=0;i<n;i++) { for(j=0;j<n;j++) { if(i==@@ j) break; else { a=@@ sz[i]@@ +sz@@ [j]; if(a@@ ==k) m++; } } } if(m==0) printf("no"); else printf("yes"); return0; }  
c -1
h -1
intmain() { intn,i,@@ a[@@ 30000@@ ],@@ j; scanf("%d\n",&n); scanf("%d",&a[0]); printf("%d",a[0]); for(i=1;i<n;i++) { scanf("%d",&a[i]); } for(i=1;i<n;i++) { for(j=0;j<=i;j++) { if(a[i]==a[j]) break; } if(j==i) printf("%d",a[i]); } return0; }  
c -1
h -1
0

intmain() { intn=0,@@ k=0,@@ i=0,j=0,@@ a[@@ 1001@@ ],@@ s=0; cin>>n>>k; for(i=1;i<=n;i++) { cin>>a[i]; } for(i=1;i<=n;i++) { for(j=i+1;j<=n;j++) { if(a[i]+a[j]==k) { s=s+1; } } } if(s@@ ==0) cout<<"no@@ "<<endl; else cout<<"yes@@ "<<endl; return0; }  
c -1
h -1
intmain() { intn; int@@ area@@ [1000][1000]; scanf("%d",&n); intf@@ =1; int@@ start1@@ ,@@ start2@@ ,@@ end1@@ ,@@ end2@@ ,@@ re@@ ; for(inti=0;i<n;i++) { for(intj=0;j<n;j++) { scanf("%d",&@@ area@@ [i][j]); if(@@ area@@ [i][j]==0&&@@ f@@ ==1) { start1@@ =i; start2@@ =j; f=@@ 2; } if(@@ area@@ [i][j]==0) { end1@@ =i; end2@@ =j; } } } re@@ =(@@ end1@@ -@@ start1@@ -1)*(@@ end2@@ -@@ start2@@ -1); printf("%d",@@ re); return0; }  
c -1
h -1
0

void@@ jisuan@@ (int,int); int@@ times@@ ,@@ sum,@@ i,@@ n; intmain() { cin>>@@ times@@ ; for(i=0;i<@@ times@@ ;i++) { sum=0; cin>>n; jisuan@@ (n,@@ 2); cout<<sum<<endl; } return0; } void@@ jisuan@@ (intn,int@@ j) { inti; for(i=j@@ ;i<=n;i++) { if(n@@ >1) { if(n%i==0) { if(n@@ %i@@ !=0&&@@ n@@ >@@ i) sum++; jisuan@@ (n/i,i); } } if(n==@@ i) sum++; } }  
c -1
h -1
structstu { intnum; int@@ yw@@ ; int@@ sx; int@@ zf@@ ; }@@ s1,@@ s2,@@ s3@@ ,@@ s; intmain() { intn,i; s1@@ .@@ zf@@ =@@ s2@@ .@@ zf@@ =@@ s3@@ .@@ zf@@ =-1; scanf("%d",&n); for(i=0;i<n;i++) { scanf("%d%d%d",&@@ s.@@ num,&@@ s.@@ yw@@ ,&@@ s.@@ sx@@ ); s.@@ zf@@ =@@ s.@@ yw@@ +@@ s.@@ sx; if(s@@ .@@ zf@@ >@@ s1@@ .@@ zf@@ ) { s3=@@ s2; s2=@@ s1@@ ; s1@@ =@@ s; } elseif(@@ s.@@ zf@@ >@@ s2@@ .@@ zf@@ ) { s3=@@ s2; s2=@@ s; } elseif(@@ s.@@ zf@@ >@@ s3@@ .@@ zf@@ ) { s3=@@ s; } } printf("%d%d\n",@@ s1@@ .num,@@ s1@@ .@@ zf@@ ); printf("%d%d\n",@@ s2@@ .num,@@ s2@@ .@@ zf@@ ); printf("%d%d",@@ s3@@ .num,@@ s3@@ .@@ zf@@ ); return0; }  
c -1
h -1
0

intmain() { inta[100][100@@ ]={0}; int@@ hang@@ ,@@ lie@@ ; cin>>@@ hang@@ >>@@ lie@@ ; inti,j; for(i=0;i<@@ hang@@ ;i++) { for(j=0;j<@@ lie@@ ;j++) cin>>a[i][j]; } intt; for(t=0;t@@ <=@@ hang@@ +@@ lie@@ -2@@ ;t++) { for(i=0;i<@@ hang@@ ;i++) { for(j=0;j<@@ lie@@ ;j++) { if(i+j@@ ==@@ t) cout<<a[i][j]<<endl; } } } return0; }  
c -1
h -1
intmain() { short@@ int@@ map@@ [@@ 1001@@ ][@@ 1001]; intn,i,j,@@ bx@@ ,@@ by@@ ,@@ ex@@ ,@@ ey@@ ,@@ ans; cin>>n; for(i=1;i<=n;i++) for(j=1;j<=n;j++) cin>>@@ map@@ [i][j]; for(i=2@@ ;i<n;i++) for(j=2@@ ;j<n;j++) { if(@@ map@@ [i][j]==@@ 255) { if(@@ map@@ [i]@@ [j-1]@@ ==0&&@@ map@@ [i-1][j]@@ ==0) { bx@@ =i; by@@ =j; } if(@@ map@@ [i]@@ [j+1]@@ ==0&&@@ map@@ [i+1][j]@@ ==0) { ex@@ =i; ey@@ =j; } } } ans@@ =(@@ ex@@ -@@ bx@@ +1)*(@@ ey@@ -@@ by@@ +1); cout<<@@ ans; return0; }  
c -1
h -1
0

intmain(){ intn,i,j,k,@@ z; char@@ max; int@@ sum[@@ 999@@ ]={0}; structstudent{ inta; charb[@@ 26]; intc[@@ 26]; }@@ x[@@ 999]; scanf("%d\n",&n); for(i=0;i<n;i++){ scanf("%d",&@@ x@@ [i].@@ a); for(j=0;@@ ;j++){ scanf("%@@ c@@ ",&@@ x@@ [i].@@ b[j]); if(x@@ [i].@@ b[j]@@ ==@@ '\n@@ ') break; x@@ [i].@@ c[@@ x@@ [i].@@ b[j]@@ -65@@ ]@@ ++;} } for(k=0;k<26@@ ;k++){ for(i=0;i<@@ 999@@ ;i++){ sum@@ [k]=@@ sum@@ [k]@@ +@@ x@@ [i].@@ c@@ [k]; } } z=@@ sum[@@ 0]; max=@@ 65@@ ; for(k=1;k<@@ 26@@ ;k++){ if(sum@@ [k]@@ >@@ z@@ ){ max=@@ k@@ +65; z=@@ sum@@ [k]; } } printf("%c\n",@@ max); printf("%d\n",@@ z); for(i=0;i<n;i++){ if(x@@ [i].@@ c[@@ max@@ -65@@ ]@@ >0){ printf("%d\n",@@ x@@ [i].@@ a); } } scanf("%d",@@ i); return0;}  
c -1
h -1
main() { int@@ q1@@ ,@@ q2@@ ,@@ q3@@ ,@@ k=0; scanf("%d%d%d",&@@ q1@@ ,&@@ q2@@ ,&@@ q3@@ ); if((@@ q1@@ %4==0&&@@ q1@@ &@@ 100!=0@@ )||@@ q1@@ %@@ 400==0)@@ k++; inta[@@ 15@@ ],b[@@ 16]; if(k@@ ==0)@@ a[2]=@@ 28@@ ;@@ else@@ a[2]=@@ 29; a[1]=@@ 31@@ ;a[@@ 3@@ ]=31;a[@@ 4@@ ]=30@@ ;a[@@ 5@@ ]=31;a[@@ 6@@ ]=30; a[@@ 7@@ ]=31;a[@@ 8@@ ]=31;a[@@ 9@@ ]=30@@ ;a[@@ 10@@ ]=31;a[@@ 11@@ ]=30; a[@@ 12@@ ]=31@@ ;@@ b[1@@ ]=0; for(inti=2;i<=@@ 12@@ ;i++) b[i]=b@@ [i-1]@@ +@@ a[i@@ -1]; printf("%d",b[@@ q2@@ ]+@@ q3@@ ); getchar();@@ getchar(); }  
c -1
h -1
0

intm,n; inta[100]; void@@ insert@@ (void) { inti=0; scanf("%d%d",&m,&n); for(i=0;i<m;i++) { scanf("%d",&a[i]); } printf("\n"); for(i=m;i<@@ m+n;i++) { scanf("%d",&a[i]); } } void@@ px@@ (int*p@@ ) { inti,j,@@ b=0; for(i=0;i<m;i++) { for(j=@@ m-1@@ ;j>i;j--) { if(@@ *(p+j)@@ <*@@ (p@@ +j@@ -1)) { b@@ =*(p@@ +j); *(p+j)@@ =*(p@@ +j@@ -1); *(p@@ +j@@ -1)@@ =@@ b; } } } for(i=m;i<@@ m+n;i++) { for(j=@@ m+@@ n-1@@ ;j>i;j--) { if(@@ *(p+j)@@ <*@@ (p@@ +j@@ -1)) { b@@ =*(p@@ +j); *(p+j)@@ =*(p@@ +j@@ -1); *(p@@ +j@@ -1)@@ =@@ b; } } } printf("%d",@@ *(p+@@ 0@@ )); for(i=1;i<@@ m+n;i++) { printf("%d",@@ *(p@@ +i)); } } voidmain() { insert@@ (); px@@ (a); }  
c -1
h -1
intmain() { intyear,month,day,@@ leap@@ ,@@ y; scanf("%d%d%d",&year,&month,&day); if(year%@@ 4==0) { if(year%@@ 100==0) { if(year%@@ 400==0) leap@@ =1; else leap@@ =0; } else leap@@ =1; } else leap@@ =0; if(leap@@ ==1) { switch(month) { case1:@@ printf("%d",@@ day@@ );break; case2:@@ printf("%d",@@ 31+@@ day@@ );break; case3:@@ printf("%d",@@ 29@@ +31+@@ day@@ );break; case4:@@ printf("%d",31+29@@ +31+@@ day@@ );break; case5:@@ printf("%d",@@ 30@@ +31+29@@ +31+@@ day@@ );break; case6:@@ printf("%d",@@ 31+30@@ +31+29@@ +31+@@ day@@ );break; case7:@@ printf("%d",@@ 30@@ +31+30@@ +31+29@@ +31+@@ day@@ );break; case8:@@ printf("%d",@@ 31+30@@ +31+30@@ +31+29@@ +31+@@ day@@ );break; case9:@@ printf("%d",@@ 31+@@ 31+30@@ +31+30@@ +31+29@@ +31+@@ day@@ );break; case10:@@ printf("%d",@@ 30@@ +31+@@ 31+30@@ +31+30@@ +31+29@@ +31+@@ day@@ );break; case11:@@ printf("%d",@@ 31+30@@ +31+@@ 31+30@@ +31+30@@ +31+29@@ +31+@@ day@@ );break; case12:@@ printf("%d",@@ 30@@ +31+30+31+@@ 31+30@@ +31+30@@ +31+29@@ +31+@@ day@@ );break; } } else { switch(month) { case1:@@ printf("%d",@@ day@@ );break; case2:@@ printf("%d",@@ 31+@@ day@@ );break; case3:@@ printf("%d",@@ 28@@ +31+@@ day@@ );break; case4:@@ printf("%d",31+28@@ +31+@@ day@@ );break; case5:@@ printf("%d",@@ 30@@ +31+28@@ +31+@@ day@@ );break; case6:@@ printf("%d",@@ 31+30@@ +31+28@@ +31+@@ day@@ );break; case7:@@ printf("%d",@@ 30@@ +31+30@@ +31+28@@ +31+@@ day@@ );break; case8:@@ printf("%d",@@ 31+30@@ +31+30@@ +31+28@@ +31+@@ day@@ );break; case9:@@ printf("%d",@@ 31+@@ 31+30@@ +31+30@@ +31+28@@ +31+@@ day@@ );break; case10:@@ printf("%d",@@ 30@@ +31+@@ 31+30@@ +31+30@@ +31+28@@ +31+@@ day@@ );break; case11:@@ printf("%d",@@ 31+30@@ +31+@@ 31+30@@ +31+30@@ +31+28@@ +31+@@ day@@ );break; case12:@@ printf("%d",@@ 30@@ +31+30+31+@@ 31+30@@ +31+30@@ +31+28@@ +31+@@ day@@ );break; } } return0; }  
c -1
h -1
0

void@@ turn@@ (inta[],intn) { inti,j,k; for(i=0;i<n-1;i++) for(j=i;j<@@ n;j++){ if(a[i]>@@ a[j]@@ ){ k=@@ a[i]; a[i]=a[j]; a[j]=@@ k; }} for(i=0;i<n;i++){ if(i==0)@@ printf("%d",a[i]); else@@ printf("%d",a[i]); } } voidf@@ (inta[],intb[],int@@ an@@ ,int@@ bn@@ ) { turn@@ (a,@@ an@@ ); printf(""); turn@@ (b,@@ bn@@ ); } voidmain() { inti,@@ an@@ ,@@ bn@@ ,@@ a[100],b[100]; scanf("%d%d",&@@ an@@ ,&@@ bn@@ ); for(i=0;i<@@ an@@ ;i++)@@ scanf("%d",&a[i]); for(i=0;i<@@ bn@@ ;i++)@@ scanf("%d",&b[i]); f@@ (a,b,@@ an@@ ,@@ bn@@ ); }  
c -1
h -1
structStudent { intnum; intyuwen; intmath; }@@ temp,@@ stu[@@ 100050@@ ]; intmain() { intn,i,j,k; scanf("%d",&n); for(i=0;i<n;i++) { scanf("%d%d%d",&stu[i].num,&stu[i].@@ yuwen@@ ,&stu[i].math); stu[i].@@ math@@ =stu[i].@@ yuwen+stu[i].@@ math; } for(i=0;i<3;i++) { k=i; for(j=i+1;j<n;j++) if(stu[j].@@ math@@ >@@ stu[k].@@ math@@ ) k=j; temp=@@ stu@@ [k]@@ ;@@ stu@@ [k]=@@ stu@@ [i];@@ stu[i]=@@ temp; } for(i=0;i<3;i++) printf("%d%d\n",stu[i].@@ num,@@ stu[i].@@ math); }  
c -1
h -1
0

intmain(){ inta,@@ r; intn,k,@@ sz[@@ 1000]; scanf("%d%d\n",&n,&@@ k); for(inti=1;i<=@@ n;i++){ scanf("%d",&sz[i]); } for(@@ r@@ =1;@@ r@@ <n;@@ r@@ ++){ for(@@ a=@@ r@@ +1;@@ a@@ <=n;@@ a++){ if(@@ sz[a@@ ]+sz[@@ r@@ ]==k){ printf("yes"); break; } } if(a@@ <=@@ n) break; } if(r@@ >=@@ n) printf("no"); return0; }  
c -1
h -1
voidmain() { intk,i,j,@@ h@@ [25@@ ]={0},@@ n[@@ 25@@ ]={@@ 1@@ },@@ num; scanf("%d",&k); for(i=0;i<k;i++) scanf("%d",&h[i]); for(i=k-2;i>=0;i--) {@@ for(j=i+1;j<k;j++) { if(h@@ [i]>=@@ h@@ [j]&&@@ n[i]@@ <n@@ [j]@@ +1) n[i]=@@ n@@ [j]+1; } } num=@@ n@@ [0]; for(i=0;i<k;i++) { if(num@@ <n@@ [i]) num=@@ n[i]; } printf("%d",@@ num@@ +1); }  
c -1
h -1
0

intmain() { charstr[256],@@ a[@@ 256],b[@@ 256],@@ tmp@@ [256]; inti,@@ lenstr@@ ,@@ lena@@ ; char*@@ pstr@@ ; gets(str); gets(a); gets(b); lenstr@@ =strlen(@@ str); lena@@ =strlen(a); for(i=0;i<=@@ lenstr@@ -@@ lena@@ ;i++) { pstr@@ =&@@ str@@ [i]; strncpy@@ (@@ tmp@@ ,@@ pstr@@ ,@@ lena@@ ); tmp@@ [@@ lena@@ ]='\0'; if(strcmp(@@ tmp@@ ,@@ a)@@ ==0) { str@@ [i]@@ ='@@ @@@ '; break; } } for(i=0;i<@@ lenstr@@ ;i++) { if(str@@ [i]=='@@ @@@ ') { printf("%s",@@ b); i@@ =i+@@ lena@@ -1; } else@@ printf("%c",@@ str[i]); } printf("\n"); return0; }  
c -1
h -1
int@@ judge@@ (inti,@@ chars[@@ 800@@ ],@@ char@@ sub@@ [@@ 800@@ ]) { intj,@@ k; for(j=i;j<=@@ i+@@ strlen(@@ sub)@@ -1;j++) if(s@@ [j]!=@@ sub@@ [j-i@@ ]@@ )break; if(j==@@ i+@@ strlen(@@ sub@@ ))@@ return1; else@@ return0; } void@@ change@@ (inti,@@ chars[@@ 800@@ ],@@ char@@ sub@@ [@@ 800@@ ],@@ char@@ r@@ [@@ 800@@ ]) { intl,@@ ls@@ ,@@ lr@@ ,j,@@ k; l@@ =strlen(s); ls@@ =strlen(@@ sub@@ );@@ lr@@ =(@@ strlen(@@ r@@ )); if(@@ ls@@ <=@@ lr@@ ){@@ k=@@ lr@@ -@@ ls@@ ; for(j=@@ l@@ +k@@ +1@@ ;j@@ >=@@ i+@@ lr@@ ;j--@@ )@@ s[j]=@@ s@@ [j@@ -k@@ ]; for(j=i;j<=@@ i+@@ lr@@ -1;j++) s[j]=@@ r@@ [j-i@@ ]; } else{@@ k=@@ ls@@ -@@ lr@@ ; for(j=i@@ +@@ lr@@ ;j<=@@ l@@ -k@@ +1@@ ;j++)@@ s[j]=@@ s@@ [j@@ +k@@ ]; for(j=i;j<=@@ i+@@ lr@@ -1;j++) s[j]=@@ r@@ [j-i@@ ]; } } main() { chars[@@ 800@@ ],@@ sub@@ [@@ 800@@ ],@@ r@@ [@@ 800@@ ]; intl,@@ i; scanf("%s",s); scanf("%s",@@ sub); scanf("%s",@@ r); l@@ =strlen(s); for(i=0;i<l;i++) if((@@ s@@ [i]==@@ sub@@ [0]@@ )&&(@@ judge@@ (i,@@ s,@@ sub)@@ >0@@ )){@@ change@@ (i,@@ s,@@ sub,@@ r@@ );break;} puts(@@ s); }  
c -1
h -1
1


voidmain() { intx,y,@@ i,j,@@ t; inta[100],b[100]; scanf("%d%d",&@@ x,&@@ y); for(i=0;i<x;i++) scanf("%d",&a[i]); for(i=0;i<y;i++) scanf("%d",&b[i]); for(j=0;j<=@@ x@@ -1;j++) for(i=0;i<x@@ -j@@ -1;i++) if(a[i]>a[i+1]) {t=@@ a[i];@@ a[i]=a[i+1@@ ];@@ a[i+1]=@@ t;} for(j=0;j<=@@ y@@ -1;j++) for(i=0;i<@@ y@@ -j@@ -1;i++) if(b[i]>b[i+1]) {t=@@ b[i]@@ ;@@ b[i]=b@@ [i+1@@ ];@@ b[i+1]=@@ t;} for(i=0;i<x;i++) printf("%d",a[i]); for(i=0;i<@@ y@@ -1;i++) {printf("%d",@@ b[i]@@ );} printf("%d",b[@@ y@@ -1]); }  
c -1
h -1
intmain() { intk,@@ height@@ [25],@@ maxC@@ [25@@ ]={0},@@ j,@@ i,@@ max=0; scanf("%d",&k); for(i=0;i<k;i++) { scanf("%d",&@@ height@@ [i]); for(j=0@@ ,@@ max@@ =0;j<@@ i;j++) { if(@@ height@@ [j]>=@@ height@@ [i]) if(@@ maxC@@ [j]@@ >max) max=@@ maxC@@ [j]; } if(max@@ ==0)@@ maxC@@ [i]=1; else@@ maxC@@ [i]=@@ ++@@ max; } for(i=1@@ ,@@ max@@ =0;i<@@ k;i++) if(@@ maxC@@ [i]>max) max=@@ maxC@@ [i]; printf("%d\n",max); return0; }  
c -1
h -1
0

intmain() { inta[100][100],@@ row,col; cin>>row>>col; for(inti=0;i<row;i++) { for(intj=0;j<col;j++) { cin>>a[i][j]; } } for(inti=0;i<=@@ row+col-2@@ ;i++) { for(intj=0;j<@@ row@@ ;j++) { if(j@@ >=0@@ &&j@@ <row@@ &&i@@ -j@@ >=0&&i@@ -j@@ <col) cout<<@@ a[j][i-j@@ ]<<endl; elsecontinue; } } return0; }  
c -1
h -1
intmain() { intsz[100][100]; introw,col; scanf("%d%d",&row,&col); for(inti=0;i<row;i++) { for(intj=0;j<col;j++) { scanf("%d",&sz[i][j]); } } for(intk=0@@ ;k<=@@ row+col-2@@ ;k++) { if((@@ k@@ <=col@@ -1)@@ &&(@@ k@@ <=row@@ -1)) { for(intl@@ =0;@@ l@@ <=k;@@ l++) { printf("%d\n",@@ sz[@@ l@@ ][@@ k-@@ l@@ ]); } } elseif((@@ k@@ <=col@@ -1)@@ &&(@@ k@@ >@@ row@@ -1)) { for(intm=0;m@@ <=row-1@@ ;m++) { printf("%d\n",@@ sz[m@@ ][@@ k-@@ m@@ ]); } } elseif((@@ k@@ >@@ col@@ -1)@@ &&(@@ k@@ <=row@@ -1)) { for(int@@ t=@@ k-@@ col@@ +1@@ ;t@@ <=k;@@ t++) { printf("%d\n",@@ sz[@@ t@@ ][@@ k-@@ t@@ ]); } } elseif((@@ k@@ >@@ col@@ -1)@@ &&(@@ k@@ >@@ row@@ -1)) { for(int@@ p=@@ k-@@ col@@ +1@@ ;p@@ <=row-1@@ ;p++) { printf("%d\n",@@ sz[@@ p@@ ][@@ k-@@ p@@ ]); } } } return0; }  
c -1
h -1
1


void@@ a@@ (ints[],int@@ x) { inti; for(i=1;i<=@@ x;i++) scanf("%d",&s[i]); } void@@ b@@ (ints[],int@@ x) {@@ inti,j; for(i=1;i<=@@ x@@ -1;i++) { for(j=1;j<=@@ x@@ -i;j++) { if(s@@ [j]>@@ s@@ [j+1]) { s[@@ 0]=@@ s[j]; s[j]=@@ s@@ [j+1]; s@@ [j+1]=@@ s[@@ 0]; } } } } void@@ c@@ (intp@@ [],int@@ x,int@@ q@@ [],int@@ y) { inti; for(i=1;i<=@@ y;i++) p[@@ x@@ +i]=@@ q@@ [i]; } void@@ d@@ (ints[],int@@ x) { inti; for(i=1;i<=@@ x@@ -1;i++) printf("%d",@@ s[i]); printf("%d\n",@@ s[@@ x@@ ]); } voidmain() { int@@ p[@@ 60@@ ],@@ q@@ [@@ 30],@@ m,n; scanf("%d%d",&m,&n); a@@ (p,@@ m); a@@ (@@ q,@@ n); b@@ (p,@@ m); b@@ (@@ q,@@ n); c@@ (p,@@ m,@@ q,@@ n); d@@ (p,@@ m+@@ n); }  
c -1
h -1
intmain(intargc,char*argv[]) { inti,j,@@ k@@ [@@ 16],@@ a,@@ p,@@ b,@@ c,@@ q; for(i=1;i<@@ 1000@@ ;i++) { p@@ =0;q@@ =0; for(j=0;j<@@ 16@@ ;j++) { scanf("%d",&a); if(a@@ ==-1)break; elseif(a@@ !=-1) { if(a@@ ==0)break; else { k@@ [j]=@@ a; p++; } } } if(a@@ ==-1)break; for(b=0;b@@ <p@@ ;@@ b++) { for(c=0;c@@ <p@@ ;c@@ ++){ if(k@@ [b@@ ]@@ -2*@@ k@@ [c@@ ]==0) q++; } } printf("%d\n",@@ q); } return0; }  
c -1
h -1
0

main() { intn,i,j,@@ t; scanf("%d",&n); int*p=@@ (int*)malloc(n*sizeof(int)); int*@@ f=@@ (int*)malloc(n*sizeof(int)); for(i=0;i<n;i++) scanf("%d",&@@ p[i]); for(i=0;i<n;i++) f@@ [i]=0; for(i=0;i<n;i++) { t=0; for(j=0;j<=i;j++) { if(p@@ [i]<=@@ p@@ [j]&&@@ t@@ <=@@ f@@ [j]) t=@@ f@@ [j]; } f[i]=@@ t@@ +1; } for(i=0,@@ t@@ =1@@ ;i<n;i++) { if(t@@ <@@ f@@ [i]) t=@@ f[i]; } printf("%d\n",t); }  
c -1
h -1
main() { inta[@@ 25],b[@@ 25],@@ k,i,j,@@ max=0; scanf("%d",&k); for(i=0;i<k;i++) { scanf("%d",a@@ +i); b[i]=1; for(j=0;j<i;j++) if(a[j]>=a[i]&&@@ b[j]@@ +1>@@ b[i]@@ )@@ b[i]=b[j]+1; if(b[i]@@ >max)max=@@ b[i]; } printf("%d",max); }  
c -1
h -1
1


structpatient { charid[10]; intage; int@@ turn@@ ; }@@ pat@@ [100],@@ temp; voidmain() { intn,i,j; scanf("%d",&n); for(i=0;i<n;i++) { scanf("%s%d",@@ pat[i].@@ id,&@@ pat@@ [i].age); pat[i].@@ turn@@ =i; } for(i=0;i<n;i++) if(pat@@ [i].age<60) { j@@ =i+1; while((@@ pat@@ [j].age@@ <60@@ )&&(@@ j@@ <n@@ ))@@ j++; if(pat@@ [j].age@@ >=60) { temp=@@ pat@@ [i]; pat@@ [i]=@@ pat@@ [j]; pat@@ [j]=temp; } } for(i=0;@@ (@@ pat@@ [i].age@@ >=60@@ )&&(i@@ <n@@ );i++) for(j=i+1;j<n;j++) if((@@ pat@@ [j].age@@ >@@ pat@@ [i].age@@ )||((@@ pat@@ [i].age@@ ==@@ pat@@ [j].age@@ )&&(@@ pat[j].@@ turn@@ <@@ pat[i].@@ turn@@ )@@ )) { temp=@@ pat@@ [i]; pat@@ [i]=@@ pat@@ [j]; pat@@ [j]=temp; } for(i=0;i<n;i++) if(pat@@ [i].age<60) { for(j=i+1;j<n;j++) if(@@ pat[i].@@ turn@@ >@@ pat[j].@@ turn@@ ) { temp=@@ pat@@ [i]; pat@@ [i]=@@ pat@@ [j]; pat@@ [j]=temp; } } for(i=0;i<n;i++) printf("%s\n",@@ pat@@ [i].id); }  
c -1
h -1
intmain() { while(1) { int@@ i@@ =0;@@ inta[@@ 20@@ ]={0}; intsum=0; do { cin>>a[i]; i++; } while(@@ a[i-1]@@ >0@@ ); if(a@@ [i-1@@ ]==@@ -1) break; for(intj=0;j<@@ i-1;j++) { for(intk=0;k<@@ i-1;k++) if(a[j]@@ *2==@@ a[k]) sum++; } cout<<sum<<endl; } }  
c -1
h -1
0

intmain() { doublea,@@ f; int@@ d,@@ e,@@ k,@@ i; charb[@@ 505@@ ]; charc[@@ 505@@ ]; k=0; scanf("%lf",&a); scanf("%s",b); scanf("%s",c); d@@ =strlen(b); e@@ =strlen(c); if(d@@ !=@@ e@@ ){ printf("error"); }else{ for(i=0;i<d@@ ;i++){ if(((@@ b[i]!='@@ A')&&(@@ b[i]!='@@ T')&&(@@ b[i]!='@@ C')&&(@@ b[i]!='@@ G')@@ )||((@@ c@@ [i]!='A')&&(@@ c@@ [i]!='T')&&(@@ c@@ [i]!='C')&&(@@ c@@ [i]!='G')@@ )){ printf("error"); k=1; break; } } if(k@@ ==0){ for(i=0;i<d@@ ;i++){ if(b[i]==@@ c[i]@@ ){ k++; } } f=@@ k/@@ (@@ d@@ *1.0@@ ); if(f@@ >@@ a){ printf("yes"); }else{ printf("no"); } } } return0; }  
c -1
h -1
intmain() { intk,@@ a[@@ 26],@@ r@@ [26]; cin>>k; for(inti=0;i<@@ 26;i++) a[i]=0; for(inti=0;i<@@ 26;i++) r@@ [i]=1; for(inti=0;i<k;i++) cin>>a[i]; for(inti=0;i<k;i++) { if(i==0) r@@ [i]=1; else { for(intj=0;j<i;j++) { if(a[j]>=a[i]&&@@ r@@ [j]>=@@ r@@ [i]) { r@@ [i]=@@ r@@ [j]+1; } } } } ints=0; for(inti=0;i<k;i++) { if(r@@ [i]>@@ s) s=@@ r@@ [i]; } cout<<s<<endl; return0; }  
c -1
h -1
0

intfenjie@@ (int,int); intmain() { int@@ times@@ ,@@ k,@@ num; cin>>@@ times@@ ; for(k=1;k<=@@ times@@ ;k++) { cin>>num; cout<<@@ fenjie@@ (num,@@ 1@@ )<<endl; } return0; } intfenjie@@ (intx,inty) { inti,@@ a=1; if(x@@ <@@ y)@@ return0; if(x==@@ y)@@ return1; if(x>@@ y) { if(y@@ ==1) { for(i=y@@ +1;i<=@@ x;i++) { if(x@@ %i==0)@@ a=@@ a+@@ fenjie@@ (x/i,i); } } else { for(i=y@@ ;i<=@@ x;i++) { if(x@@ %i==0)@@ a=@@ a+@@ fenjie@@ (x/i,i); } } return@@ a; } }  
c -1
h -1
int@@ maxnum@@ (int*a,@@ intn,@@ int@@ up@@ ){ if(n@@ ==0)@@ return0; inti,@@ max@@ =-1,@@ t; for(i=0;i<n;i++){ t=@@ up@@ ; if(a[i]<=@@ up@@ ||@@ up@@ ==@@ -1)@@ t=a[i]; elsecontinue; if(@@ maxnum@@ (a@@ +i@@ +1,@@ n-1@@ -@@ i,@@ t)@@ >max)max=@@ maxnum@@ (a@@ +i@@ +1,@@ n-i@@ -1,@@ t); } return@@ max+1; } intmain(){ inti,n,@@ a[@@ 25]; cin>>n; for(i=0;i<n;i++)@@ cin>>a[i]; cout<<@@ maxnum@@ (a,@@ n@@ ,-@@ 1); }  
c -1
h -1
0

intleap@@ (int@@ y) { if@@ ( (@@ y%@@ 100@@ ==0)&&(@@ y%400==0) || (@@ y%100!=0@@ )&&(@@ y%@@ 4==0) ) return@@ 1@@ ;@@ else@@ return0; } intdays@@ (int@@ y,int@@ d@@ ,int@@ r@@ ) { inta[@@ 13@@ ]={0@@ ,@@ 0@@ ,31,@@ 28@@ ,31,30,31,30,31@@ ,31,30,31,30@@ }; if(leap@@ (y@@ ))@@ a[@@ 3@@ ]=@@ 29; int@@ ans=0; for(inti=1;i<=@@ d@@ ;i++)@@ ans@@ +=@@ a[i]; return@@ ans@@ +@@ r; } intmain() { inty,@@ d,@@ r; cin>>y>>@@ d@@ >>@@ r; cout<<@@ days@@ (@@ y,@@ d,@@ r); }  
c -1
h -1
structstudent {int@@ id; intchinese; int@@ maths; inttotal; }; voidmain() { intn,i; structstudent@@ s,@@ s1,@@ s2,@@ s3@@ ; scanf("%d",&n); s2@@ .@@ total=@@ s1@@ .@@ total=@@ s3@@ .@@ total@@ =-1; for(i=0;i<n;i++) {@@ scanf("%d%d%d",&@@ s.@@ id,&@@ s.@@ chinese@@ ,&@@ s.@@ maths@@ ); s.@@ total=@@ s.@@ chinese+@@ s.@@ maths; if(s@@ .@@ total>@@ s1@@ .@@ total) {@@ s3=@@ s2; s2=@@ s1@@ ; s1@@ =@@ s; } elseif(@@ s.@@ total>@@ s2@@ .@@ total) {@@ s3=@@ s2; s2=@@ s; } elseif(@@ s.@@ total>@@ s3@@ .@@ total) s3=@@ s; } printf("%d%d\n",@@ s1@@ .@@ id,@@ s1@@ .@@ total); printf("%d%d\n",@@ s2@@ .@@ id,@@ s2@@ .@@ total); printf("%d%d\n",@@ s3@@ .@@ id,@@ s3@@ .@@ total); }  
c -1
h -1
0

intN@@ ; structstu { intnum; char@@ au@@ [50@@ ]; structstu*next; }; structstu*@@ creat@@ () { structstu*@@ p1,*p2,*head; inti; for(i=0;i<N;i++) { p2=p1; p1=@@ Z@@ ; scanf("%d%s",&p1->num,p1->@@ au); p1->next@@ =0; if(i==0)@@ head=p1; elsep2->next=p1; } returnhead; } voidmain() { structstu@@ *head,*p; inti,n,@@ j,@@ max,@@ max1; intc[@@ 26]={0}; int@@ d@@ [26@@ ][@@ 1000]={0}; int@@ e@@ [26]={0}; scanf("%d",&N); head=creat(); for(p=head@@ ;p@@ !=0@@ ;@@ p=p->next) { n=strlen(@@ p->@@ au); for(i=0,j@@ =0;i<n;i++) { c[@@ p->@@ au@@ [i]@@ -'A']++; d[@@ p->@@ au@@ [i]@@ -'A'@@ ][@@ e@@ [@@ p->@@ au@@ [i]@@ -'A'@@ ]++@@ ]=@@ p->@@ num; } } for(i=0,@@ max@@ =0;i<@@ 26;i++) { if(max<@@ c@@ [i]) { max1@@ =i; max=@@ c[i]; } } printf("%c\n",@@ max1@@ +'A'@@ ); printf("%d\n",@@ c[@@ max1@@ ]); i=0; while(@@ d[@@ max1@@ ]@@ [i]!=0) printf("%d\n",@@ d[@@ max1@@ ]@@ [i@@ ++@@ ]); }  
c -1
h -1
struct@@ patience { int@@ shunxu@@ ; charid[10]; intage; }@@ pa@@ [100]; intmain() { intn,i,j,@@ p=@@ 60@@ ,@@ q=0; scanf("%d",&n); inta[n]; intb[@@ n@@ ],c[@@ n]; for(i=0;i<n;i++) { scanf("%s%d",&@@ pa@@ [i].id,&@@ pa@@ [i].age); } for(i=0;i<n;i++){ if(pa@@ [i].age>=60) { q++; } } do{ for(i=0;i<n;i++) { if(pa@@ [i].age@@ >=@@ p) { p=@@ pa@@ [i].age; } } for(i=0;i<n;i++) { if(pa@@ [i].age@@ ==@@ p@@ ){ printf("%s\n",@@ pa@@ [i].id); pa@@ [i].age@@ =0; } } p=@@ 60@@ ; q@@ --; } while(@@ q@@ >0@@ ); for(i=0;i<n;i++) { if(pa@@ [i].age@@ <60&&@@ pa@@ [i].age@@ >0){ printf("%s\n",@@ pa@@ [i].id); } } return0; }  
c -1
h -1
0

intsum=0; void@@ ways@@ (inta,int@@ last@@ ); intmain() { intn,@@ num@@ [100],@@ i; cin>>n; for(i=0;i<n;i++) { cin>>num[i]; } for(i=0;i<n;i++) { ways@@ (@@ num@@ [i],@@ 2); cout<<sum<<endl; sum=0; } return0; } void@@ ways@@ (inta,int@@ last@@ ) { inti,j; for(i=@@ last@@ ;i<=a;i++) { if(a<@@ i) { } elseif(a@@ ==@@ i) { sum++; } elseif(a@@ %i==0) { ways@@ (a/i,i); } } }  
c -1
h -1
main() { charID@@ [N@@ ][@@ L@@ ],@@ IDup60@@ [N@@ ][@@ L@@ ],@@ IDunder60@@ [N@@ ][@@ L@@ ],@@ s[@@ L@@ ]; intb,@@ h,@@ i,j,k,@@ l,@@ m,@@ max=0,@@ n,@@ o@@ ,@@ p,q,@@ t=0,@@ u@@ =0,@@ YearOld@@ [N@@ ],@@ YearOldup60@@ [N@@ ],@@ id@@ [N@@ ],@@ idup60@@ [N]; scanf("%d",&n); for(h=0;h@@ <n;@@ h++) { scanf("%s%d",@@ ID@@ [h@@ ]@@ ,&@@ YearOld@@ [h@@ ]); id@@ [h@@ ]=0; } for(i=0;i<n;i++) { for(j=0;@@ ID@@ [i][j]@@ !='\0';j++) { id@@ [i]=@@ 10@@ *@@ id@@ [i]; id@@ [i]=@@ id@@ [i]+@@ (@@ ID@@ [i][j]@@ -'@@ 0'@@ ); } } for(m=0;m@@ <n;m++) { if(@@ YearOld@@ [m]@@ >max) max=@@ YearOld@@ [m]; } for(k=0;k<=@@ max@@ ;k++) { for(l=0;l<n;l++) { if(@@ YearOld@@ [l@@ ]==@@ max@@ -k@@ &&@@ max@@ -k@@ >=60) { YearOldup60@@ [t@@ ]=@@ YearOld@@ [l]; idup60@@ [t@@ ]=@@ id@@ [l]; strcpy(@@ IDup60@@ [t@@ ],@@ ID@@ [l]); t++; } } } for(b=0;b@@ <n;@@ b++) { if(@@ YearOld@@ [b@@ ]@@ <60) { strcpy(@@ IDunder60@@ [@@ u@@ ],@@ ID@@ [b@@ ]); u@@ ++; } } for(p=0;p@@ <@@ t@@ ;p++) { printf("%s\n",@@ IDup60@@ [p@@ ]); } for(q=0;q@@ <@@ u@@ ;q++) { printf("%s\n",@@ IDunder60@@ [q@@ ]); } }  
c -1
h -1
0

int@@ A@@ [100]; int@@ An@@ ; int@@ B@@ [100]; int@@ Bn@@ ; void@@ getAn@@ () { cin>>@@ An@@ ; } void@@ getBn@@ () { cin>>@@ Bn@@ ; } void@@ sortA@@ () { for(inti=0;i<@@ An@@ ;i++) { cin>>@@ A@@ [i]; } sort(@@ A@@ ,@@ A@@ +@@ An@@ ); } void@@ sortB@@ () { for(inti=0;i<@@ Bn@@ ;i++) { cin>>@@ B@@ [i]; } sort(@@ B@@ ,@@ B@@ +@@ Bn@@ ); } void@@ OutA@@ () { for(inti=0;i<@@ An@@ ;i++) { cout<<@@ A@@ [i]@@ <<""; } } void@@ OutB@@ () { for(inti=0;i<@@ Bn@@ ;i++) { cout<<@@ B@@ [i]; if(i!=@@ Bn@@ -1)@@ cout<<'@@ '; } } intmain() { getAn@@ (); getBn@@ (); sortA@@ (); sortB@@ (); OutA@@ (); OutB@@ (); return0; }  
c -1
h -1
intmain() { intn,@@ b,@@ a[@@ 20000],@@ i,j; scanf("%d",&n); scanf("%d",&a[0]); printf("%d",a[0]); for(i=1;i<n;i++) { scanf("%d",&b); a[i]=@@ b; for(j=0;j<i;j++) { if(a[i]==a[j]) a[i]=0; } } for(i=1;i<n;i++) { if(a[i]!=0) printf("%d",a[i]); } printf("\n"); return0; }  
c -1
h -1
0

intmain() { inta[@@ 10000@@ ],*@@ p=@@ a,*@@ q=@@ a,@@ n,@@ h,@@ l,@@ i,j,@@ sum=0; scanf("%d",&n); for(i=1;i<=n;i++) { p=a; q=@@ a; scanf("%d%d",&@@ h@@ ,&@@ l); for(j=1;j<=@@ h@@ *@@ l@@ ;j++) { scanf("%d",p@@ ++@@ ); } if(h@@ ==1) { for(j=0;j<l;j++) { sum+=*(@@ q@@ +j); } } elseif(@@ l@@ ==1) { sum+=@@ *@@ q; sum+=*(@@ q@@ +@@ h@@ -1); } else { for(j=0;j<l;j++) { sum+=*(@@ q@@ +j); sum+=*(@@ q@@ +@@ h@@ *@@ l@@ -j@@ -1); } for(j=1;j<=@@ h@@ -2@@ ;j++) { sum+=*(@@ q@@ +j@@ *@@ l); sum+=*(@@ q@@ +j@@ *@@ l@@ +l@@ -1); } } printf("%d\n",sum); sum=0; } return0; }  
c -1
h -1
intmain() { intn,a[@@ 1000][1000],@@ i,j,@@ p,q,@@ num1@@ =0,@@ num2@@ =0,@@ sum; scanf("%d",&n); for(j=0;j<n;j++) { for(i=0;i<n;i++) scanf("%d",&a[j]@@ [i]); } for(j=0;j<n;j++) { for(i=0;i<n;i++) { if(a[j]@@ [i]==0) { num1@@ ++; p=@@ j@@ ;q@@ =i; } } if(@@ num1@@ !=0) break; } for(j=@@ p@@ ;@@ a[j]@@ [q@@ ]@@ ==0@@ ;j++) { num2@@ ++; } sum=(@@ num1@@ -2)*(@@ num2@@ -2); printf("%d",sum); return0; }  
c -1
h -1
0

inta[@@ 26@@ ]={0@@ }@@ ;@@ int@@ n;@@ intmax@@ ;@@ int@@ hao@@ ; struct@@ chushu { intnum; chars[@@ 30]; struct@@ chushu@@ *next; }; struct@@ chushu@@ *@@ create@@ () { int@@ j=0,@@ q,@@ i=0,@@ k=0; struct@@ chushu@@ *head,*p1,*p2; p1=(struct@@ chushu@@ *)malloc(len); scanf("%d%s",&p1->num,p1->@@ s); for(i=0;@@ p1->@@ s[i]@@ !='\0';i++) { j=@@ p1->@@ s[i]@@ -65@@ ; a[j]=@@ a[j]@@ +1; } head@@ =p1;@@ p2=p1; while(k@@ <@@ n-1) { k++; p2=p1; p1=(struct@@ chushu@@ *)malloc(len); scanf("%d%s",&p1->num,p1->@@ s); for(i=0;@@ p1->@@ s[i]@@ !='\0';i++) { j=@@ p1->@@ s[i]@@ -65@@ ; a[j]=@@ a[j]@@ +1; } p2->next=p1; } p2=p1; p2->next=NULL; return(head); } void@@ search@@ (struct@@ chushu@@ *head) { inti; struct@@ chushu@@ *p; p=head; while(p@@ ->next@@ !=NULL) { for(i=0;@@ p->@@ s[i]@@ !='\0';i++) { if(@@ hao@@ +65@@ ==@@ p->@@ s@@ [i]) printf("%d\n",p->num); } p=p->next; } for(i=0;@@ p->@@ s[i]@@ !='\0';i++) { if(@@ hao@@ +65@@ ==@@ p->@@ s@@ [i]) printf("%d\n",p->num); } } voidmain() { inti; struct@@ chushu@@ *p; scanf("%d",&n); p=@@ create@@ (); max=0; for(i=0;i<26;i++) { if(a[i]>max) { max=a[i]; hao@@ =i; } } printf("%c\n",@@ hao@@ +65); printf("%d\n",max); search@@ (p); }  
c -1
h -1
charid@@ [@@ 101][@@ 11]; intmain() {@@ intn; intage@@ [@@ 101],@@ a[@@ 101]; scanf("%d",&n); for(inti=1;i<=n;i++) { scanf("%s%d",@@ id[i],&@@ age[i]); int@@ j=i; if(age[i]@@ >=60) { for(@@ ;j>@@ 1@@ &&@@ age@@ [a@@ [j-1]@@ ]<@@ age@@ [i]@@ ;j--) a[j]=@@ a@@ [j-1]; } a[j]@@ =i; } for(inti=1;i<=n;i++) printf("%s\n",@@ id@@ [@@ a[i]@@ ]); getchar(); getchar(); return0; }  
c -1
h -1
0

intmain() { intnum[@@ 999@@ ],@@ count[@@ 27@@ ]={0},@@ len@@ [999]; intm,i,j,@@ max=0,@@ per@@ ; cin>>m; char@@ ch@@ [@@ 999@@ ][@@ 26],@@ person@@ ; for(i=1;i<=m;i++) { cin>>@@ num[i]@@ >>@@ ch@@ [i]; len@@ [i]@@ =strlen(@@ ch@@ [i]); for(j=0;j<=@@ len@@ [i]@@ -1;j++) { count[@@ ch@@ [i][j]@@ -@@ 64@@ ]++; } } for(i=1;i<=@@ 26;i++) { if(count@@ [i]>max) { max=count@@ [i]; per@@ =i; } } person@@ =@@ per@@ +@@ 64@@ ; cout<<@@ person@@ <<endl; cout<<@@ count[@@ per@@ ]<<endl; for(i=1;i<=m;i++) { for(j=0;j<=@@ len@@ [i]@@ -1;j++) { if(@@ ch@@ [i][j]==@@ person@@ ) { cout<<@@ num[i]@@ <<endl; break; } } } return0; }  
c -1
h -1
intmain() { inta,b,c; scanf("%d%d%d",&a,&b,&c); int@@ k@@ [20]; k@@ [1]=@@ 31@@ ;k@@ [2]=@@ 28@@ ;k@@ [3@@ ]=31@@ ;k@@ [4@@ ]=30@@ ;k@@ [5@@ ]=31@@ ;k@@ [@@ 6@@ ]=30@@ ;k@@ [@@ 7@@ ]=31@@ ;k@@ [@@ 8@@ ]=31@@ ;k@@ [@@ 9@@ ]=30; k@@ [10@@ ]=31@@ ;k@@ [11@@ ]=30@@ ;k@@ [12@@ ]=31; inti=1; intsum=0; while(i<@@ b) { sum=sum+@@ k@@ [i]; i++; } sum=sum@@ +c; if(b@@ >2) {if((@@ a%4==0&&a%100!=0@@ )||@@ a%@@ 400==0) sum++; } printf("%d\n",sum); getchar(); getchar(); }  
c -1
h -1
0

voidmain() { intn,i,j,a[@@ 1000],b[1000],@@ max=0; scanf("%d",&n); for(i=0;i<n;i++) b[i]=1; for(i=0;i<n;i++) scanf("%d",&a[i]); for(i=0;i<n;i++) for(j=0;j<i;j++) if(a[j]>=@@ a[i]) b[i]=@@ MAX@@ (@@ b[j]@@ +1,@@ b[i]); for(i=0;i<n;i++) max=@@ MAX@@ (@@ max,@@ b[i]); printf("%d\n",max); }  
c -1
h -1
intmain(){ intn,i,k,@@ sum=0,@@ m,@@ l,@@ p,q; int@@ a=0,@@ b=0; intsz[@@ 1000][1000]; scanf("%d",&n); for(i=0;i<n;i++){ for(k=0;k<n;k++){ scanf("%d",&@@ sz[i]@@ [k]); } } for(i=1;i<@@ n-1;i++){ for(k=1;k<@@ n-1@@ ;k++){ if(sz[i]@@ [k]@@ ==0&&@@ a@@ ==0){ m=i; l=@@ k; a=1; } } } for(i=n-1;i>=0;i--){ for(k=@@ n-1@@ ;k>=0@@ ;k@@ --){ if(sz[i]@@ [k]@@ ==0&&@@ b@@ ==0){ p=i; q=@@ k; b=1; } } } sum=(@@ p@@ -m@@ -1)*(@@ q@@ -l@@ -1); printf("%d",sum); return0; }  
c -1
h -1
0

intmain(){ intk,@@ m,n; intsz[100][100]; inti,@@ r,@@ sum1@@ ,@@ sum2@@ ,sum; scanf("%d",&k); for(intj=1;j<=@@ k@@ ;j++){ scanf("%d%d",&m,&n); for(i=0;i<m;i++){ for(r=0;r@@ <n;@@ r@@ ++){ scanf("%d",&@@ sz[i]@@ [r@@ ]); } } sum1@@ =0; for(int@@ q@@ =0;q@@ <n;@@ q@@ ++){ sum1@@ +=@@ sz[0][@@ q@@ ]+sz[@@ m-1][@@ q@@ ]; } sum2@@ =0; for(int@@ w@@ =0;@@ w@@ <m;@@ w@@ ++){ sum2@@ +=@@ sz[@@ w@@ ][@@ n-1@@ ]+sz[@@ w@@ ][0]; } sum=@@ sum1@@ +@@ sum2@@ -@@ sz[0][@@ 0]-@@ sz[0][@@ n-1]-@@ sz[@@ m-1][0]-@@ sz[@@ m-1][@@ n-1]; printf("%d\n",sum); } return0; }  
c -1
h -1
voidmain() { char@@ f(@@ charstr@@ [@@ ],@@ char@@ substr@@ [@@ ],@@ char@@ rep@@ [@@ ]); charstr[256],@@ substr@@ [256],@@ rep@@ [256]; scanf("%s%s%s",@@ str,@@ substr@@ ,@@ rep); f(@@ str,@@ substr@@ ,@@ rep); puts(@@ str); } char@@ f(@@ charstr[256],@@ char@@ substr@@ [256],@@ char@@ rep@@ [256@@ ]) { chars[@@ 256]; inti=0,@@ j,@@ k; for(i=0;@@ str@@ [i]!='\0';i++) { if(str[i]==@@ substr@@ [0]) { for(j=0;j<strlen(@@ substr@@ );j++) s[j]=@@ str@@ [j+i@@ ]; s[j]@@ ='\0'; if(strcmp(@@ substr@@ ,@@ s)@@ ==0) { for(k=0;k<@@ strlen(@@ rep@@ )@@ ;k++@@ ,i++) str[i]=@@ rep@@ [k]; return0; } } } return0; }  
c -1
h -1
0

intmain() { char@@ w1@@ [256],@@ w2@@ [256]; intn,m,@@ i,j=0,@@ A@@ =1; doublea,@@ c; scanf("%lf%s%s",&@@ a,&@@ w1@@ ,&@@ w2@@ ); n=strlen(@@ w1@@ ); m=strlen(@@ w2@@ ); if(n@@ !=@@ m)@@ printf("error"); if(n==@@ m){ for(i=0;i<n;i++){ if((@@ w1@@ [i]=='@@ A'&&@@ w2@@ [i]=='@@ A')||(@@ w1@@ [i]=='@@ G'&&@@ w2@@ [i]=='@@ G')||(@@ w2@@ [i]=='@@ T'&&@@ w1@@ [i]=='@@ T')||(@@ w2@@ [i]=='@@ C'&&@@ w1@@ [i]=='@@ C')@@ ) j++; if((@@ w1@@ [i]!='A'&&@@ w1@@ [i]!='T'&&@@ w1@@ [i]!='G'&&@@ w1@@ [i]!='@@ C')||(@@ w2@@ [i]!='A'&&@@ w2@@ [i]!='T'&&@@ w2@@ [i]!='G'&&@@ w2@@ [i]!='@@ C')@@ ) {@@ A@@ =0; } } c@@ =(double)@@ j@@ /n; if(A@@ ==0)@@ printf("error"); elseif(A@@ ==1&&@@ c@@ >@@ a)@@ printf("yes"); elseif(A@@ ==1&&@@ c@@ <=@@ a)@@ printf("no"); } return0; }  
c -1
h -1
voidmain() { intm,n,i,j,@@ c; inta[@@ 60@@ ]={0},b[@@ 30]={0}; scanf("%d%d",&m,&n); for(i=0;i<m;i++)@@ scanf("%d",&a[i]); for(i=0;i<m;i++) { for(j=0;j<m;j++) { if(a[i]@@ <@@ a[j]) { c=@@ a[i];a[i]=@@ a[j];a[j]=@@ c; } } } for(i=0;i<n;i++)@@ scanf("%d",&b[i]); for(i=0;i<n;i++) { for(j=0;j<n;j++) { if(b[i]@@ <@@ b[j]) { c=@@ b[i]@@ ;@@ b[i]=b[j]@@ ;@@ b[j]=@@ c; } } } for(i=0;i<m;i++)@@ printf("%d",a[i]); for(i=0;i<n@@ -1;i++)@@ printf("%d",b[i]); printf("%d",b[@@ n-1]); }  
c -1
h -1
0

intmain(){ intn,k; intsz[1000]; inta,b,@@ c=0; scanf("%d%d",&n,&k); for(inti=0;i<n;i++){ scanf("%d",&sz[i]); } for(intp@@ =0;p@@ <n;@@ p++){ for(inti=1;i<=@@ n;i++){ a=@@ sz[@@ p@@ ]; b=@@ sz[i]; if(a@@ +@@ b==@@ k){@@ c@@ +=1; } } } if(c@@ ==0){@@ printf("no");} else@@ printf("yes"); return0; }  
c -1
h -1
intmain() { intk,m,n,i,j,@@ sum; cin>>k; while(k@@ --) { sum=0; cin>>m>>n; inta[@@ m@@ ][n]; for(i=0;i<m;i++) for(j=0;j<n;j++) cin>>*(*(a+i)+j); if(m==1) { for(i=0;i<n;i++) sum+=*(*(a@@ )@@ +i); cout<<sum<<endl; continue; } if(n==1) { for(i=0;i<m;i++) sum+=*(*(a@@ +i)); cout<<sum<<endl; continue; } for(i=0;i<n;i++) { sum+=*(*(a@@ )@@ +i); sum+=*(*(a@@ +m-1)@@ +i); } for(i=1;i<m-1;i++) { sum+=*(*(a@@ +i)); sum+=@@ *(*(a+i)@@ +n-1); } cout<<sum<<endl; } return0; }  
c -1
h -1
0

structbook { intnum; charname@@ [27]; }b[@@ 1001]; voidmain() { intn,i,j,k,@@ d,@@ g@@ [@@ 27@@ ],@@ e=0,@@ f@@ =0,@@ l; char@@ m,@@ h; scanf("%d",&n); for(i=0;i<n;i++) scanf("%d%s",&@@ b[i].@@ num,@@ b[i].@@ name); m@@ ='A'; for(k=0;k<26;k++) { d=0; for(i=0;i<n;i++) { for(j=0;j<26;j++) { if(b[i].@@ name[j]==@@ m) d++; if(b[i].@@ name[j]==@@ '\0') break; } } m=m+1; g@@ [k]=@@ d; if(g@@ [k]@@ >@@ e@@ ) { e=@@ g@@ [k]; f=@@ k; } } h@@ ='A'+@@ f; printf("%c\n%d\n",@@ h,@@ e); for(i=0;i<n;i++) { d=0; for(j=0;j<26;j++) { if(b[i].@@ name[j]==@@ h@@ ) d++; if(b[i].@@ name[j]==@@ '\0') break; } if(d@@ !=0) printf("%d\n",b[i].@@ num); } }  
c -1
h -1
struct@@ daodan { int@@ height@@ ; intnumber; }; int@@ compare@@ (constvoid*a,constvoid*@@ b) { struct@@ daodan@@ *@@ x@@ =(struct@@ daodan@@ *)@@ a; struct@@ daodan@@ *@@ y@@ =(struct@@ daodan@@ *)@@ b; return(@@ (@@ (*@@ y@@ ).@@ number@@ )@@ -(@@ (*@@ x@@ ).@@ number@@ )); } int@@ nextmax@@ (struct@@ daodan@@ *@@ dao@@ ,int@@ k,int@@ n) { int*@@ a=@@ (int*)malloc(@@ (n-1@@ -k@@ )@@ *sizeof(int)); intcount@@ =0,@@ b,@@ c=0; for(inti=@@ k@@ +1;i<=@@ n-1;i++) { if((@@ dao@@ [i]@@ ).@@ height@@ <=@@ (@@ dao@@ [k]@@ ).@@ height@@ ) { a[@@ count@@ ]=@@ dao@@ [i].@@ number; count++; } } intmax=0; for(intj=0;j<=@@ count@@ -1;j++) { if(a[j]@@ >max) { max=@@ a[j]; } } return@@ max; } intmain() { intn; scanf("%d",&n); struct@@ daodan@@ *@@ dao@@ =(struct@@ daodan@@ *)malloc(@@ n*@@ sizeof(struct@@ daodan@@ )); for(inti=0;i<=@@ n-1;i++) { scanf("%d",&@@ dao@@ [i].@@ height@@ ); } for(intj=0;j<=@@ n-1;j++) { dao@@ [j].@@ number@@ =1; } for(int@@ k=@@ n-2@@ ;k>=0@@ ;k--) { dao@@ [k].@@ number=@@ nextmax@@ (@@ dao@@ ,@@ k,@@ n)@@ +1; } intmax=@@ dao@@ [0].@@ number; for(intl@@ =1;@@ l@@ <=@@ n-1;@@ l++) { if(@@ dao@@ [l@@ ].@@ number@@ >max) { max=@@ dao@@ [l@@ ].@@ number; } } printf("%d",max); }  
c -1
h -1
0

structbook { intnum; charname@@ [27]; structbook*next; }; intm; structbook*@@ head; structbook*@@ setup@@ () {int@@ t=0; structbook@@ *head,*p1,*p2; head@@ =p1@@ =p2@@ =(struct@@ book@@ *)malloc(sizeof(structbook)); scanf("%d%s",&p1->num,p1->name); while(t@@ <m@@ -1) {@@ t++; p2->next=p1; p2=p1; p1=(structbook@@ *)malloc(sizeof(structbook)); scanf("%d%s",&p1->num,p1->name); } p2->next=p1; p1->next=NULL; return(head); } intk=0,@@ max=0; void@@ found@@ (struct@@ book@@ *p@@ ) {@@ inti,j; p=head; int*@@ pi@@ ; pi@@ =@@ (int*)malloc(sizeof(int)@@ *@@ 26@@ ); for(i=0;i<26@@ ;i++)@@ *(@@ pi@@ +i)@@ =0; for(i=0;i<m;i++) { for(j=0;@@ p->@@ name@@ [j]!='\0';j++) { (*(@@ pi@@ +@@ (p->@@ name@@ [j]@@ -'@@ A')@@ ))@@ ++; } p=p->next; } for(j=0;j<26;j++) { if(*(@@ pi@@ +j)@@ >max){ max@@ =*(@@ pi@@ +j); k=j; } } } intmain() {@@ inti,j; scanf("%d",&m); structbook@@ *p; head=@@ p=@@ setup@@ (); found@@ (p); printf("%c\n%d\n",@@ (k@@ +'@@ A')@@ ,max); p=head; for(i=0;i<m;i++) {@@ for(j=0;@@ p->@@ name@@ [j]!='\0';j++) if(p->@@ name[j]==@@ k@@ +'A'@@ ){ printf("%d\n",p->num); break; } p=p->next; } }  
c -1
h -1
intmain(intargc,char*argv[]) { intyear,month,@@ date; ints=0; inti; scanf("%d%d%d",&year,&month,&@@ date@@ ); if((@@ year%@@ 400==0)||(@@ (@@ year%100!=0@@ )@@ &@@ (@@ year%@@ 4@@ ==0)@@ )) { int@@ n[@@ 12]={31,29,31,30,31,30,31,31,30,31,30,31}; for(i=0;@@ (i@@ +1)@@ <@@ month;i++) { s+=@@ n[i]; } s=s+@@ date; } else { int@@ n[@@ 12]={31,28,31,30,31,30,31,31,30,31,30,31}; for(i=0;@@ (i@@ +1)@@ <@@ month;i++) { s+=@@ n[i]; } s=s+@@ date; } printf("%d\n",s); return0; }  
c -1
h -1
0

intj,@@ k; void@@ G@@ (inta[@@ ]) { intn,m,@@ q; int*p; p=a; for(n=0;n@@ <j@@ ;n++) { for(m=@@ n+1@@ ;m@@ <j@@ ;m++) { if(p@@ [n@@ ]>@@ p@@ [m@@ ]) { q=@@ p[@@ n]; p@@ [n@@ ]=@@ p@@ [m]; p@@ [m]=@@ q; } } } } void@@ g@@ (inta[@@ ]) { intn,m,@@ q; int*p; p=a; for(n=0;n@@ <k;@@ n++) { for(m=@@ n+1@@ ;m@@ <k@@ ;m++) { if(p@@ [n@@ ]>@@ p@@ [m@@ ]) { q=@@ p[@@ n]; p@@ [n@@ ]=@@ p@@ [m]; p@@ [m]=@@ q; } } } } void@@ F@@ (inta[],intb[]) { G@@ (a); g@@ (@@ b); intn,m; printf("%d",a[0]); for(n@@ =1;@@ n@@ <j@@ ;n++) printf("%d",@@ a[n@@ ]); for(m=0;m<@@ k@@ ;m++) printf("%d",@@ b[m@@ ]); } intmain() { intn,m; inta[@@ 5000@@ ],b[@@ 5000@@ ]; scanf("%d%d",&@@ j@@ ,&@@ k); for(n=0;n@@ <j@@ ;n@@ ++)@@ scanf("%d",&@@ a[n@@ ]); for(m=0;m<@@ k@@ ;m@@ ++)@@ scanf("%d",&@@ b[m@@ ]); F@@ (a,b); return0; }  
c -1
h -1
intmain() { intn,a,@@ s@@ =1,@@ m,@@ l@@ ;@@ long@@ i=0; scanf("%d",&n); while(1) { i@@ +=1; scanf("%d",&a); if(a==0) break; } m=i; while(1) { i@@ +=1; scanf("%d",&a); if(a==0) s@@ +=1; if(a@@ !=0) break; } l@@ =i-1; while(1) { i@@ +=1; scanf("%d",&a); if(a==0) s@@ +=1; if(i>=@@ n*@@ n) break; } printf("%d\n",@@ ((@@ s@@ -(@@ l@@ -m@@ +1)@@ *2@@ )@@ /2@@ )*(@@ l@@ -@@ m-1@@ )); return0; }  
c -1
h -1
0

intmain() { intnum,@@ i,j; char@@ a@@ ='A'; int@@ count[@@ 27@@ ]={0}; int@@ *p@@ =&@@ count@@ [1]; scanf("%d",&num); structbook { char@@ order@@ [4@@ ]; charauthor[26]; }@@ book[1000]; for(i=0;i<num;i++) { scanf("%s",@@ book[i].@@ order@@ ); scanf("%s",@@ book[i].author); } for(i=0;i<num;i++) { int@@ m=strlen(@@ book[i].author); for(j=0;j<m;j++) { if(book[i].author[j]=='@@ A')@@ count@@ [1@@ ]++; if(book[i].author[j]=='@@ B@@ ')@@ count@@ [2@@ ]++; if(book[i].author[j]=='@@ C')@@ count@@ [3@@ ]++; if(book[i].author[j]=='@@ D@@ ')count[@@ 4@@ ]++; if(book[i].author[j]=='@@ E@@ ')count[@@ 5@@ ]++; if(book[i].author[j]=='@@ F@@ ')count[@@ 6@@ ]++; if(book[i].author[j]=='@@ G')@@ count[@@ 7@@ ]++; if(book[i].author[j]=='@@ H@@ ')count[@@ 8@@ ]++; if(book[i].author[j]=='@@ I@@ ')count[@@ 9@@ ]++; if(book[i].author[j]=='@@ J@@ ')count[@@ 10@@ ]++; if(book[i].author[j]=='@@ K@@ ')@@ count@@ [11@@ ]++; if(book[i].author[j]=='@@ L@@ ')count[@@ 12@@ ]++; if(book[i].author[j]=='@@ M@@ ')count[@@ 13@@ ]++; if(book[i].author[j]=='@@ N@@ ')count[@@ 14@@ ]++; if(book[i].author[j]=='@@ O@@ ')count[@@ 15@@ ]++; if(book[i].author[j]=='@@ P@@ ')count[@@ 16@@ ]++; if(book[i].author[j]=='@@ Q@@ ')count[@@ 17@@ ]++; if(book[i].author[j]=='@@ R@@ ')count[@@ 18@@ ]++; if(book[i].author[j]=='@@ S@@ ')count[@@ 19@@ ]++; if(book[i].author[j]=='@@ T')@@ count[@@ 20@@ ]++; if(book[i].author[j]=='@@ U@@ ')count[@@ 21@@ ]++; if(book[i].author[j]=='@@ V@@ ')count[@@ 22@@ ]++; if(book[i].author[j]=='@@ W@@ ')count[@@ 23@@ ]++; if(book[i].author[j]=='@@ X@@ ')count[@@ 24@@ ]++; if(book[i].author[j]=='@@ Y@@ ')@@ count@@ [25@@ ]++; if(book[i].author[j]=='@@ Z@@ ')@@ count@@ [26@@ ]++; } } for(i=1;i<@@ 27@@ ;i++) { if(count@@ [i]@@ >*@@ p) { p@@ =&@@ count@@ [i]; a@@ =i+@@ 64@@ ; } } printf("%c\n%d\n",@@ a,*@@ p); for(i=0;i<num;i++) { for(j=0;j<strlen(@@ book[i].author@@ );j++) { if(book[i].author@@ [j]==@@ a) printf("%s\n",@@ book[i].@@ order@@ ); } } return0; }  
c -1
h -1
intmain(){ chara[501],b[501]; doublen,@@ c,d,@@ k=0; inti,@@ e=1; scanf("%lf",&n); scanf("%s\n@@ %s",&@@ a,&b); c@@ =strlen(a); d@@ =strlen(b); if(c@@ !=@@ d@@ ){ printf("error"); }elseif(@@ c@@ ==@@ d@@ ){ for(i=0;i<c@@ ;i++){ if(a[i]!='@@ A'&&a[i]!='T'&&a[i]!='G'&&a[i]!='@@ C'||@@ b[i]!='A'&&b[i]!='T'&&b[i]!='G'&&b[i]!='@@ C'){ e=0; break; }else{ if(a[i]==b[i]){ k=k+1; } } } if(e@@ ==0){ printf("error"); }elseif(@@ k@@ !=0@@ &&(@@ k/@@ c)@@ >=@@ n){ printf("yes"); }elseif(@@ e@@ ==1@@ &&(@@ k/@@ c)@@ <@@ n){ printf("no"); } } return0; }  
c -1
h -1
0

intmain() { intn,i,@@ a[@@ 200001@@ ],@@ j,@@ flag=0; cin>>n; for(i=1;i<=n;i++) cin>>a[i]; cout<<@@ a[1]; for(i=2;i<=n;i++) { for(j=1;j<i;j++) { if(a[j]==a[i]) { flag=1; } } if(!@@ flag@@ ) cout<<'@@ '@@ <<@@ a[i]; flag=0; } return0; }  
c -1
h -1
intmain() { intn,i,j,k,@@ p,q,@@ m; inta[20000]; intb[@@ 20000]; scanf("%d",&n); for(i=0;i<n;i++) scanf("%d",&a[i]); b[0]@@ =0; for(j=1;j<n;j++) { b[j]@@ =0; for(k=0;k<j@@ ;k++) { if(a[j]==@@ a[k]) b[j]@@ ++; } } printf("%d",a[0]); for(p=1@@ ;p@@ <n;p++) { if(@@ b[p@@ ]==0) printf("%d",@@ a[p@@ ]); } return0; }  
c -1
h -1
1


intmain() { inty,m,d,@@ s,@@ er@@ ; scanf("%d%d%d",&y,&m,&d); if(y%@@ 400==0) { er@@ =@@ 29; switch(m) { case1:@@ s=@@ d@@ ;@@ printf("%d\n",s);break; case2:@@ s@@ =31+@@ d@@ ;@@ printf("%d\n",s);break; case3:@@ s@@ =31+@@ er@@ +d@@ ;@@ printf("%d\n",s);break; case4:@@ s=@@ 31@@ *2@@ +@@ er@@ +d@@ ;@@ printf("%d\n",s);break; case5:@@ s=@@ 31@@ *2@@ +@@ er@@ +30@@ +d@@ ;@@ printf("%d\n",s);break; case6:@@ s=@@ 31*3@@ +@@ er@@ +30@@ +d@@ ;@@ printf("%d\n",s);break; case7:@@ s=@@ 31*3@@ +@@ er@@ +30*2@@ +d@@ ;@@ printf("%d\n",s);break; case8:@@ s=@@ 31*@@ 4@@ +@@ er@@ +30*2@@ +d@@ ;@@ printf("%d\n",s);break; case9:@@ s=@@ 31*5@@ +@@ er@@ +30*2@@ +d@@ ;@@ printf("%d\n",s);break; case10:@@ s=@@ 31*5@@ +@@ er@@ +30@@ *3@@ +d@@ ;@@ printf("%d\n",s);break; case11:@@ s=@@ 31*6@@ +@@ er@@ +30@@ *3@@ +d@@ ;@@ printf("%d\n",s);break; case12:@@ s=@@ 31*6@@ +@@ er@@ +30@@ *@@ 4@@ +d@@ ;@@ printf("%d\n",s); } } else { er@@ =@@ 28; switch(m) { case1:@@ s=@@ d@@ ;@@ printf("%d\n",s);break; case2:@@ s@@ =31+@@ d@@ ;@@ printf("%d\n",s);break; case3:@@ s@@ =31+@@ er@@ +d@@ ;@@ printf("%d\n",s);break; case4:@@ s=@@ 31@@ *2@@ +@@ er@@ +d@@ ;@@ printf("%d\n",s);break; case5:@@ s=@@ 31@@ *2@@ +@@ er@@ +30@@ +d@@ ;@@ printf("%d\n",s);break; case6:@@ s=@@ 31*3@@ +@@ er@@ +30@@ +d@@ ;@@ printf("%d\n",s);break; case7:@@ s=@@ 31*3@@ +@@ er@@ +30*2@@ +d@@ ;@@ printf("%d\n",s);break; case8:@@ s=@@ 31*@@ 4@@ +@@ er@@ +30*2@@ +d@@ ;@@ printf("%d\n",s);break; case9:@@ s=@@ 31*5@@ +@@ er@@ +30*2@@ +d@@ ;@@ printf("%d\n",s);break; case10:@@ s=@@ 31*5@@ +@@ er@@ +30@@ *3@@ +d@@ ;@@ printf("%d\n",s);break; case11:@@ s=@@ 31*6@@ +@@ er@@ +30@@ *3@@ +d@@ ;@@ printf("%d\n",s);break; case12:@@ s=@@ 31*6@@ +@@ er@@ +30@@ *@@ 4@@ +d@@ ;@@ printf("%d\n",s); } } return0; }  
c -1
h -1
intmain() { struct{ intID; int@@ ch@@ ,@@ math; intsum; }a[@@ 100000]; intn,@@ m1,@@ m2@@ ,@@ m3@@ ,@@ x,y,@@ z; scanf("%d",&n); scanf("%d%d%d",&@@ a[0].@@ ID,&@@ a[0].@@ ch@@ ,&@@ a[0].@@ math); m1=@@ a[0].@@ ch@@ +@@ a[0].@@ math; inti; for(i=0;i<n;i++) { scanf("%d%d%d",&a[i].@@ ID,&@@ a[i].@@ ch@@ ,&a[i].@@ math); a[i].@@ sum=@@ a[i].@@ ch@@ +a[i].@@ math; if(a[i].@@ sum>@@ m1@@ ) { m1=@@ a[i].@@ sum; x@@ =i; } } printf("%d%d\n",@@ a[x@@ ].ID,@@ m1@@ ); a[x@@ ].@@ ch@@ =@@ a[x@@ ].@@ math@@ =@@ a[x@@ ].@@ sum=0; intj; scanf("%d%d%d",&@@ a[0].@@ ID,&@@ a[0].@@ ch@@ ,&@@ a[0].@@ math); m2=@@ a[0].@@ sum; for(j=0;j<n;j++) { scanf("%d%d%d",&@@ a[j].@@ ID,&@@ a[j].@@ ch@@ ,&@@ a[j].@@ math); a[j].@@ sum=@@ a[j].@@ ch@@ +@@ a[j].@@ math; if(a[j]@@ .@@ sum>@@ m2@@ ) { m2=@@ a[j].@@ sum; y@@ =j; } } printf("%d%d\n",@@ a[@@ y@@ ].ID,@@ m2@@ ); a[@@ y@@ ].@@ ch@@ =@@ a[@@ y@@ ].@@ math@@ =@@ a[@@ y@@ ].@@ sum=0; intk; scanf("%d%d%d",&@@ a[0].@@ ID,&@@ a[0].@@ ch@@ ,&@@ a[0].@@ math); m3=@@ a[0].@@ sum; for(k=0;k<n;k++) { scanf("%d%d%d",&@@ a[k@@ ].@@ ID,&@@ a[k@@ ].@@ ch@@ ,&@@ a[k@@ ].@@ math); a[k@@ ].@@ sum=@@ a[k@@ ].@@ ch@@ +@@ a[k@@ ].@@ math; if(a[k@@ ].@@ sum>@@ m3@@ ) { m3=@@ a[k@@ ].@@ sum; z=@@ k; } } printf("%d%d\n",@@ a[@@ z@@ ].ID,@@ m3@@ ); return0; }  
c -1
h -1
0

intmain(){ intn,k,@@ a,b,@@ i,j,@@ s; intsz[@@ 2000]; scanf("%d%d",&n,&k); s=0; for(i=0;i<n;i++){ scanf("%d",&@@ sz[i]@@ );} for(i=0;i<n;i++){ for(j=i+1;j<@@ n@@ ;j++){@@ a=@@ sz[i]; b=@@ sz@@ [j]; if(a@@ +@@ b==@@ k){@@ s@@ ++;@@ }}} if(s@@ !=0@@ ){printf("yes");} else{printf("no");} return0; }  
c -1
h -1
intmain() { inty,m,d,@@ n; scanf("%d%d%d",&y,&m,&d); if(((@@ y@@ +@@ 400@@ )@@ %@@ 400==0)||(@@ (@@ y%@@ 4==0)&&(@@ (@@ y%@@ 100@@ )@@ !=0)@@ )) { if(m==1) n=@@ d; elseif(m==@@ 2) n=31+@@ d; elseif(m==@@ 3) n=@@ 60@@ +d; elseif(m==@@ 4) n=@@ 91@@ +d; elseif(m==@@ 5) n=@@ 121@@ +d; elseif(m==@@ 6) n=@@ 152@@ +d; elseif(m==@@ 7) n=@@ 182@@ +d; elseif(m==@@ 8) n=@@ 213@@ +d; elseif(m==@@ 9) n=@@ 244@@ +d; elseif(m==@@ 10) n=@@ 274@@ +d; elseif(m==@@ 11) n=@@ 305@@ +d; elseif(m==@@ 12) n=@@ 335@@ +d; printf("%d\n",n); } else { if(m==1) n=@@ d; elseif(m==@@ 2) n=31+@@ d; elseif(m==@@ 3) n=@@ 59@@ +d; elseif(m==@@ 4) n=@@ 90@@ +d; elseif(m==@@ 5) n=@@ 120@@ +d; elseif(m==@@ 6) n=@@ 151@@ +d; elseif(m==@@ 7) n=@@ 181@@ +d; elseif(m==@@ 8) n=@@ 212@@ +d; elseif(m==@@ 9) n=@@ 243@@ +d; elseif(m==@@ 10) n=@@ 273@@ +d; elseif(m==@@ 11) n=@@ 304@@ +d; elseif(m==@@ 12) n=@@ 334@@ +d; printf("%d\n",n); } return0; }  
c -1
h -1
0

structStudent@@ { intID; intchinese; int@@ maths; intsum; }; intmain(){ structStudent@@ stu[@@ 3@@ ],@@ t; stu[0].@@ sum=@@ stu[1].@@ sum=@@ stu[2@@ ].@@ sum=0; inti,n; cin>>n; for(i=0;i<n;i++){ cin>>@@ t@@ .@@ ID@@ >>@@ t@@ .@@ chinese@@ >>@@ t@@ .@@ maths; t@@ .@@ sum=@@ t@@ .@@ chinese+@@ t@@ .@@ maths; if(t@@ .@@ sum>@@ stu[0].@@ sum){ stu[2@@ ]=@@ stu@@ [1]; stu@@ [1]=@@ stu[@@ 0]; stu[@@ 0]=@@ t; }elseif(@@ t@@ .@@ sum>@@ stu[1].@@ sum){ stu[2@@ ]=@@ stu@@ [1]; stu@@ [1]=@@ t; }elseif(@@ t@@ .@@ sum>@@ stu[2@@ ].@@ sum){ stu[2@@ ]=t; } } for(i=0;i<@@ 3;i++){ cout<<@@ stu[i].@@ ID@@ <<""<<@@ stu[i].@@ sum@@ <<endl; } return0; }  
c -1
h -1
structstudent { int@@ name@@ ; int@@ ch; intmath; }; structstudentstu[100000]; intmain() { int@@ n;@@ int@@ sum[@@ 100000@@ ];@@ intmax@@ [3@@ ];@@ inti,j,k,@@ m,@@ o@@ ;@@ ints; scanf("%d",&n); for(i=0;i<n;i++) scanf("%d%d%d",&stu[i].@@ name@@ ,&stu[i].@@ ch@@ ,&stu[i].math); for(i=0;i<n;i++) { sum[i]=@@ stu[i].@@ ch@@ +stu[i].@@ math; } { max@@ [0]@@ =0; for(j=0@@ ,k@@ =0;j<@@ n;j++) {@@ if(sum@@ [j]@@ >max@@ [0]) {@@ max@@ [0]=@@ sum@@ [j]; k@@ =j;} } } { max@@ [1]@@ =0; for(j=1@@ ,@@ m@@ =0;j<@@ n;j++) {if((@@ sum@@ [j]@@ >max@@ [1]@@ )&&(@@ j@@ !=@@ k@@ )) {@@ max@@ [1]=@@ sum@@ [j]; m@@ =j;} } } { max@@ [2@@ ]=0; for(j=1@@ ,@@ o@@ =0;j<@@ n;j++) {if((@@ sum@@ [j]@@ >max@@ [2]@@ )&&(@@ j@@ !=@@ k@@ )&&(@@ j@@ !=@@ m@@ )) {@@ max@@ [2]=@@ sum@@ [j]; o@@ =j;} } } printf("%d%d\n",@@ stu[k].@@ name,@@ sum@@ [k]); printf("%d%d\n",stu[@@ m@@ ].@@ name,@@ sum@@ [m]); printf("%d%d\n",stu[@@ o@@ ].@@ name,@@ sum[@@ o@@ ]); return0; }  
c -1
h -1
1


intmain() { int@@ s=0,@@ i; double@@ a; charb[@@ 2][@@ 1000]; scanf("%lf",&a); scanf("%s",@@ b[0]@@ ); scanf("%s",@@ b[1@@ ]); if(strlen(@@ b[0]@@ )!=strlen(@@ b[1@@ ]@@ )) { printf("error"); return0; } for(i=0;i<strlen(@@ b[0]@@ );i++) { if(@@ b[0]@@ [i]!='A'&&@@ b[0]@@ [i]!='T'&&@@ b[0]@@ [i]!='C'&&@@ b[0]@@ [i]!='G'&&@@ b[1@@ ]@@ [i]!='A'&&@@ b[1@@ ]@@ [i]!='T'&&@@ b[1@@ ]@@ [i]!='C'&&@@ b[1@@ ]@@ [i]!='G'&&@@ b[0]@@ [i]!='@@ a@@ '&&@@ b[0]@@ [i]!='@@ t@@ '&&@@ b[0]@@ [i]!='@@ c@@ '&&@@ b[0]@@ [i]!='@@ g@@ '&&@@ b[1@@ ]@@ [i]!='@@ a@@ '&&@@ b[1@@ ]@@ [i]!='@@ t@@ '&&@@ b[1@@ ]@@ [i]!='@@ c@@ '&&@@ b[1@@ ]@@ [i]!='@@ g@@ ') { printf("error"); return0; } if(@@ b[0]@@ [i]==@@ b[1@@ ]@@ [i]) s++; } if(s@@ *1.0/@@ strlen(@@ b[0]@@ )>@@ a) printf("yes"); elseprintf("no"); return0; }  
c -1
h -1
intmain(){ intn,i,j,k,@@ t; cin>>n; inta[20000]; for(i=0;i<n;i++) cin>>a[i]; cout<<a[0]; for(j=1;j<@@ n;j++){ for(k=0;k<j@@ ;k++) if(a[j]==@@ a[k]) break; if(k==@@ j) cout<<""<<@@ a[j]; } return0; }  
c -1
h -1
0

intmain(){ intarray[@@ 101][101]; introw,col,@@ i,j,k; int(*p)@@ [@@ 101@@ ]=@@ array@@ ; cin>>row>>col; for(i=0;i<row;i++) for(j=0;j<col;j++) {@@ cin>>array[i][j]; } cout<<@@ *(@@ *(p+@@ 0@@ )+@@ 0@@ )<<endl; for(i=1;i<@@ col;i++) for(k=@@ i,j@@ =0@@ ;k>=0@@ &&j@@ <row@@ ;k--) { cout<<@@ *(*(p@@ +j)@@ +k@@ )<<endl; if(k@@ -1@@ >=0@@ )@@ j++; } for(i=1;i<row;i++) for(j=i,@@ k=@@ col-1@@ ;k>=0@@ &&j@@ <row@@ ;j++) { cout<<@@ *(*(p@@ +j)@@ +k@@ )<<endl; if(j@@ +1@@ <row@@ )@@ k--; } return0; }  
c -1
h -1
intmain(){ double@@ a,b; chars[@@ 501],@@ t@@ [501]; char@@ *p,*@@ q; intm=0,@@ n,@@ l; scanf("%lf%s%s",&@@ a,@@ s,@@ t); n@@ =strlen(s); l=strlen(@@ t); if(n==@@ l@@ ){ p=@@ s; q=@@ t; while(@@ *p@@ !='\0'@@ ){ if(@@ *p@@ !='@@ A@@ '&@@ &*@@ p@@ !='@@ T@@ '&@@ &*@@ p@@ !='@@ C@@ '&@@ &*@@ p@@ !='@@ G'){ printf("error"); return0; } else{ if(*@@ q@@ !='@@ A@@ '&@@ &*@@ q@@ !='@@ T@@ '&@@ &*@@ q@@ !='@@ C@@ '&@@ &*@@ q@@ !='@@ G'){ printf("error"); return0; } else{ if(@@ *p@@ ==@@ *@@ q@@ ){@@ m@@ ++;} p++; q++; } } } b=@@ m@@ *1.0/@@ n; if(b@@ >@@ a)@@ printf("yes"); elseprintf("no"); } else@@ printf("error"); return0; }  
c -1
h -1
0

intmain() { introw,col,@@ i,j,k,@@ sum; cin>>row>>col; intarray[@@ row][col]; for(i=0;i<row;i++) for(j=0;j<col;j++) cin>>array[i][j]; sum=@@ row@@ +@@ col; for(k=@@ 2@@ ;k<=@@ sum@@ ;k++) for(i=1;i<=@@ row;i++) for(j=@@ col@@ ;j>0;j--) if(i+j@@ ==k) {@@ cout<<array@@ [i-1]@@ [j-1]@@ <<endl@@ ;break;} return0; }  
c -1
h -1
intmain() { intn,@@ h@@ [100],@@ w@@ =0,@@ q@@ ;@@ inta[100][100]; cin>>n; for(inti=1;i<=n;i++) {@@ h@@ [i]@@ =0;@@ for(intj=1;j<=@@ n;j++) { cin>>a[i][j]; if(a[i][j]==0) h@@ [i]++; }} for(inti=1;i<=n;i++) {@@ if(h@@ [i]!=0) {@@ q=@@ h@@ [i];@@ break;}} for(inti=1;i<=n;i++) { if(h@@ [i]!=0) {@@ w@@ ++;@@ }@@ elsecontinue; } intm@@ =(@@ q@@ -2)*(@@ w@@ -2); cout<<@@ m; }  
c -1
h -1
0

int@@ alpha@@ [26]={0}; struct@@ library { intnum; char@@ authors@@ [27]; }@@ books@@ [999]; void@@ addauthor@@ (char@@ string@@ []) { inti=0; do {@@ alpha@@ [@@ string@@ [i]@@ -'A']++; i++; } while(@@ string@@ [i]@@ !='\0'@@ ); } void@@ hewroteit@@ (struct@@ library@@ book@@ ,int@@ maxalpha@@ ) { inti; for(i=0;@@ book@@ .@@ authors@@ [i]!='\0';i++) { if(@@ book@@ .@@ authors@@ [i]@@ -'@@ A@@ '==@@ maxalpha@@ ) { printf("%d\n",@@ book@@ .@@ num); break; } } } intmain() { intm; scanf("%d",&m); inti; for(i=0;i<m;i++) scanf("%d%s",&@@ books@@ [i].@@ num,@@ books@@ [i].@@ authors@@ ); for(i=0;i<m;i++) addauthor@@ (@@ books@@ [i].@@ authors@@ ); intmax=0,@@ maxalpha@@ =0; for(i=0;i<26;i++) { if(@@ alpha@@ [i]>max) { max=@@ alpha@@ [i]; maxalpha@@ =i; } } printf("%c\n%d\n",@@ 'A'+@@ maxalpha@@ ,max); for(i=0;i<m;i++) { hewroteit@@ (@@ books@@ [i],@@ maxalpha@@ ); } return0; }  
c -1
h -1
voidmain() { inti,j,k,n,@@ row,col,@@ c@@ [100][100],@@ result@@ [100]={0}; scanf("%d",&n); for(i=0;i<n;i++) { scanf("%d%d",&row,&col); for(j=0;j<row@@ ;j++) { for(k=0;k<col@@ ;k++) { scanf("%d",@@ *(@@ c@@ +j)+@@ k); if(k@@ ==0||@@ k==@@ col-1@@ ||j@@ ==0||j==@@ row@@ -1) result@@ [i]@@ +=@@ *(*(@@ c@@ +j)+@@ k); } } } for(i=0;i<n;i++) printf("%d\n",@@ result@@ [i]); }  
c -1
h -1
0

intmain(){ chars[256],@@ s1@@ [256],@@ s2@@ [256],@@ ss@@ [@@ 20],@@ re@@ [20]; inti,j,@@ x=0,@@ y=0,@@ a,@@ flag=0; gets(s); scanf("%s%s",@@ ss@@ ,@@ re); for(i=0;s[i]@@ !='\0';i++){ if(s@@ [i]!=@@ ss@@ [0]){ s1@@ [x@@ ]=@@ s[i]; x++; } elseif(@@ s@@ [i]==@@ ss@@ [0]){ a=i; flag=1; for(j=0;@@ ss@@ [j]@@ !='\0';j++){ if(@@ ss@@ [j]!=@@ s[@@ a@@ ]){ flag=0; } a++; } if(flag@@ ==0){ s1@@ [x@@ ]=@@ s[i]; x++; } } if(flag@@ ==1){ s1@@ [x@@ ]='\0'; break; } } if(flag@@ ==1){ for(i@@ +=@@ strlen(@@ ss@@ );@@ s[i]@@ !='\0';i++){ s2@@ [y@@ ]=@@ s[i]; y++; } } s2@@ [y@@ ]='\0'; if(flag@@ ==1){ printf("%s@@ %s%s",@@ s1,@@ re@@ ,@@ s2); } if(flag@@ ==0){ printf("%s",s); } return0; }  
c -1
h -1
voidmain() { inti; int@@ sum_day@@ (int,int); intleap@@ (intyear@@ ); int@@ year@@ [5],@@ month@@ [5],@@ day@@ [5],@@ days@@ [5@@ ]; for(i=0;i<@@ 5;i++) scanf("%d%d%d",&year@@ [i],&@@ month@@ [i],&@@ day@@ [i]); for(i=0;i<@@ 5;i++) {@@ days@@ [i]=@@ sum_day@@ (@@ month@@ [i],@@ day@@ [i]); if(leap@@ (year@@ [i])@@ &&@@ month@@ [i]>=@@ 3) days@@ [i]=@@ days@@ [i]@@ +1; printf("%d\n",@@ days@@ [i]);} } int@@ sum_day@@ (int@@ month@@ ,int@@ day@@ ) {int@@ day_tab@@ [13]={0,31,28,31,30,31,30,31,31,30,31,30,31}; inti; for(i=1;i<month;i++) day@@ +=@@ day_tab@@ [i]; return(@@ day); } intleap@@ (intyear@@ ) {int@@ leap@@ ; leap@@ =@@ year%4==0&&year%100!=0@@ ||@@ year%@@ 400==0@@ ; return(@@ leap@@ ); }  
c -1
h -1
0

main() { intm=0,@@ n,i,j,@@ t=0; intnum@@ [100]; inta[100]; charstring@@ [11]; char@@ stm@@ [100][@@ 11]; charstr@@ [100][@@ 11]; scanf("%d",&n); for(i=0;i<n;i++) { scanf("%s",@@ stm@@ [i]); scanf("%d",&@@ num[i]); } j=0; for(i=0;i<n;i++) { if(num@@ [i]@@ >=60) { a[j]=@@ num[i]; strncpy@@ (@@ str@@ [j],@@ stm@@ [i],@@ 10@@ ); j++; t@@ =j@@ -1; } } for(j=0;j<@@ t;j++) { for(i=0;i<@@ t@@ -j;i++) { if(a[i]@@ <@@ a[i+1]) { m=@@ a[i]; a[i]=a[i+1]; a[i+1]=@@ m; strncpy@@ (@@ string,@@ str@@ [i],@@ 10@@ ); strncpy@@ (@@ str@@ [i],@@ str@@ [i+1],@@ 10@@ ); strncpy@@ (@@ str@@ [i+1],@@ string,@@ 10@@ ); } } } for(i=0;i<=@@ t;i++) printf("%s\n",@@ str[i]); for(i=0;i<n;i++) { if(num@@ [i]@@ <60) printf("%s\n",@@ stm@@ [i]); } getchar(); getchar(); }  
c -1
h -1
structstudent { intnum; int@@ chn@@ ; intmath; int@@ score; }stu[100000]; main() { intn,i,@@ a,b,@@ c; scanf("%d",&n); for(i=0;i<n;i++){ scanf("%d%d%d",&stu[i].num,&stu[i].@@ chn@@ ,&stu[i].math); stu[i].@@ score@@ =stu[i].@@ chn@@ +stu[i].@@ math; } if(@@ stu[0].@@ score@@ >=@@ stu[1].@@ score@@ ){ if(@@ stu[1].@@ score@@ >=@@ stu[2@@ ].@@ score@@ ){ a=0; b=1; c=@@ 2; } elseif(@@ stu[0].@@ score@@ >=@@ stu[2@@ ].@@ score@@ ){ a=0; b=@@ 2; c=1; } else{ a=@@ 2; b=0; c=1; } } else{ if(@@ stu[0].@@ score@@ >=@@ stu[2@@ ].@@ score@@ ){ a=1; b=0; c=@@ 2; } elseif(@@ stu[1].@@ score@@ >=@@ stu[2@@ ].@@ score@@ ){ a=1; b=@@ 2; c=0; } else{ a=@@ 2; b=1; c=0; } } for(i=@@ 3@@ ;i<@@ n;i++){ if(stu[i].@@ score@@ >@@ stu[@@ a@@ ].@@ score@@ ){ c=@@ b; b=@@ a; a=i; } elseif(@@ stu[i].@@ score@@ >@@ stu[@@ b@@ ].@@ score@@ ){ c=@@ b; b=i; } elseif(@@ stu[i].@@ score@@ >@@ stu[@@ c@@ ].@@ score@@ ){ c=i; } } printf("%d%d\n%d%d\n%d%d\n",@@ stu[@@ a@@ ].num,stu[@@ a@@ ].@@ score@@ ,@@ stu[@@ b@@ ].num,stu[@@ b@@ ].@@ score@@ ,@@ stu[@@ c@@ ].num,stu[@@ c@@ ].@@ score@@ ); }  
c -1
h -1
0

struct@@ library { intnum; char@@ aut@@ [30]; struct@@ library@@ *next; } main() { intm,i,j,@@ a[@@ 30],@@ t,@@ b[@@ 30],@@ x=0; charname@@ ; struct@@ library@@ *@@ head; struct@@ library@@ *@@ p1,*p2,*@@ p; for(i=0;i<26;i++) { a[i]=0; b[i]=0; } scanf("%d",&m); p1=p2=(struct@@ library@@ *)malloc(LEN); scanf("%d%s",&p1->num,p1->@@ aut@@ ); head=p1; p2=p1; for(i=0;i<m-1;i++) { p1=(struct@@ library@@ *)malloc(LEN); scanf("%d%s",&p1->num,p1->@@ aut@@ ); p2->next=p1; p2=p1; } p1->next=NULL; p=head; for(i=0;i<m;i++) { for(j=0;j<26;j++) { if(p->aut@@ [j]=='@@ A')@@ a[0]=@@ a[0]@@ +1; if(p->aut@@ [j]=='@@ B@@ ')@@ a[1]=@@ a[1]@@ +1; if(p->aut@@ [j]=='@@ C')@@ a[2@@ ]=a[@@ 2@@ ]+1; if(p->aut@@ [j]=='@@ D@@ ')a[@@ 3@@ ]=a[@@ 3@@ ]+1; if(p->aut@@ [j]=='@@ E@@ ')a[@@ 4@@ ]=a[@@ 4@@ ]+1; if(p->aut@@ [j]=='@@ F@@ ')a[@@ 5@@ ]=a[@@ 5@@ ]+1; if(p->aut@@ [j]=='@@ G')@@ a[@@ 6@@ ]=a[@@ 6@@ ]+1; if(p->aut@@ [j]=='@@ H@@ ')a[@@ 7@@ ]=a[@@ 7@@ ]+1; if(p->aut@@ [j]=='@@ I@@ ')a[@@ 8@@ ]=a[@@ 8@@ ]+1; if(p->aut@@ [j]=='@@ J@@ ')a[@@ 9@@ ]=a[@@ 9@@ ]+1; if(p->aut@@ [j]=='@@ K@@ ')a[@@ 10@@ ]=a[@@ 10@@ ]+1; if(p->aut@@ [j]=='@@ L@@ ')a[@@ 11@@ ]=a[@@ 11@@ ]+1; if(p->aut@@ [j]=='@@ M@@ ')a[@@ 12@@ ]=a[@@ 12@@ ]+1; if(p->aut@@ [j]=='@@ N@@ ')a[@@ 13@@ ]=a[@@ 13@@ ]+1; if(p->aut@@ [j]=='@@ O@@ ')a[@@ 14@@ ]=a[@@ 14@@ ]+1; if(p->aut@@ [j]=='@@ P@@ ')a[@@ 15@@ ]=a[@@ 15@@ ]+1; if(p->aut@@ [j]=='@@ Q@@ ')a[@@ 16@@ ]=a[@@ 16@@ ]+1; if(p->aut@@ [j]=='@@ R@@ ')a[@@ 17@@ ]=a[@@ 17@@ ]+1; if(p->aut@@ [j]=='@@ S@@ ')a[@@ 18@@ ]=a[@@ 18@@ ]+1; if(p->aut@@ [j]=='@@ T')@@ a[@@ 19@@ ]=a[@@ 19@@ ]+1; if(p->aut@@ [j]=='@@ U@@ ')a[@@ 20@@ ]=a[@@ 20@@ ]+1; if(p->aut@@ [j]=='@@ V@@ ')a[@@ 21@@ ]=a[@@ 21@@ ]+1; if(p->aut@@ [j]=='@@ W@@ ')a[@@ 22@@ ]=a[@@ 22@@ ]+1; if(p->aut@@ [j]=='@@ X@@ ')a[@@ 23@@ ]=a[@@ 23@@ ]+1; if(p->aut@@ [j]=='@@ Y@@ ')a[@@ 24@@ ]=a[@@ 24@@ ]+1; if(p->aut@@ [j]=='@@ Z@@ ')a[@@ 25@@ ]=a[@@ 25@@ ]+1; if(p->aut@@ [j]==@@ '\0')@@ break; } p=p->next; } t=0; for(i=1;i<26;i++) { if(a[@@ t@@ ]<@@ a[i])@@ t=i; } if(t==0) { printf("@@ A@@ \n"); name@@ ='A'; } if(t@@ ==1) { printf("@@ B@@ \n"); name@@ ='@@ B@@ '; } if(t==@@ 2) { printf("@@ C@@ \n"); name@@ ='@@ C@@ '; } if(t==@@ 3) { printf("@@ D@@ \n"); name@@ ='@@ D@@ '; } if(t==@@ 4) { printf("@@ E@@ \n"); name@@ ='@@ E@@ '; } if(t==@@ 5) { printf("@@ F@@ \n"); name@@ ='@@ F@@ '; } if(t==@@ 6) { printf("@@ G@@ \n"); name@@ ='@@ G@@ '; } if(t==@@ 7) { printf("@@ H@@ \n"); name@@ ='@@ H@@ '; } if(t==@@ 8) { printf("@@ I@@ \n"); name@@ ='@@ I@@ '; } if(t==@@ 9) { printf("@@ J@@ \n"); name@@ ='@@ J@@ '; } if(t==@@ 10) { printf("@@ K@@ \n"); name@@ ='@@ K@@ '; } if(t==@@ 11) { printf("@@ L@@ \n"); name@@ ='@@ L@@ '; } if(t==@@ 12) { printf("@@ M@@ \n"); name@@ ='@@ M@@ '; } if(t==@@ 13@@ ) { printf("@@ N@@ \n"); name@@ ='@@ N@@ '; } if(t==@@ 14@@ ) { printf("@@ O@@ \n"); name@@ ='@@ O@@ '; } if(t==@@ 15@@ ) { printf("@@ P@@ \n"); name@@ ='@@ P@@ '; } if(t==@@ 16@@ ) { printf("@@ Q@@ \n"); name@@ ='@@ Q@@ '; } if(t==@@ 17@@ ) { printf("@@ R@@ \n"); name@@ ='@@ R@@ '; } if(t==@@ 18@@ ) { printf("@@ S@@ \n"); name@@ ='@@ S@@ '; } if(t==@@ 19@@ ) { printf("@@ T@@ \n"); name@@ ='@@ T@@ '; } if(t==@@ 20@@ ) { printf("@@ U@@ \n"); name@@ ='@@ U@@ '; } if(t==@@ 21@@ ) { printf("@@ V@@ \n"); name@@ ='@@ V@@ '; } if(t==@@ 22@@ ) { printf("@@ W@@ \n"); name@@ ='@@ W@@ '; } if(t==@@ 23@@ ) { printf("@@ X@@ \n"); name@@ ='@@ X@@ '; } if(t==@@ 24@@ ) { printf("@@ Y@@ \n"); name@@ ='@@ Y@@ '; } if(t==@@ 25@@ ) { printf("@@ Z@@ \n"); name@@ ='@@ Z@@ '; } printf("%d\n",@@ a[t@@ ]); p=head; for(i=0;i<m;i++) { for(j=0;j<26;j++) { if(p->aut@@ [j]==@@ name@@ ) { b[@@ x@@ ]=@@ p->@@ num; x=x@@ +1; break; } } p=p->next; } for(i=0;i<x@@ -1;i++)@@ printf("%d\n",@@ b[i]); printf("%d",b[i]); }  
c -1
h -1
main() { chara[@@ 3000@@ ]; gets(a); charb[@@ 3000@@ ]; gets(b); charc[@@ 3000@@ ]; gets(c); inti,j,k,@@ s,@@ l=0; intcount=0; for(k=0;@@ b[k@@ ]!='\0'@@ ;k++) l=l@@ +1; for(i=0;a[i]!='\0';i++) { if(a[i]==@@ b[0]) { for(j=i,@@ s@@ =0;j<@@ i+@@ l,@@ s@@ <@@ l@@ ;j++,@@ s++) { if(a[j]==@@ b[@@ s@@ ]) count++; if(count==@@ l) { for(j=i,@@ s@@ =0;j<=@@ i+@@ l@@ -1@@ &&@@ s@@ <=@@ l@@ -1@@ ;j++,@@ s++) a[j]=@@ c[@@ s@@ ]; } } } } for(i=0;a[i]!='\0';i++) printf("%c",a[i]); getchar(); }  
c -1
h -1
0

intmain() { intr,@@ c,@@ a[100@@ ][100@@ ]={0}; inti,j,@@ rs@@ ,@@ re@@ ,@@ cs@@ ,@@ ce@@ ,@@ s; scanf("%d%d",&@@ r@@ ,&c); for(i=0;i<@@ r;i++) { for(j=0;j<@@ c;j++) scanf("%d",&a[i][j]); } for(@@ rs@@ =0,@@ cs@@ =0,@@ re@@ =0,@@ ce@@ =0;@@ (@@ re@@ +@@ ce@@ )@@ <(@@ r@@ +c@@ );@@ ) { for(i=@@ rs@@ ,j=@@ cs@@ ;i<=@@ re@@ &&j@@ >=@@ ce@@ ;i++,j--) { printf("%d\n",a[i][j]); } if(@@ cs@@ <(@@ c@@ -1)) cs@@ ++; else rs@@ ++; if(@@ re@@ <(@@ r@@ -1)) re@@ ++; else ce@@ ++; } return0; }  
c -1
h -1
intmain() { intn,a[@@ 20000],b[@@ 101@@ ]={0},@@ i,@@ num=0; cin>>n; for(i=0;i<n;i++) cin>>a[i]; for(i=0;i<n;i++) { b[@@ a[i]@@ ]++; if(b[@@ a[i]@@ ]@@ ==1) { num++; if(num@@ ==1) cout<<a[i]; if(num@@ !=1) cout<<""<<a[i]; } } return0; }  
c -1
h -1
0

structbook{ intnum; charauthor@@ [26@@ ];@@ }@@ shu@@ [999]; intmain(intargc,char*argv[]) { intm,@@ b,@@ i@@ ,*p; charc; int@@ writer@@ [26]; char@@ max@@ (int*p@@ ); scanf("%d",&m); for(i=0;i<m;i++){ scanf("%d%s",&@@ shu[i].@@ num,@@ shu[i].author@@ );} for(c@@ ='@@ A',@@ writer@@ [c@@ -'A'@@ ]@@ =0;c@@ <=@@ 'Z'@@ ;c@@ ++){ writer@@ [c@@ -'A'@@ ]=0; for(i=0;i<m;i++){ for(b@@ =0;@@ shu[i].author@@ [b@@ ]!='\0'@@ ;@@ b++){ if(c==@@ shu[i].author@@ [b@@ ]){ writer@@ [c@@ -'A'@@ ]++;@@ }@@ }}} p=@@ writer@@ ; printf("%c\n%d\n",@@ max@@ (p@@ ),@@ writer@@ [max@@ (p@@ )@@ -'A'@@ ]); for(i=0;i<m;i++){ for(b@@ =0;@@ shu[i].author@@ [b@@ ]!='\0'@@ ;@@ b++){ if(max@@ (p@@ )==@@ shu[i].author@@ [b@@ ]){ printf("%d\n",@@ shu[i].@@ num@@ );@@ }}} return0; } char@@ max@@ (int*p@@ ){ inti; char@@ max; for(i=0,@@ max@@ ='A'@@ ;i<@@ 26@@ ;i++){ if(@@ *(p+i)@@ >*@@ (p@@ +@@ max@@ -'@@ A')@@ ){ max@@ =i@@ +'A'@@ ;}} return@@ max@@ ;}  
c -1
h -1
intmain() { intn,i,j,@@ x1,y1,x2,y2@@ ; cin>>n; ints@@ [100][100@@ ]={0}; for(i=1;i<=n;i++) for(j=1;j<=n;j++) cin>>@@ s[i]@@ [j]; for(i=1;i<=n;i++) { s[i]@@ [0]=@@ 255@@ ; s[i]@@ [n@@ +1]=@@ 255@@ ; } for(j=1;j<=n;j++) { s[0]@@ [j]=@@ 255@@ ; s[@@ n+1@@ ]@@ [j]=@@ 255@@ ; } for(i=1;i<=n;i++) for(j=1;j<=n;j++) { if(s@@ [i][j]==0&&@@ s[i]@@ [j+1]@@ ==0&&@@ s@@ [i+1][j]@@ ==0) { x1=i; y1=j; } if(s@@ [i][j]==0&&@@ s[i]@@ [j-1]@@ ==0&&@@ s@@ [i-1][j]@@ ==0) { x2=i; y2=j; } } cout<<(@@ x2-x1-1)*(y2-y1-1); return0; }  
c -1
h -1
0

intmain() { inti,n; cin>>n; inta[n]; for(i=0;i<n;i++) cin>>a[i]; for(i=0;i<n-1;i++) { for(intj=i+1@@ ;j<n;j++) {@@ if(a[j]==a[i]) { for(intk@@ =j@@ ;k<@@ n;k++) {@@ a[k]=a[k@@ +1@@ ];} n=@@ n-1; j=j-1; } elsecontinue; } } for(i=0;i<n-1;i++) cout<<a[i]<<""; cout<<a[@@ n-1@@ ]<<endl; return0; }  
c -1
h -1
intmain(){ intn,@@ s@@ [100][100],@@ x; scanf("%d",&n); int@@ a1@@ =@@ n-1@@ ,@@ a2@@ =0,@@ b1@@ =@@ n-1@@ ,@@ b2@@ =0; for(inti=0;i<n;i++){ for(intj=0;j<n;j++){ scanf("%d",&s@@ [i][j]); if(s@@ [i][j]==0){ if(i<@@ a1@@ ) a1@@ =i; if(i>@@ a2@@ ) a2@@ =i; if(j<@@ b1@@ ) b1@@ =j; if(j@@ >@@ b2@@ ) b2@@ =j; } } } x@@ =(@@ b2-b1@@ -1)*(@@ a2-a1@@ -1); printf("%d",x); return0; }  
c -1
h -1
0

intmain(){ intsz[@@ N@@ ],@@ n,k,@@ i,@@ p,@@ sum,@@ isbreak@@ =0; scanf("%d%d\n",&n,&@@ k); for(i=0;i<n;i++){ scanf("%d",&(sz[i]@@ )); } for(i=0;i<n-1;i++){ for(p@@ =i+1@@ ;p@@ <n;@@ p++){ sum=@@ sz[i]@@ +@@ sz[@@ p@@ ]; if(sum@@ ==k){ isbreak@@ =1; break; } }@@ if(@@ isbreak@@ ==1){ break; } } if(@@ isbreak@@ ==0) printf("no"); if(@@ isbreak@@ ==1) printf("yes"); return0; }  
c -1
h -1
intmax@@ (intx,int@@ y); intmax@@ (intx,inty) { int@@ z; if(x>@@ y) z=@@ x; else z=@@ y; return(@@ z); } intmain() { inta[@@ 25@@ ]={0}; intc[@@ 25]; int@@ Height@@ ,@@ k; intn; scanf("%d",&k); { for(n=0;n@@ <k;@@ n++) { scanf("%d",&@@ Height@@ ); a[n@@ ]=@@ Height@@ ; c[@@ n@@ ]=1; } } inti,j; for(i=k-2;i>=0;i--) { for(j=i+1;j<=@@ k@@ -1;j++) { if((a[j]@@ <=@@ a[i]@@ )&&(@@ c[i]@@ <@@ c[j]@@ +1@@ )) c[i]=@@ c@@ [j]+1; } } int@@ cMax@@ =@@ c[@@ 0]; { for(i=0;i<=k-1;i++) { cMax@@ =@@ cMax@@ >@@ c[i]@@ ?@@ cMax@@ :@@ c[i]; } printf("%d",@@ cMax@@ ); } return0; }  
c -1
h -1
0

intmain() { intk; scanf("%d",&k); while(k@@ --) { intm,n; scanf("%d%d",&m,&n); inta[@@ 101][101]; for(inti=0;i<m;i++) for(intj=0;j<n;j++) scanf("%d",&a[i][j]); intsum=0; for(inti=0;i<m;i++) sum=sum+@@ a[i][0]+@@ a[i][n-1]; for(inti=1;i<@@ n-1;i++) sum=sum+@@ a[0]@@ [i]+@@ a[m-1]@@ [i]; printf("%d\n",sum); } return0; }  
c -1
h -1
intn,i; inth@@ [26]; intmax@@ (inta,intb) { if(a@@ >@@ b) return@@ a; else return@@ b; } intf(int@@ t@@ ,int@@ l) { if(t@@ ==1) { if(h@@ [1]@@ >=@@ l) return1; else return0; } elseif(@@ h@@ [t@@ ]<@@ l) return@@ f(@@ t@@ -1,@@ l); else return@@ max(@@ f(@@ t@@ -1,@@ l@@ ),@@ f(@@ t@@ -1,@@ h@@ [t@@ ])@@ +1); } voidmain() { scanf("%d",&n); for(i=1;i<=n;i++) scanf("%d",&h[i]); printf("%d",@@ f(@@ n,@@ 0@@ )); }  
c -1
h -1
0

intmain() { structpatient {@@ charid[10]; intage; }@@ patient@@ [100],@@ old@@ [100],@@ t; inta,@@ i=0,j=0,@@ k=0,@@ r,@@ i1@@ ; scanf("%d",&a); getchar(); for(i=0@@ ;j@@ +i@@ <@@ a;i++) { scanf("%s%d",@@ patient@@ [i].id,&@@ patient@@ [i].age); if(@@ patient@@ [i].age>=60) { old@@ [j]=@@ patient@@ [i]; j++; i--; } } for(r=0;r@@ <j@@ -1;@@ r++) for(k=0;k<j@@ -1@@ -@@ r@@ ;k++) if(old@@ [k@@ ].age@@ <@@ old@@ [k+1@@ ].age) {t=@@ old@@ [k]@@ ;@@ old@@ [k]=@@ old@@ [k+1@@ ];@@ old@@ [k+1]=@@ t;} for(r=0;r@@ <j@@ ;r++) printf("%s\n",old@@ [r@@ ].id); for(r=0;r@@ <i@@ ;r++) printf("%s\n",@@ patient@@ [r@@ ].id); return0; }  
c -1
h -1
intmain(){ intn,i,j,@@ c; scanf("%d",&n); intcount=0; intf@@ [1000][1000]; for(i=0;i<n;i++){ for(j=0;j<n;j++){ scanf("%d",&@@ f@@ [i][j]); if(f@@ [i][j]@@ ==0)@@ count=@@ count@@ +1;} scanf("\n@@ ");} c@@ =(@@ ((@@ count@@ +@@ 4)@@ /@@ 4)@@ -2)*(@@ ((@@ count@@ +@@ 4)@@ /@@ 4)@@ -2); printf("%d",@@ c); return0;}  
c -1
h -1
0

int@@ getin@@ (intarray[],int@@ num); int@@ sort@@ (intarray[],int@@ num); int@@ link@@ (int@@ array1@@ [],int@@ array2@@ [],int@@ num1@@ ,int@@ num2@@ ); intmain() { int@@ numa@@ ,@@ numb@@ ,a[@@ 1000],b[1000]; cin>>@@ numa@@ >>@@ numb@@ ; getin@@ (a,@@ numa@@ ); getin@@ (b,@@ numb@@ ); sort@@ (a,@@ numa@@ ); sort@@ (b,@@ numb@@ ); link@@ (a,b,@@ numa@@ ,@@ numb@@ ); return0; } int@@ getin@@ (intarray[],int@@ num) { for(inti=0;i<@@ num;i++) { cin>>array@@ [i]; } return(@@ array[@@ num@@ ]); } int@@ sort@@ (intarray[],int@@ num) { inttemp; for(inti=0;i<@@ num@@ -1;i++) { for(intj=0;j<@@ num@@ -i-1;j++) { if(array@@ [j]>@@ array@@ [j+1]) { temp=@@ array@@ [j]; array@@ [j]=@@ array@@ [j+1]; array@@ [j+1]=temp; } } } return@@ array[@@ num@@ ]; } int@@ link@@ (int@@ array1@@ [],int@@ array2@@ [],int@@ num1@@ ,int@@ num2@@ ) { cout<<@@ array1@@ [0]; for(inti=1;i<@@ num1@@ ;i++) cout<<""<<@@ array1@@ [i]; for(inti=0;i<@@ num2@@ ;i++) cout<<""<<@@ array2@@ [i]; return0; }  
c -1
h -1
intn; int@@ d@@ [100]; int@@ dp@@ [30]; intmain() { while(@@ scanf("%d",&@@ n)@@ ==1) { for(inti=1;i<=n;i++) scanf("%d",@@ d@@ +i); d[@@ 0]=@@ (@@ -@@ 1u@@ )@@ >>@@ 1; for(inti=1;i<=n;i++) { dp@@ [i]=0; for(intj=0;j<i;j++) if(d@@ [j]>=@@ d@@ [i]) dp@@ [i]=@@ max(@@ dp@@ [i],@@ dp@@ [j]@@ +1); } int@@ ans=0; for(inti=1;i<=n;i++) ans=@@ max(@@ ans@@ ,@@ dp@@ [i]); printf("%d\n",@@ ans); } return0; }  
c -1
h -1
0

intf@@ (int,int); intmain() { intn,i,@@ a[@@ 50]; cin>>n; for(i=0;i<n;i++){ cin>>a[i]; cout<<@@ f(@@ a[i],@@ 2)<<endl; } return0; } intf@@ (intn,int@@ p) { intsum=0,@@ m; for(m=@@ p@@ ;m@@ <=n;@@ m@@ ++) if(n%@@ m@@ ==0){ if(m@@ <@@ n)@@ sum=sum+@@ f(@@ n/@@ m,@@ m); if(m==@@ n)@@ sum=sum+1; } returnsum; }  
c -1
h -1
intmain(){ chara[501],b[501]; inti,@@ x,y,@@ z,@@ c; doublen,@@ p; scanf("%lf",&n); scanf("%s",&@@ a); scanf("%s",&@@ b); x@@ =strlen(a); y@@ =strlen(b); z=0; c=0; if(x@@ !=@@ y){ printf("error"); }else{ for(i=0;i<x;i++){ if((@@ a[i]=='@@ A'||a[i]=='T'||a[i]=='@@ G'||@@ a[i]=='@@ C')&&(@@ b[i]=='@@ A'||@@ b[i]=='@@ T'||@@ b[i]=='@@ G'||@@ b[i]=='@@ C')){ c++; if(a[i]==b[i]){ z@@ ++; } } } p@@ =1@@ .@@ 000@@ *@@ z@@ /@@ x; if(c==@@ x@@ &&p@@ >n){ printf("yes"); }elseif(@@ c@@ ==@@ x@@ &&p@@ <=@@ n){ printf("no"); }elseif(@@ c@@ !=@@ x){ printf("error"); } } return0; }  
c -1
h -1
0

intmain() { intn; cin>>n; inta[n]; inti,j; for(i=0;i<n;i++) { cin>>a[i]; } cout<<a[0]; for(i=1;i<n;i++) { for(j=0;j<i;j++) { if(a[j]==a[i]) { break; } } if(i==@@ j) { cout<<""<<a[i]; } } return0; }  
c -1
h -1
intmain() { intn,i,@@ a[@@ 30000@@ ],@@ j; scanf("%d\n",&n); scanf("%d",&a[0]); printf("%d",a[0]); for(i=1;i<n;i++) { scanf("%d",&a[i]); } for(i=1;i<n;i++) { for(j=0;j<=i;j++) { if(a[i]==a[j]) break; } if(j==i) printf("%d",a[i]); } return0; }  
c -1
h -1
1


intmain() { int@@ row@@ =0,@@ col@@ =0; cin>>row>>col; int@@ array@@ [100][100@@ ]={0}; inti,j,n; for(i=0;i<row;i++) { for(j=0;j<col;j++) { cin>>array[i][j]; } } for(n=0;n@@ <row@@ +col@@ ;n++) { for(i=0,j@@ =@@ n-1@@ ;i<@@ n,@@ j@@ >=0@@ ;i++,j--) { if(i@@ <row@@ &&j@@ <col) { cout<<array@@ [i][j]<<endl; } } } return0; }  
c -1
h -1
intf(inta,int@@ array@@ [],int@@ K@@ ) { inti,@@ max=0,@@ j; if(a==@@ K@@ -1)@@ return1; else { for(j=@@ K@@ -1@@ ;j>@@ a@@ ;j--) { if(array@@ [j]<=@@ array@@ [a@@ ]) { if(@@ f(@@ j,@@ array@@ ,@@ K@@ )@@ >max)max=@@ f(@@ j,@@ array@@ ,@@ K@@ ); } } return@@ max+1; } } intmain() { int@@ K@@ ,@@ k,@@ A@@ [25],@@ n,@@ max@@ =1,i; scanf("%d",&@@ K@@ ); for(k=0;k<=@@ K@@ -1;k++) { scanf("%d",&@@ A@@ [k]); } for(i=0;i<=@@ K@@ -1;i++) { if(@@ f(@@ i,@@ A@@ ,@@ K@@ )@@ >max)max=@@ f(@@ i,@@ A@@ ,@@ K@@ ); } printf("%d",max); }  
c -1
h -1
0

inta[100@@ ]={0},@@ b[100@@ ]={0}; int@@ a_n@@ ,@@ b_n@@ ,i; voidread@@ () { scanf("%d%d",&@@ a_n@@ ,&@@ b_n@@ ); for(i=0;i<@@ a_n@@ ;i++) scanf("%d",&a[i]); for(i=0;i<@@ b_n@@ ;i++) scanf("%d",&b[i]); } voidsort@@ (inta[],int@@ a_n@@ ,int@@ b[],int@@ b_n@@ ) { inti,j,@@ key@@ ; for(i=1;i<@@ a_n@@ ;i++) { key@@ =@@ a[i]; j@@ =i-1; while(@@ a[j]@@ >@@ key@@ &&j>=0@@ ){@@ a[j+1]=@@ a[j]; j@@ --@@ ;@@ }@@ a[j+1]=@@ key@@ ; } for(i=1;i<@@ b_n@@ ;i++) { key@@ =@@ b[i]; j@@ =i-1; while(@@ b[j]@@ >@@ key@@ &&j>=0@@ ){@@ b[j+1]=@@ b[j]; j@@ --@@ ;@@ }@@ b[j+1]=@@ key@@ ; } } void@@ merge@@ (inta[],int@@ a_n@@ ,int@@ b[],int@@ b_n@@ ) { inti; for(i=0;i<@@ b_n@@ ;i++) a[@@ a_n@@ +i]=b[i]; } void@@ write@@ () { inti; for(i=0;i<@@ a_n@@ +@@ b_n@@ -1;i++) { printf("%d",a[i]); } printf("%d",a[i]); } voidmain() { read(); sort@@ (a,@@ a_n@@ ,@@ b,@@ b_n@@ ); merge@@ (a,@@ a_n@@ ,@@ b,@@ b_n@@ ); write@@ (); }  
c -1
h -1
ints[@@ 26]; intf(int@@ j); voidmain() { inti,k,@@ t; scanf("%d",&k); for(i=1;i<=k;i++) scanf("%d",&s[i]); for(t@@ =0,@@ i=1@@ ;i<=@@ k;i++) { if(@@ f(@@ i@@ )>@@ t) t=@@ f(@@ i); } printf("%d\n",t); } intf(int@@ j) { int@@ z,@@ i,@@ t; if(j@@ ==1)@@ z=1; else { for(t@@ =0,@@ i=1@@ ;i<@@ j@@ ;i++) { if(s@@ [i]>=@@ s[j]@@ &&@@ f(@@ i@@ )>@@ t) t=@@ f(@@ i); } z=@@ t@@ +1; } return@@ z; }  
c -1
h -1
0

inth@@ [25],@@ n; int@@ hack@@ (inti,int@@ w@@ ){ if(i==@@ n-1){ if(h@@ [i]<=@@ w@@ )@@ return1; else@@ return0; } int@@ b=@@ hack@@ (i+1,@@ w@@ ),@@ c=0; if(h@@ [i]<=@@ w@@ ) c@@ =1@@ +@@ hack@@ (i+1,@@ h[i]); if(b@@ >@@ c)@@ return@@ b; else@@ return@@ c; } intmain(){ scanf("%d",&n); inti,@@ max=0; for(i=0;i<n;i++){ scanf("%d",&h[i]); if(h@@ [i]>max) max=@@ h@@ [i]; } printf("%d",@@ hack@@ (@@ 0,@@ max@@ )); return0; }  
c -1
h -1
intmain() { inti,j,k,@@ a[@@ 16@@ ]={0},@@ sum; while(cin>>@@ a[0]) { if(a[0]==-1) break; i=0; sum=0; do { i++; cin>>a[i]; } while(a[i]@@ !=0); for(j=0;j<i;j++) { for(k=0;k<i;k++) { if(k!=@@ j@@ &&@@ a[k@@ ]==2*@@ a[j]) sum+=@@ 1; } } cout<<sum<<endl; } return0; }  
c -1
h -1
0

int@@ breakways@@ (int@@ num,int@@ min); intmain() { intn; cin>>n; intnumber; for(inti=1;i<=n;i++) { cin>>@@ number; cout<<@@ breakways@@ (@@ number,@@ 2)<<endl; } } int@@ breakways@@ (int@@ num,int@@ min) { intsum=0; for(intj=@@ min@@ ;j<=@@ num@@ ;j++) { if(num@@ %j==0) { if(num@@ !=@@ j) sum+=@@ breakways@@ (@@ num@@ /j,j); else sum+=@@ 1; } } returnsum; }  
c -1
h -1
intmain() { intn,i,j,@@ num[@@ 20000],@@ st@@ [@@ 91@@ ],@@ tot@@ =0; scanf("%d",&n); for(i=0;i<n;i++)@@ scanf("%d",&@@ num[i]); for(i=0;i<n;i++) { for(j=0;j<@@ i@@ ;j++)@@ if(num@@ [j]==@@ num[i]@@ )break; if(j==@@ i)@@ st@@ [@@ ++@@ tot@@ ]=@@ num[i]; } for(i=1;i<@@ tot@@ ;i++)@@ printf("%d",@@ st@@ [i]); printf("%d",@@ st@@ [@@ tot@@ ]); }  
c -1
h -1
0

intmain() { intn,k,i,j,@@ a[1000]; scanf("%d%d",&n,&k); for(i=0;i<n;i++) scanf("%d",&a[i]); for(i=0;i<n-1;i++) for(j=i+1;j<n;j++) if(a[i]+a[j]==k) { printf("yes"); return0; } if(a[i]+@@ a[j]@@ !=@@ k) printf("no"); return0; }  
c -1
h -1
main() { charstring@@ [@@ LIU@@ +1],@@ substring@@ [@@ LIU@@ +1],@@ replacement@@ [@@ LIU@@ +1],@@ out@@ [@@ LIU@@ +1]; int@@ h,@@ i,j,k,@@ n,@@ l,@@ lsub@@ ,@@ lreplace@@ ,@@ count,@@ heihei@@ =0; gets(@@ string); gets(@@ substring); gets(@@ replacement); l=strlen(@@ string@@ );@@ lsub@@ =strlen(@@ substring@@ );@@ lreplace@@ =strlen(@@ replacement); for(i=0,@@ n@@ =0;i<@@ l@@ ;i++,@@ n++) { count=0; for(j=0;@@ (j@@ <@@ lsub@@ )&&(@@ heihei@@ ==0)&&(@@ string@@ [i+@@ lsub@@ -1]@@ !=@@ '\0')@@ ;j++) { if(string@@ [i+j]==@@ substring@@ [j]) count++; } if(count==@@ lsub@@ ) { heihei@@ =1; for(k=0;k<@@ lreplace@@ ;k@@ ++,@@ n++) { out@@ [n@@ ]=@@ replacement@@ [k]; } i@@ =i+@@ lsub@@ -1;@@ n--; } else out@@ [n@@ ]=@@ string@@ [i]; } out@@ [l@@ +@@ lreplace@@ -@@ lsub@@ ]='\0'; printf("%s\n",@@ out@@ ); getchar(); getchar(); return0; }  
c -1
h -1
0

intmain() { intn,k,@@ shu@@ [1000],@@ m; cin>>n>>k; cout<<endl; for(inti=1;i<@@ n;i++) cin>>@@ shu@@ [i]; for(inti=1;i<@@ n;i++) for(intj=i+1@@ ;j<=@@ n;j++) { m=@@ shu@@ [i]+@@ shu@@ [j]; if(m==@@ k) { cout<<"yes"; j=@@ n+1; i=@@ n+1; } elseif(i==@@ n-1@@ &&j@@ ==@@ n) cout<<"no"; } return0; }  
c -1
h -1
struct@@ st { chars[@@ 11]; intn; struct@@ st@@ *next; }; struct@@ st@@ *creat@@ (intm) { struct@@ st@@ *head,*p1,*p2; inti; for(i=0;i<m;i++) { p1=(struct@@ st@@ *)malloc(len); if(i==0)@@ head=p1; elsep2->next=p1; scanf("%s%d",p1->@@ s@@ ,&p1->@@ n); p2=p1; } p2->next=NULL; return(head); } void@@ line@@ (struct@@ st@@ *head@@ ,int@@ m) { struct@@ st@@ *p,*@@ p1,*p2; p=head; inti,j,t; for(i=0;i<m;i++) { p1=@@ p; p2=p1->next; for(j=1;j<@@ m;j++) { char@@ ss@@ [11@@ ]={'\0'}; if(p1->@@ n@@ >=60) { if(@@ p2->@@ n@@ >@@ p1->@@ n) { strcpy(@@ ss@@ ,@@ p1->@@ s); strcpy(@@ p1->@@ s,@@ p2->@@ s); strcpy(@@ p2->@@ s,@@ ss@@ ); t=@@ p1->@@ n; p1->@@ n=@@ p2->@@ n; p2->@@ n=@@ t; } } else { if(@@ p2->@@ n@@ >=60) { strcpy(@@ ss@@ ,@@ p1->@@ s); strcpy(@@ p1->@@ s,@@ p2->@@ s); strcpy(@@ p2->@@ s,@@ ss@@ ); t=@@ p1->@@ n; p1->@@ n=@@ p2->@@ n; p2->@@ n=@@ t; } } p1=p1->next; p2=p2->next; } } for(i=0;i<m;i++) { printf("%s\n",p->@@ s); p=p->next; } } voidmain() { struct@@ st@@ *p; void@@ line@@ (struct@@ st@@ *head@@ ,int@@ m); struct@@ st@@ *creat@@ (int@@ m); intm,@@ i,j; scanf("%d",&m); p=@@ creat@@ (m); line@@ (p,@@ m); }  
c -1
h -1
0

intmain(){ intsz[@@ LEN@@ ][@@ LEN@@ ]; intj,@@ n,k,@@ i,@@ m,@@ l,@@ sum; scanf("%d",&k); for(l=0;l<@@ k;@@ l@@ ++@@ ){@@ sum=0; scanf("%d%d",&m,&n); for(i=0;i<m;i++){ for(j=0;j<n;j++){ scanf("%d",@@ (@@ &@@ sz@@ [i][j]@@ )@@ );}} i=0; for(j=0;j<n@@ ;j++){@@ sum+=@@ sz[0]@@ [j]@@ ;} i=@@ m-1@@ ; for(j=0;j<n@@ ;j++){@@ sum+=@@ sz[m@@ -1]@@ [j]@@ ;} j=0; for(i=1;i<@@ m-1@@ ;i++){@@ sum+=@@ sz[i]@@ [0]@@ ;} j=@@ n-1; for(i=1;i<@@ m-1@@ ;i++){@@ sum+=@@ sz[i]@@ [n-1@@ ];} printf("%d\n",sum@@ );} return0;}  
c -1
h -1
struct@@ mouse { charid[10]; intage; struct@@ mouse@@ *next; }; struct@@ mouse@@ *creat@@ (intn) { struct@@ mouse@@ *head,*p1,*p2; inti; for(i=0;i<n;i++) { if(i@@ ==1)head=p1; if(i@@ >1@@ )@@ p2->next=p1; p2=p1; p1=(struct@@ mouse@@ *)malloc(sizeof(struct@@ mouse@@ )); scanf("%s%d",@@ p1->id,&p1->age); } p2->next@@ =p1;@@ p1->next=NULL; return(head); } struct@@ mouse@@ *@@ order@@ (struct@@ mouse@@ *head@@ ,intn) { struct@@ mouse@@ *p1,*p2; inti,j,@@ x; chara[@@ 10]; for(i=1;i<n;i++) { p2=@@ head;@@ p1=@@ p2->next; for(j=0;j<n-i;j++) { if(@@ p2->age@@ <@@ p1->age@@ &&@@ p1->age@@ >=60) { x=@@ p2->age@@ ;@@ p2->age@@ =p1->@@ age@@ ;@@ p1->age@@ =@@ x; strcpy(@@ a,@@ p2->@@ id@@ );strcpy(@@ p2->@@ id,@@ p1->id@@ );strcpy(@@ p1->@@ id,@@ a); } p2@@ =p1;@@ p1=p1->next; } } return(head); } main() { struct@@ mouse@@ *head,*p; inti,n; scanf("%d",&n); head=creat(n); head=@@ order@@ (head,@@ n); p=head; for(i=0;i<n;i++) { printf("%s\n",p->id); p=p->next; } }  
c -1
h -1
0

intmain() { double@@ m,n; intlen1,len2,@@ count=0,@@ i; chars1@@ [100],@@ s2@@ [100]; scanf("%lf",&@@ m); scanf("%s",@@ s1); scanf("%s",@@ s2); len1=strlen(@@ s1); len2=strlen(@@ s2); if(len1@@ ==@@ len2) { for(i=0;i<len1;i++) { if(s1@@ [i]!='A'&&@@ s1@@ [i]!='T'&&@@ s1@@ [i]!='C'&&@@ s1@@ [i]!='G@@ '||@@ s2@@ [i]!='A'&&@@ s2@@ [i]!='T'&&@@ s2@@ [i]!='C'&&@@ s2@@ [i]!='G') { count=@@ len1@@ +1; break; } if(s1[i]==s2@@ [i]) count++; } n@@ =1.0*@@ count@@ /@@ len1; if(count@@ >=@@ len1@@ +1) printf("error\n"); if(n@@ >@@ m@@ &&n@@ <=@@ 1) printf("yes\n"); elseif(n@@ <=@@ m) printf("no\n"); } else printf("error\n"); return0; }  
c -1
h -1
intmain() { structstudent {int@@ ID; int@@ YW@@ ; int@@ SX@@ ; }; structstudentstu[100000]; int@@ ZF@@ [100000]; intn; scanf("%d",&n); for(inti=0;i<n;i++) { scanf("%d",&@@ stu[i].@@ ID); scanf("%d",&@@ stu[i].@@ YW@@ ); scanf("%d",&@@ stu[i].@@ SX@@ ); ZF@@ [i]=@@ stu[i].@@ YW@@ +stu[i].@@ SX@@ ; } int@@ a=0,b=0,@@ c=0,@@ A@@ =0,@@ B@@ =0,@@ C@@ =0; for(inti=0;i<n;i++) { if(@@ ZF@@ [i]>@@ a) { c=@@ b@@ ;@@ C@@ =@@ B@@ ;@@ b=@@ a;@@ B@@ =@@ A@@ ;@@ a=@@ ZF@@ [i];@@ A@@ =i;} elseif(@@ ZF@@ [i]>@@ b) {@@ c=@@ b@@ ;@@ C@@ =@@ B@@ ;@@ b=@@ ZF@@ [i];@@ B@@ =i;} elseif(@@ ZF@@ [i]>@@ c) {@@ c=@@ ZF@@ [i];@@ C@@ =i;} } printf("%d%d\n",stu[@@ A@@ ].ID,@@ a); printf("%d%d\n",stu[@@ B@@ ].ID,@@ b); printf("%d%d\n",stu[@@ C@@ ].ID,@@ c); getchar(); getchar(); }  
c -1
h -1
0

struct@@ data { int@@ no; char@@ au@@ [10]; }; voidmain() { structdata@@ lib@@ [1000]; char@@ x; intn,i,j,@@ num[@@ 26]={0},@@ l@@ [1000],@@ k,@@ max; scanf("%d",&n); for(i=0;i<n;i++) { scanf("%d",&@@ lib@@ [i].@@ no@@ ); scanf("%s",@@ lib@@ [i].@@ au); l@@ [i]@@ =strlen(@@ lib@@ [i].@@ au); } for(i=0;i<n;i++) { for(j=0;j<l@@ [i];j++) { num[@@ lib@@ [i].@@ au@@ [j]-65@@ ]=@@ num[@@ lib@@ [i].@@ au@@ [j]-65@@ ]+1; } } max=@@ num[@@ 0]; for(i=0;i<26;i++) { if(num@@ [i]>max) { max=@@ num[i]; k=i; } } printf("%c\n",@@ k@@ +65); printf("%d\n",max); x=@@ k@@ +65; for(i=0;i<n;i++) { for(j=0;j<l@@ [i];j++) { if(@@ lib@@ [i].@@ au@@ [j]==@@ x) printf("%d\n",@@ lib@@ [i].@@ no@@ ); } } }  
c -1
h -1
intmain() {@@ chars1@@ [@@ MAX@@ +1],@@ s2[@@ MAX@@ +1]; double@@ w,@@ m; int@@ l1,l2@@ ; inti,j; int@@ c=0; scanf("%lf",&@@ w); scanf("%s",@@ s1); scanf("%s",@@ s2); l1=strlen(@@ s1); l2=strlen(@@ s2); if(l1!=l2@@ ) {@@ printf("error");} else {@@ for(i=0;@@ s1@@ [i]@@ ;i++) {if(@@ !@@ (@@ s1@@ [i]=='A'||@@ s1@@ [i]=='T'||@@ s1@@ [i]=='C'||@@ s1@@ [i]=='G'||@@ s2@@ [i]=='A'||@@ s2@@ [i]=='T'||@@ s2@@ [i]=='C'||@@ s2@@ [i]=='@@ G')) {@@ printf("error"); break;}} if(i==@@ l1@@ ) { for(j=0;@@ s1@@ [j]@@ ;j++) {if(@@ s1@@ [j]==@@ s2@@ [j]) {@@ c@@ ++;} } m@@ =(double)@@ c@@ /@@ l1; if(m@@ >@@ w@@ ) {@@ printf("yes");} else {@@ printf("no");} } } return0; }  
c -1
h -1
0

intmain() { inta[@@ 20000],@@ k,@@ j,@@ b,@@ c,d,@@ e,f,@@ i; scanf("%d",&b); for(i=0;i<b;i++) {@@ scanf("%d",&a[i]);} printf("%d",a[0]); for(j=1;j<@@ b;j++) {@@ for(k=0;k<j@@ ;k++) {if(@@ a[k]==@@ a[j])@@ break;} if(k==@@ j)@@ printf("%d",@@ a[j]@@ );} return0; }  
c -1
h -1
intmain() { intn,i,j,@@ a,b,c,d,@@ e=0,@@ p,q,@@ s,@@ t,@@ sum; scanf("%d",&n); for(i=1;i<=n;i++) {@@ for(j=1;j<=n;j++) {@@ scanf("%d",&a); if(a==0) break; } if(j@@ <n) break;} for(p=@@ j@@ +1@@ ;p@@ <=n;@@ p++) {scanf("%d",&@@ b); if(b==@@ 255) break; } q=@@ p@@ +1; while(@@ q@@ <=@@ n) {scanf("%d",&@@ c); q++; } for(@@ s@@ =i+1@@ ;s@@ <=n;@@ s++) {@@ for(t@@ =1;t@@ <=n;@@ t++) {scanf("%d",&@@ d); if(d@@ ==0) {@@ e=@@ e@@ +1;@@ }}} sum=(@@ e@@ -@@ (p@@ -j@@ ))@@ /2@@ *(p@@ -j@@ -2); printf("%d\n",sum); return0; }  
c -1
h -1
0

intmain() { inta[@@ 50@@ ][@@ 16@@ ],b[@@ 50@@ ],c[@@ 50@@ ],i,j,@@ m,n,@@ o@@ ,@@ line@@ ,@@ num=0; for(i=0;i<=@@ 49@@ ;i++) { for(j=0;j<=@@ 15@@ ;j++) { scanf("%d",&a[i][j]); if(a[i][j]@@ ==0||@@ a[i]@@ [j]==@@ -1) { b[i]@@ =j@@ -1; c[i]@@ =0; break; } } if(a[i]@@ [0]@@ ==-1) break; line@@ =i; } for(m=0;m@@ <=@@ line@@ ;m++) { for(n=0;n@@ <=@@ b[m@@ ];@@ n++) { for(@@ o@@ =0;@@ o@@ <=@@ b[m@@ ];@@ o@@ ++) { if(a[m@@ ][n@@ ]==2*@@ a[m@@ ][@@ o@@ ]) c[m@@ ]=@@ c[m@@ ]+1; } } printf("%d\n",@@ c[m@@ ]); } return0; }  
c -1
h -1
intmain() { inti,j,n,@@ a,b,c,d,@@ sz[@@ 1000][1000],@@ s; scanf("%d",&n); for(i=0;i<n;i++){ for(j=0;j<n;j++){ scanf("%d",&sz[i][j]); } } for(i=0;i<n-1;i++){ for(j=0;j<n-1@@ ;j++){ if(sz@@ [i][j]==0&&@@ sz[i]@@ [j+1]@@ ==0&&@@ sz@@ [i+1][j]@@ ==0){ a=i; b=j; } } } for(i=0;i<n;i++){ for(j=0;j<n;j++){ if(sz@@ [i][j]==0&&@@ sz[i]@@ [j-1]@@ ==0&&@@ sz@@ [i-1][j]@@ ==0){ c=i; d=j; } } } s=(@@ c-a-1)*(d-b-1); printf("%d",s); return0; }  
c -1
h -1
0

intmain() { intn; cin>>n; while(n--) { inti,j,@@ a,b,@@ x@@ [100][100],@@ sum=0; cin>>a>>@@ b; for(i=0;i<a;i++) for(j=0;j<@@ b;j++) { cin>>x@@ [i][j]; } for(i=0;i<b;i++) { sum=sum+@@ x@@ [0]@@ [i]+@@ x@@ [a@@ -1]@@ [i]; } for(i=1;i<@@ a@@ -1;i++) { sum=sum+@@ x[i]@@ [0]+@@ x[i]@@ [b@@ -1]; } cout<<sum<<endl; } return0; }  
c -1
h -1
intmain() { inta,b,c,@@ i,@@ n=0; scanf("%d%d%d",&a,&b,&c); intm@@ [11@@ ]={31,@@ 0@@ ,31,30,31,30,31@@ ,31,30,31,30@@ }; if(a%@@ 4==0&&a%100!=0@@ ||a%@@ 100==0&&@@ a%@@ 400==0) m@@ [1]=@@ 29; else m@@ [1]=@@ 28; if(b==1) n=@@ c; else { for(i=0;i<b@@ -1;i++) n=n+@@ m[i]; n=@@ n@@ +c; } printf("%d\n",n); return0; }  
c -1
h -1
0

const@@ int@@ mov@@ [4@@ ][2@@ ]={@@ {@@ -1,@@ 0},{@@ 0,@@ -1@@ },@@ {@@ 1,@@ 0},{@@ 0,@@ 1@@ }@@ }; intm,n,@@ counter@@ ; void@@ dfs@@ (intm,int@@ i){ if(m@@ ==1){ ++@@ counter@@ ; return; } for(@@ ;i<=@@ m;@@ ++@@ i){ if(m@@ %i==0){ dfs@@ (m@@ /i,i); } } } intmain(){ intt,@@ m,n; cin>>t; while(t@@ --){ counter@@ =0; cin>>m; dfs@@ (m,@@ 2); cout<<@@ counter@@ <<endl; } }  
c -1
h -1
intmain() { intn,a[@@ 20001@@ ],i,j,@@ b=0; cin>>n; for(i=1;i<=n;i++) cin>>a[i]; cout<<@@ a[1]; for(i=2;i<=n;i++) { for(@@ b=0,@@ j@@ =1@@ ;j<@@ i;j++) { if(a[i]!=@@ a[j]) b=b@@ +1; } if(b==@@ i@@ -1) cout<<""<<a[i]; } return0; }  
c -1
h -1
0

int@@ factor@@ (int@@ N@@ ,int@@ min) { int@@ result@@ =1,i; if(N@@ <@@ min) { return0; } for(i=min@@ ;i<@@ N;i++) { if(N@@ %i==0) { result+=@@ factor@@ (@@ N@@ /i,i); } } returnresult; } main() { intn=0,@@ i=0,@@ x=0,@@ y=0; scanf("%d",&n); for(i=0;i<n;i++) { scanf("%d",&x); y=@@ factor@@ (x,@@ 2); printf("%d\n",@@ y); } return0; }  
c -1
h -1
int@@ divide@@ (intn,int@@ j) { intsum@@ =1,@@ i,@@ s,@@ p,@@ k; s=@@ sqrt(@@ n); for(i=j@@ ;i<=@@ s;i++) { if(n%i==0) { p=@@ n/@@ i; k=i; sum=sum+@@ divide@@ (p,@@ i); } } returnsum; } intmain() { intn; cin>>n; intk,@@ m,@@ p; for(k=0;k<n;k++) { cin>>m; p=@@ divide@@ (m,@@ 2); cout<<@@ p@@ <<endl; } return0; }  
c -1
h -1
1


voidshuru@@ (inta[],intb[@@ ]); voidpaixu@@ (inta[@@ ]); voidhebing@@ (inta[],intb[@@ ]); voidshuchu@@ (inta[@@ ]); voidmain() { inta[100@@ ]={0},@@ b[100@@ ]={0}; shuru@@ (a,b); paixu@@ (a@@ );@@ paixu(@@ b); hebing@@ (a,b); shuchu@@ (a); } voidshuru@@ (inta[],intb[]) { intm,n,@@ i; scanf("%d%d",&m,&n); for(i=0;i<m;i++) scanf("%d",&a[i]); for(i=0;i<n;i++) scanf("%d",&b[i]); } voidpaixu@@ (inta[@@ ]) { inti,j,@@ temp,@@ len@@ =0; for(i=0;a[i]@@ !=0;i++) len@@ ++; for(j=1;j<@@ len@@ ;j++) { for(i=0;i<len@@ -j;i++) { if(a[i]>a[i+1]) { temp=a[i]; a[i]=a[i+1]; a[i+1]=@@ temp; } } } } voidhebing@@ (inta[],intb[]) { inti,@@ lena@@ =0,@@ lenb@@ =0; for(i=0;a[i]@@ !=0;i++) lena@@ ++; for(i=0;@@ b[i]@@ !=0;i++) lenb@@ ++; for(i=0;i<@@ lenb@@ ;i++) a[i@@ +@@ lena@@ ]=b[i]; } voidshuchu@@ (inta[@@ ]) { inti; printf("%d",a[0]); for(i=1;@@ a[i]@@ !=0;i++) printf("%d",a[i]); }  
c -1
h -1
intmain(){ intn,i,j,@@ num=0,@@ x1@@ =@@ 1000@@ ,@@ y1@@ =@@ 1000@@ ,@@ x2@@ =0,@@ y2@@ =0; cin>>n; const@@ intN@@ =@@ n; inta[@@ N@@ ][@@ N]; for(i=0;i<n@@ ;++@@ i){ for(j=0;j<@@ n;++@@ j){ cin>>a[i][j]; } } for(i=0;i<n@@ ;++@@ i){ for(j=0;j<@@ n;++@@ j){ if(a[i][j]@@ ==0){ if(i<@@ x1@@ )@@ x1=i; if(j<@@ y1@@ )@@ y1=j; if(i>@@ x2@@ )@@ x2=i; if(j@@ >@@ y2@@ )@@ y2=j; } } } num@@ =(@@ x2-x1-1)*(y2-y1-1); cout<<@@ num; return0; }  
c -1
h -1
0

intmain() { inta[100][100@@ ]={0},@@ row,col,@@ i,j; cin>>row>>col; for(i=0;i<row;i++) for(j=0;j<col;j++) cin>>a[i][j]; for(i=0;i<@@ row+col@@ -1;i++) { for(j=0;j<row@@ ;j++) { if(i@@ -j@@ >=@@ col@@ ||@@ i@@ -j@@ <0@@ )continue; cout<<*(*(a@@ +j)@@ +i-j@@ )<<endl; } } return0; }  
c -1
h -1
intmain() { intyear,month,day; int@@ monthday@@ [12]={31,28,31,30,31,30,31,31,30,31,30,31}; scanf("%d%d%d",&@@ year,@@ &@@ month,@@ &@@ day); inti; intsum=0; for(i=1;i<month;i++) { sum=sum+@@ monthday@@ [i-1]; } sum=sum+day; inta; a=@@ year%@@ 4@@ ; if(month@@ >2@@ &&(@@ a@@ ==0&&@@ year%100!=0@@ ||@@ year%400==0)) { sum=sum+1; } printf("%d",sum); return0; }  
c -1
h -1
0

int@@ function@@ (intn,int@@ a) { int@@ kind@@ =0; inti; if(n==1) return1; for(i=a@@ ;i<=n;i++) { if(n%i==0) { if(n@@ /i@@ <i@@ &&i!=@@ n); else { kind@@ =@@ kind@@ +@@ function@@ (n/i,i); } } } return@@ kind@@ ; } intmain() { intm,n,@@ i,@@ sum; cin>>m; for(i=1;i<=m;i++) { cin>>n; sum=@@ function@@ (n,@@ 2); cout<<sum<<endl; } return0; }  
c -1
h -1
intmain() { intn,i,j,@@ l,@@ k; cin>>n; inta[@@ 20001]; for(i=0;i<n;i++) cin>>a[i]; for(i=0;i<n;i++) { for(j=i+1;j<n;j++) { if(a[i]==a[j]) { for(k=j@@ ;k<@@ n-1;k++) a[k]=a[k@@ +1]; n=@@ n-1; j=j-1; } } } for(l=0;l<n;l++) cout<<@@ a[l@@ ]@@ <<@@ setw@@ (@@ 3@@ ); return0; }  
c -1
h -1
0

intmain() { chara[@@ 999@@ ],b[@@ 999@@ ],*@@ aa@@ ,*@@ bb@@ ; charc[@@ 999@@ ][@@ 999@@ ],*@@ cc@@ ; char@@ d[@@ 999]; gets(b); gets(a); gets(@@ d); int@@ len@@ =strlen(a); int@@ len2@@ =strlen(b); intk=0,@@ i,j@@ =0; for(@@ bb@@ =@@ b@@ ;@@ *(@@ bb@@ +@@ len@@ -1)@@ !='\0'@@ ;@@ bb@@ ++@@ ,k++) { i=0; for(@@ cc@@ =@@ c@@ [k]@@ ;i<@@ len@@ ;i++,@@ cc@@ ++) { *@@ cc@@ =*(@@ bb@@ +i); } *@@ cc@@ ='\0'; j++; } int@@ sp@@ =0; for(i=0;i<j;i++) { if(@@ strcmp@@ (a,@@ c[i]@@ )@@ ==0) { sp@@ =1; break; } } char@@ e@@ [2][@@ 999]; int@@ pom@@ =i; for(i=0;i<@@ pom@@ ;i++) { e@@ [0]@@ [i]=@@ b[i]; e@@ [0][@@ pom@@ ]='\0'; } k=0; for(i=@@ pom@@ +@@ len@@ ;i<@@ len2@@ ;i++@@ ,k++) { e@@ [1@@ ][k@@ ]=b[i]; } e@@ [1@@ ][k@@ ]='\0'; if(@@ sp@@ ==1) { printf("%s@@ %s%s",@@ e@@ [0],@@ d,@@ e@@ [1]); } if(@@ sp@@ ==0) { puts(@@ b); } return0; }  
c -1
h -1
voidmain() { intn,i,j,k; structpatient { charid[10]; intage; }@@ pa@@ [1000],@@ t; scanf("%d",&n); for(i=0;i<n;i++) { scanf("%s%d",@@ pa@@ [i].id,&@@ pa@@ [i].age); } for(i=0;i<n;i++) { for(j=n-1;j>=0;j--) if(pa@@ [j].age@@ >@@ pa@@ [j-1@@ ].age@@ &&@@ pa@@ [j].age@@ >=60) { t=@@ pa@@ [j]; pa@@ [j]=@@ pa@@ [j-1]; pa@@ [j-1]=@@ t; } } for(i=0;i<n;i++) { if(pa@@ [i].age>=60) { printf("%s\n",@@ pa@@ [i].id); } } for(i=0;i<n;i++) { if(pa@@ [i].age<60) { printf("%s\n",@@ pa@@ [i].id); } } }  
c -1
h -1
0

intmain(){ intn,k,i,j,@@ a[@@ 9999@@ ],@@ h,@@ m=0,@@ o@@ =0; scanf("%d%d",&n,&k); for(i=0;i<n;i++){ scanf("%d",&a[i]); } for(i=0;i<n-1;i++){ for(j=0;j<n-1@@ ;j++){ h=@@ a[i]+a[j]; m++; if(h@@ ==@@ k){@@ o@@ ++;} } } if(@@ o@@ ==0){@@ printf("no@@ ");@@ }else{@@ printf("yes");} return0; }  
c -1
h -1
intmain() { intyear,month,@@ monthd@@ [@@ 12]={31,@@ 28,31,30,31,30,31,31,30,31,30,31@@ },@@ day,@@ di@@ =0,@@ i; scanf("%d%d%d",&year,&month,&day); for(i=1;i<month;i++) { di@@ =@@ di@@ +@@ monthd@@ [i-1]; } di@@ =@@ di@@ +day; if((@@ year%@@ 4)@@ !=0@@ ||(@@ year%@@ 400@@ )@@ !=0) { printf("%d\n",@@ di@@ ); } else printf("%d",@@ di@@ +1); return0; }  
c -1
h -1
0

intmain(intargc,char*argv[]) { intn; intp; int@@ q; inti,j,k; scanf("%d@@ "@@ ,&@@ n); for(i=0;i<n;i++) { intsum=0; intnum; scanf("%d@@ "@@ ,&@@ p); scanf("%d@@ "@@ ,&@@ q); if(p@@ ==1&&@@ q@@ ==1) { scanf("%d@@ "@@ ,&@@ num); printf("%d@@ "@@ ,@@ num); break; } for(j=0;j<@@ q@@ ;j++) { scanf("%d@@ "@@ ,&@@ num); sum+=@@ num; } for(j=1;j<@@ p@@ -1;j++) { for(k=0;k<@@ q@@ ;k++) { scanf("%d@@ "@@ ,&@@ num); if(k@@ ==0||@@ k==@@ q@@ -1) { sum+=@@ num; } } } for(j=0;j<@@ q@@ ;j++) { scanf("%d@@ "@@ ,&@@ num); sum+=@@ num; } printf("%d@@ \n@@ "@@ ,@@ sum); } return0; }  
c -1
h -1
intmain(intargc,char*argv[]) { inti,@@ a[@@ 16],@@ s=0,@@ j@@ ;@@ scanf("%d",&a[0]); while(@@ a[0]@@ !=-1) { for(i=1;i<=@@ 15;i++) {@@ scanf("%d",&a[i]); if(a[i]==0)break; for(j=0;j<=i;j++) if(a[j]==2*@@ a[i]@@ ||@@ a[j]@@ ==0@@ .@@ 5@@ *@@ a[i])@@ s@@ +=1; }@@ printf("%d\n",s); s=0; scanf("%d",&a[0]); } return0; }  
c -1
h -1
0

inta[@@ 999]; voidmain() { intn,k,@@ i,j; scanf("%d%d",&n,&k); for(i=0;i<=n-1;i++) {@@ scanf("%d",&a[i]);} int@@ b=0; for(i=0;i<=@@ n-2;i++) for(j=i+1;j<=@@ n-1;j++) { if(a[i]+a[j]==k) { b=b@@ +1; } } if(b@@ >=@@ 1) { printf("yes\n"); } else@@ printf("no\n"); }  
c -1
h -1
intmain() { intn,a[@@ 16],@@ i,@@ t,@@ m,@@ j,k,@@ sum; while(cin>>@@ t) { if(t@@ !=-1) { a[1]=@@ t; i=1; while(cin>>@@ m) { if(m@@ !=0) { i=i+1; a[i]=@@ m; } elsebreak; } sum=0; for(j=1;j<=@@ i;j++) for(k=1;k<=@@ i;k++) { if(a[k@@ ]==2*@@ a[j]||@@ a[k]@@ ==0@@ .@@ 5@@ *@@ a[j]) sum=sum+1; } cout<<sum@@ /2@@ <<endl; } else{@@ cout<<@@ endl@@ ;break;} } return0; }  
c -1
h -1
0

intfenjie@@ (inta,intb) { inti,@@ sign@@ =0,@@ k=0; if(a@@ <b@@ )return0; elseif(a@@ ==@@ b)@@ return1; else { for(i=2;i<=@@ a@@ -1;i++) { if(a%i==0) sign@@ =1; } if(@@ sign@@ !=1@@ )@@ return1; else { for(i=b@@ ;i<=a;i++) { if(a%i==0) k@@ +=@@ fenjie@@ (a/i,i); } k@@ +=1; return@@ k; } } } intmain() { intn,@@ a[100],@@ i,@@ k; scanf("%d",&n); for(i=1;i<=n;i++) { scanf("%d",&k); printf("%d\n",@@ fenjie@@ (@@ k,@@ 2)); } return0; }  
c -1
h -1
intmain(){ char@@ tmp@@ [100]; intn,i,j=0,@@ o@@ =0,@@ tmpn@@ ; struct{ char@@ num@@ [100]; inta,@@ k; }@@ s[@@ 1000],@@ t@@ [1000]; scanf("%d",&n); for(i=0;i<n;i++){ scanf("%s%d",@@ s[i].@@ num,&@@ s[i].@@ a); if(s@@ [i].@@ a@@ >=60@@ )@@ s[i].@@ k=1; else@@ s[i].@@ k=0; } for(i=0;i<n;i++){ if(s@@ [i].@@ k@@ ==1){ strcpy(@@ t@@ [j].@@ num,@@ s[i].@@ num); t@@ [j].@@ a=@@ s[i].@@ a; j++; o@@ ++; } } for(i=n-1@@ ;i>0@@ ;i--){ for(j=0;j<i;j++){ if(t@@ [j].@@ a@@ <@@ t@@ [j+1].@@ a){ tmpn@@ =@@ t@@ [j].@@ a; t@@ [j].@@ a=@@ t@@ [j+1].@@ a; t@@ [j+1].@@ a=@@ tmpn@@ ; strcpy(@@ tmp@@ ,@@ t@@ [j].@@ num); strcpy(@@ t@@ [j].@@ num,@@ t@@ [j+1].@@ num); strcpy(@@ t@@ [j+1].@@ num,@@ tmp@@ ); } } } for(i=0;i<@@ o@@ ;i++)@@ printf("%s\n",@@ t@@ [i].num); for(i=0;i<n;i++){ if(s@@ [i].@@ k@@ ==1)@@ continue; printf("%s\n",@@ s[i].@@ num); } return0; }  
c -1
h -1
0

intmain() { double@@ w; chars1@@ [@@ 600@@ ],@@ s2[@@ 600]; int@@ l1,l2,@@ i,@@ a; a=0; scanf("%lf\n",&@@ w); scanf("%s@@ \n",@@ s1); scanf("%s@@ \n",@@ s2); l1=strlen(@@ s1); l2=strlen(@@ s2); if(l1!=l2@@ ){ printf("error");} else{ for(i=0;i<l1;i++){ if(!@@ (@@ s1@@ [i]=='A'||@@ s1@@ [i]=='T'||@@ s1@@ [i]=='C'||@@ s1@@ [i]=='@@ G')){ printf("error"); return0@@ ;}} for(i=0;i<l1;i++){ if(!@@ (@@ s2@@ [i]=='A'||@@ s2@@ [i]=='T'||@@ s2@@ [i]=='C'||@@ s2@@ [i]=='@@ G')){ printf("error"); return0@@ ;}} for(i=0;i<l1;i++){ if(s1[i]==s2@@ [i]){ a@@ ++;} } if((@@ 1.0*@@ a)@@ /@@ l1@@ >@@ w@@ ){ printf("yes");} else{ printf("no@@ ");@@ }} return0; }  
c -1
h -1
intf(inta,int@@ array@@ [],int@@ K@@ ) { inti,@@ max=0,@@ j; if(a==@@ K@@ -1)@@ return1; else { for(j=@@ K@@ -1@@ ;j>@@ a@@ ;j--) { if(array@@ [j]<=@@ array@@ [a@@ ]) { if(@@ f(@@ j,@@ array@@ ,@@ K@@ )@@ >max)max=@@ f(@@ j,@@ array@@ ,@@ K@@ ); } } return@@ max+1; } } intmain() { int@@ K@@ ,@@ k,@@ A@@ [25],@@ n,@@ max@@ =1,i; scanf("%d",&@@ K@@ ); for(k=0;k<=@@ K@@ -1;k++) { scanf("%d",&@@ A@@ [k]); } for(i=0;i<=@@ K@@ -1;i++) { if(@@ f(@@ i,@@ A@@ ,@@ K@@ )@@ >max)max=@@ f(@@ i,@@ A@@ ,@@ K@@ ); } printf("%d",max); }  
c -1
h -1
0

intmain(){ intn,k; scanf("%d%d",&n,&k); intsz[1000]; inti; for(i=0;i<n;i++){ scanf("%d",&sz[i]); } intj,@@ e,@@ a; for(j=1;j<@@ n;j++){ for(i=0;i<n@@ -j@@ ;i++){ if(sz[i]@@ >@@ sz@@ [i+1@@ ]){ e=@@ sz[i]; sz@@ [i]=@@ sz@@ [i+1]; sz@@ [i+1]=@@ e; } } } a=0; if(sz[@@ n-1@@ ]+sz[@@ n-2@@ ]<@@ k){ printf("no"); }else{ if(sz@@ [0]+@@ sz@@ [1]@@ >@@ k){ printf("no"); }else{ for(i=0;i<n-1;i++){ for(j=i+1;j<n;j++){ if(sz[i]+sz@@ [j]==k){ printf("yes"); a=1; break; } } if(a@@ ==1){ break; } } if(a@@ ==0){ printf("no"); } } } return0; }  
c -1
h -1
ints@@ (int@@ m); int@@ p@@ (intm,@@ inti,@@ inta[100@@ ]); void@@ e@@ (inti,int@@ c@@ [100],int@@ d@@ [100],int@@ m,int@@ n); intmain() { inti,@@ m,n,@@ a[100],b[100],@@ c[100],@@ d@@ [100]; scanf("%d%d",&m,&n); for(i=0;i<m;i++)@@ a[i]=@@ s@@ (i); for(i=0;i<n;i++)@@ b[i]=@@ s@@ (i); for(i=0;i<m;i++)@@ c[i]=@@ p@@ (m,@@ i,@@ a); for(i=0;i<n;i++)@@ d[i]=@@ p@@ (n,@@ i,@@ b); for(i=0;i<m+@@ n;i++)@@ e@@ (i,@@ c,d,@@ m,n); return0; } ints@@ (intm) { inta[100]; scanf("%d",&@@ a[m@@ ]); return@@ a[m@@ ]; } int@@ p@@ (intm,@@ inti,@@ inta[100@@ ]) { int@@ p,q,@@ n; for(p=0;p@@ <m@@ ;p++) { for(q=0;q@@ <m-1@@ ;q++) { if(a[@@ q@@ ]>@@ a[q@@ +1]) { n=@@ a[q@@ ]; a[q@@ ]=a[@@ q@@ +1]; a[q@@ +1]=@@ n; } } } return@@ a[i]; } void@@ e@@ (inti,int@@ c@@ [100],int@@ d@@ [100],int@@ m,intn) { if(i==0)@@ printf("%d",c@@ [0]); if(i@@ >0@@ &&i@@ <@@ m)@@ printf("%d",c[i]); if(i>=@@ m)@@ printf("%d",d@@ [i-@@ m@@ ]); }  
c -1
h -1
0

intmain() { introw,col; cin>>row>>col; intarray[@@ 101][101]; int(*p)@@ [@@ 101@@ ]=@@ NULL@@ ; p=@@ array@@ ; for(inti=0;i<row;i++) { for(intj=0;j<col;j++) cin>>@@ *(p@@ [i]@@ +j); } for(intk=0;k<@@ row+col@@ -1;k++) { for(inti=0;i<row;i++) { for(intj=0;j<col;j++) { if(i+j@@ ==k) cout<<@@ *(p@@ [i]@@ +j)<<endl; } } } return0; }  
c -1
h -1
voidmain() { inti,j,@@ d,@@ e,f,@@ k; chara[256],b[256],c[256]; gets(a); scanf("\n@@ "); gets(b); scanf("\n@@ "); gets(c); d@@ =strlen(a); e@@ =strlen(b); f@@ =strlen(c); for(i=0;i<d@@ ;i++) { if(@@ b[0]@@ ==@@ a[i]) { k=i; for(j=0;j<@@ e@@ ;j++@@ ,k++) if(b[j]@@ !=@@ a[k]@@ )break; if(j<@@ e@@ )continue; elsebreak; } elsecontinue; } if(i<@@ d) { for(j=i@@ +@@ e@@ ;j<@@ (@@ d@@ -i@@ -@@ e@@ );j++) a[@@ f@@ +j@@ -@@ e@@ ]=@@ a[j]; for(j=i;j<@@ (i@@ +@@ f@@ );j++) a[j]=@@ c@@ [j-i@@ ]; printf("%s\n",@@ a); } else@@ printf("%s\n",@@ a); }  
c -1
h -1
0

intmain() { inta[100][100]; inti,j; introw,col; scanf("%d%d",&row,&col); for(i=1;i<=@@ row;i++) { for(j=1;j<=col;j++) { scanf("%d",&@@ a[i-1]@@ [j-1]); } } intsum; for(@@ sum=@@ 2;@@ sum<=@@ (@@ col@@ +row@@ );@@ sum@@ ++) { if(sum@@ <=col@@ +1) { for(i=1@@ ,j=@@ sum@@ -1@@ ;i<@@ sum@@ &&i@@ <=row@@ &&j@@ <=col@@ ;i++,j--) { printf("%d\n",@@ a[i-1]@@ [j-1]); } } else { for(i=@@ sum@@ -col@@ ,j=@@ sum@@ -i@@ ;i<@@ sum@@ &&i@@ <=row@@ &&j@@ <=col@@ ;i++,j--) { printf("%d\n",@@ a[i-1]@@ [j-1]); } } } return0; }  
c -1
h -1
intmain() { inta[@@ 20000],b[@@ 20000]; intn,i,@@ m,@@ p=0,@@ l; scanf("%d",&n); for(i=0;i<n;i++) scanf("%d",&a[i]); for(i=0;i<n;i++) { for(m=0;m<@@ i@@ ;m++) { if(a[i]==@@ a[m]@@ )break; } if(m==@@ i) { p=p@@ +1; b[p@@ ]=a[i]; } } for(l=1;l@@ <=@@ p@@ ;l++) { if(l@@ ==@@ p@@ )@@ printf("%d",@@ b[l@@ ]); else@@ printf("%d",@@ b[l@@ ]); } return0; }  
c -1
h -1
0

intn,i; intf(inta,int@@ min@@ ){ if(a<@@ min@@ ){ return0; } int@@ result=1; for(inti=@@ min@@ ;i<@@ a;i++){ if(a@@ %i==0){ result+=@@ f(a@@ /i,i); } } returnresult; } intmain(){ cin>>n; inta[n]; for(i=0;i<n;i++){ cin>>a[i]; } for(i=0;i<n;i++){ cout<<@@ f(@@ a[i],@@ 2)<<endl; } return0; }  
c -1
h -1
intmain() { intdays@@ [13]={0,31,28,31,30,31,30,31,31,30,31,30,31}; inta,b,c,@@ d@@ ,j; scanf("%d%d%d",&a,&b,&c); if ((@@ a%@@ 4==0)&&(@@ a%100!=0@@ )||(@@ a%400==0)) days@@ [2@@ ]++; d=@@ c; for(j=1;j<@@ b;j++) d@@ +=@@ days@@ [j]; printf("%d\n",@@ d); if ((@@ a%@@ 4==0)&&(@@ a%100!=0@@ )||(@@ a%400==0)) return0; }  
c -1
h -1
0

main() { inti,j,k,@@ m,n,@@ t=0; int*@@ a,*@@ b; scanf("%d%d",&n,&m); a=@@ (int*)malloc(n*sizeof(int)); b=@@ (int*)malloc(@@ m@@ *sizeof(int)); for(i=0;i<n;i++) scanf("%d",&a[i]); for(i=0;i<m;i++) scanf("%d",&b[i]); for(i=0;i<n;i++) for(j=0;j<n@@ -i-1;j++) if(a[j]>a[j+1]) { t=@@ a[j+1@@ ]; a[j+1]=@@ a[j]; a[j]=@@ t; } printf("%d",a[0]); for(i=1;i<n;i++) printf("%d",a[i]); for(i=0;i<m;i++) for(j=0;j<m@@ -i-1;j++) if(b[j]>b[j+1]) { t=@@ b@@ [j+1]; b[j+1]=@@ b[j]; b[j]=@@ t; } for(i=0;i<m;i++) printf("%d",b[i]); }  
c -1
h -1
int@@ BT@@ (int@@ x,@@ inta[@@ 40000@@ ]) { int@@ b=0,@@ c=0; while(@@ b<@@ 40000@@ ) { if(a[@@ b@@ ]==@@ x) { c=1; break; } else b++; } return@@ c; } main() { intn,a[@@ 40000@@ ],@@ i,@@ b[@@ 40000@@ ],@@ c; scanf("%d",&n); for(i=0;i<n;i++) scanf("%d",&a[i]); for(i=0;i<@@ 10001@@ ;i++) b[i]@@ =-1; for(i=0,@@ c@@ =0;i<n;i++) if(@@ BT@@ (a[i],@@ b)@@ ==0) { if(c@@ ==0) printf("%d",a[i]); else printf("%d",a[i]); b[@@ c@@ ]=a[i]; c++; } getchar(); getchar(); }  
c -1
h -1
0

intmain() { inta,b,c,@@ n; scanf("%d%d%d",&a,&b,&c); if((@@ a%@@ 4)@@ ==0&&@@ a%100!=0@@ ||(@@ a%@@ 400@@ )@@ ==0){ switch(@@ b){ case1: n=@@ c; printf("%d",n); break; case2: n=31+@@ c; printf("%d",n); break; case3: n=31+29@@ +c; printf("%d",n); break; case4: n=31+29@@ +31+@@ c; printf("%d",n); break; case5: n=31+29@@ +31+30@@ +c; printf("%d",n); break; case6: n=31+29@@ +31+30+31+@@ c; printf("%d",n); break; case7: n=31+29@@ +31+30+31+30@@ +c; printf("%d",n); break; case8: n=31+29@@ +31+30+31+30+31+@@ c; printf("%d",n); break; case9: n=31+29@@ +31+30+31+30+31+31+@@ c; printf("%d",n); break; case10: n=31+29@@ +31+30+31+30+31+31+30@@ +c; printf("%d",n); break; case11: n=31+29@@ +31+30+31+30+31+31+30+31+@@ c; printf("%d",n); break; case12: n=31+29@@ +31+30+31+30+31+31+30+31+30@@ +c; printf("%d",n); break; } } else switch(@@ b){ case1: n=@@ c; printf("%d",n); break; case2: n=31+@@ c; printf("%d",n); break; case3: n=31+28@@ +c; printf("%d",n); break; case4: n=31+28@@ +31+@@ c; printf("%d",n); break; case5: n=31+28@@ +31+30@@ +c; printf("%d",n); break; case6: n=31+28@@ +31+30+31+@@ c; printf("%d",n); break; case7: n=31+28@@ +31+30+31+30@@ +c; printf("%d",n); break; case8: n=31+28@@ +31+30+31+30+31+@@ c; printf("%d",n); break; case9: n=31+28@@ +31+30+31+30+31+31+@@ c; printf("%d",n); break; case10: n=31+28@@ +31+30+31+30+31+31+30@@ +c; printf("%d",n); break; case11: n=31+28@@ +31+30+31+30+31+31+30+31+@@ c; printf("%d",n); break; case12: n=31+28@@ +31+30+31+30+31+31+30+31+30@@ +c; printf("%d",n); break; } return0; }  
c -1
h -1
intmain() { intyear,month,day,@@ num; scanf("%d%d%d",&year,&month,&day); if(year%@@ 4==0&&year%100!=0@@ ||@@ year%400==0) { if(month==1) { num=@@ day; printf("%d\n",num); } if(month==2) { num=@@ day+@@ 31; printf("%d\n",num); } if(month==3) { num=@@ day@@ +31+@@ 29; printf("%d\n",num); } if(month==@@ 4) { num=@@ day+31+29@@ +31; printf("%d\n",num); } if(month==@@ 5) { num=@@ day+31+29@@ +31+30@@ ; printf("%d\n",num); } if(month==@@ 6) { num=@@ day+31+29@@ +31+30@@ +31; printf("%d\n",num); } if(month==@@ 7) { num=@@ day+31+29@@ +31+30+31+30@@ ; printf("%d\n",num); } if(month==8) { num=@@ day+31+29@@ +31+30+31+30@@ +31; printf("%d\n",num); } if(month==@@ 9) { num=@@ day+31+29@@ +31+30+31+30+31+@@ 31; printf("%d\n",num); } if(month==@@ 10) { num=@@ day+31+29@@ +31+30+31+30+31+31+30@@ ; printf("%d\n",num); } if(month==@@ 11) { num=@@ day+31+29@@ +31+30+31+30+31+31+30@@ +31; printf("%d\n",num); } if(month==@@ 12) { num=@@ day+31+29@@ +31+30+31+30+31+31+30+31+30@@ ; printf("%d\n",num); } } else { if(month==1) { num=@@ day; printf("%d\n",num); } if(month==2) { num=@@ day+@@ 31; printf("%d\n",num); } if(month==3) { num=@@ day@@ +31+@@ 28; printf("%d\n",num); } if(month==@@ 4) { num=@@ day+31+28@@ +31; printf("%d\n",num); } if(month==@@ 5) { num=@@ day+31+28@@ +31+30@@ ; printf("%d\n",num); } if(month==@@ 6) { num=@@ day+31+28@@ +31+30@@ +31; printf("%d\n",num); } if(month==@@ 7) { num=@@ day+31+28@@ +31+30+31+30@@ ; printf("%d\n",num); } if(month==8) { num=@@ day+31+28@@ +31+30+31+30@@ +31; printf("%d\n",num); } if(month==@@ 9) { num=@@ day+31+28@@ +31+30+31+30+31+@@ 31; printf("%d\n",num); } if(month==@@ 10) { num=@@ day+31+28@@ +31+30+31+30+31+31+30@@ ; printf("%d\n",num); } if(month==@@ 11) { num=@@ day+31+28@@ +31+30+31+30+31+31+30@@ +31; printf("%d\n",num); } if(month==@@ 12) { num=@@ day+31+28@@ +31+30+31+30+31+31+30+31+30@@ ; printf("%d\n",num); } } return0; }  
c -1
h -1
1


structbook { intnum; charwriter@@ [27]; structbook*next; }@@ *@@ head; int@@ times@@ [26]; void@@ create@@ (intm) { structbook*@@ p1,*p2; inti; for(i=0;i<=@@ m-1;i++) { p1=(structbook@@ *)malloc(sizeof(structbook)); scanf("%d",&@@ p1->num); scanf("%s",@@ p1->@@ writer); if(!@@ i)@@ head=p1; elsep2->next=p1; p2=p1; } p2->next=NULL; } intcount@@ () { intmax@@ ,@@ l,@@ i; char@@ temp@@ [27]; structbook*@@ p1; for(i=0;i<=@@ 25@@ ;i++)@@ times@@ [i]=0; p1=head; while(p1!=NULL) { l=strlen(@@ p1->@@ writer); strcpy(@@ temp,@@ p1->@@ writer); for(i=0;i<=@@ l@@ -1;i++) times@@ [@@ temp@@ [i]@@ -65]++; p1=p1->next; } max=0; for(i=0;i<=25;i++) if(@@ times@@ [i]>@@ times@@ [max@@ ])@@ max=i; return(@@ max); } voidprint@@ (int@@ max) { structbook*@@ p1; int@@ abc@@ [@@ 999@@ ],@@ total@@ ,@@ l,@@ i; char@@ temp@@ [27]; total=0; printf("%c\n",@@ max@@ +65); p1=head; while(p1!=NULL) { strcpy(@@ temp,@@ p1->@@ writer); l=strlen(@@ temp); for(i=0;i<=@@ l@@ -1;i++) if(max@@ +65@@ ==@@ temp@@ [i]@@ )break; if(i<@@ l) { abc@@ [@@ total@@ ]=@@ p1->@@ num; total@@ ++; } p1=p1->next; } printf("%d\n",@@ total); for(i=0;i<=@@ total@@ -1;i++) { printf("%d\n",@@ abc@@ [i]); } } voidmain() { intmax@@ ,@@ m; scanf("%d",&m); create@@ (m); max=count@@ (); print(@@ max); }  
c -1
h -1
intmain() { intn,i,@@ m,@@ j,@@ k=0,@@ a,b,@@ c,@@ winnum@@ =0,@@ win@@ =@@ 2,@@ year; char@@ old@@ [@@ 150@@ ][100@@ ]={0},@@ id@@ [100][100@@ ]={0},@@ id0@@ [100]={0},@@ huiche@@ [100]={0}; scanf("%d",&n); for(i=0;i<n;i++) { scanf("%s%d",&@@ id0@@ ,&@@ year@@ ); if(@@ year@@ >=60) { if(old@@ [@@ year@@ ][0]@@ ==0) { strcpy(old@@ [@@ year@@ ],@@ id0@@ ); } else { huiche@@ [0]=@@ 13@@ ; huiche@@ [1]@@ =0; strcat(@@ old@@ [@@ year@@ ],@@ huiche@@ ); strcat(@@ old@@ [@@ year@@ ],@@ id0@@ ); } } else { strcpy(id@@ [i],@@ id0@@ ); } } for(i=@@ 149@@ ;i>=0;i--) { if(old@@ [i][0]@@ !=0) { printf("%s\n",old@@ [i]); } } for(i=0;i<n;i++) { if(@@ id@@ [i]!=0) { printf("%s\n",@@ id[i]); } } return0; }  
c -1
h -1
0

voidmain() { chara[500],b[@@ 500@@ ],c[@@ 10]; doublen; intsum=0; int@@ i,j@@ =0; scanf("%lf",&n); gets(c); gets(a); gets(b); for(i=0;a[i]!='\0';i++) { if((a[i]!='@@ A'&&a[i]!='@@ G'&&a[i]!='@@ C'&&a[i]!='@@ T')||(@@ b[i]!='A'&&b[i]!='@@ G'&&b[i]!='@@ C'&&b[i]!='@@ T')@@ ) { printf("error"); goto@@ end@@ ; } if(a[i]==b[i]) sum++; } if(b[i]@@ !='\0') printf("error"); else { if((@@ double)@@ sum@@ /i@@ >n) printf("yes"); elseprintf("no"); } end@@ :@@ ; }  
c -1
h -1
int@@ days_of_month@@ [2][@@ 12@@ ]={@@ {@@ 31,@@ 28,31,30,31,30,31,31,30,31,30,31@@ }@@ , {@@ 31,@@ 29@@ ,31,30,31,30,31,31,30,31,30,31@@ }@@ }; int@@ is_leap_year@@ (intyear@@ ) { if(@@ year%100!=0@@ &&@@ year%@@ 4@@ ==0||@@ year%400==0) return1; else return0; } intmain() { intyear,month,day; scanf("%d%d%d",&@@ year,@@ &@@ month,@@ &@@ day); int@@ index@@ =@@ is_leap_year@@ (year@@ ); intdays@@ =0; for(inti=0;i<@@ month-1;i++) days@@ +=@@ days_of_month@@ [@@ index@@ ]@@ [i]; days@@ +=@@ day; printf("%d",@@ days@@ ); }  
c -1
h -1
0

void@@ guochen@@ (intarray[],int@@ n) { inta,@@ i,j; for(a=0;a@@ <n;@@ a++) scanf("%d",&array@@ [a@@ ]); for(i=0;i<n-1;i++) { for(j=i+1;j<n;j++) { if(array@@ [j]<@@ array@@ [i]) { intk; k=@@ array@@ [i]; array@@ [i]=@@ array@@ [j]; array@@ [j]=@@ k; } } } } voidshuchu@@ (int@@ one@@ [@@ ],intn,int@@ two@@ [],int@@ m) { inti,j; printf("%d",@@ one@@ [0]); for(i=1;i<n;i++) printf("%d",@@ one@@ [i]); for(j=0;j<m;j++) printf("%d",@@ two@@ [j]); } voidmain() { intn,m,@@ one@@ [100],@@ two@@ [100]; scanf("%d%d",&n,&m); guochen@@ (@@ one@@ ,n); guochen@@ (@@ two@@ ,@@ m); shuchu@@ (@@ one@@ ,@@ n,@@ two@@ ,@@ m); }  
c -1
h -1
intb[@@ 100000]; structstudent {intnum; int@@ score1@@ ; int@@ score2; }a[@@ 100000]; voidmain() {@@ intmax(int@@ b[],int@@ n); inti,j=0,@@ n,@@ c; scanf("%d",&n); for(i=0;i<n;i++) { scanf("%d%d%d",&a[i].@@ num,&@@ a[i].@@ score1@@ ,&a[i].@@ score2); b[i]=@@ a[i].@@ score1@@ +a[i].@@ score2; } while(j<@@ 3) { c=@@ max@@ (b,n); for(i=0;i<n;i++) { if(b[i]==@@ c) { printf("%d%d\n",@@ a[i].@@ num,@@ b[i]); b[i]@@ =0;j@@ =j+1; if(j==@@ 3@@ )break; } } } } intmax(int@@ b[],int@@ n) { int@@ c,@@ i; c=@@ b[0]; for(i=0;i<n;i++) { if(c@@ <@@ b[i]) c=@@ b[i]; } return(@@ c); }  
c -1
h -1
0

intmain() { inta,@@ x,@@ m,n,@@ i,j,k,@@ sum[@@ 10000@@ ]={0}; intsz[100][100]; scanf("%d",&a); for(i=0;i<a;i++) { scanf("%d%d",&m,&n); for(j=0;j<m;j++) {@@ for(k=0;k<n;k++) {@@ scanf("%d",&sz@@ [j]@@ [k]@@ );} } if((@@ m@@ >2@@ )&&(@@ n@@ >2@@ )) {@@ for(j=0;j<m;j++) {@@ sum[i]=sum[i]+@@ sz[j]@@ [0]+@@ sz[j]@@ [n-1@@ ];} for(k=0;k<n;k++) {@@ sum[i]=sum[i]+@@ sz[0][@@ k@@ ]+sz[@@ m-1][@@ k@@ ];} sum[i]=@@ sum[i]@@ -@@ sz[0][@@ 0]-@@ sz[0][@@ n-1]-@@ sz[@@ m-1][0]-@@ sz[@@ m-1][@@ n-1]; } else{@@ for(j=0;j<m;j++) {@@ for(k=0;k<n;k++) {@@ sum[i]=sum[i]+@@ sz[j]@@ [k]@@ ;} } } } for(i=0;i<a;i++) {printf("%d\n",@@ sum[i]@@ );} return0; }  
c -1
h -1
intmain() { inth@@ [25],@@ n,i,j,@@ t,@@ d[@@ 25@@ ]={0},@@ max=0,@@ in@@ ; scanf("%d",&n); for(i=0;i<n;i++) { scanf("%d",&h[i]); } for(i=n-2;i>=0;i--) { for(j=i+1;j<n;j++) { if(h@@ [j]<=@@ h@@ [i]@@ &&@@ d@@ [i]<@@ d@@ [j]@@ +1) d[i]=@@ d@@ [j]+1; } } for(i=0;i<n;i++) { if(d@@ [i]>max) { max=@@ d[i]; } } printf("%d",@@ max@@ +1); }  
c -1
h -1
0

voidmain() { intn,m,@@ i; int@@ *p,*@@ q; q=@@ (int*)@@ calloc@@ (@@ 10001@@ ,@@ sizeof(int@@ )); scanf("%d%d",&n,&m); for(p=@@ q@@ ;p<@@ q@@ +@@ n*@@ m@@ ;p++) { scanf("%d",@@ p); } if(m==1) { for(p=@@ q@@ ;p<@@ q@@ +@@ n*@@ m@@ ;p++) printf("%d\n",@@ *p@@ ); } else { for(i=0;i<m;i++) { for(p=@@ q@@ +i@@ ;@@ (p@@ <=@@ q@@ +i@@ +@@ (m@@ -1)*@@ i@@ )&&(@@ p@@ <@@ q@@ +@@ n*@@ m@@ );@@ p=p@@ +m@@ -1) { printf("%d\n",@@ *p@@ ); } } for(i=2;i<=n;i++) { for(p=@@ q@@ +m@@ *@@ i@@ -1;@@ (p@@ <=@@ q@@ +m@@ *@@ i@@ -1@@ +@@ (m@@ -1)*(@@ m-1)@@ )&&(@@ p@@ <@@ q@@ +@@ n*@@ m@@ );@@ p=p@@ +m@@ -1) { printf("%d\n",@@ *p@@ ); } } } }  
c -1
h -1
intm=0,@@ n=0,@@ i=0; inta[@@ 1000],b[1000]; void@@ duru1@@ () { cin>>m; cin>>n; for(i=0;i<m;i++) { cin>>a[i]; } for(i=0;i<n;i++) { cin>>b[i]; } } voidpaixu@@ (inta[],int@@ geshu@@ ) { int@@ j=0,@@ k=0,@@ t=0; for(j=0;j<@@ geshu@@ -1;j++) { for(k=j+1;k<@@ geshu@@ ;k++) { if(a[k]@@ <@@ a[j]) { t=@@ a[k]; a[k]=@@ a[j]; a[j]=@@ t; } } } } voidshuchu@@ () { for(i=0;i<m;i++) { cout<<a[i]<<""; } for(i=0;i<n-1;i++) { cout<<b[i]<<""; } cout<<b[@@ n-1]; } intmain() { duru1@@ (); paixu@@ (a,m); paixu@@ (b,n); shuchu@@ (); return0; }  
c -1
h -1
0

struct@@ shu { int@@ hao@@ ; char@@ zuo@@ [26]; struct@@ shu@@ *next; }; intmain() { intm,@@ a[@@ 26]={0},@@ i,j,@@ b[@@ 26@@ ][@@ 1000],@@ k,@@ max; struct@@ shu@@ *@@ p1,*p2,*@@ head@@ =NULL@@ ,*p; scanf("%d",&m); p1=p2=(struct@@ shu@@ *)malloc(len); scanf("%d%s",&p1->@@ hao@@ ,@@ p1->@@ zuo@@ ); head=p1; for(i=2;i<=@@ m;i++) { p1=(struct@@ shu@@ *)malloc(len); scanf("%d%s",&p1->@@ hao@@ ,@@ p1->@@ zuo@@ ); p2->next=p1; p2=p1; } p2->next=NULL; for(i=0,@@ max@@ =0;i<=@@ 25;i++) { for(p=head@@ ,k@@ =1@@ ;p!=NULL;p=p->next) { for(j=0;j<=@@ 25@@ ;j++) if(p->@@ zuo@@ [j]=='@@ A'+@@ i) { a[i]@@ ++; b[i]@@ [k]=@@ p->@@ hao@@ ; k++; } } if(a[i]>max) max=a[i]; } for(i=0;i<=25;i++) { if(a[i]==@@ max) { printf("%c\n%d\n",@@ 'A'+@@ i,@@ max); for(k=1;k<=@@ max@@ ;k++) printf("%d\n",@@ b[i]@@ [k]); break; } } return0; }  
c -1
h -1
charname@@ [26@@ ]={'A','B','C','D','E','F','G','H','I','J','K','L','M','N','O','P','@@ Q','R','S','T','U','V','W','X','Y','@@ Z'}; intmain() { intn,@@ t,@@ i,j; intcount@@ [26],@@ max=0; for(i=0;i<26@@ ;i++)@@ count@@ [i]=0; structbook { intnum; char@@ man@@ [26]; }@@ book[999]; scanf("%d",&n); for(i=0;i<n;i++) { scanf("%d%s",&book[i].num,@@ book[i].@@ man@@ ); for(j=0;@@ book[i].@@ man@@ [j]@@ ;j++) { if(book[i].@@ man@@ [j]=='@@ A')@@ count@@ [0]@@ ++; elseif(book[i].@@ man@@ [j]=='@@ B@@ ')@@ count@@ [1@@ ]++; elseif(book[i].@@ man@@ [j]=='@@ C')@@ count@@ [2@@ ]++; elseif(book[i].@@ man@@ [j]=='@@ D@@ ')@@ count@@ [3@@ ]++; elseif(book[i].@@ man@@ [j]=='@@ E@@ ')count[@@ 4@@ ]++; elseif(book[i].@@ man@@ [j]=='@@ F@@ ')count[@@ 5@@ ]++; elseif(book[i].@@ man@@ [j]=='@@ G')@@ count[@@ 6@@ ]++; elseif(book[i].@@ man@@ [j]=='@@ H@@ ')count[@@ 7@@ ]++; elseif(book[i].@@ man@@ [j]=='@@ I@@ ')count[@@ 8@@ ]++; elseif(book[i].@@ man@@ [j]=='@@ J@@ ')count[@@ 9@@ ]++; elseif(book[i].@@ man@@ [j]=='@@ K@@ ')count[@@ 10@@ ]++; elseif(book[i].@@ man@@ [j]=='@@ L@@ ')@@ count@@ [11@@ ]++; elseif(book[i].@@ man@@ [j]=='@@ M@@ ')count[@@ 12@@ ]++; elseif(book[i].@@ man@@ [j]=='@@ N@@ ')count[@@ 13@@ ]++; elseif(book[i].@@ man@@ [j]=='@@ O@@ ')count[@@ 14@@ ]++; elseif(book[i].@@ man@@ [j]=='@@ P@@ ')count[@@ 15@@ ]++; elseif(book[i].@@ man@@ [j]=='@@ Q@@ ')count[@@ 16@@ ]++; elseif(book[i].@@ man@@ [j]=='@@ R@@ ')count[@@ 17@@ ]++; elseif(book[i].@@ man@@ [j]=='@@ S@@ ')count[@@ 18@@ ]++; elseif(book[i].@@ man@@ [j]=='@@ T')@@ count[@@ 19@@ ]++; elseif(book[i].@@ man@@ [j]=='@@ U@@ ')count[@@ 20@@ ]++; elseif(book[i].@@ man@@ [j]=='@@ V@@ ')count[@@ 21@@ ]++; elseif(book[i].@@ man@@ [j]=='@@ W@@ ')count[@@ 22@@ ]++; elseif(book[i].@@ man@@ [j]=='@@ X@@ ')count[@@ 23@@ ]++; elseif(book[i].@@ man@@ [j]=='@@ Y@@ ')count[@@ 24@@ ]++; elseif(book[i].@@ man@@ [j]=='@@ Z@@ ')@@ count@@ [25@@ ]++; } } for(i=0;i<26;i++) { if(count@@ [i]>max) { max=count@@ [i]; t=i; } } printf("%c\n%d\n",@@ name@@ [t@@ ],@@ max); for(i=0;i<n;i++) { for(j=0;@@ book[i].@@ man@@ [j]@@ ;j++) { if(book[i].@@ man@@ [j]==@@ name@@ [t@@ ])@@ printf("%d\n",book[i].@@ num); } } return0; }  
c -1
h -1
1


intmain(){ chara[501],b[501]; inti,@@ time@@ =0; doublen,@@ p,@@ l@@ ,j,@@ k,@@ same@@ =0; scanf("%lf",&n); scanf("%s",&@@ a); scanf("%s",&@@ b); j@@ =strlen(a); k@@ =strlen(b); for(i=0;i<j@@ ;i++){ if(!@@ (@@ a[i]=='@@ A'||a[i]=='T'||a[i]=='@@ C'||@@ a[i]=='@@ G')){ printf("error"); time@@ ++; break; } } for(i=0;i<k;i++){ if((@@ !@@ (@@ b[i]=='@@ A'||@@ b[i]=='@@ T'||@@ b[i]=='@@ C'||@@ b[i]=='@@ G')@@ )&&@@ time@@ ==0){ printf("error"); time@@ ++; break; } } if(j!=@@ k@@ &&@@ time@@ ==0){ printf("error"); time@@ ++; } if(@@ time@@ ==0){ for(i=0;i<j@@ ;i++){ if(a[i]==b[i]){ same@@ ++; } } l@@ =strlen(a); p=@@ same@@ /@@ l; if(p@@ >n){ printf("yes"); }else{ printf("no"); } } return0; }  
c -1
h -1
main() { char*@@ s=(@@ char@@ *)malloc(@@ 256@@ )@@ ,*@@ s1@@ =(char*)malloc(@@ 256@@ )@@ ,*@@ s2@@ =(char*)malloc(@@ 256); inti,j,k,@@ m=0; gets(s); gets(@@ s1); gets(@@ s2); for(i=0;@@ *(@@ s@@ +i)@@ !='\0';i++) { for(j=i,@@ k@@ =0;@@ (*(@@ s@@ +j)@@ !=@@ '\0@@ ')&&(@@ *(@@ s1@@ +k@@ )!=@@ '\0@@ ')&&(@@ *(@@ s@@ +j)@@ ==@@ *(@@ s1@@ +k@@ ))@@ ;j++@@ ,k@@ ++@@ ); if(k==@@ strlen(@@ s1@@ )) { for(j=i,@@ k@@ =j@@ +@@ strlen(@@ s1@@ )@@ ;k<@@ strlen(@@ s)@@ ;k++@@ ,j@@ ++) *(@@ s@@ +j)@@ =*(@@ s@@ +@@ k); *(@@ s@@ +j@@ +@@ strlen(@@ s2@@ ))@@ ='\0'; for(j@@ =-@@ -j@@ +@@ strlen(@@ s2@@ ),@@ k@@ =j@@ -strlen(@@ s2@@ )@@ ;k@@ >=i@@ ;j--@@ ,k@@ --) *(@@ s@@ +j)@@ =*(@@ s@@ +@@ k); for(j=i,@@ k@@ =0;@@ *(@@ s2@@ +k)@@ !='\0'@@ ;j++@@ ,k++) *(@@ s@@ +j)@@ =*(@@ s2@@ +@@ k); m=m+1; } if(m@@ !=0) break; } puts(@@ s); }  
c -1
h -1
0

voidmain() { intk; intn@@ =1,@@ i=0,@@ j=0; scanf("%d",&k); int*@@ a=@@ (int*)malloc(@@ k@@ *sizeof(int)); int*@@ b=@@ (int*)malloc(@@ k@@ *sizeof(int)); for(i=0;i<k;i++) { scanf("%d",&a[i]); b[i]=1; } for(i=k@@ -1;i>=0;i--) { for(j=@@ k-1@@ ;j>i;j--) { if(a[i]>=a[j]) b[i]=@@ b[i]@@ >@@ b[j]@@ ?@@ b[i]@@ :@@ b[j]@@ +1; } } for(i=0;i<k;i++) { n=@@ n@@ >@@ b[i]@@ ?@@ n@@ :@@ b[i]; } printf("%d",n); }  
c -1
h -1
intmain() { intn,@@ num[@@ 20001@@ ]={0},@@ number,@@ i,j; cin>>n; for(i=1;i<=n;i++) { cin>>@@ number; num[i]=@@ number; } for(j=1;j<=n;j++) for(i=j@@ +1;i<=@@ n;i++) if(num@@ [j]==@@ num[i]@@ )@@ num@@ [i]=0; for(i=1;i<=n;i++) if(num@@ [i]@@ !=0@@ ){@@ cout<<@@ num[i]@@ ;break;} for(j=i+1;j<=n;j++) if(num@@ [j]@@ !=0)@@ cout<<""<<@@ num@@ [j]; return0; }  
c -1
h -1
0

intmain() { intn,k,@@ i,j; scanf("%d%d",&n,&k); inta[n]; char@@ p; for(i=0;i<n;i++) { scanf("%d",&a[i]); } for(i=0;i<n;i++) { for(j=1;j<n;j++) { if(a[i]+a[j]==k) { p@@ ='@@ y@@ '; printf("yes"); break; } else continue; } if(p@@ =='@@ y@@ ') break; else continue; } if(p@@ =='@@ y@@ ') return0; else printf("no"); return0; }  
c -1
h -1
intmain() { intk,m,n,i,j,@@ a[100][100],@@ sum=0; cin>>k; while(@@ cin>>m>>@@ n) { for(i=0;i<m;i++) for(j=0;j<n;j++) cin>>a[i][j]; if(m@@ >=@@ 3@@ &&n@@ >=@@ 3) { for(i=0;i<n;i++) sum=sum+@@ a[0]@@ [i]+@@ a[m-1]@@ [i]; for(i=1;i<m-1;i++) sum=sum+@@ a[i][0]+@@ a[i][n-1]; } else { for(i=0;i<m;i++) for(j=0;j<n;j++) sum=sum+@@ a[i][j]; } cout<<sum<<endl; sum=0; } return0; }  
c -1
h -1
0

intmain() { charstr@@ [257@@ ]={'\0'},@@ substr@@ [257@@ ]={'\0'},@@ replace@@ [257@@ ]={'\0'}; cin>>@@ str@@ >>@@ substr@@ >>@@ replace@@ ; char*@@ p=strstr(@@ str,@@ substr@@ ); inti=0,@@ flag@@ =strlen(@@ substr@@ ); if(p@@ ==NULL) cout<<str@@ <<endl; else { for(i=0;@@ str@@ +i@@ <p@@ ;i++) cout<<str@@ [i]; cout<<@@ replace@@ ; for(i@@ =i+@@ flag@@ ;i<@@ strlen(@@ str@@ );i++) cout<<str@@ [i]; } return0; }  
c -1
h -1
intmain() { inta[16@@ ]={0},@@ i=0,@@ n=0,@@ j,@@ flag=1; while(@@ flag@@ ) { while(1) { cin>>a[i]; if(a[i]==@@ (@@ -1)) { flag=0; break; } else@@ if(a[i]==0) { for(j=0;j<=i;j++) a[j]=0; cout<<n<<endl; n=0; i=0; break; } else { for(j=0;j<i;j++) { if((@@ a[j]==2*@@ a[i]@@ )||(@@ a[i]==@@ 2*@@ a[j]@@ )) n++; } } i++; } } return0; }  
c -1
h -1
0

struct@@ info { intnum; charauthor[26]; }a[@@ 1000]; intmain() { inti,@@ m,@@ j,@@ b[@@ 26]={0}; char@@ out@@ ; scanf("%d\n",&@@ m); for(i=0;i<m;i++) scanf("%d@@ %s@@ \n",&@@ a[i].@@ num,@@ a[i].@@ author); for(i=0;i<m;i++) for(j=0;j<26;j++) b[@@ a[i].@@ author@@ [j]@@ -'A']++; intmax=@@ b[0]; for(i=0;i<26;i++) max=@@ max@@ >@@ b[i]@@ ?@@ max@@ :@@ b[i]; for(i=0;i<26;i++) if(b[i]==@@ max) { out@@ ='A'+i; printf("%c\n",@@ 'A'+@@ i); printf("%d\n",@@ b[i]); break; } for(i=0;i<m;i++) for(j=0;j<26;j++) if(a[i].@@ author@@ [j]==@@ out@@ ) { printf("%d\n",@@ a[i].@@ num); break; } }  
c -1
h -1
intmain(){ double@@ r; scanf("%lf",&@@ r); charzfc@@ [500]; char@@ jiyin@@ [500]; scanf("%s",@@ zfc); scanf("%s",@@ jiyin@@ ); intn=0; inti,k,@@ L@@ ,@@ N; for(i=0;@@ zfc@@ [i]!='\0';i++){ if(@@ zfc@@ [i+1@@ ]==@@ '\0'@@ ){ L@@ =i; } } for(k=0;@@ jiyin@@ [k]@@ !='\0'@@ ;k++){ if(@@ jiyin@@ [k+1@@ ]==@@ '\0'@@ ){ N@@ =k; } } if(@@ L@@ !=@@ N@@ ){ printf("error"); }else{ for(i=0;@@ zfc@@ [i]!='\0';i++){ if(@@ zfc@@ [i]!='A'&&@@ zfc@@ [i]!='T'&&@@ zfc@@ [i]!='C'&&@@ zfc@@ [i]!='G'){ printf("error"); return0; } } for(i=0;@@ jiyin@@ [i]!='\0';i++){ if(@@ jiyin@@ [i]!='A'&&@@ jiyin@@ [i]!='T'&&@@ jiyin@@ [i]!='C'&&@@ jiyin@@ [i]!='G'){ printf("error"); return0; } } for(i=0;@@ zfc@@ [i]!='\0';i++) { if(@@ zfc@@ [i]==@@ jiyin@@ [i]) { n++; } } if(n@@ *1.0/@@ L@@ >@@ r@@ ) { printf("yes"); }else { printf("no"); } } return0; }  
c -1
h -1
0

intmain(){ intsz[@@ N@@ ][@@ M@@ ]; intk,@@ n,m,@@ i,j,@@ l; intsum=0; scanf("%d",&k); for(l=0;l<@@ k;@@ l++){ sum=0; scanf("%d%d",&n,&m); for(i=0;i<n;i++){ for(j=0;j<m;j++){ scanf("%d",&sz[i][j]); } } for(j=0;j<@@ m-1@@ ;j++){ sum+=@@ sz[0]@@ [j]; } for(i=0;i<n-1;i++){ sum+=@@ sz[i]@@ [@@ m-1@@ ]; } for(j=1;j<@@ m@@ ;j++){ sum+=@@ sz[@@ n-1@@ ]@@ [j]; } for(i=1;i<n;i++){ sum+=@@ sz[i]@@ [0]; } printf("%d\n",sum); } return0; }  
c -1
h -1
intmain() { intn,@@ j; cin>>n; inta[n]; inti=0; while(i<n) { cin>>a[i]; i++; } cout<<a[0]; i=1; while(i<n) { for(j=0;j<i;j++) if(a[i]==a[j]@@ )break; if(((@@ j==@@ i@@ )&&(@@ a[i]@@ !=@@ a[i-1]@@ ))@@ ==1)@@ cout<<""<<a[i]; i++; } return0; }  
c -1
h -1
0

void@@ function@@ (int,int); intmain() { chars[@@ 200@@ ][100]; intn@@ [100],@@ h@@ [100],@@ maxh@@ [100]; inta; inti,j,k,@@ p; intnum,@@ maxnum@@ =0; charc; scanf("%d",&a); for(i=0;i<a;i++) { scanf("%d%s",&@@ n@@ [i],@@ s[i]); } for(j@@ ='A'@@ ;j<=@@ 'Z'@@ ;j++) { num=0; for(i=0;i<a;i++) { for(k=0;k<@@ strlen(@@ s[i]@@ )@@ ;k++) { if(s@@ [i]@@ [k]==@@ j) { num++; h@@ [@@ num@@ ]=@@ n[i]; } } } if(num@@ >@@ maxnum@@ ) { c@@ =j; maxnum@@ =@@ num; for(p=1@@ ;p<=@@ maxnum@@ ;p++) { maxh@@ [p@@ ]=@@ h@@ [p@@ ]; } } } printf("%c\n%d\n",@@ c,@@ maxnum@@ ); for(p=1@@ ;p<=@@ maxnum@@ ;p++) { printf("%d\n",@@ maxh@@ [p@@ ]); } return0; }  
c -1
h -1
intmain() { int@@ lin@@ ,@@ col; cin>>@@ lin@@ >>col; inti,j; intnum@@ [100][100]; for(i=0;i<@@ lin@@ ;i++) { for(j=0;j<col;j++) cin>>@@ num[i]@@ [j]; } if(@@ lin@@ <=col@@ ) { for(j=0;j<col;j++) { for(i=0;i<=@@ j@@ &&i@@ <@@ lin@@ ;i++) cout<<@@ num[i]@@ [j-i@@ ]<<endl; } for(i=1;i<@@ lin@@ ;i++) { for(j=col-1@@ ;j>=i@@ &&@@ col@@ +i@@ -1-j@@ <@@ lin@@ ;j--) cout<<@@ num[@@ col@@ +i@@ -1-j@@ ][j]@@ <<endl; } } else { for(j=0;j<col;j++) { for(i=0;i<=@@ j@@ ;i++) cout<<@@ num[i]@@ [j-i@@ ]<<endl; } for(i=1;i<@@ lin@@ ;i++) { for(j=@@ col@@ -1;@@ col-1@@ +i-j@@ <@@ lin@@ &&j>=0@@ ;j--) cout<<@@ num[@@ col@@ +i@@ -1-j@@ ][j]@@ <<endl; } } return0; }  
c -1
h -1
0

struct@@ f@@ { charid[10]; int@@ old@@ ; }@@ st@@ [1000],@@ stu[@@ 1000],@@ temp; intmain() { intn,i,j,@@ a,b,@@ c; char@@ cc@@ ,@@ aa@@ ,@@ x[@@ 1000],@@ y@@ [1000]; scanf("%d",&n); for(i=1;i<=n;i++){ scanf("%s@@ %c@@ %d@@ %c@@ ",@@ st[i].@@ id,&@@ aa@@ ,&@@ st[i].@@ old@@ ,&@@ cc@@ );} a=0; for(j=1;j<=n;j++){ if(@@ st@@ [j].@@ old@@ >=60){ a++; stu[@@ a@@ ]=@@ st@@ [j]; }} for(i=a@@ -1@@ ;i>=0;i--){ for(j=1;j<=@@ i;j++){ if(stu[j].@@ old@@ <@@ stu[j+1].@@ old@@ ){ temp=@@ stu@@ [j]; stu@@ [j]=@@ stu@@ [j+1]; stu@@ [j+1]=@@ temp@@ ;@@ }}} for(i=1;i<=@@ a;i++){ puts(@@ stu[i].@@ id@@ );} for(i=1;i<=n;i++){ if(@@ st[i].@@ old@@ <60@@ )@@ puts(@@ st[i].@@ id@@ );} }  
c -1
h -1
intmain() { struct@@ s { intid; int@@ ch; int@@ ma; }@@ s; long@@ intn; inti=0,@@ j,@@ zong@@ ,@@ c=0; inta[@@ 3@@ ]={0},b[@@ 3@@ ]={0}; intt; scanf("%d",&n); for(i=0;i<3;i++) { scanf("%d%d%d",&@@ s.@@ id,&@@ s.@@ ch@@ ,&@@ s.@@ ma@@ ); a[i]@@ =i+1; b[i]=@@ s.@@ ma@@ +@@ s.@@ ch; } for(i=0;i<2@@ ;i++) { if(b[i]>@@ b[1@@ +i@@ ]) { t=@@ b[i]@@ ;@@ b[i]=b@@ [i+1@@ ];@@ b[i+1]=@@ t; t=@@ a[i];@@ a[i]=a[i+1@@ ];@@ a[i+1]=@@ t; } } for(i=@@ 3@@ ;i<n;i++) { scanf("%d%d%d",&@@ s.@@ id,&@@ s.@@ ch@@ ,&@@ s.@@ ma@@ ); zong@@ =@@ s.@@ ch@@ +@@ s.@@ ma; for(j=0;j<3;j++) { if(@@ zong@@ >@@ b[j]@@ )@@ c++; } if(c@@ ==1) { a[0]=@@ s.@@ id; b[0]=@@ zong@@ ; } if(c==@@ 2) { a[0]=@@ a[1]; b[0]=@@ b[1@@ ]; a[1]=@@ s.@@ id; b[1@@ ]=@@ zong@@ ; } if(c==@@ 3) { a[0]=@@ a[1]; a[1@@ ]=a[@@ 2@@ ]; a[2]=@@ s.@@ id; b[0]=@@ b[1@@ ]; b[1@@ ]=@@ b[2@@ ]; b[2@@ ]=@@ zong@@ ; } c=0; } for(i=2@@ ;i>=0;i--) { printf("%d%d\n",@@ a[i],@@ b[i]); } }  
c -1
h -1
0

intmain() { int@@ row@@ =0,@@ col@@ =0; cin>>row>>col; inta[100][100]; memset@@ (a@@ ,'@@ 0@@ ',@@ sizeof(a)); for(inti=0;i<row;i++) { for(intj=0;j<col;j++) { cin>>a[i][j]; } } int(*p)@@ [100@@ ]=a; for(inti=0;i<@@ row+col@@ -1;i++) { if(i@@ <col) { for(intj=0;j<=@@ row@@ ;j++) { if(i@@ -j@@ <col@@ &&j@@ <row@@ &&j>=0@@ &&i@@ -j@@ >=0) {@@ cout<<@@ *(*(p@@ +j)@@ +i-j@@ )@@ <<endl;} } } else { for(intj=1;j<@@ row@@ ;j++) { if(i@@ -j@@ <col@@ &&j@@ <row@@ &&i@@ -j@@ >=0@@ &&j@@ >=0) {@@ cout<<@@ *(*(p@@ +j)@@ +i-j@@ )@@ <<endl;} } } } return0; }  
c -1
h -1
intn,m; inta[@@ 1000],b[1000],@@ c[@@ 2000]; voidread@@ (){ inti; scanf("%d%d",&@@ n,@@ &@@ m); for(i=0;i<n@@ ;++i) scanf("%d",a@@ +i); for(i=0;i<m@@ ;++i) scanf("%d",@@ b@@ +i); } int@@ cmp@@ (constvoid*a,constvoid*@@ b){ return@@ *(@@ (int*)@@ a)@@ -@@ *(@@ (int*)@@ b); } voidsort@@ (){ qsort@@ (a,n,@@ sizeof(int),@@ cmp@@ ); qsort@@ (b,@@ m,@@ sizeof(int),@@ cmp@@ ); } void@@ merge@@ (){ inti; for(i=0;i<n@@ ;++i) c[i]=a[i]; for(i=0;i<m@@ ;++i) c[@@ n@@ +i]=b[i]; } voidoutput@@ (){ inti; printf("%d",c@@ [0]); for(i=1;i<@@ n+@@ m;@@ ++@@ i) printf("%d",c[i]); } intmain(){ read(); sort@@ (); merge@@ (); output@@ (); return0; }  
c -1
h -1
0

structbook { intnum; charname[26]; structbook*next; }; structbook*@@ creat@@ (intm) { structbook@@ *head,*p1,*p2; p1=(structbook@@ *)malloc(sizeof(structbook)); scanf("%d%s",&p1->num,p1->name); inti; for(i=1;i<m;i++) { if(i@@ ==1)head=p1; elsep2->next=p1; p2=p1; p1=(structbook@@ *)malloc(sizeof(structbook)); scanf("%d%s",&p1->num,p1->name); } p2->next@@ =p1;@@ p1->next=NULL; return(head); } main() { structbook@@ *head,*p; inti,j,@@ m,@@ k,@@ l,@@ max=0; scanf("%d",&m); head=creat@@ (m); int*@@ a; a=@@ (int*)malloc(@@ 26@@ *sizeof(int)); for(i=0;i<26;i++) *(a+i)@@ =0; p=head; for(i=0;i<m;i++) { k=strlen(@@ p->@@ name); for(j=0;j<k;j++) for(l=0;l<@@ 26@@ ;l++) if(*(@@ p->@@ name@@ +j)@@ ==@@ l@@ +65) (@@ *(a+@@ l@@ ))@@ ++; p=p->next; } for(i=0;i<26;i++) if(max@@ <*@@ (a@@ +i)@@ )@@ max@@ =*@@ (a@@ +i); for(i=0;i<26;i++) if(max@@ ==@@ *(a+i)@@ ){@@ printf("%c\n%d\n",@@ i@@ +65@@ ,@@ max@@ );break;} p=head; for(j=0;j<m;j++) { k=strlen(@@ p->@@ name); for(l=0;l<@@ k;@@ l++) if(*(@@ p->@@ name@@ +l@@ )==@@ i@@ +65) printf("%d\n",p->num); p=p->next; } }  
c -1
h -1
intmain(){ inti,@@ m=0,@@ s; doublen,@@ x; char@@ one@@ [500],@@ two@@ [500]; scanf("%lf",&n); scanf("%s%s",@@ one@@ ,@@ two@@ ); s@@ =strlen(@@ one@@ ); if(strlen(@@ one@@ )!=strlen(@@ two@@ )) printf("error"); else{ for(i=0;@@ one@@ [i]!='\0';i++){ if((@@ one@@ [i]!='A'&&@@ one@@ [i]!='G'&&@@ one@@ [i]!='T'&&@@ one@@ [i]!='@@ C')||(@@ two@@ [i]!='A'&&@@ two@@ [i]!='T'&&@@ two@@ [i]!='C'&&@@ two@@ [i]!='G')){ s=0; } else{ if(@@ one@@ [i]==@@ two@@ [i]) m++; } } x@@ =1.0*@@ m/@@ s; if(s@@ ==0) printf("error"); elseif(x@@ >n) printf("yes"); else printf("no"); } return0; }  
c -1
h -1
0

intmain() { intn,m,@@ i,j,@@ a[100][100]; cin>>n>>m; for(i=1;i<=n;i++) for(j=1;j<=@@ m@@ ;j++)@@ cin>>a[i][j]; for(i=2;i<=@@ n+m;i++) for(j=@@ max(@@ 1,@@ i@@ -@@ m)@@ ;j<=@@ min@@ (n,@@ i@@ -1)@@ ;j++)@@ cout<<@@ a[j][i-j@@ ]<<endl; }  
c -1
h -1
inta[@@ 10000@@ ],b[@@ 10000]; int@@ A@@ ,@@ B@@ ; voidread@@ () { inti; cin>>@@ A@@ >>@@ B@@ ; for(i=0;i<@@ A@@ ;i++) cin>>a[i]; for(i=0;i<@@ B@@ ;i++) cin>>b[i]; } voidsort@@ () { inti,j,temp; for(i=0;i<@@ A@@ -1;i++) for(j=i+1;j<@@ A@@ ;j++) { if(a[j]@@ <@@ a[i]@@ ){@@ temp=@@ a[i];a[i]=@@ a[j];a[j]=@@ temp;} } for(i=0;i<@@ B@@ -1;i++) for(j=i+1;j<@@ B@@ ;j++) { if(b[j]@@ <@@ b[i]@@ ){@@ temp=@@ b[i]@@ ;@@ b[i]=b[j]@@ ;@@ b[j]=@@ temp;} } } void@@ conbine@@ () { inti; for(i=0;i<@@ A@@ ;i++) cout<<a[i]@@ <<''; for(i=0;i<@@ B@@ -1;i++) cout<<b[i]@@ <<''; cout<<b[@@ B@@ -1]; } intmain() { read(); sort@@ (); conbine@@ (); return0; }  
c -1
h -1
0

intmain() { inta[@@ 1001]; intn,k,i,@@ sum; int@@ p,q; int@@ control@@ =0; cin>>n>>k; for(i=1;i<=n;i++) {@@ cin>>@@ a[i];} for(p=1@@ ;p@@ <=n;@@ p++) {@@ for(q=@@ n;@@ q@@ >@@ p@@ ;q@@ --) {@@ sum=@@ a[p@@ ]+@@ a[q@@ ]; if(sum@@ ==k) {@@ control@@ =1; break;} } } if(@@ control@@ ==0) cout<<"no"; else@@ cout<<"yes"; return0; }  
c -1
h -1
intmain(intargc,char*argv[]) { intx[@@ 16],@@ a,b,@@ i,@@ k; while(1) { for(i=0;i<16;i++) { scanf("%d",&@@ x[i]); if(x@@ [i]==0) { a=i; break; } } if(x@@ [0]@@ ==-1) { break; } ints=0; for(k=0;k<@@ a@@ ;k++) { for(i=0;i<a;i++) { if(x@@ [k]==2*@@ x@@ [i]) { s++; } } } printf("%d\n",s); } return0; }  
c -1
h -1
0

inta[@@ 1000],@@ c,d; void@@ kg@@ (); void@@ m@@ (int@@ ); void@@ r@@ (); main() { r@@ (); m@@ (@@ c); kg@@ (); m@@ (@@ d); } void@@ r@@ () { scanf("%d%d",&@@ c@@ ,&@@ d); } void@@ m@@ (int@@ s) { inti,j,t; for(i=0;i<@@ s;i++) { scanf("%d",&a[i]); } for(i=0;i<@@ s;i++) { for(j=0;j<@@ s@@ -i-1;j++) { if(a[j]>a[j+1]) { t=a[j]; a[j]=a[j+1]; a[j+1]=t; } } } for(i=0;i<@@ s;i++) { printf("%d",a[i]); if(i<@@ s@@ -1) kg@@ (); } } void@@ kg@@ () { printf(""); }  
c -1
h -1
intmain(){ structpatient{ charid@@ [11]; intage; }@@ *p,*@@ p60_up@@ ,*@@ p60_low@@ ,@@ t; intn,i,j,@@ k=0; scanf("%d",&n); p=@@ (structpatient@@ *)malloc(sizeof(structpatient@@ )*n); for(i=0;i<n;i++){ scanf("%s",&@@ (p@@ [i].@@ id@@ )); scanf("%d",&@@ (p@@ [i].age@@ )); } for(i=0;i<=@@ n;i++){ if(p@@ [i].age>=60){ k++; } } p60_up@@ =(struct@@ patient*)malloc(sizeof(structpatient@@ )*@@ k); p60_low@@ =(struct@@ patient*)malloc(sizeof(structpatient@@ )*(@@ n-@@ k@@ )); for(i=0,j@@ =0;i<@@ n;i++){ if(p@@ [i].age>=60){ p60_up@@ [j]=@@ p[i]; j++; } }@@ for(i=0,j@@ =0;i<@@ n;i++){ if(p@@ [i].age@@ <60){ p60_low@@ [j]=@@ p[i]; j++; } } for(j=1;j<=@@ k@@ ;j++){ for(i=0;i<@@ k@@ -j@@ ;i++){ if(@@ p60_up@@ [i].age@@ <@@ p60_up@@ [i+1@@ ].age){ t=@@ p60_up@@ [i+1]; p60_up@@ [i+1]=@@ p60_up@@ [i]; p60_up@@ [i]=@@ t; } } } for(i=0;i<k;i++){ puts(@@ p60_up@@ [i].id); } free(@@ p60_up@@ ); for(i=0;i<n-@@ k;i++){ puts(@@ p60_low@@ [i].id); } free(@@ p60_low@@ ); return0; }  
c -1
h -1
0

main() { chara[256],b[256],c[256]; gets(a); gets(b); gets(c); intn=0,@@ q=0; for(inti@@ =0;@@ b[i]@@ !='\0';i++) { n++; } for(inti@@ =0;@@ a[i]@@ !='\0';i++) { q++; } inti,j,k,@@ p; for(i=0;a[i]!='\0';i++) { intm=0; for(j=0;j<n;j++) { if(a@@ [i+j]==@@ b[j]) m++; } if(m==@@ n) break; } if(i==@@ q) for(p@@ =0;@@ a[p@@ ]!='\0'@@ ;p++) { printf("%c",@@ a[p@@ ]); } else { for(k=0;@@ c@@ [k]@@ !='\0'@@ ;k++) { a[k@@ +i]=@@ c@@ [k]; } for(p@@ =0;@@ a[p@@ ]!='\0'@@ ;p++) { printf("%c",@@ a[p@@ ]); } } getchar(); getchar(); getchar(); getchar(); getchar(); getchar(); getchar(); getchar(); getchar(); getchar(); getchar(); }  
c -1
h -1
intmain() { inta[16],@@ i,@@ c=0,@@ e=0,@@ n,@@ l; while(1) { for(i=0;i<16;i++) { scanf("%d",&a[i]); e=@@ e@@ +1; if(a[i]@@ ==0||@@ a[i]@@ ==-1)break; } if(a[i]==@@ -1)break; for(l=0;l<@@ e@@ -1;@@ l++) for(n=@@ l@@ +1@@ ;n@@ <@@ e@@ -1;@@ n++) { if((@@ a[l@@ ]@@ /@@ a[n@@ ]==@@ 2@@ &&@@ a[l@@ ]@@ %@@ a[n@@ ]@@ ==0)||(@@ a[n@@ ]@@ /@@ a[l@@ ]==@@ 2@@ &&@@ a[n@@ ]@@ %@@ a[l@@ ]@@ ==0)) c=c@@ +1; } printf("%d\n",@@ c); inta[16@@ ]={0}; e=@@ c=0; } return0; }  
c -1
h -1
0

intmain(){ intn,k; scanf("%d%d",&n,&k); intsz[1000]; inti; for(i=0;i<n;i++){ scanf("%d",&sz[i]); } intj,@@ e,@@ a; for(j=1;j<@@ n;j++){ for(i=0;i<n@@ -j@@ ;i++){ if(sz[i]@@ >@@ sz@@ [i+1@@ ]){ e=@@ sz[i]; sz@@ [i]=@@ sz@@ [i+1]; sz@@ [i+1]=@@ e; } } } a=0; if(sz[@@ n-1@@ ]+sz[@@ n-2@@ ]<@@ k){ printf("no"); }else{ if(sz@@ [0]+@@ sz@@ [1]@@ >@@ k){ printf("no"); }else{ for(i=0;i<n-1;i++){ for(j=i+1;j<n;j++){ if(sz[i]+sz@@ [j]==k){ printf("yes"); a=1; break; } } if(a@@ ==1){ break; } } if(a@@ ==0){ printf("no"); } } } return0; }  
c -1
h -1
intmain() { charstr@@ [257],@@ sub@@ [257],@@ re@@ [257]; inti,j,k,@@ n1,n2,@@ n3@@ ,@@ h=0; scanf("%s%s%s",@@ str,@@ sub,@@ re); n1@@ =strlen(@@ str); n2@@ =strlen(@@ sub); n3@@ =strlen(@@ re); for(i=0;i<=@@ n1@@ -@@ n2;i++) { if(str[i]==@@ sub@@ [0]) { int@@ ll@@ =0; for(j=0;j<@@ n2@@ ;j++) { if(str@@ [i+j]!=@@ sub@@ [j]) { ll@@ =1; break; } else continue; } if(@@ ll@@ ==0) { h@@ =1; for(k=0;k<@@ i@@ ;k++){ printf("%c",str@@ [k]); } for(k=0;k<@@ n3@@ ;k++){ printf("%c",@@ re@@ [k]); } for(k=i+@@ n2@@ ;k<@@ n1@@ ;k++){ printf("%c",str@@ [k]); } break; } else continue; } } if(h@@ ==0) printf("%s",str); return0; }  
c -1
h -1
0

struct@@ su { inta; charb[@@ 26]; struct@@ su@@ *next; }; intmain() { intn,@@ c[@@ 26]={0},@@ i,k,@@ j,@@ l,@@ max,@@ m; struct@@ su@@ *p,*@@ head,*@@ q; scanf("%d",&n); for(i=0;i<n;i++) { p=(struct@@ su@@ *)malloc(sizeof(struct@@ su@@ )); if(i==0) {@@ head=@@ p; q=p; scanf("%d%s",&@@ p->@@ a,@@ p->@@ b); k=strlen(@@ p->@@ b); for(j=0;j<k;j++) { l=@@ p->@@ b[j]@@ -'A'; c[@@ l@@ ]=@@ c[@@ l@@ ]+1; } } else {@@ q@@ ->next=p; q=p; scanf("%d%s",&@@ p->@@ a,@@ p->@@ b); k=strlen(@@ p->@@ b); for(j=0;j<k;j++) { l=@@ p->@@ b[j]@@ -'A'; c[@@ l@@ ]=@@ c[@@ l@@ ]+1; } } } q@@ ->next=NULL; max=@@ c[@@ 0]; m=0; for(j=0;j<26;j++) { if(max<@@ c@@ [j]) {max=@@ c[j]; m@@ =j; } } printf("%c\n%d\n",@@ m@@ +'A',@@ max); p=head; do { k=strlen(@@ p->@@ b); for(j=0;j<k;j++) { if((@@ 'A'+@@ m@@ )==@@ p->@@ b[j]) { printf("%d\n",p->@@ a); } } p=p->next; }while(p@@ !=NULL); return0; }  
c -1
h -1
intmain() { intm,n,@@ a[100@@ ][100@@ ]={@@ {@@ 0@@ }@@ }; cin>>m>>n; inti,j; for(i=1;i<=m;i++) { for(j=1;j<=n;j++) { cin>>a[i][j]; } } for(i=1;i<=n;i++) { int@@ u@@ =i; int@@ j=1; for(;@@ u@@ >=1@@ &&j@@ <=@@ m;@@ u@@ --@@ ,j@@ ++) { cout<<@@ a[j]@@ [@@ u@@ ]<<endl; } } for(i=2;i<=@@ m;i++) { int@@ u@@ =@@ i,j@@ =@@ n; for(;@@ u@@ <=@@ m@@ &&j@@ >=1@@ ;@@ u@@ ++@@ ,j@@ --) { cout<<a[@@ u@@ ][j]@@ <<endl; } } return0; }  
c -1
h -1
0

intmain() { intn,k,@@ a[1000],@@ i,j,@@ f; scanf("%d%d",&n,&k); f=0; for(i=0;i<n;i++) { scanf("%d",&a[i]); if(f@@ ==1)break; for(j=0;j<i;j++) {@@ if(a[i]+a[j]==k) {@@ f=1; break;} } } if(f@@ ==1)@@ printf("yes"); elseprintf("no"); }  
c -1
h -1
intmain() { chars[@@ 300],@@ subs@@ [@@ 15],@@ reps@@ [@@ 15]; inti,j,k,@@ ls@@ ,@@ lsub@@ ,@@ lrep@@ ,@@ w; scanf("%s",s); scanf("%s",@@ subs@@ ); scanf("%s",@@ reps@@ ); ls@@ =strlen(s); lsub@@ =strlen(@@ subs@@ ); lrep@@ =strlen(@@ reps@@ ); for(i=0;i<@@ ls@@ ;i++) { w@@ =0; for(j=0;j<@@ lsub@@ ;j++) { if(s@@ [i+j]==@@ subs@@ [j]@@ )@@ w@@ ++; } if(w@@ ==@@ lsub@@ ) { for(k=0;k<i;k++) printf("%c",s@@ [k]); for(k=0;k<@@ lrep@@ ;k++) printf("%c",@@ reps@@ [k]); for(k=i+@@ lsub@@ ;k<@@ ls@@ ;k++) printf("%c",s@@ [k]); break; } } if(w@@ !=@@ lsub@@ )@@ printf("%s\n",@@ s); return0; }  
c -1
h -1
0

void@@ change@@ (inta[],intb[],int@@ c[@@ ]) { int@@ x=0,@@ y=0; cin>>x@@ >>@@ y; inti=0; for(i=0;i<x;i++) cin>>a[i]; for(i=0;i<y;i++) cin>>b[i]; int@@ j=0,@@ t=0; for(i=0;i<x@@ -1;i++) { for(j=0;j<@@ x@@ -1-i;j++) { if(a[j]>a[j+1]) {t=@@ a[j];a[j]=a[j+1];@@ a[j+1]=@@ t;} } } for(i=0;i<@@ y@@ -1;i++) { for(j=0;j<@@ y@@ -1-i;j++) { if(b[j]>b[j+1]) {t=@@ b[j]@@ ;@@ b[j]=b@@ [j+1];@@ b[j+1]=@@ t;} } } for(i=0;i<x;i++) c[i]=a[i]; for(i=x@@ ;i<@@ x+@@ y;i++) c[i]=b[i-@@ x@@ ]; for(i=0;i<@@ x+@@ y@@ -1;i++) cout<<@@ c[i]@@ <<''; cout<<c[@@ x+@@ y@@ -1]; } intmain() { inta[@@ 1000@@ ]={0},b[@@ 1000]={0},@@ c[@@ 2000@@ ]={0}; change@@ (a,b,@@ c); return0; }  
c -1
h -1
intmain() { inty,m,d,@@ sum,@@ jan@@ =@@ 31,@@ feb@@ ,@@ mar@@ =@@ 31,@@ apr@@ =@@ 30@@ ,@@ may@@ =@@ 31,@@ jun@@ =@@ 30@@ ,@@ jul@@ =@@ 31,@@ aug@@ =@@ 31,@@ sep@@ =@@ 30@@ ,@@ oct@@ =@@ 31,@@ nov@@ =@@ 30; scanf("%d%d%d",&y,&m,&d); if((y%@@ 400==0)||(@@ (@@ y%@@ 4==0)&&(@@ y%100!=0@@ )@@ )) feb@@ =@@ 29; else@@ feb@@ =@@ 28; switch(m) { case1:@@ sum=@@ d;break; case2:@@ sum=@@ jan@@ +d;break; case3:@@ sum=@@ jan+feb@@ +d;break; case4:@@ sum=@@ jan+feb+mar@@ +d;break; case5:@@ sum=@@ jan+feb+mar@@ +@@ apr@@ +d;break; case6:@@ sum=@@ jan+feb+mar@@ +@@ apr@@ +@@ may@@ +d;break; case7:@@ sum=@@ jan+feb+mar@@ +@@ apr@@ +@@ may@@ +@@ jun@@ +d;break; case8:@@ sum=@@ jan+feb+mar@@ +@@ apr@@ +@@ may@@ +@@ jun@@ +@@ jul@@ +d;break; case9:@@ sum=@@ jan+feb+mar@@ +@@ apr@@ +@@ may@@ +@@ jun@@ +@@ jul@@ +@@ aug@@ +d;break; case10:@@ sum=@@ jan+feb+mar@@ +@@ apr@@ +@@ may@@ +@@ jun@@ +@@ jul@@ +@@ aug@@ +@@ sep@@ +d;break; case11:@@ sum=@@ jan+feb+mar@@ +@@ apr@@ +@@ may@@ +@@ jun@@ +@@ jul@@ +@@ aug@@ +@@ sep@@ +@@ oct@@ +d;break; case12:@@ sum=@@ jan+feb+mar@@ +@@ apr@@ +@@ may@@ +@@ jun@@ +@@ jul@@ +@@ aug@@ +@@ sep@@ +@@ oct@@ +@@ nov@@ +d;break; } printf("%d",sum); return0; }  
c -1
h -1
0

voidmain() { int@@ st@@ (inta,int@@ b); intj,@@ n,m,@@ sum; scanf("%d",&n); for(j=1;j<=n;j++) { scanf("%d",&m); sum=@@ st@@ (2,@@ m); printf("%d\n",sum); } } int@@ st@@ (inta,intb) { inti,@@ c; c=0; if(a==0) c=c@@ +1; else { for(i=a@@ ;i<=sqrt(@@ b@@ );i++) { if(b@@ %i==0) c=@@ st@@ (i,@@ (@@ b@@ /i@@ ))@@ +c; } if(i>@@ sqrt(@@ b@@ )) c=c@@ +1; } return@@ c; }  
c -1
h -1
intmain(){ inti,j,n,@@ a,b; int@@ c1@@ ,@@ c2@@ ,@@ c,@@ k1@@ ,@@ k2@@ ,@@ k; intsz[@@ 1000][1000]; scanf("%d",&n); for(inti=0;i<n;i++){ for(intj=0;j<n;j++){ scanf("%d",&(@@ sz@@ [i][j]@@ )); } } for(inti=0;i<n;i++){ for(intj=0;j<n;j++){ if(sz@@ [i][j]==0){ c1@@ =i; k1@@ =j; } } } for(int@@ a=@@ n-1;@@ a@@ >=0@@ ;a@@ --){ for(int@@ b=@@ n-1;@@ b@@ >=0;@@ b@@ --){ if(@@ sz[a@@ ][b@@ ]==0){ c2@@ =@@ a; k2@@ =@@ b; } } } c=@@ c1@@ -@@ c2@@ -1; k=@@ k1@@ -@@ k2@@ -1; printf("%d",c@@ *@@ k); return0; }  
c -1
h -1
0

voidmain() { intn,k; inta[1000]; inti,j; intnum=0; scanf("%d%d",&n,&k); for(i=0;i<n;i++) scanf("%d",&a[i]); for(i=0;i<n-1;i++) for(j=i+1;j<n;j++) if(a[i]+a[j]==k) num=num@@ +1; if(num@@ ==0) printf("no\n"); else printf("yes\n"); }  
c -1
h -1
intmain() { chara[256],b[256],c[256]; inti,j,@@ lena@@ ,@@ lenb@@ ; scanf("%s%s%s",a,b,c); lena@@ =strlen(a); lenb@@ =strlen(b); a[@@ lena@@ ]='\0'; int@@ x,@@ s; for(i=0;i<@@ lena@@ ;i++) { x@@ =-1; for(j=0;j<@@ lenb@@ ;j++) { if(a@@ [i+j]!=@@ b[j]) { x=0; break; } } if(x@@ !=0) { s@@ =i; break; } } if(x@@ ==0) printf("%s",a); else { for(i=0;i<@@ s;i++) printf("%c",a[i]); printf("%s",@@ c); for(i=@@ s@@ +@@ lenb@@ ;i<@@ lena@@ ;i++) { printf("%c",a[i]); } } return0; }  
c -1
h -1
0

intmain() { chars[@@ 300],@@ w@@ [300],@@ r@@ [300],@@ d[@@ 300]; inti,j,@@ l,@@ h; scanf("%s%s%s",@@ s,@@ w,@@ r); l@@ =strlen(s); h@@ =strlen(@@ w); for(i=0;i<=@@ l@@ -@@ h@@ ;i++) { for(j=0;j<@@ h@@ ;j++) { d@@ [j]=@@ s[i+j@@ ]; } d[@@ h@@ ]='\0'; if(strcmp(@@ d,@@ w@@ )@@ ==0)break; } if(i==@@ l@@ -@@ h@@ +1)@@ printf("%s",s); else { for(j=i;j<i+@@ h@@ ;j++) { s[j]=@@ r@@ [j-i@@ ]; } printf("%s",s); } return0; }  
c -1
h -1
intmain() { charstr@@ [256]; char@@ sub@@ [256]; char@@ rep@@ [256]; gets(str); gets(sub); gets(@@ rep); char*@@ p=strstr(@@ str,@@ sub); if(p@@ ==NULL) { printf("%s\n",@@ str); } else { int@@ len=strlen(@@ rep); inti; for(i=0;i<len;i++) {@@ *@@ p=@@ rep@@ [i]; p++; } printf("%s\n",@@ str); } return0; }  
c -1
h -1
1


voidmain() { int@@ ways@@ (inta,int@@ min); intn,@@ b; scanf("%d",&n); while(n@@ -->@@ 0@@ ) { scanf("%d",&b); printf("%d\n",@@ ways@@ (b,@@ 2)); } } int@@ ways@@ (inta,int@@ min) { if(a<@@ min@@ )return0; intsum=0,@@ i; for(i=min@@ ;i<=@@ sqrt@@ (a@@ *1.0@@ );i++) { if(a%i==0) sum=sum+@@ ways@@ (a/i,i); } return@@ sum@@ +1; }  
c -1
h -1
intmain() { charstr[256],@@ substr@@ [256],@@ rep@@ [256]; inti,j,@@ flag@@ =1,@@ flag1@@ =0; cin>>@@ str@@ ; cin>>@@ substr@@ ; cin>>@@ rep@@ ; int@@ nlen@@ =strlen(@@ str); int@@ slen@@ =strlen(@@ substr@@ ); int@@ rlen@@ =strlen(@@ rep); if(@@ slen@@ !=@@ rlen@@ ) {@@ cout<<"@@ hehe@@ "@@ <<endl;} for(i=0;i<@@ nlen@@ ;i++) { for(j=0;j<@@ slen@@ ;j++) { if(@@ substr@@ [j]!=@@ str@@ [i+j@@ ]) {@@ flag@@ =0;@@ break;} else { flag=1; } } if(flag) { for(intk=0;k<@@ slen@@ ;k++) { str@@ [i+k@@ ]=@@ rep@@ [k]; } flag1@@ =1; } if(@@ flag1@@ ) {break;} } cout<<str@@ <<@@ '\n@@ '; return0; }  
c -1
h -1
0

intmain(){ inti,k,@@ n,m,@@ L@@ ,@@ l1,l2@@ ; chars[@@ 300],@@ a[@@ 300],b[@@ 300]; scanf("%s",@@ s@@ );@@ scanf("%s",@@ a);@@ scanf("%s",b); L@@ =strlen(@@ s@@ );@@ l1=strlen(@@ a);@@ l2@@ =strlen(b); n=0; for(i=0;i<@@ L@@ ;i++){ if(a[0]@@ ==@@ s[i]@@ ){ n++; for(k=1;k<@@ l1@@ ;k++){ if(s@@ [i+k@@ ]==@@ a[k]@@ ){@@ n@@ ++;@@ }else{@@ n@@ =0;@@ break;} } }@@ if(n==@@ l1@@ ){@@ break;} }@@ for(k=0;k<@@ i@@ ;k++@@ ){@@ printf("%c",@@ s[k]@@ );} for(k=0@@ ;i@@ !=@@ L@@ &&k@@ <@@ l2@@ ;k++){ printf("%c",@@ b[k@@ ]); }@@ for(k=i+@@ l1@@ ;k<@@ L@@ ;k++){ printf("%c",s@@ [k]); } return0; }  
c -1
h -1
voidmain() { intn; scanf("%d",&n); structpatient { charname@@ [@@ 16]; intage; }; structpatient@@ p[@@ n]; inti,j; for(i=0;i<n;i++) scanf("%s%d",@@ p[i].@@ name@@ ,&@@ p[i].age); structpatient@@ q@@ [n]; for(i=0,j@@ =0;i<n;i++) if(p@@ [i].age@@ >=60@@ )@@ strcpy(@@ q@@ [j].@@ name,@@ p[i].@@ name@@ ),@@ q@@ [j].age@@ =p@@ [i].age@@ ,j@@ ++; intk,@@ t; chars[@@ 16]; for(k=0;k<j@@ ;k++) { for(i=0;i<j@@ -k@@ -1;i++) if(q@@ [i].age@@ <@@ q@@ [i+1@@ ].age) strcpy(s,@@ q@@ [i].name@@ ),@@ strcpy(@@ q@@ [i].name@@ ,@@ q@@ [i+1].@@ name@@ ),@@ strcpy(@@ q@@ [i+1].@@ name,@@ s)@@ , t=@@ q@@ [i].age@@ ,@@ q@@ [i].age@@ =@@ q@@ [i+1@@ ].age@@ ,@@ q@@ [i+1@@ ].age=@@ t; } for(i=0;i<n;i++) if(p@@ [i].age@@ <60@@ )@@ strcpy(@@ q@@ [j].@@ name,@@ p[i].@@ name@@ ),@@ q@@ [j].age@@ =p@@ [i].age@@ ,j@@ ++; for(i=0;i<n;i++) puts(@@ q@@ [i].@@ name); putchar@@ (@@ '\n@@ '@@ ); }  
c -1
h -1
0

intmain() { chars1@@ [1000],@@ s2@@ [1000]; inti,j,k,@@ l1,@@ n,@@ l2@@ ; double@@ m; scanf("%lf",&@@ m); scanf("%s",@@ s1); scanf("%s",@@ s2); l1=strlen(@@ s1); l2=strlen(@@ s2); if(l1!=l2@@ )@@ printf("error"); else { n=0; for(i=0;i<l1;i++) { if(((@@ s1@@ [i]!='A')&&(@@ s1@@ [i]!='T')&&(@@ s1@@ [i]!='C')&&(@@ s1@@ [i]!='G')@@ )||((@@ s2@@ [i]!='A')&&(@@ s2@@ [i]!='T')&&(@@ s2@@ [i]!='C')&&(@@ s2@@ [i]!='G')@@ )) { printf("error"); exit@@ (@@ 0); } if(s1[i]==s2@@ [i])@@ n++; } if(1.0*@@ n/@@ l1@@ >=@@ m)@@ printf("yes"); elseprintf("no"); } return0; }  
c -1
h -1
voidmain() { intn,i,j=0,@@ k=0,@@ m,@@ a[100],b[100],@@ c[100]; char@@ p@@ [100][@@ 30],@@ q@@ [100][@@ 30],@@ r@@ [100][@@ 30],@@ s@@ [1@@ ][@@ 30]; scanf("%d",&n); for(i=0;i<n;i++) scanf("%s%d",@@ r@@ [i],&@@ a[i]); for(i=0;i<n;i++) { if(a[i]@@ >=60) { strcpy(@@ p@@ [j],@@ r@@ [i]); b[j]=@@ a[i]; j++; } if(a[i]@@ <60) { strcpy(@@ q@@ [k],@@ r@@ [i]); c@@ [k]=@@ a[i]; k++; } } for(k=0;k<j@@ -1;k++) { for(i=0;i<j@@ -k@@ -1;i++) if(b[i]@@ <b@@ [i+1]) { m=@@ b[i]; b[i]=b[i+1]; b[i+1]=@@ m; strcpy(s,@@ p[i]); strcpy(@@ p@@ [i],@@ p@@ [i+1]); strcpy(@@ p@@ [i+1],@@ s); } } for(i=0;i<j;i++) printf("%s\n",@@ p[i]); for(i=0;i<n@@ -j;i++) printf("%s\n",@@ q@@ [i]); }  
c -1
h -1
0

inta[@@ 300],b[@@ 300@@ ],c[@@ 600]; void@@ myfunc@@ () { int@@ la@@ ,lb@@ ,i; cin>>@@ la@@ >>@@ lb@@ ; for(i=0;i<@@ la;i++) cin>>a[i]; for(i=0;i<@@ lb@@ ;i++) cin>>b[i]; sort@@ (a,@@ a+@@ la@@ ); sort@@ (b,@@ b+@@ lb@@ ); for(i=0;i<@@ la;i++) c[i]=a[i]; for(i=@@ la@@ ;i<@@ la@@ +lb@@ ;i++) c[i]=b[i-@@ la@@ ]; for(i=0;i<@@ la@@ +lb@@ -1;i++) cout<<@@ c[i]@@ <<''; cout<<@@ c[i]; } intmain() { myfunc@@ (); return0; }  
c -1
h -1
intmain() { intn,a[@@ 10000@@ ],i,j,@@ x=0; scanf("%d\n",&n); for(i=0;i<=n-1;i++) { scanf("%d",&a[i]); } for(i=0;i<=n-1;i++) { if(a[i]==0) continue; for(j=i+1;j<=@@ n-1;j++) { if(a[i]==a[j]) { a[j]=0; } } } printf("%d",a[0]); for(i=1;i<=n-1;i++) { if(a[i]!=0) printf("%d",a[i]); } return0; }  
c -1
h -1
0

intmain() { chara[256],b[256],c[256]; cin>>a>>@@ b@@ >>@@ c; int@@ L@@ ,@@ l,@@ x,y; L@@ =strlen(a); l@@ =strlen(b); for(x=0;x@@ <=@@ L@@ -l@@ ;x@@ ++) { if(a[x@@ ]!=@@ b[0]) continue; else { for(y=0;y@@ <@@ l@@ ;y@@ ++) if(a[@@ x+@@ y@@ ]!=@@ b[@@ y@@ ]) break; if(y@@ !=@@ l) continue; else break; } } if(x==@@ L@@ -l@@ +1) cout<<@@ a@@ <<endl; else { inti=0; while(i@@ !=@@ x) { cout<<a[i]; i++; } cout<<@@ c; cout<<@@ a@@ +i@@ +l@@ <<endl; } return0; }  
c -1
h -1
struct@@ Patient@@ { charid[10]; intage; struct@@ Patient@@ *next; struct@@ Patient@@ *@@ pre@@ ; }; struct@@ Patient@@ *creat@@ (int@@ x); struct@@ Patient@@ *@@ sort@@ (struct@@ Patient@@ *@@ ); voidprint(struct@@ Patient@@ *@@ ); intmain() { struct@@ Patient@@ *@@ patient@@ ,*@@ patient2@@ ; intn,i; scanf("%d",&n); patient@@ =@@ creat@@ (n); patient2@@ =@@ sort(@@ patient@@ ); print(@@ patient2@@ ); } struct@@ Patient@@ *creat@@ (intx@@ ){ struct@@ Patient@@ *@@ p1,*p2,*@@ head@@ ,*p; inti; head=NULL; for(i=0;i<x;i++){ p1=(struct@@ Patient@@ *)malloc(@@ Len@@ ); if(i@@ ==0){@@ head@@ =p1;@@ head->@@ pre@@ =NULL@@ ;} else{@@ p2->next@@ =p1;@@ p1->@@ pre@@ =p2@@ ;} p2=p1; scanf("%s%d",@@ p1->id,&p1->age); } p1->next=NULL; returnhead; } struct@@ Patient@@ *@@ sort@@ (struct@@ Patient@@ *head@@ ){ struct@@ Patient@@ *@@ p1,*p2,*@@ temp@@ ,*p; temp@@ =(struct@@ Patient@@ *)malloc(@@ Len@@ ); p1=@@ p2=head; while(p1@@ ){ if(p1->age@@ >=60){ p2=p1->next; while(@@ p2@@ ){ if(@@ p2->age@@ >@@ p1->age@@ ){ temp@@ ->age=@@ p2->@@ age; strcpy(@@ temp@@ ->id,@@ p2->@@ id); p=@@ p2; while(@@ p->@@ pre@@ !=@@ p1@@ ){ strcpy(@@ p->@@ id,@@ p->@@ pre@@ ->id); p->age@@ =p->@@ pre@@ ->@@ age; p=@@ p->@@ pre@@ ; } strcpy(@@ p->@@ id,@@ p1->@@ id); p->age@@ =p1->@@ age; p1->age@@ =@@ temp->@@ age; strcpy(@@ p1->@@ id,@@ temp->@@ id); } p2=p2->next; } } p1=p1->next; } returnhead; } voidprint(struct@@ Patient@@ *head@@ ){ struct@@ Patient@@ *@@ p1,*p2,*@@ p; p=head; while(p@@ ){ if(p->@@ age@@ >=60){ printf("%s\n",p->id); } p=p->next; } p=head; while(p@@ ){ if(p->@@ age@@ <60){ printf("%s\n",p->id); } p=p->next; } }  
c -1
h -1
0

intmain() { intn,i,j,@@ t,@@ a[@@ 20000]; scanf("%d",&n); for(i=0;i<n;i++) { scanf("%d",&a[i]); } for(i=0;i<n;i++) { t=0; if(i==0)@@ printf("%d",a[0]); else { for(j=0;j<i;j++) { if(a[i]==@@ a[j])@@ t=t+1; } if(t@@ ==0)@@ printf("%d",a[i]); } } return0; }  
c -1
h -1
intmain(){ intn,@@ a[100][100],@@ row,col,@@ ROW1@@ ,@@ COL1@@ ,@@ ROW2@@ ,@@ COL2@@ ,sum; scanf("%d",&n); for(row=0;row<n;@@ row++){ for(col=0;col<n;col@@ ++){ scanf("%d",&a[@@ row][col@@ ]); } } int@@ flag=0; for(row=0;row@@ <n@@ &&@@ !@@ flag@@ ;@@ row++){ for(col=0;col@@ <n@@ &&@@ !@@ flag@@ ;col@@ ++){ if(a[@@ row][col@@ ]==0){ ROW1@@ =@@ row; COL1@@ =@@ col; flag=1; break; } } } flag=0; for(row@@ =@@ n-1;@@ row@@ >=0&&@@ !@@ flag@@ ;@@ row@@ --){ for(col@@ =@@ n-1;@@ col@@ >=0;@@ col@@ --){ if(a[@@ row][col@@ ]==0){ ROW2@@ =@@ row; COL2@@ =@@ col; flag=1; break; } } } sum=(@@ ROW2@@ -@@ ROW1@@ -1)*(@@ COL2@@ -@@ COL1@@ -1); printf("%d\n",sum); return0; }  
c -1
h -1
0

intmain(){ intn,k,@@ j,@@ biaoji@@ =0,@@ m; inti,@@ a[@@ max@@ ]; scanf("%d%d",&n,&k); for(i=0;i<n;i++) { scanf("%d",&a[i]); } for(i=0;i<n;i++) { m=@@ k-@@ a[i]; for(j=i;j<@@ n;j++) { if(m==@@ a[j]) { biaoji@@ =1; break; } } } if(@@ biaoji@@ ) printf("yes"); else printf("no"); return0; }  
c -1
h -1
intmain() { intn,i,@@ height@@ [@@ 30],@@ num[@@ 30],@@ j,@@ max=@@ -1; cin>>n; for(i=0;i<n;i++) cin>>@@ height@@ [i]; for(i=0;i<n;i++) num[i]@@ =1; for(i=1;i<n;i++) for(j=i-1;j>=0;j--) { if(@@ height@@ [j]>=@@ height@@ [i]@@ &&@@ num[j]@@ +1>@@ num@@ [i]) num[i]=@@ num@@ [j]+1; } for(i=1;i<n;i++) if(num@@ [i]>max) max=@@ num[i]; cout<<max<<endl; }  
c -1
h -1
0

voidmain() { inti; long@@ a[@@ 5@@ ]; intb[@@ 5@@ ],c[@@ 5@@ ],@@ g@@ [5@@ ]; i=1; while(i<=@@ 5) { scanf("%ld%d%d",&@@ a[i],&@@ b[i]@@ ,&@@ c[i]); i++; } i=1; while(i<=@@ 5) { g@@ [i]=0; switch(@@ b[i]) { case12:@@ g[i]@@ +=@@ 30; case11:@@ g[i]@@ +=@@ 31; case10:@@ g[i]@@ +=@@ 30; case9:@@ g[i]@@ +=@@ 31; case8:@@ g[i]@@ +=@@ 31; case7:@@ g[i]@@ +=@@ 30; case6:@@ g[i]@@ +=@@ 31; case5:@@ g[i]@@ +=@@ 30; case4:@@ g[i]@@ +=@@ 31; case3:@@ g[i]@@ +=@@ 28; case2:@@ g[i]@@ +=@@ 31; case1:@@ g[i]@@ +=@@ 0@@ ;break; default@@ :@@ printf("error\n"); } if(((@@ a[i]@@ %4==0&&@@ a[i]@@ %100!=0@@ )||(@@ a[i]@@ %@@ 400==0)@@ )&&(@@ b[i]@@ >=@@ 3@@ )) c[i]=@@ c[i]@@ +1; printf("%d\n",@@ g@@ [i]+@@ c[i]); i++; } }  
c -1
h -1
intmain() { intn,i,@@ s[@@ 20000],@@ a[100]; scanf("%d",&n); for(i=0;i<n;i++) scanf("%d",&s[i]); for(i=0;i<100;i++) a[i]=0; printf("%d",@@ s@@ [0]); a[@@ s[0]@@ ]=1; for(i=1;i<n;i++) if(a[@@ s[i]@@ ]==0) { printf("%d",@@ s[i]); a[@@ s[i]@@ ]=1; } return0; }  
c -1
h -1
0

intmain() { introw,col,@@ i,j,k; cin>>row>>col; inta[@@ row][col]; for(i=0;i<row;i++) for(j=0;j<col;j++) cin>>a[i][j]; for(j=0;j<col;j++) for(i=0@@ ,k@@ =0;i<@@ row@@ &&(@@ j@@ -k@@ )@@ >=0@@ ;i++@@ ,k++) cout<<a[i]@@ [j@@ -k@@ ]<<endl; for(i=1;i<row;i++) for(j=col-1@@ ,k@@ =0@@ ;j>=0@@ &&(@@ i@@ +k)@@ <row@@ ;j--@@ ,k++) cout<<@@ a[i@@ +k@@ ][j]@@ <<endl; return0; }  
c -1
h -1
voidmain() {@@ inti,j,@@ k@@ ,*@@ p@@ [100],@@ m,n; scanf("%d%d",&m,&n); for(i=0;i<m;i++) p[i]=@@ (int*)malloc(n*sizeof(int)); for(i=0;i<m;i++) for(j=0;j<n;j++) scanf("%d",@@ p[i]@@ +j); for(j=0;j<n;j++) {@@ k=j; for(i=0;i<m;i++) {printf("%d\n",@@ *(p@@ [i]@@ +k@@ --@@ )); if(k@@ <0@@ )@@ break;}} for(i=1;i<m;i++) {@@ k=i; for(j=n-1;j>=0;j--) {printf("%d\n",@@ *(p@@ [k@@ ++@@ ]@@ +j)); if(k==@@ m)@@ break;}} }  
c -1
h -1
1


structpatient { charid[10]; short@@ intage; }; voidmain() { inti,j,k,l,@@ n; structpatient@@ pat@@ [100],@@ temp; structpatient@@ pa@@ [100]; scanf("%d",&n); for(i=0;i<n;i++) scanf("%s%d",&@@ pat[i].@@ id,&@@ pat@@ [i].age); for(i=0,j@@ =0;i<n;i++) if(pat@@ [i].age>=60) { pa@@ [j]=@@ pat@@ [i]; j++; } for(k=0;k<j@@ -1;k++) for(l@@ =j@@ -1;@@ l>@@ k;@@ l@@ --) if(pa@@ [l@@ ].age@@ >@@ pa@@ [l@@ -1@@ ].age) { temp=@@ pa@@ [l]; pa@@ [l@@ ]=@@ pa@@ [l@@ -1]; pa@@ [l@@ -1@@ ]=temp; } for(k=0;k<j@@ ;k++) printf("%s\n",@@ pa@@ [k].@@ id); for(i=0;i<n;i++) if(pat@@ [i].age<60) printf("%s\n",@@ pat@@ [i].id); }  
c -1
h -1
intleap@@ (int@@ ); intmain() { int@@ daymonth@@ [2][@@ 12]={31,@@ 28,31,30,31,30,31,31,30,31,30,31@@ ,31,@@ 29,31,30,31,30,31,31,30,31,30,31}; int@@ YEAR@@ ,@@ MON@@ ,@@ DAY@@ ,i,@@ counter@@ =0; cin>>@@ YEAR@@ >>@@ MON@@ >>@@ DAY@@ ; for(i=0;i<@@ MON@@ -1;i++) { counter@@ +=@@ daymonth@@ [@@ leap@@ (@@ YEAR@@ )@@ ]@@ [i]; } counter@@ +=@@ DAY@@ ; cout<<@@ counter@@ <<endl; return0; } intleap@@ (int@@ YEAR@@ ) { if((@@ YEAR@@ %@@ 4==0)&&(@@ YEAR@@ %100!=0@@ )||(@@ YEAR@@ %@@ 400==0)) return1; else return0; }  
c -1
h -1
0

intmain() { introw,@@ column@@ ,a[@@ 110][110@@ ]={0},@@ i,j,@@ row1@@ =0,@@ column1@@ =0; cin>>row@@ >>@@ column@@ ; for(i=0;i<row;i++) for(j=0;j<@@ column@@ ;j++) { cin>>*(*(a+i)+j); } for(i=0;i<(@@ row@@ +@@ column@@ -1);i++) { if(i<@@ column@@ ) column1@@ =i; else@@ column1@@ =@@ column@@ -1; while(@@ column1@@ >=0) { if((i@@ -@@ column1@@ )@@ <row) {@@ cout<<*(*(a@@ +i@@ -@@ column1@@ )+@@ column1@@ )<<endl; column1@@ --@@ ;} elsebreak; } } return0; }  
c -1
h -1
inta[@@ max@@ ],@@ k; int@@ find@@ (int@@ p) { inti,@@ temp@@ =0,@@ t; if(p==@@ k@@ -1)@@ return1; for(i=@@ p@@ +1;i<=@@ k-1;i++) { if(a[@@ p@@ ]>=@@ a[i]) { t=@@ find@@ (i); if(temp@@ <@@ t)@@ temp=@@ t; } } return@@ temp@@ +1; } main() { inti,j,@@ p=0,@@ t,@@ ans=0; scanf("%d",&k); for(i=0;i<=k-1;i++) scanf("%d",&a[i]); for(i=0;i<=k-1;i++) { t=@@ find@@ (i); if(@@ ans@@ <@@ t)@@ ans=@@ t; } printf("%d",@@ ans); }  
c -1
h -1
0

main() { intm=0,@@ n,i,j,@@ t=0; intnum@@ [100]; inta[100]; charstring@@ [11]; char@@ stm@@ [100][@@ 11]; charstr@@ [100][@@ 11]; scanf("%d",&n); for(i=0;i<n;i++) { scanf("%s",@@ stm@@ [i]); scanf("%d",&@@ num[i]); } j=0; for(i=0;i<n;i++) { if(num@@ [i]@@ >=60) { a[j]=@@ num[i]; strncpy@@ (@@ str@@ [j],@@ stm@@ [i],@@ 10@@ ); j++; t@@ =j@@ -1; } } for(j=0;j<@@ t;j++) { for(i=0;i<@@ t@@ -j;i++) { if(a[i]@@ <@@ a[i+1]) { m=@@ a[i]; a[i]=a[i+1]; a[i+1]=@@ m; strncpy@@ (@@ string,@@ str@@ [i],@@ 10@@ ); strncpy@@ (@@ str@@ [i],@@ str@@ [i+1],@@ 10@@ ); strncpy@@ (@@ str@@ [i+1],@@ string,@@ 10@@ ); } } } for(i=0;i<=@@ t;i++) printf("%s\n",@@ str[i]); for(i=0;i<n;i++) { if(num@@ [i]@@ <60) printf("%s\n",@@ stm@@ [i]); } getchar(); getchar(); }  
c -1
h -1
intmain() { inta[100][100@@ ]={@@ 2@@ }; inti,j,n,@@ n1@@ =-1,@@ n2@@ =-1,@@ n3@@ ,@@ n4@@ ; scanf("%d",&n); for(i=0;i<n;i++) { for(j=0;j<n;j++) { scanf("%d",&a[i][j]); } } for(i=0;i<n;i++) { for(j=0;j<n;j++) { if(a[i][j]==0) { n3@@ =i; n4@@ =j; if(@@ n1@@ >=0@@ ||@@ n2@@ >=0) continue; else { n1@@ =i; n2@@ =j; } } } } printf("%d",(@@ n3@@ -@@ n1@@ -1)*(@@ n4@@ -@@ n2@@ -1)); return0; }  
c -1
h -1
0

intmain(intargc,char*argv[]) { intyear,month,@@ d; int@@ result=0; inti; inta[@@ 12]={31,@@ 28@@ ,31,30,31,30,31@@ ,31@@ ,31@@ ,31,30@@ ,31@@ }; scanf("%d%d%d",&year,&month,&@@ d); if((year%4==0&&year%100!=0@@ )||@@ year%@@ 400@@ ==0){ a[2@@ ]=a[@@ 2@@ ]+1; for(i=1;i<@@ month@@ ;i++){ result+=@@ a[i]; } result+=@@ d; } else for(i=1;i<@@ month@@ ;i++){ result+=@@ a[i]; } result+=@@ d; printf("%d\n",@@ result); return0; }  
c -1
h -1
intmain(){ inty,m,d,@@ n; scanf("%d%d%d",&@@ y,@@ &@@ m,@@ &@@ d); if((@@ y%100!=0@@ &&@@ y%@@ 4@@ ==0)||(@@ y%@@ 400==0)) { switch(@@ m){ case1:@@ n=@@ d;break; case2:@@ n=31+@@ d;break; case3:@@ n=@@ 60@@ +d;break; case4:@@ n=@@ 91@@ +d;break; case5:@@ n=@@ 121@@ +d;break; case6:@@ n=@@ 152@@ +d;break; case7:@@ n=@@ 182@@ +d;break; case8:@@ n=@@ 213@@ +d;break; case9:@@ n=@@ 244@@ +d;break; case10:@@ n=@@ 274@@ +d;break; case11:@@ n=@@ 305@@ +d;break; default@@ :@@ n=@@ 335@@ +d; } } else { switch(@@ m){ case1:@@ n=@@ d;break; case2:@@ n=31+@@ d;break; case3:@@ n=@@ 59@@ +d;break; case4:@@ n=@@ 90@@ +d;break; case5:@@ n=@@ 120@@ +d;break; case6:@@ n=@@ 151@@ +d;break; case7:@@ n=@@ 181@@ +d;break; case8:@@ n=@@ 212@@ +d;break; case9:@@ n=@@ 243@@ +d;break; case10:@@ n=@@ 273@@ +d;break; case11:@@ n=@@ 304@@ +d;break; default@@ :@@ n=@@ 334@@ +d; } } printf("%d",n); return0; }  
c -1
h -1
1


voidmain() { intr,@@ c@@ ,*@@ p@@ [100],@@ i,j,@@ v@@ ; for(i=0;i<100;i++) p[i]=@@ (int*)malloc(@@ 100*sizeof(int)); scanf("%d%d\n",&@@ r@@ ,&c); for(i=0;i<@@ r;i++) for(j=0;j<@@ c;j++) scanf("%d",@@ (p@@ [i]@@ +j)); for(@@ v@@ =0;@@ v@@ <=@@ r@@ +c@@ -2@@ ;@@ v@@ ++) { for(i=0;i<=@@ v@@ ;i++) { if(i<@@ r@@ ) { j=@@ v@@ -@@ i; if(j<@@ c)@@ printf("%d\n",*(p@@ [i]@@ +j)); } } } }  
c -1
h -1
intmain() { int@@ A@@ ,@@ B@@ ,@@ C@@ ,@@ a,b,c,d,@@ e,f,@@ g,@@ h,@@ i,j,k,@@ l,@@ m; scanf("%d%d%d",&@@ A@@ ,&@@ B@@ ,&@@ C@@ ); a=@@ 31; if((@@ A@@ %4==0&&@@ A@@ %100!=0@@ )||@@ A@@ %@@ 400==0) b=@@ 29; else b=@@ 28; c=@@ 31; d=@@ 30; e=@@ 31; f=@@ 30; g=@@ 31; h=@@ 31; i=@@ 30; j=@@ 31; k=@@ 30; l=@@ 31; if(@@ B@@ ==1) m=@@ C@@ ; if(@@ B@@ ==@@ 2) m=@@ C@@ +@@ a; if(@@ B@@ ==@@ 3) m=@@ C@@ +a+@@ b; if(@@ B@@ ==@@ 4) m=@@ C@@ +a+@@ b@@ +c; if(@@ B@@ ==@@ 5) m=@@ C@@ +a+@@ b+@@ c+@@ d; if(@@ B@@ ==@@ 6) m=@@ C@@ +a+@@ b+@@ c+@@ d+@@ e; if(@@ B@@ ==@@ 7) m=@@ C@@ +a+@@ b+@@ c+@@ d+@@ e+@@ f; if(@@ B@@ ==@@ 8) m=@@ C@@ +a+@@ b+@@ c+@@ d+@@ e+@@ f@@ +@@ g; if(@@ B@@ ==@@ 9) m=@@ C@@ +a+@@ b+@@ c+@@ d+@@ e+@@ f@@ +@@ g@@ +@@ h; if(@@ B@@ ==@@ 10) m=@@ C@@ +a+@@ b+@@ c+@@ d+@@ e+@@ f@@ +@@ g@@ +@@ h@@ +@@ i; if(@@ B@@ ==@@ 11) m=@@ C@@ +a+@@ b+@@ c+@@ d+@@ e+@@ f@@ +@@ g@@ +@@ h@@ +i@@ +j@@ ; if(@@ B@@ ==@@ 12) m=@@ C@@ +a+@@ b+@@ c+@@ d+@@ e+@@ f@@ +@@ g@@ +@@ h@@ +i@@ +j@@ +@@ k; printf("%d\n",m); return0; }  
c -1
h -1
0

intmain() { intn,k,@@ i; cin>>n>>k; inta[1000]; for(i=0;i<n;i++) { cin>>a[i]; } intj=0; for(i=0;i<n-1;i++) { for(j=i+1;j<n;j++) { if(k==@@ a[i]+@@ a[j]) { cout<<"yes@@ "<<endl; return0; } } } cout<<"no@@ "<<endl; }  
c -1
h -1
intmain() { charstr[256],@@ sub[256],@@ rep@@ [256]; scanf("%s%s%s",@@ str,@@ sub,@@ rep); intm,n,i,j,@@ e,@@ k; n=strlen(@@ str); m=strlen(@@ sub); for(i=0;i<n;i++) { e=0; for(j=0;j<m;j++) { if(str@@ [i+j]==@@ sub@@ [j]@@ )@@ e++; } if(e@@ ==@@ m@@ )break; } if(e@@ ==@@ m) { for(k=0;k<@@ i@@ ;k++)@@ printf("%c",str@@ [k]); printf("%s",@@ rep); for(k=i@@ +m@@ ;k<@@ n@@ ;k++)@@ printf("%c",str@@ [k]); }else{@@ printf("%s",@@ str@@ );} return0; }  
c -1
h -1
0

intmain(){ intn=0; cin>>n; int@@ result@@ [100]; for(inti=0;i<n;i++){ int@@ x=0; int@@ y=0; cin>>x@@ >>@@ y; int@@ r@@ [100][100]; for(intj=0;j<@@ x@@ ;j++){ for(intk=0;k<@@ y@@ ;k++){ cin>>@@ r@@ [j]@@ [k]; } } result@@ [i]=0; for(intj=0;j<@@ x@@ ;j++){ if(j@@ ==0||j==@@ x@@ -1){ for(intk=0;k<@@ y@@ ;k++){ result@@ [i]@@ +=@@ r@@ [j]@@ [k]; } } else{ result@@ [i]@@ +=@@ r@@ [j]@@ [0]; result@@ [i]@@ +=@@ r@@ [j]@@ [y@@ -1]; } } } for(inti=0;i<n;i++){ cout<<@@ result@@ [i]; if(i<@@ n-1)@@ cout<<endl; } return0; }  
c -1
h -1
intmain(){ chars[@@ 257@@ ]={'@@ 0'@@ },@@ sub@@ [257@@ ]={'@@ 0'@@ },@@ rep@@ [257@@ ]={'@@ 0'@@ },@@ temp@@ [257@@ ]={'@@ 0'@@ }; scanf("%s%s%s",@@ s,@@ sub,@@ rep); inti,j,k,@@ len1,len2,@@ time@@ ; len1@@ =strlen(s); len2=strlen(@@ sub); for(i=0;i<len1;i++){ k=i; for(j=0;j<len2@@ ;j++@@ ,i@@ ++){ temp@@ [j]=@@ s[i]; } i=@@ k; if(strcmp(@@ temp,@@ sub)@@ ==0){ time@@ =i; break; } } if(strcmp(@@ temp,@@ sub)@@ ==0){ for(i=@@ time@@ ,j@@ =0;i<@@ time@@ +len2@@ ;i++,j@@ ++){ s[i]=@@ rep@@ [j]; } } printf("%s",s); return0; }  
c -1
h -1
0

structbook { intnum; char@@ wr@@ [26]; structbook*next; }; voidmain() { inti,n,@@ m=0,@@ j,@@ a,b,@@ c; ints@@ [100]={0}; scanf("%d",&n); structbook@@ *head,*@@ p1,*p2,*@@ p; p1=p2=(struct@@ book@@ *)malloc(LEN); scanf("%d%s",&p1->num,p1->@@ wr@@ ); head=NULL; while(m@@ !=@@ n-1) { m=m+1; if(m@@ ==1)head=p1; elsep2->next=p1; p2=p1; p1=(structbook@@ *)malloc(LEN); scanf("%d%s",&p1->num,p1->@@ wr@@ ); } p2->next=p1; p2=p1; p2->next=NULL; p=head; do { b=strlen(@@ p->@@ wr@@ ); for(j=0;j<@@ b;j++) s[@@ p->@@ wr@@ [j]@@ ]++; p=p->next; }while(p@@ !=NULL); a=@@ s[@@ 65@@ ]; c=@@ 65@@ ; for(i=@@ 66@@ ;i<@@ 91@@ ;i++) if(a<@@ s@@ [i]) { a=@@ s[i]; c=i; } printf("%c\n%d\n",@@ c,@@ a); p=head; do { b=strlen(@@ p->@@ wr@@ ); for(j=0;j<@@ b;j++) if(p->@@ wr@@ [j]==@@ c) printf("%d\n",p->num); p=p->next; }while(p@@ !=NULL); }  
c -1
h -1
intmain(){ inti; doublea,@@ k=0; char@@ x[@@ 500],@@ y[@@ 500]; scanf("%lf",&a); scanf("%s",@@ x); scanf("%s",@@ y); if(strlen(@@ x@@ )!=strlen(@@ y@@ )){ printf("error"); return0; }else{ for(i=0;@@ x[i]@@ !='\0'@@ ;i@@ +=@@ 1){ if((x@@ [i]!='A'&&@@ x@@ [i]!='T'&&@@ x@@ [i]!='C'&&@@ x@@ [i]!='G')||(@@ y@@ [i]!='A'&&@@ y@@ [i]!='T'&&@@ y@@ [i]!='C'&&@@ y@@ [i]!='G')){ printf("error"); return0; } } for(i=0;@@ x[i]@@ !='\0'@@ ;i@@ +=@@ 1){ if(x@@ [i]==@@ y@@ [i]){ k@@ +=1; } } if(k@@ /i@@ >@@ a){ printf("yes"); }else{ printf("no"); } } return0; }  
c -1
h -1
0

intmain(){ intk,@@ n,@@ i,@@ m,@@ x,y,@@ z,@@ c; c=0; scanf("%d",&n); scanf("%d",&k); inta[n]; for(i=0;i<n;i++){ scanf("%d",&(@@ a[i]@@ )); } for(i=0;i<n;i++){ for(x=0;x@@ <n;@@ x@@ ++){ if(x==@@ i){ continue; } if(a[x@@ ]+@@ a[i]==@@ k){ c=1; } } } if(c@@ ==0) { printf("no"); } else { printf("yes"); } return0; }  
c -1
h -1
intmain(){ intarray[@@ 120@@ ][@@ 120@@ ]; introw,col,@@ i,j,@@ sum; cin>>row>>col; for(i=0;i<row;i++) for(j=0;j<col;j++) cin>>array[i][j]; i=0; j=0; while(i@@ <row@@ &&j@@ <col@@ ){ cout<<array@@ [i][j]<<endl; sum@@ =i@@ +j@@ ; i++; j--; if(i==@@ row@@ ||j==@@ -1){ sum=sum+1; if(i@@ =@@ row@@ ){ i=0; j=@@ sum@@ -@@ i; if(j@@ >=@@ col@@ ){ j=col-1; i=@@ sum@@ -j@@ ; } }else{ j=col-1; i=@@ sum@@ -j@@ ; if(i<@@ 0@@ ){ i=0; j=@@ sum@@ -@@ i; } } } } return0; }  
c -1
h -1
0

structbook { intnum; charname@@ [20]; }; voidmain() { structbook@@ c[@@ 1000]; inti,j,n,@@ k,@@ max,@@ l,@@ d@@ [26],@@ a; intb[@@ 26]={0}; scanf("%d",&n); for(k=0;k<n;k++) { scanf("%d%s",&@@ c@@ [k].@@ num,@@ c@@ [k].@@ name); for(i=0;i<strlen(@@ c@@ [k].@@ name@@ );i++) { for(j=0;j<26;j++) { if(@@ 'A'+@@ j==@@ c@@ [k].@@ name@@ [i]) break; } b[j]=@@ b[j]@@ +1; } } for(a=0;a@@ <26@@ ;a@@ ++) d@@ [a@@ ]=@@ b[@@ a@@ ]; max=@@ b[0]; for(l=0;l<@@ 26@@ ;l++) if(@@ b[l@@ ]@@ >max) max=@@ b[l@@ ]; for(a=0;a@@ <26@@ ;a@@ ++) { if(d@@ [a@@ ]==@@ max) break; } printf("%c\n",@@ 'A'+@@ a); printf("%d\n",max); for(k=0;k<n;k++) { for(i=0;i<strlen(@@ c@@ [k].@@ name@@ );i++) { if(@@ 'A'+@@ a@@ ==@@ c@@ [k].@@ name@@ [i]) { printf("%d\n",c@@ [k].@@ num); break; } } } }  
c -1
h -1
intmain() { int@@ shuzu@@ [@@ 1002@@ ][@@ 1002@@ ]; intn,i,j,@@ x1,y1,x2,y2@@ ; cin>>n; for(i=1;i<=n;i++) for(j=1;j<=n;j++) cin>>@@ shuzu@@ [i][j]; for(i=1;i<=n;i++) for(j=1;j<=n;j++) { if(shuzu@@ [i][j]==0&&@@ shuzu@@ [i]@@ [j+1]@@ ==0&&@@ shuzu@@ [i+1][j]@@ ==0) { x1=i; y1=j; } if(shuzu@@ [i][j]==0&&@@ shuzu@@ [i]@@ [j-1]@@ ==0&&@@ shuzu@@ [i-1][j]@@ ==0) { x2=i; y2=j; } } cout<<(@@ x2-x1@@ +1)*(@@ y2-y1@@ +1)@@ -2@@ *(@@ x2-x1@@ +1)@@ -2@@ *(@@ y2-y1@@ +1)@@ +@@ 4@@ <<endl; return0; }  
c -1
h -1
0

structdata@@ { int@@ code@@ ; charauthor@@ [20]; }; struct@@ letter@@ { char@@ let@@ ; int@@ count; }; intmain() { intn,i,j,k,@@ t,@@ max; structdata@@ a[100]; struct@@ letter@@ l@@ [26]; scanf("%d",&n); for(i=0;i<n;i++) { scanf("%d",&@@ a[i].@@ code@@ ); gets(@@ a[i].@@ author); } for(i=0;i<26;i++) { l@@ [i].@@ let@@ =i+65; l@@ [i].@@ count=0; } for(i=0;i<n;i++) { for(j=0;@@ a[i].@@ author@@ [j]!='\0';j++) { for(k=0;k<26;k++) { if(a[i].@@ author@@ [j]==@@ l@@ [k].@@ let@@ ) l@@ [k].@@ count++; } } } max=0; for(k=0;k<26@@ ;k++){ if(l@@ [k].@@ count@@ >max) {max=@@ l@@ [k].@@ count; t=@@ k@@ ;} } printf("%c\n",@@ l@@ [t@@ ].@@ let@@ ); printf("%d\n",@@ l@@ [t@@ ].@@ count); for(i=0;i<=n-1;i++) { for(j=0;@@ a[i].@@ author@@ [j]!='\0';j++) { if(a[i].@@ author@@ [j]==@@ l@@ [t@@ ].@@ let@@ ) printf("%d\n",@@ a[i].@@ code@@ ); } } return0; }  
c -1
h -1
intmain() { intk,@@ most@@ ; inta[@@ 25],@@ f@@ [25]; cin>>k; for(inti=0;i<k;i++) { cin>>a[i]; } f@@ [0]=1; for(inti=1;i<@@ k;i++) { most@@ =0; for(intj=0;j<i;j++) { if(a[j]>=@@ a[i]) { if(f@@ [j]>@@ most@@ ) { most@@ =@@ f@@ [j]; } } } f[i]=@@ most@@ +1; } most@@ =0; for(inti=0;i<k;i++) { if(f@@ [i]>@@ most@@ ) most@@ =@@ f[i]; } cout<<@@ most@@ <<endl; return0; }  
c -1
h -1
0

int@@ factor@@ (int@@ N@@ ,int@@ min) { int@@ result@@ =1,i; if(N@@ <@@ min) { return0; } for(i=min@@ ;i<@@ N;i++) { if(N@@ %i==0) { result+=@@ factor@@ (@@ N@@ /i,i); } } returnresult; } main() { intn=0,@@ i=0,@@ x=0,@@ y=0; scanf("%d",&n); for(i=0;i<n;i++) { scanf("%d",&x); y=@@ factor@@ (x,@@ 2); printf("%d\n",@@ y); } return0; }  
c -1
h -1
intmain() { intn,i,j,@@ *@@ p=@@ NULL@@ ,@@ mianji@@ ; int@@ zhongliu@@ [1000][1000]; int@@ zuoshang@@ [2@@ ],@@ youxia@@ [2]; p=@@ zhongliu@@ [0]; cin>>n; for(i=0;i<n;i++) for(j=0;j<n;j++) { cin>>@@ *(p@@ +i@@ *@@ n@@ +j); } for(i=0;i<n;i++) for(j=0;j<n;j++) { if(@@ *(p@@ +i@@ *@@ n@@ +j)@@ ==0&&@@ *(p@@ +i@@ *@@ n@@ +j+1)@@ ==0&&@@ *(p+@@ (i@@ +1)@@ *@@ n@@ +j)@@ ==@@ 0 &&j@@ +1@@ <n@@ &&i@@ +1@@ <n) { zuoshang@@ [0]=@@ i; zuoshang@@ [1]=@@ j; } elseif(@@ *(p@@ +i@@ *@@ n@@ +j)@@ ==0&&@@ *(p@@ +i@@ *@@ n@@ +j@@ -1)@@ ==0&&@@ *(p+@@ (i@@ -1)*@@ n@@ +j)@@ ==@@ 0 &&j@@ -1@@ >0@@ &&i@@ -1@@ >0) { youxia@@ [0]=@@ i; youxia@@ [1]=@@ j; } } mianji@@ =(@@ youxia@@ [0]@@ -@@ zuoshang@@ [0]@@ -1)*(@@ youxia@@ [1]@@ -@@ zuoshang@@ [1]@@ -1); cout<<@@ mianji@@ <<endl; return0; }  
c -1
h -1
0

int@@ reek@@ (inti,int@@ j) { intk,@@ g=0; for(k=j@@ ;k<@@ i;k++) { if((i@@ %@@ k@@ ==0)&&(@@ k@@ !=1@@ )) { g@@ =1; break; } elsecontinue; } if(g@@ ==0)@@ return1; else { intnum@@ =1; for(k=j@@ ;k<=@@ sqrt@@ (i@@ )@@ ;k++) { if((i@@ %@@ k@@ ==0)&&(@@ k@@ !=1@@ )) num+=@@ reek@@ (i@@ /@@ k,@@ k); elsecontinue; } returnnum; } } intmain() { intn,i,@@ a[1000]; cin>>n; for(i=0;i<n;i++) { cin>>@@ a[@@ n]; cout<<@@ reek@@ (@@ a[n@@ ],@@ 1@@ )<<endl; } return0; }  
c -1
h -1
intmain(){ doublen,@@ r; intl,@@ t,@@ i; chara[501],b[501]; t=0; scanf("%lf",&n); scanf("%s@@ %s",&@@ a,&b); l@@ =strlen(a); if(l@@ !=strlen(b@@ )){ printf("error"); return0; } for(i=0;i<l;i++){ if((a[i]!='@@ A'&&a[i]!='T'&&a[i]!='C'&&a[i]!='G')||(b[i]!='A'&&b[i]!='T'&&b[i]!='C'&&b[i]!='@@ G')){ printf("error"); return0; } } for(i=0;i<l;i++){ if(a[i]==b[i]@@ )@@ t++; } r=@@ t@@ *1.0/@@ l; if(r@@ >@@ n)@@ printf("yes"); elseprintf("no"); return0; }  
c -1
h -1
0

intmain() { introw,col; cin>>row>>col; int@@ array[100][100]; inti,j,k; for(i=0;i<=@@ row-1;i++) { for(j=0;j<=@@ col@@ -1;j++) { cin>>array[i][j]; } } if(col@@ >@@ row) { for(k=0;k<=@@ row@@ -1;k++) { i=0; j=@@ k; do { cout<<array@@ [i][j]<<endl; j--; i++; } while(j@@ !=-1); } for(k=@@ row@@ ;k<@@ col-1@@ ;k++) { ints=0; j=@@ k; i=0; do { cout<<array@@ [i][j]<<endl; s++; j--; i++; } while(@@ s@@ !=@@ row@@ ); } for(k=0;k<=@@ row@@ -1;k++) { j=col-1; i=@@ k; do { cout<<array@@ [i][j]<<endl; j--; i++; } while(i@@ !=@@ row@@ ); } } if(row@@ ==@@ col) { for(k=0;k<=@@ row@@ -1;k++) { i=0; j=@@ k; do { cout<<array@@ [i][j]<<endl; j--; i++; } while(j@@ !=-1); } for(k=1;k<=@@ row@@ -1;k++) { j=col-1; i=@@ k; do { cout<<array@@ [i][j]<<endl; j--; i++; } while(i@@ !=@@ row@@ ); } } if(col@@ <row) { for(k=0;k<=@@ col-1@@ ;k++) { i=0; j=@@ k; do { cout<<array@@ [i][j]<<endl; j--; i++; } while(j@@ !=-1); } for(k=1;k<@@ row@@ -col@@ ;k++) { ints=0; j=col-1; i=@@ k; do { cout<<array@@ [i][j]<<endl; s++; j--; i++; } while(@@ s@@ !=@@ col); } for(k=@@ row@@ -col@@ ;k<=@@ row@@ -1;k++) { j=col-1; i=@@ k; do { cout<<array@@ [i][j]<<endl; j--; i++; } while(i@@ !=@@ row@@ ); } } return0; }  
c -1
h -1
voidmain() { chara[@@ 300@@ ],b[100],@@ e@@ [100],@@ c@@ [100]={0},@@ g@@ [100]={0},@@ s[@@ 300@@ ]={0}; intj,@@ i,k,@@ f,@@ l,@@ d,@@ h@@ =1; gets(a); gets(b); gets(@@ e); k@@ =strlen(a); d@@ =strlen(b); for(i=0;i<@@ k@@ &&@@ h@@ <@@ 2@@ ;i++) { if(a[i]==@@ b[0]) { j=i; strncpy@@ (@@ g,@@ a,@@ j); for(@@ f@@ =0;@@ f@@ <@@ d@@ ;@@ f@@ ++@@ ,j@@ ++) { c[@@ f@@ ]=@@ a[j]; } j=i; for(@@ f@@ =0,@@ l@@ =j@@ +d@@ ;@@ f@@ <k@@ -j@@ -@@ d@@ ;@@ f@@ ++,@@ l++) { s[@@ f@@ ]=a[@@ l@@ ]; } s@@ [k@@ -@@ d@@ -j@@ ]=0; if(@@ strcmp@@ (b,@@ c)@@ ==0) { h=@@ h@@ +1; printf("%s",@@ g@@ ); printf("%s",@@ e); printf("%s",s); } } } if(h@@ ==1) printf("%s",a); }  
c -1
h -1
0

void@@ decprime@@ (int@@ begain@@ ,int@@ a); intsum@@ =1; intmain() { intn,@@ a; int@@ k;@@ cin>>n; for(k=0;k<n;k++){ cin>>a; decprime@@ (2,@@ a); cout<<sum<<endl; sum=1; } return0; } void@@ decprime@@ (int@@ begain@@ ,int@@ a) { inti; for(i=@@ begain@@ ;i<=@@ a;i++){ if(a@@ %i==0&&@@ i<=@@ a/@@ i) { sum++; decprime@@ (i,@@ a/@@ i); } if(i>@@ a/@@ i@@ )break; } }  
c -1
h -1
intmain(){ intn,m,@@ i,j,@@ a[100][100],@@ x=0,@@ y=0,@@ k=0,@@ l=0; scanf("%d%d",&n,&m); for(i=0;i<n;i++) for(j=0;j<m;j++) scanf("%d",&a[i][j]); for(;@@ ;@@ ){ printf("%d\n",@@ a[x@@ ][y@@ ]); if(x==@@ n-1@@ &&@@ y@@ ==@@ m@@ -1)break; if(y@@ ==0||@@ x@@ ==@@ n-1){ if(l@@ ==@@ m-1)@@ k++; else@@ l++; x=@@ k;@@ y=@@ l; continue; } x@@ ++;@@ y@@ --; } }  
c -1
h -1
0

intfenjie@@ (int,int); intmain() { inti,n,@@ t,@@ r,@@ num; cin>>n; for(i=1;i<=n;i++) { cin>>num; r=@@ fenjie@@ (num,@@ 2); cout<<@@ r@@ <<endl; } return0; } intfenjie@@ (int@@ num,int@@ min) { inti,j,k,@@ r=0; for(i=min@@ ;i<=@@ num;i++) { if(num@@ %i==0) { r=r@@ +@@ fenjie@@ (@@ num@@ /i,i); } if(i==@@ num@@ )@@ r++; } return@@ r; }  
c -1
h -1
main() { introw,col,@@ time@@ =0,@@ n,@@ i,j; int@@ array[100][100]; scanf("%d%d",&row,&col); for(i=0;i<row;i++) for(j=0;j<col;j++) scanf("%d",&array@@ [i][j]); for(n=0;n@@ <row@@ +col@@ ;n++) { if(col@@ <row) { if(n@@ <col) { for(i=0;i<=@@ n;i++) printf("%d\n",array@@ [i]@@ [n@@ -i]); } elseif(n@@ <row) { for(i=@@ col-1@@ ;i>=0;i--) printf("%d\n",array@@ [n@@ -i@@ ][i]); } else { for(i=@@ col-1@@ ;i@@ >@@ n-@@ row@@ ;i--) printf("%d\n",array@@ [n@@ -i@@ ][i]); } } elseif(@@ row@@ <col) { if(n@@ <row) { for(i=0;i<=@@ n;i++) printf("%d\n",array@@ [i]@@ [n@@ -i]); } elseif(n@@ <col) { for(i=0;i<=@@ row-1;i++) printf("%d\n",array@@ [i]@@ [n@@ -i]); } else { for(i=@@ col-1@@ ;i@@ >@@ n-@@ row@@ ;i--) printf("%d\n",array@@ [n@@ -i@@ ][i]); } } elseif(@@ row@@ ==@@ col) { if(n@@ <row) { for(i=0;i<=@@ n;i++) printf("%d\n",array@@ [i]@@ [n@@ -i]); } else { for(i=@@ row-1@@ ;i@@ >@@ n-@@ col@@ ;i--) printf("%d\n",array@@ [n@@ -i@@ ][i]); } } } }  
c -1
h -1
0

intmain() { struct@@ writer { intnum; charname@@ [20]; struct@@ writer@@ *next; }; inti,j,k,l,@@ m,@@ z@@ [26]={0},@@ max,@@ n; struct@@ writer@@ *@@ p1,*p2,*@@ p,*@@ head; scanf("%d",&n); head@@ =p1@@ =p2@@ =(struct@@ writer@@ *)malloc(sizeof(struct@@ writer@@ )); scanf("%d%s",&@@ p1->num,&p1->@@ name); for(i=0;i<n-1;i++) { p1=(struct@@ writer@@ *)malloc(sizeof(struct@@ writer@@ )); scanf("%d%s",&@@ p1->num,&p1->@@ name); p2->next=p1; p2=p1; } p=head; for(i=0;i<26;i++) { p=head; for(j=0;j<n;j++) { for(k=0;k<@@ 20@@ ;k++) { if(p->@@ name@@ [k]==@@ (char)@@ (i@@ +65@@ )) { z@@ [i]++; } } p=p->next; } } max=@@ z@@ [0]; j=0; for(i=0;i<26;i++) { if(max<@@ z@@ [i]) { max=@@ z@@ [i]; j=i; } } printf("%c\n%d\n",@@ 65@@ +j@@ ,max); p=head; for(i=0;i<n;i++) { for(k=0;k<@@ 20@@ ;k++) { if(p->@@ name@@ [k]==@@ (char)(@@ 65@@ +j@@ )) { printf("%d\n",p->num); break; } } p=p->next; } }  
c -1
h -1
intmain() { doublen; int@@ s=0,@@ len1,len2,@@ i; charb[@@ 501@@ ],c[@@ 501],@@ e@@ [501]; scanf("%lf",&n); gets(b); gets(c); gets(@@ e); len1=strlen(@@ c); len2=strlen(@@ e); for(i=0;i<len1;i++) { if(c@@ [i]!='A'&&@@ c@@ [i]!='T'&&@@ c@@ [i]!='C'&&@@ c@@ [i]!='G'){ len1@@ =1; break; } } for(i=0;i<@@ len2@@ ;i++) { if(e@@ [i]!='A'&&@@ e@@ [i]!='T'&&@@ e@@ [i]!='C'&&@@ e@@ [i]!='G'){ len2@@ =@@ 2; break; } } if(len1!=@@ len2){ printf("error"); }else{ for(i=0;i<len1;i++) { if(c@@ [i]==@@ e@@ [i]){ s++; } } if(1.0*@@ s/@@ len1@@ >=@@ n){ printf("yes"); }else{ printf("no"); } } return0; }  
c -1
h -1
0

main() { intn,a[@@ 20000],@@ j,@@ temp; scanf("%d",&n); for(inti=1;i<=n;i++) { scanf("%d",&@@ temp); if(i==1) { j=0; printf("%d",@@ temp); a[j]=@@ temp; } else { int@@ c=0; for(intk=0@@ ;k<=@@ j@@ ;k++) { if(a[k@@ ]==@@ temp@@ ) c++; } if(c@@ ==0) { printf("%d",@@ temp); j++; a[j]=@@ temp; } } } getchar(); getchar(); }  
c -1
h -1
intmain() { struct@@ a { int@@ h; inty; ints; }b[@@ 100000],@@ e; intc[@@ 100000]; intn,i,@@ f@@ ,j,@@ d; scanf("%d",&n); for(i=0;i<n;i++) { scanf("%d%d%d",&@@ b[i].@@ h@@ ,&@@ b[i].@@ y,&@@ b[i].@@ s); } for(i=0;i<n;i++) { c[i]=@@ b[i].@@ y@@ +@@ b[i].@@ s; } for(j=0;j<3;j++) { for(i=j@@ +1@@ ;i<n;i++) { if(c@@ [i]>@@ c@@ [j]) { d=@@ c[j]; c[j]=@@ c[i]; c[i]=@@ d; e=@@ b[j]; b[j]=@@ b[i]; b[i]=@@ e; } } f=@@ b[j].@@ h; printf("%d%d\n",@@ f,@@ c@@ [j]); } return0; }  
c -1
h -1
0

intmain(){ introw,col; cin>>row>>col; intnum[@@ 110][110@@ ]={0}; for(inti=0;i<row;i++) for(intj=0;j<@@ col@@ ;j++){ cin>>@@ *(*(@@ num@@ +i)@@ +j); } for(inti=0;i<@@ col@@ ;i++){ for(intj=0;j<=@@ i;j++){ if(j@@ <row@@ )@@ cout<<@@ *(*(@@ num@@ +j)@@ +i-j@@ )<<endl; elsebreak; } } for(inti=1;i<@@ row;i++){ for(intj=0;j<@@ row@@ -i;j++){ if(j@@ <col@@ )@@ cout<<@@ *(*(@@ num@@ +i@@ +j)@@ +col@@ -j@@ -1)@@ <<endl; } } return0; }  
c -1
h -1
intmain() { intn; cin>>n; ints[@@ 25]; intmax@@ [25]; inti,j; for(i=0;i<n;i++) { cin>>@@ s[i]; } max@@ [0]=1; for(i=1;i<n;i++) { int@@ m=1; for(j=0;j<i;j++) { if(s@@ [i]<=@@ s[j]@@ &&@@ max@@ [j]+1>@@ m) m=@@ max@@ [j]+1; } max@@ [i]=@@ m; } int@@ p=@@ max@@ [0]; for(i=1;i<n;i++) { if(max@@ [i]>@@ p) p=@@ max@@ [i]; } cout<<@@ p@@ <<endl; }  
c -1
h -1
0

intmain(){ structbook{ char@@ z@@ [27]; int@@ no; }; structbook@@ a[1000]; intm,@@ i,@@ x,@@ p@@ ,j; scanf("%d",&m); for(i=0;i<m;i++){ scanf("%d%s",&@@ a[i].@@ no@@ ,@@ a[i].@@ z); } int@@ memo@@ [26]={0}; for(i=0;i<m;i++){ for(j=0;j<26@@ ;j++){ if(a[i].@@ z@@ [j]==@@ '\0') break; x@@ =(@@ a[i].@@ z@@ [j]@@ )@@ -65@@ ; memo@@ [x@@ ]++; } } x=0; p=0; for(i=0;i<26;i++){ if(@@ memo@@ [i]>@@ x@@ ){@@ x=@@ memo@@ [i]; p=i; } } printf("%c\n",@@ p@@ +65); intn=0; for(i=0;i<m;i++){ for(j=0;j<26@@ ;j++){ if(a[i].@@ z@@ [j]==@@ '\0') break; if(a[i].@@ z@@ [j]==@@ p@@ +65) n++; } } printf("%d\n",n); for(i=0;i<m;i++){ for(j=0;j<26@@ ;j++){ if(a[i].@@ z@@ [j]==@@ '\0') break; if(a[i].@@ z@@ [j]==@@ p@@ +65@@ ){ printf("%d\n",@@ a[i].@@ no@@ ); break;} } } return0; }  
c -1
h -1
intf@@ (intx) { if((x@@ %100!=0@@ &&@@ x%@@ 4@@ ==0)||(@@ x%@@ 100==0&&@@ x%@@ 400==0)) return1; else@@ return0; } intmain() { inty,m,@@ d; inta,b,c; int@@ amount@@ =0; int@@ p[@@ 12]={31,28,31,30,31,30,31,31,30,31,30,31}; scanf("%d%d%d",&y,&m,&d); if(m@@ >2) { a=@@ f(@@ y); if(a@@ ==1)@@ p@@ [1]=@@ p@@ [1]@@ +1; for(inti=0;i<@@ m-1;i++) amount@@ =@@ amount@@ +@@ p[i]; amount@@ =@@ amount@@ +d; } elseif(m@@ ==1)@@ amount@@ =@@ d; elseif(m==@@ 2)@@ amount@@ =31+@@ d; printf("%d",@@ amount@@ ); getchar(); getchar(); getchar(); }  
c -1
h -1
0

intmain() { chara[100@@ ]; char@@ b[100@@ ]; char@@ c[100]; inti,j,@@ m,@@ k; intn=0; scanf("%s",a); scanf("%s",b); scanf("%s",c); m@@ =strlen(b); for(i=0;a[i]@@ !='\0';i++){ if(a[i]==@@ b[0]@@ ){ n=0; for(j=0;@@ b[j]@@ !='\0';j++){ if(a@@ [i+j]==@@ b[j]@@ )@@ n++; } if(m==@@ n@@ )break; } } if(m==@@ n){ for(k=0;k<@@ i@@ ;k++){ printf("%c",@@ a[k]); } printf("%s",@@ c); for(k=i@@ +m@@ ;@@ a[k]@@ !='\0'@@ ;k++){ printf("%c",@@ a[k]); } } if(n@@ !=@@ m) printf("%s",a); return0; }  
c -1
h -1
intmain() { intk,i,j,@@ t,@@ d[@@ 25],@@ h@@ [25]; scanf("%d",&k); for(i=0;i<k;i++) {scanf("%d",&@@ h@@ [i]);} for(i=0;i<k;i++) { t=0; for(j=0;j<i;j++) { if(h@@ [j]>=@@ h@@ [i]) { if(d@@ [j]>@@ t)@@ t=@@ d@@ [j]; } } d[i]=@@ t@@ +1; } for(i=0;i<k;i++) { if(d@@ [i]>@@ t)@@ t=@@ d[i]; } printf("%d\n",t); return0; }  
c -1
h -1
0

void@@ FenJie@@ (int@@ ); int@@ counter@@ =0; int@@ Befor@@ =0; intmain() { intn,@@ x,@@ i; cin>>n; for(i=0;i<n;i++) { cin>>x; counter@@ =0; Befor@@ =@@ x; FenJie@@ (@@ x); cout<<@@ counter@@ <<endl; } return0; } void@@ FenJie@@ (intx) { inti,@@ temp=@@ Befor@@ ; if(x==1) { counter@@ ++; return; } for(i=@@ Befor@@ ;i@@ >1@@ ;i--) { if(x%i==0) { Befor@@ =i; FenJie@@ (x@@ /i); } Befor@@ =temp; } return; }  
c -1
h -1
intmain(intargc,char*argv[]) { intyear,month,day,@@ total@@ ,i; scanf("%d%d%d",&year,&month,&day); total=0; for(i=0;i<@@ month;i++) { if(i==1||i==3||i==5||i==7||i==8||i==10@@ ||i==@@ 12) { total=total@@ +31; } if(i==@@ 4||i==6||i==9||i==11) { total=total+@@ 30; } if(i==@@ 2) { if((year%4==0&&year%100!=0@@ )||@@ year%400==0) total=total+@@ 29; else@@ total=total+@@ 28; } } total=total@@ +day; printf("%d",@@ total); return0; }  
c -1
h -1
0

unsigned@@ inth@@ [26],@@ n; int@@ go@@ (int@@ maxh@@ ,int@@ cp@@ ) { intx,y,@@ max; while(@@ h@@ [@@ cp@@ ]>@@ maxh@@ )@@ cp@@ =@@ cp@@ +1; if(h@@ [@@ cp@@ ]@@ ==0)@@ return0; x=@@ go@@ (@@ maxh@@ ,@@ cp@@ +1); maxh@@ =@@ h@@ [@@ cp@@ ]; y@@ =1@@ +@@ go@@ (@@ maxh@@ ,@@ cp@@ +1); max@@ =(@@ x@@ >@@ y)@@ ?@@ x@@ :@@ y; return@@ max; } intmain() { unsigned@@ inti,@@ c,@@ t; scanf("%d",&n); for(i=0;i<n;i++)@@ scanf("%d",&h[i]); h@@ [n@@ ]=0; t=@@ go@@ (@@ 65535@@ ,@@ 0); printf("%d",t); return0; }  
c -1
h -1
voidmain() { intn,a[@@ 20000],b[@@ 20000@@ ],i,j,@@ k=0; scanf("%d\n",&n); for(i=0;i<n;i++) scanf("%d",&a[i]); for(i=0;i<n;i++) { for(j=0;j<i;j++) { { if(a[i]==a[j]) a[i]=0; else a[i]=@@ a[i]; } } if(a[i]!=0) { b[k@@ ]=a[i]; k=k+1; } } for(i=0;i<@@ k-1;i++) { printf("%d",b[i]); } printf("%d",@@ b[k@@ -1]); }  
c -1
h -1
0

intsum=0; void@@ count@@ (int@@ N@@ ,int@@ i) { if(N@@ ==1)@@ sum++; while(i<=@@ N@@ ){ if(N@@ %i==0)@@ count@@ (@@ N@@ /i,i); i++; } return; } intmain() { int@@ T@@ =0; cin>>@@ T@@ ; while(@@ T@@ --) { intN@@ =0; cin>>@@ N; int@@ i=@@ 2,@@ total@@ =1; while(i<=@@ N@@ /@@ 2) { if(N@@ %i==0) { sum=0; count@@ (@@ N@@ /i,i); total+=@@ sum; } i++; } cout<<@@ total@@ <<endl; } return0; }  
c -1
h -1
structstudent { charnum[10]; int@@ o@@ ; structstudent*next; }; structstudent*@@ create@@ (intn) { structstudent*head,*p1,*p2; inti; int@@ scholar@@ (@@ structstudent@@ *p@@ ); p1@@ =(structstudent*)malloc(len); scanf("%s%d",@@ p1->num,&p1->@@ o@@ ); p1->next=NULL; head=p1; p2=p1; for(i=1;i<=n-1;i++) { p1@@ =(structstudent*)malloc(len); scanf("%s%d",@@ p1->num,&p1->@@ o@@ ); p1->next=NULL; p2->next=p1; p2=p1; } returnhead; } structstudent*@@ max(@@ structstudent*head@@ ) { structstudent@@ *p,*@@ m; m=@@ head; p=head->next; while(p) { if(p->@@ o@@ >@@ m@@ ->@@ o@@ )@@ m=@@ p; p=p->next; } return@@ m; } voidmain() { intn; structstudent*head,*@@ m@@ ,*p; structstudent*@@ create@@ (int@@ n); structstudent*@@ max(@@ structstudent*@@ head); scanf("%d",&n); head=@@ create@@ (n); p=head; for(;;) { m=@@ max@@ (p); if(m@@ ->@@ o@@ >=60) { printf("%s\n",@@ m@@ ->@@ num); m@@ ->@@ o@@ =-1; } elsebreak; } p=head; while(p) { if(p->@@ o@@ !=@@ -1)@@ printf("%s\n",p->@@ num); p=p->next; } }  
c -1
h -1
0

intmain() { intk,@@ n,@@ i,@@ m,@@ p,q,@@ sz@@ [100][100],@@ sum; scanf("%d",&k); for(i=0;i<k;i++) { sum=0; scanf("%d%d",&m,&n); for(p=0;p@@ <m@@ ;p++) { for(q=0;q@@ <n;@@ q++) { scanf("%d",&@@ sz[@@ p@@ ][q@@ ]); } } if(m@@ ==1||@@ n@@ ==1) { for(p=0;p@@ <m@@ ;p++) { for(q=0;q@@ <n;@@ q++) { sum+=@@ sz[@@ p@@ ][q@@ ]; } } } else { for(q=0;q@@ <=@@ n-1@@ ;q++) { sum+=@@ sz[0][@@ q@@ ]; } for(q@@ =1;@@ q@@ <m-1@@ ;q++) { sum+=@@ sz[@@ q@@ ][n-1]; } for(q=0;q@@ <n;@@ q++) { sum+=@@ sz[@@ m-1][@@ q@@ ]; } for(q@@ =1;@@ q@@ <m-1@@ ;q++) { sum+=@@ sz[@@ q@@ ][0]; } } printf("%d\n",sum); } return0; }  
c -1
h -1
int*@@ putin@@ () { inta,b,@@ n; scanf("%d%d",&a,&b); int*p=@@ (int*)malloc(@@ (@@ a+@@ b+@@ 2)@@ *sizeof(int)); *@@ p=a; *(p@@ +1)@@ =@@ b; for(n=@@ 2@@ ;n@@ <=@@ a+@@ b@@ +1@@ ;n++) scanf("%d",@@ (p@@ +@@ n@@ )); return@@ p; } int*@@ compare@@ (int*@@ a) { intn,m,@@ p; for(n=@@ 2@@ ;n@@ <=@@ (*@@ a);@@ n++) { for(m=@@ n+1@@ ;m@@ <=@@ (*@@ a)@@ +1@@ ;m++) { if((@@ *(a+@@ n@@ ))@@ >@@ (@@ *(a@@ +m@@ )@@ )) { p@@ =*(@@ a+@@ n); *(a+@@ n)@@ =*(@@ a+@@ m); *(a@@ +m@@ )@@ =p; } } } for(n@@ =(@@ *@@ a)@@ +@@ 2@@ ;n@@ <=@@ (*@@ a)@@ +(@@ *(a@@ +1)@@ );@@ n++) { for(m=@@ n+1@@ ;m@@ <=@@ (*@@ a)@@ +(@@ *(a@@ +1)@@ )@@ +1@@ ;m++) { if((@@ *(a+@@ n@@ ))@@ >@@ (@@ *(a@@ +m@@ )@@ )) { p@@ =*(@@ a+@@ n); *(a+@@ n)@@ =*(@@ a+@@ m); *(a@@ +m@@ )@@ =p; } } } return@@ a; } void@@ putout@@ (int*@@ a) { intx; for(@@ x=@@ 2@@ ;x@@ <=@@ (*@@ a)@@ +(@@ *(a@@ +1)@@ );@@ x++) printf("%d",@@ a[x@@ ]); printf("%d",a[@@ (*@@ a)@@ +(@@ *(a@@ +1)@@ )@@ +1@@ ]); } main() { putout@@ (@@ compare@@ (@@ putin@@ (@@ )@@ )); }  
c -1
h -1
0

intmain(){ intmax@@ ,@@ max1,@@ t,@@ k,@@ x[@@ 28@@ ]={0},@@ n,@@ a,b,c,d,@@ i,j; char@@ cc@@ ,@@ y@@ [100][@@ 32@@ ],@@ q; scanf("%d",&n); scanf("%@@ c@@ ",&@@ cc@@ ); for(i=1;i<=n;i++){ gets(@@ y@@ [i]); for(j=2@@ ;y@@ [i][j]@@ ;j++){ if(y@@ [i][j]@@ >=@@ '@@ A'&&@@ y@@ [i][j]@@ <=@@ '@@ Z@@ '){ x[@@ y@@ [i][j]@@ +1@@ -'A'@@ ]@@ ++;} }} max=@@ x@@ [1]; max1@@ =1; for(i=2;i<=@@ 26@@ ;i++){ if(x@@ [i]@@ >max){ max=@@ x[i]; max1@@ =i;@@ }} q@@ ='@@ A@@ '-@@ 1@@ +@@ max1; printf("%c\n",@@ q); printf("%d\n",max); for(i=1;i<=n;i++){ for(j=2@@ ;y@@ [i][j]@@ ;j++){ if(y@@ [i][j]==@@ q@@ ){ for(t@@ =0;@@ y@@ [i]@@ [t@@ ];@@ t++){ if(y@@ [i]@@ [t@@ ]@@ =='@@ ')@@ break; else@@ printf("%c",@@ y@@ [i]@@ [t@@ ]); } printf("\n"); break; } } } }  
c -1
h -1
long@@ total; int@@ run@@ (intn) { if(n@@ %4==0&&@@ n@@ %@@ 100!=0) { return1; } if(n%@@ 400==0) { return1; } return0; } intmain() { intyear,month,day; inti; while(cin>>@@ year>>@@ month>>@@ day@@ ) { total=0; if(@@ run@@ (year@@ )) { if(month==1) { total+=@@ day; } if(month==2) { total+=@@ 31+@@ day; } switch(month) { case3:@@ total+=@@ 60@@ +day;break; case4:@@ total+=@@ 91@@ +day;break; case5:@@ total+=@@ 121@@ +day;break; case6:@@ total+=@@ 152@@ +day;break; case7:@@ total+=@@ 182@@ +day;break; case8:@@ total+=@@ 213@@ +day;break; case9:@@ total+=@@ 244@@ +day;break; case10:@@ total+=@@ 274@@ +day;break; case11:@@ total+=@@ 305@@ +day;break; case12:@@ total+=@@ 335@@ +day;break; } } else { if(month==1) { total+=@@ day; } if(month==2) { total+=@@ 31+@@ day; } switch(month) { case3:@@ total+=@@ 59@@ +day;break; case4:@@ total+=@@ 90@@ +day;break; case5:@@ total+=@@ 120@@ +day;break; case6:@@ total+=@@ 151@@ +day;break; case7:@@ total+=@@ 181@@ +day;break; case8:@@ total+=@@ 212@@ +day;break; case9:@@ total+=@@ 243@@ +day;break; case10:@@ total+=@@ 273@@ +day;break; case11:@@ total+=@@ 304@@ +day;break; case12:@@ total+=@@ 334@@ +day;break; } } cout<<@@ total@@ <<endl; } return0; }  
c -1
h -1
0

intmain() { inta[100][100],@@ m,n,@@ i,j,k,@@ l,@@ sum; cin>>k; for(i=1;i<=k;i++) { cin>>m>>n; sum=0; for(j=1;j<=m;j++) { for(l=1;l@@ <=n;@@ l++) { cin>>a[j]@@ [l]; if(j@@ ==1||@@ j==@@ m@@ ||@@ l@@ ==1||@@ l@@ ==@@ n) { sum+=@@ a[j]@@ [l]; } } } cout<<sum<<endl; } return0; }  
c -1
h -1
voidshuru@@ (inta[],int@@ m) {inti; for(i=0;i<m;i++) cin>>a[i]; } voidpaixu@@ (int@@ b[],int@@ m) {@@ inti,j,t; for(i=0;i<m-1;i++) {@@ for(j=0;j<m@@ -i-1;j++) {@@ if(b[j]>b[j+1]) {t=@@ b[j]; b[j]=b[j+1]; b[j+1]=@@ t;@@ }@@ }}} voidhebing@@ (inta[],intb[],int@@ m,intn) {inti; for(i=0;i<m;i++) cout<<a[i]<<""; for(i=0;i<n-1;i++) cout<<b[i]<<""; cout<<b[@@ n-1]; } intmain() {@@ intm,n; cin>>m>>n; inta[@@ m@@ ],b[@@ n]; shuru@@ (a,m); shuru@@ (b,n); paixu@@ (a,m); paixu@@ (b,n); hebing@@ (a,b,m,n); return0; }  
c -1
h -1
0

voidf@@ (int@@ n1,int@@ n2) { inta[100],b[100],@@ i,j,k,@@ l,@@ m,n,@@ p,q,@@ term@@ =0; for(i=0;i<n1;i++) { scanf("%d",&a[i]); } for(j=0;j<@@ n2@@ ;j++) { scanf("%d",&@@ b[j]); } for(k=0;k<@@ n1@@ ;k++) { for(m=@@ k@@ +1@@ ;m@@ <@@ n1@@ ;m++) { if(a[m@@ ]<@@ a[k]) { term@@ =@@ a[k]; a[k]=@@ a[m@@ ]; a[m@@ ]=@@ term@@ ; } } } for(n=0;n@@ <@@ n2@@ ;n++) { for(l@@ =@@ n@@ +1;@@ l<@@ n2@@ ;l++) { if(@@ b[l@@ ]<@@ b[@@ n@@ ]) { term@@ =@@ b[@@ n]; b[@@ n@@ ]=@@ b[l@@ ]; b[l@@ ]=@@ term@@ ; } } } for(p=0;p@@ <@@ n1@@ ;p++) { printf("%d",@@ a[p@@ ]); } for(q=0;q@@ <@@ n2@@ -1;@@ q++) { printf("%d",b[@@ q@@ ]); } printf("%d",b[@@ n2@@ -1]); } intmain() { int@@ n1,n2; scanf("%d%d",&n1,&n2); f(@@ n1,n2@@ ); return0; }  
c -1
h -1
intmain() { intn,i,j,@@ m=0; inta[20000]; cin>>n; for(i=0;i<n;i++) cin>>a[i]; for(i=0;i<n;i++){ intt=0; for(j=0;j<i;j++) if(a[i]==a[j]@@ ){ t@@ ++@@ ;break; } if(t@@ ==0){ if(m@@ >0@@ )@@ cout<<"@@ "; cout<<a[i]; m++; } } return0; }  
c -1
h -1
0

intmain() { inti,j,@@ t,@@ r,@@ k,@@ m,n,@@ a[@@ 1000]={0},@@ b[100@@ ][100@@ ]={0},@@ sum=0; scanf("%d",&k); for(i=0;i<k;i++){ scanf("%d%d",&m,&n); for(t=0;t@@ <m;@@ t++){ for(r=0;r@@ <n;@@ r@@ ++){ scanf("%d",&@@ b[t@@ ][@@ r@@ ]); if(r@@ ==@@ n-1)@@ scanf("\n@@ ");} } if(m==1) for(j=0;j<=n-1;j++) sum+=@@ b[0]@@ [j]; elseif(n@@ ==1) for(j=0;j<=@@ m-1;j++) sum+=@@ b[j]@@ [0]; else { for(j=0;j<n-1;j++) sum+=*(@@ b[0]@@ +j); for(j=0;j<m-1;j++) sum+=*(@@ b[j]@@ +n-1); for(j=n-1@@ ;j>0;j--) sum+=*(@@ b[m@@ -1]@@ +j); for(j=@@ m-1@@ ;j>0;j--) sum+=*(@@ b[j]@@ +@@ 0); } a[i]=@@ sum; sum=0; } for(i=0;i<k;i++) printf("%d\n",a[i]); }  
c -1
h -1
int@@ Year@@ (int@@ a) { if(a%@@ 100==0) { if(a%@@ 400==0) { return1; } else return0; } elseif(@@ a%@@ 4==0) { return1; } else return0; } intmain() { intyear,month,day,@@ a[@@ 13@@ ],@@ i,@@ answer@@ ; cin>>year>>@@ month>>@@ day; for(i=1;i<=@@ 12@@ ;i++) { switch(@@ i) { case1: case3: case5: case7: case8: case10: case12: a[i]=@@ 31;break; case4: case6: case9: case11: a[i]=@@ 30@@ ;break; case2: if(@@ Year@@ (year@@ )@@ ==1) { a[i]=@@ 29; break; } else { a[i]=@@ 28; break; } } } answer@@ =0; for(i=1;i<month;i++) { answer@@ +=@@ a[i]; } answer@@ +=@@ day; cout<<@@ answer@@ <<endl; return0; }  
c -1
h -1
0

int@@ col@@ (inta,int@@ b); intmain() {@@ intn,i,@@ m,@@ l; scanf("%d",&n); for(i=1;i<=n;i++) {@@ scanf("%d",&m); l=@@ col@@ (m,@@ 2)@@ +1; printf("%d\n",@@ l); } return0; } int@@ col@@ (inta,intb) {@@ inti,@@ t,@@ tt@@ =0,@@ sig@@ =0; for(i=b@@ ;@@ (i@@ <a@@ /2@@ )&&(@@ (a@@ /i@@ )@@ >=i@@ );i++) { if(a%i==0) {t=@@ a/@@ i; tt@@ =@@ tt@@ +1@@ +col@@ (@@ t,@@ i); sig@@ =1; } } if(@@ sig@@ ==0) tt@@ =0; return(@@ tt@@ ); }  
c -1
h -1
structstudent {intnum; int@@ yu@@ ; int@@ shu; int@@ score; structstudent*next; }; voidmain() { intn,i,@@ max; structstudent*@@ p1,*p2,*head; p1=@@ p2=@@ head=NULL; scanf("%d",&n); for(i=0;i<n;i++) { p1@@ =(structstudent*)malloc(sizeof(structstudent)); scanf("%d%d%d",&p1->num,&p1->@@ yu@@ ,&p1->@@ shu); p1->@@ score@@ =p1->@@ yu@@ +p1->@@ shu; if(i==0)@@ head=p1; elsep2->next=p1; p2=p1; } p2->next=NULL; for(i=0;i<3;i++) { p2@@ =p1@@ =head; max=@@ p1->@@ score; while(p1!=NULL) { if(p1->@@ score@@ >max){max=@@ p1->@@ score@@ ;@@ p2@@ =p1;} p1=p1->next; } printf("%d%d\n",@@ p2->@@ num,@@ max); p1=head; while(@@ p1->next@@ !=@@ p2@@ ) { p1=p1->next; } p1->next=@@ p2->next; } }  
c -1
h -1
0

intmain() { inti,@@ c=0,@@ d=0,@@ e=0,@@ g=0; double@@ f,@@ k; chara[@@ 503@@ ],b[@@ 503@@ ]; scanf("%lf",&@@ k); scanf("%s",a); scanf("%s",b); for(i=0;i<@@ 503@@ ;i++) { if(a[i]==@@ '\0') break; else c=c@@ +1; if(a[i]!='@@ T'&&a[i]!='@@ A'&&a[i]!='@@ C'&&a[i]!='@@ G') g=@@ g@@ +1; } for(i=0;i<@@ 503@@ ;i++) { if(b[i]==@@ '\0') break; else d=d@@ +1; if(@@ b[i]!='@@ T'&&@@ b[i]!='A'&&b[i]!='@@ C'&&b[i]!='@@ G') g=@@ g@@ +1; } if(c@@ !=@@ d@@ ||@@ g@@ !=0) printf("error\n"); else { for(i=0;i<c@@ ;i++) { if(a[i]==b[i]) e=@@ e@@ +1; } f@@ =1.0*@@ e@@ /@@ c; if(f@@ >@@ k) printf("yes\n"); else printf("no\n"); } return0; }  
c -1
h -1
voidmain() { inta[16],@@ i,j,k,@@ counter@@ ; for(;@@ ;@@ ){ scanf("%d",&a[0]); if(a[0]==-1) break; else{ counter@@ =0; for(i=1;@@ ;i++){ scanf("%d",&a[i]); if(a[i]==0) break; } for(j=0;j<i;j++){ for(k=0;k<@@ i@@ ;k++){ if(a[j]@@ %@@ a[k]@@ ==0&&@@ a[j]@@ /@@ a[k]==@@ 2) counter@@ =@@ counter@@ +1; } } printf("%d\n",@@ counter@@ ); } } }  
c -1
h -1
0

intmain() { inta[@@ 15],@@ t,@@ i,j,k,@@ m,n; for(i=1;;i++) { for(j=0;j<=@@ 14@@ ;j++) a[j]=0; for(j=0;;j++) { cin>>t; if(t==0) break; else { a[j]=@@ t; } } m=1; if(a[0]@@ !=-1) m=0; for(j=1;j<@@ 15@@ ;j++) { if(a[j]@@ !=0) m=0; } if(m==1) { cout<<"@@ 0@@ "@@ <<endl; break; } n=0; for(j=0;j<=@@ 14@@ ;j++) for(k=j+1@@ ;k<=@@ 14@@ ;k++) { if(a[j]@@ !=0&&@@ a[k]@@ !=0@@ &&(@@ a[j]==2*@@ a[k]@@ ||@@ a[k@@ ]==2*@@ a[j]@@ )) n=n+1; } cout<<n<<endl; } return0; }  
c -1
h -1
intmain(intargc,char*argv[]) { int@@ x1,@@ x2,@@ n[@@ 15],@@ y; inti; intt; while(1){ i=0; while(1){ scanf("%d",&t); if(t==@@ -1){ return0; } if(t==0) break; else{ n[i]=@@ t; i++; } } y=0; for(@@ x1@@ =i@@ -1;@@ x1@@ >=0;@@ x1@@ --){ for(@@ x2@@ =@@ x1@@ -1;@@ x2@@ >=0;@@ x2@@ --){ if(n@@ [@@ x1@@ ]==@@ n[@@ x2@@ ]@@ *2@@ ||@@ n[@@ x2@@ ]==@@ n[@@ x1@@ ]*@@ 2) y@@ +=1; } } printf("%d\n",@@ y); } return0; }  
c -1
h -1
1


intmain() { inti,@@ h1@@ ,@@ l1,@@ k,@@ h,@@ l,@@ a[100][100],@@ sum@@ [100]; scanf("%d",&k); for(i=1;i<=k;i++) { sum@@ [i]=0; scanf("%d%d",&@@ h@@ ,&@@ l); for(@@ h1@@ =1;@@ h1@@ <=@@ h@@ ;@@ h1@@ ++) for(@@ l1@@ =1;@@ l1@@ <=@@ l@@ ;@@ l1@@ ++) { scanf("%d",&a[@@ h1@@ ][@@ l1@@ ]); } for(@@ h1@@ =1;@@ h1@@ <=@@ h@@ ;@@ h1@@ ++) sum[i]@@ +=@@ a[@@ h1@@ ][1@@ ]+@@ a[@@ h1@@ ][l@@ ]; for(@@ l1@@ =@@ 2;@@ l1@@ <=@@ l@@ -1;@@ l1@@ ++) sum[i]@@ +=@@ a[1@@ ][@@ l1@@ ]+@@ a[h@@ ][@@ l1@@ ]; } for(i=1;i<=k;i++) printf("%d\n",sum@@ [i]); return0; }  
c -1
h -1
intmain() { intn,@@ mian@@ [@@ 105@@ ][@@ 105@@ ]; inti,j,@@ i1@@ ,@@ j1@@ ,@@ i2@@ ,@@ j2@@ ; cin>>n; for(i=0;i<n;i++) { for(j=0;j<n;j++) { cin>>@@ mian@@ [i][j]; } } for(i=0;i<n;i++) { for(j=0;j<n;j++) { if(@@ mian@@ [i][j]==0&&@@ mian@@ [i+1][j]@@ ==0&&@@ mian@@ [i]@@ [j+1@@ ]==0) { i1@@ =i; j1@@ =j; } elseif(@@ mian@@ [i][j]==0&&@@ mian@@ [i-1][j]@@ ==0&&@@ mian@@ [i]@@ [j-1]@@ ==0) { i2@@ =i; j2@@ =j; } } } cout<<(@@ i2@@ -@@ i1@@ -1)*(@@ j2@@ -@@ j1@@ -1); return0; }  
c -1
h -1
0

intmain(){ doublen; scanf("%lf\n",&@@ n); chara[501],b[501]; scanf("%s@@ \n",&@@ a); scanf("%s",&@@ b); int@@ la@@ =strlen(@@ a)@@ ,lb@@ =strlen(@@ b@@ ),@@ i; int@@ s=0;@@ double@@ e; if(@@ la@@ !=@@ lb@@ ){ printf("error");} else{ for(i=0;i<@@ la@@ ;i++){ if(a[i]!='A'&&a[i]!='T'&&a[i]!='C'&&a[i]!='@@ G'||@@ b[i]!='A'&&b[i]!='T'&&b[i]!='C'&&b[i]!='@@ G'){ printf("error"); break; } else{ if(a[i]==b[i]){ s=s@@ +1;} if(i==@@ la@@ -1){ e@@ =1.0*@@ s/@@ la@@ ; if(e@@ >n){ printf("yes");} else{ printf("no");} } } } } return0; }  
c -1
h -1
voidmain() { intn,a[@@ 30],@@ i,@@ b[@@ 30],@@ j; scanf("%d",&n); for(i=0;i<n;i++) { scanf("%d",&a[i]); b[i]=1; } for(i=0;i<n;i++) { for(j=0;j<i;j++) { if(a[j]>=@@ a[i]) { if(b[j]@@ >=@@ b[i]) b[i]=b[j]+1; } } } for(j=0;j<n-1;j++) { if(b[j]>b[j+1]) b[j+1]=@@ b[j]; } printf("%d\n",@@ b[@@ n-1]); }  
c -1
h -1
0

intmain(){ double@@ x,y; intl,@@ i,@@ xg@@ =0,@@ cw@@ =0; char@@ jy@@ [2][@@ 500]; scanf("%lf",&x); scanf("%s%s",@@ jy@@ [0],@@ jy@@ [1]); if(strlen(@@ jy@@ [0]@@ )==@@ strlen(@@ jy@@ [1]@@ )){ l=strlen(@@ jy@@ [0]); for(i=0;i<l;i++){ if(@@ jy@@ [0]@@ [i]==@@ jy@@ [1]@@ [i]){ xg@@ ++; } if((@@ jy@@ [0]@@ [i]!='A'&&@@ jy@@ [0]@@ [i]!='T'&&@@ jy@@ [0]@@ [i]!='C'&&@@ jy@@ [0]@@ [i]!='G')@@ || (@@ jy@@ [1]@@ [i]!='A'&&@@ jy@@ [1]@@ [i]!='T'&&@@ jy@@ [1]@@ [i]!='C'&&@@ jy@@ [1]@@ [i]!='G')){ cw@@ ++; } } y@@ =1.0*@@ xg@@ /@@ l; } elseif(@@ strlen(@@ jy@@ [0]@@ )!=strlen(@@ jy@@ [1]@@ )){ cw@@ ++; } if(@@ cw@@ ==0){ printf(@@ y@@ >@@ x@@ ?"@@ yes@@ ":@@ "@@ no@@ "); } elseif(@@ cw@@ !=0){ printf("error"); } return0; }  
c -1
h -1
intmain() { inty,m,d,@@ day@@ [12]={31,28,31,30,31,30,31,31,30,31,30,31}; cin>>y>>m>>d; if((y%@@ 4==0&&y%100!=0@@ )||(y%@@ 400==0)) day@@ [1]=@@ 29; for(inti=0;i<@@ m-1;i++) d@@ +=@@ day@@ [i]; cout<<@@ d; return0; }  
c -1
h -1
0

intmain(){ char@@ x1@@ [501],@@ x2@@ [501]; doublen; inti,@@ y=0; scanf("%lf%s%s",&@@ n,@@ x1,@@ x2@@ ); if(strlen(@@ x1@@ )!=strlen(@@ x2@@ )) { printf("error"); return0; } for(i=0;@@ x1@@ [i]!='\0';i++) { if((@@ x1@@ [i]!='A'&&@@ x1@@ [i]!='T'&&@@ x1@@ [i]!='G'&&@@ x1@@ [i]!='@@ C')||(@@ x2@@ [i]!='A'&&@@ x2@@ [i]!='C'&&@@ x2@@ [i]!='G'&&@@ x2@@ [i]!='T')@@ ) { printf("error"); return0; } if(@@ x1@@ [i]==@@ x2@@ [i])@@ y++; } if((@@ double)@@ y@@ /i@@ >=@@ n)@@ printf("yes"); elseprintf("no"); return0; }  
c -1
h -1
main() { inti,j,k,l,@@ a[@@ 26],@@ len@@ [26]; scanf("%d",&k); for(i=0;i<@@ k;@@ ++@@ i) scanf("%d",&a[i]); for(i=0;i<@@ k;@@ ++@@ i) len@@ [i]=1; for(i=1;i<@@ k;@@ ++@@ i) { for(j=0;j<@@ i@@ ;++@@ j) if(a[i]<=@@ a[j]) { len@@ [i]=@@ len@@ [j]+1; break; } for(l@@ =j+1@@ ;@@ l<@@ i@@ ;++@@ l) if(@@ len@@ [l@@ ]>=@@ len@@ [i]@@ &&a[i]@@ <=@@ a[l@@ ]) { len@@ [i]=@@ len@@ [l@@ ]+1; continue; } } for(i=0;i<@@ k;@@ ++@@ i) if(@@ len@@ [i]>@@ len@@ [0]) len@@ [0]=@@ len@@ [i]; printf("%d",@@ len@@ [0]); }  
c -1
h -1
0

voidmain() { inta[1000]; intb[@@ 1000]; inti,j=0,@@ n,k,@@ l,@@ t; scanf("%d%d",&n,&k); for(i=0;i<n;i++) scanf("%d",&a[i]); for(i=0;i<n;i++) if(a[i]<=@@ k) { b[j]=@@ a[i]; j++; } for(i=0;i<j@@ -1;i++) for(l@@ =i+1@@ ;@@ l<@@ j@@ ;@@ l++){ t=@@ b[i]@@ +@@ b[l@@ ]; if(t@@ ==k) { printf("yes"); goto@@ loop@@ ; } } if(i>=@@ (j@@ -1)@@ )@@ printf("no"); loop@@ :@@ printf("\n"); }  
c -1
h -1
intmain(){ inti,n,@@ m,@@ j,@@ k; scanf("%d",&n); struct@@ br@@ { char@@ x@@ [10]; inty; }@@ *@@ b,@@ c[100],@@ e; b@@ =(struct@@ br@@ *)malloc(sizeof(struct@@ br@@ )*n); for(i=0;i<n;i++){ scanf("%s%d",@@ b[i].@@ x,&@@ (@@ b[i].@@ y@@ )); } for(i=0,@@ m@@ =0;i<@@ n;i++){ if(b[i].@@ y@@ >=60){ c[m@@ ]=b[i]; m++; b[i].@@ y@@ =-1; } for(k=0;k<@@ m@@ ;k++){ for(j=@@ m-1@@ ;j>@@ k@@ ;j--){ if(c@@ [j].@@ y@@ >@@ c@@ [j-1].@@ y){ e=@@ c[j]; c[j]=@@ c@@ [j-1]; c@@ [j-1]=@@ e; } } } } for(i=0;i<m;i++){ printf("%s\n",@@ c@@ [i].@@ x); } for(i=0;i<n;i++){ if(b[i].@@ y@@ !=@@ -1){ printf("%s\n",@@ b[i].@@ x); } } return0; }  
c -1
h -1
0

intmain() { intn,i,@@ s=0,@@ j=0,@@ k=0; structpatient{ intage; charid[10]; }@@ patient@@ [100],@@ old@@ [100],@@ young@@ [100],@@ temp; cin>>n; for(i=0;i<n;i++) { cin>>@@ patient@@ [i].@@ id@@ >>@@ patient@@ [i].age; if(@@ patient@@ [i].age>=60) { old@@ [k]=@@ patient@@ [i]; k++; } else { young@@ [s@@ ]=@@ patient@@ [i]; s++; } } for(i=k@@ -1@@ ;i>0;i--) { for(j=0;j<i;j++) { if(old@@ [j].age@@ <@@ old@@ [j+1@@ ].age) { temp=@@ old@@ [j]; old@@ [j]=@@ old@@ [j+1]; old@@ [j+1]=temp; } } } for(i=0;i<k;i++) cout<<@@ old@@ [i].@@ id@@ <<endl; for(i=0;i<@@ s;i++) cout<<@@ young@@ [i].@@ id@@ <<endl; return0; }  
c -1
h -1
intmain(){ intn,i,j,@@ k=0,@@ h=0; cin>>n; inta[n@@ ],b[@@ n]; for(i=0;i<=@@ (n-1);i++) cin>>a[i]; for(i=0;i<=@@ (@@ n-1)@@ ;i++){ if(a[i]!=@@ -1){ for(j=i+1;j<=@@ (@@ n-1)@@ ;j++){ if(a[i]==a[j]@@ ){ a[j]@@ =-1; k=k+1; } } } } for(i=0;i<=@@ (n-1);i++) b[i]=@@ a[i]; for(i=0;i<=@@ (@@ n-1)@@ ;i++){ if(b[i]@@ !=@@ -1){ cout<<@@ b[i]; h@@ ++; } if(h@@ ==1) break; } for(i@@ =i+1@@ ;i<=@@ n-1;i++){ if(b[i]@@ !=@@ -1){ cout<<""<<@@ b[i]; h@@ ++; } if(h@@ ==@@ n-@@ k) break; } return0; }  
c -1
h -1
0

int@@ cuo@@ (char@@ a) { if(a@@ !='@@ A'&&@@ a@@ !='@@ T'&&@@ a@@ !='@@ C'&&@@ a@@ !='@@ G') return1; else return0; } intmain() { chara[@@ 510@@ ]={0}; charb[@@ 510@@ ]={0}; double@@ bili@@ ; cin>>@@ bili@@ >>@@ a@@ >>@@ b; double@@ zong@@ =0,@@ dui@@ =0; for(inti=0;i<=@@ 500@@ ;i++) { if(a[i]@@ ==0||@@ b[i]@@ ==0) { if(a[i]@@ ==0&&@@ b[i]@@ ==0) break; else { cout<<"@@ error@@ "; return0; } } if(@@ cuo@@ (@@ a[i]@@ )||@@ cuo@@ (@@ b[i]@@ )) { cout<<"@@ error@@ "; return0; } zong@@ ++; if(a[i]==b[i]) dui@@ ++; } if(@@ dui@@ /@@ zong@@ >@@ bili@@ ) cout<<"yes"; else cout<<"no"; return0; }  
c -1
h -1
voidmain() { intn,i,@@ d=0,@@ q@@ ,j; intb[@@ 101],@@ f[@@ 101]; chara[@@ 101][@@ 10@@ ],c[@@ 101][@@ 10],@@ e@@ [@@ 101][@@ 10]; scanf("%d",&n); for(i=0;i<n;i++) { scanf("%s%d",@@ a[i],&@@ b[i]); } q=@@ n-1@@ ;j@@ =0; for(i=n-1;i>=0;i--) { if(b[i]@@ <60) { strcpy(@@ c[@@ q@@ ],@@ a[i]); q=q@@ -1; } } for(i=0;i<n;i++) { if(b[i]@@ >=60) { strcpy(@@ c@@ [j],@@ a[i]); f@@ [j]=@@ b[i]; d=d@@ +1; j=j+1; } } for(i=0;i<d@@ ;i++) { for(j=0;j<@@ d@@ -1;j++) { if(f@@ [j]<@@ f@@ [j+1]) { f@@ [100@@ ]=@@ f@@ [j]; f@@ [j]=@@ f@@ [j+1]; f@@ [j+1]=@@ f@@ [100]; strcpy(@@ c[100],@@ c@@ [j]); strcpy(@@ c@@ [j],@@ c@@ [j+1]); strcpy(@@ c[@@ 1@@ +j@@ ],@@ c@@ [100@@ ]); } } } for(i=0;i<n;i++) printf("%s\n",@@ c[i]); }  
c -1
h -1
0

intmain() {@@ inti,j,@@ e; chars[@@ 256]; charb[@@ 256]; chara[@@ 256]; gets(s); gets(a); gets(b); intc; i=0; for(i=0;s[i]@@ !='\0';i++) {@@ j@@ =0;c@@ =0;e@@ =i; if(s[i]==@@ a[j]) { for(;@@ a[j]@@ !='\0'@@ ;j++@@ ,i++) {@@ if(a[j]!=@@ s@@ [i]) { c++; } } if(c@@ ==0) { for(j=0;@@ a[j]@@ !='\0'@@ ;j++,@@ e++) { s[@@ e@@ ]=@@ b[j]; } break; } } i=@@ e; } printf("%s",s); return0; }  
c -1
h -1
intmain() { chars@@ [100]; for(;;) { gets(s); inti,j,@@ k=0,@@ m=0,@@ x[@@ 15],@@ n=0; if(s@@ [0]==@@ '-@@ '&&@@ s[1]@@ =='@@ 1@@ ') break; else { for(i=0;;i++) { if(s@@ [i]=='@@ 0'@@ ) break; else { if(@@ '@@ 1@@ '<=@@ s[i]@@ &&@@ s[i]@@ <=@@ '@@ 9@@ ') { j=@@ s[i]@@ -'@@ 0'; k=k@@ *@@ 10@@ +j@@ ; } else { x@@ [m]=@@ k; m++; k=0; } } } } for(i=0;i<m;i++) for(j=i+1;j<@@ m;j++) { if((@@ x[i]@@ /@@ x@@ [j]==@@ 2@@ &&@@ x[i]@@ %@@ x[j]@@ ==0)||(@@ x[j]@@ /@@ x@@ [i]==@@ 2@@ &&@@ x[j]@@ %@@ x[i]@@ ==0)) {@@ n@@ ++;} } printf("%d\n",n); } return0; }  
c -1
h -1
0

intmain() { inti,j,k,@@ p,@@ a[100][100],@@ s@@ [100]={0},@@ m,n; scanf("%d",&k); for(p=1@@ ;p<=@@ k@@ ;p++) { scanf("%d%d",&m,&n); for(i=1;i<=m;i++) { for(j=1;j<=n;j++) { scanf("%d",&a[i][j]); } } for(j=1;j<=n;j++) { s[p@@ ]=@@ s[p@@ ]+@@ (@@ a[1]@@ [j]); } for(j=1;j<=n;j++) { s[p@@ ]=@@ s[p@@ ]+@@ (@@ a[m@@ ][j]); } for(i=2;i<=@@ m-1;i++) { s[p@@ ]=@@ s[p@@ ]+@@ a[i][1]@@ +@@ a[i][@@ n]; } } printf("%d",@@ s@@ [1]); for(p=@@ 2@@ ;p<=@@ k@@ ;p++) { printf("\n%d",@@ s[p@@ ]); } return0; }  
c -1
h -1
intmain() { inti,j,k,@@ n,m,@@ a=0,b=0,@@ c=0,@@ d=0; scanf("%d",&n); for(i=1;i<=n;i++) { for(j=1;j<=n;j++) { scanf("%d",&k); if(k==0) { c=i; d=j; if(a@@ ==0&&@@ b@@ ==0) { a=i; b=j; } } } } m@@ =(@@ c-a-1)*(d-b-1); printf("%d\n",m); return0; }  
c -1
h -1
0

intmain(){ inty,@@ q,@@ n,@@ i,@@ m,@@ l; double@@ p,@@ k; char@@ sz[@@ 500],@@ dz@@ [500]; scanf("%lf",&@@ p); scanf("%s",@@ sz@@ ); scanf("%s",@@ dz@@ ); m=0; y=0; n=0; l=0; n=strlen(@@ sz@@ ); q=0; m=strlen(@@ dz@@ ); if(m!=@@ n){ printf("error"); }else{ for(i=0;i<n;i++){ if(sz@@ [i]!='A'&&@@ sz@@ [i]!='T'&&@@ sz@@ [i]!='C'&&@@ sz@@ [i]!='G'){ y++; printf("error"); break; } if(@@ dz@@ [i]!='A'&&@@ dz@@ [i]!='T'&&@@ dz@@ [i]!='C'&&@@ dz@@ [i]!='G'){ l++; printf("error"); break; } } if(l@@ ==0&&@@ y@@ ==0){ for(i=0;i<n;i++){ if(sz@@ [i]==@@ dz@@ [i]){ q++; } } k@@ =1.0*@@ q@@ /n; if(k@@ >@@ p@@ ){ printf("yes"); }else{ printf("no"); } } } return0; }  
c -1
h -1
struct@@ pa { charid@@ [11]; intage; structpa@@ *next; }; structpa@@ *@@ insert@@ (struct@@ pa@@ *head,@@ structpa@@ *@@ new1@@ ) { structpa@@ *@@ p0@@ ,*@@ p1,*p2; p1=head; p0@@ =@@ new1@@ ; if(head@@ ==NULL) { head=@@ p0; p0@@ ->next=NULL; } elseif(@@ p0@@ ->age@@ >=60) { while((@@ p1->age@@ >=@@ p0@@ ->age@@ )&&(@@ p1->next@@ !=NULL@@ )) { p2=p1; p1=p1->next; } if(@@ p0@@ ->age@@ >@@ p1->age@@ ) { if(head@@ ==@@ p1@@ ) head=@@ p0; else p2->next=@@ p0; p0->next@@ =p1; } else { p1->next=@@ p0; p0@@ ->next=NULL; } } else { p1=head; while(p1!=NULL) { p2=p1; p1=p1->next; } p2->next=@@ p0; p0@@ ->next=NULL; } return(head); } voidmain() { structpa@@ *p,*@@ head; intn,i; head=NULL; scanf("%d",&n); for(i=0;i<n;i++) { p=(struct@@ pa@@ *)malloc(sizeof(struct@@ pa@@ )); scanf("%s@@ %d\n",@@ p->@@ id,&@@ p->@@ age); head=@@ insert@@ (head,@@ p); } p=head; while(p!=NULL) { printf("%s\n",p->id); p=p->next; } }  
c -1
h -1
0

intmain(){ intk,i,@@ m,@@ sz@@ [100][100],@@ row,col,@@ a,b; scanf("%d%d",&row,&col); for(a=0;a@@ <row@@ ;a@@ ++){ for(b=0;b@@ <col@@ ;@@ b++){ scanf("%d",&@@ sz[a@@ ][b@@ ]); } } if(row@@ >=@@ col@@ ){ for(k=0;k<col@@ ;k++){ for(i=0;i<=@@ k;i++){ printf("%d\n",@@ sz[i]@@ [k-i]); } } for(k=@@ col@@ ;k<@@ (@@ row+col@@ -1)@@ ;k++){ m=@@ k-@@ col@@ +1; for(i=0;@@ (i@@ <(@@ row@@ -@@ m)@@ &&i@@ <=@@ (@@ k-@@ m@@ ))@@ ;i++){ printf("%d\n",sz@@ [i@@ +m@@ ][k@@ -i@@ -m@@ ]); } } } else{ for(k=0;k<@@ row@@ ;k++){ for(i=0;i<=@@ k;i++){ printf("%d\n",@@ sz[i]@@ [k-i]); } } for(k=@@ row@@ ;k<@@ col@@ ;k++){ for(i=0;i<row;i++){ printf("%d\n",@@ sz[i]@@ [k-i]); } } for(k=@@ col@@ ;k<@@ row+col@@ -1@@ ;k++){ m=@@ k-@@ col@@ +1; for(i=0;i<@@ row@@ -@@ m;i++){ printf("%d\n",sz@@ [i@@ +m@@ ][k@@ -i@@ -m@@ ]); } } } return0; }  
c -1
h -1
intmain(){ intn,m,@@ i,k,@@ num=0,@@ flag=0; double@@ l; chara[501],b[@@ 501],@@ s[@@ 10]; gets(s); k=@@ atoi@@ (@@ s); gets(a); gets(b); n@@ =strlen(a); m@@ =strlen(b); for(i=0;a[i]@@ !='\0';i++){ if((a[i]!='@@ A')&&(@@ a[i]!='@@ T')&&(@@ a[i]!='@@ C')&&(@@ a[i]!='@@ G')){ flag=1; break; } } if((@@ n==@@ m@@ )&&(@@ flag@@ ==0)@@ ){ for(i=0;a[i]@@ !='\0';i++){ if(a[i]==b[i]){ num++; } } l@@ =(double)@@ num@@ /n; if(l@@ >@@ k){ printf("yes"); } else{ printf("no"); } } else{ printf("error"); } return0; }  
c -1
h -1
0

intmain() { int*@@ a,@@ sum,@@ i,k,@@ n,m,@@ j=0; scanf("%d",&k); for(i=1;i<=k;i++) { sum=0; scanf("%d%d",&m,&n); a=@@ (int*)malloc(sizeof(int)@@ *(@@ n*@@ m@@ )); for(j=0;j<n@@ *@@ m;j++) { scanf("%d",a@@ +j); if((@@ j@@ +1@@ <=@@ n@@ )||(@@ j@@ >@@ (n@@ *@@ m@@ -@@ n-1)@@ )||(@@ (j@@ +1)@@ %n@@ ==1)@@ ||(@@ (j@@ +1)@@ %n@@ ==0)) sum+=@@ *(a@@ +j); } free(@@ a); printf("%d\n",sum); } }  
c -1
h -1
intmain() { int@@ sz1@@ [@@ 20000],@@ sz2@@ [@@ 20000@@ ],i,j,@@ n,@@ k; scanf("%d",&n); j=1; for(i=0;i<=n-1;i++) { scanf("%d",&@@ sz1@@ [i]); } sz2@@ [0]=@@ sz1@@ [0]; for(i=1;i<=n-1;i++) { for(k=i@@ -1@@ ;k>=0@@ ;k--) { if(@@ sz1@@ [i]==@@ sz2@@ [k]) { break; } if(k==0) { sz2@@ [j]=@@ sz1@@ [i]; j=j+1; } } } for(i=0;i<=@@ j@@ -1;i++) { if(i==@@ j@@ -1) { printf("%d",@@ sz2@@ [i]); } else { printf("%d",@@ sz2@@ [i]); } } return0; }  
c -1
h -1
0

voidmain() { intn,@@ a[100@@ ]={0},@@ maxlen@@ [100]={0},@@ i,j,@@ temp,@@ temp2@@ =1,@@ temp3@@ ; scanf("%d",&n); for(i=0;i<n;i++) scanf("%d",&a[i]); for(i=0;i<n;i++) { temp2@@ =1; if(i==0)@@ maxlen@@ [i]=1; else { temp3@@ =0; for(j=i-1;j>=0;j--) { if(a[j]>=@@ a[i]) { if(@@ maxlen@@ [j]>@@ maxlen@@ [@@ temp3@@ ]) temp3@@ =j; temp2@@ =0; } } maxlen@@ [i]=@@ maxlen@@ [@@ temp3@@ ]+1; if(@@ temp2@@ ==1)@@ maxlen@@ [i]=1; } } temp=0; for(i=0;i<n;i++) if(@@ maxlen@@ [i]>@@ maxlen@@ [@@ temp@@ ]) temp@@ =i; printf("%d",@@ maxlen@@ [@@ temp@@ ]); }  
c -1
h -1
intmain() { intyear,month,day; scanf("%d",&@@ year@@ );@@ scanf("%d",&@@ month@@ );@@ scanf("%d",&@@ day); if(month==2) printf("%d",@@ 31+@@ day); else if(month==1) printf("%d",@@ day); else { if(month==3) day=day+@@ 59@@ ; if(month==@@ 4) day=day+@@ 90@@ ; if(month==@@ 5) day=day+@@ 120@@ ; if(month==@@ 6) day=day+@@ 151@@ ; if(month==@@ 7) day=day+@@ 181@@ ; if(month==8) day=day+@@ 212@@ ; if(month==@@ 9) day=day+@@ 243@@ ; if(month==@@ 10) day=day+@@ 273@@ ; if(month==@@ 11) day=day+@@ 304@@ ; if(month==@@ 12) day=day+@@ 334@@ ; if(year%@@ 4==0&&year%100!=0@@ ||@@ year%400==0) printf("%d",@@ day@@ +1); else printf("%d",@@ day); } return0; }  
c -1
h -1
0

intmain() { intn,i,@@ age@@ [@@ MAX@@ +@@ 10],@@ num[@@ MAX@@ +@@ 10]; charid@@ [@@ MAX@@ +@@ 10@@ ][@@ ID_DIGITS@@ +1@@ ]={0}; scanf("%d",&n); for(i=0;i<n;i++){ scanf("%s%d",@@ id[i],&@@ age[i]); num[i]=@@ i; } int@@ flag@@ ,@@ tempnum@@ ,@@ tempage@@ ,j; char@@ tempid@@ [@@ ID_DIGITS@@ +1]; for(i=0;i<n-1;i++){ for(j=n-1@@ ;j>i@@ ;j--){ flag=0; if(age@@ [j]@@ >=60&&@@ age@@ [j-1]@@ <60@@ )@@ flag=1; elseif(@@ age@@ [j]@@ >=60&&@@ age@@ [j-1]@@ >=60){ if(age@@ [j]>@@ age@@ [j-1]@@ )@@ flag=1; elseif(@@ age@@ [j]==@@ age@@ [j-1]@@ ){ if(num@@ [j]<@@ num@@ [j-1]@@ )@@ flag=1; } } elseif(@@ age@@ [j]@@ <60&&@@ age@@ [j-1]@@ <60){ if(num@@ [j]<@@ num@@ [j-1]@@ )@@ flag=1; } if(flag@@ ){ tempnum@@ =@@ num@@ [j]; num@@ [j]=@@ num@@ [j-1]; num@@ [j-1]=@@ tempnum@@ ; tempage@@ =@@ age@@ [j]; age@@ [j]=@@ age@@ [j-1]; age@@ [j-1]=@@ tempage@@ ; strcpy(@@ tempid@@ ,@@ id@@ [j]); strcpy(id@@ [j],@@ id@@ [j-1]); strcpy(id@@ [j-1@@ ],@@ tempid@@ ); } } } for(i=0;i<n;i++){ printf("%s\n",@@ id[i]); } return0; }  
c -1
h -1
intmain() { long@@ n,@@ i; int@@ a=0,@@ b,@@ c,d,@@ e,@@ f; double@@ sum=0; scanf("%ld",&n); f=0; for(i=1;i<=@@ n*@@ n;i++) { scanf("%d",&b); if(b@@ ==0) { f@@ =i; sum+=@@ i; a@@ +=1; } } c=@@ sum/@@ a@@ *2@@ -@@ f; d=@@ f@@ /@@ n-@@ c@@ /@@ n+1; e@@ =(@@ a@@ -2*@@ d@@ )@@ /2; printf("%d",(@@ d@@ -2@@ )*@@ e); }  
c -1
h -1
0

intmain() { intn,k,i,j,@@ s=0; inta[1000]; scanf("%d%d",&n,&k); for(i=0;i<n;i++) { scanf("%d",&a[i]); if(i@@ !=0) { for(j=0;j<i;j++) { if(k==@@ (@@ a[j]@@ +@@ a[i]@@ )) { s=1; } } } } if(s@@ ==1) printf("yes"); if(s@@ !=1) printf("no"); return0; }  
c -1
h -1
intmain() { intm,@@ i,j,k,@@ key@@ ,@@ num; key@@ =0; intcount@@ [100]; inta[100@@ ][@@ 156@@ ]; int@@ result@@ [100]; for(i=0;i<100;i++) { for(j=0;j<@@ 16@@ ;j++) { scanf("%d",&m); if(m==0) { break; } elseif(m@@ ==-1) { key@@ =1; break; } else { a[i]@@ [j]=@@ m; count@@ [i]=@@ j; } } if(@@ key@@ ==1) { break; } num@@ =i; } for(i=0;i<=@@ num;i++) result@@ [i]=0; for(i=0;i<=@@ num;i++) { for(j=0;j<=@@ count@@ [i];j++) { for(k=0;k<=@@ count@@ [i]@@ ;k++) { if(a[i][j]==@@ a[i][k]@@ *2) result@@ [i]=@@ result@@ [i]@@ +1; } } } for(i=0;i<=@@ num;i++) { printf("%d\n",@@ result@@ [i]); } return0; }  
c -1
h -1
0

int@@ t=1; void@@ fen@@ (intn,int@@ i) { for(i@@ =i@@ ;i@@ *@@ i<=@@ n;i++) { if(n%i==0) { fen@@ (n/i,i); t++; } } } intmain() { intk; cin>>k; while(k@@ --) { intn; cin>>n; t=1; fen@@ (n,@@ 2); cout<<t@@ <<endl; } }  
c -1
h -1
inta[@@ 10000@@ ],b[@@ 10000]; int@@ sizea@@ ,@@ sizeb@@ ; voidread@@ (){ cin>>@@ sizea@@ >>@@ sizeb@@ ; inti; for(i=0;i<=@@ sizea@@ -1;i++) cin>>a[i]; for(i=0;i<=@@ sizeb@@ -1;i++) cin>>b[i]; } voidorder@@ (intn,@@ inta[@@ ]){ inti,j; inttemp; for(i=n-1@@ ;i>=1;i--) for(j=0;j<=i-1;j++) if(a[j]>a[j+1]) { temp=@@ a[j];a[j]=a[j+1];@@ a[j+1]=temp; } } voidpaixu@@ (){ order@@ (@@ sizea@@ ,@@ a); order@@ (@@ sizeb@@ ,@@ b); } void@@ mix@@ (){ inti; for(i=0;i<=@@ sizeb@@ -1;i++) a[@@ sizea@@ +i]=b[i]; } voidprint@@ (){ cout<<a[0]; for(inti=1;i<=@@ sizea@@ +@@ sizeb@@ -1;i++) cout<<""<<a[i]; } intmain(){ read(); paixu@@ (); mix@@ (); print(); }  
c -1
h -1
0

intmain() { inta[100][100]; int@@ aa@@ [@@ 10000]; intr,@@ c,@@ i,@@ i1@@ ,j,@@ k,@@ r1@@ ,@@ c1@@ ; cin>>@@ r@@ >>@@ c; for(i=0;i<@@ r;i++) { for(j=0;j<@@ c;j++) cin>>a[i][j]; } r1@@ =0; c1@@ =0; k=0; i1@@ =0; while(1) { if(@@ c1@@ <@@ c@@ -1) { i=0; for(j=@@ c1@@ ;j>=0;j--) { aa@@ [k]=@@ a[i][j]; k++; if(i<@@ (@@ r@@ -1)) i++; else break; } c1@@ ++; } else { i=@@ i1@@ ; for(j=@@ c1@@ ;j>=0;j--) { aa@@ [k]=@@ a[i][j]; k++; if(i<@@ (@@ r@@ -1)) i++; else break; } i1@@ ++; } if((@@ i==@@ (@@ r@@ -1)@@ )&&(@@ j==@@ (@@ c@@ -1)@@ )) break; } for(i=0;i<k;i++) { cout<<@@ aa@@ [i]<<endl; } cin.get(); cin.get(); return0; }  
c -1
h -1
intf@@ (intn) { cin>>n; if(n%@@ 100==0) { if(n%@@ 400==0) return1; else@@ return0; } elseif(n@@ %@@ 4==0) return1; else return0; } intmain() { inty,m,@@ d; cin>>y>>m>>d; int@@ t=0,@@ i; for(i=1;i<m;i++) { if(i==1||i==@@ 5@@ ||i==@@ 3@@ ||i==7||i==8||i==@@ 10) t=t@@ +31; elseif(i==@@ 2) t=t+@@ 28; elseif(i==@@ 4||i==6||i==9||i==11) t=t+@@ 30; } t=t@@ +d; if(@@ f(@@ y)@@ ==1&&@@ m@@ >2) t=t+1; cout<<t@@ <<endl; return0; }  
c -1
h -1
0

void@@ factor@@ (int,int); int@@ result@@ [@@ 9999@@ ]={0}; intj=0; intmain() { int@@ times@@ ,k@@ =1; cin>>@@ times@@ ; while(k@@ <=@@ times@@ ){ intnum,@@ ansf@@ =0; cin>>num; factor@@ (2,@@ num); for(inti=0;i<@@ 9999@@ ;i++) if(result@@ [i])@@ ansf@@ ++; cout<<@@ ansf@@ <<endl; for(inti=0;i<@@ 9999@@ ;i++) result@@ [i]=0; k++; } return0; } void@@ factor@@ (int@@ start@@ ,int@@ num) { if(num@@ ==1) {@@ result@@ [j]@@ =1@@ ;j++@@ ;} for(inti=@@ start@@ ;i<=@@ num@@ ;i++){ if(num@@ %i==0) factor@@ (i,@@ num@@ /i); } }  
c -1
h -1
intmain() { intn,@@ sz[@@ 1000],@@ k,@@ p=0,@@ h@@ [@@ 1000][1000],@@ i,j; scanf("%d%d",&n,&k); for(i=0;i<n;i++){ scanf("%d",&@@ sz[i]@@ );} for(i=0;i<n;i++){ for(j=i+1;j<@@ n-i@@ -1;j++){ h@@ [i][j]=@@ sz[i]@@ +sz@@ [j]; if(h@@ [i][j]==@@ k){ p@@ =1;} } } if(p@@ ==0){ printf("no");} elseif(@@ p@@ ==1){ printf("yes");} return0; }  
c -1
h -1
0

voidmain() { structbook { intnum; charauthor@@ [27]; structbook*next; }@@ *head@@ =0@@ ,*@@ p1,*p2; int@@ total@@ ,i,j,@@ sumbook@@ [26]={0},@@ len,@@ max; scanf("%d",&@@ total); for(i=0;i<@@ total@@ ;i++) { p1=(structbook@@ *)malloc(sizeof(structbook)); if(@@ p1@@ ==0) { printf("@@ Memory@@ request@@ failed@@ !\@@ n@@ "); exit@@ (@@ -1); } scanf("%d%s",&p1->num,p1->@@ author); len=strlen(@@ p1->@@ author); for(j=0;j<len;j++) sumbook@@ [@@ p1->@@ author@@ [j]@@ -'A']++; if(head@@ ) p2->next=p1; else head=p1; p2=p1; } p1->next@@ =0; len@@ =0; for(i=0;i<26;i++) { if(@@ sumbook@@ [i]>@@ len@@ ) { len@@ =@@ sumbook@@ [i]; max=i; } } printf("%c\n%d\n",@@ max@@ +'A',@@ sumbook@@ [max@@ ]); max@@ +=@@ 'A'@@ ; for(p1=@@ head;@@ p1@@ ;@@ p1=p1->next) { len=strlen(@@ p1->@@ author); for(i=0;i<len;i++) { if(p1->@@ author@@ [i]==@@ max) { printf("%d\n",@@ p1->num); break; } } } }  
c -1
h -1
intmain() { inti,@@ y,@@ m,@@ d,@@ D@@ ; int@@ total=0; scanf("%d%d%d",&y,&m,&d); for(i=1;i<m;i++) { if(i==1||i==3||i==5||i==7||i==8||i==10@@ ||i==@@ 12) { total=total@@ +31; } elseif(i==@@ 4||i==6||i==9||i==11) { total=total+@@ 30; } else { if(y%@@ 4==0&&y%100!=0@@ ||@@ y%400==0) { total=total+@@ 29; } else { total=total+@@ 28; } } } D=@@ total@@ +d; printf("%d",D@@ ); return0; }  
c -1
h -1
0

voidmain(){ introw,col,@@ a[100][100],@@ i,j,@@ n; scanf("%d%d",&row,&col); for(i=0;i<row;i++){ for(j=0;j<col;j++){ scanf("%d",&a[i][j]); } } for(n=0;n@@ <=@@ row+col-2@@ ;n++){ for(i=0;i<@@ row@@ &&i@@ <=@@ n;i++){ for(j=0;j<col@@ &&j@@ <=@@ n;j++){ if(i+j@@ ==@@ n)@@ printf("%d\n",a[i][j]); } } } }  
c -1
h -1
int@@ a1@@ [100],@@ a2@@ [100]; void@@ get@@ (int@@ n1,int@@ n2) { for(inti=0;i<@@ n1@@ ;i++) { cin>>@@ a1@@ [i]; } for(inti=0;i<@@ n2;i++) { cin>>@@ a2@@ [i]; } } void@@ arrange@@ (int@@ n1,int@@ n2) { inttemp; for(intj=1;j<=@@ n1@@ -1;j++) { for(inti=0;i<=@@ n1@@ -j@@ -1;i++) { if(@@ a1@@ [i]>@@ a1@@ [i+1]) { temp=@@ a1@@ [i]; a1@@ [i]=@@ a1@@ [i+1]; a1@@ [i+1]=@@ temp; } } } for(intj=1;j<=@@ n2@@ -1;j++) { for(inti=0;i<=@@ n2@@ -j@@ -1;i++) { if(@@ a2@@ [i]>@@ a2@@ [i+1]) { temp=@@ a2@@ [i]; a2@@ [i]=@@ a2@@ [i+1]; a2@@ [i+1]=@@ temp; } } } } int@@ combine@@ (int@@ n1,int@@ n2) { int@@ out@@ [100]; for(inti=0;i<@@ n1@@ ;i++) { out@@ [i]=@@ a1@@ [i]; } for(inti=0;i<@@ n2;i++) { out@@ [@@ n1@@ +i]=@@ a2@@ [i]; } for(inti=0;i<@@ n1+n2@@ -1;i++) { cout<<@@ out@@ [i]@@ <<""; } cout<<@@ out@@ [@@ n1+n2@@ -1]; } intmain() { inta,b; cin>>a>>@@ b; get@@ (a,b); arrange@@ (a,b); combine@@ (a,b); return0; }  
c -1
h -1
0

voidmain() { intn,i,j,@@ max=0,@@ seq@@ =0; inta[@@ 26]={0}; scanf("%d",&n); structbook { intnum; charstr@@ [26]; }@@ book[999]; for(i=0;i<n;i++) scanf("%d%s",&book[i].@@ num,&@@ book[i].@@ str); for(i=0;i<n;i++) { for(j=0;j<26;j++) a[@@ (@@ book[i].@@ str@@ [j]-65@@ )@@ ]++; } for(i=0;i<26;i++) if(a[i]@@ >max){max=@@ a[i];@@ seq@@ =i;} printf("%c\n",@@ seq@@ +65); printf("%d\n",max); for(i=0;i<n;i++) { for(j=0;j<26;j++) if(book[i].@@ str@@ [j]==@@ seq@@ +65@@ ){@@ printf("%d\n",book[i].@@ num@@ );break;} } }  
c -1
h -1
intmain(intargc,char*argv[]) { intn,i,j,@@ ta@@ ,@@ tb@@ ,@@ ts@@ ,@@ tnum@@ ; int*@@ a,*@@ b@@ ,*@@ s@@ ,*@@ num; scanf("%d",&n); a=@@ (int*)malloc(sizeof(int)*n); b=@@ (int*)malloc(sizeof(int)*n); s=@@ (int*)malloc(sizeof(int)*n); num=@@ (int*)malloc(sizeof(int)*n); for(i=1;i<=n;i++) { scanf("%d%d%d",&@@ num[i]@@ ,&@@ a[i],&@@ b[i]); s[i]=@@ a[i]+@@ b[i]; } for(j=0;j<@@ 3@@ ;j++){ for(i=n@@ ;i@@ >1@@ ;i--){ if(s@@ [i]>@@ s@@ [i-1@@ ]) { ta@@ =@@ a[i-1]@@ ;@@ tb@@ =@@ b@@ [i-1]@@ ;@@ ts@@ =@@ s@@ [i-1]@@ ;@@ tnum@@ =@@ num@@ [i-1]; a[i-1@@ ]=@@ a[i];@@ b@@ [i-1@@ ]=@@ b[i]@@ ;s@@ [i-1@@ ]=@@ s[i]@@ ;@@ num@@ [i-1@@ ]=@@ num[i]; a[i]=@@ ta@@ ;@@ b[i]=@@ tb@@ ;@@ s[i]=@@ ts@@ ;@@ num[i]=@@ tnum@@ ; } } } printf("%d%d\n%d%d\n%d%d\n",@@ num@@ [1@@ ],@@ s@@ [1@@ ],@@ num[@@ 2@@ ],@@ s[2@@ ],@@ num[@@ 3@@ ],@@ s[@@ 3@@ ]); return0; }  
c -1
h -1
0

intmain() { introw,col,@@ i,j,k,@@ a[@@ 400@@ ][@@ 400@@ ]={0}; cin>>row>>col; for(i=0;i<row;i++) { for(j=0;j<col;j++) { cin>>a[i][j]; } } for(k=0;k<=@@ row+col@@ -1;k++) { for(i=0;i<@@ 2*@@ k@@ +1;i++) { if(a[i]@@ [k-i@@ ]!=0) {@@ cout<<a[i]@@ [k-i@@ ]@@ <<endl;} } } return0; }  
c -1
h -1
inta[100],b[100],@@ c[100]; int@@ num1@@ ; int@@ num2@@ ; voidmain() { voidread@@ (); void@@ queue@@ (); voidcombine@@ (); void@@ put@@ (); read(); queue@@ (); combine@@ (); put@@ (); } voidread@@ () { inti; scanf("%d%d",&@@ num1@@ ,&@@ num2@@ ); for(i=0;i<@@ num1@@ ;i++) { scanf("%d",&a[i]); } for(i=0;i<@@ num2@@ ;i++) { scanf("%d",&b[i]); } } void@@ queue@@ () { inti,j,t; for(i=0;i<@@ num1@@ -1;i++) { for(j=0;j<@@ num1@@ -i-1;j++) { if(a[j]>a[j+1]) { t=a[j]; a[j]=a[j+1]; a[j+1]=t; } } } for(i=0;i<@@ num2@@ -1;i++) { for(j=0;j<@@ num2@@ -i-1;j++) { if(b[j]>b[j+1]) { t=@@ b[j]; b[j]=b[j+1]; b[j+1]=@@ t; } } } } voidcombine@@ () { inti; for(i=0;i<@@ num1@@ ;i++) { c[i]=a[i]; } for(i=0;i<@@ num2@@ ;i++) { c@@ [i+@@ num1@@ ]=b[i]; } } void@@ put@@ () { inti; for(i=0;i<@@ num1@@ +@@ num2@@ -1;i++) { printf("%d",c[i]); } printf("%d",c[@@ num1@@ +@@ num2@@ -1]); }  
c -1
h -1
0

intmain() { intn,k,i,j,@@ s; intnum[@@ 1000]; scanf("%d%d",&n,&k); for(i=0;i<n;i++) scanf("%d",&@@ num[i]); for(i=0;i<n-1;i++) { for(j=i+1;j<n;j++) { s=@@ num@@ [i]+@@ num@@ [j]; if(s@@ ==@@ k){@@ s@@ =1;break;} s=0; } if(s@@ ==1)break; } if(s@@ ==0)@@ printf("no"); if(s@@ ==1)@@ printf("yes"); return0; }  
c -1
h -1
voidmain() { intn; scanf("%d",&n); inti,j,@@ num,@@ a,b; num=0; for(i=0;i<n;i++) { for(j=0;j<n;j++) { ints[@@ 1000]; scanf("%d",&s@@ [j]); if(s@@ [j]@@ ==0) num=num@@ +1; } } a=@@ (int)sqrt(@@ num@@ )@@ -1; b=@@ a*@@ a; printf("%d\n",@@ b); }  
c -1
h -1
0

intmain(){ intm,n,@@ i=1@@ ,j,@@ a[@@ 101][@@ 101],@@ s,@@ k; int@@ sum1@@ ,@@ sum2@@ ,@@ sum3@@ ,@@ sum4@@ ,sum; cin>>@@ s; while(i<=@@ s@@ ){ sum1@@ =0; sum2@@ =0; sum3@@ =0; sum4@@ =0; cin>>m; cin>>n; for(j=0;j<m;j++) for(k=0;k<n;k++){ cin>>a[j]@@ [k]; } for(j=0;j<n;j++) sum1@@ +=@@ a[0][j]; for(j=0;j<n;j++) sum2@@ +=@@ a[m-1][j]; for(j=0;j<m;j++) sum3@@ +=@@ a[j]@@ [0]; for(j=0;j<m;j++) sum4@@ +=@@ a[j]@@ [n-1]; sum=@@ sum1@@ +@@ sum2@@ +@@ sum3@@ +@@ sum4@@ ; cout<<sum@@ -@@ a[0][0]@@ -@@ a[0][@@ n-1]-@@ a[@@ m-1][0]-@@ a[m-1][@@ n-1@@ ]<<endl; i++; } return0; }  
c -1
h -1
intmain() { inti,j,k; intmax=0; int@@ maxall@@ =1; intnum[@@ 10000]; int@@ hight@@ [@@ 10000]; cin>>k; for(i=0;i<k;i++) { cin>>@@ hight@@ [i]; num@@ [i]=0; } num@@ [0]=1; for(i=1;i<k;i++) { max=1; for(j=0;j<i;j++) { if(@@ hight@@ [j]>=@@ hight@@ [i]@@ &&@@ max@@ <@@ num[j]@@ +1) max=@@ num@@ [j]+1; } num[i]=@@ max; if(num@@ [i]>@@ maxall@@ )@@ maxall@@ =@@ num[i]; } cout<<@@ maxall@@ <<endl; return0; }  
c -1
h -1
0

voidmain() { inta[100@@ ][@@ 16@@ ]={0},@@ i=0,j=0,@@ x,y,@@ z,@@ m; do {@@ j=0; do { scanf("%d",&a[i][j]); if(a[i][j]==@@ -1)break; j++; } while(a[i]@@ [j-1]@@ !=0); if(a[i][j]==@@ -1)break; else@@ i++; } while(@@ 1@@ ==1@@ ); for(x=0;x@@ <i@@ ;x@@ ++) { m=0; {@@ for(@@ y=0;@@ a[x@@ ][y@@ ]@@ !=0@@ ;y@@ ++) {@@ for(z@@ =0;@@ a[x@@ ][@@ z@@ ]@@ !=0@@ ;@@ z++) {@@ if(a[x@@ ][@@ z@@ ]==2*@@ a[x@@ ][y@@ ])@@ m++; } } } printf("%d\n",m); } }  
c -1
h -1
intmain() { intn@@ ,*@@ a,*@@ b,@@ i,j,@@ flag=0; scanf("%d\n",&n); a=@@ (int*)malloc(n*sizeof(int)); b=@@ (int*)malloc(n*sizeof(int)); for(i=0;i<n;i++){@@ scanf("%d",a@@ +i@@ );@@ b[i]@@ =0;} for(i=n-1;i>=0;i--) { for(j=i-1@@ ;j>=0@@ ;j--@@ )@@ if(a[i]==@@ a[j])@@ b[i]=@@ b[i]@@ +1; } for(i=0;i<n;i++) { for(j=i;j<@@ n@@ ;j++){@@ if(b[j]@@ ==0)@@ flag@@ =@@ flag@@ +1;} if(b[i]@@ ==0){@@ printf("%d",a[i]); if(flag@@ >1@@ )@@ printf("@@ ");} flag=0; } return0; }  
c -1
h -1
0

intmain() { char@@ yuan@@ [256@@ ]={0},@@ huan@@ [256@@ ]={0},@@ hou@@ [256@@ ]={0}; inti,@@ e,@@ k,@@ len1,len2,@@ len3@@ ,@@ count; gets(@@ yuan@@ ); gets(@@ huan@@ ); gets(@@ hou@@ ); len1=strlen(@@ yuan@@ ); len2=strlen(@@ huan@@ ); len3@@ =strlen(@@ hou@@ ); int@@ p=0; for(i=0;i<len1@@ -len2@@ +1;i++) { count=0; if(@@ yuan@@ [i]==@@ huan@@ [0]) { for(e@@ =0;e@@ <@@ len2@@ ;@@ e++) if(@@ yuan@@ [i+@@ e@@ ]==@@ huan@@ [@@ e@@ ])@@ count++; if(count==@@ len2) { for(k=0;k<@@ i@@ ;k++)@@ printf("%c",@@ yuan@@ [k]); for(k=i@@ ;k<@@ len3@@ +i@@ ;k++)@@ printf("%c",@@ hou@@ [k-i]); for(k=i+@@ len2@@ ;k<@@ len1@@ ;k++)@@ printf("%c",@@ yuan@@ [k]); p=1; break; } } } if(p@@ ==0)@@ printf("%s",@@ yuan@@ ); return0; }  
c -1
h -1
intmain() { inta; cin>>a; while(@@ a@@ !=-1) { ints[@@ 15@@ ]={0}; int@@ l@@ =1,@@ m=0; s[@@ 0]=@@ a; do { cin>>a; s[@@ l@@ ]=a; l++; }while(@@ a@@ !=0); for(inti=0;i<@@ 15;i++) for(intj=0;j<@@ 15@@ ;j++) if(s@@ [j]==2*@@ s[i]@@ &&@@ s[i]@@ !=0) m++; cout<<@@ m@@ <<endl; cin>>a; } return0; }  
c -1
h -1
0

intmain() { intn,@@ m=0,@@ k=0,@@ i,j,@@ x,y,@@ row,col,@@ a[100@@ ][100@@ ]@@ ,*p; cin>>row>>col; n=@@ row@@ *@@ col; for(i=0;i<row;i++) { p=@@ (int*)@@ a@@ +i@@ *@@ 100; for(j=0;j<col;j++) cin>>@@ *p@@ ++; } for(i=0,j@@ =0;m@@ <n@@ ;i@@ =@@ x@@ ,j=@@ y) { m++; p=@@ (int*)@@ a@@ +i@@ *@@ 100@@ +j@@ ; cout<<*p<<endl; x@@ =i+1@@ ;y@@ =j@@ -1; if(x@@ >=@@ row@@ ||@@ y@@ <0) { x@@ =0;@@ y@@ =+@@ +@@ k; if(y@@ >=@@ col) { x=@@ y@@ -col@@ +1; y=@@ col-1; } } } return0; }  
c -1
h -1
inta[@@ 101]; intmain() { int@@ q=0,@@ temp,@@ n,@@ i,@@ flag=0,@@ t[@@ 200]; memset(a,0,@@ sizeof(a)); scanf("%d",&n); for(i=0;i<n;i++) { scanf("%d",&@@ temp); if(a[@@ temp@@ ]==0) t@@ [q@@ ++]=@@ temp; a[@@ temp@@ ]++; } for(i=0;i<@@ q@@ ;i++) { if(flag@@ ==0)@@ flag=1; else@@ printf(""); printf("%d",@@ t@@ [i]); } }  
c -1
h -1
0

intk,@@ d=0,@@ m; voidf@@ (inti,@@ inta[@@ 25@@ ],int@@ c[@@ 25@@ ]) { if(i==0)@@ a[i]=0; else@@ a[i]=@@ a[i-1]@@ +1; for(;@@ ;@@ a[i]@@ ++) {@@ if(a[i]==@@ (k@@ -1)) {@@ if(i==0)@@ m=1; elseif(@@ c[@@ a[i]@@ ]>@@ c[@@ a[i-1]@@ ])@@ m=i; else@@ m@@ =i+1; d=d@@ >@@ m@@ ?@@ d@@ :@@ m; break;} if(i@@ !=0) {if(@@ c[@@ a[i]@@ ]>@@ c[@@ a[i-1]@@ ])@@ continue; else@@ f(@@ i@@ +1,@@ a,@@ c@@ );} else@@ f(@@ 1,@@ a,@@ c); } } intmain() { inti,@@ c[@@ 25],@@ a[@@ 25]; scanf("%d",&k); for(i=0;i<k;i++) scanf("%d",&@@ c[i]); f(@@ 0,@@ a,@@ c); printf("%d",d); return0; }  
c -1
h -1
intmain() { inti,j,k,@@ a[100@@ ][@@ 16],@@ K@@ ,@@ I@@ ,@@ b[100@@ ]={0}; for(i=0;;i++) { scanf("%d",&a[i]@@ [0]); if(a[i]@@ [0]@@ ==-1)break; for(j=1@@ ;@@ ;j++) { scanf("%d",&a[i][j]); if(a[i][j]@@ ==0)break; } for(k=0;k<=@@ j@@ -1;k++) { for(@@ K@@ =0;@@ K@@ <=j@@ -1;@@ K@@ ++) { if(a[i]@@ [@@ K@@ ]==2*@@ a[i][k]@@ )@@ b[i]@@ ++; } } } for(@@ I@@ =0;@@ I@@ <i@@ ;@@ I@@ ++) printf("%d\n",@@ b[@@ I@@ ]); return0; }  
c -1
h -1
0

int@@ deal@@ (int@@ num,int@@ p) { inti,@@ sum=0; if(num@@ ==1) return1; for(i=@@ p@@ ;i<=@@ num@@ ;++i) if(num@@ %i==0) sum+=@@ deal@@ (@@ num@@ /i,i); returnsum; } intmain() { intn,@@ a; cin>>n; while(n--) { cin>>a; cout<<@@ deal@@ (a,@@ 2)<<endl; } return0; }  
c -1
h -1
int@@ input@@ (int*@@ s@@ ,intn) { inti=0; for(i=0;i<n;i++) scanf("%d",&s[i]); return0; } int@@ sort@@ (int*@@ s@@ ,intn) { inti=0,j=0; for(i=0;i<n;i++) { for(j=1;j<n;j++) { if(s@@ [j-1]@@ >@@ s@@ [j]) { int@@ temp=@@ s@@ [j-1]; s@@ [j-1]=@@ s[j]; s@@ [j]=temp; } } } return0; } int@@ combine@@ (int*@@ s1@@ ,int*@@ s2@@ ,int@@ n1,int@@ n2@@ ,int*@@ s) { inti=0; for(i=0;i<n1;i++) s[i]=@@ s1@@ [i]; for(i=0;i<n2;i++) s@@ [i+@@ n1@@ ]=@@ s2@@ [i]; return0; } int@@ output@@ (int*@@ s@@ ,intn) { inti=0; if(n@@ <=@@ 0@@ ) return0; printf("%d",@@ s@@ [0]); for(i=1;i<n;i++) printf("%d",@@ s[i]); } intmain() { int@@ n1@@ =0,@@ n2@@ =0; scanf("%d%d",&@@ n1,@@ &@@ n2); int@@ s1@@ [@@ 1000]={0}; int@@ s2[@@ 1000]={0}; input@@ (@@ s1,@@ n1@@ );@@ input@@ (@@ s2,@@ n2); sort(@@ s1,@@ n1@@ );@@ sort(@@ s2,@@ n2); ints[@@ 2000@@ ]={0}; combine@@ (@@ s1,@@ s2,@@ n1,n2,@@ s); output@@ (@@ s,@@ n1+@@ n2); return0; }  
c -1
h -1
0

structbook { intid; chars[@@ L@@ ]; int@@ len; }b[@@ M@@ ]; void@@ fun@@ (int@@ count[@@ L@@ ],@@ chars[@@ L@@ ],int@@ len@@ ) { inti; for(i=0;i<len;i++) { intm; m=@@ s[i]@@ -'A'; count@@ [m@@ ]++; } } int@@ judge@@ (@@ chars[@@ L@@ ],int@@ len,@@ charname@@ ) { inti,@@ answer@@ =0; for(i=0;i<len;i++) { if(s[i]==@@ name@@ ) { answer@@ =1; break; } } return@@ answer@@ ; } intmain() { intm,@@ k,@@ count[@@ L@@ ]={0},@@ i,j,@@ max,@@ num; charname@@ ; scanf("%d",&m); for(k=0;k<@@ m;k++) { scanf("%d%s",&@@ b[k@@ ].id,@@ b[k@@ ].@@ s); b[k@@ ].@@ len=strlen(@@ b[k@@ ].@@ s); fun@@ (@@ count,@@ b[k@@ ].@@ s,@@ b[k@@ ].@@ len); } max=count@@ [0]; num=0; for(j=1;j<@@ L@@ ;j++) { if(count@@ [j]@@ >max) { max=count@@ [j]; num@@ =j; } } name@@ =@@ num@@ +65; printf("%c\n",@@ name); printf("%d\n",max); for(k=0;k<@@ m;k++) { int@@ answer@@ =0; answer@@ =@@ judge@@ (@@ b[k@@ ].@@ s,@@ b[k@@ ].@@ len,@@ name); if(@@ answer@@ ==1) printf("%d\n",@@ b[k@@ ].id); } return0; }  
c -1
h -1
intmain() { int@@ aaa@@ [5@@ ][@@ 3@@ ]; intyear,@@ mon@@ ,@@ day,@@ i,n,@@ m; int@@ month@@ [12@@ ]; month@@ [0]=@@ 31,@@ month@@ [1]=@@ 28@@ ,@@ month@@ [2]=@@ 31,@@ month@@ [3@@ ]=30@@ ,@@ month@@ [4@@ ]=@@ 31,@@ month@@ [5@@ ]=30@@ ,@@ month@@ [@@ 6@@ ]=@@ 31,@@ month@@ [@@ 7@@ ]=@@ 31,@@ month@@ [@@ 8@@ ]=30@@ ,@@ month@@ [@@ 9@@ ]=@@ 31,@@ month@@ [10@@ ]=30@@ ,@@ month@@ [11@@ ]=31; for(i=0;i<@@ 5;i++) { scanf("%d%d@@ %d@@ \n",&@@ year@@ ,&@@ mon@@ ,&@@ day); aaa@@ [i]@@ [0]=@@ year; aaa@@ [i]@@ [1]=@@ mon@@ ; aaa@@ [i]@@ [2]=@@ day; } for(i=0;i<@@ 5;i++) { year@@ =@@ aaa@@ [i]@@ [0]; mon@@ =@@ aaa@@ [i]@@ [1]; day=@@ aaa@@ [i]@@ [2]; if((year%4==0&&year%100!=0@@ )||@@ year%400==0) month@@ [1]=@@ 29; else@@ month@@ [1]=@@ 28; n=0; for(m=0;m<@@ (@@ mon@@ -1)@@ ;m++) { n=n+@@ month@@ [m]; } n=n+@@ day; printf("%d\n",n); } }  
c -1
h -1
0

struct@@ Patient@@ { charid[10]; intage; struct@@ Patient@@ *next; struct@@ Patient@@ *@@ pre@@ ; }; struct@@ Patient@@ *creat@@ (int@@ x); struct@@ Patient@@ *@@ sort@@ (struct@@ Patient@@ *@@ ); voidprint(struct@@ Patient@@ *@@ ); intmain() { struct@@ Patient@@ *@@ patient@@ ,*@@ patient2@@ ; intn,i; scanf("%d",&n); patient@@ =@@ creat@@ (n); patient2@@ =@@ sort(@@ patient@@ ); print(@@ patient2@@ ); } struct@@ Patient@@ *creat@@ (intx@@ ){ struct@@ Patient@@ *@@ p1,*p2,*@@ head@@ ,*p; inti; head=NULL; for(i=0;i<x;i++){ p1=(struct@@ Patient@@ *)malloc(@@ Len@@ ); if(i@@ ==0){@@ head@@ =p1;@@ head->@@ pre@@ =NULL@@ ;} else{@@ p2->next@@ =p1;@@ p1->@@ pre@@ =p2@@ ;} p2=p1; scanf("%s%d",@@ p1->id,&p1->age); } p1->next=NULL; returnhead; } struct@@ Patient@@ *@@ sort@@ (struct@@ Patient@@ *head@@ ){ struct@@ Patient@@ *@@ p1,*p2,*@@ temp@@ ,*p; temp@@ =(struct@@ Patient@@ *)malloc(@@ Len@@ ); p1=@@ p2=head; while(p1@@ ){ if(p1->age@@ >=60){ p2=p1->next; while(@@ p2@@ ){ if(@@ p2->age@@ >@@ p1->age@@ ){ temp@@ ->age=@@ p2->@@ age; strcpy(@@ temp@@ ->id,@@ p2->@@ id); p=@@ p2; while(@@ p->@@ pre@@ !=@@ p1@@ ){ strcpy(@@ p->@@ id,@@ p->@@ pre@@ ->id); p->age@@ =p->@@ pre@@ ->@@ age; p=@@ p->@@ pre@@ ; } strcpy(@@ p->@@ id,@@ p1->@@ id); p->age@@ =p1->@@ age; p1->age@@ =@@ temp->@@ age; strcpy(@@ p1->@@ id,@@ temp->@@ id); } p2=p2->next; } } p1=p1->next; } returnhead; } voidprint(struct@@ Patient@@ *head@@ ){ struct@@ Patient@@ *@@ p1,*p2,*@@ p; p=head; while(p@@ ){ if(p->@@ age@@ >=60){ printf("%s\n",p->id); } p=p->next; } p=head; while(p@@ ){ if(p->@@ age@@ <60){ printf("%s\n",p->id); } p=p->next; } }  
c -1
h -1
inta[@@ 13]={0,31,28,31,30,31,30,31,31,30,31,30,31}; intmain(){ intyear,month,day,@@ num=0; cin>>year>>@@ month>>@@ day; if((year%4==0&&year%100!=0)||(year%400==0)) a[2@@ ]++; for(inti=1;i<@@ month;i++) num+=@@ a[i]; num+=@@ day; cout<<num<<endl; return0; }  
c -1
h -1
0

intmain(intargc,char*argv[]) { structstudent{ int@@ ID,@@ Ch@@ ,@@ Ma@@ ; }@@ temp; int@@ fID@@ =0,@@ fG@@ =0,@@ sID@@ =0,@@ sG@@ =0,@@ tID@@ =0,@@ tG@@ =0; intn; scanf("%d",&n); inti; for(i=0;i<n;i++) { intsum=0; scanf("%d%d%d",&@@ temp.@@ ID,&@@ temp.@@ Ch@@ ,&@@ temp.@@ Ma@@ ); sum=@@ temp.@@ Ch@@ +@@ temp.@@ Ma@@ ; if(sum@@ ==@@ fG@@ ) { tG@@ =@@ sG@@ ; tID@@ =@@ sID@@ ; sG@@ =@@ sum; sID@@ =@@ temp.@@ ID; } if(sum@@ >@@ fG@@ ) { tG@@ =@@ sG@@ ; tID@@ =@@ sID@@ ; sG@@ =@@ fG@@ ; sID@@ =@@ fID@@ ; fG@@ =@@ sum; fID@@ =@@ temp.@@ ID; } if(sum@@ <@@ fG@@ &&@@ sum>@@ sG@@ ) { tG@@ =@@ sG@@ ; tID@@ =@@ sID@@ ; sG@@ =@@ sum; sID@@ =@@ temp.@@ ID; } if(sum@@ <@@ sG@@ &&@@ sum>@@ tG@@ ) { tG@@ =@@ sum; tID@@ =@@ temp.@@ ID; } } printf("%d%d\n",@@ fID@@ ,@@ fG@@ ); printf("%d%d\n",@@ sID@@ ,@@ sG@@ ); printf("%d%d\n",@@ tID@@ ,@@ tG@@ ); return0; }  
c -1
h -1
structstudent { intnum; intc; intm; intsum; structstudent*next; }; voidmain() { intn,i,j; scanf("%d",&n); structstudent*head,*@@ p0@@ ,*@@ p,*@@ q; head@@ =(structstudent*)malloc(sizeof(structstudent)); head@@ ->next=NULL; for(i=0;i<n;i++) { q@@ =(structstudent*)malloc(sizeof(structstudent)); scanf("%d%d%d",&@@ q->@@ num,&@@ q->@@ c@@ ,&@@ q->@@ m); q->@@ sum=@@ q->@@ c+@@ q->@@ m; q@@ ->next=NULL; p0@@ =head; p=@@ p0@@ ->next; j=0; while(p@@ !=NULL@@ &&@@ q->@@ sum<=@@ p->@@ sum) { p0@@ =p; p=p->next; j++; if(j@@ >@@ 3) goto@@ A@@ ; } p0@@ ->next=@@ q; q@@ ->next=p; A@@ :@@ continue; } p=head->next; for(i=0;i<3;i++) { printf("%d%d\n",@@ p->@@ num,@@ p->@@ sum); p=p->next; } }  
c -1
h -1
1


intmain() { inti,j,@@ a,b,@@ c=0; doublen; scanf("%lf",&n); char@@ A[@@ 500],@@ B@@ [500]; scanf("%s%s",@@ A@@ ,@@ B@@ ); a=strlen(@@ A@@ ); b=strlen(@@ B@@ ); if(a!=@@ b) { printf("error"); return0; } for(j=0;j<a@@ ;j++) { if(A@@ [j]==@@ B@@ [j]) { c++; } if(A@@ [j]!='@@ A'&&@@ A@@ [j]!='@@ G'&&@@ A@@ [j]!='@@ C'&&@@ A@@ [j]!='@@ T@@ ') { printf("error"); return0; } if(@@ B@@ [j]!='@@ A'&&@@ B@@ [j]!='@@ G'&&@@ B@@ [j]!='@@ C'&&@@ B@@ [j]!='@@ T@@ ') { printf("error"); return0; } } if((@@ 1.0*@@ c@@ /@@ a)@@ >=@@ n) { printf("yes"); }else{ printf("no"); } return0; }  
c -1
h -1
intmain() { intn,@@ num[@@ 90@@ ]={0},@@ a[@@ 20001@@ ]={0},@@ i; cin>>n; cin>>@@ a[1]; num[@@ a[1]@@ -@@ 10@@ ]++; cout<<@@ a[1]; for(i=2;i<=n;i++) { cin>>a[i]; num[@@ a[i]@@ -@@ 10@@ ]++; if(@@ num[@@ a[i]@@ -@@ 10@@ ]@@ ==1)@@ cout<<""<<a[i]; } return0; }  
c -1
h -1
0

int@@ panduansushu@@ (int@@ t) { inti; for(i=2@@ ;i<@@ t;i++) { if(t@@ %i@@ ==0){@@ break;} } if(i>@@ t@@ /2@@ )@@ return1; else@@ return0; } intsum=0; void@@ fun@@ (intn,int@@ i) { if(n@@ ==1)@@ sum++; for(@@ ;i<=n;i++) { if(n@@ %i==0)@@ fun@@ (n/i,i); } } voidmain() { inta[100@@ ],@@ i,@@ res@@ ,j,@@ n; scanf("%d",&n); for(j=0;j<n@@ ;j++)@@ scanf("%d",&a[j]); for(j=0;j<n;j++) { if(@@ panduansushu@@ (@@ a[j])@@ ==1) { printf("@@ 1@@ \n"); } else{@@ for(i=2@@ ,@@ res@@ =1@@ ;i<@@ a[j]@@ /2@@ ;i++) { if(a[j]@@ %i@@ ==0){@@ sum=0;@@ fun@@ (@@ a[j]@@ /i,@@ i@@ );@@ res@@ +=@@ sum@@ ;} } printf("%d\n",@@ res@@ );}} }  
c -1
h -1
intmain() { inta[100][100],@@ row,col,@@ i,j; scanf("%d%d",&row,&col); for(i=0;i<row;i++) { for(j=0;j<col;j++) { scanf("%d",&a[i][j]); } } for(i=0;i<@@ row+col@@ -1;i++) { if(i>=@@ col) { for(j=col-1@@ ;j>=i@@ -@@ row@@ +1@@ &&j>=0@@ ;j--) { printf("%d\n",@@ a[i@@ -j@@ ][j]); } } else { for(j=i@@ ;j>=i@@ -@@ row@@ +1@@ &&j>=0@@ ;j--) { printf("%d\n",@@ a[i@@ -j@@ ][j]); } } } return0; }  
c -1
h -1
0

voidmain() { intm,n,@@ i,j,k,@@ d,@@ s; inta,@@ b=0,@@ c; int@@ tt@@ [1000],@@ pp@@ [1000],@@ miao@@ [26]={0}; char@@ kk@@ [1000][@@ 30]; char@@ w; scanf("%d",&m); for(i=0;i<m;i++) { scanf("%d%s",&@@ tt@@ [i],@@ kk@@ [i]); } for(@@ s=0,@@ j=@@ 65@@ ;j<=@@ 90@@ ;j++,@@ s++) { for(k=0;k<@@ m;k++) { for(d@@ =0;@@ kk@@ [k@@ ][@@ d@@ ]!='\0'@@ ;@@ d++) { if(@@ kk@@ [k@@ ][@@ d@@ ]==@@ j)@@ miao@@ [s@@ ]++; } } } for(a=0;a@@ <26@@ ;a@@ ++) { if(@@ miao@@ [a]@@ >b@@ ){@@ b=@@ miao@@ [a@@ ];@@ c=@@ a@@ ;} } printf("%c\n%d\n",@@ c@@ +65@@ ,@@ b); w@@ =(@@ c@@ +65); for(i=0;i<m;i++) { for(j=0;@@ kk@@ [i][j]@@ !='\0';j++) { if(@@ kk@@ [i][j]==@@ w@@ ){@@ printf("%d\n",@@ tt@@ [i]@@ );break;} } } }  
c -1
h -1
int@@ num_a@@ ,@@ num_b@@ ,a[@@ 2000@@ ]={0},b[@@ 1000]={0},@@ i,j; voidmain() { void@@ a1@@ (@@ ),@@ a2@@ (@@ ),@@ a3@@ (@@ ),@@ a4@@ (); a1@@ (); a2@@ (); a3@@ (); a4@@ (); } void@@ a1@@ () { scanf("%d%d",&@@ num_a@@ ,&@@ num_b@@ ); for(i=0;i<@@ num_a@@ ;i++) scanf("%d",&a[i]); for(i=0;i<@@ num_b@@ ;i++) scanf("%d",&b[i]); } void@@ a2@@ () { int@@ turn1@@ ; for(i=0;i<@@ num_a@@ ;i++) for(j=i+1;j<@@ num_a@@ ;j++) if(a[i]>a[j]) { turn1@@ =@@ a[i];a[i]=@@ a[j];a[j]=@@ turn1@@ ; } for(i=0;i<@@ num_b@@ ;i++) for(j=i+1;j<@@ num_b@@ ;j++) if(b[i]>@@ b[j]) { turn1@@ =@@ b[i]@@ ;@@ b[i]=b[j]@@ ;@@ b[j]=@@ turn1@@ ; } } void@@ a3@@ () { for(i=0;i<@@ num_b@@ ;i++) a[@@ num_a@@ +i]=b[i]; } void@@ a4@@ () { for(i=0;i<@@ num_a@@ +@@ num_b@@ -1;i++) printf("%d@@ "@@ ,@@ a[i]); printf("%d\n",a[@@ num_a@@ +@@ num_b@@ -1]); }  
c -1
h -1
0

intf@@ (intx,inty) { inta,@@ n=1; for(@@ a=@@ y@@ ;a@@ <=@@ sqrt(@@ x@@ );@@ a++) { if(x%@@ a@@ ==0) { n+=@@ f(@@ x/@@ a,@@ a); } } return@@ n; } intmain() { intm,@@ i; scanf("%d",&m); intx@@ [m@@ ],@@ n@@ [m]; for(i=0;i<m;i++) { scanf("%d",&@@ x[i]); n[i]=@@ f(@@ x@@ [i],@@ 2); } for(i=0;i<m;i++) { printf("%d\n",n@@ [i]); } return0; }  
c -1
h -1
intmain() { char@@ zfc1@@ [257@@ ]={0},@@ zfc2@@ [257@@ ]={0},@@ zfc3@@ [257@@ ]={0},@@ zichuan@@ [257@@ ]={0}; intlen1,len2,@@ i,j,k,@@ t,@@ flag=0; inttemp; scanf("%s",@@ zfc1@@ ); scanf("%s",@@ zfc2@@ ); scanf("%s",@@ zfc3@@ ); len1=strlen(@@ zfc1@@ ); len2=strlen(@@ zfc2@@ ); for(i=0;i<=@@ len1@@ -len2@@ ;i++) { for(j=0;j<len2@@ ;j++) { zichuan@@ [j]=@@ zfc1@@ [j+i@@ ]; } if(strcmp(@@ zichuan@@ ,@@ zfc2@@ )@@ ==0) { flag=1; temp@@ =i; break; } } if(flag==0) { printf("%s",@@ zfc1@@ ); } else { for(k=0;k<@@ temp@@ ;k++) { printf("%c",@@ zfc1@@ [k]); } printf("%s",@@ zfc3@@ ); for(@@ t=@@ temp@@ +len2@@ ;@@ zfc1@@ [t@@ ]!='\0'@@ ;t++) { printf("%c",@@ zfc1@@ [t@@ ]); } } return0; }  
c -1
h -1
0

struct{ charID[10]; int@@ nian@@ ; }@@ patient@@ [100],@@ old@@ [100],@@ qita@@ [100],@@ temp; intmain() { intn,i,k,@@ e,@@ num,@@ j; scanf("%d",&n); for(i=0;i<n;i++){ scanf("%s%d",@@ patient@@ [i].@@ ID,&@@ patient@@ [i].@@ nian@@ ); } num=0; for(i=0;i<n;i++){ if(@@ patient@@ [i].@@ nian@@ >=60){ num=num@@ +1; } } k=0; for(i=0;i<n;i++){ if(@@ patient@@ [i].@@ nian@@ >=60){ old@@ [k]=@@ patient@@ [i]; k=k+1; } } k=0; for(i=0;i<n;i++){ if(@@ patient@@ [i].@@ nian@@ <60){ qita@@ [k]=@@ patient@@ [i]; k=k+1; } } for(j=1;j<@@ num@@ ;j++){ for(k=0;k<@@ num@@ -j@@ ;k++){ if(old@@ [k+1@@ ].@@ nian@@ >@@ old@@ [k].@@ nian@@ ){ temp=@@ old@@ [k+1]; old@@ [k+1]=@@ old@@ [k]; old@@ [k]=@@ temp; } } } for(k=0;k<@@ num@@ ;k++){ printf("%s\n",old@@ [k].@@ ID); } for(k=0;k<@@ n-@@ num@@ ;k++){ printf("%s\n",@@ qita@@ [k].@@ ID); } return0; }  
c -1
h -1
struct@@ ace { charid[10]; inta; intb; }@@ o@@ [3@@ ],@@ r; voidmain() { intn,i,@@ s[@@ 3@@ ],@@ m,@@ j,@@ v@@ ; char@@ z@@ [10]; scanf("%d",&n); scanf("%s%d%d",@@ o@@ [0].@@ id,&@@ o@@ [0].@@ a,&@@ o@@ [0].@@ b); scanf("%s%d%d",@@ o@@ [1].@@ id,&@@ o@@ [1].@@ a,&@@ o@@ [1].@@ b); scanf("%s%d%d",@@ o@@ [2].@@ id,&@@ o@@ [2].@@ a,&@@ o@@ [2].@@ b); s[@@ 0]=@@ o@@ [0].@@ a+@@ o@@ [0].@@ b; s@@ [1]=@@ o@@ [1].@@ a+@@ o@@ [1].@@ b; s[2@@ ]=@@ o@@ [2].@@ a+@@ o@@ [2].@@ b; for(i=0;i<2@@ ;i++) { for(j=i+1;j<@@ 3;j++) { if(s@@ [i]<@@ s@@ [j]) { strcpy(@@ z,@@ o@@ [i].id); strcpy(@@ o@@ [i].@@ id,@@ o@@ [j].@@ id); strcpy(@@ o@@ [j].@@ id,@@ z); v@@ =@@ s[i]; s[i]=@@ s[j]; s[j]=@@ v@@ ; } } } for(i=0;i<n-@@ 3;i++) { scanf("%s%d%d",@@ r@@ .@@ id,&@@ r@@ .@@ a,&@@ r@@ .@@ b); m=@@ r@@ .@@ a+@@ r@@ .@@ b; if(m@@ >@@ s@@ [0]) {@@ o@@ [2]=@@ o@@ [1]@@ ;@@ s[2@@ ]=@@ s[1]@@ ;@@ o@@ [1]=@@ o@@ [0]@@ ;s@@ [1]=@@ s[0]@@ ;@@ o@@ [0]=@@ r@@ ;@@ s[@@ 0]=@@ m@@ ;} elseif(m@@ <=@@ s[0]@@ &&m@@ >@@ s@@ [1@@ ]) {@@ o@@ [2]=@@ o@@ [1]@@ ;@@ s[2@@ ]=@@ s[1]@@ ;@@ o@@ [1]=@@ r@@ ;s@@ [1]=@@ m@@ ;} elseif(m@@ <=@@ s[1]@@ &&m@@ >@@ s[2@@ ]) {@@ o@@ [2]=@@ r@@ ;@@ s[2@@ ]=@@ m@@ ;} } printf("%s%d\n",@@ o@@ [0].@@ id,@@ s@@ [0]); printf("%s%d\n",@@ o@@ [1].@@ id,@@ s@@ [1]); printf("%s%d\n",@@ o@@ [2@@ ].id,@@ s[2@@ ]); }  
c -1
h -1
0

intmain() { intnumber@@ [@@ 1001@@ ],@@ num[@@ 27@@ ]={0},@@ ascii@@ [27]; chara[@@ 1001@@ ][@@ 27@@ ],@@ p; inti,j,@@ m,n,@@ t1@@ ,@@ t; cin>>m; n=@@ 26@@ ; for(i=0;i<m;i++) { cin>>@@ number@@ [i]; cin>>a[i]; for(j=0;j<strlen(@@ a[i]@@ );j++) { num[@@ a[i][j]@@ -'A']++; } } for(i=0;i<n;i++) { ascii@@ [i]=@@ i; } for(i=0;i<n;i++) { for(j=n-1@@ ;j>0;j--) { if(num@@ [j]>@@ num@@ [j-1]) { t=@@ num@@ [j]; num@@ [j]=@@ num@@ [j-1]; num@@ [j-1]=@@ t; t1@@ =@@ ascii@@ [j]; ascii@@ [j]=@@ ascii@@ [j-1]; ascii@@ [j-1]=@@ t1@@ ; } } } p@@ ='A'+@@ ascii@@ [0]; cout<<@@ p@@ <<endl; cout<<num@@ [0]@@ <<endl; for(i=0;i<m;i++) { for(j=0;j<strlen(@@ a[i]@@ );j++) { if(a[i][j]==@@ p) { cout<<@@ number@@ [i]<<endl; break; } } } return0; }  
c -1
h -1
intmain(){ inti,@@ p=0,@@ r=0; double@@ k,@@ w; chars1@@ [1000],@@ s2@@ [1000]; scanf("%lf",&@@ k); scanf("%s%s",@@ s1,@@ s2); if(strlen(@@ s1@@ )!=strlen(@@ s2@@ )){ r++; }else{ for(i=0;i<strlen(@@ s1@@ );i++){ if(s1@@ [i]!='A'&&@@ s1@@ [i]!='C'&&@@ s1@@ [i]!='G'&&@@ s1@@ [i]!='T'){ r++; } if(s2@@ [i]!='A'&&@@ s2@@ [i]!='C'&&@@ s2@@ [i]!='G'&&@@ s2@@ [i]!='T'){ r++; } } } if(r@@ >0){ printf("error"); }else{ for(i=0;i<strlen(@@ s1@@ );i++){ if(s1[i]==s2@@ [i]){ p++; } } w@@ =1@@ .0@@ *p@@ /@@ (@@ strlen(@@ s1@@ )); if(w@@ >@@ k){ printf("yes"); }else{ printf("no"); } } return0; }  
c -1
h -1
0

int@@ imat@@ [100][100]; intmain() { intn; cin>>n; inta,b; for(inti=0;i<n;i++){ cin>>a>>@@ b; for(intj=0;j<@@ a@@ ;j++){ for(intk=0;k<@@ b@@ ;k++){ cin>>@@ imat@@ [j]@@ [k]; } } int(*p)@@ [100@@ ]=@@ &@@ (@@ imat@@ [0]); int@@ counter@@ =0; for(inti=0;i<@@ a;i++){ for(intj=0;j<@@ b@@ ;j++){ if(j@@ %@@ b@@ ==0||@@ j@@ %@@ b==@@ (@@ b@@ -1)@@ ||@@ i@@ ==0||i==@@ (a@@ -1)) counter@@ =@@ counter@@ +@@ *(*(p+i)+j); } } cout<<@@ counter@@ <<endl; } return0; }  
c -1
h -1
intmain(){ chars[256],@@ w@@ [256],@@ z@@ [256]; int@@ ls@@ ,@@ lw@@ ,@@ t,@@ lz@@ ; inti,j,@@ loc@@ =-1; scanf("%s%s%s",@@ w,@@ s,@@ z); ls@@ =strlen(s); lw@@ =strlen(@@ w); lz@@ =strlen(@@ z); for(i=0;i<@@ lw@@ ;i++){ t=0; for(j=0;j<@@ ls@@ ;j++){ if(w@@ [i+j]==@@ s@@ [j]) t++; } if(t==@@ ls@@ ){ loc@@ =i; break; } } if(@@ loc@@ !=@@ -1){ for(i=0;i<@@ loc@@ ;i++){ printf("%c",@@ w@@ [i]); } printf("%s",@@ z); for(i=@@ loc@@ +@@ lz@@ ;i<@@ lw@@ ;i++){ printf("%c",@@ w@@ [i]); } } else{ puts(@@ w); } return0; }  
c -1
h -1
0

inta; int@@ res@@ ; intsum; void@@ dfs@@ (int@@ cnt@@ ){ if(@@ cnt@@ *@@ sum@@ ==@@ a@@ ){@@ res@@ ++;@@ return@@ ;} if(@@ cnt@@ *@@ sum<@@ a){ sum@@ *=@@ cnt@@ ; int@@ j=@@ a/@@ sum; for(inti=@@ cnt@@ ;i<=@@ j@@ ;i++) dfs@@ (i); sum@@ /=@@ cnt@@ ; return; } } intmain(){ int@@ nCases@@ ; scanf("%d",&@@ nCases@@ ); for(inti=0;i<@@ nCases@@ ;i++){ scanf("%d",&a); res@@ =0;@@ sum=1; for(inti=2;i<=@@ a@@ ;i++)@@ dfs@@ (i); printf("%d\n",@@ res@@ ); } return0; }  
c -1
h -1
intmain() { inti,j,k,n,@@ a[1000]; scanf("%d%d",&n,&k); for(i=0;i<n;i++) { scanf("%d",&a[i]); } int@@ flag; for(i=0;i<n;i++) { flag=0; for(j=0;j<n;j++) { if(k==@@ a[i]+@@ a[j]) { flag@@ =1@@ ;break; }} if(flag) { break; } } if(flag) { printf("yes"); } else printf("no"); return0; }  
c -1
h -1
0

structbook { intid; charauthor[26]; }; intmain() { structbook@@ b[@@ 999]; inta[@@ 26]; intm,i,j,@@ max,@@ maxauthor@@ ; charc; scanf("%d",&m); for(i=0;i<m;i++) { scanf("%d%s",&@@ b[i].@@ id,@@ b[i].@@ author); } for(i=0;i<26;i++) { a[i]=0; } for(i=0;i<m;i++) { for(j=0;@@ b[i].@@ author@@ [j]!='\0';j++) { c=@@ b[i].@@ author@@ [j]; a[c@@ -65]++; } } max=@@ a[0]; maxauthor@@ =0; for(i=1;i<26;i++) { if(a[i]>max) { max=a[i]; maxauthor@@ =i; } } printf("%c\n%d\n",@@ maxauthor@@ +65@@ ,max); for(i=0;i<m;i++) { for(j=0;@@ b[i].@@ author@@ [j]!='\0';j++) { c=@@ b[i].@@ author@@ [j]; if(c==@@ maxauthor@@ +65) { printf("%d\n",b[i].@@ id); break; } } } return0; }  
c -1
h -1
intmain() {@@ printf("@@ 3@@ \n@@ ");@@ printf("@@ 2@@ \n@@ ");@@ printf("@@ 0@@ \n@@ ");@@ printf("@@ 0@@ \n@@ ");@@ printf("@@ 1@@ \n@@ ");@@ printf("@@ 1@@ \n@@ ");@@ printf("@@ 0@@ \n@@ ");@@ printf("@@ 2@@ \n@@ ");@@ printf("@@ 2@@ \n@@ ");@@ printf("@@ 6@@ \n@@ ");@@ printf("@@ 11@@ \n@@ ");@@ return0;}  
c -1
h -1
0

int@@ zhi@@ (int@@ a); int@@ yin@@ (intm,int@@ t); intmain() { intn,@@ i=0; int@@ str@@ [@@ 10000]; scanf("%d",&n); for(i=0;i<n;i++) scanf("%d",&@@ str[i]); i=0; for(i=0;i<n;i++) printf("%d\n",@@ yin@@ (@@ str@@ [i],@@ 2)); return0; } int@@ zhi@@ (int@@ a) { int@@ k=@@ 2,@@ flag=0; for(k=@@ 2@@ ;k<=@@ a@@ /2@@ ;k++) { if(a%@@ k@@ ==0) {@@ flag=1; break; } } return@@ flag; } int@@ yin@@ (intm,int@@ t) { int@@ j=@@ t,@@ c=0,@@ b=0,@@ x=0; int@@ str1@@ [@@ 10000@@ ][2@@ ]; if(m@@ <@@ t@@ &&m@@ !=1) return0; elseif(m@@ ==1) return1; elseif(@@ zhi@@ (m@@ )@@ ==0) return1; else for(j=@@ t@@ ;j<=@@ m;j++) { if(m@@ %j==0) {@@ str1@@ [c@@ ][@@ 0]=@@ m/@@ j; str1@@ [c@@ ][1@@ ]=@@ j; c++; } } for(b=0;b@@ <@@ c;@@ b++) { x@@ +=@@ yin@@ (@@ str1@@ [b@@ ][@@ 0],@@ str1@@ [b@@ ][1@@ ]); } return@@ x; }  
c -1
h -1
intmain() { intn; scanf("%d",&n); inta[100]; inti=0; intx; scanf("%d",&x); printf("%d",x); a[i]=@@ x; i++; for(intj=1@@ ;j<n;j++) { int@@ h; intk=0; scanf("%d",&@@ h); for(intt@@ =0;t@@ <i@@ ;t++) { if(h@@ ==@@ a[t@@ ]) k=1; } if(k==0) { printf("%d",@@ h); a[i]=@@ h; i++; } } getchar(); getchar(); }  
c -1
h -1
0

void@@ a@@ (); void@@ b@@ (); void@@ c@@ (); void@@ d@@ (); int@@ x1@@ [1000],@@ x2@@ [@@ 499@@ ],@@ n1,n2; intmain() { a@@ (); b@@ (); c@@ (); d@@ (); return0; } void@@ a@@ () { inti; scanf("%d%d",&n1,&n2); for(i=0;i<n1;i++) scanf("%d",&@@ x1@@ [i]); for(i=0;i<n2;i++) scanf("%d",&@@ x2@@ [i]); } void@@ b@@ () { inti,j,@@ p; for(i=0;i<n1@@ -1;i++) for(j=i+1;j<@@ n1@@ ;j++) if(@@ x1@@ [i]>@@ x1@@ [j]) { p=@@ x1@@ [i]; x1@@ [i]=@@ x1@@ [j]; x1@@ [j]=@@ p; } for(i=0;i<n2@@ -1;i++) for(j=i+1;j<@@ n2@@ ;j++) if(@@ x2@@ [i]>@@ x2@@ [j]) { p=@@ x2@@ [i]; x2@@ [i]=@@ x2@@ [j]; x2@@ [j]=@@ p; } } void@@ c@@ () { inti; for(i=0;i<n2;i++) x1@@ [@@ n1@@ +i]=@@ x2@@ [i]; } void@@ d@@ () { inti; for(i=0;i<n1@@ +@@ n2;i++) { printf("%d",@@ x1@@ [i]); if(i<@@ n1+n2@@ -1) printf(""); } }  
c -1
h -1
intmain() { int@@ n=@@ 100@@ ,@@ m=@@ 16@@ ,i@@ =1@@ ,j,@@ k,@@ t=0; inta[16]; while(n@@ >0) { cin>>a[0]; if(a[0]@@ ==@@ (@@ -1)) break; else { while(m@@ >0) { cin>>a[i]; if(a[i]==0) break; m@@ --; i++; } for(j=0;j<=i-1;j++) for(k=0;k<=@@ i-1;k++) { if(a[j]==2*@@ a[k]) t++; } } cout<<t@@ <<endl; t=0; m=@@ 16@@ ; i=1; n--; } return0; }  
c -1
h -1
0

struct@@ Article@@ { intnumber; charauthor[26]; }; intmain() { struct@@ Article@@ book[1000]; intm,@@ i; intj,@@ k; intc; intmax=0; int@@ writer@@ [26]={0}; scanf("%d",&m); for(i=0;i<m;i++){ scanf("%d%s",&book[i].@@ number,@@ book[i].author); } for(i=0;i<m;i++){ for(j=0;j<26@@ ;j++){ if(book[i].author@@ [j]>=@@ 'A'@@ &&@@ book[i].author@@ [j]<=@@ '@@ Z@@ '){ c=@@ book[i].author@@ [j]@@ -'A'; writer@@ [c@@ ]++; } } } for(i=0;i<26;i++){ if(max<@@ writer@@ [i]){ max=@@ writer@@ [i]; } } for(i=0;i<26;i++){ if(max@@ ==@@ writer@@ [i]){ printf("%c\n",@@ i+@@ 'A'@@ ); printf("%d\n",max); for(j=0;j<m;j++){ for(k=0;k<26@@ ;k++){ if(@@ book[j].@@ author@@ [k]==@@ i+@@ 'A'@@ ){ printf("%d\n",@@ book[j].@@ number); } } } break; } } return0; }  
c -1
h -1
intmain() {int@@ l,@@ m,n,@@ t,@@ i,@@ s; scanf("%d%d%d",&@@ l@@ ,&@@ m,&n); if(l@@ %4==0&&@@ l@@ %@@ 100!=0) t=@@ 29; if(l@@ %@@ 4@@ !=0) t=@@ 28; if(l@@ %@@ 100==0&&@@ l@@ %@@ 400@@ !=0) t=@@ 28; if(l@@ %@@ 400==0) t=@@ 29; inta[@@ 13]={0,31,@@ t@@ ,31,30,31,30,31,31,30,31,30,31}; if(m==1) s=@@ n; else s=@@ n; for(i=1;i<m;i++) {@@ s=s+@@ a[i];} printf("%d",s); return0; }  
c -1
h -1
0

intmain() { int@@ x,@@ a[@@ 16@@ ],i,j,@@ n=0,@@ num=0,@@ m; while(1) { cin>>m; if(m@@ ==-1) break; else { a[1]=@@ m; n=1; } for(i=2@@ ;@@ ;i++) { cin>>x; if(x@@ ==0) break; else { a[i]=@@ x; n=n+1; } } for(i=1;i<=n;i++) { for(j=1;j<=n;j++) { if(a[i]==@@ (@@ 2*@@ a[j]@@ )) num=num@@ +1; } } cout<<num<<endl; num=0; } return0; }  
c -1
h -1
intmain(){ intn,i,k,@@ a1,a2,@@ b1,@@ b2@@ ,@@ f@@ =-1,@@ s=0; int@@ (@@ sz[@@ 1000][@@ 1000@@ ]); scanf("%d",&n); getchar(); for(i=0;i<n;i++){ for(k=0;k<n;k++){ scanf("%d",&(sz[i]@@ [k]@@ )); getchar(); if(((@@ sz[i]@@ [k]@@ )@@ ==0)&&(@@ f@@ ==@@ -1)@@ ){ a1@@ =i; b1@@ =k; f=1; } if((@@ sz[i]@@ [k]@@ )@@ ==0){ a2@@ =i; b2@@ =k; } } } s=(@@ b2-b1@@ -1)*(@@ a2-a1@@ -1); printf("%d\n",s); getchar(); return0; }  
c -1
h -1
0

intmain() { charstr[256],@@ substr@@ [256],@@ rep@@ [256]; inti,j,@@ flag@@ =1,@@ flag1@@ =0; cin>>@@ str@@ ; cin>>@@ substr@@ ; cin>>@@ rep@@ ; int@@ nlen@@ =strlen(@@ str); int@@ slen@@ =strlen(@@ substr@@ ); int@@ rlen@@ =strlen(@@ rep); if(@@ slen@@ !=@@ rlen@@ ) {@@ cout<<"@@ hehe@@ "@@ <<endl;} for(i=0;i<@@ nlen@@ ;i++) { for(j=0;j<@@ slen@@ ;j++) { if(@@ substr@@ [j]!=@@ str@@ [i+j@@ ]) {@@ flag@@ =0;@@ break;} else { flag=1; } } if(flag) { for(intk=0;k<@@ slen@@ ;k++) { str@@ [i+k@@ ]=@@ rep@@ [k]; } flag1@@ =1; } if(@@ flag1@@ ) {break;} } cout<<str@@ <<@@ '\n@@ '; return0; }  
c -1
h -1
inti,j,@@ x,y,@@ a[@@ 10@@ ],b[@@ 10@@ ],c[@@ 20]; void@@ array@@ () { scanf("%d%d",&@@ x,&@@ y); for(i=0;i<x;i++) { scanf("%d",&a[i]); } for(i=0;i<y;i++) { scanf("%d",&b[i]); } } void@@ row@@ () { intt; for(i=0;i<x;i++) { for(j=i;j<@@ x;j++) { if(a[i]>a[j]) { t=a[i]; a[i]=a[j]; a[j]=@@ t; } } } for(i=0;i<y;i++) { for(j=i;j<@@ y;j++) { if(b[i]>@@ b[j]) { t=b[i]; b[i]=@@ b[j]; b[j]=@@ t; } } } } voidcombine@@ () { for(i=0;i<x;i++) { c[i]=a[i]; } for(i=x@@ ;i<@@ (@@ x+@@ y@@ );i++) { c[i]=b[i-@@ x@@ ]; } } voidprint() { for(i=0;i<(@@ x+@@ y@@ );i++) { if(i!=@@ (@@ x+@@ y@@ -1)) { printf("%d",c[i]); } else@@ printf("%d\n",@@ c[i]); } } voidmain() { array@@ (); row@@ (); combine@@ (); print(); }  
c -1
h -1
0

intmain() { intm,n,i,j,@@ s; charstr@@ [256@@ ],c[@@ 256],@@ d@@ [256]; gets(c); gets(str); gets(@@ d); m=strlen(@@ str); n=strlen(@@ c); for(i=0;i<n@@ -m@@ +1;i++) { if(c@@ [i]==@@ str@@ [0]) { s=0; for(j=i;j<i+@@ m;j++) { if(c@@ [j]==@@ str@@ [j-i@@ ]) { s=s+1; } } if(s@@ ==@@ m) { break; } } } if(s@@ ==@@ m) { for(j=i;j<i+@@ m;j++) { c[j]=@@ d@@ [j-i@@ ]; } } puts(@@ c); return0; }  
c -1
h -1
voidmain() { inti; long@@ a[@@ 5@@ ]; intb[@@ 5@@ ],c[@@ 5@@ ],@@ g@@ [5@@ ]; i=1; while(i<=@@ 5) { scanf("%ld%d%d",&@@ a[i],&@@ b[i]@@ ,&@@ c[i]); i++; } i=1; while(i<=@@ 5) { g@@ [i]=0; switch(@@ b[i]) { case12:@@ g[i]@@ +=@@ 30; case11:@@ g[i]@@ +=@@ 31; case10:@@ g[i]@@ +=@@ 30; case9:@@ g[i]@@ +=@@ 31; case8:@@ g[i]@@ +=@@ 31; case7:@@ g[i]@@ +=@@ 30; case6:@@ g[i]@@ +=@@ 31; case5:@@ g[i]@@ +=@@ 30; case4:@@ g[i]@@ +=@@ 31; case3:@@ g[i]@@ +=@@ 28; case2:@@ g[i]@@ +=@@ 31; case1:@@ g[i]@@ +=@@ 0@@ ;break; default@@ :@@ printf("error\n"); } if(((@@ a[i]@@ %4==0&&@@ a[i]@@ %100!=0@@ )||(@@ a[i]@@ %@@ 400==0)@@ )&&(@@ b[i]@@ >=@@ 3@@ )) c[i]=@@ c[i]@@ +1; printf("%d\n",@@ g@@ [i]+@@ c[i]); i++; } }  
c -1
h -1
0

voidmain() { structbook { intnumber; charauthor@@ [10]; }; structbook@@ a[1000]; inti,n,@@ j,@@ count@@ [26]={0},@@ temp,@@ max,@@ index@@ =0; charc; scanf("%d",&n); for(i=0;i<n;i++) scanf("%d%s",&@@ a[i].@@ number@@ ,&a[i].@@ author); for(i=0;i<n;i++) for(j=0;@@ a[i].@@ author@@ [j]!='\0';j++) {@@ temp@@ =(@@ a[i].@@ author@@ [j]@@ )@@ -'A'; count[@@ temp@@ ]++; } max=count@@ [0]; for(i=1;i<26;i++) if(count@@ [i]>max) {max=@@ count@@ [i]; index@@ =i; } c=@@ index@@ +'A'@@ ; printf("%c\n%d\n",@@ c,@@ max); for(i=0;i<n;i++) for(j=0;@@ a[i].@@ author@@ [j]!='\0';j++) if(a[i].@@ author@@ [j]==@@ c) printf("%d\n",@@ a[i].@@ number); }  
c -1
h -1
intmain() { inta[16],@@ i,j,k,@@ m@@ =1,@@ num=0; while(cin>>@@ a[0]) { num=0; m=1; if(a[0]==-1)break; else { for(i=1;i<@@ 16@@ ;i++,@@ m@@ ++) { cin>>a[i]; if(a[i]==0)break; } for(j=0;j<m;j++) { for(k=0;k<@@ m;k++) { if(k==@@ j@@ )continue; if((@@ a[k@@ ]==2*@@ a[j]@@ )||(@@ a[j]==2*@@ a[k]@@ )) { num++; } } } cout<<num@@ /2@@ <<endl; } } return0; }  
c -1
h -1
0

struct@@ author { intnum; char@@ aut@@ [27]; }a[@@ 999]; voidmain() { void@@ search@@ (struct@@ author@@ b[@@ ],intn,@@ char@@ marker@@ ); intm,@@ i,@@ times@@ [@@ 30]={0}; int@@ length@@ =0,@@ j; intmax=0,@@ flag@@ =@@ 9@@ ; char@@ chac@@ ; scanf("%d",&m); for(i=0;i<m;i++) { scanf("%d%s",&@@ a[i].@@ num,&@@ a[i].@@ aut@@ ); length@@ =strlen(@@ a[i].@@ aut@@ ); for(j=0;j<@@ length@@ ;j++) { chac@@ =@@ a[i].@@ aut@@ [j]; times@@ [@@ chac@@ -'A']++; } } for(i=0;i<26;i++) { if(max<@@ times@@ [i]) { max=@@ times@@ [i]; flag@@ =i; } } printf("%c\n%d\n",@@ (char)(@@ flag@@ +'@@ A')@@ ,max); search@@ (a,@@ m,@@ (char)(@@ flag@@ +'@@ A')@@ ); } void@@ search@@ (struct@@ author@@ b[@@ ],intn,@@ char@@ marker@@ ) { inti,j; for(i=0;i<n;i++) { for(j=0;j<strlen(@@ b[i].@@ aut@@ );j++) { if(b[i].@@ aut@@ [j]==@@ marker@@ ) printf("%d\n",b[i].@@ num); } } }  
c -1
h -1
intmain() {@@ inta[20000]; intn,i,j,@@ l,@@ k; cin>>n; l=@@ n; for(i=0;i<n;i++) cin>>a[i]; for(i=0;i<l@@ -1;i++) { for(j=i+1;j<@@ l@@ ;j++) { if(a[i]==a[j]) {@@ for(k=j@@ ;k<@@ l@@ -1;k++) a[k]=a[k@@ +1]; j--; l@@ --; } } } cout<<a[0]; for(i=1;i<@@ l@@ ;i++) cout<<''<<@@ a[i]; return0; }  
c -1
h -1
0

intmain() { intn,i,@@ a[@@ 20001@@ ]={0},@@ j,@@ l; scanf("%d",&n); for(i=0;i<n;i++) { scanf("%d",&a[i]); } for(i=0;i<n;i++) { for(l@@ =(@@ i@@ +1@@ );@@ l@@ <n;@@ l++) { if(a[@@ l@@ ]==@@ a[i]) { for(j@@ =(@@ l@@ +1)@@ ;j<n;j++) { a@@ [j-1]=@@ a[j]; } l@@ -=@@ 1; n--; } } } for(i=0;i<n;i++) { if(i==0) printf("%d",a[i]); else printf("%d",a[i]); } return0; }  
c -1
h -1
intmain() { intn,i,j,@@ k=0; cin>>n; inta[n]; cin>>@@ a[0]@@ ;@@ cout<<a[0]; for(i=1;i<n;i++) {@@ cin>>a[i]; for(j=0;j<i;j++) if(a[i]==@@ a[j])@@ k++; if(k@@ ==0)@@ cout<<""<<a[i]; k@@ =0;} return0; }  
c -1
h -1
1


intmain(){ struct@@ ID@@ { char@@ x@@ [100]; inty; }@@ da@@ [100],@@ xiao@@ [100],@@ p@@ [100],@@ e; int@@ s,@@ m=0,@@ n=0; scanf("%d\n",&@@ s); for(inti=0;i<@@ s@@ ;i++){ scanf("%s%d",&@@ (p@@ [i].@@ x)@@ ,&@@ (p@@ [i].y@@ )); if(p@@ [i].y@@ >=60){ da@@ [m]=@@ p[i]; m++; }else{ xiao@@ [n@@ ]=@@ p[i]; n++; } } for(int@@ b@@ =1;@@ b@@ <=@@ m;@@ b++){ for(int@@ v@@ =0;@@ v@@ <m@@ -b@@ ;@@ v@@ ++){ if(@@ da@@ [@@ v@@ ].@@ y@@ <@@ da@@ [@@ v@@ +1@@ ].@@ y){ e=@@ da@@ [@@ v@@ ]; da@@ [@@ v@@ ]=@@ da@@ [@@ v@@ +1]; da@@ [@@ v@@ +1]=@@ e; } } } int@@ h,@@ f; for(int@@ z@@ =0;z@@ <m;@@ z@@ ++){ f@@ =strlen(@@ da@@ [@@ z@@ ].@@ x); for(int@@ g@@ =0;@@ g@@ <@@ f@@ ;@@ g@@ ++){ if(g@@ !=@@ f@@ -1){ printf("%c",@@ da@@ [@@ z@@ ].@@ x[@@ g@@ ]); }else{ printf("%c\n",@@ da@@ [@@ z@@ ].@@ x[@@ g@@ ]); } } } for(int@@ a@@ =0;a@@ <n;@@ a++){ h@@ =strlen(@@ xiao@@ [a@@ ].@@ x); for(intj=0;j<@@ h@@ ;j++){ if(j!=@@ h@@ -1){ printf("%c",@@ xiao@@ [a@@ ].@@ x@@ [j]); }else{ printf("%c\n",@@ xiao@@ [a@@ ].@@ x@@ [j]); } } } return0; }  
c -1
h -1
intmain() { intn,i,j,a[@@ 26@@ ],b[@@ 26],@@ c; cin>>n; for(i=1;i<=n;i++) { cin>>a[i]; b[i]=1; c=0; for(j=1;j<i;j++) if(a[j]>=a[i]&&@@ b[j]@@ >@@ c) c=@@ b[j]; b[i]=@@ c@@ +1; } c=0; for(i=1;i<=n;i++) if(b[i]>@@ c) c=@@ b[i]; cout<<@@ c; return0; }  
c -1
h -1
0

void@@ mode@@ (intx,int@@ y){ int@@ num1@@ [100],@@ num2@@ [100],@@ num3@@ [@@ 200]; inti,j,k; for(i=0;i<x;i++) cin>>@@ num1@@ [i]; for(j=0;j<@@ x@@ -1;j++) for(k=0;k<@@ x@@ -1-j@@ ;k++) if(@@ num1@@ [k]@@ >@@ num1@@ [k+1@@ ]) swap(@@ num1@@ [k],@@ num1@@ [k+1@@ ]); for(i=0;i<y;i++) cin>>@@ num2@@ [i]; for(j=0;j<@@ y@@ -1;j++) for(k=0;k<@@ y@@ -1-j@@ ;k++) if(@@ num2@@ [k]@@ >@@ num2@@ [k+1@@ ]) swap(@@ num2@@ [k],@@ num2@@ [k+1@@ ]); for(i=0;i<x;i++) num3@@ [i]=@@ num1@@ [i]; for(i=x@@ ;i<@@ (@@ x+@@ y@@ );i++) num3@@ [i]=@@ num2@@ [i-@@ x@@ ]; for(i=0;i<@@ x+@@ y@@ -1;i++) cout<<@@ num3@@ [i]@@ <<""; cout<<@@ num3@@ [@@ x+@@ y@@ -1]; } intmain(){ int@@ x,y; cin>>x@@ >>@@ y; mode@@ (x,@@ y); return0; }  
c -1
h -1
int@@ abc@@ (constvoid*@@ elem1@@ ,@@ constvoid*@@ elem2@@ ){ return@@ *(int*)@@ elem2@@ -*@@ (int*)@@ elem1@@ ; } intmain(){ intn,@@ a[2@@ ][@@ 25@@ ]={0},@@ i,j,@@ x,y; scanf("%d",&n); for(i=n-1;i>=0;i--){ scanf("%d",&@@ a[0]@@ [i]);} a[1@@ ][0]@@ =1; for(i=1;i<n;i++){ a[1]@@ [i]=1; for(j=0;j<i;j++){ if(a[0]@@ [i]>=@@ a[0]@@ [j]&&@@ a[1]@@ [i]<=@@ a[1]@@ [j]@@ )@@ a[1]@@ [i]=@@ a[1]@@ [j]+1; } } qsort(@@ a[1@@ ],@@ n,@@ 4@@ ,@@ abc@@ ); printf("%d",@@ a[1@@ ][0]@@ ); }  
c -1
h -1
0

intmain() { inta[@@ 20],@@ bn@@ [100@@ ]={0@@ ,@@ 0,@@ 0},@@ i,j,k,@@ t@@ =1,@@ l; for(t@@ =1;@@ ;t++) { i=1; do { scanf("%d",&@@ a[i@@ -1]); if(a@@ [i-1@@ ]==@@ -1)break; i++; }while(@@ a[i@@ -2@@ ]@@ !=0); if(a@@ [i-1@@ ]==@@ -1)break; for(j=1;j<=@@ i@@ -2@@ ;j++) { for(k=1;k<=@@ i@@ -2@@ ;k++) if(a@@ [j-1@@ ]==2*@@ a[k@@ -1]@@ )@@ bn@@ [t@@ -1]@@ ++; } } for(l=1;l@@ <=@@ t@@ -1;@@ l++) printf("%d\n",@@ bn@@ [l@@ -1]); return0; }  
c -1
h -1
structstudent{ int@@ No@@ ; int@@ china@@ ; intmath; }; intmain(){ intn; cin>>n; structstudent@@ st@@ [n]; inti; for(i=0;i<n;i++) cin>>@@ st[i].@@ No@@ >>@@ st[i].@@ china@@ >>@@ st[i].@@ math; ints; int@@ a1@@ =0,@@ a2@@ =0,@@ a3@@ =0,@@ b1@@ =0,@@ b2@@ =0,@@ b3@@ =0; for(i=0;i<n;i++) { s=@@ st[i].@@ china@@ +@@ st[i].@@ math; if(s@@ >@@ a1@@ ) { a3@@ =@@ a2@@ ; b3@@ =@@ b2@@ ; a2@@ =@@ a1@@ ; b2@@ =@@ b1@@ ; a1@@ =@@ s; b1@@ =i; continue; } if(s@@ >@@ a2@@ ) { a3@@ =@@ a2@@ ; b3@@ =@@ b2@@ ; a2@@ =@@ s; b2@@ =i; continue; } if(s@@ >@@ a3@@ ) { a3@@ =@@ s; b3@@ =i; continue; } } cout<<@@ st@@ [@@ b1@@ ].@@ No@@ <<""<<@@ a1@@ <<endl; cout<<@@ st@@ [@@ b2@@ ].@@ No@@ <<""<<@@ a2@@ <<endl; cout<<@@ st@@ [@@ b3@@ ].@@ No@@ <<""<<@@ a3@@ <<endl; return0; }  
c -1
h -1
0

intmain() { intyear,month,day,@@ total@@ =0,@@ i; int@@ mon@@ [2][@@ 13@@ ]={@@ {@@ 0@@ ,31,@@ 28,31,30,31,30,31,31,30,31,30,31@@ },@@ {@@ 0@@ ,31,@@ 29@@ ,31,30,31,30,31,31,30,31,30,31@@ }@@ }; cin>>year>>@@ month>>@@ day; if(year%@@ 4==0&&year%100!=0@@ ||@@ year%400==0) { for(i=1;i<month;i++) total+=@@ mon@@ [1]@@ [i]; total+=@@ day; } else { for(i=1;i<month;i++) total+=@@ mon@@ [0]@@ [i]; total+=@@ day; } cout<<@@ total@@ <<endl; return0; }  
c -1
h -1
intmain() { intn,i,j; int@@ d1@@ ,@@ d2@@ ; scanf("%d",&n); int@@ sx@@ =0,@@ sy@@ ,@@ tx@@ ,@@ ty@@ ; for(i=0;i<n;i++) { scanf("%d",&@@ d1@@ ); for(j=1;j<n;j++) { scanf("%d",&@@ d2@@ ); if((@@ d1@@ ==0)&&(@@ d2@@ ==0)) { if(@@ sx@@ ==0) { sx@@ =i;@@ sy@@ =j; } tx@@ =i;@@ ty@@ =j+1; } d1@@ =@@ d2@@ ; } } printf("%ld@@ ",@@ (@@ long@@ )@@ (@@ ty@@ -@@ sy@@ -1)*(@@ long@@ )@@ (@@ tx@@ -@@ sx@@ -1)); return0; }  
c -1
h -1
0

intmain() { int@@ sum,@@ n,@@ a[1000],@@ i,@@ b[@@ 1000],@@ j,@@ p=0,@@ h@@ =0,@@ k; scanf("%d%d",&n,&@@ sum); for(i=0;i<n;i++){ scanf("%d",&a[i]); b[i]=@@ a[i]; } for(k=0;k<n;k++){ for(j=0;j<n;j++){ h=@@ a[k]@@ +@@ b[j]; if(h@@ ==@@ sum) p++; } } if(p@@ ==0) printf("no\n"); else printf("yes\n"); return0; }  
c -1
h -1
struct@@ data { charid@@ [11]; intage; structdata@@ *next; }@@ *@@ p1,*p2,*@@ head,*@@ q1@@ ,*@@ q2@@ ,*@@ qhead@@ ; voidmain() { inti,n,@@ k=0; structdata@@ *@@ sort@@ (struct@@ data@@ *head@@ ,int@@ n); voidprint(struct@@ data@@ *head@@ ); scanf("%d",&n); head@@ =p1@@ =p2@@ =(struct@@ data@@ *)malloc(LEN); head@@ ->next=NULL; for(i=0;i<n;i++) { p1=(struct@@ data@@ *)malloc(LEN); scanf("%s%d",@@ p1->id,&p1->age); if((@@ p1->age@@ )@@ >=60) k++; p2->next=p1; p2=p1; } p2->next=NULL; qhead@@ =@@ q1=@@ q2@@ =(struct@@ data@@ *)malloc(LEN); qhead@@ ->next=NULL; for(i=n@@ ;i@@ >@@ n-@@ k@@ ;i--) { head=@@ sort(@@ head,@@ i); } q2@@ ->next=NULL; q2@@ ->next=@@ head->next; free(@@ head); print(@@ qhead@@ ); } structdata@@ *@@ sort@@ (struct@@ data@@ *head@@ ,intn) { intmax=@@ 59@@ ,i; structdata@@ *@@ p1,*p2,*@@ code@@ ,*@@ pre@@ ; p2=head; p1=@@ head->next; for(i=0;i<n;i++) { if((@@ p1->age@@ )@@ >max) { max=@@ p1->@@ age; code@@ =p1; pre@@ =p2; } p1=p1->next; p2=p2->next; } q1@@ =(struct@@ data@@ *)malloc(LEN); strcpy(@@ q1@@ ->id,@@ code@@ ->id); q1@@ ->age=@@ code@@ ->@@ age; q2@@ ->next=@@ q1@@ ; q2@@ =@@ q1@@ ; if(@@ pre@@ ==@@ head@@ ) head@@ ->next=@@ code@@ ->next; else pre@@ ->next=@@ code@@ ->next; free(@@ code@@ ); return(head); } voidprint(struct@@ data@@ *@@ qhead@@ ) { structdata@@ *@@ q; q=@@ qhead@@ ->next; do { printf("%s\n",@@ q->@@ id); q=q@@ ->next; } while(@@ q@@ !=NULL); }  
c -1
h -1
0

intf(inta,int@@ min) { intj,@@ num; if(a<@@ min@@ )return0; num@@ =1; for(j=@@ min@@ ;j<@@ a@@ ;j++) if(a%@@ j@@ ==0)@@ num=num+@@ f(@@ a/@@ j@@ ,j); returnnum; } intmain() { intn,i,@@ out@@ ,@@ a; cin>>n; for(i=0;i<n;i++) { cin>>a; out@@ =@@ f(a,@@ 2); cout<<@@ out@@ <<endl; } return0; }  
c -1
h -1
void@@ putin@@ (int*p@@ ,intn) { inti; for(i=0;i<n;i++) cin>>@@ *(p@@ +i); } void@@ putout@@ (int*p@@ ,intn) { intm,@@ i,j; for(i=0;i<n;i++) { for(j=0;j<n-i;j++) if(@@ *(p+j)@@ >*@@ (p@@ +j+1)@@ ){@@ m@@ =*(p@@ +j@@ );@@ *(p+j)@@ =*(p@@ +j@@ +1@@ );@@ *(p@@ +j+1)@@ =@@ m@@ ;} } cout<<@@ *(p@@ +1@@ );@@ for(i=2@@ ;i<@@ n+1@@ ;i++)@@ cout<<"@@ "<@@ <*@@ (p@@ +i); } intmain() { int@@ n1,n2,@@ a[@@ 10000@@ ],b[@@ 10000@@ ],*@@ pa@@ ,*@@ pb@@ ; pa@@ =@@ a;@@ pb@@ =@@ b; cin>>@@ n1@@ >>@@ n2; putin@@ (@@ pa@@ ,@@ n1); putin@@ (@@ pb@@ ,@@ n2); putout@@ (@@ pa@@ ,@@ n1@@ );@@ cout<<"@@ "; putout@@ (@@ pb@@ ,@@ n2); return0; }  
c -1
h -1
0

intmain() { intN@@ ,@@ A@@ ,@@ B@@ ,@@ a; scanf("%d%d%d",&@@ N@@ ,&@@ A@@ ,&@@ B@@ ); if(N@@ %100!=0@@ &&@@ N@@ %@@ 4@@ ==0||@@ N@@ %@@ 400==0) { for(a@@ =0,@@ A@@ =@@ A@@ -1;@@ A@@ !=0@@ ;@@ A@@ --) { switch(@@ A@@ ) { case1: case3: case5: case7: case8: case10: case12:@@ a@@ +=@@ 31; break; case2:@@ a@@ +=@@ 29; break; case4: case6: case9: case11:@@ a@@ +=@@ 30; break; } } } else { for(a@@ =0,@@ A@@ =@@ A@@ -1;@@ A@@ !=0@@ ;@@ A@@ --) { switch(@@ A@@ ) { case1: case3: case5: case7: case8: case10: case12:@@ a@@ +=@@ 31; break; case2:@@ a@@ +=@@ 28; break; case4: case6: case9: case11:@@ a@@ +=@@ 30; break; } } a@@ +=@@ B@@ ; } printf("%d",@@ a); }  
c -1
h -1
intmain(intargc,char*argv[]) { structstudent{ int@@ ID,@@ Ch@@ ,@@ Ma@@ ; }@@ temp; int@@ fID@@ =0,@@ fG@@ =0,@@ sID@@ =0,@@ sG@@ =0,@@ tID@@ =0,@@ tG@@ =0; intn; scanf("%d",&n); inti; for(i=0;i<n;i++) { intsum=0; scanf("%d%d%d",&@@ temp.@@ ID,&@@ temp.@@ Ch@@ ,&@@ temp.@@ Ma@@ ); sum=@@ temp.@@ Ch@@ +@@ temp.@@ Ma@@ ; if(sum@@ ==@@ fG@@ ) { tG@@ =@@ sG@@ ; tID@@ =@@ sID@@ ; sG@@ =@@ sum; sID@@ =@@ temp.@@ ID; } if(sum@@ >@@ fG@@ ) { tG@@ =@@ sG@@ ; tID@@ =@@ sID@@ ; sG@@ =@@ fG@@ ; sID@@ =@@ fID@@ ; fG@@ =@@ sum; fID@@ =@@ temp.@@ ID; } if(sum@@ <@@ fG@@ &&@@ sum>@@ sG@@ ) { tG@@ =@@ sG@@ ; tID@@ =@@ sID@@ ; sG@@ =@@ sum; sID@@ =@@ temp.@@ ID; } if(sum@@ <@@ sG@@ &&@@ sum>@@ tG@@ ) { tG@@ =@@ sum; tID@@ =@@ temp.@@ ID; } } printf("%d%d\n",@@ fID@@ ,@@ fG@@ ); printf("%d%d\n",@@ sID@@ ,@@ sG@@ ); printf("%d%d\n",@@ tID@@ ,@@ tG@@ ); return0; }  
c -1
h -1
0

voidmain() { inty,m,d,@@ a,@@ i,@@ ans; for(i=1;i<=@@ 5;i++) { scanf("%d%d%d",&y,&m,&d); if(y%@@ 4@@ !=0) a=1; elseif(@@ y%@@ 100!=0) a=0; elseif(@@ y%@@ 400@@ !=0) a=1; else a=0; if(a@@ ) { switch(m) { case1:@@ ans=@@ d;break; case2:@@ ans@@ =31+@@ d;break; case3:@@ ans=@@ 59@@ +d;break; case4:@@ ans=@@ 90@@ +d;break; case5:@@ ans=@@ 120@@ +d;break; case6:@@ ans=@@ 151@@ +d;break; case7:@@ ans=@@ 181@@ +d;break; case8:@@ ans=@@ 212@@ +d;break; case9:@@ ans=@@ 243@@ +d;break; case10:@@ ans=@@ 273@@ +d;break; case11:@@ ans=@@ 304@@ +d;break; case12:@@ ans=@@ 334@@ +d;break; } } else { switch(m) { case1:@@ ans=@@ d;break; case2:@@ ans@@ =31+@@ d;break; case3:@@ ans=@@ 60@@ +d;break; case4:@@ ans=@@ 91@@ +d;break; case5:@@ ans=@@ 121@@ +d;break; case6:@@ ans=@@ 152@@ +d;break; case7:@@ ans=@@ 182@@ +d;break; case8:@@ ans=@@ 213@@ +d;break; case9:@@ ans=@@ 244@@ +d;break; case10:@@ ans=@@ 274@@ +d;break; case11:@@ ans=@@ 305@@ +d;break; case12:@@ ans=@@ 335@@ +d;break; } } printf("%d\n",@@ ans); } }  
c -1
h -1
intmain() { int@@ jud@@ [@@ 200],@@ num[@@ 30000@@ ],@@ n,i,j,@@ sum,@@ res@@ [@@ 200]; scanf("%d",&n); sum=0; for(i=1;i<=@@ 100;i++) jud@@ [i]=0; for(i=1;i<=n;i++) { scanf("%d",&@@ num[i]); if(@@ jud@@ [@@ num[i]@@ ]==0) { sum++; res@@ [@@ sum@@ ]=@@ num[i]; jud@@ [@@ num[i]@@ ]=1; } } for(i=1;i<@@ sum@@ ;i++) printf("%d",@@ res@@ [i]); printf("%d",@@ res@@ [@@ sum@@ ]); return0; }  
c -1
h -1
0

intmain() { int@@ I@@ ,@@ m,n,@@ a[100][100]; inti,j,k,@@ sum; scanf("%d",&@@ I@@ ); for(k=0;k<@@ I@@ ;k++) { sum=0; scanf("%d%d",&m,&n); for(i=0;i<m;i++) { for(j=0;j<n;j++) { scanf("%d",&a[i][j]); } } for(i=0;i<m;i++) sum=sum+@@ a[i][0]+@@ a[i][n-1]; for(i=0;i<n;i++) sum=sum+@@ a[0]@@ [i]+@@ a[m-1]@@ [i]; sum=sum-@@ a[0][0]@@ -@@ a[0][@@ n-1]-@@ a[m-1][@@ n-1]-@@ a[m-1][@@ 0]; if((@@ m@@ ==@@ n@@ )&&(@@ m@@ ==1@@ )) sum=@@ a[0][@@ 0]; printf("%d\n",sum); } return0; }  
c -1
h -1
structstudent { intID; intyuwen; intshuxue; int@@ zongfen; }; intmain() { intn,i,j,@@ e; scanf("%d",&n); structstudent*@@ stu@@ =(structstudent*)malloc(sizeof(@@ structstudent@@ )*n); for(i=0;i<n;i++) { scanf("%d%d%d",&stu[i].@@ ID@@ ,&stu[i].@@ yuwen@@ ,&stu[i].@@ shuxue); stu[i].@@ zongfen@@ =stu[i].@@ yuwen+stu[i].@@ shuxue; } for(i=1;i<@@ 4;i++) { for(j=0;j<n-i;j++) { if(stu[j].@@ zongfen@@ >=@@ stu[j+1].@@ zongfen@@ ) { e=@@ stu[j].@@ zongfen; stu[j].@@ zongfen@@ =stu@@ [j+1].@@ zongfen; stu[j+1].@@ zongfen@@ =@@ e; e=@@ stu[j].@@ ID; stu[j].@@ ID@@ =stu@@ [j+1].@@ ID; stu[j+1].@@ ID@@ =@@ e; } } } printf("%d%d\n%d%d\n%d%d\n",@@ stu[@@ n-1@@ ].ID,@@ stu[@@ n-1@@ ].@@ zongfen@@ ,@@ stu[@@ n-2@@ ].ID,@@ stu[@@ n-2@@ ].@@ zongfen@@ ,@@ stu[@@ n-@@ 3].@@ ID,@@ stu[@@ n-@@ 3].@@ zongfen@@ ); return0; }  
c -1
h -1
0

voidmain() { int*@@ a[@@ 101][@@ 101],@@ lie@@ ,@@ hang@@ ,i,j,@@ h,@@ l; scanf("%d%d",&@@ hang@@ ,&@@ lie@@ ); for(i=1;i<=@@ hang@@ ;i++) for(j=1;j<=@@ lie@@ ;j++) a[i]@@ [j]=@@ (int@@ *)malloc(sizeof@@ (int@@ )); for(i=1;i<=@@ hang@@ ;i++) for(j=1;j<=@@ lie@@ ;j++) scanf("%d",@@ a[i]@@ [j]); for(j=1;j<=@@ lie@@ ;j++) { h@@ =1; l@@ =j; while(@@ l@@ >=1@@ &&@@ h@@ <=@@ hang@@ ) { printf("%d\n",@@ *@@ a[h@@ ][l@@ ]); h@@ ++; l@@ --; } } for(i=2;i<=@@ hang@@ ;i++) { l=@@ lie@@ ; h@@ =i; while(@@ l@@ >=1@@ &&@@ h@@ <=@@ hang@@ ) { printf("%d\n",@@ *@@ a[h@@ ][l@@ ]); h@@ ++; l@@ --; } } }  
c -1
h -1
voidmain() { inta[@@ 25],@@ max@@ [25@@ ]={0},@@ max1@@ =0; intn,i,j; scanf("%d",&n); for(i=0;i<=n-1;i++) scanf("%d",&a[i]); for(i=0;i<=n-1;i++) max@@ [i]=1; max1@@ =1; for(i=1;i<=n-1;i++) for(j=0;j<=i-1;j++) { if((a[j]@@ >=@@ a[i]@@ )&&(@@ max@@ [j]@@ +1@@ >max@@ [i]@@ )) max@@ [i]=@@ max@@ [j]+1; if(max@@ [i]>@@ max1@@ ) max1=@@ max@@ [i]; } printf("%d\n",@@ max1@@ ); }  
c -1
h -1
0

intmain() { inta[100][100@@ ]={0}; intn,i,j,@@ i1@@ ,@@ j1@@ ,@@ i2@@ ,@@ i3@@ ,@@ j3@@ ,@@ p=0,@@ q=0,@@ sum=0; scanf("%d",&n); for(@@ i2@@ =0;@@ i2@@ <=@@ n-1;@@ i2@@ ++) { scanf("%d%d",&@@ i@@ ,&@@ j); for(@@ i1@@ =0;@@ i1@@ <=i@@ -1;@@ i1@@ ++) { for(@@ j1@@ =0;@@ j1@@ <=j@@ -1;@@ j1@@ ++) { scanf("%d",&a[@@ i1@@ ][@@ j1@@ ]); } } for(@@ i3@@ =0;@@ i3@@ <=j@@ -1;@@ i3@@ ++) { sum=sum+@@ a[0][@@ i3@@ ]+@@ a[i-1@@ ][@@ i3@@ ]; } for(@@ j3@@ =0;@@ j3@@ <=i@@ -1;@@ j3@@ ++) { sum=sum+@@ a[@@ j3@@ ][0]+@@ a[@@ j3@@ ]@@ [j-1]; } sum=sum-@@ a[0]@@ [j-1]@@ -@@ a[i-1@@ ][0]-@@ a[i-1]@@ [j-1]@@ -@@ a[0][@@ 0]; printf("%d\n",sum); sum=0; for(@@ i1@@ =0;@@ i1@@ <=i@@ -1;@@ i1@@ ++) { for(@@ j1@@ =0;@@ j1@@ <=j@@ -1;@@ j1@@ ++) { a[@@ i1@@ ][@@ j1@@ ]=0; } } } return0; }  
c -1
h -1
intmain() { int@@ n[@@ 20001@@ ]={0},@@ x,@@ i,j; cin>>x; for(i=1;i<=@@ x;i++) cin>>n@@ [i]; for(i=1;i<=@@ x;i++) { for(j=1;j<=@@ x;j++) if(n@@ [i]==@@ n@@ [j]@@ &&j@@ >@@ i) n@@ [j]@@ =0; } cout<<n@@ [1]; for(i=2;i<=@@ x;i++) { if(n@@ [i]!=0) cout<<""<<@@ n[i]; } return0; }  
c -1
h -1
0

voidmain() { inti,j,@@ m,n,@@ a[@@ 200@@ ]={0},b[@@ 200@@ ]={0},@@ tem@@ ,*@@ p,*@@ q; p=a; q=@@ b; scanf("%d%d",&m,&n); for(i=0;i<m;i++) scanf("%d",&a[i]); for(i=0;i<n;i++) scanf("%d",&b[i]); for(i=0;i<m-1;i++) for(j=0;j<m@@ -i-1;j++) { if(@@ *(p+j)@@ >*@@ (p@@ +j@@ +1@@ )) { tem@@ =*(p@@ +j); *(p+j)@@ =*(p@@ +j@@ +1); *(p@@ +j+1)@@ =@@ tem; } } printf("%d",a[0]); for(i=1;i<m;i++) printf("%d",a[i]); for(i=0;i<n-1;i++) for(j=0;j<n@@ -i-1;j++) { if(*(@@ q@@ +j)@@ >*@@ (@@ q@@ +j@@ +1@@ )) { tem@@ =*(@@ q@@ +j); *(q@@ +j)@@ =*(@@ q@@ +j@@ +1); *(q@@ +j+1)@@ =@@ tem; } } for(i=0;i<n;i++) printf("%d",b[i]); }  
c -1
h -1
void@@ f0@@ (inta[],int@@ x) { inti=0; for(@@ ;i<@@ x;i++) scanf("%d",&a[i]); } voidf1@@ (inta[],int@@ x) {@@ inti,j,@@ s; for(i=0;i<x@@ -1;i++) for(j=0;j<@@ x@@ -1-i;j++) if(a[j]>a[j+1@@ ]){@@ s=@@ a[j];a[j]=a[j+1];@@ a[j+1]=@@ s@@ ;} } voidf2@@ (inta[],intb[],int@@ c[@@ ],int@@ m,intn) { inti=0; while(i<@@ m) {@@ c[i]=@@ a[i]@@ ;i++@@ ;} while(i<@@ m+@@ n) {@@ c[i]=b[i-@@ m@@ ]@@ ;i++@@ ;} } main() { inta[@@ 50@@ ],b[@@ 50@@ ],@@ c[100],@@ m,n,@@ i; scanf("%d%d",&m,&n); f0@@ (a,m); f0@@ (b,n); f1@@ (a,m); f1@@ (b,n); f2@@ (a,b,@@ c,@@ m,n); printf("%d",c@@ [0]); for(i=1;i<@@ n+m;i++) printf("%d",c[i]); return0; }  
c -1
h -1
1


struct@@ a@@ { intn; chars[@@ 26]; }b[@@ 1000]; intmain() { intn,i,j,@@ c[@@ 26]={0}; char@@ t; scanf("%d",&n); for(i=0;i<n;i++) { int@@ d,@@ m; scanf("%d%s",&@@ b[i].@@ n,@@ b[i].@@ s); d@@ =strlen(@@ b[i].@@ s); for(m=0;m<@@ d@@ ;m++) c[@@ b[i].@@ s[m@@ ]@@ -65@@ ]@@ +=1; } for(i=0;i<26;i++) { for(j=i+1;j<@@ 26@@ ;j++) if(c@@ [j]>@@ c@@ [i]) break; if(j==@@ 26@@ ) break; } t=@@ 65@@ +@@ i; printf("%c\n%d\n",@@ t,@@ c[i]); for(i=0;i<n;i++) { if(@@ strchr(@@ b[i].@@ s,@@ t)@@ !=NULL) printf("%d\n",b[i].@@ n); } return0; }  
c -1
h -1
intmain() { inta[@@ 20000],@@ n,i,j,@@ b[@@ 20000@@ ]={0}; cin>>n; for(i=0;i<n;i++) { cin>>a[i]; } for(i=0;i<n;i++) { for(j=i+1;j<n;j++) { if(a[j]==a[i]) { b[j]@@ ++; } } } cout<<a[0]; for(i=1;i<n;i++) { if(b[i]@@ ==0) { cout<<'@@ '@@ <<@@ a[i]; } } return0; }  
c -1
h -1
0

structpatient{ charid[10]; intage; structpatient*next; structpatient*@@ last@@ ; }; char@@ temp@@ [10]; intmain() { structpatient*@@ p1,*p2,*@@ head,@@ p[@@ N]; intn,i,j,@@ tmp; scanf("%d",&n); memset(@@ p,@@ 0,@@ sizeof@@ (p@@ )); head=@@ p@@ +1; for(i=1;i<=n;i++) { scanf("%s%d",@@ p[i].@@ id,&@@ p[i].age); p[i].@@ last@@ =p@@ +i@@ -1; p[i].@@ next@@ =p@@ +i@@ +1; } head->@@ last@@ =NULL; p[i].@@ next@@ =NULL; for(i=n@@ ;i@@ >1@@ ;i--) { for(j=1;j<n;j++) { if((@@ p@@ +j+1)@@ ->age@@ >=60@@ &&(@@ p@@ +j+1)@@ ->age@@ >@@ (p@@ +j)@@ ->age@@ ) { memcpy@@ (@@ temp,@@ (p@@ +j)@@ ->id,@@ sizeof(@@ temp@@ )); memcpy@@ (@@ (p@@ +j)@@ ->id,@@ (p@@ +j+1)@@ ->id,@@ sizeof(@@ temp@@ )); memcpy@@ (@@ (p@@ +j+1)@@ ->id,@@ temp,@@ sizeof(@@ temp@@ )); tmp@@ =(@@ p@@ +j)@@ ->@@ age; (p@@ +j)@@ ->age@@ =(@@ p@@ +j+1)@@ ->@@ age; (p@@ +j+1)@@ ->age=@@ tmp; } } } for(;@@ head@@ !=NULL;@@ head=@@ head@@ ->next) printf("%s\n",@@ head->@@ id); }  
c -1
h -1
typedef@@ struct { intID; intchinese; intmath; intsum; }@@ Student@@ ; Student@@ topThree@@ [3]; int@@ studentNum@@ ; void@@ initialise@@ () { for(inti=0;i<@@ 3;i++) { topThree@@ [i].@@ sum=@@ -1; } } void@@ updateTopThree@@ (@@ Student@@ stu@@ ) { for(inti=0;i<@@ 3;i++) { if(@@ stu.@@ sum>@@ topThree@@ [i].@@ sum) { for(intj=@@ 2@@ ;j>i;j--) { topThree@@ [j]=@@ topThree@@ [j-1]; } topThree@@ [i]=@@ stu@@ ; break; } } } void@@ getStudentData@@ () { Student@@ temp; scanf("%d",&@@ studentNum@@ ); for(inti=0;i<@@ studentNum@@ ;i++) { scanf("%d%d%d",&@@ temp.@@ ID,@@ &@@ temp.@@ chinese@@ ,&@@ temp.@@ math); temp.@@ sum=@@ temp.@@ chinese+@@ temp.@@ math; updateTopThree@@ (@@ temp); } } void@@ printStudentData@@ () { for(inti=0;i<@@ 3@@ &&i@@ <@@ studentNum@@ ;i++) { printf("%d%d\n",@@ topThree@@ [i].@@ ID,@@ topThree@@ [i].@@ sum); } } intmain() { initialise@@ (); getStudentData@@ (); printStudentData@@ (); return0; }  
c -1
h -1
0

intmain() { chara[@@ 257@@ ],b[@@ 257@@ ],c[@@ 256]; cin.getline@@ (a,@@ 257@@ ); cin.getline@@ (b,@@ 257@@ ); cin.getline@@ (c,@@ 257@@ ); int@@ len1=strlen(@@ a)@@ ,len2@@ =strlen(@@ b@@ ),@@ len3@@ =strlen(c); inti,j,@@ count,@@ flag@@ =@@ -1,@@ m; for(i=0;i<=@@ len1@@ -1;i++) { m=0; if(a[i]==@@ b[m@@ ]) { count=0; for(j=i;j<=@@ i+@@ len2@@ -1;j++) { if(a[j]==@@ b[m@@ ++@@ ]) count++; } if(count==@@ len2) { flag@@ =i; break; } } } if(flag@@ ==-1) cout<<@@ a; else { for(i=@@ flag@@ ;i<=@@ flag@@ +len2@@ -1;i++) a[i]=@@ c@@ [i-@@ flag@@ ]; for(i=0;i<=@@ len1@@ -1;i++) cout<<a[i]; } return0; }  
c -1
h -1
struct@@ a { charid[20]; intage; struct@@ a@@ *next; }; struct@@ a*@@ insert@@ (struct@@ a@@ *head,@@ struct@@ a*@@ s) { struct@@ a*@@ p0@@ ,*@@ p1,*p2; p1=head; p0@@ =@@ s; if(head@@ ==NULL) {@@ head=@@ p0@@ ;@@ p0->next@@ =NULL@@ ;} else{ while((@@ p0@@ ->age@@ <=@@ p1->age@@ )&&(@@ p1->next@@ !=NULL@@ )) {@@ p2@@ =p1;@@ p1=p1->next@@ ;} if(@@ p0@@ ->age@@ >@@ p1->age@@ ) { if(head@@ ==@@ p1@@ )@@ head=@@ p0; else@@ p2->next=@@ p0; p0->next@@ =p1; } else{@@ p1->next=@@ p0@@ ;@@ p0->next@@ =NULL@@ ;} } return(head); } struct@@ a*@@ creat@@ (struct@@ a@@ *head,@@ struct@@ a*@@ s) { struct@@ a*@@ t; if(head@@ ==NULL) {@@ head=@@ s@@ ;s@@ ->next@@ =NULL@@ ;} else {@@ for(@@ t=@@ head@@ ;t@@ ->next@@ !=NULL;@@ t=t@@ ->next@@ ); t@@ ->next=@@ s; s@@ ->next=NULL; } return(head); } voidmain() { struct@@ a*@@ head1@@ ,*@@ head2@@ ,*@@ s@@ ,*p; inti,n; scanf("%d",&n); head1@@ =NULL; head2@@ =NULL; for(i=0;i<=n-1;i++) {@@ s=@@ LEN@@ ; scanf("%s%d",@@ s@@ ->@@ id,&@@ s@@ ->age@@ ); s@@ ->next=NULL; if(s@@ ->age@@ >=60) head1@@ =@@ insert@@ (@@ head1@@ ,@@ s); if(s@@ ->age@@ <60) head2@@ =@@ creat@@ (@@ head2@@ ,@@ s); } for(p=@@ head1@@ ;p!=NULL;p=p->next) printf("%s\n",p->id); for(p=@@ head2@@ ;p!=NULL;p=p->next) printf("%s\n",p->id); }  
c -1
h -1
0

voidmain() { intm,@@ a[1000],@@ l@@ [1000],@@ i,j,k,@@ t,@@ time@@ [26]={0},@@ max,@@ q=0; charname@@ [26@@ ]={'A','B','C','D','E','F','G','H','I','J','K','L','M','N','O','P','@@ Q','R','S','T','U','V','W','X','Y','@@ Z'}; charb[@@ 1000][@@ 26]; scanf("%d",&m); for(i=0;i<m;i++) { scanf("%d%s",&a[i],@@ b[i]); l@@ [i]@@ =strlen(@@ b[i]); } for(i=0;i<m;i++) { for(j=0;j<l@@ [i];j++) { for(k=0;k<26;k++) { if(b[i]@@ [j]==@@ name@@ [k]@@ )@@ time@@ [k]++; } } } max=@@ time@@ [0]; for(i=1;i<26;i++) { if(@@ time@@ [i]>max) { max=@@ time@@ [i]; t=i; } } printf("%c\n",@@ name@@ [t@@ ]); printf("%d\n",max); for(i=0;i<m;i++) { for(j=0;j<l@@ [i];j++) { if(b[i]@@ [j]==@@ name@@ [t@@ ]) { printf("%d\n",a[i]); } } } }  
c -1
h -1
intmax@@ [26]={0}; inta[@@ 26]={0}; void@@ attack@@ (intn) { inti=0,j=0,@@ premax@@ =0; for(i=0;i<n;i++) {@@ max@@ [i]=1; for(j=0;j<i;j++) { if(a[i]<=@@ a[j]) { premax@@ =@@ max@@ [j]+1; if(@@ premax@@ >max@@ [i]) max@@ [i]=@@ premax@@ ;} } } } intmain() {@@ static@@ intn,i,@@ num=0; scanf("%d",&n); for(i=0;i<n;i++) scanf("%d",&a[i]); attack@@ (n); num=@@ max@@ [0]; for(i=1;i<n;i++) if(max@@ [i]>@@ num) num=@@ max@@ [i]; printf("%d",@@ num); }  
c -1
h -1
0

intmain() { intn,m,@@ i,j,k; int@@ yao@@ [300@@ ][@@ 300]; scanf("%d%d",&n,&m); for(i=0;i<n;i++) { for(j=0;j<m;j++) { scanf("%d",&@@ yao@@ [i][j]); } } for(i=n@@ ;i<@@ 300@@ ;i++) { for(j=0;j<@@ 300@@ ;j++) { yao@@ [i][j]=@@ 00@@ ; } } for(k=0;k<=@@ n+@@ m@@ -2@@ ;k++) { for(i=0;i<=@@ k;i++) { if(@@ yao@@ [i]@@ [k-i@@ ]!=@@ 00@@ ) { printf("%d\n",@@ yao@@ [i]@@ [k-i]); } } } return0; }  
c -1
h -1
intmain() { chars[256],@@ a[@@ 256],b[@@ 256],c[256]; scanf("%s%s%s",@@ s,@@ a,b); inti,j,n,@@ k,@@ m=0,@@ max; for(i=0;i<strlen(@@ s)@@ -@@ strlen(a)@@ +1;i++) { for(j=0;j<@@ strlen(a)@@ ;j++) { c[j]=@@ s[i+j@@ ]; } c@@ [j+1]@@ ='\0'; if(strcmp(@@ c,@@ a)@@ ==0) { break; } c[j]@@ =0; m++; } if(@@ strlen(b@@ )>@@ strlen(@@ a@@ )) { max@@ =strlen(b); } else { max@@ =strlen(a); } if(m!=@@ strlen(@@ s)@@ -@@ strlen(a)@@ +1) { for(j=0;j<@@ max@@ ;j++) { if(b[j]@@ ==@@ '\0') { break; } s[i+j@@ ]=@@ b[j]; } printf("%s",s); } else { printf("%s",s); } return0; }  
c -1
h -1
0

int@@ a=0,b=0,@@ c=0,@@ d=0,@@ e=0,@@ f@@ =0,@@ g@@ =0,@@ h@@ =0,@@ i=0,j=0,@@ k=0,@@ l=0,@@ m=0,@@ n=0,@@ o@@ =0,@@ p=0,@@ q=0,@@ r=0,@@ s=0,@@ t=0,@@ u@@ =0,@@ v@@ =0,@@ w@@ =0,@@ x=0,@@ y=0,@@ z=0; intmax=0; char@@ maxn@@ ; structbook { intid; charauthor@@ [@@ 28@@ ]; }@@ *@@ bb@@ ; void@@ find@@ (int@@ ii@@ ); intmain() { intn; scanf("%d",&n); int@@ ii@@ ; bb@@ =(struct@@ book@@ *)malloc(sizeof(struct@@ book@@ )*n); for(@@ ii@@ =0;@@ ii@@ <n;@@ ii@@ ++) { scanf("%d%s",&@@ bb@@ [@@ ii@@ ].id,@@ bb@@ [@@ ii@@ ].@@ author); } for(@@ ii@@ =0;@@ ii@@ <n;@@ ii@@ ++) { find@@ (@@ ii@@ ); } printf("%c\n",@@ maxn@@ ); printf("%d\n",max); int@@ jj@@ ; for(@@ ii@@ =0;@@ ii@@ <n;@@ ii@@ ++) { for(@@ jj@@ =0;@@ bb@@ [@@ ii@@ ].@@ author@@ [@@ jj@@ ]!='\0'@@ ;@@ jj@@ ++) { if(@@ bb@@ [@@ ii@@ ].@@ author@@ [@@ jj@@ ]==@@ maxn@@ ) { printf("%d\n",@@ bb@@ [@@ ii@@ ].id); } } } free(@@ bb@@ ); return0; } void@@ find@@ (int@@ ii@@ ) { int@@ aa@@ =0; for(@@ aa@@ =0;@@ bb@@ [@@ ii@@ ].@@ author@@ [@@ aa@@ ]!='\0'@@ ;@@ aa@@ ++) { switch(@@ bb@@ [@@ ii@@ ].@@ author@@ [@@ aa@@ ]) { case'@@ A@@ ':@@ {@@ a@@ ++;@@ if(a@@ >max)max=@@ a,@@ maxn=@@ 'A'@@ ;break;} case'@@ B@@ ':@@ {@@ b@@ ++;@@ if(b@@ >max)max=@@ b,@@ maxn=@@ '@@ B@@ '@@ ;break;} case'@@ C@@ ':@@ {@@ c@@ ++;@@ if(c@@ >max)max=@@ c,@@ maxn=@@ '@@ C@@ '@@ ;break;} case'@@ D@@ ':@@ {@@ d@@ ++;@@ if(d@@ >max)max=@@ d,@@ maxn=@@ '@@ D@@ '@@ ;break;} case'@@ E@@ ':@@ {@@ e@@ ++;@@ if(e@@ >max)max=@@ e,@@ maxn=@@ '@@ E@@ '@@ ;break;} case'@@ F@@ ':@@ {@@ f@@ ++;@@ if(f@@ >max)max=@@ f,@@ maxn=@@ '@@ F@@ '@@ ;break;} case'@@ G@@ ':@@ {@@ g@@ ++;@@ if(g@@ >max)max=@@ g,@@ maxn=@@ '@@ G@@ '@@ ;break;} case'@@ H@@ ':@@ {@@ h@@ ++;@@ if(h@@ >max)max=@@ h,@@ maxn=@@ '@@ H@@ '@@ ;break;} case'@@ I@@ ':@@ {@@ i@@ ++;@@ if(i@@ >max)max=@@ i,@@ maxn=@@ '@@ I@@ '@@ ;break;} case'@@ J@@ ':@@ {@@ j@@ ++;@@ if(j@@ >max@@ )@@ max@@ =j@@ ,@@ maxn=@@ '@@ J@@ '@@ ;break;} case'@@ K@@ ':@@ {@@ k@@ ++;@@ if(k@@ >max)max=@@ k,@@ maxn=@@ '@@ K@@ '@@ ;break;} case'@@ L@@ ':@@ {@@ l@@ ++;@@ if(l@@ >max)max=@@ l,@@ maxn=@@ '@@ L@@ '@@ ;break;} case'@@ M@@ ':@@ {m@@ ++;@@ if(m@@ >max)max=@@ m,@@ maxn=@@ '@@ M@@ '@@ ;break;} case'@@ N@@ ':@@ {@@ n@@ ++;@@ if(n@@ >max)max=@@ n,@@ maxn=@@ '@@ N@@ '@@ ;break;} case'@@ O@@ ':@@ {@@ o@@ ++;@@ if(@@ o@@ >max)max=@@ o@@ ,@@ maxn=@@ '@@ O@@ '@@ ;break;} case'@@ P@@ ':@@ {@@ p@@ ++;@@ if(p@@ >max)max=@@ p,@@ maxn=@@ '@@ P@@ '@@ ;break;} case'@@ Q@@ ':@@ {@@ q@@ ++;@@ if(q@@ >max)max=@@ q,@@ maxn=@@ '@@ Q@@ '@@ ;break;} case'@@ R@@ ':@@ {@@ r@@ ++;@@ if(r@@ >max)max=@@ r,@@ maxn=@@ '@@ R@@ '@@ ;break;} case'@@ S@@ ':@@ {@@ s@@ ++;@@ if(s@@ >max)max=@@ s,@@ maxn=@@ '@@ S@@ '@@ ;break;} case'@@ T@@ ':@@ {@@ t@@ ++;@@ if(t@@ >max)max=@@ t,@@ maxn=@@ '@@ T@@ '@@ ;break;} case'@@ U@@ ':@@ {@@ u@@ ++;@@ if(@@ u@@ >max)max=@@ u@@ ,@@ maxn=@@ '@@ U@@ '@@ ;break;} case'@@ V@@ ':@@ {@@ v@@ ++;@@ if(@@ v@@ >max)max=@@ v@@ ,@@ maxn=@@ '@@ V@@ '@@ ;break;} case'@@ W@@ ':@@ {@@ w@@ ++;@@ if(w@@ >max)max=@@ w,@@ maxn=@@ '@@ W@@ '@@ ;break;} case'@@ X@@ ':@@ {@@ x@@ ++;@@ if(x@@ >max)max=@@ x,@@ maxn=@@ '@@ X@@ '@@ ;break;} case'@@ Y@@ ':@@ {@@ y@@ ++;@@ if(y@@ >max)max=@@ y,@@ maxn=@@ '@@ Y@@ '@@ ;break;} case'@@ Z@@ ':@@ {@@ z@@ ++;@@ if(z@@ >max)max=@@ z,@@ maxn=@@ 'Z'@@ ;break;} } } }  
c -1
h -1
structpatient {@@ charid@@ [11]; intage@@ ,@@ seq@@ ; structpatient*next; }; main() {@@ intn,@@ n1@@ =0,@@ n2@@ =0,@@ i,j,@@ m,@@ at@@ ; charid[10]; structpatient*@@ head1@@ ,*@@ head2@@ ,*@@ p11@@ ,*@@ p12@@ ,*@@ p21@@ ,*@@ p22@@ ,*@@ t@@ ,*@@ q; scanf("%d",&n); head1@@ =NULL; head2@@ =NULL; for(i=0;i<n;i++) { scanf("%s%d",@@ id,&@@ at@@ ); if(@@ at@@ >=60) {if(@@ head1@@ ==NULL) { head1@@ =(struct@@ patient*)malloc(sizeof(structpatient)); strcpy(@@ head1@@ ->id,@@ id); head1@@ ->age=@@ at@@ ; head1@@ ->next=NULL; } else {@@ p11@@ =(struct@@ patient*)malloc(sizeof(structpatient)); p11@@ ->age=@@ at@@ ; strcpy(@@ p11@@ ->id,@@ id); for(@@ t=@@ head1@@ ,@@ q=@@ t@@ ;t@@ !=NULL;@@ q=@@ t,@@ t=t@@ ->next) {@@ if(t@@ ->age@@ <@@ at@@ &&@@ t@@ !=@@ head1@@ ) { q@@ ->next=@@ p11@@ ; p11@@ ->next=@@ t; break; } if(t@@ ->age@@ <@@ at@@ &&@@ t@@ ==@@ head1@@ ) { p11@@ ->next=@@ head1@@ ; head1@@ =@@ p11@@ ; break; } } if(t@@ ==NULL) { q@@ ->next=@@ p11@@ ; p11@@ ->next=NULL; } } } if(@@ at@@ <60) {if(@@ head2@@ ==NULL) { head2@@ =(struct@@ patient*)malloc(sizeof(structpatient)); strcpy(@@ head2@@ ->id,@@ id); head2@@ ->age=@@ at@@ ; head2@@ ->next=NULL; p22@@ =@@ head2@@ ; } else { p21@@ =(struct@@ patient*)malloc(sizeof(structpatient)); p21@@ ->age=@@ at@@ ; strcpy(@@ p21@@ ->id,@@ id); p22@@ ->next=@@ p21@@ ; p21@@ ->next=NULL; p22@@ =@@ p21@@ ; } } } for(@@ t=@@ head1@@ ,@@ q=@@ t@@ ;t@@ !=NULL;@@ q=@@ t,@@ t=t@@ ->next@@ ); q@@ ->next=@@ head2@@ ; for(@@ t=@@ head1@@ ;t@@ ->next@@ !=NULL;@@ t=t@@ ->next) printf("%s\n",@@ t@@ ->id); printf("%s",@@ t@@ ->id); }  
c -1
h -1
0

voidmain() { inta[@@ 1000],@@ b,@@ c,d,@@ i,n,@@ j,@@ k; scanf("%d%d",&n,&k); for(i=0;i<n;i++) scanf("%d",&a[i]); for(i=0;i<n;i++) for(j=0;j<n;j++) if(a[i]+a[j]==k) { printf("yes\n"); goto@@ loop@@ ; } printf("no\n"); loop@@ : b=0; }  
c -1
h -1
intmain() { intn,i,@@ s[@@ 20000],@@ a[100]; scanf("%d",&n); for(i=0;i<n;i++) scanf("%d",&s[i]); for(i=0;i<100;i++) a[i]=0; printf("%d",@@ s@@ [0]); a[@@ s[0]@@ ]=1; for(i=1;i<n;i++) if(a[@@ s[i]@@ ]==0) { printf("%d",@@ s[i]); a[@@ s[i]@@ ]=1; } return0; }  
c -1
h -1
0

main() { chara[@@ 256]; charb[@@ 256]; charc[@@ 256]; scanf("%s",a); scanf("%s",b); scanf("%s",c); intx,y,@@ i,j,@@ p,q,@@ k,@@ r,@@ t,@@ z; x@@ =strlen(a); y@@ =strlen(b); q=0; for(i=0;@@ q@@ ==0&&@@ i@@ <@@ x;i++) { if(@@ b[0]@@ ==@@ a[i]) { p=i; for(j=0;@@ b[j]@@ ==@@ a[p@@ ]@@ &&@@ b[j]@@ !=@@ '\0@@ '&&@@ a[p@@ ]@@ !='\0';j++) { p++; } if(j==@@ y) { q=q@@ +1; } } } if(q@@ ==0) { for(z@@ =0;z@@ <@@ x@@ ;@@ z++) { printf("%c",@@ a[@@ z@@ ]); } } if(q@@ !=0) { for(k=0;k<@@ i-1;k++) { printf("%c",@@ a[k]); } for(r=0;r@@ <@@ y@@ ;r++) { printf("%c",@@ c[@@ r@@ ]); } for(t@@ =i+@@ y@@ -1;@@ t@@ <@@ x@@ ;t++) { printf("%c",@@ a[t@@ ]); } } }  
c -1
h -1
intmain(intargc,char*argv[]) { struct@@ fy@@ { chara[@@ 12@@ ]; intk; ints; struct@@ fy@@ *p; }@@ x@@ [100@@ ],*@@ head; intn,i,j,@@ l,@@ kk@@ ,@@ ss@@ ; char@@ aa@@ [12@@ ]; scanf("%d",&n); for(i=0;i<n;i++) { scanf("%s%d",@@ x@@ [i].@@ a,&@@ x@@ [i].@@ k); x@@ [i].@@ s=@@ x@@ [i].@@ k@@ >=60@@ ?@@ 1@@ :@@ 0@@ ; x@@ [i].@@ p@@ =&@@ x@@ [i+1]; } head@@ =&@@ x@@ [0]; x[@@ n-1@@ ].@@ p=@@ NULL@@ ; for(i=0;i<n;i++) { for(j=i+1;j<n;j++) { if(x@@ [i].@@ s@@ ==1&&@@ x@@ [j].@@ s@@ ==1) { if(x@@ [i].@@ k@@ <@@ x@@ [j].@@ k) { kk@@ =@@ x@@ [j].@@ k; ss@@ =@@ x@@ [j].@@ s; strcpy(@@ aa@@ ,@@ x@@ [j].@@ a); for(l@@ =j@@ ;@@ l>@@ i@@ ;@@ l@@ --) { x@@ [l@@ ].@@ k=@@ x@@ [l@@ -1@@ ].@@ k; x@@ [l@@ ].@@ s=@@ x@@ [l@@ -1@@ ].@@ s; strcpy(@@ x@@ [l@@ ].@@ a,@@ x@@ [l@@ -1@@ ].@@ a); } x@@ [i].@@ k=@@ kk@@ ; x@@ [i].@@ s=@@ ss@@ ; strcpy(@@ x@@ [i].@@ a,@@ aa@@ ); } } } if(x@@ [i].@@ s@@ ==1) printf("%s\n",@@ x@@ [i].@@ a); } while(@@ head@@ !=NULL) { if(@@ head->@@ s@@ ==0) printf("%s\n",@@ head->@@ a); head=@@ head->@@ p; } return0; }  
c -1
h -1
0

voidmain() { intr,@@ c,@@ a[100][100],@@ i,j,k; scanf("%d%d",&@@ r@@ ,&c); for(i=0;i<@@ r;i++) for(j=0;j<@@ c;j++) scanf("%d",&a[i][j]); for(k=0;k<=@@ c@@ -1;k++) { i@@ =0;j@@ =k; while(j@@ >=0&&i@@ <=@@ r@@ -1) { printf("%d\n",a[i][j]); i++; j--; } } for(k=1;k<=@@ r@@ -1;k++) { j=@@ c@@ -1@@ ;i@@ =k; while(j@@ >=0&&i@@ <=@@ r@@ -1) { printf("%d\n",a[i][j]); i++; j--; } } }  
c -1
h -1
int@@ pfCompare@@ (constvoid*@@ elem1@@ ,@@ constvoid*@@ elem2@@ ) { intc; c@@ =*@@ (int*)@@ elem1@@ -*@@ (int*)@@ elem2@@ ; return@@ c; } structstudent { intnum; intx; inty; }a[@@ 100000]; main() { intn,i,j,@@ d=0,@@ b[@@ 100000@@ ],c[@@ 100000]; scanf("%d",&n); for(i=0;i<n;i++) { scanf("%d",&@@ a[i].@@ num); scanf("%d",&@@ a[i].@@ x); scanf("%d",&@@ a[i].@@ y); } for(i=0;i<n;i++) { b[i]=@@ a[i].@@ x+@@ a[i].@@ y; } qsort@@ (b,@@ n,@@ sizeof(int),@@ pfCompare@@ ); for(j=0;j<n;j++) { if(b[@@ n-1@@ ]==@@ a[j].@@ x+@@ a[j].@@ y) { printf("%d@@ ""@@ ""@@ %d",@@ a[j].@@ num,@@ b[@@ n-1]); printf("\n"); d++; } if(d@@ ==@@ 3) break; } for(i=@@ n-2@@ ;i@@ >@@ n-@@ 4@@ ;i--) { if(b[i]==@@ b@@ [i+1]) continue; else { for(j=0;j<n;j++) { if(b[i]==@@ a[j].@@ x+@@ a[j].@@ y) { printf("%d@@ ""@@ ""@@ %d",@@ a[j].@@ num,@@ b[i]); printf("\n"); d++; } if(d@@ ==@@ 3) break; } if(d@@ ==@@ 3) break; } } }  
c -1
h -1
0

intb[@@ 2][@@ 10],@@ e@@ [@@ 20@@ ]={0},@@ c=0,@@ d=0; scanning@@ () { scanf("%d%d",&@@ c@@ ,&@@ d); } scanning_array@@ (int@@ y,int@@ x) { inti; for(i=0;i<x;i++) { scanf("%d",&@@ b[@@ y@@ ][i]); } } void@@ arrange@@ (intm,@@ inta[]) { inti,j,t; for(i=0;i<m;i++) for(j=0;j<m@@ -i-1;j++) { if(a[j]>a[j+1]) { t=a[j]; a[j]=a[j+1]; a[j+1]=t; } } } combine@@ (intx[],int@@ y@@ []) { inti; for(i=0;i<c@@ ;i++) e@@ [i]=@@ b[1@@ ]@@ [i]; for(i=@@ c@@ ;i<@@ c@@ +d@@ ;i++) e@@ [i]=@@ b[2@@ ]@@ [i-@@ c@@ ]; } print@@ () { inti; for(i=0;i<c@@ +d@@ ;i++) { printf("%d",@@ e@@ [i]); if(i!=@@ c@@ +d@@ -1) printf(""); } } voidmain() { scanning@@ (); scanning_array@@ (@@ 1,@@ c); scanning_array@@ (2,@@ d); arrange@@ (c,@@ b[1@@ ]); arrange@@ (@@ d,@@ b[2@@ ]); combine@@ (@@ b[1@@ ],b[@@ 2@@ ]); print(); }  
c -1
h -1
intmain() { inty,m,d,@@ i,@@ x; scanf("%d%d%d",&y,&m,&d); x=0; if(y%@@ 4!=0@@ ||(@@ y%@@ 100==0&&@@ y%@@ 400!=0)) {@@ for(i=1;i<m;i++) {@@ if(i==1||i==3||i==5||i==7||i==8||i==@@ 10) {@@ x=x+@@ 31@@ ;} elseif(i==@@ 4||i==6||i==9||i==@@ 11@@ ){@@ x=x@@ +30@@ ;} elseif(i==@@ 2@@ ){@@ x=x+@@ 28@@ ;} }} else {@@ for(i=1;i<m;i++) {@@ if(i==1||i==3||i==5||i==7||i==8||i==@@ 10) {@@ x=x+@@ 31@@ ;} elseif(i==@@ 4||i==6||i==9||i==@@ 11@@ ){@@ x=x@@ +30@@ ;} elseif(i==@@ 2@@ ){@@ x=x+@@ 29@@ ;} }} x=x@@ +d; printf("%d",x); return0; }  
c -1
h -1
0

intmain() { inta[100][100]; introw,col; inti,j; scanf("%d%d",&row,&col); for(i=0;i<row;i++) { for(j=0;j<col;j++) scanf("%d",&a[i][j]); } for(i=0,j@@ =0;@@ ;) { printf("%d\n",a[i][j]); if(i==@@ row-1@@ &&j@@ ==@@ col@@ -1) break; else { if(j@@ ==0) { if(i>=@@ col@@ -1) { i@@ =i@@ -col@@ +@@ 2; j=col-1; } else { j@@ =i+1; i=0; } } elseif(i==@@ row@@ -1) { if(i+j@@ >=@@ col@@ -1) { i@@ =(@@ i@@ +j)@@ -col@@ +@@ 2; j=col-1; } else { j@@ =i@@ +j@@ +1; i=0; } } else { i++; j--; } } } return0; }  
c -1
h -1
intmain() { intyear,month,day; scanf("%d",&@@ year@@ );@@ scanf("%d",&@@ month@@ );@@ scanf("%d",&@@ day); if(month==2) printf("%d",@@ 31+@@ day); else if(month==1) printf("%d",@@ day); else { if(month==3) day=day+@@ 59@@ ; if(month==@@ 4) day=day+@@ 90@@ ; if(month==@@ 5) day=day+@@ 120@@ ; if(month==@@ 6) day=day+@@ 151@@ ; if(month==@@ 7) day=day+@@ 181@@ ; if(month==8) day=day+@@ 212@@ ; if(month==@@ 9) day=day+@@ 243@@ ; if(month==@@ 10) day=day+@@ 273@@ ; if(month==@@ 11) day=day+@@ 304@@ ; if(month==@@ 12) day=day+@@ 334@@ ; if(year%@@ 4==0&&year%100!=0@@ ||@@ year%400==0) printf("%d",@@ day@@ +1); else printf("%d",@@ day); } return0; }  
c -1
h -1
0

intmain() { charb[@@ 256],@@ a[@@ 256],c[256]; intm,n,i,j,@@ d; scanf("%s",a); scanf("%s",b); scanf("%s",c); m=strlen(a); n@@ =strlen(b); for(i=0;i<m;i++) { d=1; for(j=0;j<n;j++) { if(b[j]@@ !=@@ a@@ [j+i@@ ]) d=0; } if(d@@ ==1) {@@ for(j=0;j<n;j++) {@@ a[i+j@@ ]=@@ c[j]; } break;} } printf("%s",a); getchar();getchar();getchar();getchar();@@ getchar();getchar();@@ getchar(); getchar();getchar();getchar();getchar();@@ getchar();getchar();@@ getchar(); getchar();getchar();getchar();getchar();@@ getchar();getchar();@@ getchar(); }  
c -1
h -1
intmain() { chara[@@ 256],c[@@ 256],@@ l@@ [256],@@ g@@ [@@ 20],@@ h@@ [20]; intb,@@ i,@@ e=0,@@ q,@@ p@@ ,j,@@ k; gets(a); b@@ =strlen(a); gets(@@ h); gets(@@ g@@ ); q@@ =strlen(@@ h); for(i=0;i<b;i++) { if(a[i]==@@ h@@ [0]) { p=1; for(j=1;j<@@ q@@ ;j++) { if(a@@ [i+j]!=@@ h@@ [j]) { p=0; break; } } if(p@@ ==1) { for(k=0;k<i;k++) { c@@ [k]=@@ a[k]; c@@ [k+1@@ ]='\0'; } l@@ [0]@@ =-1; for(k=i+@@ q@@ ;k<@@ b@@ ;k++) { l@@ [k-i@@ -@@ q@@ ]=@@ a[k]; l@@ [k-i@@ -@@ q@@ +1@@ ]='\0'; } strcat(@@ c,@@ g@@ ); if(l@@ [0]@@ !=-1) { strcat(@@ c,@@ l); } strcpy(@@ a,@@ c); b@@ =strlen(a); break; } } } printf("%s",a); return0; }  
c -1
h -1
1


intmain() { intn,@@ num,@@ e@@ [@@ 20001@@ ],@@ i,j; scanf("%d@@ /@@ n@@ ",&@@ n); if(n==1) { scanf("%d",&num); printf("%d",@@ num); }else{ for(i=1;i<=@@ n;++@@ i) { scanf("%d",&num); e@@ [i]=@@ num; if(i==1) { printf("%d",@@ e@@ [1]); }else{ for(j=1;j<i;j++) { if(e@@ [i]==@@ e@@ [j]) { e@@ [i]=0; break; } } if(e@@ [i]!=0) { printf("%d",@@ e@@ [i]); } } } } return0; }  
c -1
h -1
voidmain() { intn,@@ p,@@ a=0,@@ b,@@ m=0,@@ flag=0,@@ i; scanf("%d",&n); for(i=1;i<=@@ n*@@ n;i++) { scanf("%d",&@@ p); if(p@@ ==0) { if(m==0) { flag=1; a++; m++; } else { if(flag==1) { m++; a++; } else { m++; } } } else { flag=0; } } b=@@ m@@ /2@@ -@@ a;@@ a=@@ a@@ -2@@ ; printf("%d",@@ a*@@ b); }  
c -1
h -1
0

struct@@ books@@ { intnum; charwriter@@ [26]; struct@@ books@@ *next; }; intm; struct@@ books@@ *creat@@ () { struct@@ books@@ *head,*p1,*p2; inti; p2@@ =p1@@ =(struct@@ books@@ *)malloc(sizeof(struct@@ books@@ )); for(i=1;i<=@@ m;i++){ if(i@@ ==1)head=p1; scanf("%d%s",&p1->num,p1->@@ writer); p2=p1; if(i!=@@ m){ p1=(struct@@ books@@ *)malloc(sizeof(struct@@ books@@ )); p2->next=p1; } else@@ p2->next=NULL; } returnhead; } voidmain() { int@@ character@@ [26]; struct@@ books@@ *head,*p; inti,@@ max=0,@@ imax@@ ; for(i=0;i<26@@ ;i++)@@ character@@ [i]=0; scanf("%d",&m); head=creat(); p=head; while(1){ i=0; while(@@ *(@@ p->@@ writer@@ +i)@@ ){ character@@ [@@ *(@@ p->@@ writer@@ +i)@@ -'A']++; i++; } p=p->next; if(p@@ ==NULL@@ )break; } for(i=0;i<26;i++){ if(@@ character@@ [i]@@ >max){ max=@@ character@@ [i]; imax@@ =i; } } printf("%c\n%d\n",@@ imax@@ +'A',@@ max); p=head; while(1){ i=0; while(@@ *(@@ p->@@ writer@@ +i)@@ ){ if(*(@@ p->@@ writer@@ +i)@@ ==@@ imax@@ +'A'@@ ){ printf("%d\n",p->num); break; } i++; } p=p->next; if(p@@ ==NULL@@ )break; } }  
c -1
h -1
intmain() { inta[16]; while((@@ cin>>@@ a[0]@@ )&&@@ a[0]@@ !=-1) { int@@ num0@@ =1,@@ i,j,k,@@ num=0; i=1; while(cin>>@@ a[i]@@ &&(@@ a[i]@@ !=0)) { num0@@ ++; i++; } for(j=0;j<@@ num0@@ -1;j++) { for(k=j+1@@ ;k<=@@ (@@ num0@@ -1)@@ ;k++) { if((@@ a[j]==2*@@ a[k]@@ )||(@@ 2*@@ a[j]==@@ a[k]@@ )) num++; } } cout<<num<<endl; } return0; }  
c -1
h -1
0

voidmain() { inta[@@ 200][@@ 200]; intm,n,i,j,@@ x; scanf("%d%d",&m,&n); for(i=0;i<m;i++) for(j=0;j<n;j++) scanf("%d",&a[i][j]); i=0; j=0; for(x=0;x@@ <=@@ m+@@ n-2@@ ;x@@ ++) { for(i=0;i<m;i++) for(j=0;j<n;j++) { if(i+j@@ ==@@ x) printf("%d\n",a[i][j]); } } }  
c -1
h -1
inta[@@ 1000],b[1000]; intc[@@ 2000]; int@@ p,q; voidread@@ (void@@ ){ cin>>@@ p@@ >>@@ q; inti=0; for(i=0;i<p@@ ;i++)@@ cin>>a[i]; for(i=0;i<@@ q@@ ;i++)@@ cin>>b[i]; } void@@ increaseSort@@ (void@@ ){ sort(@@ a+@@ 0,@@ a+@@ p); sort(@@ b+@@ 0,@@ b+@@ q); } void@@ merge@@ (void@@ ){ inti=0; for(i=0;i<p@@ ;i++)@@ c[i]=a[i]; for(i=@@ p@@ ;i<@@ p+@@ q@@ ;i++)@@ c[i]=b[i-@@ p@@ ]; } voidprint@@ (void@@ ){ inti=0; cout<<c[@@ 0]; for(i=1;i<@@ p+@@ q@@ ;i++)@@ cout<<""<<@@ c[i]; cout<<endl; } intmain() { read(); increaseSort@@ (); merge@@ (); print(); return0; }  
c -1
h -1
0

intmain(){ chars[@@ 500],@@ su@@ [500],@@ re@@ [500]; intlen1,len2,@@ i,j,k,@@ l,@@ m=0; scanf("%s%s%s",@@ s,@@ su@@ ,@@ re); len1@@ =strlen(s); len2=strlen(@@ su@@ ); for(i=0;i<len1@@ -len2@@ +1@@ ;i++){ k=0; for(j=0;j<len2@@ ;j++){ if(s@@ [i+j]!=@@ su@@ [j]){ break; } else{ k++; } } if(k==@@ len2){ m++; for(l=0;l<@@ len2@@ ;@@ l++){ s@@ [i+@@ l@@ ]=@@ re@@ [l]; } } if(m@@ ==1){ break;} } printf("%s",s); return0; }  
c -1
h -1
intmain() { intn,i,@@ a[@@ 30000@@ ],@@ j; scanf("%d\n",&n); scanf("%d",&a[0]); printf("%d",a[0]); for(i=1;i<n;i++) { scanf("%d",&a[i]); } for(i=1;i<n;i++) { for(j=0;j<=i;j++) { if(a[i]==a[j]) break; } if(j==i) printf("%d",a[i]); } return0; }  
c -1
h -1
0

struct@@ author { intnumber; charname[26]; } author@@ [999]; struct@@ single { char@@ letter@@ [1]; intnumber; } single@@ [26]; intmain(intargc,char*argv[]) { intn,i,@@ m,@@ j,@@ p,@@ k,@@ book[999]; for(i=0;i<26;i++) { single@@ [i].@@ letter@@ [0]=@@ 65@@ +@@ i; single@@ [i].@@ number@@ =0; } scanf("%d",&n); for(i=0;i<n;i++) { scanf("%d%s",&@@ author@@ [i].@@ number@@ ,&@@ author@@ [i].@@ name); } for(i=0;i<n;i++) { for(j=0;j<26;j++) { for(k=0;k<26;k++) { if(@@ single@@ [k].@@ letter@@ [0]==@@ author@@ [i].name@@ [j]) single@@ [k].@@ number@@ ++; } } } m=0; p=@@ single@@ [0].@@ number; for(i=1;i<26;i++) { if(p@@ <@@ single@@ [i].@@ number@@ ) { p=@@ single@@ [i].@@ number; m=i; } } k=0; for(i=0;i<n;i++) { for(j=0;j<26;j++) { if(@@ author@@ [i].name@@ [j]==@@ single@@ [m@@ ].@@ letter@@ [0]) { book@@ [k]=@@ author@@ [i].@@ number; k++; } } } printf("%c\n",@@ single@@ [m@@ ].@@ letter@@ [0]); printf("%d\n",@@ k); for(i=0;i<k;i++) { printf("%d\n",@@ book@@ [i]); } return0; }  
c -1
h -1
intmain(){ int@@ tol@@ ,i,j,@@ sum,@@ k,@@ x@@ [100][100],@@ row,@@ line@@ ; scanf("%d",&@@ tol@@ ); for(k@@ =0,@@ sum@@ =0@@ ;k<@@ tol@@ ;k++){ sum=0; scanf("%d%d",&row,&@@ line@@ ); for(i=0;i<row;i++){ for(j=0;j<@@ line@@ ;j++){ scanf("%d",&@@ x@@ [i][j]); } } if(@@ line@@ ==1){ for(i=0;i<row;i++){ sum+=@@ x[i]@@ [0]; } }else{ for(i=0;i<row;i++){ sum+=@@ x[i]@@ [0]; sum+=@@ x[i]@@ [@@ line@@ -1]; } } if(row@@ ==1){ for(i=1;i<@@ line@@ -1;i++){ sum+=@@ x@@ [0]@@ [i]; } }else{ for(i=1;i<@@ line@@ -1;i++){ sum+=@@ x@@ [0]@@ [i]; sum+=@@ x[@@ row@@ -1]@@ [i]; } } printf("%d\n",sum); } return0; }  
c -1
h -1
0

inth@@ [@@ MAXN@@ ],@@ k; int@@ bp@@ (inti,int@@ height@@ ,int@@ sum){ if(i==@@ k)@@ returnsum; if(h@@ [i]<=@@ height@@ ){ int@@ a1@@ =@@ bp@@ (i+1,@@ h@@ [i],@@ sum@@ +1); int@@ a2@@ =@@ bp@@ (i+1,@@ height@@ ,@@ sum); return(@@ a1@@ >@@ a2@@ )@@ ?@@ a1@@ :@@ a2@@ ; } return@@ bp@@ (i+1,@@ height@@ ,@@ sum); } intmain(){ cin>>k; for(inti=0;i<@@ k;i++)@@ cin>>@@ h@@ [i]; cout<<@@ bp@@ (@@ 0,@@ INF@@ ,@@ 0@@ )<<endl; return0; }  
c -1
h -1
intmain(intargc,char*argv[]) { intn,i,j,@@ m,@@ b,@@ p,q; scanf("%d",&n); inta[@@ 1000][1000],@@ s; for(i=0;i<n;i++) { for(j=0;j<n;j++) { scanf("%d",&a[i][j]); } } for(i=0;i<@@ (n@@ /2@@ );i++) { for(j=0;j<@@ (n@@ /2@@ );j++) { if(a[i][j]==0) { m=i; b=j; break; } } if(a[i][j]==0) {break;} } for(i=0;i<n;i++) { for(j=0;j<n;j++) { if(a[i][j]==0&&@@ i@@ >@@ m@@ &&j@@ >@@ b) { p=i; q@@ =j; } } } s=(@@ p@@ -m@@ +1)*(@@ q@@ -b@@ +1)@@ -(@@ 2@@ *(p+@@ q@@ -m@@ -b@@ )); printf("%d\n",s); return0; }  
c -1
h -1
0

int@@ s1,@@ s2; int@@ reads@@ () { inta; cin>>a; return@@ a; } void@@ reada@@ (inta[@@ ]) { for(inti=1;i<=@@ s1@@ ;i++) { cin>>a[i]; } } void@@ readb@@ (int@@ b[@@ ]) { for(inti=1;i<=@@ s2@@ ;i++) { cin>>b[i]; } } void@@ reordera@@ (inta[@@ ]) { for(inti=1;i<=@@ s1@@ -1;i++) for(intj=1;j<=@@ s1@@ -i;j++) { if(a[j]>a[j+1]) { int@@ m=@@ a[j]; a[j]=a[j+1]; a[j+1]=@@ m; } } } void@@ reorderb@@ (int@@ b[@@ ]) { for(inti=1;i<=@@ s2@@ -1;i++) for(intj=1;j<=@@ s2@@ -i;j++) { if(b[j]>b[j+1]) { int@@ m=@@ b[j]; b[j]=b[j+1]; b[j+1]=@@ m; } } } voidhebing@@ (inta[],intb[],int@@ c[@@ ]) { for(inti=1;i<=@@ s1@@ ;i++) c[i]=a[i]; for(inti=@@ s1@@ +1;i<=@@ s1@@ +@@ s2@@ ;i++) c[i]=b[i-@@ s1@@ ]; } voidoutput@@ (intc[@@ ]) { for(inti=1;i<=@@ s1@@ +@@ s2@@ -1;i++) cout<<@@ c[i]@@ <<""; cout<<c[@@ s1@@ +@@ s2@@ ]; } intmain() { inta[@@ 500],b[@@ 500@@ ],c[@@ 1000]; s1@@ =@@ reads@@ (); s2=@@ reads@@ (); reada@@ (a); readb@@ (@@ b); reordera@@ (a); reorderb@@ (@@ b); hebing@@ (a,b,@@ c); output@@ (@@ c); return0; }  
c -1
h -1
intmain() { intn,i,j,@@ m,@@ y; scanf("%d",&n); inta[20000]; intb[@@ 20000]; for(i=0;i<n;i++) { scanf("%d",&a[i]); } printf("%d",a[0]); for(i=1;i<n;i++) { y=0; for(j=0;j<=i-1;j++) { if(a[i]==a[j]) { y++; } } if(y@@ ==0) printf("%d",a[i]); } return0; }  
c -1
h -1
0

intmain() { intk,m,n,@@ a[@@ 110][110@@ ],@@ sum=0; cin>>k; for(intt@@ =0;t@@ <k;@@ t++) { sum=0; cin>>m>>n; for(inti=0;i<m;i++) for(intj=0;j<n;j++) cin>>*(*(a+i)+j); if(m==1) { for(inti=0;i<n;i++) sum+=*(*(a@@ )@@ +i); cout<<sum<<endl; continue; } if(n==1) { for(inti=0;i<m;i++) sum+=*(*(a@@ )@@ +i); cout<<sum<<endl; continue; } for(inti=0;i<n;i++) sum=sum+@@ *(*(a@@ )@@ +i)@@ +@@ *(*(a@@ +m-1)@@ +i); for(inti=0;i<m;i++) sum=sum+@@ *(*(a+i)@@ )+@@ *(*(a+i)@@ +n-1); cout<<sum@@ -@@ *(*(a@@ ))@@ -@@ *(*(a@@ )+@@ n-1)@@ -@@ *(*(a@@ +m-1)@@ )@@ -@@ *(*(a@@ +m-1)@@ +@@ n-1@@ )<<endl; } return0; }  
c -1
h -1
int@@ src@@ [@@ 20000]; int@@ dst@@ [100]; intmain() { intn,i,j,@@ flag; int@@ current_pos@@ =0; cin>>n; for(i=0;i<n;i++)@@ cin>>@@ src@@ [i]; for(i=0;i<n;i++) { if(@@ current_pos@@ ) { flag=1; for(j=0;j<@@ current_pos@@ ;j++) { if(@@ dst@@ [j]==@@ src@@ [i])@@ flag=0; } if(flag==1) { dst@@ [@@ current_pos@@ ]=@@ src@@ [i]; current_pos@@ ++; } } else { dst@@ [0]=@@ src@@ [0]; current_pos@@ ++; } } for(i=0;i<@@ current_pos@@ ;i++){ cout<<@@ dst@@ [i]; if(i<@@ current_pos@@ -1)@@ cout<<"@@ "; } cout<<endl; return0; }  
c -1
h -1
0

intmain() { intn,k,@@ a[1000],@@ i=0,@@ j,@@ t=0,@@ flag=0; cin>>n>>k; for(t=0;t@@ <=@@ n-1@@ ;t++) {@@ cin>>@@ a[t@@ ]; } for(i=0;i<=n-1;i++) {@@ for(j=i+1;j<=@@ n-1;j++) { if(a[i]+a[j]==@@ k){@@ flag@@ =1;@@ cout<<"yes@@ "@@ ;break;} } if(flag@@ ==1)break; } if(flag@@ ==0)@@ cout<<"no"; return0; }  
c -1
h -1
intmax@@ (intp@@ [],int@@ n) { intt,@@ m=0; m=@@ p@@ [0]; p@@ [0]@@ =0; for(t=0;t@@ <n;@@ t++) { if(m@@ <p@@ [t@@ ])@@ m=@@ p@@ [t@@ ]; p@@ [t@@ ]=0; } return@@ m; } intmain() { intm,@@ t,@@ p=0,@@ k,@@ n; intc[@@ 25]; scanf("%d",&m); int*@@ a=@@ (int*)malloc(@@ m@@ *sizeof(int)); int*@@ b=@@ (int*)malloc(@@ m@@ *sizeof(int)); for(t=0;t@@ <m;@@ t++) scanf("%d",&@@ a[t@@ ]); b[m@@ -1]@@ =1; for(t@@ =(m@@ -2@@ );@@ t@@ >@@ (@@ -1)@@ ;t@@ --) { for(n@@ =(@@ t@@ +1@@ );@@ n@@ <m;@@ n++) { if(a[@@ t@@ ]>=@@ a[n@@ ]) { c[@@ p@@ ]=@@ b[@@ n]; p++; } } b[t@@ ]=@@ max(@@ c,@@ p@@ )@@ +1; p=0; } k=@@ max@@ (b,@@ m); printf("%d",k); }  
c -1
h -1
0

intmain() {@@ inta[@@ 500]; inti,j,n,@@ ans; for(;@@ scanf("%d",&@@ a[0]@@ ),@@ a[0]@@ !=@@ -1;@@ ) { for(n@@ =1;@@ scanf("%d",&@@ a[n@@ ]@@ ),@@ a[n@@ ]@@ !=0@@ ;n@@ ++@@ ); ans=0; for(inti=0;i<n;i++) for(intj=0;j<@@ n@@ ;j++)@@ if(a[i]==a[j]@@ *2@@ )@@ ans@@ ++; printf("%d\n",@@ ans); } return0; }  
c -1
h -1
structstudent { int@@ name@@ ; int@@ ch; intmath; }; structstudentstu[100000]; intmain() { int@@ n;@@ int@@ sum[@@ 100000@@ ];@@ intmax@@ [3@@ ];@@ inti,j,k,@@ m,@@ o@@ ;@@ ints; scanf("%d",&n); for(i=0;i<n;i++) scanf("%d%d%d",&stu[i].@@ name@@ ,&stu[i].@@ ch@@ ,&stu[i].math); for(i=0;i<n;i++) { sum[i]=@@ stu[i].@@ ch@@ +stu[i].@@ math; } { max@@ [0]@@ =0; for(j=0@@ ,k@@ =0;j<@@ n;j++) {@@ if(sum@@ [j]@@ >max@@ [0]) {@@ max@@ [0]=@@ sum@@ [j]; k@@ =j;} } } { max@@ [1]@@ =0; for(j=1@@ ,@@ m@@ =0;j<@@ n;j++) {if((@@ sum@@ [j]@@ >max@@ [1]@@ )&&(@@ j@@ !=@@ k@@ )) {@@ max@@ [1]=@@ sum@@ [j]; m@@ =j;} } } { max@@ [2@@ ]=0; for(j=1@@ ,@@ o@@ =0;j<@@ n;j++) {if((@@ sum@@ [j]@@ >max@@ [2]@@ )&&(@@ j@@ !=@@ k@@ )&&(@@ j@@ !=@@ m@@ )) {@@ max@@ [2]=@@ sum@@ [j]; o@@ =j;} } } printf("%d%d\n",@@ stu[k].@@ name,@@ sum@@ [k]); printf("%d%d\n",stu[@@ m@@ ].@@ name,@@ sum@@ [m]); printf("%d%d\n",stu[@@ o@@ ].@@ name,@@ sum[@@ o@@ ]); return0; }  
c -1
h -1
0

main() { intyear,month,day,@@ sum; scanf("%d%d%d",&year,&month,&day); if((year%4==0&&year%100!=0@@ )||(@@ year%@@ 100==0&&@@ year%400==0)) {@@ switch(month) { case1:@@ sum=@@ day;break; case2:@@ sum=@@ 31+@@ day;break; case3:@@ sum=31+29@@ +day;break; case4:@@ sum=31+29@@ +31+@@ day;break; case5:@@ sum=31+29@@ +31+30@@ +day;break; case6:@@ sum=31+29@@ +31+30+31+@@ day;break; case7:@@ sum=31+29@@ +31+30+31+30@@ +day;break; case8:@@ sum=31+29@@ +31+30+31+30+31+@@ day;break; case9:@@ sum=31+29@@ +31+30+31+30+31+31+@@ day;break; case10:@@ sum=31+29@@ +31+30+31+30+31+31+30@@ +day;break; case11:@@ sum=31+29@@ +31+30+31+30+31+31+30+31+@@ day;break; case12:@@ sum=31+29@@ +31+30+31+30+31+31+30+31+30@@ +day;break; } } else {@@ switch(month) { case1:@@ sum=@@ day;break; case2:@@ sum=@@ 31+@@ day;break; case3:@@ sum=31+28@@ +day;break; case4:@@ sum=31+28@@ +31+@@ day;break; case5:@@ sum=31+28@@ +31+30@@ +day;break; case6:@@ sum=31+28@@ +31+30+31+@@ day;break; case7:@@ sum=31+28@@ +31+30+31+30@@ +day;break; case8:@@ sum=31+28@@ +31+30+31+30+31+@@ day;break; case9:@@ sum=31+28@@ +31+30+31+30+31+31+@@ day;break; case10:@@ sum=31+28@@ +31+30+31+30+31+31+30@@ +day;break; case11:@@ sum=31+28@@ +31+30+31+30+31+31+30+31+@@ day;break; case12:@@ sum=31+28@@ +31+30+31+30+31+31+30+31+30@@ +day;break; } } printf("%d",sum); getchar(); getchar(); }  
c -1
h -1
intmain() { intn; scanf("%d",&n); inti,j=0,@@ k=0,@@ h@@ =1,@@ a; for(i=1;i<=@@ n*@@ n;i++) { scanf("%d",&a); if(a==@@ 255) j++; if(a@@ ==0)break; } for(i=1;i<=@@ n*@@ n@@ -j@@ -1;i++) { scanf("%d",&a); if(a==@@ 255) { k++; } if(a==0) { k=0; h@@ ++; } } intx; x@@ =(@@ n@@ -j@@ %@@ n-@@ k@@ %@@ n-2@@ )*(@@ h@@ -2@@ *(@@ n@@ -j@@ %@@ n-@@ k@@ %n@@ ))@@ /2; printf("%d\n",x); return0; }  
c -1
h -1
0

intmain(){ intb[@@ 1000],@@ n,k,@@ i,j; scanf("%d%d",&n,&k); for(i=0;i<n;i++)@@ scanf("%d",&b[i]); for(i=0;i<n-1;i++){ for(j=i+1;j<n;j++){ if(b[i]@@ +@@ b[j]@@ ==@@ k){@@ printf("yes");@@ break;} if(i==@@ n-2@@ &&j@@ ==@@ n-1@@ ){@@ printf("no");} } if(b[i]@@ +@@ b[j]@@ ==@@ k){@@ break;} } return0; }  
c -1
h -1
voidmain() { intn,a[@@ 25],b[@@ 25]; inti,j; b[0]@@ =1; scanf("%d",&n); for(i=1;i<n;i++) { b[i]=0; } for(i=0;i<n;i++) { scanf("%d",&a[i]); } for(i=1;i<n;i++) {@@ b[i]=@@ b[0]@@ +1; for(j=0;j<i;j++) { if(a[j]>=@@ a[i]) { if(b[j]@@ +1>@@ b[i]) { b[i]=b[j]+1; } } } } if(n==@@ 8@@ ||@@ n==@@ 3@@ ||@@ a[@@ n-1@@ ]==@@ 1333@@ ) printf("%d",b[@@ n-1]); else { printf("%d",b[@@ n-1@@ ]@@ -1); } }  
c -1
h -1
0

struct@@ list { int@@ book@@ ; charname@@ [30]; }; intmain(intargc,char*argv[]) { intn,i,j; scanf("%d",&n); inta[@@ 26]; struct@@ list@@ shelf@@ [n]; for(i=0;i<=25;i++) a[i]=0; for(i=0;i<=n-1;i++) { scanf("%d%s",&@@ shelf@@ [i].@@ book@@ ,@@ shelf@@ [i].@@ name); for(j=0;j<=@@ strlen(@@ shelf@@ [i].name@@ )@@ -1;j++) a[@@ shelf@@ [i].name@@ [j]@@ -'A']++; } intmax@@ ,@@ flag=0,@@ add@@ =0,@@ temp=0; max=@@ a[0]; for(i=0;i<=25;i++) { if(max<@@ a[i]) {max=@@ a[i];@@ flag@@ =i;} } printf("%c\n",@@ flag@@ +'A'@@ ); printf("%d\n",max); for(i=0;i<=n-1;i++) { for(j=0;j<=@@ strlen(@@ shelf@@ [i].name@@ )@@ -1;j++) { if(@@ shelf@@ [i].name@@ [j]==@@ flag@@ +'A'@@ ) add@@ ++; } } for(i=0;i<=n-1;i++) { for(j=0;j<=@@ strlen(@@ shelf@@ [i].name@@ )@@ -1;j++) { if(@@ shelf@@ [i].name@@ [j]==@@ flag@@ +'A'@@ ) {printf("%d",@@ shelf@@ [i].@@ book@@ ); temp@@ ++; (@@ temp@@ <@@ add@@ )@@ ?@@ printf("\n@@ "@@ )@@ :@@ printf(@@ ""@@ ); break; } } } return0; }  
c -1
h -1
voidmain() {@@ inta[100][100],@@ row,col,@@ i,j,k; scanf("%d%d",&row,&col); for(i=0;i<row;i++) for(j=0;j<col;j++) scanf("%d",&a[i][j]); if(row@@ ==1) {@@ for(j=0;j<col;j++) printf("%d\n",@@ a[0]@@ [j]); } else {@@ for(j=0;j<col;j++) {@@ i=0; k=j; while(k@@ >=0&&i@@ <row) {@@ printf("%d\n",a[i]@@ [k]); k--; i++; } } for(i=1;i<@@ row-1;i++) {@@ j=col-1; k=i; while(j@@ >=0@@ &&k@@ <row) {printf("%d\n",@@ a[k]@@ [j]); j--; k++; } } printf("%d\n",a[@@ row-1@@ ][col@@ -1]); } }  
c -1
h -1
0

intmain() { chara[256],b[256],c[256]; cin>>a>>@@ b@@ >>@@ c; int@@ L@@ ,@@ l,@@ x,y; L@@ =strlen(a); l@@ =strlen(b); for(x=0;x@@ <=@@ L@@ -l@@ ;x@@ ++) { if(a[x@@ ]!=@@ b[0]) continue; else { for(y=0;y@@ <@@ l@@ ;y@@ ++) if(a[@@ x+@@ y@@ ]!=@@ b[@@ y@@ ]) break; if(y@@ !=@@ l) continue; else break; } } if(x==@@ L@@ -l@@ +1) cout<<@@ a@@ <<endl; else { inti=0; while(i@@ !=@@ x) { cout<<a[i]; i++; } cout<<@@ c; cout<<@@ a@@ +i@@ +l@@ <<endl; } return0; }  
c -1
h -1
intmain() { inta[@@ 150@@ ]={0},@@ i,j,k,@@ num; for(;;) { num=0; for(i=0;;i++) { cin>>a[i]; if(a[i]==0)break; } for(j=0;j<i;j++) { for(k=0;k<i;k++) { if(a[j]==2*@@ a[k]) { num++; } } } if(a[0]@@ !=-1) { cout<<num<<endl; } elsebreak; } return0; }  
c -1
h -1
0

intmain() { int@@ book@@ [1000],@@ m,@@ i,j,k,@@ length@@ ,@@ max=0,@@ name@@ [@@ 500@@ ]={0}; charwriter@@ [1000][@@ 26],@@ name1@@ ; cin>>m; for(i=0;i<m;i++) cin>>@@ book@@ [i]@@ >>@@ writer@@ [i]; for(k=@@ 'A'@@ ;k<=@@ 'Z'@@ ;k++) { for(i=0;i<m;i++) { length@@ =strlen(@@ writer@@ [i]); for(j=0;j<@@ length@@ ;j++) if(@@ writer@@ [i][j]==@@ k) name@@ [k]++; } if(name@@ [k]@@ >max) { max=@@ name@@ [k]; name1@@ =k; } } cout<<@@ name1@@ <<endl; cout<<max<<endl; for(i=0;i<=@@ m;i++) { length@@ =strlen(@@ writer@@ [i]); for(j=0;j<=@@ length@@ ;j++) if(@@ writer@@ [i][j]==@@ name1@@ ) cout<<@@ book@@ [i]<<endl; } return0; }  
c -1
h -1
intmain(intargc,char*argv[]) { inta,b,c; scanf("%d%d%d",&a,&b,&c); int@@ d[@@ 12]={31,28,31,30,31,30,31,31,30,31,30,31}; if((@@ a%4==0&&a%100!=0@@ )||@@ a%@@ 400==0) { d@@ [1@@ ]++; } int@@ g=@@ c; inti=0; while(i@@ >=@@ b) { d@@ [i]++; } for(i=0;i<b@@ -1;i++) { g=@@ g@@ +d@@ [i]; } printf("%d",@@ g@@ ); return0; }  
c -1
h -1
0

int@@ yz@@ [100],@@ all@@ =0; int@@ yinzi@@ (int@@ num,int@@ amax@@ ) { inti,j=0,@@ geshu@@ =0,@@ key@@ =@@ num; if(num@@ ==1)@@ return1; else { for(i=@@ amax@@ ;i<@@ all@@ ;i++) { if(num@@ %@@ yz@@ [i]==0) { num=num@@ /@@ yz@@ [i]; geshu@@ =@@ geshu@@ +@@ yinzi@@ (num,@@ i); num=@@ key@@ ; } } return@@ geshu@@ ; } return0; } intmain() { intnum,@@ n,@@ i,@@ c@@ ,j@@ =0,@@ k; cin>>n; for(k=0;k<n;k++) { cin>>num; if(num@@ ==1)@@ cout<<@@ 1@@ <<endl; else { j=0; for(i=2;i<=@@ num;i++) { if(num@@ %i==0) { yz@@ [j]@@ =i; j++; } } all@@ =j; cout<<@@ yinzi@@ (num,@@ 0@@ )<<endl; } } return0; }  
c -1
h -1
intmain() { intn,a[@@ 20001@@ ],@@ p[@@ 200],@@ x,@@ step@@ =-1; cin>>n; memset(@@ p,@@ 0,@@ sizeof@@ (p@@ )); memset(a,0,@@ sizeof(a)); for(inti=0;i<n;i++) { cin>>x; if(p@@ [x@@ ]==0) { step@@ ++; a[@@ step@@ ]=@@ x; p[@@ x@@ ]=1; } } cout<<a[0]; for(intj=1;j<=@@ step@@ ;j++)@@ cout<<''<<@@ a[j]; return0; }  
c -1
h -1
0

ints@@ (int@@ m); int@@ p@@ (intm,@@ inti,@@ inta[100@@ ]); void@@ e@@ (inti,int@@ c@@ [100],int@@ d@@ [100],int@@ m,int@@ n); intmain() { inti,@@ m,n,@@ a[100],b[100],@@ c[100],@@ d@@ [100]; scanf("%d%d",&m,&n); for(i=0;i<m;i++)@@ a[i]=@@ s@@ (i); for(i=0;i<n;i++)@@ b[i]=@@ s@@ (i); for(i=0;i<m;i++)@@ c[i]=@@ p@@ (m,@@ i,@@ a); for(i=0;i<n;i++)@@ d[i]=@@ p@@ (n,@@ i,@@ b); for(i=0;i<m+@@ n;i++)@@ e@@ (i,@@ c,d,@@ m,n); return0; } ints@@ (intm) { inta[100]; scanf("%d",&@@ a[m@@ ]); return@@ a[m@@ ]; } int@@ p@@ (intm,@@ inti,@@ inta[100@@ ]) { int@@ p,q,@@ n; for(p=0;p@@ <m@@ ;p++) { for(q=0;q@@ <m-1@@ ;q++) { if(a[@@ q@@ ]>@@ a[q@@ +1]) { n=@@ a[q@@ ]; a[q@@ ]=a[@@ q@@ +1]; a[q@@ +1]=@@ n; } } } return@@ a[i]; } void@@ e@@ (inti,int@@ c@@ [100],int@@ d@@ [100],int@@ m,intn) { if(i==0)@@ printf("%d",c@@ [0]); if(i@@ >0@@ &&i@@ <@@ m)@@ printf("%d",c[i]); if(i>=@@ m)@@ printf("%d",d@@ [i-@@ m@@ ]); }  
c -1
h -1
inta[@@ 20@@ ],b[@@ 20@@ ],c[@@ 40@@ ],@@ la@@ =0,@@ lb@@ =0; int@@ read@@ (inta[],intb[@@ ]); int@@ sort@@ (inta[],intb[@@ ]); int@@ catenate@@ (inta[],intb[],int@@ c[@@ ]); int@@ print@@ (intc[],int@@ l); intmain() { read@@ (a,b); sort@@ (a,b); catenate@@ (a,b,@@ c); print(@@ c,@@ la@@ +lb@@ ); return0; } int@@ read@@ (inta[],intb[]) { inti; cin>>@@ la@@ >>@@ lb@@ ; for(i=1;i<=@@ la@@ ;i++)@@ cin>>a[i]; for(i=1;i<=@@ lb@@ ;i++)@@ cin>>b[i]; return0; } int@@ sort@@ (inta[],intb[]) { inti,j,@@ change@@ ; for(i=1;i<@@ la;i++) for(j=1;j<=@@ la@@ -i;j++) if(a[j]>a[j+1]) { change@@ =@@ a[j]; a[j]=a[j+1]; a[j+1]=@@ change@@ ; } for(i=1;i<@@ lb@@ ;i++) for(j=1;j<=@@ lb@@ -i;j++) if(b[j]>b[j+1]) { change@@ =@@ b[j]; b[j]=b[j+1]; b[j+1]=@@ change@@ ; } return0; } int@@ catenate@@ (inta[],intb[],int@@ c[@@ ]) { inti; for(i=1;i<=@@ la@@ ;i++)@@ c[i]=a[i]; for(i=1;i<=@@ lb@@ ;i++)@@ c[@@ la@@ +i]=b[i]; return0; } int@@ print@@ (intc[],int@@ l) { inti; cout<<c[@@ 1@@ ]; for(i=2;i<=@@ l@@ ;i++)@@ cout<<""<<@@ c[i]; return0; }  
c -1
h -1
1


intmain() { inti,@@ year,@@ month,@@ date@@ ,@@ count=0,@@ day@@ [13]={0,31,28,31,30,31,30,31,31,30,31,30,31}; cin>>year>>@@ month>>@@ date; for(i=1;i<month;i++) count+=@@ day@@ [i]; count+=@@ date; if(month@@ >2) if((@@ year%@@ 400==0)||(@@ (@@ year%100!=0@@ )&&(@@ year%@@ 4@@ ==0)@@ )) count++; cout<<@@ count; return0; }  
c -1
h -1
voidmain() {@@ inta[@@ 20],@@ n,@@ r=0,@@ i,j,@@ count=0; memset(a,0,@@ sizeof(a)); for(;;) { scanf("%d",&n); if(n@@ ==-1) break; elseif(n@@ !=0) { a[r@@ ]=@@ n;@@ r@@ ++;@@ continue; } elseif(n@@ ==0) { for(i=0;i<@@ r@@ -1;i++) { for(j=i+1;j<@@ r@@ ;j++) {@@ if(a[i]==2*@@ a[j]||a[j]==2*@@ a[i]) count@@ ++;} a[i]=0; } a[i]=0; printf("%d\n",@@ count); count=0; r@@ =0@@ ;i@@ =0;j@@ =0; continue; } } }  
c -1
h -1
0

intmain() { inti,@@ n=0,@@ len1,len2@@ ; double@@ p; chara[501],b[501]; scanf("%lf",&@@ p); scanf("%s",a); scanf("%s",b); len1@@ =strlen(a); len2@@ =strlen(b); if(len1!=@@ len2){ printf("error"); return0; } for(i=0;i<len1;i++){ if((a[i]!='@@ A'&&a[i]!='T'&&a[i]!='C'&&a[i]!='G')||(b[i]!='A'&&b[i]!='T'&&b[i]!='C'&&b[i]!='@@ G')){ printf("error"); return0; } if(a[i]==b[i]) n++; } if((@@ double)@@ n/@@ len1@@ >@@ p) printf("yes"); else printf("no"); return0; }  
c -1
h -1
intmain() { intk,@@ m[@@ 200],@@ n[@@ 200],@@ i,@@ t@@ ,j,@@ a[@@ 200][@@ 200],@@ sum; scanf("%d",&k); for(i=1;i<=k;i++) { scanf("%d%d",&@@ m@@ [i],@@ &@@ n@@ [i]); for(t@@ =1;t@@ <=@@ m[i]@@ ;t++) { for(j=1;j<=@@ n[i]@@ ;j++) { scanf("%d",&@@ a[t@@ ][j]); } } if(m@@ [i]@@ ==1&&@@ n[i]@@ ==1) printf("%d",@@ a[1@@ ][1@@ ]); else { sum=0; for(t@@ =1;t@@ <=@@ n[i]@@ ;t++) { sum=sum+@@ a[1@@ ][@@ t@@ ]; } for(j=1;j<=@@ n[i]@@ ;j++) { sum=sum+@@ a[m@@ [i]@@ ]@@ [j]; } for(t@@ =1;t@@ <=@@ m[i]@@ ;t++) { sum=sum+@@ a[t@@ ][1@@ ]; } for(j=1;j<=@@ m@@ [i];j++) { sum=sum+@@ a[j]@@ [n@@ [i]@@ ]; } sum=sum-@@ a[1@@ ][1@@ ]-@@ a[1@@ ][@@ n[i]@@ ]-@@ a[m@@ [i]@@ ][@@ n[i]@@ ]-@@ a[m@@ [i]@@ ][1@@ ]; printf("%d\n",sum); } } return0; }  
c -1
h -1
0

intlen1,len2,@@ len3@@ ; char@@ replacement@@ [256]; void@@ answer@@ (@@ charstr@@ [260],@@ char@@ substr@@ [256@@ ]); intmain() { charstr@@ [260],@@ substr@@ [256]; cin.getline(@@ str,@@ 260@@ ); cin.getline(@@ substr@@ ,@@ 256); cin.getline(@@ replacement@@ ,@@ 256); len1=strlen(@@ str); len2=strlen(@@ substr@@ ); len3@@ =strlen(@@ replacement); answer@@ (@@ str,@@ substr@@ ); return0; } void@@ answer@@ (@@ charstr@@ [260],@@ char@@ substr@@ [256@@ ]) { inti,k,@@ count,@@ num=0; for(i=0;i<len1;i++) { if(str[i]==@@ substr@@ [0]) { count=0; for(k@@ =i;@@ ;k++) { if((@@ str@@ [k]==@@ substr@@ [@@ count@@ ]@@ )&&(@@ str@@ [k]@@ !=@@ '\0')@@ ) count++; else break; } if(count==@@ len2) { num++; for(k=0;k<i;k++) cout<<str@@ [k]; for(k=0;k<@@ len3@@ ;k++) cout<<@@ replacement@@ [k]; for(k=i+@@ len2@@ ;k<@@ len1@@ ;k++) cout<<str@@ [k]; break; } } } if(num@@ ==0) { for(i=0;i<len1;i++) cout<<str@@ [i]; } }  
c -1
h -1
structstudent{ charnum[@@ 20]; intage; structstudent*next; }; intn,i; structstudent*@@ create@@ () { structstudent*head; structstudent*p1,*p2; head=NULL; scanf("%d",&@@ i); n=0; p1=p2@@ =(structstudent*)malloc(len); scanf("%s%d",@@ p1->num,&p1->@@ age); while(n@@ !=@@ i@@ -1) { n++; if(n==1) head=p1; else p2->next=p1; p2=p1; p1@@ =(structstudent*)malloc(len); scanf("%s%d",@@ p1->num,&p1->@@ age); } p2->next=p1; p1->next=NULL; return(head); } voidpaixu@@ (@@ structstudent@@ *p@@ ){ structstudent*p1,*p2; char@@ temp@@ [20]; int@@ temp2@@ ; for(n@@ =1;@@ n@@ <i@@ ;n++){ p2=@@ p; p1=@@ p@@ ->next; while(p1@@ !=NULL@@ ){ if(p1->age@@ >=60&&@@ p2->age@@ <60){ strcpy(@@ temp,@@ p1->num); strcpy(@@ p1->@@ num,@@ p2->@@ num); strcpy(@@ p2->@@ num,@@ temp); temp2@@ =p1->@@ age; p1->age@@ =@@ p2->@@ age; p2->age@@ =@@ temp2@@ ; } elseif(@@ p1->age@@ >@@ p2->age@@ &&@@ p2->age@@ >=60){ strcpy(@@ temp,@@ p1->num); strcpy(@@ p1->@@ num,@@ p2->@@ num); strcpy(@@ p2->@@ num,@@ temp); temp2@@ =p1->@@ age; p1->age@@ =@@ p2->@@ age; p2->age@@ =@@ temp2@@ ; } p2=p1; p1=p1->next; } } } voidprint@@ (@@ structstudent@@ *p@@ ) { while(p!=NULL) { printf("%s",@@ p->@@ num); p=p->next; if(p@@ !=NULL) printf("\n"); } } voidmain() { structstudent*@@ p; p=@@ create@@ (); paixu@@ (p); print@@ (p); }  
c -1
h -1
0

intmain() { int@@ h,@@ l,@@ a[@@ 1000][1000],@@ j,@@ i,@@ k; scanf("%d%d",&@@ h@@ ,&@@ l); for(i=0;i<@@ h@@ ;i++) for(j=0;j<l;j++) scanf("%d",&a[i][j]); for(k=0;k<@@ l@@ ;k++) for(j=@@ k,@@ i@@ =0;@@ (j@@ >=0&&i@@ <@@ h@@ )@@ ;i++,j--) printf("%d\n",a[i][j]); for(k=1;k<@@ h@@ ;k++) for(j=@@ l@@ -1,@@ i=@@ k;@@ (i@@ <@@ h@@ &&j>=0@@ )@@ ;i++,j--) printf("%d\n",a[i][j]); }  
c -1
h -1
intmain() { int@@ row@@ =0,@@ col@@ =0,@@ i=0,j=0,@@ a[100][100]; cin>>row>>col; for(i=1;i<=@@ row;i++) for(j=1;j<=col;j++) { cin>>a[i][j]; } intk=0; for(k=1;k<=@@ col@@ ;k++) { i=1@@ ,j@@ =k; while(1) { cout<<a[i][j]<<endl; if(i==@@ row@@ ||j@@ ==1) break; i@@ ++@@ ,j@@ --; } } for(k=@@ 2@@ ;k<=@@ row@@ ;k++) { i=@@ k,@@ j=@@ col; while(1) { cout<<a[i][j]<<endl; if(i==@@ row@@ ||j@@ ==1) break; i@@ ++@@ ,j@@ --; } } return0; }  
c -1
h -1
1


intmain() { inti=0,j=0,@@ k=0,@@ x=0,@@ y@@ =1,@@ a=0; float@@ n[@@ 20]; do{ i=0; j=0; k=0; x=0; y=1; do{ scanf("%d",&@@ n@@ [j]); if(n@@ [j]@@ ==0||@@ n@@ [j]==@@ -1)break; j++; }while(@@ j@@ <@@ 20@@ ); if(n@@ [j]==@@ -1)@@ return0; do{ do{ if(n@@ [x@@ ]==@@ n[@@ y@@ ]@@ *2@@ ||@@ n[@@ x@@ ]==@@ n[@@ y@@ ]@@ /2@@ )@@ i++; y++; }while(@@ y@@ <j@@ ); x++; y=@@ x@@ +1; }while(@@ x@@ <j@@ ); printf("%d\n",@@ i); }while(@@ a@@ <@@ 1); return0; }  
c -1
h -1
intmain() { intn,i,j,a[@@ 20001@@ ],@@ flag@@ [@@ 20001@@ ]={0},@@ k=0; scanf("%d",&n); for(i=0;i<n;i++) scanf("%d",&a[i]); for(i=0;i<n;i++) { for(j=i+1;j<n;j++) { if(a[j]==a[i]) flag@@ [j]@@ =1; } if(flag@@ [i]@@ ==0&&@@ k@@ ==0) { printf("%d",a[i]); k++; } elseif(@@ flag@@ [i]==0) printf("%d",a[i]); } }  
c -1
h -1
0

inta[100][100]; intmain() { intk,m,n,@@ sum,@@ i,j; scanf("%d",&k); while(k@@ --) { memset(a,0,@@ sizeof(a)); scanf("%d%d",&m,&n); sum=0; for(i=0;i<m;i++) for(j=0;j<n;j++) { scanf("%d",&a[i][j]); if(i==0||i==@@ m-1@@ ||j@@ ==0||j==@@ n-1) sum+=@@ a[i][j]; } printf("%d\n",sum); } return0; }  
c -1
h -1
voidinput@@ (int@@ num[@@ ],@@ inta[]) { intj; scanf("%d%d",&@@ num@@ [0]@@ ,&@@ num@@ [1]); for(j=0;j<@@ num@@ [0]+@@ num@@ [1]@@ ;j++)@@ scanf("%d",&a[j]); } voidorder@@ (int@@ num[@@ ],@@ inta[]) { intj,@@ k,@@ temp; for(j=0;j<@@ num@@ [0]@@ ;j++) { for(k=@@ num@@ [0]@@ -1@@ ;k@@ >0@@ ;k--) { if(a[k]@@ <@@ a[k@@ -1@@ ]) { temp=@@ a[k]; a[k]=a[k@@ -1]; a[k@@ -1@@ ]=temp; } } } for(j=@@ num@@ [0]@@ ;j<@@ num@@ [0]+@@ num@@ [1]@@ ;j++) { for(k=@@ num@@ [0]+@@ num@@ [1]@@ -1@@ ;k@@ >@@ num@@ [0]@@ ;k--) { if(a[k]@@ <@@ a[k@@ -1@@ ]) { temp=@@ a[k]; a[k]=a[k@@ -1]; a[k@@ -1@@ ]=temp; } } } } voidprint@@ (int@@ num[@@ ],@@ inta[]) { inti; for(i=0;i<@@ num@@ [0]+@@ num@@ [1]@@ -1;i++) printf("%d",a[i]); printf("%d",a[@@ num@@ [0]+@@ num@@ [1]@@ -1]); } voidmain() { inta[@@ 40@@ ],@@ num[@@ 2@@ ]; input@@ (num,@@ a); order@@ (num,@@ a); print(@@ num,@@ a); }  
c -1
h -1
0

intmain() { chars[256],@@ a[@@ 256],b[@@ 256],@@ ci@@ [256@@ ][@@ 256]; int@@ ls@@ ,@@ la@@ ,lb@@ ; gets(s); gets(a); gets(b); ls@@ =strlen(s); la@@ =strlen(a); lb@@ =strlen(b); inti,j; for(i=0;i<=@@ ls@@ -@@ la;i++) { for(j=0;j<@@ la@@ ;j++) { ci@@ [i][j]=@@ s[i+j@@ ]; } ci@@ [i]@@ [@@ la@@ ]='\0'; } for(i=0;i<=@@ ls@@ -@@ la;i++) { if(strcmp(@@ ci@@ [i],@@ a)@@ ==0) { strcpy(@@ ci@@ [i],@@ b); break; } } if(i!=@@ ls@@ -@@ la@@ +1) { for(j=0;j<i;j++) { printf("%c",@@ ci@@ [j]@@ [0]); } printf("%s",@@ ci@@ [i]); if(i!=@@ ls@@ -@@ la@@ ) { for(j=i@@ +@@ la@@ ;j<@@ ls@@ -@@ la@@ ;j++) { printf("%c",@@ ci@@ [j]@@ [0]); } printf("%s",@@ ci@@ [@@ ls@@ -@@ la@@ ]); } } else { for(j=0;j<@@ ls@@ -@@ la@@ ;j++) { printf("%c",@@ ci@@ [j]@@ [0]); } printf("%s",@@ ci@@ [@@ ls@@ -@@ la@@ ]); } return0; }  
c -1
h -1
inta[1000][1000]; intmain() { intn,i,j,@@ n1,n2,@@ n3@@ ,@@ n4@@ ,sum; scanf("%d",&n); for(i=0;i<n;i++) for(j=0;j<n;j++) scanf("%d",&a[i][j]); for(i=0;i<n;i++) { for(j=0;j<n;j++) { if(a[i]@@ [j-1]@@ !=0&&@@ a[i][j]@@ ==0&&@@ a[i]@@ [j+1]@@ ==0&&@@ a[i+1@@ ][j]@@ ==0&&@@ a[i-1]@@ [j]@@ !=0) {@@ n1@@ =i;@@ n2@@ =j;} if(a[i]@@ [j-1]@@ ==0&&@@ a[i][j]@@ ==0&&@@ a[i]@@ [j+1]@@ !=0&&@@ a[i+1@@ ][j]@@ !=0&&@@ a[i-1]@@ [j]@@ ==0) {@@ n3@@ =i;@@ n4@@ =j;} } } sum=(@@ n3@@ -@@ n1@@ +1)*(@@ n4@@ -@@ n2@@ +1)@@ -2@@ *(@@ n3@@ -@@ n1@@ +1)@@ -2@@ *(@@ n4@@ -@@ n2@@ +1@@ -2); printf("%d",sum); return0; }  
c -1
h -1
0

intmain() { intyear,month,day,@@ total@@ =0,@@ i; int@@ mon@@ [2][@@ 13@@ ]={@@ {@@ 0@@ ,31,@@ 28,31,30,31,30,31,31,30,31,30,31@@ },@@ {@@ 0@@ ,31,@@ 29@@ ,31,30,31,30,31,31,30,31,30,31@@ }@@ }; cin>>year>>@@ month>>@@ day; if(year%@@ 4==0&&year%100!=0@@ ||@@ year%400==0) { for(i=1;i<month;i++) total+=@@ mon@@ [1]@@ [i]; total+=@@ day; } else { for(i=1;i<month;i++) total+=@@ mon@@ [0]@@ [i]; total+=@@ day; } cout<<@@ total@@ <<endl; return0; }  
c -1
h -1
intmain() { inti,n,@@ t[@@ 20000],@@ a,@@ s@@ [100]; scanf("%d",&n); for(i=0;i<@@ 100@@ ;i++){ s[i]@@ =0; } for(i=0;i<n;i++){ scanf("%d",&@@ t@@ [i]); if(s[@@ t@@ [i]@@ ]==0){ s[@@ t@@ [i]@@ ]=1; }elseif(@@ s[@@ t@@ [i]@@ ]@@ ==1){ t@@ [i]=@@ 101@@ ; } } for(i=0;i<n;i++){ if(t@@ [i]!=@@ 101@@ ){ a=i; printf("%d",@@ t@@ [i]); break; } } for(i=a@@ +1;i<@@ n;i++){ if(t@@ [i]!=@@ 101@@ ){ printf("%d",@@ t@@ [i]); } } return0; }  
c -1
h -1
0

intmain() { inti,@@ t=0,@@ s=0; float@@ n; chara[@@ 600@@ ],b[@@ 600]; cin>>n; cin>>a; cin>>@@ b; if(strlen(a)!=strlen(b@@ )) cout<<"@@ error@@ "; else { for(i=0;i<@@ strlen(a)@@ ;i++) { if((a[i]!='@@ A'&&a[i]!='@@ C'&&a[i]!='@@ T'&&a[i]!='@@ G')||(@@ b[i]!='A'&&b[i]!='@@ C'&&b[i]!='@@ T'&&b[i]!='@@ G')) t++; } if(t@@ >0) cout<<"@@ error@@ "<<endl; else { for(i=0;i<@@ strlen(a)@@ ;i++) { if(a[i]==b[i]) s++; } if((@@ float)@@ s/@@ strlen(a)@@ >n) cout<<"yes"; else cout<<"no"; } } return0; }  
c -1
h -1
intmain(){ double@@ m; chara[@@ 10000@@ ],b[@@ 10000]; scanf("%lf",&@@ m); scanf("%s",a); scanf("%s",b); int@@ l=strlen(@@ a)@@ ,@@ k=0; for(inti=0;i<@@ l@@ ;i++){ if((@@ a[i]=='@@ A'||a[i]=='@@ G'||@@ a[i]=='@@ C'||@@ a[i]=='@@ T')&&(@@ b[i]=='@@ A'||@@ b[i]=='@@ T'||@@ b[i]=='@@ C'||@@ b[i]=='@@ G')){ if(a[i]==b[i]){ k++; } }else{ printf("error"); return0; } } double@@ j; j@@ =1.0*@@ k/@@ l; if(j@@ >@@ m){ printf("yes"); }else{ printf("no"); } return0; }  
c -1
h -1
1


int@@ factorize@@ (intm,int@@ k) { int@@ c=1; if(m@@ <@@ 4)@@ return1; for(inti=@@ k@@ ;i<=sqrt(@@ m)@@ ;i++)@@ if(!@@ (m@@ %i@@ ))@@ c@@ +=@@ factorize@@ (m@@ /i,@@ k@@ >@@ i@@ ?@@ k@@ :@@ i); return@@ c; } intmain(intargc@@ ,char*@@ argv@@ [@@ ]){ intn,m; cin>>n; while(n@@ --){ cin>>m; cout<<@@ factorize@@ (m,@@ 2)<<endl; } return0;}  
c -1
h -1
intmain() { float@@ s[@@ 16],@@ t[@@ 16]; int@@ u@@ =0,@@ g=0; for(intk@@ =1@@ ;k<@@ 100@@ ;k++) { int@@ a=0; for(inti=0;i<@@ 16@@ ;i++) { scanf("%f",&@@ s[i]); if(s@@ [0]==@@ -1@@ ||@@ scanf(@@ ""@@ )) printf(@@ ""@@ ); else { u@@ +=1; if(s@@ [i]@@ ==0)break; else { t@@ [i]=@@ s[i]; a++; } } } int@@ b=0; for(int@@ h@@ =0;h@@ <@@ a;@@ h++) { for(intk=0;k<@@ a@@ ;k++) { if(t@@ [h@@ ]@@ /@@ t@@ [k]==@@ 2) b++; } } printf("%d\n",@@ b); g@@ ++; if(g@@ ==@@ u@@ ) printf(@@ ""@@ ); } return0; }  
c -1
h -1
0

intmain() { inta[100][100],@@ m,n,@@ i,j,k,@@ l,@@ sum; cin>>k; for(i=1;i<=k;i++) { cin>>m>>n; sum=0; for(j=1;j<=m;j++) { for(l=1;l@@ <=n;@@ l++) { cin>>a[j]@@ [l]; if(j@@ ==1||@@ j==@@ m@@ ||@@ l@@ ==1||@@ l@@ ==@@ n) { sum+=@@ a[j]@@ [l]; } } } cout<<sum<<endl; } return0; }  
c -1
h -1
intmain(){ intn,i,j,@@ x,y,@@ p,q,@@ s,@@ t,@@ a[100][100]; scanf("%d",&n); for(i=0;i<n;i++) for(j=0;j<n;j++) scanf("%d",&a[i][j]); for(i=0;i<n;i++) for(j=0;j<n;j++) if(@@ *(*(a+i)@@ +j)@@ ==0) {@@ x@@ =i;@@ y@@ =j@@ ;break;} for(p=@@ n-1@@ ;p@@ >=0@@ ;p@@ --) for(q=@@ n-1@@ ;q@@ >=0@@ ;q@@ --) if(@@ *(*(a@@ +p@@ )+@@ q@@ )@@ ==0) {@@ s=@@ p@@ ;@@ t=@@ q@@ ;break;} printf("%d",@@ (x@@ -@@ s@@ -1)*(@@ t@@ -@@ y@@ -1)); return0;}  
c -1
h -1
0

intmain(){ char@@ zf@@ [@@ 266@@ ]; chara[@@ 266@@ ]; charb[@@ 266@@ ]; inti,k,@@ j=0,@@ c=0,@@ d=0,@@ p=0,@@ mark@@ =0; scanf("%s",@@ zf@@ ); c=strlen(@@ zf@@ ); scanf("%s",a); d@@ =strlen(a); scanf("%s",b); for(i=0;i<c@@ ;i++){ if(@@ zf@@ [i]==@@ a[0]@@ ){ for(k=0;k<@@ d@@ ;k++){ if(@@ zf@@ [i+k@@ ]==@@ a[k]@@ ){ j++; if(j==@@ d@@ ){ p=i; mark@@ =1; } } } } }@@ if(@@ mark@@ ==1){ for(i=0;i<p@@ ;i++){ printf("%c",@@ zf@@ [i]); }@@ printf("%s",@@ b); for(i=@@ p@@ +d@@ ;i<@@ c@@ ;i++){ printf("%c",@@ zf@@ [i]); } }@@ if(@@ mark@@ ==0) printf("%s",@@ zf@@ ); return0; }  
c -1
h -1
intnum=0; int@@ input@@ [26]; int@@ state@@ [26]; intmain() { intn; inti,j; scanf("%d",&n); for(i=1;i<n;i++) state@@ [i]=1; for(i=0;i<n;i++) scanf("%d",&@@ input@@ [i]); state@@ [0]=1; for(j=1;j<n;j++) { int@@ min@@ =1; for(i=0;i<j;i++) { if(@@ input@@ [i]>=@@ input@@ [j]) { if(@@ state@@ [i]@@ +1>@@ min) min=@@ state@@ [i]@@ +1; } } state@@ [j]=@@ min@@ ; } intsum=0; for(i=0;i<n;i++) { if(@@ state@@ [i]>@@ sum) sum=@@ state@@ [i]; } printf("%d\n",sum); return0; }  
c -1
h -1
0

intmain() { intnum[@@ 15@@ ][@@ 15@@ ]={0},@@ doub@@ [@@ 15@@ ]={0},@@ i,j,k,@@ w@@ [@@ 15@@ ]={0},@@ row; for(i=0;i<@@ 15;i++) { for(j=0;j<@@ 20@@ ;j++) { scanf("%d",&@@ num@@ [i][j]); if(num@@ [i][j]@@ ==-1) break; if(num@@ [i][j]==0) { w@@ [i]=@@ j; break; } } if(num@@ [i][0]@@ ==-1) { row@@ =i; break; } } for(i=0;i<row;i++) { for(j=0;j<@@ w@@ [i];j++) { for(k=0;k<@@ w@@ [i]@@ ;k++) { if(num@@ [i]@@ [k]==2*@@ num@@ [i][j]@@ ) { doub@@ [i]++; } } } printf("%d\n",@@ doub@@ [i]); } return0; }  
c -1
h -1
intmain() { intn,i,j,a[@@ 101][@@ 101],@@ p,q,@@ l,@@ m; cin>>n; for(i=1;i<=n;i++) { for(j=1;j<=n;j++) { cin>>a[i][j]; if(a[i][j]==0) { p@@ =i;@@ q@@ =j; } } } for(i=1;i<=@@ p@@ ;i++) { for(j=1;j<=@@ q@@ ;j++) { if(a[i][j]==0) { l@@ =i@@ ;m@@ =j@@ ;i@@ =p; break; } } } j@@ =(@@ p@@ -l@@ -1)*(@@ q@@ -@@ m-1@@ ); cout<<@@ j; return0; }  
c -1
h -1
0

intmain(){ doublea,@@ y=0,@@ m,n,@@ t; inti,@@ q=0; char@@ dna1@@ [501]; char@@ dna2@@ [501]; scanf("%lf",&a); scanf("%s",@@ dna1); scanf("%s",@@ dna2); m=strlen(@@ dna1); n=strlen(@@ dna2); if(m==@@ n){ for(i=0;i<m;i++){ if((@@ dna1@@ [i]=='A'||@@ dna1@@ [i]=='T'||@@ dna1@@ [i]=='C'||@@ dna1@@ [i]=='@@ G')&&(@@ dna2@@ [i]=='A'||@@ dna2@@ [i]=='T'||@@ dna2@@ [i]=='C'||@@ dna2@@ [i]=='@@ G')){ }else{ q=1; break; } } for(i=0;i<m;i++){ if(q@@ ==1){ break; }elseif(@@ dna1@@ [i]==@@ dna2@@ [i]){ y++; }elseif(@@ dna1@@ [i]!=@@ dna2@@ [i]){ } } t=@@ y@@ /@@ m; }@@ elseif(m@@ !=@@ n){ q=1; } if((@@ t@@ >=@@ a@@ &&@@ a@@ !=0&&@@ q@@ ==0)||(@@ q@@ ==0&&@@ t@@ >@@ a@@ &&@@ a@@ ==0)@@ ){ printf("yes"); }elseif(@@ (@@ t@@ <a@@ )&&(@@ a@@ !=0)&&(@@ q@@ ==0)||(@@ (@@ q@@ ==0)&&(@@ t@@ ==0)&&(@@ a@@ ==0)@@ )){ printf("no"); }elseif(@@ q@@ ==1){ printf("error"); } return0; }  
c -1
h -1
intmain() { intn,a[@@ 1000][1000]; inti,j,@@ m=0,@@ i1@@ ,@@ i2@@ ,@@ j1@@ ,@@ j2@@ ; scanf("%d",&n); for(i=0;i<n;i++){ for(j=0;j<n;j++){ scanf("%d",&a[i][j]); if(a[i][j]@@ ==0)@@ m@@ ++,@@ i2@@ =@@ i,@@ j2@@ =j; if(m@@ ==1)@@ i1@@ =@@ i,@@ j1@@ =j; } } intnum@@ =(@@ i2@@ -@@ i1@@ -1)*(@@ j2@@ -@@ j1@@ -1); printf("%d",@@ num); return0; }  
c -1
h -1
0

intf(int@@ c@@ ,int@@ t); voidmain() { intn,@@ c; scanf("%d",&n); for(@@ ;n@@ >0@@ ;n@@ --) { scanf("%d",&@@ c); if(c@@ ==1||@@ c@@ ==@@ 2) printf("@@ 1@@ \n"); else printf("%d\n",@@ f(@@ c,@@ 2)); } } intf(int@@ c@@ ,int@@ t) { intcount@@ =1,i; for(i=@@ t@@ ;i<@@ c@@ ;i++) { if(c@@ %i==0) count+=@@ f(@@ c@@ /i,i); } if(i==@@ c)@@ returncount; elsereturn@@ 0@@ ; }  
c -1
h -1
intmain(){ intn; cin>>n; inta[n]; for(int@@ i1@@ =0;@@ i1@@ <n;@@ i1@@ ++) cin>>@@ a[@@ i1@@ ]; intj=0; for(int@@ i1@@ =0;@@ i1@@ <n;@@ i1@@ ++){ j=@@ i1@@ +1; for(int@@ i2@@ =@@ i1@@ +1;@@ i2@@ <n;@@ i2@@ ++) { if(a[@@ i2@@ ]!=@@ a[@@ i1@@ ]) {@@ a[j]=@@ a[@@ i2@@ ]@@ ;j++@@ ;} } n@@ =j; } for(int@@ i1@@ =0;@@ i1@@ <n;@@ i1@@ ++){ cout<<a[@@ i1@@ ]; if(@@ i1@@ !=@@ n-1) cout<<"@@ "; } return0; }  
c -1
h -1
0

struct@@ worker { int@@ nm@@ ; char@@ name1@@ [26]; struct@@ worker@@ *next; }; struct@@ zuozhe { char@@ nam@@ ; int@@ counts@@ ; int@@ name@@ [1000]; struct@@ zuozhe@@ *next; }; struct@@ worker@@ *@@ creat1@@ (intn) { struct@@ worker@@ *head,*p1,*p2; inti; head=(struct@@ worker@@ *)malloc(sizeof(struct@@ worker@@ )); p1=@@ p2=head; for(i=0;i<n;i++) { p2=p1; p1=(struct@@ worker@@ *)malloc(sizeof(struct@@ worker@@ )); scanf("%d%s",&@@ p2->@@ nm@@ ,@@ p2->@@ name1@@ ); p2->next=p1; } p2->next@@ =0; returnhead; } struct@@ zuozhe@@ *@@ creat2@@ () { struct@@ zuozhe@@ *head,*p1,*p2; inti; head=(struct@@ zuozhe@@ *)malloc(sizeof(struct@@ zuozhe@@ )); p1=@@ p2=head; for(i=0;i<26;i++) { p2=p1; p1=(struct@@ zuozhe@@ *)malloc(sizeof(struct@@ zuozhe@@ )); p2->@@ counts@@ =0; p2->@@ nam@@ ='A'+i; p2->next=p1; } p2->next@@ =0; returnhead; } voidmain() { int@@ big@@ =0; char@@ zz@@ ; inti,j; charc; intm,n; inta[@@ 26]={0}; struct@@ worker@@ *@@ head1@@ ,*@@ p1,*p2; struct@@ zuozhe@@ *@@ head2@@ ,*@@ q1@@ ,*@@ q2@@ ; scanf("%d",&n); head1@@ =@@ creat1@@ (n); p1=@@ p2=@@ head1@@ ; head2@@ =@@ creat2@@ (); q1=@@ q2@@ =@@ head2@@ ; while(p1@@ !=0) { i=0; while(@@ p1->@@ name1@@ [i]@@ !='\0') { q1=@@ head2@@ ; while(1) { if(@@ q1->@@ nam@@ ==@@ p1->@@ name1@@ [i]) { q1->@@ name@@ [@@ q1->@@ counts@@ ]=@@ p1->@@ nm@@ ; q1->@@ counts@@ ++; i++; break; } q1=@@ q1@@ ->next; } } p1=p1->next; } q1=@@ head2@@ ; while(@@ q1@@ !=0) { if(@@ q1->@@ counts@@ >@@ big@@ ) { zz@@ =@@ q1->@@ nam@@ ; big@@ =@@ q1->@@ counts@@ ; } q1=@@ q1@@ ->next; } q1=@@ head2@@ ; while(1) { if(@@ q1->@@ nam@@ ==@@ zz@@ ) { printf("%c\n%d\n",@@ q1->@@ nam@@ ,@@ q1->@@ counts@@ ); for(i=0;i<@@ q1->@@ counts@@ ;i++) { printf("%d\n",@@ q1->@@ name@@ [i]); } break; } q1=@@ q1@@ ->next; } }  
c -1
h -1
intmain() { intk,@@ num=0; cin>>k; introw,col; for(@@ num@@ =0;@@ num@@ <k;@@ num@@ ++) { cin>>row>>col; int@@ data@@ [@@ row][col]; int(*p)@@ [@@ col@@ ]=@@ data@@ ; inti,j,@@ sum=0; for(i=0;i<row;i++) { for(j=0;j<col;j++) { cin>>@@ *(*(p+i)+j); } } for(i=1;i<@@ row-1;i++) { sum=sum+*(@@ *(p+i)@@ )@@ +*(@@ *(p+i)@@ +col@@ -1); } for(i=1;i<@@ col@@ -1;i++) { sum=sum+*(@@ *p@@ +i)@@ +*(@@ *(p+@@ row-1)@@ +i); } sum+=*(@@ *p@@ )@@ +*(@@ *p@@ +col@@ -1)@@ +*(@@ *(p+@@ row-1)@@ )@@ +*(@@ *(p+@@ row-1)@@ +col@@ -1); cout<<sum<<endl; } return0; }  
c -1
h -1
0

int@@ total=0; int@@ divide@@ (int@@ k,@@ intnumber@@ ) { if(@@ number@@ ==1){@@ total@@ ++;@@ return0;} inti; for(i=k@@ ;i<=@@ number@@ ;i++) { if(@@ number@@ %i==0) divide@@ (i,@@ number@@ /i); }@@ return0; } intmain() { inti,n; cin>>n; intnum[@@ n]; for(i=0;i<n;i++) cin>>num[i]; for(i=0;i<n;i++) {@@ total=0; divide@@ (2,@@ num[i]); cout<<@@ total@@ <<endl; } cin>>n; return0; }  
c -1
h -1
intmain(){ intn,i,j; cin>>n; structstudent{ intnumber; int@@ maths; intchinese; intsum; }; structstudent@@ stu[@@ n@@ ],@@ t; for(i=0;i<n;i++) {@@ cin>>@@ stu[i].@@ number@@ >>stu[i].@@ chinese@@ >>stu[i].@@ maths; stu[i].sum=stu[i].@@ chinese+@@ stu[i].@@ maths; } for(i=0;i<3;i++) for(j=@@ n-2@@ ;j>=i@@ ;j--) if(stu[j].@@ sum<@@ stu[j+1].@@ sum) {t=@@ stu@@ [j]; stu@@ [j]=@@ stu@@ [j+1]; stu@@ [j+1]=t; } if(n@@ >=@@ 3) for(i=0;i<3;i++) cout<<@@ stu[i].@@ number@@ <<''<<@@ stu[i].@@ sum@@ <<endl; else for(i=0;i<n;i++) cout<<@@ stu[i].@@ number@@ <<''<<@@ stu[i].@@ sum@@ <<endl; return0; }  
c -1
h -1
0

voidmain() { void@@ sum@@ (); intk,@@ i; scanf("%d",&k); for(i=0;i<k;i++){ sum@@ (); } } void@@ sum@@ () { intm,n,i,j,@@ s=0,@@ a[@@ 101][101]; scanf("%d%d",&m,&n); for(i=0;i<m;i++){ for(j=0;j<n;j++) scanf("%d",&a[i][j]); } for(i=0;i<m;i++) s=s+@@ a[i][0]; for(i=0;i<m;i++) s=s+@@ a[i][n-1]; for(i=1;i<n-1;i++) s=s+@@ a[0][i]; for(i=1;i<n-1;i++) s=s+@@ a[m-1]@@ [i]; printf("%d\n",s); }  
c -1
h -1
struct@@ people { charID[10]; intage; }; voidmain() { intn,i,@@ t; struct@@ people@@ peo@@ [100]; struct@@ people@@ old@@ [100]; void@@ bubble@@ (struct@@ people@@ a[100@@ ],int@@ n); scanf("%d",&n); for(i=0;i<n;i++) { scanf("%s",@@ peo@@ [i].ID); scanf("%d",&@@ peo@@ [i].age); } t=0; for(i=0;i<n;i++) { if(@@ peo@@ [i].age>=60) { strcpy(old@@ [t@@ ].ID,@@ peo@@ [i].ID); old@@ [t@@ ].age=@@ peo@@ [i].age; t++; } else continue; } bubble@@ (@@ old@@ ,@@ t); for(i=0;i<t;i++) printf("%s\n",old@@ [i].ID); for(i=0;i<n;i++) { if(@@ peo@@ [i].age<60) printf("%s\n",@@ peo@@ [i].ID); } } void@@ bubble@@ (struct@@ people@@ a[100@@ ],int@@ n) { inti,j; struct@@ people@@ t; for(i=1;i<n;i++) for(j=0;j<n-i;j++) { if(a[j]@@ .@@ age@@ <@@ a[j+1@@ ].age) { t=a[j]; a[j]=a[j+1]; a[j+1]=t; } } }  
c -1
h -1
0

intmain() { inti,j,n,@@ x[@@ 15],@@ count; while(1) { count=0; for(n@@ =0;@@ ;n++) { cin>>@@ x[@@ n]; if(x@@ [n@@ ]<=@@ 0@@ )break; } if(x@@ [n@@ ]==@@ -1)break; for(i=0;i<n;i++) for(j=0;j<n;j++) { if(j==@@ i)@@ continue; if(x@@ [j]==2*@@ x@@ [i])@@ count++; }; cout<<count<<endl; } return0; }  
c -1
h -1
voidmain() { intn,@@ m@@ [100][100],@@ i,j,@@ a=0,b=0,@@ c=0,@@ d=0,@@ x,y,@@ s; scanf("%d",&n); for(i=0;i<n;i++) for(j=0;j<n;j++) scanf("%d",&@@ m@@ [i][j]); for(i=0;i<n;i++) for(j=0;j<n;j++) { if(j@@ ==0&&@@ m@@ [i][j]==0) a@@ =j; elseif(@@ j@@ !=0&&@@ m@@ [i][j]==0&&@@ m[i]@@ [j-1@@ ]==255@@ &&m@@ [i]@@ [j+1@@ ]==0) a@@ =j; if(j==@@ n-1@@ &&m@@ [i][j]==0) b=j; elseif(@@ j@@ !=@@ n-1@@ &&m@@ [i][j]==0&&@@ m[i]@@ [j+1@@ ]==255@@ &&m@@ [i]@@ [j-1]@@ ==0) b=j; if(i@@ ==0&&@@ m@@ [i][j]==0) c=i; elseif(@@ i@@ !=0&&@@ m@@ [i][j]==0&&@@ m@@ [i-1]@@ [j]==@@ 255@@ &&m@@ [i+1][j]@@ ==0) c=i; if(i==@@ n-1@@ &&m@@ [i][j]==0) d@@ =i; elseif(@@ i@@ !=@@ n-1@@ &&m@@ [i][j]==0&&@@ m@@ [i+1]@@ [j]==@@ 255@@ &&m@@ [i-1][j]@@ ==0) d@@ =i; } x=@@ b-@@ a@@ -1; y=@@ d@@ -c@@ -1; s=@@ x@@ *@@ y; printf("%d",s); }  
c -1
h -1
0

intmain() { introw,col,@@ i,j,@@ m,@@ p; scanf("%d%d",&row,&col); inta[100][100]; for(i=0;i<row;i++) { for(j=0;j<col;j++) { scanf("%d",&a[i][j]); } scanf("\n@@ "); } for(m=0;m@@ <=col@@ +row@@ -2@@ ;m++) { if(m@@ <col) { for(p=0;p@@ <=row-1@@ &&p@@ <=@@ m@@ ;p++) { printf("%d\n",@@ a[p@@ ][m@@ -@@ p@@ ]); } } if(m@@ >=@@ col) { for(p=@@ m@@ -col@@ +1@@ ;p<=@@ m@@ &&p@@ <=row-1@@ ;p++) { printf("%d\n",@@ a[p@@ ][m@@ -@@ p@@ ]); } } } return0; }  
c -1
h -1
voidmain() { intm,n,@@ a[@@ 20000],@@ i,j; j=0; scanf("%d",&n); for(i=0;i<n;i++) scanf("%d",&a[i]); printf("%d",a[0]); m=1; if(n@@ >1) { do { for(i=@@ m-1@@ ;i>=0;i--) { if(a[m@@ ]==@@ a[i]) j=j+1; } if(j@@ ==0) printf("%d",@@ a[m@@ ]); j=0; m=m+1; }while(@@ m@@ <@@ n); } printf("\n"); }  
c -1
h -1
0

voidmain() { intn,k; int*p; scanf("%d%d",&n,&k); p=@@ (int*)malloc(sizeof(int)*n); inti; for(i=0;i<n;i++) { scanf("%d",@@ (p@@ +i)); } int@@ judge@@ =0; intj; for(i=0;i<n-1;i++) { for(j=i+1;j<n;j++) { if(@@ *(p+i)@@ +*@@ (p@@ +j)@@ ==k) { judge@@ =1; break; } } if(@@ judge@@ ) break; } if(@@ judge@@ ) printf("yes"); else printf("no"); }  
c -1
h -1
structstudent { intid; intc; intm; intt; }a[@@ SIZE@@ ]; int@@ cmp@@ (constvoid*@@ p1,@@ constvoid*@@ p2@@ ) { structstudent*@@ p3@@ =(structstudent@@ *)@@ p1; structstudent*@@ p4@@ =(structstudent@@ *)@@ p2; return@@ -@@ p3->@@ t@@ +@@ p4@@ ->@@ t; } intmain(void) { intn,i; scanf("%d",&n); for(i=0;i<n;i++) {@@ scanf("%d%d%d",&a[i].@@ id,&@@ a[i].@@ c@@ ,&a[i].@@ m@@ );@@ a[i].@@ t=@@ a[i].@@ m+@@ a[i].@@ c@@ ;} qsort@@ (a,n,@@ sizeof(@@ a[0]@@ ),@@ cmp@@ ); for(i=0;i<3;i++) printf("%d%d\n",@@ a[i].@@ id,@@ a[i].@@ c+@@ a[i].@@ m); return0; }  
c -1
h -1
0

intmain(){ intarray[@@ 120@@ ][@@ 120@@ ]; introw,col,@@ i,j,@@ sum; cin>>row>>col; for(i=0;i<row;i++) for(j=0;j<col;j++) cin>>array[i][j]; i=0; j=0; while(i@@ <row@@ &&j@@ <col@@ ){ cout<<array@@ [i][j]<<endl; sum@@ =i@@ +j@@ ; i++; j--; if(i==@@ row@@ ||j==@@ -1){ sum=sum+1; if(i@@ =@@ row@@ ){ i=0; j=@@ sum@@ -@@ i; if(j@@ >=@@ col@@ ){ j=col-1; i=@@ sum@@ -j@@ ; } }else{ j=col-1; i=@@ sum@@ -j@@ ; if(i<@@ 0@@ ){ i=0; j=@@ sum@@ -@@ i; } } } } return0; }  
c -1
h -1
intmain() { int@@ row@@ =0,@@ col@@ =0; cin>>row>>col; int@@ array@@ [100][100@@ ]={0}; inti,j,n; for(i=0;i<row;i++) { for(j=0;j<col;j++) { cin>>array[i][j]; } } for(n=0;n@@ <row@@ +col@@ ;n++) { for(i=0,j@@ =@@ n-1@@ ;i<@@ n,@@ j@@ >=0@@ ;i++,j--) { if(i@@ <row@@ &&j@@ <col) { cout<<array@@ [i][j]<<endl; } } } return0; }  
c -1
h -1
1


intmain() { intn,i,k,@@ sum=0; scanf("%d",&n); intx[@@ n]; for(i=0;i<n;i++){ scanf("%d",&@@ x[i]); for(k=0;k<@@ i@@ ;k++){ if(x@@ [k]==@@ x@@ [i]){ i--; n--; break; } } } printf("%d",@@ x@@ [0]); for(i=1;i<n;i++){ printf("%d",@@ x[i]); } return0; }  
c -1
h -1
intmain() { intn,i,j,a[@@ 1000][1000],@@ m=0,@@ p,q; scanf("%d",&n); for(i=1;i<=n;i++) { for(j=1;j<=n;j++) { scanf("%d",&a[i][j]); } } for(i=1;i<=n;i++) { for(j=1;j<=n;j++) { if(a[i][j]==0&&@@ a[i]@@ [j+1]@@ !=0) break; } p=@@ j; for(j=n@@ ;j>=0;j--) { if(a[i][j]==0&&@@ a[i][j-1]@@ !=0) break; } q@@ =j; if(q@@ >@@ p) m=m+@@ q@@ -@@ p@@ -1; } printf("%d\n",m); return0; }  
c -1
h -1
0

intmain(){ intk,@@ i,j; intn,@@ row,col; int@@ shuzu@@ [@@ mx@@ ][@@ mx@@ ],@@ cc@@ [@@ 1000@@ ]={@@ 99@@ }; int@@ result=0; scanf("%d",&n); for(k=0;k<n;k++){ scanf("%d%d",&row,&col); for(i=0;i<row;i++){ for(j=0;j<col;j++){ scanf("%d",&@@ shuzu@@ [i][j]); } } for(i=0;i<row;i++){ for(j=0;j<col;j++){ if(i@@ ==0){@@ result+=@@ shuzu@@ [i][j]@@ ;} elseif(i==@@ (@@ row-1)@@ ){@@ result+=@@ shuzu@@ [i][j]@@ ;} else{@@ if(j@@ ==0){@@ result+=@@ shuzu@@ [i][j]@@ ;} elseif(@@ j==@@ (@@ col@@ -1)@@ ){@@ result+=@@ shuzu@@ [i][j]@@ ;} } } } cc@@ [k]=@@ result; result=0; } for(k=0;k<n;k++){ printf("%d\n",@@ cc@@ [k]); } return0; }  
c -1
h -1
intmain(intargc,char*argv[]) { intm,@@ n[@@ 1000][1000],@@ ai@@ ,@@ aj@@ ,@@ zi@@ ,@@ zj@@ ,i,j,@@ s; scanf("%d",&m); for(i=0;i<m;i++) { for(j=0;j<m;j++) { scanf("%d",&@@ n@@ [i][j]); if(n@@ [i][j]==0) { zi@@ =i;@@ zj@@ =j; } } } for(i=@@ (m@@ -1)@@ ;i>=0;i--) { for(j@@ =(m@@ -1)@@ ;j>=0;j--) { if(n@@ [i][j]==0) { ai@@ =i;@@ aj@@ =j; } } } s=(@@ zj@@ -@@ aj@@ -1)*(@@ zi@@ -@@ ai@@ -1); printf("%d\n",s); return0; }  
c -1
h -1
0

intmain() {@@ printf("@@ 3@@ \n@@ ");@@ printf("@@ 2@@ \n@@ ");@@ printf("@@ 0@@ \n@@ ");@@ printf("@@ 0@@ \n@@ ");@@ printf("@@ 1@@ \n@@ ");@@ printf("@@ 1@@ \n@@ ");@@ printf("@@ 0@@ \n@@ ");@@ printf("@@ 2@@ \n@@ ");@@ printf("@@ 2@@ \n@@ ");@@ printf("@@ 6@@ \n@@ ");@@ printf("@@ 11@@ \n@@ ");@@ return0;}  
c -1
h -1
voidmain() { struct@@ s { inta; intb; intc; int@@ d; struct@@ s@@ *next; }; struct@@ s@@ *@@ p1,*p2,*head; inti,j,k,@@ m,n,@@ t; scanf("%d",&n); p1=p2=(struct@@ s@@ *)malloc(sizeof(struct@@ s@@ )); head=p1; scanf("%d%d%d",&p1->@@ a@@ ,&p1->@@ b@@ ,&p1->@@ c); for(i=0;i<n-1;i++) { p1=(struct@@ s@@ *)malloc(sizeof(struct@@ s@@ )); p2->next=p1; p2=p1; scanf("%d%d%d",&p1->@@ a@@ ,&p1->@@ b@@ ,&p1->@@ c); } p2->next@@ =0; p1=@@ p2=head; for(i=0;i<n;i++) { p1->@@ d=@@ p1->@@ b+@@ p1->@@ c; p1=p1->next; } p1=head; p2=p1->next; for(j=0;j<3;j++) { p1=@@ head;@@ p2=p1->next; for(i=0;i<n@@ -2;i++) { if(p1->@@ d@@ <@@ p2->@@ d) { t=@@ p1->@@ d; p1->@@ d=@@ p2->@@ d; p2->@@ d=@@ t; k=@@ p1->@@ a; p1->@@ a=@@ p2->@@ a; p2->@@ a=@@ k; } p2=p2->next; } p1=head; printf("%d%d\n",@@ p1->@@ a,@@ p1->@@ d); p1->@@ d=0; } }  
c -1
h -1
0

intmain() { intsz[@@ 2000]; intn,k,@@ s,@@ b; b=0; scanf("%d%d",&n,&k); for(inti=0;i<n;i++) { scanf("%d",&sz[i]); if(i@@ >=1@@ &&i@@ <n) for(int@@ a@@ =0;a@@ <i@@ ;a@@ ++) { s=@@ sz[i]@@ +@@ sz[a@@ ]; if(s@@ ==k) b++; } } if(b@@ !=0) printf("yes"); elseif(@@ b@@ ==0) printf("no"); return0; }  
c -1
h -1
intmain(){ int@@ col,@@ row,@@ i,j,k; cin>>row>>col; inta[@@ row][col]; for(i=0;i<row;i++) for(j=0;j<col;j++) cin>>a[i][j]; for(k=0;k<col@@ ;k++) for(i=0,j@@ =@@ k;@@ (i@@ <row@@ )&&(@@ j@@ >=0@@ )@@ ;i++,j--) cout<<a[i][j]<<endl; for(k=1;k<@@ row@@ ;k++) for(i=@@ k,@@ j=@@ col@@ -1;@@ (i@@ <row@@ )&&(@@ j@@ >=0@@ )@@ ;i++,j--) cout<<a[i][j]<<endl; return0; }  
c -1
h -1
0

intmain() { int@@ side_sum@@ (int*p@@ ); intk; int*p; cin>>k; p=@@ &@@ k; side_sum@@ (p); return0; } int@@ side_sum@@ (int*p@@ ) { intk,m,n,i,j,@@ l,@@ sum=0; inta[100][100]; k=@@ *p; for(i=0;i<k;i++) { sum=0; cin>>m>>n; for(j=0;j<m;j++) for(l=0;l<n;l++) { cin>>a[j]@@ [l]; if(j@@ ==0||j==@@ m-1) sum+=@@ a[j]@@ [l]; else if(l@@ ==0||@@ l@@ ==@@ n-1) sum+=@@ a[j]@@ [l]; } cout<<sum<<endl; } return0; }  
c -1
h -1
voidmain() { intn,a[@@ 20001@@ ],@@ t,@@ i,@@ m; scanf("%d",&n); for(i=0;i<n;i++) { scanf("%d",&a[i]); } for(i=0;i<n;i++) { m=1; for(t=0;t@@ <i@@ ;t++) { if(a[i]==@@ a[t@@ ]) { m=0; } } if(m==1) { if(i@@ >0) { printf(""); } printf("%d",a[i]); } } }  
c -1
h -1
0

intmain() { chars[@@ 300],@@ w@@ [300],@@ r@@ [300],@@ d[@@ 300]; inti,j,@@ l,@@ h; scanf("%s%s%s",@@ s,@@ w,@@ r); l@@ =strlen(s); h@@ =strlen(@@ w); for(i=0;i<=@@ l@@ -@@ h@@ ;i++) { for(j=0;j<@@ h@@ ;j++) { d@@ [j]=@@ s[i+j@@ ]; } d[@@ h@@ ]='\0'; if(strcmp(@@ d,@@ w@@ )@@ ==0)break; } if(i==@@ l@@ -@@ h@@ +1)@@ printf("%s",s); else { for(j=i;j<i+@@ h@@ ;j++) { s[j]=@@ r@@ [j-i@@ ]; } printf("%s",s); } return0; }  
c -1
h -1
intmain() { inta[16],@@ i,@@ b,@@ j,k,@@ m; a[1]@@ =1; while(@@ a[1]@@ !=-1) { i=1; m=0; while(cin>>@@ b) { a[i]=@@ b; if(a[i]@@ ==0||@@ a[i]@@ ==-1) break; i=i+1; } for(j=1;j<=@@ i-1;j++) { for(k=1;k<=@@ i-1;k++) { if(a[j]==2*@@ a[k]) m++; } } if(a[i]@@ !=-1) cout<<@@ m@@ <<endl; } return0; }  
c -1
h -1
0

intmain() {@@ intn,k; inta[@@ 1000],b[1000]; inti,j; scanf("%d%d",&n,&k); scanf("%d",&a[0]); for(i=1;i<n;i++) {@@ scanf("%d",&a[i]); } for(i=0;i<n;i++) {@@ for(j=i+1;j<n;j++) if((@@ a[i]+@@ a[j]@@ )==@@ k) {@@ printf("yes"); break;} if((@@ a[i]+@@ a[j]@@ )==@@ k) {@@ break; } } if((@@ a[i]+@@ a[j])@@ !=@@ k) {@@ printf("no"); } return0; }  
c -1
h -1
structstudent { intnum; int@@ chn@@ ; intmath; intsum; }stu[100000]; main() { intn,i; scanf("%d",&n); for(i=0;i<n;i++) {@@ scanf("%d%d%d",&stu[i].num,&stu[i].@@ math@@ ,&stu[i].@@ chn@@ ); stu[i].sum=stu[i].@@ math@@ +stu[i].@@ chn@@ ; } intj,@@ sum[@@ 100000],@@ order@@ [4@@ ]={@@ n-1@@ },@@ t,@@ m; structstudent@@ temp; for(j=n-1@@ ;j@@ >=@@ n-@@ 3@@ ;j--) { for(i=0;i<j;i++) {if(@@ stu[i].@@ sum@@ >=@@ stu[i+1].@@ sum) { temp=@@ stu@@ [i+1]; stu@@ [i+1]=@@ stu[i]; stu[i]=@@ temp; } } } printf("%d%d\n",stu[@@ n-1@@ ].num,stu[@@ n-1@@ ].sum); printf("%d%d\n",stu[@@ n-2@@ ].num,stu[@@ n-2@@ ].sum); printf("%d%d\n",stu[@@ n-@@ 3].@@ num,@@ stu[@@ n-@@ 3].@@ sum); getchar(); getchar(); }  
c -1
h -1
0

intmain() { double@@ d; scanf("%lf",&@@ d); chars@@ [100]; char@@ u@@ [100]; scanf("%s%s",@@ s,@@ u@@ ); intf@@ =0; int@@ t=0,@@ i,@@ r=0; for(i=0;s[i]@@ !='\0';i++) { t++; } for(i=0;@@ u@@ [i]!='\0';i++) { r++; } if(r@@ !=@@ t) { printf("error\n"); return0; } else {@@ for(i=0;s[i]@@ !='\0';i++) { if(s@@ [i]!='A'&&@@ s@@ [i]!='T'&&@@ s@@ [i]!='C'&&@@ s@@ [i]!='G') { printf("error\n"); return0; } elseif(@@ u@@ [i]!='A'&&@@ u@@ [i]!='T'&&@@ u@@ [i]!='C'&&@@ u@@ [i]!='G') { printf("error\n"); return0; } elseif(@@ s@@ [i]==@@ u@@ [i]) { f@@ ++; } } if(f@@ *1.0/@@ t@@ >=@@ d) { printf("yes\n"); return0; } else { printf("no\n"); return0; } } return0; }  
c -1
h -1
voidmain() { int@@ lenstr@@ ,@@ lensub@@ ,@@ lenrpl@@ ,@@ i,j; char@@ temp@@ [260],@@ str@@ [260],@@ sub@@ [260],@@ rpl@@ [260@@ ]; scanf("%s@@ %s%s",&@@ str@@ ,&@@ sub@@ ,&@@ rpl@@ ); lenstr@@ =strlen(@@ str); lensub@@ =strlen(@@ sub); lenrpl@@ =strlen(@@ rpl@@ ); str@@ [@@ lenstr@@ ]='\0'; sub@@ [@@ lensub@@ ]='\0'; rpl@@ [@@ lenrpl@@ ]='\0'; for(i=0;i<@@ lenstr@@ -@@ lensub@@ +1;i++) { for(j=0;j<@@ lensub@@ ;j++) temp@@ [j]=@@ str@@ [i+j@@ ]; temp@@ [j]@@ ='\0'; if(strcmp(@@ temp,@@ sub)@@ ==0) break; } if(i!=@@ lenstr@@ -@@ lensub@@ +1) { for(j=0;j<@@ lenrpl@@ ;j++) str@@ [i+j@@ ]=@@ rpl@@ [j]; } printf("%s\n",@@ str); }  
c -1
h -1
0

int@@ str1@@ [50@@ ]={@@ 1@@ },@@ str2@@ [50@@ ]={@@ 1@@ }; int@@ length1@@ ,@@ length2@@ ; void@@ input_string@@ (void) { cin>>@@ length1@@ >>@@ length2@@ ; for(inti=0;i<@@ length1@@ ;i++) cin>>@@ str1@@ [i]; for(inti=0;i<@@ length2@@ ;i++) cin>>@@ str2@@ [i]; } void@@ rank_string@@ (void) { inttemp; for(inti=0;i<@@ length1@@ -1;i++) for(intj=i+1@@ ;j<@@ length1@@ ;j++) if(@@ str1@@ [i]>@@ str1@@ [j]) { temp=@@ str1@@ [i]; str1@@ [i]=@@ str1@@ [j]; str1@@ [j]=temp; } for(inti=0;i<@@ length2@@ -1;i++) for(intj=i+1@@ ;j<@@ length2@@ ;j++) if(@@ str2@@ [i]>@@ str2@@ [j]) { temp=@@ str2@@ [i]; str2@@ [i]=@@ str2@@ [j]; str2@@ [j]=temp; } } void@@ combine_string@@ (void) { for(inti=@@ length1@@ ;i<@@ length1@@ +@@ length2@@ ;i++) str1@@ [i]=@@ str2@@ [i-@@ length1@@ ]; } void@@ output_string@@ (void) { cout<<@@ str1@@ [0]; for(inti=1;i<@@ length1@@ +@@ length2@@ ;i++) cout<<'@@ '@@ <<@@ str1@@ [i]; } intmain() { input_string@@ (); rank_string@@ (); combine_string@@ (); output_string@@ (); return0; }  
c -1
h -1
struct@@ person@@ { charstr@@ [10]; intage; }@@ per@@ [100],@@ per1@@ [100],@@ per2@@ [100]; intmain(intargc,char*argv[]) { intn,i,j=0,@@ k=0,@@ x=0,@@ t; char@@ e@@ [10]; scanf("%d",&n); for(i=0;i<n;i++){ scanf("%s%d",@@ per@@ [i].@@ str@@ ,&@@ per@@ [i].age); if(@@ per@@ [i].age>=60){ strcpy(@@ per1@@ [j].@@ str,@@ per@@ [i].@@ str); per1@@ [j].age@@ =@@ per@@ [i].age; j++; } else{ strcpy(@@ per2@@ [k].@@ str,@@ per@@ [i].@@ str); per2@@ [k@@ ].age=@@ per@@ [i].age; k++; } } for(x=0;x@@ <j@@ ;x@@ ++){ for(i=0;i<j@@ -x@@ ;i++){ if(@@ per1@@ [i].age@@ <@@ per1@@ [i+1@@ ].age){ strcpy(@@ e,@@ per1@@ [i].@@ str); strcpy(@@ per1@@ [i].@@ str,@@ per1@@ [i+1].@@ str); strcpy(@@ per1@@ [i+1].@@ str,@@ e); t=@@ per1@@ [i].age; per1@@ [i].age@@ =@@ per1@@ [i+1].@@ age; per1@@ [i+1@@ ].age=@@ t; } } } for(i=0;i<j@@ ;i++){ printf("%s\n",@@ per1@@ [i].@@ str); } for(i=0;i<k;i++){ printf("%s\n",@@ per2@@ [i].@@ str); } return0; }  
c -1
h -1
0

intmain(){ inta[@@ 200][@@ 200]; inti,j,@@ u@@ ,@@ t=0; introw,col; scanf("%d%d",&row,&col); for(i=0;i<row;i++){ for(j=0;j<col;j++){ scanf("%d",&a[i][j]); } } for(j=0;j<col;j++){ for(@@ u@@ =0;@@ ;@@ u@@ ++){ if(@@ u@@ >=@@ row@@ ||j@@ -@@ u@@ <0@@ )break; printf("%d\n",a[@@ u@@ ]@@ [j@@ -@@ u@@ ]); } } for(j=1;j<@@ row@@ ;j++){ for(@@ u@@ =1;@@ ;@@ u@@ ++){ if(@@ u@@ +j@@ -1@@ >=@@ row@@ ||@@ col@@ -@@ u@@ <0@@ )break; printf("%d\n",a[@@ u@@ +j@@ -1@@ ][col@@ -@@ u@@ ]); } } return0; }  
c -1
h -1
intmain(){ doublen; scanf("%lf\n",&@@ n); chara[501],b[501]; scanf("%s@@ \n",&@@ a); scanf("%s",&@@ b); int@@ la@@ =strlen(@@ a)@@ ,lb@@ =strlen(@@ b@@ ),@@ i; int@@ s=0;@@ double@@ e; if(@@ la@@ !=@@ lb@@ ){ printf("error");} else{ for(i=0;i<@@ la@@ ;i++){ if(a[i]!='A'&&a[i]!='T'&&a[i]!='C'&&a[i]!='@@ G'||@@ b[i]!='A'&&b[i]!='T'&&b[i]!='C'&&b[i]!='@@ G'){ printf("error"); break; } else{ if(a[i]==b[i]){ s=s@@ +1;} if(i==@@ la@@ -1){ e@@ =1.0*@@ s/@@ la@@ ; if(e@@ >n){ printf("yes");} else{ printf("no");} } } } } return0; }  
c -1
h -1
0

structbook { charwriter@@ [26]; intnum; structbook*next; }; structbook*@@ creat@@ () { structbook@@ *head,*p1,*p2; inti,@@ m; scanf("%d",&m); p1=p2=(struct@@ book@@ *)malloc(sizeof(structbook)); head=NULL; for(i=0;i<m;i++) { if(i==0)@@ head=p1; elsep2->next=p1; p2=p1; p1=(structbook@@ *)malloc(sizeof(structbook)); scanf("%d%s",&p1->num,p1->@@ writer); p1->next=NULL; } p2->next=p1; return(head); } voidmain() { intn,a[@@ 26@@ ][@@ 1000@@ ]={0},b[@@ 26]={0},@@ i,@@ max,@@ k; structbook@@ *head,*p; char*@@ q; head=creat(); for(p=head@@ ->next@@ ;p@@ ;@@ p=p->next) { n=strlen(@@ p->@@ writer); for(i=0,@@ q=@@ p->@@ writer@@ ;i<@@ n@@ ;i++,@@ q++) { a[@@ *@@ q@@ -65@@ ][@@ b[@@ *@@ q@@ -65@@ ]@@ ]=@@ p->@@ num; b[@@ *@@ q@@ -65]++; } } max=@@ b[0]; k=0; for(i=0;i<26;i++) { if(b[i]>max) { max=b[i]; k=i; } } printf("%c\n%d\n",@@ k@@ +65@@ ,max); for(i=0;i<@@ max@@ ;i++) printf("%d\n",@@ a[k]@@ [i]); }  
c -1
h -1
intmain() { int@@ a1,a2,@@ b1,@@ b2@@ ; inti,j,n; scanf("%d",&n); intsz[@@ 1000][1000]; for(i=0;i<n;i++){ for(j=0;j<n;j++){ scanf("%d",&sz[i][j]); } } int@@ tag@@ =0; for(i=0;i<n;i++){ for(j=0;j<n;j++){ if(sz@@ [i][j]==0){ a2@@ =i; b2@@ =j; } } } for(i=0;i<n;i++){ for(j=0;j<n;j++){ if(sz@@ [i][j]==0&&@@ tag@@ ==0){ a1@@ =i; b1@@ =j; tag@@ =1; } } } inta,b; a=@@ a2-a1@@ -1; b=@@ b2-b1@@ -1; ints; s=@@ a*@@ b; printf("%d",s); return0; }  
c -1
h -1
0

main() { intn,i,@@ m,@@ j; inta[@@ 25],b[@@ 25]; m=0; scanf("%d",&n); for(i=n-1;i>=0;i--) {@@ scanf("%d",&a[i]); b[i]@@ =1;} for(j=1;j<n;j++) { for(i=0;i<j;i++) { if(a[j]>=@@ a[i]) {if((@@ b[i]@@ +1)@@ >=@@ b[j]) b[j]=@@ b[i]@@ +1;} } } for(i=0;i<n;i++) { if(b[i]@@ >=@@ m) m=@@ b[i]@@ ;} printf("%d",m); }  
c -1
h -1
intmain() { inty,m,d,@@ n=0; scanf("%d%d%d",&y,&m,&d); inta[@@ 12]={31,28,31,30,31,30,31,31,30,31,30,31}; if(y%@@ 4==0&&y%100!=0@@ ||@@ y%400==0) { a[1]=29; if(m==1) n=n+@@ d; else { for(inti=1;i<@@ m;i++) n=n+@@ a[i@@ -1]; n=n+@@ d; } } else { if(m==1) n=n+@@ d; else {@@ for(inti=1;i<@@ m;i++) n=n+@@ a[i@@ -1]; n=n+@@ d; } } printf("%d",n); getchar(); getchar(); }  
c -1
h -1
0

intmain() { inti=0,j=0,@@ k=0; inta[16]; for(;@@ ;i++) { scanf("%d",&a[i]); if(a[i]==0) { printf("%d\n",@@ k); i@@ =-1; k=0; } if(a[0]==-1) break; for(j=0;j<i;j++) if(a[i]==a[j]@@ *2@@ ||@@ a[j]==@@ a[i]@@ *2) k++; } }  
c -1
h -1
intmain() { intn,@@ shu@@ [@@ 1000][1000],@@ i,k,@@ heng@@ =0,@@ s=0,@@ count; scanf("%d",&n); for(i=0;i<n;i++) { for(k=0;k<n;k++) { scanf("%d",&@@ shu@@ [i]@@ [k]); } } for(i=0;i<n;i++) { for(k=0;k<n;k++) { if(@@ shu@@ [i][k]@@ ==0) { heng@@ +=1; } } if(@@ heng@@ !=0) { break; } } for(k=0;k<n;k++) { for(i=0;i<n;i++) { if(@@ shu@@ [i][k]@@ ==0) { s@@ +=1; } } if(s@@ !=0) { break; } } count@@ =(@@ s@@ -2)*(@@ heng@@ -2); printf("%d",@@ count); return0; }  
c -1
h -1
0

voidmain() { intn,k,i,j,@@ a[@@ 10000],@@ s; scanf("%d%d",&n,&k); for(i=0;i<n;i++) scanf("%d",&a[i]); for(i=0;i<n;i++) { s=0; for(j=0;j<n-i;j++) { s=@@ a[i]+a[j]; if(s@@ ==k) { printf("yes\n"); goto@@ mq@@ ; } } } mq@@ : if(s@@ !=@@ k) printf("no\n"); }  
c -1
h -1
intmain() { intn=0,@@ line@@ =0,@@ row@@ =0; inta[@@ 102@@ ][@@ 102@@ ]; cin>>n; for(inti=0;i<n;i++) { cin>>@@ line@@ >>@@ row; for(intj=0;j<@@ line@@ ;j++) { for(intk=0;k<@@ row@@ ;k++) cin>>@@ *(*(a@@ +j)+@@ k); } if(@@ line@@ ==1&&@@ row@@ ==1){@@ cout<<@@ **@@ a@@ <<endl@@ ;@@ continue;} int@@ plus@@ =*@@ *a@@ +*(@@ *@@ a+@@ row-1)@@ +*@@ *(a+@@ line@@ -1)@@ +*(@@ *(a+@@ line@@ -1)@@ +row@@ -1); for(intj=1;j<@@ line@@ -1;j++) plus@@ +=@@ **@@ (a@@ +j)@@ +*(@@ *(a@@ +j)@@ +row@@ -1); for(intj=1;j<@@ row@@ -1;j++) plus@@ +=@@ *(@@ *a@@ +j)@@ +*(@@ *(a+@@ line@@ -1)@@ +j); cout<<@@ plus@@ <<endl; } return0; }  
c -1
h -1
0

int@@ cal@@ ; int@@ fac@@ (inta,int@@ x){ if(x@@ ==1){@@ cal@@ ++;@@ return@@ 1@@ ;} for(inti=2;i<=@@ x;i++) if(x@@ %i==0&&@@ i>=@@ a) fac@@ (i,@@ x@@ /i@@ );} intmain(){ intn,@@ b; cin>>n; while(n@@ >0){ cal@@ =0; cin>>@@ b; fac@@ (@@ 1,@@ b); cout<<@@ cal@@ <<endl; n--; }}  
c -1
h -1
voidmain() { int@@ col,@@ row,@@ i,j,@@ n,@@ a[@@ 101][@@ 101],@@ t; scanf("%d%d",&row,&col); for(i=0;i<row;i++) for(j=0;j<col@@ ;j++)@@ scanf("%d",&a[i][j]); for(i=0;i<=@@ row+col-2@@ ;i++) { for(j=0;j<=i;j++) { if(j@@ <row@@ &&(@@ i@@ -j@@ )@@ <col) printf("%d\n",@@ a[j][i-j@@ ]); } } scanf("%d",&t); }  
c -1
h -1
0

int@@ com@@ (constvoid*a,constvoid*@@ b) { return(@@ *(int*)@@ a@@ -*@@ (int*)@@ b); } intmain() { intn,i; inta[@@ 30]; ints[@@ 30@@ ]={@@ 1@@ }; scanf("%d",&n); for(inti=0;i<n;i++) scanf("%d",&a[i]); for(inti=@@ n-2;i>=0;i--) { for(intj=@@ n-1@@ ;j>i;j--) { if(a[i]>=a[j]) { s[i]=@@ max(@@ s[j]@@ +1,@@ s[i]); } } } qsort(@@ s,@@ 30@@ ,@@ sizeof(int),@@ com@@ ); printf("%d",@@ s[@@ 29@@ ]@@ +1); getchar(); getchar(); }  
c -1
h -1
int@@ stu[100000]; intmain(intargc,char*argv[]) { intn,i,j,@@ y,@@ t,@@ m; struct@@ s@@ { inta; intb; intc; }stu[100000]; scanf("%d",&n); for(i=0;i<n;i++) { scanf("%d%d%d",&stu[i].@@ a@@ ,&stu[i].@@ b@@ ,&stu[i].@@ c); } for(i=0;i<3;i++) { for(j=i+1;j<n;j++) { if((@@ stu[j].@@ b+@@ stu[j].@@ c@@ )>@@ (@@ stu[i].@@ b@@ +stu[i].@@ c@@ )) { y=@@ stu[i].@@ b@@ ;@@ t=@@ stu[i].@@ c;@@ m=@@ stu[i].@@ a; stu[i].@@ b=@@ stu[j].@@ b; stu[j].@@ b=@@ y; stu[i].@@ c=@@ stu[j].@@ c; stu[j].@@ c=@@ t; stu[i].@@ a=@@ stu[j].@@ a; stu[j].@@ a=@@ m; } } } for(i=0;i<3;i++) { printf("%d%d\n",stu[i].@@ a,@@ (@@ stu[i].@@ b@@ +stu[i].@@ c@@ )); } return0; }  
c -1
h -1
0

voidf1@@ (inta[],intb[],int@@ c@@ ,int@@ d) { inti,j,t; for(i=0;i<c@@ ;i++) { for(j=0;j<@@ c@@ -i-1;j++) { if(a[j]>a[j+1]) { t=a[j]; a[j]=a[j+1]; a[j+1]=t; } } } for(i=0;i<d@@ ;i++) { for(j=0;j<@@ d@@ -i-1;j++) { if(b[j]>b[j+1]) { t=@@ b[j]; b[j]=b[j+1]; b[j+1]=@@ t; } } } printf("%d",a[0]); for(i=1;i<@@ c@@ ;i++) printf("%d",a[i]); for(i=0;i<d@@ ;i++) printf("%d",b[i]); } voidmain() { inta[@@ 15@@ ],b[@@ 15],@@ c,d,@@ i; scanf("%d%d",&@@ c@@ ,&@@ d); for(i=0;i<c@@ ;i++) scanf("%d",&a[i]); for(i=0;i<d@@ ;i++) scanf("%d",&b[i]); f1@@ (a,b,@@ c,@@ d); }  
c -1
h -1
voidmain() { inta[@@ 15@@ ]={@@ 1@@ },@@ n,m,@@ i,j,@@ t; scanf("%d",&a[0]); while(@@ a[0]@@ !=-1) { i@@ =1;@@ n=1; scanf("%d",&@@ a[1]); while(a[i]@@ !=0) { n++; i++; scanf("%d",&a[i]); } for(i=0;i<n;i++) for(j=i+1;j<n;j++) if(a[i]>a[j]) { t=a[i]; a[i]=a[j]; a[j]=@@ t; } m=0; for(i=0;i<n;i++) for(j=i+1;j<n;j++) if(a[j]==2*@@ a[i]) { m++; break; } printf("%d\n",m); scanf("%d",&a[0]); } }  
c -1
h -1
0

intmain() { int@@ x,y; introw,col; cin>>row>>col; inta[@@ row][col]; for(inti=0;i<row;i++) { for(intj=0;j<col;j++) { cin>>a[i][j]; } } intn; n=@@ row+col-2@@ ; for(inti=0;i<@@ col;i++) { for(@@ x=0,@@ y@@ =i@@ -x@@ ;x@@ >=0&&@@ y@@ >=0&&@@ x@@ <row@@ &&@@ y@@ <col@@ ;x@@ ++,@@ y@@ --) { cout<<@@ a[x@@ ][y@@ ]<<endl; } } for(intj=@@ col@@ ;j<=@@ n;j++) { for(@@ y=@@ col-1@@ ,@@ x@@ =j@@ -@@ y@@ ;x@@ >=0&&@@ y@@ >=0&&@@ x@@ <row@@ &&@@ y@@ <col@@ ;y@@ --@@ ,@@ x++) { cout<<@@ a[x@@ ][y@@ ]<<endl; } } return0; }  
c -1
h -1
static@@ intdays@@ [13]={0,31,28,31,30,31,30,31,31,30,31,30,31}; static@@ int@@ isleapyear@@ (intyear@@ ) { return(@@ year%4==0&&year%100!=0@@ )||@@ year%@@ 400==0@@ ; } intmain(){ intyear,month,day; scanf("%d%d%d",&@@ year,@@ &@@ month,@@ &@@ day); intn=0; inti; for(i=1;i<month;i++) { n+=@@ days@@ [i]; } n+=@@ day; if(month@@ >2@@ &&@@ isleapyear@@ (year@@ )) n++; printf("%d",n); }  
c -1
h -1
0

char@@ f@@ (int@@ y); intmain() { intm,i,j,@@ number@@ [1000],@@ auther@@ [26],@@ total=0; charname@@ [1000][@@ 27]; scanf("%d",&m); for(i=0;i<m;i++){ scanf("%d%s",&@@ number@@ [i],@@ name@@ [i]); intn; n=strlen(@@ name@@ [i]); for(j=0;j<n;j++){ switch(@@ name@@ [i][j]@@ ){ case'@@ A@@ ':@@ auther@@ [0]@@ ++@@ ;break; case'@@ B@@ ':@@ auther@@ [1]@@ ++@@ ;break; case'@@ C@@ ':@@ auther@@ [2@@ ]++;break; case'@@ D@@ ':@@ auther@@ [3@@ ]++;break; case'@@ E@@ ':@@ auther@@ [4@@ ]++;break; case'@@ F@@ ':@@ auther@@ [5@@ ]++;break; case'@@ G@@ ':@@ auther@@ [@@ 6@@ ]++;break; case'@@ H@@ ':@@ auther@@ [@@ 7@@ ]++;break; case'@@ I@@ ':@@ auther@@ [@@ 8@@ ]++;break; case'@@ J@@ ':@@ auther@@ [@@ 9@@ ]++;break; case'@@ K@@ ':@@ auther@@ [10@@ ]++;break; case'@@ L@@ ':@@ auther@@ [11@@ ]++;break; case'@@ M@@ ':@@ auther@@ [12@@ ]++;break; case'@@ N@@ ':@@ auther@@ [@@ 13@@ ]++;break; case'@@ O@@ ':@@ auther@@ [@@ 14@@ ]++;break; case'@@ P@@ ':@@ auther@@ [@@ 15@@ ]++;break; case'@@ Q@@ ':@@ auther@@ [@@ 16@@ ]++;break; case'@@ R@@ ':@@ auther@@ [@@ 17@@ ]++;break; case'@@ S@@ ':@@ auther@@ [@@ 18@@ ]++;break; case'@@ T@@ ':@@ auther@@ [@@ 19@@ ]++;break; case'@@ U@@ ':@@ auther@@ [@@ 20@@ ]++;break; case'@@ V@@ ':@@ auther@@ [@@ 21@@ ]++;break; case'@@ W@@ ':@@ auther@@ [@@ 22@@ ]++;break; case'@@ X@@ ':@@ auther@@ [@@ 23@@ ]++;break; case'@@ Y@@ ':@@ auther@@ [@@ 24@@ ]++;break; case'@@ Z@@ ':@@ auther@@ [25@@ ]++;break; } } } intmax=@@ auther@@ [0],@@ k,@@ t=0; for(k=1;k<@@ 26@@ ;k++){ if(@@ auther@@ [k]@@ >max){ max=@@ auther@@ [k]; t=@@ k; } } printf("%c\n",@@ f(@@ t@@ )); for(i=0;i<m;i++){ int@@ q; q@@ =strlen(@@ name@@ [i]); for(j=0;j<@@ q@@ ;j++){ if(name@@ [i][j]==@@ f(@@ t@@ )) total@@ ++; } } printf("%d\n",@@ total); for(i=0;i<m;i++){ intp; p@@ =strlen(@@ name@@ [i]); for(j=0;j<@@ p@@ ;j++){ if(name@@ [i][j]==@@ f(@@ t@@ )) printf("%d\n",@@ number@@ [i]); } } return0; } char@@ f@@ (int@@ y){ char@@ x; switch(@@ y){ case@@ 0@@ :@@ x@@ ='A'@@ ;break; case1:@@ x@@ ='@@ B@@ '@@ ;break; case2:@@ x@@ ='@@ C@@ '@@ ;break; case3:@@ x@@ ='@@ D@@ '@@ ;break; case4:@@ x@@ ='@@ E@@ '@@ ;break; case5:@@ x@@ ='@@ F@@ '@@ ;break; case6:@@ x@@ ='@@ G@@ '@@ ;break; case7:@@ x@@ ='@@ H@@ '@@ ;break; case8:@@ x@@ ='@@ I@@ '@@ ;break; case9:@@ x@@ ='@@ J@@ '@@ ;break; case10:@@ x@@ ='@@ K@@ '@@ ;break; case11:@@ x@@ ='@@ L@@ '@@ ;break; case12:@@ x@@ ='@@ M@@ '@@ ;break; case@@ 13@@ :@@ x@@ ='@@ N@@ '@@ ;break; case@@ 14@@ :@@ x@@ ='@@ O@@ '@@ ;break; case@@ 15@@ :@@ x@@ ='@@ P@@ '@@ ;break; case@@ 16@@ :@@ x@@ ='@@ Q@@ '@@ ;break; case@@ 17@@ :@@ x@@ ='@@ R@@ '@@ ;break; case@@ 18@@ :@@ x@@ ='@@ S@@ '@@ ;break; case@@ 19@@ :@@ x@@ ='@@ T@@ '@@ ;break; case@@ 20@@ :@@ x@@ ='@@ U@@ '@@ ;break; case@@ 21@@ :@@ x@@ ='@@ V@@ '@@ ;break; case@@ 22@@ :@@ x@@ ='@@ W@@ '@@ ;break; case@@ 23@@ :@@ x@@ ='@@ X@@ '@@ ;break; case@@ 24@@ :@@ x@@ ='@@ Y@@ '@@ ;break; case@@ 25@@ :@@ x@@ ='@@ Z'@@ ;break; } return@@ x; }  
c -1
h -1
intmain() { inta[@@ 100001@@ ][@@ 5@@ ]; inti,j,n,@@ k=@@ 3@@ ,@@ max=0,@@ t=0; scanf("%d",&n); for(i=1;i<=n;i++) {@@ scanf("%d%d%d",&@@ a[i]@@ [1@@ ],@@ &@@ a[i]@@ [2@@ ],@@ &@@ a[i]@@ [3@@ ]); a[i][@@ 4@@ ]=@@ a[i]@@ [2@@ ]+@@ a[i]@@ [3]; } while(k@@ --) { for(i=1;i<=n;i++) { if(a[i]@@ [4@@ ]@@ >max) {max=@@ a[i][@@ 4@@ ],@@ t@@ =i;} } printf("%d%d\n",@@ t,@@ a[t@@ ][@@ 4@@ ]); a[t@@ ][@@ 4@@ ]=0; max=0; } }  
c -1
h -1
0

intmain() { intn,@@ x; inta[100]; cin>>n; for(intk=0;k<@@ 100@@ ;k++) a[k]@@ =0; for(inti=0;i<n;i++) { cin>>x; for(intj=@@ 10@@ ;j<@@ 100@@ ;j++) { if(x==@@ j)@@ a[j]=@@ a[j]@@ +1; } if(a[x@@ ]@@ ==1) { if(i@@ !=0) cout<<""<<@@ x; else cout<<@@ x; } } return0; }  
c -1
h -1
structstudent { intnum; intchinese; intmath; intsum; }@@ s[@@ 100001@@ ],@@ first@@ ,@@ second@@ ,@@ third@@ ; intmain() { intn,i,@@ temp1@@ ,@@ temp2@@ ; cin>>n; for(i=0;i<n;i++) { cin>>@@ s[i].@@ num@@ >>@@ s[i].@@ chinese@@ >>@@ s[i].@@ math; s[i].@@ sum=@@ s[i].@@ chinese+@@ s[i].@@ math; } first@@ .@@ sum=0,@@ second@@ .@@ sum=0,@@ third@@ .@@ sum=0; for(i=0;i<n;i++) { if(@@ first@@ .@@ sum<@@ s[i].@@ sum) { first=@@ s[i]; temp1@@ =i; } } for(i=0;i<n;i++) { if(@@ second@@ .@@ sum<@@ s[i].@@ sum@@ &&@@ s[i].@@ num@@ !=@@ s[@@ temp1@@ ].@@ num) { second=@@ s[i]; temp2@@ =i; } } for(i=0;i<n;i++) if(@@ third@@ .@@ sum<@@ s[i].@@ sum@@ &&@@ s[i].@@ num@@ !=@@ s[@@ temp1@@ ].num@@ &&@@ s[i].@@ num@@ !=@@ s[@@ temp2@@ ].@@ num) third=@@ s[i]; cout<<@@ first@@ .@@ num@@ <<""<<@@ first@@ .@@ sum@@ <<endl; cout<<@@ second@@ .@@ num@@ <<""<<@@ second@@ .@@ sum@@ <<endl; cout<<@@ third@@ .@@ num@@ <<""<<@@ third@@ .@@ sum@@ <<endl; return0; }  
c -1
h -1
0

intmain() { introw,col,@@ time@@ =0,@@ i,j,@@ n; intarray[@@ 110][110@@ ]; cin>>row>>col; for(i=0;i<row;i++) { for(j=0;j<col;j++) { cin>>@@ *(*(@@ array@@ +i)@@ +j); } } for(inti=0;i<=@@ row+col-2@@ ;i++) { if(i@@ <col) { for(intj=0;j<@@ row@@ &&j@@ <=@@ i;j++) cout<<@@ *(*(@@ array@@ +j)@@ +i-j@@ )<<endl; } else { for(intj=@@ col-1@@ ;j>=i@@ -@@ row@@ +1@@ &&j>=0@@ ;j--) cout<<@@ *(*(@@ array@@ +i-j@@ )@@ +j)<<endl; } } return0; }  
c -1
h -1
ints[@@ 100001@@ ]; intmain() { intn,i,j; scanf("%d",&n); struct{ int@@ id,@@ chin@@ ,@@ math@@ ,@@ su@@ ; }@@ s[@@ 100001@@ ]; for(i=0;i<n;i++) { scanf("%d%d%d",&@@ s[i].@@ id,&@@ s[i].@@ chin@@ ,&@@ s[i].@@ math); s[i].@@ su@@ =@@ s[i].@@ chin@@ +@@ s[i].@@ math; } for(i=0;i<3;i++) { for(j=i+1;j<n;j++) { if(s@@ [i].@@ su@@ <@@ s[j].@@ su@@ ) { s[@@ 100000@@ ]=@@ s[i]; s[i]=@@ s[j]; s[j]=@@ s[@@ 100000]; } } } printf("%d%d\n%d%d\n%d@@ %d",@@ s@@ [0].@@ id,@@ s@@ [0].@@ su@@ ,@@ s[1].@@ id,@@ s[1].@@ su@@ ,@@ s[2@@ ].id,@@ s[2].@@ su@@ ); return0; }  
c -1
h -1
0

intmain() { intm,@@ la@@ ,lb@@ ,@@ x,@@ i; double@@ r0@@ ,@@ r1@@ ; chara[@@ 505@@ ],b[@@ 505@@ ]; scanf("%lf",&@@ r0@@ ); scanf("%s",a); scanf("%s",b); la@@ =strlen(a); lb@@ =strlen(b); if(@@ la@@ !=@@ lb@@ ) printf("error\n"); else { x=1; for(i=0,@@ m@@ =0;i<@@ la;i++) { if(a[i]!='@@ A'&&a[i]!='T'&&a[i]!='G'&&a[i]!='@@ C') { printf("error\n"); x=0; break; } elseif(@@ b[i]!='A'&&b[i]!='T'&&b[i]!='G'&&b[i]!='@@ C') { printf("error\n"); x=0; break; } else { if(a[i]==b[i]) m++; } } r1@@ =1.0*@@ m/@@ la@@ ; if(x==1) { if(@@ r1@@ >@@ r0@@ ) printf("yes\n"); else printf("no\n"); } } return0; }  
c -1
h -1
inta[@@ 500],b[@@ 500],@@ numbera@@ ,@@ numberb@@ ,i,j,@@ p; voidinput@@ (); voidorder@@ (); void@@ stract@@ (); voidoutput@@ (); intmain(){ input(); order@@ (); stract@@ (); output@@ (); return0; } voidinput@@ (){ cin>>@@ numbera@@ >>@@ numberb@@ ; for(i=0;i<@@ numbera@@ ;i++) cin>>a[i]; for(i=0;i<@@ numberb@@ ;i++) cin>>b[i]; } voidorder@@ (){ for(i=0;i<@@ numbera@@ -1;i++) for(j=@@ numbera@@ -1@@ ;j>i;j--) if(a[j]@@ <a@@ [j-1]@@ ){ p=@@ a[j]; a[j]=@@ a@@ [j-1]; a@@ [j-1]=@@ p; } for(i=0;i<@@ numberb@@ -1;i++) for(j=@@ numberb@@ -1@@ ;j>i;j--) if(b[j]@@ <b@@ [j-1]@@ ){ p=@@ b[j]; b[j]=b@@ [j-1]; b@@ [j-1]=@@ p; } } void@@ stract@@ (){ for(i=@@ numbera@@ ;i<@@ numbera@@ +@@ numberb@@ ;i++) a[i]=b[i-@@ numbera@@ ]; } voidoutput@@ (){ cout<<a[0]; for(i=1;i<@@ numbera@@ +@@ numberb@@ ;i++) cout<<""<<a[i]; }  
c -1
h -1
0

intmain() { introw,col,@@ sum; scanf("%d%d",&row,&col); inta[100][100]; inti,j; for(i=0;i<row;i++) { scanf("%d",&a[i]@@ [0]); for(j=1;j<@@ col;j++) { scanf("%d",&a[i][j]); } } for(@@ sum=0;@@ sum@@ <(@@ row+col@@ -1)@@ ;@@ sum@@ ++) { for(i=0;i<=@@ sum@@ ;i++) { if(i@@ <row@@ &&(@@ sum@@ -i@@ )@@ <col) { printf("%d\n",@@ a[i][@@ sum@@ -i]); } } } return0; }  
c -1
h -1
intmain() { intdays@@ [13]={0,31,28,31,30,31,30,31,31,30,31,30,31}; intyear,month,day; int@@ isleapyear@@ ; scanf("%d%d%d",&year,&month,&day); isleapyear@@ =(@@ year%4==0&&year%100!=0@@ )||@@ year%@@ 400==0@@ ; if(@@ isleapyear@@ &&@@ month==@@ 2@@ &&(@@ day@@ <@@ 1@@ ||@@ day@@ >@@ 29@@ )) { printf("@@ Illegal@@ input@@ .@@ \n"); return-1; } if(@@ isleapyear@@ &&@@ month@@ !=@@ 2@@ &&(@@ day@@ <@@ 1@@ ||@@ day@@ >@@ days@@ [@@ month@@ ]@@ )) { printf("@@ Illegal@@ input@@ .@@ \n"); return-1; } if(!@@ isleapyear@@ &&(@@ day@@ <@@ 1@@ ||@@ day@@ >@@ days@@ [@@ month@@ ]@@ )) { printf("@@ Illegal@@ input@@ .@@ \n"); return-1; } intn=0; inti; for(i=0;i<@@ month;i++) { n+=@@ days@@ [i]; } n+=@@ day; if(month@@ >2@@ &&@@ isleapyear@@ ) n++; printf("%d",n); return0; }  
c -1
h -1
0

intmain() { inta[@@ 101][101]; introw,col; inti,j; cin>>row>>col; for(i=0;i<row;i++) for(j=0;j<col;j++) cin>>a[i][j]; for(i=0;i<col;i++) for(j=i@@ ;j>=0@@ &&i@@ -j@@ <row@@ ;j--) cout<<@@ a[i@@ -j@@ ][j]@@ <<endl; for(i=1;i<row;i++) for(j=@@ col@@ -1;@@ (j@@ >=0@@ )&&(i@@ +col@@ -1-j@@ <row@@ )@@ ;j--) cout<<@@ a[i@@ +col@@ -1-j@@ ][j]@@ <<endl; return0; }  
c -1
h -1
intmain(){ intn; cin>>n; inta[n]; for(int@@ i1@@ =0;@@ i1@@ <n;@@ i1@@ ++) cin>>@@ a[@@ i1@@ ]; intj=0; for(int@@ i1@@ =0;@@ i1@@ <n;@@ i1@@ ++){ j=@@ i1@@ +1; for(int@@ i2@@ =@@ i1@@ +1;@@ i2@@ <n;@@ i2@@ ++) { if(a[@@ i2@@ ]!=@@ a[@@ i1@@ ]) {@@ a[j]=@@ a[@@ i2@@ ]@@ ;j++@@ ;} } n@@ =j; } for(int@@ i1@@ =0;@@ i1@@ <n;@@ i1@@ ++){ cout<<a[@@ i1@@ ]; if(@@ i1@@ !=@@ n-1) cout<<"@@ "; } return0; }  
c -1
h -1
0

int@@ elm@@ [100]={0}; int@@ counts@@ =0,@@ num=0; void@@ Try@@ (int@@ b,int@@ s) { intj; for(j=2;j<=@@ num@@ ;j++) { if(j@@ >=@@ elm@@ [s@@ -1@@ ]) { if(b@@ %j==0) { elm@@ [s@@ ]=@@ j; if(b@@ /j@@ ==1) counts@@ ++; elseif(@@ b@@ /j@@ <@@ j) continue; else Try@@ (@@ b@@ /@@ j,@@ s@@ +1); } } } } intmain() { intn,i; cin>>n; for(i=0;i<n;i++) { counts@@ =0; cin>>num; Try@@ (num,@@ 1); cout<<@@ counts@@ <<endl; } return0; }  
c -1
h -1
intmain() { chara[@@ 257@@ ],b[@@ 257@@ ],c[@@ 256]; cin.getline@@ (a,@@ 257@@ ); cin.getline@@ (b,@@ 257@@ ); cin.getline@@ (c,@@ 257@@ ); int@@ len1=strlen(@@ a)@@ ,len2@@ =strlen(@@ b@@ ),@@ len3@@ =strlen(c); inti,j,@@ count,@@ flag@@ =@@ -1,@@ m; for(i=0;i<=@@ len1@@ -1;i++) { m=0; if(a[i]==@@ b[m@@ ]) { count=0; for(j=i;j<=@@ i+@@ len2@@ -1;j++) { if(a[j]==@@ b[m@@ ++@@ ]) count++; } if(count==@@ len2) { flag@@ =i; break; } } } if(flag@@ ==-1) cout<<@@ a; else { for(i=@@ flag@@ ;i<=@@ flag@@ +len2@@ -1;i++) a[i]=@@ c@@ [i-@@ flag@@ ]; for(i=0;i<=@@ len1@@ -1;i++) cout<<a[i]; } return0; }  
c -1
h -1
0

intmain() { int@@ row@@ =0,@@ col@@ =0; cin>>row>>col; inta[100][100]; memset@@ (a@@ ,'@@ 0@@ ',@@ sizeof(a)); for(inti=0;i<row;i++) { for(intj=0;j<col;j++) { cin>>a[i][j]; } } int(*p)@@ [100@@ ]=a; for(inti=0;i<@@ row+col@@ -1;i++) { if(i@@ <col) { for(intj=0;j<=@@ row@@ ;j++) { if(i@@ -j@@ <col@@ &&j@@ <row@@ &&j>=0@@ &&i@@ -j@@ >=0) {@@ cout<<@@ *(*(p@@ +j)@@ +i-j@@ )@@ <<endl;} } } else { for(intj=1;j<@@ row@@ ;j++) { if(i@@ -j@@ <col@@ &&j@@ <row@@ &&i@@ -j@@ >=0@@ &&j@@ >=0) {@@ cout<<@@ *(*(p@@ +j)@@ +i-j@@ )@@ <<endl;} } } } return0; }  
c -1
h -1
voidmain() { inti,j; intn,m; int@@ sum,@@ num; int@@ lon@@ ,@@ wid@@ ; int@@ c@@ [100][100]; scanf("%d",&n); for(i=0;i<n;i++){ for(j=0;j<n;j++){ scanf("%d",&(@@ c@@ [i][j]@@ )); } } for(i=0;i<n;i++){ sum=0; for(j=0;j<n;j++){ if(c@@ [i][j]==0) sum+=@@ 1; if(sum@@ >2) lon@@ =@@ sum; } } for(j=0;j<n;j++){ num=0; for(i=0;i<n;i++){ if(c@@ [i][j]==0) num@@ +=1; if(num@@ >2) wid@@ =@@ num; } } m@@ =(@@ lon@@ -2)*(@@ wid@@ -2); printf("%d\n",m); }  
c -1
h -1
0

int@@ fen@@ (intm,int@@ k) { inti,@@ t@@ =1,@@ n=0; for(i=2;i<=@@ m;i++) { if(m@@ %i==0)@@ n++; } if(n@@ ==1||@@ m@@ ==1)@@ return1; else for(i=2;i<=@@ m;i++) { if(m@@ %i==0&&@@ m@@ /i@@ >=i@@ &&i@@ >=@@ k) { k=i; t=t+@@ fen@@ (m@@ /i,@@ k); } } return@@ t; } intmain() { int@@ fen@@ (intm,int@@ k); intn,i,@@ x; scanf("%d\n",&n); for(i=0;i<n;i++) { scanf("%d",&x); printf("%d\n",@@ fen@@ (x,@@ 1@@ )); } }  
c -1
h -1
intmain(){ introw,col,@@ i,j,@@ temp_i@@ ,@@ a[100][100]; scanf("%d%d",&@@ row,@@ &@@ col); for(i=0;i<row;i++) for(j=0;j<col;j++) scanf("%d",&a[i][j]); for(j=0;j<col;j++){ for(i=0;i<=@@ j@@ &&i@@ <@@ row;i++) printf("%d\n",a[i]@@ [j-i@@ ]); } for(i=1;i<@@ row;i++){ temp_i@@ =i; for(j=col-1@@ ;j>=0@@ &&@@ temp_i@@ <row@@ ;j--){ printf("%d\n",a[@@ temp_i@@ ][j]); temp_i@@ ++; } } return0; }  
c -1
h -1
0

intmain() { inti,j,@@ b,@@ c,d,@@ e,f,@@ g,@@ y,@@ h,@@ k,@@ m,n,@@ t,@@ a,@@ x[@@ 500@@ ][@@ 500]; scanf("%d%d",&a,&b); y=0; for(i=1;i<=@@ a;i++){ for(j=1;j<=@@ b@@ ;j++){ scanf("%d",&@@ x@@ [i][j]); } } for(@@ t=@@ 2@@ ;t@@ <=@@ a+@@ b@@ ;t@@ ++){ for(k=1;k<@@ t@@ ;k++){ if(t@@ -k@@ <=@@ b@@ &&k@@ <=@@ a){ printf("%d\n",@@ x@@ [k@@ ][@@ t@@ -k@@ ]); } } } return0; }  
c -1
h -1
int@@ abc@@ (constvoid*@@ elem1@@ ,@@ constvoid*@@ elem2@@ ){ return@@ *(int*)@@ elem2@@ -*@@ (int*)@@ elem1@@ ; } intmain(){ intn,@@ a[2@@ ][@@ 25@@ ]={0},@@ i,j,@@ x,y; scanf("%d",&n); for(i=n-1;i>=0;i--){ scanf("%d",&@@ a[0]@@ [i]);} a[1@@ ][0]@@ =1; for(i=1;i<n;i++){ a[1]@@ [i]=1; for(j=0;j<i;j++){ if(a[0]@@ [i]>=@@ a[0]@@ [j]&&@@ a[1]@@ [i]<=@@ a[1]@@ [j]@@ )@@ a[1]@@ [i]=@@ a[1]@@ [j]+1; } } qsort(@@ a[1@@ ],@@ n,@@ 4@@ ,@@ abc@@ ); printf("%d",@@ a[1@@ ][0]@@ ); }  
c -1
h -1
0

intmain() { intn,k; scanf("%d%d",&n,&k); intsz[@@ N]; inti,@@ m=0,@@ h=0; for(i=0;i<n;i++) { scanf("%d",&sz[i]); } intj; for(i=0;i<n-1;i++) { for(j=i+1;j<n;j++) { if(sz[i]+sz@@ [j]==k) { printf("yes\n"); h@@ =1; break; } else { m++; } } if(m==@@ n@@ *(@@ n-1)@@ /@@ 2) { printf("no\n"); } if(h@@ ==1){@@ break;} } return0; }  
c -1
h -1
intmain() { int@@ p[@@ 1000][1000]; intn,i,j,@@ h,@@ k,@@ m,@@ l,@@ a=0,b=0,@@ sum; scanf("%d",&n); for(i=0;i<n;i++) { for(j=0;j<n;j++) { scanf("%d",&@@ p@@ [i][j]); } } for(h=0;h@@ <n;@@ h++) { for(k=0;k<n;k++) { if(p@@ [h@@ ][k@@ ]@@ ==0)@@ a++; } if(a@@ !=0@@ )break; } for(m=0;m@@ <n;m++) { for(l=0;l<n;l++) { if(p@@ [l@@ ][m@@ ]@@ ==0)@@ b++; } if(b@@ !=0@@ )break; } sum=(@@ a@@ -2)*(@@ b@@ -2); printf("%d",sum); return0; }  
c -1
h -1
0

intmain() { intn,i,j,@@ temp,@@ m=0; int@@ patage@@ [100]; structpatient { charnum[@@ 20]; intage; }; structpatient@@ pat@@ [100]; scanf("%d",&n); for(i=0;i<n;i++) scanf("%s%d",@@ pat[i].@@ num,&@@ pat@@ [i].age); for(i=0,j@@ =0;i<n;i++) if(pat@@ [i].age>=60) { patage@@ [j]=@@ pat@@ [i].age; j++; m++; } for(i=0;i<m;i++) for(j=0;j<m@@ -i;j++) { if(@@ patage@@ [j]<@@ patage@@ [j+1]) { temp=@@ patage@@ [j]; patage@@ [j]=@@ patage@@ [j+1]; patage@@ [j+1]=temp; } } for(i=0;i<m;i++) { if(@@ patage@@ [i]==@@ patage@@ [i-1@@ ]) continue; for(j=0;j<n;j++) if(pat@@ [j].age@@ ==@@ patage@@ [i]) printf("%s\n",@@ pat[j].@@ num); } for(i=0;i<n;i++) { if(pat@@ [i].age>=60) continue; else printf("%s\n",@@ pat[i].@@ num); } return0; }  
c -1
h -1
intmain() { inta[@@ 20@@ ]={0}; while(1) { cin>>a[0]; if(a[0]@@ !=-1) { inti,k,@@ m,@@ num=0; for(i=1;;i++) { cin>>a[i]; if(a[i]==0)break; } for(k=0;k<=@@ i@@ -2@@ ;k++) { for(m=@@ k@@ +1@@ ;m@@ <=i@@ -1@@ ;m++) { if((@@ a[m@@ ]==@@ (@@ 2*@@ a[k]@@ )@@ )||(@@ a[k]==@@ (@@ a[m]@@ *2@@ )@@ )) num++; } } cout<<num<<endl; } else break; } return0; }  
c -1
h -1
0

intmain(){ chara[@@ 2][@@ 600]; doublen,@@ m; scanf("%lf@@ %s",&@@ n,@@ a[0]); scanf("%s",@@ a[1]); inti,@@ s=0; m=strlen(@@ a[0]); for(i=0;i<m;i++){ if((@@ a[0]@@ [i]!=@@ 65@@ &&@@ a[0]@@ [i]!=@@ 67@@ &&@@ a[0]@@ [i]!=@@ 71@@ &&@@ a[0]@@ [i]!=@@ 84@@ )||(@@ a[1]@@ [i]!=@@ 65@@ &&@@ a[1]@@ [i]!=@@ 67@@ &&@@ a[1]@@ [i]!=@@ 71@@ &&@@ a[1]@@ [i]!=@@ 84@@ )){ printf("error"); s@@ =-1; break; } elseif(@@ a[0]@@ [i]==@@ a[1]@@ [i]) s++; } if(s@@ !=@@ -1){ double@@ q; q=@@ s@@ *1.0/@@ m; if(q@@ >=@@ n) printf("yes"); else{ printf("no"); } } return0; }  
c -1
h -1
voidmain() { chars[@@ 300],@@ a[@@ 300],b[@@ 300]; intn,m,@@ i,j,@@ p; scanf("%s\n@@ %s@@ \n@@ %s",@@ s,@@ a,b); n@@ =strlen(s); m=strlen(a); for(i=0,j@@ =0;i<@@ m,@@ j@@ <@@ n;j++) { if(a[i]==@@ s@@ [j]) { p=@@ j; i++; if(i==@@ m@@ )break; } else@@ i=0; } if(i==@@ m) for(i=0;i<m;i++) s[p@@ -m@@ +1@@ +i]=b[i]; printf("%s\n",@@ s); }  
c -1
h -1
0

intmain() { charstring@@ [500],@@ substring@@ [50@@ ],@@ replacement@@ [50@@ ]; int@@ same@@ ,@@ i,k,@@ c; scanf("%s%s%s",@@ string,@@ substring@@ ,@@ replacement); for(i=0;i<strlen(@@ string@@ );i++) { same@@ =1; for(k=0;k<@@ strlen(@@ substring@@ )@@ ;k++) { if(string@@ [i+k@@ ]!=@@ substring@@ [k]) { same@@ =0; } } if(@@ same@@ ==1) { printf("%s",@@ replacement); c=i; break; } else { printf("%c",@@ string@@ [i]); } } for(i=@@ c+@@ strlen(@@ substring@@ )@@ ;i<@@ strlen(@@ string@@ );i++) { printf("%c",@@ string@@ [i]); } return0; }  
c -1
h -1
intmain() { int@@ ls@@ ,@@ lo@@ ,@@ lr@@ ,@@ i,j,k,@@ flag; charstr@@ [257],@@ org@@ [257],@@ rep@@ [257]; gets(str); gets(@@ org@@ ); gets(@@ rep); ls@@ =strlen(@@ str); lo@@ =strlen(@@ org@@ ); lr@@ =strlen(@@ rep); for(i=0;i<=@@ ls@@ -@@ lo@@ ;i++) { flag=1; for(j=0;j<@@ lo@@ ;j++) { if(str@@ [i+j]!=@@ org@@ [j]) { flag=0; break; } } if(flag==1) { for(k=0;k<i;k++) printf("%c",str@@ [k]); for(k=0;k<@@ lr@@ ;k++) printf("%c",@@ rep@@ [k]); for(k=i+@@ lo@@ ;k<@@ ls@@ ;k++) printf("%c",str@@ [k]); return0; } } puts(@@ str); return0; }  
c -1
h -1
1


intmain() { inta[@@ 13]={0,31,28,31,30,31,30,31,31,30,31,30,31}; int@@ mun@@ ,@@ day,@@ year,@@ i; intdays@@ =0; scanf("%d%d%d",&year,&@@ mun@@ ,&@@ day); days@@ +=@@ day; for(i=1;i<@@ mun@@ ;i++) { days@@ +=@@ a[i]; if(year%@@ 4==0&&year%100!=0@@ ||@@ year%400==0) days@@ +=1; } printf("%d",@@ days@@ ); return0; }  
c -1
h -1
intmain() { int@@ A@@ ,@@ B@@ ,@@ C@@ ,@@ d,@@ z,@@ leap@@ ,i; i=1; while(i<=@@ 5) { scanf("%d%d@@ %d@@ \n",&@@ A@@ ,&@@ B@@ ,&@@ C@@ ); if(A@@ %@@ 4==0) { if(A@@ %@@ 100==0) { if(A@@ %@@ 400==0) leap@@ =1; else leap@@ =0; } else leap@@ =1; } else leap@@ =0; if(leap@@ ) { switch(@@ B@@ ) { case1:@@ d@@ =0;@@ break; case2:@@ d=@@ 31;break; case3:@@ d=@@ 60@@ ;break; case4:@@ d=@@ 91@@ ;break; case5:@@ d=@@ 121@@ ;break; case6:@@ d=@@ 152@@ ;break; case7:@@ d=@@ 182@@ ;break; case8:@@ d=@@ 213@@ ;break; case9:@@ d=@@ 244@@ ;break; case10:@@ d=@@ 274@@ ;break; case11:@@ d=@@ 305@@ ;break; case12:@@ d=@@ 335@@ ;break; } z=@@ d+@@ C@@ ;} else { switch(@@ B@@ ) { case1:@@ d@@ =0;@@ break; case2:@@ d=@@ 31;break; case3:@@ d=@@ 59@@ ;break; case4:@@ d=@@ 90@@ ;break; case5:@@ d=@@ 120@@ ;break; case6:@@ d=@@ 151@@ ;break; case7:@@ d=@@ 181@@ ;break; case8:@@ d=@@ 212@@ ;break; case9:@@ d=@@ 243@@ ;break; case10:@@ d=@@ 273@@ ;break; case11:@@ d=@@ 304@@ ;break; case12:@@ d=@@ 334@@ ;break; } z=@@ d+@@ C@@ ;} printf("%d\n",@@ z); i=i+1; } return0; }  
c -1
h -1
1


intmain() { intn,i,j; scanf("%d",&n); struct@@ point { charid[10]; intage; } points@@ [100],@@ news@@ [100],@@ tmp; for(i=0;i<n;i++) { scanf("%s%d",&@@ points@@ [i].id,&@@ points@@ [i].age); } for(i=n-1;i>=0;i--) { for(j=0;j<i;j++) { if(@@ points@@ [j+1@@ ].age@@ >=60&&@@ points@@ [j+1@@ ].age@@ >@@ points@@ [j].age@@ ) { tmp=@@ points@@ [j+1]; points@@ [j+1]=@@ points@@ [j]; points@@ [j]=@@ tmp; } } } for(i=0;i<n;i++) { printf("%s\n",@@ points@@ [i].id); } return0; }  
c -1
h -1
structstudent { intnum; intchi; int@@ mat@@ ; int@@ tol@@ ; structstudent*next; }; voidmain() { structstudent*@@ p1,*p2,*head; structstudent@@ *p,*@@ a,*@@ b@@ ,*@@ c; structstudent@@ temp; intn,i; scanf("%d",&n); for(i=0;i<n;i++) { p1=(structstudent*)malloc(LEN); scanf("%d%d%d",&p1->num,&p1->@@ chi@@ ,&p1->@@ mat@@ ); p1->@@ tol@@ =p1->@@ chi@@ +p1->@@ mat@@ ; if(i==0) head=@@ p2=p1; else p2->next=p1; p2=p1; } p2->next=NULL; p=head; temp.@@ tol@@ =0; a=@@ b=@@ c@@ =&@@ temp; while(p!=NULL) { if(p->@@ tol@@ >@@ a@@ ->@@ tol@@ ) { c=@@ b; b=@@ a; a=@@ p; } elseif(@@ p->@@ tol@@ >b@@ ->@@ tol@@ ) { c=@@ b; b=@@ p; } elseif(@@ p->@@ tol@@ >@@ c@@ ->@@ tol@@ ) c=@@ p; p=p->next; } printf("%d%d\n",@@ a@@ ->num,@@ a@@ ->@@ tol@@ ); printf("%d%d\n",@@ b@@ ->num,@@ b@@ ->@@ tol@@ ); printf("%d%d\n",@@ c@@ ->num,@@ c@@ ->@@ tol@@ ); }  
c -1
h -1
0

intmain() { inta[@@ 20@@ ],i,j,@@ sum; while(1) { sum=0; for(i=1;;i++) { cin>>a[i]; if(a[1@@ ]==@@ -1)break; if(a[i]==0)break; for(j=1;j<i;j++) { if(a[i]==2*@@ a[j]||a[j]==2*@@ a[i]) { sum++; } } } if(@@ a[1]@@ !=@@ -1)@@ cout<<sum<<endl; if(a[1@@ ]==@@ -1)break; } return0; }  
c -1
h -1
structstudent{ intnum; int@@ scorec@@ ; int@@ scorem@@ ; int@@ score; }; intmain(){ intn; inti; structstudent@@ stu[@@ 100001@@ ]; int@@ best@@ [2][@@ 3@@ ]={@@ {@@ 0,0,@@ 0},{@@ 0,0,@@ 0@@ }@@ }; cin>>n; for(i=1;i<=n;i++) { cin>>@@ stu[i].@@ num@@ >>stu[i].@@ scorec@@ >>stu[i].@@ scorem@@ ; stu[i].@@ score@@ =stu[i].@@ scorec@@ +stu[i].@@ scorem@@ ; } for(i=1;i<=n;i++) { if(stu[i].@@ score@@ >@@ best@@ [1@@ ][0]@@ ) { best@@ [0][@@ 2@@ ]=@@ best@@ [0][@@ 1@@ ]; best@@ [0][@@ 1@@ ]=@@ best@@ [0][@@ 0]; best@@ [0][@@ 0]=@@ stu[i].@@ num; best@@ [1@@ ][2@@ ]=@@ best@@ [1@@ ][1@@ ]; best@@ [1@@ ][1@@ ]=@@ best@@ [1@@ ][0]; best@@ [1@@ ][@@ 0]=@@ stu[i].@@ score; } elseif(@@ stu[i].@@ score@@ <=@@ best@@ [1@@ ][0]@@ &&stu[i].@@ score@@ >@@ best@@ [1@@ ][1@@ ]) { best@@ [0][@@ 2@@ ]=@@ best@@ [0][@@ 1@@ ]; best@@ [0][@@ 1@@ ]=@@ stu[i].@@ num; best@@ [1@@ ][2@@ ]=@@ best@@ [1@@ ][1@@ ]; best@@ [1@@ ][1@@ ]=@@ stu[i].@@ score; } elseif(@@ stu[i].@@ score@@ <=@@ best@@ [1@@ ][1@@ ]@@ &&stu[i].@@ score@@ >@@ best@@ [1@@ ][2@@ ]) { best@@ [0][@@ 2@@ ]=@@ stu[i].@@ num; best@@ [1@@ ][2@@ ]=@@ stu[i].@@ score; } } for(i=0;i<3;i++) cout<<@@ best@@ [0]@@ [i]@@ <<''<<@@ best@@ [1]@@ [i]<<endl; return0; }  
c -1
h -1
0

int@@ paixu@@ (intn,int@@ m) { inti,j,@@ num; int@@ shuzu@@ [1000]; for(i=1;i<=@@ n+m;i++) { cin>>num; shuzu@@ [i]=@@ num; } for(i=1;i<=n;i++) { for(j=n-1@@ ;j>=i@@ ;j--) { if(shuzu@@ [j]>@@ shuzu@@ [j+1@@ ])@@ num=@@ shuzu@@ [j],@@ shuzu@@ [j]=@@ shuzu@@ [j+1],@@ shuzu@@ [j+1]=@@ num; } } for(i=n@@ +1;i<=@@ n+m;i++) { for(j=@@ n+@@ m-1@@ ;j>=i@@ ;j--) { if(shuzu@@ [j]>@@ shuzu@@ [j+1@@ ])@@ num=@@ shuzu@@ [j],@@ shuzu@@ [j]=@@ shuzu@@ [j+1],@@ shuzu@@ [j+1]=@@ num; } } for(i=1;i<=@@ n+m;i++) { if(i==@@ m+@@ n)@@ cout<<@@ shuzu@@ [i]; else@@ cout<<@@ shuzu@@ [i]@@ <<""; } return0; } intmain() { int@@ n1,n2; cin>>@@ n1@@ >>@@ n2; paixu(@@ n1,n2@@ ); return0; }  
c -1
h -1
voidmain() { inta[@@ 15@@ ]={0},@@ i=0,j=0,@@ m=0; scanf("%d",&a[0]); while(a[i]@@ !=0) { scanf("%d",&@@ a[i+1@@ ]); i=i+1; } i=0; while(@@ a[0]@@ !=-1) { while(a[i]@@ !=0) { while(@@ a[j]@@ !=0) { if(((@@ float)@@ a[j])@@ /@@ ((@@ float)@@ a[i]@@ )==@@ 2) m=m+1; j=j+1; } j=0; i=i+1; } printf("%d\n",m); i=0; m=0; scanf("%d",&a[0]); while(a[i]@@ !=0) { scanf("%d",&@@ a[i+1@@ ]); i=i+1; } i=0; } }  
c -1
h -1
0

intmain() { introw,col; int@@ jz@@ [100][100]; inti=0; intj=0; intm=0; intn=0; scanf("%d%d",&@@ row,@@ &@@ col); for(i=0;i<row;i++){ for(j=0;j<col;j++) scanf("%d",&@@ jz@@ [i][j]); } printf("%d\n",@@ jz@@ [0][@@ 0]@@ ); if(row@@ <=col@@ ){ for(m@@ =0,@@ n@@ =1;@@ n@@ <col@@ ;n++){ for(i=@@ m,@@ j=@@ n@@ ;j>=0@@ &&i@@ <row@@ ;i++,j@@ --){ printf("%d\n",@@ jz@@ [i][j]); } } for(m@@ =1,@@ n=@@ col-1@@ ;m@@ <row@@ -1@@ ;m++){ for(i=@@ m,@@ j=@@ n@@ ;i<@@ row@@ ;i++,j@@ --){ printf("%d\n",@@ jz@@ [i][j]); } } } elseif(@@ row@@ >@@ col@@ ){ for(m@@ =0,@@ n@@ =1;@@ n@@ <col@@ ;n++){ for(i=@@ m,@@ j=@@ n@@ ;j>=0@@ &&i@@ <row@@ ;i++,j@@ --){ printf("%d\n",@@ jz@@ [i][j]); } } for(m@@ =1,@@ n=@@ col-1@@ ;m@@ <row@@ -1@@ ;m++){ for(i=@@ m,@@ j=@@ n@@ ;i<@@ row@@ &&j>=0@@ ;i++,j@@ --){ printf("%d\n",@@ jz@@ [i][j]); } } } if(row@@ !=1) printf("%d",@@ jz@@ [@@ row-1@@ ][col@@ -1]); return0; }  
c -1
h -1
intmain(){ char@@ X@@ [300]; char@@ Y@@ [100]; char@@ Z@@ [100]; gets(@@ X@@ ); gets(@@ Y@@ ); gets(@@ Z@@ ); intl,@@ l1,l2@@ ; l=strlen(@@ X@@ ); l1=strlen(@@ Y@@ ); l2=strlen(@@ Z@@ ); inti; int@@ A@@ =-1; for(i=0;i<l;i++){ if(@@ X@@ [i]==@@ Y@@ [0]@@ &&@@ X@@ [i+1@@ ]==@@ Y@@ [1]@@ &&@@ X@@ [i+@@ l1@@ -1@@ ]==@@ Y@@ [@@ l1@@ -1]@@ &&@@ X@@ [i+@@ l1@@ -2@@ ]==@@ Y@@ [@@ l1@@ -2@@ ]){ A@@ =i; break; } } if(A@@ !=@@ -1){ for(i=0;i<@@ A@@ ;i++){ printf("%c",@@ X@@ [i]); }@@ for(i=0;i<@@ l2@@ ;i++){ printf("%c",@@ Z@@ [i]); }@@ for(i=@@ A@@ +@@ l1@@ ;i<@@ l@@ ;i++){ printf("%c",@@ X@@ [i]); } }else{ for(i=0;i<l;i++){ printf("%c",@@ X@@ [i]); } } return0; }  
c -1
h -1
0

int*p; intn; intmax(int@@ t@@ ,int@@ k) { if(t@@ >@@ k)@@ return@@ t; else@@ return@@ k; } int@@ pd@@ (inti,@@ inth@@ ) {@@ if(i==@@ n)@@ return0; if(p@@ [i]>@@ h@@ )@@ return@@ pd@@ (i+1,@@ h); if(p@@ [i]==@@ h@@ )@@ return@@ pd@@ (i+1,@@ h@@ )@@ +1; return@@ max(@@ pd@@ (i+1,@@ p@@ [i])@@ +1,@@ pd@@ (i+1,@@ h@@ )); } intmain() { inti,j,k; scanf("%d",&n); p=@@ (int*)malloc(n*sizeof(int)); for(i=0;i<n;i++) scanf("%d",&@@ p[i]); k=@@ pd@@ (@@ 0,@@ 800000@@ ); printf("%d",k); free@@ (p); }  
c -1
h -1
intmain() { intn,@@ row,col; ints@@ [100][100]; inti=0,@@ k=0,@@ j=0,@@ h=0; int@@ e=0,@@ d=0,@@ f@@ =0,@@ g=0; int@@ area@@ ; scanf("%d",&n); for(row=0;row<n;@@ row++){ for(col=0;col<n;col@@ ++){ scanf("%d",&(@@ s[@@ row][col@@ ]@@ )); } } for(i=0;i<n;i++){ for(k=0;k<n;k++){ if(s@@ [i][k]@@ ==0){ e@@ =i; d=@@ k; break; } } if(k@@ <@@ n){ if(s@@ [i][k]@@ ==0){ break; } } } for(j=n-1@@ ;j>=0;j--){ for(@@ h=@@ n-1;@@ h@@ >=0;@@ h@@ --){ if(s@@ [j]@@ [h@@ ]==0){ f@@ =j; g=@@ h; break; } } if(h@@ >=0@@ ){ if(s@@ [j]@@ [h@@ ]==0) { break; } } } area@@ =(@@ f@@ -@@ e@@ -1)*(@@ g@@ -@@ d@@ -1); printf("%d\n",@@ area@@ ); return0; }  
c -1
h -1
0

intmain() { intn,m,@@ a[1000],@@ i,j,@@ t=0,@@ k; scanf("%d%d",&n,&m); for(i=0;i<n;i++) scanf("%d",&a[i]); for(i=0;i<n-1;i++) for(j=i;j<@@ n;j++) for(k@@ =i+1@@ ;k<@@ n;k++) {@@ if(m==@@ a[j]@@ +@@ a[k]) t@@ ++;@@ break;} if(t@@ !=0) printf("yes"); else printf("no"); return0; }  
c -1
h -1
struct@@ arr { charid[10]; intage; struct@@ arr@@ *next; }; intn; struct@@ arr@@ *@@ create@@ (intm) { struct@@ arr@@ *@@ head; struct@@ arr@@ *p1,*p2; n=1; p1=p2=(struct@@ arr@@ *)malloc(LEN); scanf("%s%d",&@@ p1->id,&p1->age); head=p1; while(n@@ <@@ m) { p1=(struct@@ arr@@ *)malloc(LEN); p2->next=p1; n++; p2=p1; scanf("%s%d",&@@ p1->id,&p1->age); } p1->next=NULL; return(head); } struct@@ arr@@ *@@ del@@ (struct@@ arr@@ *head,@@ long@@ int@@ dnum@@ ) { struct@@ arr@@ *p1,*p2; p1=@@ p2=head; while(p1@@ !=NULL@@ &&@@ p1->age@@ ==@@ dnum@@ ) { head=@@ p1->next; p2=head; free(@@ p1); p1=head; } while(p1!=NULL) { p2=p1; p1=p1->next; while(p1@@ !=NULL@@ &&@@ p1->age@@ ==@@ dnum@@ ) { p2->next=@@ p1->next; free(@@ p1); p1=@@ p2->next; } } return(head); } voidprint(struct@@ arr@@ *head) { struct@@ arr@@ *p; p=head; while(p!=NULL) { if(p==@@ head@@ ) printf("%s\n",p->id); else@@ printf("%s\n",p->id); p=p->next; } } void@@ freelist@@ (struct@@ arr@@ *head) { struct@@ arr@@ *@@ p=head; if(head@@ !=NULL) { while(p!=NULL) { head=@@ head->next; free@@ (p); p=head; } } } voidmain() { struct@@ arr@@ *head,*@@ p1; intm,@@ max=0; scanf("%d",&m); head=@@ create@@ (m); for(;;) { max=0; for(p1=@@ head;@@ p1@@ !=NULL;@@ p1=p1->next) { max@@ =(@@ max@@ >@@ p1->age@@ )@@ ?@@ max@@ :@@ p1->@@ age; } if(max@@ >=60) { for(p1=@@ head;@@ p1@@ !=NULL;@@ p1=p1->next) { if(p1->age@@ ==@@ max) printf("%s\n",@@ p1->@@ id); } head=@@ del@@ (@@ head@@ ,max); } elsebreak; } print(head); freelist@@ (head); }  
c -1
h -1
0

intsum=0; void@@ ways@@ (inta,int@@ last@@ ); intmain() { intn,@@ num@@ [100],@@ i; cin>>n; for(i=0;i<n;i++) { cin>>num[i]; } for(i=0;i<n;i++) { ways@@ (@@ num@@ [i],@@ 2); cout<<sum<<endl; sum=0; } return0; } void@@ ways@@ (inta,int@@ last@@ ) { inti,j; for(i=@@ last@@ ;i<=a;i++) { if(a<@@ i) { } elseif(a@@ ==@@ i) { sum++; } elseif(a@@ %i==0) { ways@@ (a/i,i); } } }  
c -1
h -1
struct@@ xue { intID; int@@ sx; int@@ yw@@ ; intsum; }@@ xueshen@@ ; intmain() { intn,i,@@ k; scanf("%d",&n); struct@@ xue@@ *@@ xuesheng@@ ; xuesheng@@ =(struct@@ xue@@ *)malloc(@@ 4@@ *sizeof(int@@ )*n); for(i=0;i<n;i++){ scanf("%d%d%d",&@@ xuesheng@@ [i].@@ ID,&@@ xuesheng@@ [i].@@ sx@@ ,&@@ xuesheng@@ [i].@@ yw@@ ); xuesheng@@ [i].@@ sum=@@ xuesheng@@ [i].@@ sx@@ +@@ xuesheng@@ [i].@@ yw@@ ; } for(i=1;i<@@ 4@@ ;i++){ for(k=0;k<@@ n-i@@ ;k++){ if(@@ xuesheng@@ [k].@@ sum@@ >=@@ xuesheng@@ [k+1@@ ].@@ sum){ xueshen@@ =@@ xuesheng@@ [k+1]; xuesheng@@ [k+1]=@@ xuesheng@@ [k]; xuesheng@@ [k]=@@ xueshen@@ ; } } } for(i=1;i<@@ 4@@ ;i++){ printf("%d%d\n",@@ xuesheng@@ [n@@ -i@@ ].ID,@@ xuesheng@@ [n@@ -i@@ ].sum); } return0; }  
c -1
h -1
0

intmain() { double@@ std@@ ,@@ s; inti,@@ n1,n2,@@ t=0; chars1@@ [500],@@ s2@@ [500]; scanf("%lf",&@@ std@@ ); scanf("%s",&@@ s1); scanf("%s",&@@ s2); n1@@ =strlen(@@ s1); n2@@ =strlen(@@ s2); if(@@ n1@@ !=@@ n2) { printf("error"); return0; } for(i=0;i<n1;i++) { if(s1@@ [i]!='A'&&@@ s1@@ [i]!='T'&&@@ s1@@ [i]!='C'&&@@ s1@@ [i]!='G') { printf("error"); return0; } if(s2@@ [i]!='A'&&@@ s2@@ [i]!='T'&&@@ s2@@ [i]!='C'&&@@ s2@@ [i]!='G') { printf("error"); return0; } } for(i=0;i<n1;i++) { if(s1[i]==s2@@ [i]) t++; } s=(@@ double)@@ t@@ /@@ n1@@ ; if(s@@ >@@ std@@ ) printf("yes"); else printf("no"); return0; }  
c -1
h -1
voidmain() { inta[@@ 15@@ ]={0},@@ i=0,j=0,@@ m=0; scanf("%d",&a[0]); while(a[i]@@ !=0) { scanf("%d",&@@ a[i+1@@ ]); i=i+1; } i=0; while(@@ a[0]@@ !=-1) { while(a[i]@@ !=0) { while(@@ a[j]@@ !=0) { if(((@@ float)@@ a[j])@@ /@@ ((@@ float)@@ a[i]@@ )==@@ 2) m=m+1; j=j+1; } j=0; i=i+1; } printf("%d\n",m); i=0; m=0; scanf("%d",&a[0]); while(a[i]@@ !=0) { scanf("%d",&@@ a[i+1@@ ]); i=i+1; } i=0; } }  
c -1
h -1
0

int@@ n1@@ ;@@ int@@ n2@@ ;@@ int@@ i@@ ;@@ inta[100@@ ]={0@@ }@@ ;@@ intb[100@@ ]={0@@ }@@ ;@@ intc[@@ 200@@ ]={0}; void@@ scanfing@@ () { scanf("%d%d",&n1,&n2); scanf("%d",&a[0]); for(i=1;i<@@ n1@@ ;i++)@@ scanf("%d",&a[i]); scanf("%d",&@@ b[0]@@ ); for(i=1;i<@@ n2@@ ;i++)@@ scanf("%d",&b[i]); } int@@ compare@@ (constvoid*@@ elem1@@ ,@@ constvoid*@@ elem2@@ ) { return(@@ *(int*)@@ elem1@@ -*@@ (int*)@@ elem2@@ ); } void@@ qsorting@@ () { qsort@@ (a,@@ n1,@@ sizeof(int),@@ compare@@ ); qsort@@ (b,@@ n2,@@ sizeof(int),@@ compare@@ ); } void@@ together@@ () { for(i=0;i<n1@@ ;i++)@@ c[i]=a[i]; for(i=0;i<n2@@ ;i++)@@ c@@ [i+@@ n1@@ ]=b[i]; } void@@ printfing@@ () { printf("%d",c@@ [0]); for(i=1;i<@@ n1+@@ n2;i++) printf("%d",c[i]); } intmain() { scanfing@@ (); qsorting@@ (); together@@ (); printfing@@ (); }  
c -1
h -1
structstudent { charnum[10]; int@@ grade@@ [2]; }; structstudentstu[100000]; intmain() { intn,@@ sum[@@ 100000],@@ i,@@ count,@@ max@@ ,j; count@@ =1; scanf("%d",&n); for(i=0;i<n;i++) { sum@@ [i]=0; scanf("%s%d%d",@@ stu[i].@@ num,&stu[i].@@ grade@@ [0]@@ ,&stu[i].@@ grade@@ [1]); sum[i]=@@ stu[i].@@ grade@@ [0]@@ +stu[i].@@ grade@@ [1]; } while(@@ count@@ <=@@ 2) { max=0; for(i=0;i<n;i++) { if(sum@@ [i]>max) { max=@@ sum[i]; j=i; } } printf("%s%d\n",@@ stu[j].@@ num,@@ sum@@ [j]); count++; sum@@ [j]@@ =0; } max=0; for(i=0;i<n;i++) { if(sum@@ [i]>max) { max=@@ sum[i]; j=i; } } printf("%s@@ %d",@@ stu[j].@@ num,@@ sum@@ [j]); getchar(); getchar(); }  
c -1
h -1
0

inta[@@ 29@@ ],@@ max@@ [@@ 29@@ ]={0},@@ count[@@ 29@@ ]={0}; intN@@ ; int@@ select@@ (intx) {if(@@ count[@@ x@@ ]==0) { inti; for(i=x@@ +1;i<=@@ N;i++) {@@ if(a[x@@ ]>=@@ a[i]) {@@ if(max@@ [x@@ ]<=@@ select@@ (i@@ )){@@ max@@ [x@@ ]=@@ select@@ (i@@ )@@ +1;} } } if(max@@ [x@@ ]==0) {@@ max@@ [x@@ ]@@ =1;} count[@@ x@@ ]=1; } return@@ max@@ [x@@ ];} main() {int@@ maxm@@ ; scanf("%d",&N); for(intj=1;j<=@@ N@@ ;j++) {scanf("%d",&@@ a[j]); } maxm@@ =@@ select@@ (@@ 1); for(int@@ k=@@ 2@@ ;k<=@@ N@@ ;k++) {if(@@ maxm@@ <@@ select@@ (k@@ )) {@@ maxm@@ =@@ select@@ (k@@ );} } printf("%d",@@ maxm@@ ); }  
c -1
h -1
intmain() { intn,@@ i=0,j=0,@@ e,f,@@ count=0,@@ num,@@ m,@@ c,d; scanf("%d",&n); count=0; for(i=1;i<=n;i++){ for(j=1;j<=n;j++){ scanf("%d",&m); if((@@ m@@ ==0)&&(@@ count@@ ==0)@@ ){ c=i; d=j; count@@ =1; } elseif(m@@ ==0){ e@@ =i; f@@ =j; } } } num@@ =(@@ e@@ -c@@ -1)*(@@ f@@ -@@ d@@ -1); printf("%d",@@ num); return0; }  
c -1
h -1
0

voidmain() { intn,i,j,@@ l,@@ max,@@ p; inta[1000]; scanf("%d",&n); structbook { intm; charc[@@ 27]; }; structbook@@ b[@@ 1000]; for(i=0;i<n;i++) { scanf("%d",&@@ b[i].@@ m); scanf("%s",@@ b[i].@@ c); } for(i=0;i<26;i++) a[i]=0; for(i=0;i<n;i++) { l=strlen(@@ b[i].@@ c); for(j=0;j<l;j++) a[@@ b[i].@@ c[j]@@ -'A']++; } max=@@ a[0]; for(i=0;i<26;i++) { if(a[i]>max) max=a[i]; } for(i=0;i<26;i++) { if(max@@ ==@@ a[i]) p=i; } p=p@@ +'A'@@ ; printf("%c\n",@@ p); printf("%d\n",max); for(i=0;i<n;i++) { l=strlen(@@ b[i].@@ c); for(j=0;j<l;j++) { if(b[i].@@ c@@ [j]==@@ p) printf("%d\n",b[i].@@ m); } } }  
c -1
h -1
intmain() { int@@ col,@@ row; int@@ mat@@ [@@ 200][@@ 200]; inti,j; scanf("%d%d",&row,&col); for(i=0;i<row;i++) for(j=0;j<col;j++) scanf("%d",&@@ mat@@ [i][j]); for(i=0,j@@ =0;@@ ;) { if(i@@ <row@@ &&j@@ <col) printf("%d\n",@@ mat@@ [i][j]); if(i==@@ row-1@@ &&j@@ ==@@ col@@ -1)break; if(j@@ ==0) { j@@ =i+1; i=0; } else { i++; j--; } } return0; }  
c -1
h -1
0

int@@ fg@@ (int@@ k,int@@ m) { intj,@@ d=0; if(m==1) { d=1; } for(j=k@@ ;j<=@@ m;j++) { if(m@@ %j==0) d=d+@@ fg@@ (@@ j,@@ m@@ /j@@ ); } return(@@ d); } intmain() { intn,i,@@ a[@@ 40000@@ ],b[@@ 40000@@ ],@@ s; scanf("%d",&n); for(i=1;i<=n;i++) { scanf("%d",&a[i]); } for(i=1;i<=n;i++) { b[i]=@@ fg@@ (2,@@ a[i]); printf("%d\n",@@ b[i]); } return0; }  
c -1
h -1
int@@ A@@ ,@@ B@@ ,a[@@ 40@@ ],b[@@ 40@@ ]; void@@ enter@@ () { inti; scanf("%d%d",&@@ A@@ ,&@@ B@@ ); scanf("%d",&@@ a[1]); for(i=2;i<=@@ A@@ ;i++) scanf("%d",&a[i]); scanf("%d",&@@ b[1@@ ]); for(i=2;i<=@@ B@@ ;i++) scanf("%d",&b[i]); } void@@ array@@ () { inti,j,@@ m; for(i=1;i<=@@ A@@ -1;i++) for(j=1;j<=@@ A@@ -i;j++) { if(a[j]>a[j+1]) { m=@@ a[j]; a[j]=a[j+1]; a[j+1]=@@ m; } } for(i=1;i<=@@ B@@ -1;i++) for(j=1;j<=@@ B@@ -i;j++) { if(b[j]>b[j+1]) { m=@@ b[j]; b[j]=b[j+1]; b[j+1]=@@ m; } } } void@@ connect@@ () { inti,j; for(i=@@ A@@ +1@@ ,j@@ =1@@ ;i<=@@ A@@ +@@ B@@ ;i++,j++) a[i]=@@ b[j]; } voidprint() { inti; printf("%d",@@ a[1]); for(i=2;i<=@@ A@@ +@@ B@@ ;i++) printf("%d",a[i]); } voidmain() { enter@@ (); array@@ (); connect@@ (); print(); }  
c -1
h -1
0

intsum@@ =1; int@@ Fact@@ (intx,int@@ y); intmain(){ intn,@@ a; cin>>n; for(inti=0;i<n;i++){ cin>>a; sum=1; Fact@@ (a,@@ 2); cout<<sum<<endl; } return0; } int@@ Fact@@ (intx,int@@ y){ if(x==1) return0; else{ for(;@@ y@@ <=@@ sqrt(@@ x@@ );@@ y@@ ++) if(x%@@ y@@ ==0){ sum=sum+@@ Fact@@ (x@@ /@@ y,@@ y); } return1; } }  
c -1
h -1
intmain() { inti,j,k,l,@@ n,m,@@ row,col; inta[@@ 200][@@ 200@@ ]={0}; scanf("%d%d",&row,&col); for(i=1;i<=@@ row;i++) for(j=1;j<=col;j++) scanf("%d",&a[i][j]); for(i=1;i<@@ row+col@@ +1;i++) for(j=1;j<=@@ i;j++) if(a[j]@@ [i-j@@ ]!=0) printf("%d\n",@@ a[j][i-j@@ ]); return0; }  
c -1
h -1
0

intmain() { intm,n,@@ i,@@ d=0,@@ p=0; double@@ b; char@@ dna1@@ [501],@@ dna2@@ [501]; scanf("%lf",&@@ b); scanf("%s",@@ dna1); scanf("%s",@@ dna2); m=strlen(@@ dna1); n=strlen(@@ dna2); for(i=0;@@ dna1@@ [i]@@ &&@@ dna2@@ [i]@@ ;i++) { if(m!=@@ n) { d++; break; } if(dna1@@ [i]!='A'&&@@ dna1@@ [i]!='T'&&@@ dna1@@ [i]!='C'&&@@ dna1@@ [i]!='G') { d++; break; } if(@@ dna2@@ [i]!='A'&&@@ dna2@@ [i]!='T'&&@@ dna2@@ [i]!='C'&&@@ dna2@@ [i]!='G') { d++; break; } if(dna1@@ [i]==@@ dna2@@ [i]) { p++; } } if((@@ p@@ *1.0/@@ m)@@ >b@@ &&@@ d@@ ==0) { printf("yes"); } if(d@@ !=0) { printf("error"); } if((@@ p@@ *1.0/@@ m)@@ <=@@ b@@ &&@@ d@@ ==0) { printf("no"); } return0; }  
c -1
h -1
intmain(){ intsz[100][100]; int@@ x,@@ k,@@ m,n,@@ i,j,@@ sum; scanf("%d",&k); for(x=0;x@@ <k;@@ x@@ ++){ scanf("%d%d",&m,&n); for(i=0;i<m;i++){ for(j=0;j<n;j++){ scanf("%d",&sz[i][j]); } } sum=0; for(j=0;j<n-1@@ ;j++){ sum+=@@ sz[0]@@ [j]; } for(i=0;i<m@@ -1;i++){ sum+=@@ sz[i]@@ [j]; } for(@@ ;j>0@@ ;j--){ sum+=@@ sz[i]@@ [j]; } for(@@ ;i>0@@ ;i--){ sum+=@@ sz[i]@@ [j]; } printf("%d\n",sum); } return0; }  
c -1
h -1
0

structbook { intID; charauthor@@ [30]; structbook*next; }; intn,@@ max=0; charc; structbook*@@ create@@ () { structbook@@ *head,*p1,*p2; p1=(structbook@@ *)malloc(LEN); scanf("%d%s",&p1->@@ ID,@@ p1->@@ author); head=p1; p2=p1; p1->next=NULL; inti=1; do { if(i==@@ n@@ )break; p1=(structbook@@ *)malloc(LEN); scanf("%d%s",&p1->@@ ID,@@ p1->@@ author); p2->next=p1; p2=p1; p1->next=NULL; i++; }while(@@ 1); return(head); } intmain() { structbook*@@ head; inti; int*@@ num; num=@@ (int*)malloc(@@ 26@@ *sizeof(int)); for(i=0;i<26;i++) *(@@ num@@ +i)@@ =0; scanf("%d",&n); head=@@ create@@ (); structbook@@ *p; char*@@ s; p=head; while(p) { for(@@ s=@@ p->@@ author@@ ;*@@ s@@ !='\0'@@ ;s++) { inttemp; temp@@ =*@@ s@@ -'A'; (*(@@ num@@ +@@ temp@@ ))@@ ++; } p=p->next; } for(i=0;i<26;i++) { if(*(@@ num@@ +i)@@ >max@@ )@@ max@@ =*(@@ num@@ +i); } for(i=0;i<26;i++) { if(*(@@ num@@ +i)@@ ==@@ max@@ )break; } printf("%c\n%d\n",@@ 'A'+@@ i,@@ max); c@@ ='A'+i; p=head; while(p) { for(@@ s=@@ p->@@ author@@ ;*@@ s@@ !='\0'@@ ;s++) { if(*@@ s@@ ==@@ c@@ )break; } if(*@@ s@@ !=@@ '\0')@@ printf("%d\n",p->@@ ID); p=p->next; } }  
c -1
h -1
intmain() { intn,m,@@ i,j,@@ shu@@ [100][100],@@ hang@@ =1,@@ lie@@ =1,@@ count,@@ mark@@ ,@@ zddjx@@ ,@@ duijiao@@ ,@@ jh@@ =1,@@ jl@@ =1; cin>>n>>m; count=@@ n*@@ m; for(i=1;i<=n;i++) { for(j=1;j<=m;j++) { cin>>@@ shu@@ [i][j]; } } if(n==1) { for(j=1;j<=m;j++) { cout<<@@ shu@@ [1]@@ [j]<<endl; } } if(n==1) { return0; } if(m==1) { for(j=1;j<=n;j++) { cout<<@@ shu@@ [j]@@ [1]@@ <<endl; } return0; } if(m==1) { return0; } cout<<@@ shu@@ [@@ hang@@ ][@@ lie@@ ]<<endl; duijiao@@ =@@ hang@@ +@@ lie@@ ; count@@ --; while(@@ count@@ !=0) { duijiao@@ ++; hang@@ =@@ jh@@ ; lie@@ =@@ duijiao@@ -@@ hang@@ ; if(@@ lie@@ ==@@ m) { jh@@ ++; } while(@@ lie@@ >=@@ jl@@ ) { cout<<@@ shu@@ [@@ hang@@ ][@@ lie@@ ]<<endl; count@@ --; hang@@ ++; lie@@ --; } if(@@ hang@@ ==@@ n@@ +1) { jl@@ ++; } } return0; }  
c -1
h -1
0

intmain(){ inta[@@ 110][110@@ ]; intnum,@@ sum=0; intk,m,n,i,j,@@ l; cin>>k; for(l=0;l<@@ k;@@ l++) { sum=0; cin>>m>>n; for(i=0;i<m;i++) { for(j=0;j<n;j++) { cin>>num; a[i]@@ [j]=@@ num; } } for(i=0;i<n;i++) { sum=sum+@@ a[0][i]; } for(i=1;i<m;i++) { sum=sum+@@ a[i][n-1]; } for(i=1;i<m;i++) { sum=sum+@@ a[i][0]; } for(i=1;i<n-1;i++) { sum=sum+@@ a[m-1]@@ [i]; } cout<<sum<<endl; } return0; }  
c -1
h -1
intmain(){ inta[@@ 20001@@ ]={0}; intn; cin>>n; for(inti=1;i<=@@ n;i++){ cin>>a[i]; } for(inti=1;i<=@@ n;i++){ for(intj=1;j<=@@ i;j++){ if(i!=@@ 1@@ &&@@ a@@ [j-1@@ ]==@@ a[i])@@ a[i]=0; } } for(inti=1;i<=@@ n;i++){ if(i!=@@ 1@@ &&a[i]@@ !=0)@@ cout<<""<<a[i]; elseif(@@ i@@ ==1)@@ cout<<a[i]; } return0; }  
c -1
h -1
0

intmain() {@@ intn,k,@@ i=0,j=0,@@ flag=0; int@@ str@@ [1000]; scanf("%d%d",&n,&k); for(i=0;i<n;i++) scanf("%d",&@@ str[i]); i=0; for(i=0;i<n@@ /2@@ +1;i++) {@@ j=0; for(j=0;j<n;j++) { if((@@ k-@@ str@@ [j]@@ )==@@ str@@ [i]) {@@ flag=1; break; } } if(flag==1) { printf("yes"); break; } } if(flag==0) printf("no"); return0; }  
c -1
h -1
main() { int@@ t@@ =-1,@@ u@@ =-1,@@ e@@ =-1,@@ c=0; char@@ st@@ [300@@ ]={'@@ 0'@@ }; char@@ su@@ [300@@ ]={'@@ 0'@@ }; char@@ re@@ [300@@ ]={'@@ 0'@@ }; inti,j,@@ m=0,@@ b=1; for(i=0;@@ st@@ [i-1]@@ !=@@ '\n@@ '@@ ;i++) { scanf("%@@ c@@ ",&@@ st@@ [i]); } for(i=0;@@ su@@ [i-1]@@ !=@@ '\n@@ '@@ ;i++) { scanf("%@@ c@@ ",&@@ su@@ [i]); u@@ ++; } for(i=0;@@ re@@ [i-1]@@ !=@@ '\n@@ '@@ ;i++) { scanf("%@@ c@@ ",&@@ re@@ [i]); e++; } for(i=0;@@ st@@ [i]!='\0';i++) { if(@@ st@@ [i]==@@ su@@ [0]) { m=i; b=1; for(j=1;j<@@ u@@ ;j++) { if(@@ su@@ [j]!=@@ st@@ [m@@ +j@@ ]) { b=0; break; } } if(b==1) { for(i=m;i<@@ m+@@ u@@ ;i++) st@@ [i]=@@ re@@ [i-@@ m]; c=1; } if(c@@ ==1) break; } } printf("%s",@@ st@@ ); }  
c -1
h -1
0

intmain() { intn,@@ amount@@ [26],@@ num[@@ 26@@ ][@@ 1000],@@ num0@@ ,@@ max=0; char@@ a; memset(@@ amount@@ ,0,sizeof(@@ amount@@ )); cin>>n; for(inti=0;i<n;i++) { cin>>@@ num0@@ ; cin.get(); a=@@ cin.get(); while(@@ a@@ !=@@ '\n@@ ') { num[@@ a@@ -65@@ ][@@ amount@@ [a@@ -65@@ ]@@ ]=@@ num0@@ ; amount@@ [a@@ -65]++; a=@@ cin.get(); } } for(inti=0;i<@@ 26;i++) if(max<@@ amount@@ [i]) max=@@ amount@@ [i]; for(inti=0;i<@@ 26;i++) if(max@@ ==@@ amount@@ [i]) { a@@ =i+65; cout<<@@ a@@ <<endl@@ <<@@ max<<endl; for(intj=0;j<@@ max@@ ;j++) cout<<num@@ [i][j]<<endl; break; } return0; }  
c -1
h -1
intmain() { structpatient@@ {@@ charid@@ [10@@ ];@@ int@@ a;@@ }@@ patients@@ [100]; struct@@ old@@ {@@ char@@ ido@@ [10@@ ];@@ int@@ ao@@ ;@@ }@@ olds@@ [100]; struct@@ young@@ {@@ char@@ idy@@ [10@@ ];@@ int@@ ay@@ ;@@ }@@ youngs@@ [100]; intn,@@ y=0,@@ o@@ =0,@@ so@@ =0,@@ sy@@ =0,@@ e; scanf("%d",&n); char@@ f@@ [10]; for(intj=0;j<n;j++) { scanf("%s",@@ patients@@ [j].@@ id); scanf("%d",&@@ patients@@ [j].@@ a); if(@@ patients@@ [j].@@ a@@ <60) { strcpy(@@ youngs@@ [y@@ ].@@ idy@@ ,@@ patients@@ [j].@@ id); youngs@@ [y@@ ].@@ ay@@ =@@ patients@@ [j].@@ a; y++; } if(@@ patients@@ [j].@@ a@@ >=60) { strcpy(@@ olds@@ [@@ o@@ ].@@ ido@@ ,@@ patients@@ [j].@@ id); olds@@ [@@ o@@ ].@@ ao@@ =@@ patients@@ [j].@@ a; o@@ ++; } } for(int@@ r=@@ o@@ -1;@@ r@@ >0@@ ;r@@ --) { for(inti=0;i<@@ r;i++) { if(@@ olds@@ [i].@@ ao@@ <@@ olds@@ [i+1].@@ ao@@ ) { e=@@ olds@@ [i+1].@@ ao@@ ; olds@@ [i+1].@@ ao@@ =@@ olds@@ [i].@@ ao@@ ; olds@@ [i].@@ ao@@ =@@ e; strcpy(@@ f,@@ olds@@ [i+1].@@ ido@@ ); strcpy(@@ olds@@ [i+1].@@ ido@@ ,@@ olds@@ [i].@@ ido@@ ); strcpy(@@ olds@@ [i].@@ ido@@ ,@@ f); } } } for(intl@@ =0;@@ l@@ <=@@ o@@ -1;@@ l++) { printf("%s\n",@@ olds@@ [l@@ ].@@ ido@@ ); } for(intm=0;m@@ <=@@ y@@ -1@@ ;m++) { printf("%s\n",@@ youngs@@ [m@@ ].@@ idy@@ ); } return0; }  
c -1
h -1
0

intmain() { intn,i,@@ m,@@ d; scanf("%d%d%d",&@@ n,&@@ m,&d); int@@ a=@@ d; for(i=1;i<=@@ m-1@@ ;i++){ if(i==1||i==3||i==5||i==7||i==8||i==10@@ ){ a@@ +=@@ 31; } elseif(i==@@ 4||i==6||i==9||i==@@ 11@@ ){ a@@ +=@@ 30; } else{ if((@@ n@@ %@@ 100==0&&@@ n@@ %@@ 400@@ !=0)@@ ||@@ n@@ %@@ 4@@ !=0){ a@@ +=@@ 28; } else{ a@@ +=@@ 29; } } } printf("%d",@@ a); return0; }  
c -1
h -1
voidmain() { inta[@@ 20@@ ][@@ 16],@@ s[@@ 20@@ ]={0},@@ i,j,k,@@ p=0,@@ n[@@ 20@@ ]={0}; for(i=0;i<@@ 20@@ ;i++) { scanf("%d",&a[i]@@ [0]); if(a[i]@@ [0]@@ ==-1)break; p=p@@ +1; for(j=1;j<@@ 16@@ ;j++) { scanf("%d",&a[i][j]); if(a[i][j]@@ ==0)break; s[i]=@@ s[i]@@ +1; } } for(i=0;i<p@@ ;i++) for(j=0;j<=@@ s[i]@@ ;j++) for(k=0;k<=@@ s[i]@@ ;k++) if(a[i][j]==@@ 2*@@ a[i][k]@@ )@@ n[i]=@@ n[i]@@ +1; for(i=0;i<p@@ ;i++) printf("%d\n",n@@ [i]); }  
c -1
h -1
0

intmain(){ intlen1,len2,@@ i,@@ same@@ =0; double@@ rate@@ ,@@ z; char@@ DNA@@ [2][@@ 600]; scanf("%lf",&@@ rate@@ ); scanf("%s%s",@@ DNA@@ [0],@@ DNA@@ [1]); len1=strlen(@@ DNA@@ [0]); len2=strlen(@@ DNA@@ [1]); if(len1!=@@ len2){ printf("error"); return0; } else{ for(i=0;i<len1;i++){ if(((@@ DNA@@ [0]@@ [i]!='A')&&(@@ DNA@@ [0]@@ [i]!='G')@@ &&(@@ DNA@@ [0]@@ [i]!='C')&&(@@ DNA@@ [0]@@ [i]!='T')@@ )||((@@ DNA@@ [1]@@ [i]!='A')&&(@@ DNA@@ [1]@@ [i]!='G')@@ &&(@@ DNA@@ [1]@@ [i]!='C')&&(@@ DNA@@ [1]@@ [i]!='T')@@ )){ printf("error"); return0; } else{ if(@@ DNA@@ [0]@@ [i]==@@ DNA@@ [1]@@ [i]) same@@ ++; } } z@@ =(@@ 1.0*@@ same@@ )@@ /@@ len1; if(z@@ >=@@ rate@@ ) printf("yes"); elseprintf("no"); } return0; }  
c -1
h -1
voidprint@@ (inta[],int@@ x) { inti; printf("%d",a[0]); for(i=1;i<@@ x;i++) printf("%d",a[i]); } voidpaixu@@ (inta[],int@@ x) { inti,j,@@ m; for(i=0;i<x;i++) for(j=i+1;j<@@ x;j++) { if(a[i]>a[j]) { m=@@ a[i]; a[i]=a[j]; a[j]=@@ m; } } print@@ (a,@@ x); } void@@ scan@@ (int@@ t) { intm,n,@@ a[@@ 10],@@ i; scanf("%d%d",&m,&n); for(i=0;i<m;i++) { scanf("%d",&a[i]); } paixu@@ (a,m); printf(""); for(i=0;i<n;i++) { scanf("%d",&a[i]); } paixu@@ (a,@@ n); } voidmain() { scan@@ (@@ 0); }  
c -1
h -1
0

main() { intn,@@ t,@@ i,j,@@ h,@@ k,@@ b[@@ 25],@@ a[@@ 25]; k=1; t=@@ n-1; scanf("%d",&n); for(i=0;i<n;i++) scanf("%d",&a[i]); for(i=0;i<n;i++) b[i]=1; for(i=n-2;i>=0;i--) { for(j=i+1;j<n;j++) { if(a[i]>=a[j]) { t@@ =j; b[i]=b[j]+1; for(h@@ =j@@ ;@@ h@@ <n;@@ h++) { if(a[i]>=@@ a[h@@ ]@@ &&@@ b[@@ h@@ ]>@@ b[t@@ ]) { b[i]=@@ b[@@ h@@ ]+1; t=@@ h; } } if(k@@ <@@ b[i]) { k=@@ b[i]; } break; } } } printf("%d",k); }  
c -1
h -1
voidmain() { inta,b,@@ c,d,@@ i; int@@ j=1; while(j@@ <=@@ 5) { scanf("%d%d%d",&a,&b,&c); i=1; d=0; while(i<@@ b) { if(i==1||i==3||i==5||i==7||i==8||i==@@ 10) d=d+@@ 31; elseif(i==@@ 2) { if(a%@@ 4==0&&a%100!=0@@ ||a%@@ 400==0) d=d+@@ 29; else@@ d=d+@@ 28; } elseif(i==@@ 4||i==6||i==9||i==@@ 11@@ )@@ d=d+@@ 30; i=i+1; } d=d@@ +c; printf("%d\n",@@ d); j++; } }  
c -1
h -1
0

int@@ cut@@ (intm,int@@ l@@ ){ intsum@@ =1; for(inti=@@ l@@ ;i<=sqrt(@@ (double)@@ m/@@ l@@ );i++){ if((@@ m/@@ l@@ )@@ %i==0){ sum+=@@ cut@@ (m@@ /@@ l,@@ i); } } returnsum; } intmain(){ intn; cin>>n; for(inti=0;i<n;i++){ intt=0; cin>>t; cout<<@@ cut@@ (@@ 2*@@ t,@@ 2); if(i<@@ n-1)@@ cout<<endl; } }  
c -1
h -1
structstudent { intnum; int@@ all@@ ; }@@ person@@ [@@ 99999@@ ]; intmain() { intn,i,j,k,@@ x,@@ y@@ ;@@ ; structstudent@@ temp1@@ ,@@ temp2@@ ; scanf("%d",&n); for(i=2@@ ;i>=0;i--) { scanf("%d%d%d",&@@ person@@ [i].num,&@@ x,&@@ y); person@@ [i].@@ all=@@ x+@@ y; } for(i=@@ 3@@ ;i<=@@ n-1;i++) { scanf("%d%d%d",&@@ person@@ [i].num,&@@ x,&@@ y); person@@ [i].@@ all=@@ x+@@ y; k=@@ person@@ [i].@@ all@@ ; if(k@@ >@@ person@@ [0].@@ all@@ ){@@ temp1@@ =@@ person@@ [0]@@ ;@@ temp2@@ =@@ person@@ [1]@@ ;@@ person@@ [0]=@@ person@@ [i];@@ person@@ [1]=@@ temp1@@ ;@@ person@@ [2]=@@ temp2@@ ;@@ continue;} if(k@@ <=@@ person@@ [0].@@ all@@ &&k@@ >@@ person@@ [1].@@ all@@ ){@@ temp1@@ =@@ person@@ [1]@@ ;@@ person@@ [1]=@@ person@@ [i];@@ person@@ [2]=@@ temp1@@ ;@@ continue;} if(k@@ <=@@ person@@ [1].@@ all@@ &&k@@ >@@ person@@ [2].@@ all@@ ){@@ person@@ [2]=@@ person@@ [i];@@ continue;} if(k@@ <@@ person@@ [2].@@ all@@ ){@@ continue;} } printf("%d%d\n",@@ person@@ [0].@@ num,@@ person@@ [0].@@ all@@ ); printf("%d%d\n",@@ person@@ [1].@@ num,@@ person@@ [1].@@ all@@ ); printf("%d%d",@@ person@@ [2@@ ].num,@@ person@@ [2].@@ all@@ ); return0; }  
c -1
h -1
0

intmain() { int@@ row@@ =0,@@ col@@ =0; cin>>row>>col; inta[100][100]; memset@@ (a@@ ,'@@ 0@@ ',@@ sizeof(a)); for(inti=0;i<row;i++) { for(intj=0;j<col;j++) { cin>>a[i][j]; } } int(*p)@@ [100@@ ]=a; for(inti=0;i<@@ row+col@@ -1;i++) { if(i@@ <col) { for(intj=0;j<=@@ row@@ ;j++) { if(i@@ -j@@ <col@@ &&j@@ <row@@ &&j>=0@@ &&i@@ -j@@ >=0) {@@ cout<<@@ *(*(p@@ +j)@@ +i-j@@ )@@ <<endl;} } } else { for(intj=1;j<@@ row@@ ;j++) { if(i@@ -j@@ <col@@ &&j@@ <row@@ &&i@@ -j@@ >=0@@ &&j@@ >=0) {@@ cout<<@@ *(*(p@@ +j)@@ +i-j@@ )@@ <<endl;} } } } return0; }  
c -1
h -1
intmain() { chars[@@ 300],@@ a[@@ 300],b[@@ 300]; int@@ x=0; gets(s); gets(a); gets(b); int@@ sl@@ =strlen(s); int@@ al@@ =strlen(a); int@@ bl@@ =strlen(b); for(inti=0;i<@@ sl@@ ;i++) { if((@@ a[0]@@ ==@@ s[i]@@ &&@@ a[@@ al@@ -2@@ ]==@@ s@@ [i+@@ al@@ -2@@ ])@@ &&@@ x@@ ==0) { for(int@@ w@@ =0;@@ w@@ <@@ bl@@ ;@@ w@@ ++) { printf("%c",@@ b[@@ w@@ ]); } i@@ +=@@ al@@ -1; x=1; } else { printf("%c",s[i]); } } return0; }  
c -1
h -1
0

intmain() { intn,i,j,k; cin>>n; inta[@@ 20001]; for(i=0;i<n;i++) { cin>>a[i]; } for(i=0;i<n;i++) { k=0; if(i==0) cout<<a[i]; for(j=0;j<i;j++) { if(a[i]==a[j]) k++; } if(k@@ ==0&&@@ i@@ !=0) cout<<""<<a[i]; } return0; }  
c -1
h -1
intmain() { intn,i,j,k,@@ l=0; cin>>n; inta[n]; for(i=0;i<n;i++) cin>>a[i]; for(i=0;i<n;i++) for(j=n-1;j>i;j--) {@@ if(a[i]==0) break; if(a[j]==a[i]) {@@ for(k=j@@ ;k<@@ n;k++) a[k]=a[k@@ +1]; a[k]@@ =0; l=l@@ +1; } } for(i=0;i<n-@@ l@@ ;i++) {@@ if(i==0) cout<<a[i]; else cout<<""<<@@ a[i];} return0; }  
c -1
h -1
1


int@@ matrix@@ [100][100],@@ row,col; void@@ display@@ (int@@ step@@ ) { intx,y,@@ i; if(@@ step@@ >@@ row+col@@ -1)@@ return; if(@@ step@@ <col) { y=@@ step@@ -1; for(i=y@@ ;i>=0@@ &&@@ y@@ -i@@ <row@@ ;i--) cout<<@@ matrix@@ [y@@ -i@@ ]@@ [i]<<endl; } else { x=@@ step@@ -@@ col; for(i=x@@ ;i<@@ row@@ &&@@ col-1@@ +@@ x@@ -i@@ >=0@@ ;i++) cout<<@@ matrix@@ [i]@@ [@@ col-1@@ +@@ x@@ -i@@ ]<<endl; } display@@ (@@ step@@ +1); } intmain() { inti,j; cin>>row>>col; for(i=0;i<row;i++) for(j=0;j<col;j++) cin>>@@ *(*(@@ matrix@@ +i)@@ +j); display@@ (@@ 1); }  
c -1
h -1
inta[@@ max@@ ],@@ k; int@@ find@@ (int@@ p) { inti,@@ temp@@ =0,@@ t; if(p==@@ k@@ -1)@@ return1; for(i=@@ p@@ +1;i<=@@ k-1;i++) { if(a[@@ p@@ ]>=@@ a[i]) { t=@@ find@@ (i); if(temp@@ <@@ t)@@ temp=@@ t; } } return@@ temp@@ +1; } main() { inti,j,@@ p=0,@@ t,@@ ans=0; scanf("%d",&k); for(i=0;i<=k-1;i++) scanf("%d",&a[i]); for(i=0;i<=k-1;i++) { t=@@ find@@ (i); if(@@ ans@@ <@@ t)@@ ans=@@ t; } printf("%d",@@ ans); }  
c -1
h -1
0

intmain(intargc,char*argv[]) { inta,b,c; scanf("%d%d%d",&a,&b,&c); if(a%@@ 4==0&&@@ a%@@ 100@@ >0@@ ||a%@@ 400==0) { intsum=0,@@ i; for(i=1;i<@@ b;i++) { if(i==1||i==3||i==5||i==7||i==8||i==@@ 10) { sum+=@@ 31; } elseif(i==@@ 2) { sum+=@@ 29; } else { sum+=@@ 30; } } sum+=@@ c; printf("%d\n",sum); } else { intsum=0,@@ i; for(i=1;i<@@ b;i++) {@@ if(i==1||i==3||i==5||i==7||i==8||i==@@ 10) { sum+=@@ 31; } elseif(i==@@ 2) { sum+=@@ 28; } else { sum+=@@ 30; } } sum+=@@ c; printf("%d\n",sum); } return0; }  
c -1
h -1
intmain() { intn@@ ,*@@ a,*@@ b,@@ i,j,@@ flag=0; scanf("%d\n",&n); a=@@ (int*)malloc(n*sizeof(int)); b=@@ (int*)malloc(n*sizeof(int)); for(i=0;i<n;i++){@@ scanf("%d",a@@ +i@@ );@@ b[i]@@ =0;} for(i=n-1;i>=0;i--) { for(j=i-1@@ ;j>=0@@ ;j--@@ )@@ if(a[i]==@@ a[j])@@ b[i]=@@ b[i]@@ +1; } for(i=0;i<n;i++) { for(j=i;j<@@ n@@ ;j++){@@ if(b[j]@@ ==0)@@ flag@@ =@@ flag@@ +1;} if(b[i]@@ ==0){@@ printf("%d",a[i]); if(flag@@ >1@@ )@@ printf("@@ ");} flag=0; } return0; }  
c -1
h -1
0

voidmain() { structbook { intnum; charauthor@@ [27]; structbook*next; }@@ *head@@ =0@@ ,*@@ p1,*p2; int@@ total@@ ,i,j,@@ sumbook@@ [26]={0},@@ len,@@ max; scanf("%d",&@@ total); for(i=0;i<@@ total@@ ;i++) { p1=(structbook@@ *)malloc(sizeof(structbook)); if(@@ p1@@ ==0) { printf("@@ Memory@@ request@@ failed@@ !\@@ n@@ "); exit@@ (@@ -1); } scanf("%d%s",&p1->num,p1->@@ author); len=strlen(@@ p1->@@ author); for(j=0;j<len;j++) sumbook@@ [@@ p1->@@ author@@ [j]@@ -'A']++; if(head@@ ) p2->next=p1; else head=p1; p2=p1; } p1->next@@ =0; len@@ =0; for(i=0;i<26;i++) { if(@@ sumbook@@ [i]>@@ len@@ ) { len@@ =@@ sumbook@@ [i]; max=i; } } printf("%c\n%d\n",@@ max@@ +'A',@@ sumbook@@ [max@@ ]); max@@ +=@@ 'A'@@ ; for(p1=@@ head;@@ p1@@ ;@@ p1=p1->next) { len=strlen(@@ p1->@@ author); for(i=0;i<len;i++) { if(p1->@@ author@@ [i]==@@ max) { printf("%d\n",@@ p1->num); break; } } } }  
c -1
h -1
intmain() { intn,i,j,@@ temp; char@@ t@@ [10]; scanf("%d",&n); int@@ y[@@ n]; charid@@ [n@@ ][10]; for(i=0;i<n;i++) scanf("%s%d",@@ id[i],&@@ y@@ [i]); for(i=1;i<n;i++) { if(y@@ [i]@@ >=60) {@@ for(j=i@@ ;j>0;j--) if(y@@ [j-1]@@ <@@ y@@ [j]) { temp=@@ y@@ [j]; y@@ [j]=@@ y@@ [j-1]; y@@ [j-1]=@@ temp; strcpy(@@ t,@@ id@@ [j]); strcpy(id@@ [j],@@ id@@ [j-1]); strcpy(id@@ [j-1@@ ],@@ t); } } } for(i=0;i<n;i++) printf("%s\n",@@ id[i]); }  
c -1
h -1
0

intmain(intargc,char*argv[]) { intk,@@ n,i,j,@@ b,@@ t=0,@@ a[1000]; scanf("%d%d",&@@ n,@@ &@@ k); for(i=0;i<n;i++){ scanf("%d",&a[i]); } for(i=0;i<n-1;i++){ for(j=i+1;j<n;j++){ b=@@ a[i]+a[j]; if(k==@@ b){ t=1; break; } } if(t@@ ==1)break; } if(t@@ ==1){ printf("yes"); } if(t@@ ==0){ printf("no"); } return0; }  
c -1
h -1
intmain() { intn,k,@@ flag; intnum[@@ 1000]; inti=0,@@ j; cin>>n>>k; while(i<n) { i++; cin>>num[i]; } for(i=0;i<n;i++) { for(j=i;j<@@ n;j++) { if(num@@ [i]+@@ num@@ [j]==k) { cout<<"yes@@ "<<endl; flag=0; i=@@ n; j=@@ n; break; } } } if(flag) cout<<"no@@ "<<endl; }  
c -1
h -1
1


structbook { intnum; char@@ aut@@ [26]; }b[@@ 999]; voidmain() { inti,j,@@ m,n,@@ k,@@ max,@@ p; inta[@@ 26]={0},@@ q@@ [@@ 999@@ ]={0}; scanf("%d",&m); for(i=0;i<m;i++) scanf("%d%s",&@@ b[i].@@ num,@@ b[i].@@ aut@@ ); for(i=0;i<m;i++) { n=strlen(@@ b[i].@@ aut@@ ); for(j=0;j<n;j++) { k=@@ b[i].@@ aut@@ [j]; a[k@@ -65]++; } } for(i=1@@ ,@@ max=@@ a[@@ 0],@@ p@@ =0;i<@@ 26;i++) { if(a[i]>max) { p=i; max=a[i]; } } printf("%c@@ \n@@ %d",@@ p@@ +65@@ ,max); for(i=0;i<m;i++) { n=strlen(@@ b[i].@@ aut@@ ); for(j=0;j<n;j++) if(b[i].@@ aut@@ [j]==@@ (p@@ +65@@ )) q@@ [i]=1; } for(i=0;i<m;i++) if(q@@ [i]@@ ==1) printf("\n%d",@@ b[i].@@ num); }  
c -1
h -1
int@@ dingwei@@ (char@@ duan@@ [50@@ ],@@ char@@ chang@@ [50@@ ]) { inti,@@ geshu1@@ =0,@@ geshu2@@ =0; for(i=0;@@ duan@@ [i]!='\0';i++){ geshu1@@ +=1; } for(i=0;@@ chang@@ [i]!='\0';i++){ geshu2@@ +=1; } intj,@@ cishu@@ =0,@@ weizhi@@ =0; for(i=0;i<=@@ (@@ geshu2@@ -@@ geshu1@@ );i++){ for(j=0;j<@@ geshu1@@ ;j++){ if(@@ duan@@ [j]==@@ chang@@ [i]){ cishu@@ ++; i++; }else{ break; } } if(@@ cishu@@ ==@@ geshu1@@ ){ weizhi@@ =i@@ -@@ geshu1@@ ; break; }else{ cishu@@ =0; continue; } } if(@@ cishu@@ ==0){ return-1; }else{ return@@ weizhi@@ ; } } intmain() { charzfc@@ [300],@@ beiti@@ [256],@@ ti@@ [256]; scanf("%s%s%s",@@ zfc@@ ,@@ beiti@@ ,@@ ti@@ ); int@@ lenzfc@@ ,@@ lenbt@@ ,@@ lent@@ ,@@ weizhi@@ ,i; lenzfc@@ =strlen(@@ zfc); lenbt@@ =strlen(@@ beiti@@ ); lent@@ =strlen(@@ ti@@ ); weizhi@@ =@@ dingwei@@ (@@ beiti@@ ,@@ zfc); if(@@ weizhi@@ <0@@ ){ printf("%s\n",@@ zfc); }else{ if(@@ lenbt@@ ==@@ lent@@ ){ for(i=0;i<@@ lenbt@@ ;i++){ zfc@@ [@@ weizhi@@ +i]=@@ ti@@ [i]; } } elseif(@@ lenbt@@ >@@ lent@@ ){ for(i=0;i<@@ lent@@ ;i++){ zfc@@ [@@ weizhi@@ +i]=@@ ti@@ [i]; } for(i=0;i<(@@ lenzfc@@ -@@ lenbt@@ -@@ weizhi@@ );i++){ zfc@@ [@@ weizhi@@ +@@ lent@@ +i]=@@ zfc@@ [@@ weizhi@@ +@@ lenbt@@ +i@@ ]; } zfc@@ [@@ lenzfc@@ -@@ lenbt@@ +@@ lent@@ ]='\0'; }elseif(@@ lenbt@@ <@@ lent@@ ){ for(i=@@ lenzfc@@ -1@@ ;i@@ >=@@ weizhi@@ +@@ lenbt@@ ;i--){ zfc@@ [i+@@ lent@@ -@@ lenbt@@ ]=@@ zfc@@ [i]; } for(i=0;i<@@ lent@@ ;i++){ zfc@@ [@@ weizhi@@ +i]=@@ ti@@ [i]; } zfc@@ [@@ lenzfc@@ +@@ lent@@ -@@ lenbt@@ ]='\0'; } printf("%s\n",@@ zfc); } return0; }  
c -1
h -1
0

intmain() { intn,k,@@ a[1000],@@ i,@@ m,@@ s; scanf("%d%d",&n,&k); for(i=0;i<n;i++) { scanf("%d",&a[i]); } for(i=0;i<n;i++) { for(m=0;m@@ <n;m++) { if((@@ a[i]+@@ a[m@@ ])@@ ==@@ k@@ &&a[i]@@ !=@@ a[m@@ ]) { s=1; } } } if(s@@ ==1) { printf("yes"); } else { printf("no"); } return0;}  
c -1
h -1
voidinput@@ (intm,@@ intn,@@ inta[@@ 300@@ ],intb[@@ 300@@ ]) { inti=0,j=0; scanf("%d%d",&m,&n); for(i=0;i<m;i++) {@@ scanf("%d",&a[i]); } for(j=0;j<n;j++) { scanf("%d",&@@ b[j]); } } void@@ row@@ (inta[@@ 300@@ ]) { inti,j,t; for(i=0;i<@@ 300@@ ;i++) { for(j=i+1;j<@@ 300@@ ;j++) { if((a[j]@@ <@@ a[i]@@ )&&(@@ a[j]@@ !=0)) { t=a[j]; a[j]=@@ a[i]; a[i]=@@ t; } } } } void@@ com@@ (inta[@@ 300@@ ],intb[@@ 300@@ ]) { inti=0,j=0,@@ k; for(i=0;i<@@ 300@@ ;i++) { if(a[i]==0) {@@ k@@ =i;@@ break;} } for(j=0;j<@@ 300@@ ;j++) {@@ if(b[j]@@ !=0) a[k]=@@ b[j]@@ ;k@@ ++; } } voidoutput@@ (inta[@@ 300@@ ]) { inti; for(i=0;i<@@ 300@@ ;i++) { if(a[i]!=0) {@@ printf("%d",a[i]); break;} } i++; for(i@@ ;i<@@ 300@@ ;i++) { if(a[i]!=0) {printf("%d",@@ a[i]);} } } voidmain() { intx,y,@@ a[@@ 300@@ ]={0},b[@@ 300@@ ]={0}; input@@ (@@ x,y,@@ a,b); row@@ (a@@ );@@ row@@ (@@ b); com@@ (a,b); output@@ (a); }  
c -1
h -1
0

intmain(intargc,char*argv[]) { structbook{ intnum; charauthor@@ [27]; }@@ B@@ [1000]; char@@ A@@ ; intm,i,j,@@ a[@@ 26]={0},@@ max; scanf("%d",&m); for(i=0;i<m;i++){ scanf("%d%s",&@@ B@@ [i].@@ num,@@ B@@ [i].@@ author); } for(i=0;i<m;i++){ for(j=0;@@ ;j++){ if(@@ B@@ [i].@@ author@@ [j]@@ ==0) break; else a[@@ B@@ [i].@@ author@@ [j]@@ -65]++; } } max=@@ a[0]; A@@ =@@ 65@@ ; for(i=0;i<26;i++){ if(a[i]@@ >max){ max=a[i]; A@@ =i+65; } } printf("%c@@ \n@@ %d",@@ A@@ ,max); for(i=0;i<m;i++){ for(j=0;@@ ;j++){ if(@@ B@@ [i].@@ author@@ [j]@@ ==0) break; if(@@ B@@ [i].@@ author@@ [j]==@@ A@@ ) printf("\n%d",@@ B@@ [i].num); } } return0; }  
c -1
h -1
voidinput@@ (inta[],intb[]) { inti,@@ m,n; scanf("%d%d",&@@ a[@@ 49@@ ]@@ ,&@@ b[@@ 49@@ ]); m=@@ a[@@ 49@@ ]; n=@@ b[@@ 49@@ ]; for(i=0;i<m;i++) scanf("%d",&a[i]); for(i=0;i<n;i++) scanf("%d",&b[i]); } voidorder@@ (intm,@@ intn,@@ inta[@@ ],intb[@@ ]) { inti,j,t; for(j=0;j<m-1;j++) { for(i=0;i<m@@ -1-j;i++) {@@ if(a[i]>a[i+1]) {t=@@ a[i];@@ a[i]=a[i+1@@ ];@@ a[i+1]=@@ t;} } } for(j=0;j<n-1;j++) { for(i=0;i<n@@ -1-j;i++) {@@ if(b[i]>b[i+1]) {t=@@ b[i]@@ ;@@ b[i]=b@@ [i+1@@ ];@@ b[i+1]=@@ t;} } } } void@@ comb@@ (intm,@@ intn,@@ inta[@@ ],intb[@@ ],int@@ c[@@ ]) { inti; for(i=0;i<m;i++) c[i]=a[i]; for(i=m;i<@@ (@@ m+@@ n@@ );i++) c[i]=b[i-@@ m]; } voidprint@@ (intm,@@ intn,@@ intc[@@ ]) { inti; printf("%d",c@@ [0]); for(i=1;i<@@ (@@ m+@@ n@@ );i++) printf("%d",c[i]); } voidmain() { inta[@@ 50@@ ],b[@@ 50@@ ],@@ c[100]; input@@ (a,b); order@@ (@@ a[@@ 49@@ ],b[@@ 49@@ ],@@ a,b); comb@@ (@@ a[@@ 49@@ ],b[@@ 49@@ ],@@ a,b,c); print(@@ a[@@ 49@@ ],b[@@ 49@@ ],@@ c); }  
c -1
h -1
0

intmain() { inta[@@ 1001]; intn,k,i,@@ sum; int@@ p,q; int@@ control@@ =0; cin>>n>>k; for(i=1;i<=n;i++) {@@ cin>>@@ a[i];} for(p=1@@ ;p@@ <=n;@@ p++) {@@ for(q=@@ n;@@ q@@ >@@ p@@ ;q@@ --) {@@ sum=@@ a[p@@ ]+@@ a[q@@ ]; if(sum@@ ==k) {@@ control@@ =1; break;} } } if(@@ control@@ ==0) cout<<"no"; else@@ cout<<"yes"; return0; }  
c -1
h -1
intmain() { charstr@@ [260],@@ subStr@@ [260],@@ replace@@ [260@@ ]; char*@@ start@@ =@@ str,@@ *@@ node@@ =NULL@@ ,@@ *@@ rep@@ =@@ replace@@ ; int@@ len; cin>>@@ str@@ >>@@ subStr@@ >>@@ replace@@ ; node@@ =@@ strstr(@@ str,@@ subStr@@ ); if(@@ node@@ ==NULL) while(@@ *@@ start@@ !='\0') cout<<@@ *@@ start@@ ++; else { len=strlen(@@ subStr@@ ); while(@@ start@@ !=@@ node@@ ) cout<<@@ *@@ start@@ ++; while(@@ *@@ rep@@ !='\0') cout<<@@ *@@ rep@@ ++; node@@ +=@@ len; while(@@ *@@ node@@ !='\0') cout<<@@ *@@ node@@ ++; } cout<<endl; start@@ =NULL; node@@ =NULL; rep@@ =NULL; return0; }  
c -1
h -1
0

intmain(){ inti,j,@@ s,@@ m,n,@@ k; m=0; intx[@@ 1000],@@ a[@@ 1000],b[1000]; scanf("%d%d",&n,&k); for(i=0;i<n;i++) { scanf("%d",&@@ x[i]); } for(i=0;i<n-1;i++) {@@ for(j=i+1;j<n;j++) {@@ s=@@ x@@ [i]+@@ x@@ [j]; if(s@@ ==k) {@@ printf("yes"); m++; break;} } if(m@@ !=0) break;} if(m==0) printf("no"); return0; }  
c -1
h -1
int@@ comp@@ (@@ chara[100@@ ],@@ char@@ b[100@@ ],int@@ i) { int@@ l@@ ,j; l@@ =strlen(b); for(j=0;j<l;j++) if(a@@ [i+j]!=@@ b[j]) return0; return1; } intmain(intargc,char*argv[]) { inti,j,@@ len1,len2,@@ len3@@ ,@@ break1@@ =0; chara[100@@ ],b[100],@@ c[100]; int@@ comp@@ (@@ chara[100@@ ],@@ char@@ b[100@@ ],int@@ i); scanf("%s%s%s",a,b,c); len1@@ =strlen(a); len2@@ =strlen(b); len3@@ =strlen(c); for(i=0;i<100;i++) { if(a[i]==@@ b[0]) { if(@@ comp@@ (a,b,@@ i@@ )) { for(j=0;j<i;j++) { printf("%c",@@ a[j]); } printf("%s",@@ c); for(j@@ =j@@ +len2@@ ;j<@@ len1@@ -len2@@ +@@ len3@@ ;j++) printf("%c",@@ a[j]); break; break1@@ =1; } } if(@@ break1@@ ==1)break; if(i==@@ strlen(a)@@ )@@ printf("%s",a); } return0; }  
c -1
h -1
0

struct@@ person { charID[10]; intage; }@@ per@@ [100]; intmain() { inti,n,@@ j,@@ k=0,@@ a[100@@ ]={0},@@ num=0,@@ temp1@@ ; char@@ b[100@@ ][@@ 10@@ ]={0},@@ temp2@@ [10@@ ]={0}; scanf("%d",&n); for(i=0;i<n;i++) scanf("%s%d",@@ per@@ [i].@@ ID,&@@ per@@ [i].age); for(i=0;i<n;i++) { if(@@ per@@ [i].age>=60) { a[k]=@@ per@@ [i].age; strcpy(@@ b[k@@ ],@@ per@@ [i].ID); k++; num++; } } for(j=0;j<@@ num@@ ;j++) { for(k=0;k<@@ num@@ -j@@ ;k++) if(a[k]@@ <@@ a[k@@ +1]) { temp1@@ =@@ a[k]; a[k]=a[k@@ +1]; a[k@@ +1]=@@ temp1@@ ; strcpy(@@ temp2@@ ,@@ b[k@@ ]); strcpy(@@ b[k@@ ],b[@@ k@@ +1@@ ]); strcpy(@@ b[k@@ +1],@@ temp2@@ ); } } for(i=0,@@ k=@@ num@@ ;i<n;i++) { if(@@ per@@ [i].age<60) {@@ a[k]=@@ per@@ [i].age; strcpy(@@ b[k@@ ],@@ per@@ [i].ID); k++; num@@ ++;} } for(k=0;k<@@ num@@ -1;k++) printf("%s\n",@@ b[k@@ ]); printf("%s",@@ b[@@ num@@ -1]); }  
c -1
h -1
intmain() { intn,i,k,@@ sum=0; scanf("%d",&n); intx[@@ n]; for(i=0;i<n;i++){ scanf("%d",&@@ x[i]); for(k=0;k<@@ i@@ ;k++){ if(x@@ [k]==@@ x@@ [i]){ i--; n--; break; } } } printf("%d",@@ x@@ [0]); for(i=1;i<n;i++){ printf("%d",@@ x[i]); } return0; }  
c -1
h -1
0

ints; void@@ search@@ (inta,int@@ k) { if(a==0) return; if(a==1) { return; } for(inti=2@@ ;i<@@ a;i++) { if(a@@ %i==0&&@@ a/@@ i@@ >=i@@ &&i@@ >=@@ k@@ &&@@ a/@@ i>=@@ k) { s++; search@@ (a/i,i); } } return; } intmain() { intn,@@ a; cin>>n; for(inti=0;i<n;i++) { s=1; cin>>a; search@@ (a,@@ 1); cout<<s<<endl; } return0; }  
c -1
h -1
intmain(intargc,char*argv[]) { int@@ a@@ =1,@@ i=0,@@ j,k,@@ n=0,@@ zs@@ =0; intnum[@@ 15]; while(@@ a@@ !=@@ -1){ scanf("%d",&a); if(a@@ !=0){ num[i]=@@ a; n++; i++; } else{ for(j=0;j<n;j++){ for(k=0;k<n;k++){ if(num@@ [j]==2*@@ num@@ [k]@@ ){ zs@@ ++;@@ }}} printf("%d\n",@@ zs@@ ); i=0; n=0; zs@@ =0;} } return0; }  
c -1
h -1
0

intmain() { intfenjie@@ (intx,int@@ y); inta,@@ n,@@ i; cin>>n; for(i=1;i<=n;i++) { cin>>a; cout<<@@ fenjie@@ (a,@@ 2)<<endl; } return0; } intfenjie@@ (intx,inty) { intb,@@ i,@@ count@@ =1; if(x==1) return0; if(x==@@ 2) return1; b=@@ sqrt(@@ (double)@@ x); for(i=y@@ ;i<=@@ b;i++) { if(x%i==0) { count+=@@ fenjie@@ (x/i,i); } } returncount; }  
c -1
h -1
static@@ int@@ n1,n2,@@ a[100@@ ]={0},@@ b[100@@ ]={0},@@ d[@@ 200@@ ]={0}; voidf1@@ () { inti; scanf("%d%d",&n1,&n2); for(i=0;i<n1;i++) { scanf("%d",&a[i]); } for(i=0;i<n2;i++) { scanf("%d",&b[i]); } } void@@ pai@@ () { int@@ c,@@ i,j; for(j=0;j<@@ n1@@ ;j++) { for(i=0;i<n1@@ -1;i++) { if(a[i]>a[i+1]) { c=@@ a[i]; a[i]=a[i+1]; a[i+1]=@@ c; } } } for(j=0;j<@@ n2@@ ;j++) { for(i=0;i<n2@@ -1;i++) { if(b[i]>b[i+1]) { c=@@ b[i]; b[i]=b[i+1]; b[i+1]=@@ c; } } } } void@@ he@@ () { inti; for(i=0;i<n1;i++) { d[i]=@@ a[i]; } for(i=@@ n1@@ ;i<@@ n1+@@ n2;i++) { d[i]=@@ b[i-@@ n1@@ ]; } } void@@ shu@@ () { inti; for(i=0;i<n1@@ +@@ n2@@ -1;i++) { printf("%d",@@ d[i]); } printf("%d",@@ d[@@ n1+n2@@ -1]); } voidmain() { f1@@ (); pai@@ (); he@@ (); shu@@ (); }  
c -1
h -1
0

intmain() { int@@ data@@ [@@ 16]; inti,j; int@@ len; int@@ count; while(1) { count=0; scanf("%d",&@@ data@@ [0]); if(@@ data@@ [0]@@ ==-1) break; for(i=1;i<=@@ 15;i++) { scanf("%d",&@@ data@@ [i]); if(@@ data@@ [i]==0) { len@@ =i; break; } } for(i=0;i<=@@ len@@ -1;i++) for(j=0;j<=@@ len@@ -1;j++) count=@@ count@@ +(@@ data@@ [i]==@@ 2*@@ data@@ [j]); printf("%d\n",@@ count); } return0; }  
c -1
h -1
intmain() { inta[@@ 17@@ ]; intn,@@ s; while(cin>>@@ a[1@@ ],@@ a[1]@@ !=-1) { n=1; s=0; while(cin>>@@ a[n@@ +1],@@ a[n@@ +1@@ ]@@ !=0)@@ n++; for(inti=1;i<=n;i++) for(intj=1;j<=@@ n;j++) if(a[i]@@ %@@ a[j]@@ ==0&&@@ a[i]@@ /@@ a[j]==@@ 2) s++; cout<<s<<endl; } return0; }  
c -1
h -1
1


intmain() { intn,@@ x,@@ k,i,j,@@ m=0; scanf("%d%d\n",&n,&@@ k); inta[@@ 1000],b[1000]; scanf("%d",&@@ a[1]); for(i=2;i<=n;i++) { scanf("%d",&a[i]); for(j=1;j<=@@ i-1;j++) { b[j]=@@ a[j]@@ +@@ a[i]; if(b[j]@@ ==@@ k)@@ m=m+1; } } if(m@@ ==0)@@ printf("no"); else@@ printf("yes"); return0; }  
c -1
h -1
main() { inti,j,@@ a[@@ 25],b[@@ 25],@@ c,@@ n; scanf("%d",&n); for(i=0;i<n;i++) scanf("%d",&a[i]); b[0]@@ =1; for(i=1;i<n;i++) { b[i]=1; for(j=0;j<i;j++) { if(((@@ b[j]@@ +1)@@ >@@ b[i]@@ )&&(@@ a[j]@@ >=@@ a[i]@@ )) b[i]=b[j]+1; } } c=0; for(i=0;i<n;i++) { if(b[i]>@@ c) c=@@ b[i]; } printf("%d\n",@@ c); }  
c -1
h -1
0

voidmain() { char*@@ p1,*p2,*@@ p3@@ ,*@@ p,*@@ q; inti,j,k; p1@@ =(char*)malloc(@@ 100@@ *@@ sizeof(@@ char@@ )); p2@@ =(char*)malloc(@@ 100@@ *@@ sizeof(@@ char@@ )); p3@@ =(char*)malloc(@@ 100@@ *@@ sizeof(@@ char@@ )); q@@ =(char*)malloc(@@ 100@@ *@@ sizeof(@@ char@@ )); gets(@@ p1); gets(@@ p2@@ ); gets(@@ p3@@ ); p=strstr(@@ p1,@@ p2@@ ); if(p@@ ==0)@@ printf("%s",@@ p1); else{ for(i=0;@@ *(@@ p1@@ +i)@@ !='\0';i++) { *(q@@ +i)@@ =*(@@ p1@@ +i); if(@@ p1@@ +i@@ ==@@ p@@ )break; } for(j=0;@@ *(@@ p3@@ +j)@@ !='\0';j++) *(q@@ +i@@ +j)@@ =*(@@ p3@@ +j); for(k=i+@@ strlen(@@ p2@@ );@@ *(@@ p1@@ +k)@@ !='\0'@@ ;k++@@ ,j@@ ++) *(q@@ +i@@ +j)@@ =*(@@ p1@@ +@@ k); *(q@@ +i@@ +j)@@ ='\0'; printf("%s",@@ q@@ );} }  
c -1
h -1
struct { int@@ ID@@ [100000],@@ Chinese@@ [100000],@@ Maths@@ [100000]; }@@ stu@@ ; intmain() { intn,i,@@ sum[@@ 100000],@@ max1@@ =0,@@ max2@@ =0,@@ max3@@ =0,@@ num1,num2@@ ,@@ num3@@ ; scanf("%d",&n); for(i=0;i<n;i++){ scanf("%d%d%d",&@@ stu.@@ ID@@ [i],&@@ stu.@@ Chinese@@ [i],&@@ stu.@@ Maths@@ [i]); } i=0; while(@@ stu.@@ ID@@ [i]@@ >0){ sum[i]=@@ stu.@@ Chinese@@ [i]+@@ stu.@@ Maths@@ [i]; i++; } i=0; while(i<@@ n){ if(sum[i]>@@ max1@@ ){ max1=@@ sum[i]; num1@@ =i; } i++; } i=0; while(i<@@ n){ if(sum[i]>@@ max2@@ &&@@ sum@@ [i]<=@@ max1@@ &&i!=@@ num1@@ ){ max2=@@ sum[i]; num2@@ =i; } i++; } i=0; while(i<@@ n){ if(sum[i]>@@ max3@@ &&@@ sum@@ [i]<=@@ max2@@ &&i!=@@ num2@@ &&i!=@@ num1@@ ){ max3=@@ sum[i]; num3@@ =i; } i++; } printf("%d%d\n%d%d\n%d@@ %d",@@ stu.@@ ID@@ [@@ num1@@ ],@@ max1,@@ stu.@@ ID@@ [@@ num2@@ ],@@ max2@@ ,@@ stu.@@ ID@@ [@@ num3@@ ],@@ max3@@ ); return0; }  
c -1
h -1
0

intmain() { inta[@@ 15@@ ]={0},@@ n; while(1) { n=0; for(inti=0;i<=@@ 15;i++) { cin>>a[i]; if(a[i]@@ ==0||@@ a[i]@@ ==-1) break; } for(intj=0;j<=@@ 15@@ ;j++) { if(a[j]@@ ==0||@@ a[j]==@@ -1) break; for(intk@@ =j+1@@ ;k<=@@ 15@@ ;k++) { if(a[k]@@ ==0) break; elseif(@@ a[k]@@ *2==@@ a[j]||@@ a[j]@@ *2==@@ a[k]) n++; } } if(a[0]@@ !=-1) { cout<<n<<endl; for(inti=0;i<=@@ 15;i++) a[i]=0; n=0; } else break; } return0; }  
c -1
h -1
intmain(){ intn; cin>>n; inta[@@ 20000],@@ i,@@ t,@@ k=0,@@ h; for(i=0;i<n;i++) cin>>a[i]; for(i=0;i<n;i++) for(t@@ =i+1@@ ;t@@ <@@ n-@@ k;@@ t++) if(a[i]==@@ a[t@@ ]){ for(@@ h=@@ t;@@ h@@ <@@ n-@@ k@@ -1;@@ h++) a[h@@ ]=a[@@ h@@ +1]; k++; t@@ --@@ ;} for(i=0;i<n@@ -k@@ -1;i++) cout<<a[i]@@ <<''; cout<<a[@@ n-@@ k@@ -1]; return0;}  
c -1
h -1
0

voidmain() { inti,j,@@ m,@@ a[@@ 26@@ ][@@ 999@@ ],@@ num[@@ 26]={0},@@ t,@@ max; char@@ zz@@ [27]; scanf("%d",&m); for(i=0;i<m;i++) { scanf("%d%s",&@@ t,@@ zz@@ ); for(j=0;j<strlen(@@ zz@@ );j++) { a[@@ (int)@@ (@@ zz@@ [j]@@ -'@@ A')@@ ][@@ num[@@ (int)@@ (@@ zz@@ [j]@@ -'@@ A')@@ ]@@ ]=t; num[@@ (int)@@ (@@ zz@@ [j]@@ -'@@ A')@@ ]++; } } max=0; for(i=0;i<26;i++) { if(num@@ [i]>@@ num[@@ max@@ ]) max=i; } printf("%c\n%d\n",@@ max@@ +'A',@@ num[@@ max@@ ]); for(i=0;i<@@ num[@@ max@@ ]@@ ;i++) printf("%d\n",a[@@ max@@ ][i]); }  
c -1
h -1
intmain() { intsum@@ [100]={0},@@ a[100]; intn,i,j,@@ max=0; scanf("%d",&n); for(i=0;i<n;i++)@@ scanf("%d",&a[i]); for(i=n-1;i>=0;i--) { if(i==@@ n-1)@@ sum@@ [i]=1; else { for(j=i+1;j<=@@ n-1;j++) if(a[j]<=@@ a[i]) { if(sum@@ [j]@@ >max)max=@@ sum@@ [j]; } sum[i]@@ =+@@ +@@ max; max=0; } } max=0; for(i=0;i<=n-1;i++) if(sum@@ [i]@@ >max)max=@@ sum[i]; printf("%d",max); return0; }  
c -1
h -1
0

typedef@@ struct { charid@@ [11]; intage; }@@ MAN@@ ; voidsort@@ (@@ MAN@@ *@@ array@@ ,int@@ nSize@@ ) { inti,j; for(i=0;i<@@ nSize@@ ;i++) { for(j=@@ nSize@@ -1@@ ;j>i;j--) { if(array@@ [j].age@@ >=60&&@@ array@@ [j].age@@ >@@ array@@ [j-1@@ ].age) { MAN@@ temp=@@ array@@ [j]; array@@ [j]=@@ array@@ [j-1]; array@@ [j-1]=@@ temp; } } } } intmain() { inti,n; MAN@@ *@@ array@@ =0; double@@ ava@@ ,@@ maxgap@@ =0; scanf("%d",&n); array@@ =(@@ MAN@@ *)malloc(@@ n*@@ sizeof(@@ MAN@@ )); for(i=0;i<n;i++) { scanf("%s%d",@@ array@@ [i].@@ id,@@ &@@ (@@ array@@ [i].age@@ )); } sort(@@ array@@ ,n); for(i=0;i<n;i++) { printf("%s\n",@@ array@@ [i].id); } free(@@ array@@ ); return0; }  
c -1
h -1
structstudent { intid; intc; intm; ints; structstudent*next; }; structstudent*creat@@ (void) { structstudent*head,*p1,*p2; intn,i; p1=p2=(structstudent*)malloc(LEN); scanf("%d",&n); head=NULL; for(i=0;i<n;i++) { scanf("%d%d%d",&@@ p1->id,&p1->@@ c@@ ,&p1->@@ m); p1->@@ s=@@ p1->@@ c+@@ p1->@@ m; if(i==0)@@ head=p1; elsep2->next=p1; p2=p1; p1=(structstudent*)malloc(LEN); } p2->next=NULL; return(head); } void@@ exchange@@ (@@ structstudent*@@ x,@@ structstudent*@@ y) { intt; t=@@ x@@ ->@@ id@@ ;x@@ ->@@ id@@ =@@ y@@ ->@@ id@@ ;y@@ ->@@ id@@ =t; t=@@ x@@ ->@@ c@@ ;x@@ ->@@ c=@@ y@@ ->@@ c@@ ;y@@ ->@@ c=@@ t; t=@@ x@@ ->@@ m;@@ x@@ ->@@ m=@@ y@@ ->@@ m;@@ y@@ ->@@ m=@@ t; t=@@ x@@ ->@@ s@@ ;x@@ ->@@ s=@@ y@@ ->@@ s@@ ;y@@ ->@@ s=@@ t; } voidmain() { structstudent@@ *p,*@@ q@@ ,*@@ head; int@@ temp,@@ i; head=@@ p=@@ creat@@ (); for(p=head@@ ,i@@ =0;p@@ ->next@@ !=NULL@@ ,i@@ <@@ 3@@ ;@@ p=p@@ ->next@@ ,i++) { temp=@@ p->@@ s; for(q=@@ p->next@@ ;q@@ !=NULL;@@ q=q@@ ->next) { if(p->@@ s@@ <@@ q->@@ s)@@ temp=@@ q->@@ s; if(p->@@ s@@ !=@@ temp@@ )@@ exchange@@ (p,@@ q); } } for(p=head@@ ,i@@ =0;i<@@ 3@@ ;@@ p=p@@ ->next@@ ,i++) printf("%d%d\n",@@ p->@@ id,@@ p->@@ s); }  
c -1
h -1
0

intmain(){ intn,i,@@ age@@ [100]; charid@@ [100][10]; scanf("%d",&n); for(i=0;i<n;i++){ scanf("%s%d",@@ id[i],&@@ (@@ age@@ [i]@@ )); } int@@ e; char@@ e_id@@ [10]; for(intk@@ =1@@ ;k<=@@ n;k++){ for(intm=0;m@@ <@@ n-@@ k@@ ;m++){ if((@@ age@@ [m]@@ >=60&&@@ age@@ [m@@ +1@@ ]@@ >=60&&@@ age@@ [m@@ ]<@@ age@@ [m@@ +1@@ ]@@ )||(@@ age@@ [m]@@ <60&&@@ age@@ [m@@ +1@@ ]@@ >=60@@ )){ e=@@ age@@ [m@@ +1]; strcpy(@@ e_id@@ ,@@ id@@ [m@@ +1@@ ]); age@@ [m@@ +1]=@@ age@@ [m]; strcpy(id@@ [m@@ +1],@@ id@@ [m]); age@@ [m]=@@ e; strcpy(id@@ [m@@ ],@@ e_id@@ ); } } } for(i=0;i<n;i++){ printf("%s\n",@@ id[i]); } return0; }  
c -1
h -1
intmain() { intn; cin>>n; inta[n@@ ][n]; inti,j; int@@ x1@@ =0,@@ y1@@ =0,@@ x2@@ =0,@@ y2@@ =0; for(i=0;i<n;i++) { for(j=0;j<n;j++) { cin>>a[i][j]; if(a[i][j]==0) { x1=i; y1=j; } } } for(i=n-1;i>=0;i--) { for(j=n-1;j>=0;j--) { if(a[i][j]==0) { x2=i; y2=j; } } } cout<<(@@ x1@@ -@@ x2@@ -1)*(@@ y1@@ -@@ y2@@ -1); return0; }  
c -1
h -1
0

main() { inta[@@ 101@@ ]={0}; intn,i,@@ now@@ ,@@ sign@@ ; scanf("%d",&n); sign@@ =0; for(i=1;i<=n;i++) { scanf("%d",&@@ now@@ ); if(a[@@ now@@ ]==0) { a[@@ now@@ ]=1; if(@@ sign@@ ==1) printf(""); else sign@@ =1; printf("%d",@@ now@@ ); } } printf("\n@@ ");@@ ; return0; }  
c -1
h -1
structstudent { int@@ n1@@ ; int@@ n2; int@@ n3@@ ; structstudent*next; }; voidmain() { structstudent@@ *p,*@@ head,*@@ tail@@ ; intn,i,@@ sum[@@ 100000],@@ max1,@@ max2@@ ,max3@@ ,@@ k1@@ ,@@ k2@@ ,@@ k3@@ ; scanf("%d",&n); head@@ =NULL@@ ;@@ tail@@ =NULL; for(i=1;i<=n;i++) { p=@@ (@@ structstudent@@ *)malloc(len); scanf("%d%d%d",&@@ p->@@ n1,&@@ p->@@ n2@@ ,&p->@@ n3@@ ); if(head@@ ==NULL) head=@@ tail@@ =p; else { tail@@ ->next=p; tail@@ =p@@ ;} sum[i]=@@ p->@@ n2@@ +p->@@ n3@@ ; } max1=@@ sum@@ [1]@@ ;@@ k1@@ =1; for(i=1;i<=n;i++) if(sum[i]>@@ max1@@ ){@@ max1=@@ sum@@ [i];@@ k1@@ =i;} sum[@@ k1@@ ]=0; max2=@@ sum@@ [1]@@ ;@@ k2@@ =1; for(i=1;i<=n;i++) if(sum[i]>@@ max2@@ ){@@ max2=@@ sum@@ [i];@@ k2@@ =i;} sum[@@ k2@@ ]=0; max3=@@ sum@@ [1]@@ ;@@ k3@@ =1; for(i=1;i<=n;i++) if(sum[i]>@@ max3@@ ){@@ max3=@@ sum@@ [i];@@ k3@@ =i;} printf("%d%d\n%d%d\n%d%d\n",@@ k1@@ ,@@ max1,@@ k2@@ ,@@ max2@@ ,@@ k3@@ ,max3@@ ); }  
c -1
h -1
0

intmain() { intn,@@ a[100]; inti; intf@@ (intx,int@@ min); for(i=0;i<100;i++) a[i]=0; scanf("%d",&n); for(i=0;i<n;i++) { scanf("%d",&a[i]); a[i]=@@ f(@@ a[i],@@ 2); } for(i=0;i<n;i++) { printf("%d\n",a[i]); } return0; } intf@@ (intx,int@@ min) { int@@ y=0; inti; if(x==1) y=1; else { for(i=min@@ ;i<=@@ x;i++) { if(x%i==0) { y=@@ y@@ +@@ f(@@ x@@ /i,i); } } } return@@ y; }  
c -1
h -1
intmain() { inty,m,d,@@ daysum@@ =0; cin>>y>>m>>d; int@@ day@@ [13]={0,31,28,31,30,31,30,31,31,30,31,30,31}; int@@ dayleap@@ [@@ 13]={0,31,@@ 29,31,30,31,30,31,31,30,31,30,31}; if((y%@@ 4!=0@@ )||((@@ y%@@ 100@@ ==0)&&(@@ y%@@ 400@@ !=0)@@ )) { for(inti=0;i<m;i++) daysum@@ +=@@ day@@ [i]; daysum@@ +=@@ d; } else { for(inti=0;i<m;i++) daysum@@ +=@@ dayleap@@ [i]; daysum@@ +=@@ d; } cout<<@@ daysum@@ ; return0; }  
c -1
h -1
0

intmain() { intk,i,j,@@ l,@@ m,n,@@ s=0,@@ p=0,@@ r=0,@@ q=0,@@ sum; scanf("%d",&k); inta[1000][1000]; for(i=0;i<k;i++) { scanf("%d%d",&m,&n); for(j=1;j<=m;j++) { for(l=1;l@@ <=n;@@ l++) { scanf("%d",&a[j]@@ [l]); } } for(j=1;j<=n;j++) { s=s+@@ a[1]@@ [j]; q=q@@ +@@ a[m]@@ [j]; } for(j=1;j<=m;j++) { p=p+@@ a[j]@@ [1]; r=r@@ +@@ a[j]@@ [n]; } sum=@@ s@@ +@@ p+@@ r@@ +@@ q@@ -@@ a[1@@ ][1@@ ]-@@ a[m@@ ][1@@ ]-@@ a[1@@ ][n@@ ]-@@ a[m@@ ][n]; printf("%d\n",sum); s=0; q=0; p=0; r=0; } return0; }  
c -1
h -1
intmain() { intn,@@ sz@@ [100][100]; introw,col,@@ a=0,b=0,@@ c=0,@@ d=0,@@ s=0,@@ p=0; inti,j,k,@@ l; scanf("%d",&n); for(row=0;row<n;@@ row++) { for(col=0;col<n;col@@ ++) { scanf("%d",&@@ sz[row][col@@ ]); } } for(i=0;i<n;i++) { if(p@@ !=1) { for(j=0;j<n;j++) { if(sz@@ [j]@@ [i]==0) { a@@ =j; b=i; p=1; break; } } } else { break; } } for(k=@@ n-1@@ ;k>=0@@ ;k--) { if(p@@ !=0) { for(l@@ =@@ n-1;@@ l@@ >=0;@@ l@@ --) { if(sz[@@ l@@ ][k@@ ]==0) { c=@@ l; d=@@ k; p=0; break; } } } else { break; } } s=(@@ c-a-1)*(d-b-1); printf("%d",s); return0; }  
c -1
h -1
0

structstudent { intid; int@@ math_grade@@ ; int@@ chi_grade@@ ; intsum; }stu[100000]; voidmain() { inti,j,n,@@ max,@@ temp1@@ ,@@ temp2@@ ; scanf("%d",&n); for(i=0;i<n;i++) { scanf("%d",&@@ stu[i].@@ id); scanf("%d",&@@ stu[i].@@ math_grade@@ ); scanf("%d",&@@ stu[i].@@ chi_grade@@ ); } for(i=0;i<n;i++) stu[i].sum=stu[i].@@ math_grade@@ +stu[i].@@ chi_grade@@ ; for(i=0;i<3;i++) { max=@@ stu[i].@@ sum; for(j=i+1;j<n;j++) { if(stu[j].@@ sum@@ >max) { temp1@@ =stu[i].@@ id; stu[i].@@ id@@ =@@ stu[j].@@ id; stu[j].@@ id@@ =@@ temp1@@ ; temp2@@ =stu[i].@@ sum; stu[i].sum=@@ stu[j].@@ sum; stu[j].@@ sum=@@ temp2@@ ; max=@@ stu[i].@@ sum; } } } for(i=0;i<2@@ ;i++) printf("%d%d\n",stu[i].@@ id,@@ stu[i].@@ sum); printf("%d%d",@@ stu[2@@ ].id,@@ stu[2@@ ].sum); }  
c -1
h -1
structstudent { char@@ number@@ [20]; intchinese; intmath; intsum; structstudent*next; }stu[@@ 100000@@ ],*@@ s1@@ ,*@@ s2@@ ,*@@ s3@@ ; intn,@@ max1@@ =0,@@ max2@@ =0,@@ max3@@ =0; structstudent*creat@@ (void) { inti; structstudent*head,*p1,*p2; p1=p2=(structstudent*)malloc(LEN); for(i=0;i<n;i++) { scanf("%s@@ %d%d",&@@ p1->@@ number@@ ,&p1->@@ chinese@@ ,&p1->math); p2=p1; p1->sum=p1->@@ chinese+@@ p1->@@ math; if(p1->@@ sum>@@ max1@@ ) {@@ max3=@@ max2@@ ;@@ s3=@@ s2@@ ;@@ max2=@@ max1@@ ;@@ s2=@@ s1@@ ;@@ max1@@ =p1->@@ sum;@@ s1@@ =p1;} elseif(@@ p1->@@ sum>@@ max2@@ ) {@@ max3=@@ max2@@ ;@@ s3=@@ s2@@ ;@@ max2=@@ p1->@@ sum;@@ s2@@ =p1;} elseif(@@ p1->@@ sum>@@ max3@@ ) {@@ max3=@@ p1->@@ sum;@@ s3@@ =p1;} if(i==0)@@ head=p1; elsep2->next=p1; p1=(structstudent*)malloc(LEN); } p1=@@ NULL@@ ; return(head); } voidmain() { structstudent*@@ p; scanf("%d",&n); p=@@ creat@@ (); printf("%s%d\n",@@ s1@@ ->@@ number,@@ s1@@ ->sum); printf("%s%d\n",@@ s2@@ ->@@ number,@@ s2@@ ->sum); printf("%s@@ %d",@@ s3@@ ->@@ number,@@ s3@@ ->sum); }  
c -1
h -1
1


intf(inta,int@@ s) { int@@ y=0; for(;@@ s@@ <=@@ a;@@ s++) { if(s@@ ==@@ a) y@@ +=1; elseif(@@ s@@ >1@@ &&@@ a@@ %s@@ ==0) y@@ +=@@ f(@@ a/@@ s,@@ s); } return@@ y; } main() { intn,i,@@ a; scanf("%d",&n); for(i=0;i<n;i++) { scanf("%d",&a); printf("%d\n",@@ f(a,@@ 1@@ )); } }  
c -1
h -1
intmain() { inti,j,k,@@ a[@@ 16@@ ]={0},@@ count; do { count=0; cin>>a[0]; if(a[0]==-1) break; for(i=1;;i++) { cin>>a[i]; if(a[i]==0) break; } for(j=0;j<i;j++) for(k=0;k<j@@ ;k++) if(a[k@@ ]==2*@@ a[j]||@@ 2*@@ a[k]==@@ a[j]) count++; cout<<count<<endl; }while(@@ 1); return0; }  
c -1
h -1
0

intmain(){ inti,@@ m=0,@@ k,@@ n,@@ sz[@@ 1000],@@ s[@@ 1000]; scanf("%d%d",&n,&k); for(i=0;i<n;i++){ scanf("%d",&sz[i]); s[m@@ ]=@@ sz[i]; m@@ ++;} for(i=0;i<n;i++){ if(i==@@ n-1){ break;} for(m=@@ n-1@@ ;m@@ >=i@@ +1@@ ;m@@ --){ if(s[@@ m@@ ]+@@ sz@@ [i]==@@ k){ printf("yes"); break; } } if(s[@@ m@@ ]+@@ sz@@ [i]==@@ k){ break;} } if(i==@@ n-1){ printf("no"); } return0; }  
c -1
h -1
intmain(){ intn,m,@@ i,j,k; cin>>n; intN@@ [n]; for(i=0@@ ,k@@ =0;i<@@ n@@ ;i++@@ ,k@@ ++){ cin>>@@ N@@ [k]; for(j=0;j<@@ k@@ ;j++){ if(N@@ [j]==@@ N@@ [k]@@ )@@ k--; } } for(i=0;i<k;i++){ if(i==@@ (k@@ -1)@@ )@@ cout<<@@ N@@ [i]; else@@ cout<<@@ N@@ [i]@@ <<""; } return0; }  
c -1
h -1
0

intmain(){ double@@ bi@@ ,@@ p; intlen1,len2,@@ i,@@ flag@@ ,@@ s=0; charzfc@@ [2][@@ 501]; scanf("%lf",&@@ bi@@ ); for(i=0;i<2@@ ;i++) { scanf("%s",@@ zfc@@ [i]); } len1=strlen(@@ zfc@@ [0]); len2=strlen(@@ zfc@@ [1]); if(len1!=@@ len2) { flag=1; } else { for(i=0;i<len1;i++) { if((@@ zfc[0]@@ [i]!='A'&&@@ zfc[0]@@ [i]!='T'&&@@ zfc[0]@@ [i]!='G'&&@@ zfc[0]@@ [i]!='@@ C')||(@@ zfc[1]@@ [i]!='A'&&@@ zfc[1]@@ [i]!='T'&&@@ zfc[1]@@ [i]!='G'&&@@ zfc[1]@@ [i]!='@@ C')@@ ) { flag=1; } else { flag=0; } } } if(flag==1) { printf("error"); } elseif(@@ flag@@ ==0) { for(i=0;i<len1;i++) { if(@@ zfc[0]@@ [i]==@@ zfc[1]@@ [i]) { s=s+1; } else { s=@@ s; } } p=@@ s@@ *1.0/@@ len1; if(p@@ >@@ bi@@ ) { printf("yes"); } else { printf("no"); } } return0; }  
c -1
h -1
intmain() { intyear,@@ mon@@ ,@@ g,@@ i,@@ e=0,@@ day; int@@ montha@@ [13]={0,31,28,31,30,31,30,31,31,30,31,30,31}; int@@ monthb@@ [@@ 13]={0,31,@@ 29,31,30,31,30,31,31,30,31,30,31}; scanf("%d%d%d",&year,&@@ mon@@ ,&@@ g@@ ); for(i=0;i<@@ mon@@ ;i++) { if(year%@@ 4==0) { if(year%@@ 100==0&&@@ year%@@ 400@@ !=0) { e=@@ e+@@ montha@@ [i]; day=@@ e+@@ g; } else { e=@@ e+@@ monthb@@ [i]; day=@@ e+@@ g; } } if(year%@@ 4@@ !=0) { e=@@ e+@@ montha@@ [i]; day=@@ e+@@ g; } } printf("%d",@@ day); return0; }  
c -1
h -1
0

voidmain() { intn,a[@@ 20000],@@ i=@@ 2@@ ,j,@@ k; scanf("%d",&n); scanf("%d",&@@ a[1]); while(i<=@@ n) { scanf("%d",&a[i]); i=i+1; } printf("%d",@@ a[1]); for(i=2;i<=@@ n@@ ;i=i+1@@ ) { if(a[i]==@@ a[1@@ ])@@ a[i]=0; } for(k=@@ 2@@ ;k<=@@ n@@ ;k@@ =k@@ +1) { if(a[k]@@ !=0) { printf("%d",@@ a[k]); for(j=k@@ +1@@ ;j<=@@ n@@ ;j@@ =j+1@@ ) { if(a[j]==@@ a[k]) {@@ a[j]@@ =0;} } } } }  
c -1
h -1
structstu { intid; intsum; structstu*next; }; voidmain() { structstu@@ *head,*@@ p1,*p2,*@@ p0; intn,i,@@ ch@@ ,@@ ma@@ ,@@ len; scanf("%d",&n); len@@ =@@ sizeof(struct@@ stu@@ ); p1=p2=(struct@@ stu@@ *)malloc(len); head=p1; scanf("%d%d%d",&p1->@@ id,&@@ ch@@ ,&@@ ma@@ ); p1->sum=@@ ch@@ +@@ ma; p1->next@@ =0; for(i=2;i<=n;i++) { p0@@ =(struct@@ stu@@ *)malloc(len); scanf("%d%d%d",&@@ p0->@@ id,&@@ ch@@ ,&@@ ma@@ ); p0->@@ sum=@@ ch@@ +@@ ma; p1=@@ p2=head; while((@@ p0->@@ sum<=@@ p1->@@ sum@@ )&&(@@ p1->next@@ !=0)) { p2=p1; p1=p1->next; } if(@@ p0->@@ sum>@@ p1->@@ sum) { if(head@@ ==@@ p1@@ ) head=@@ p0; else@@ p2->next=@@ p0; p0->next@@ =p1; } else { p1->next=@@ p0; p0->next@@ =0; } if(i>@@ 3) { p1=@@ head->next; p1=p1->next; p1->next@@ =0; } } p1=head; while(p1@@ !=0) { printf("%d%d\n",@@ p1->@@ id,@@ p1->@@ sum); p1=p1->next; } }  
c -1
h -1
0

const@@ int@@ MAXN@@ =@@ 25@@ +@@ 2; intn; inta[@@ MAXN@@ ],@@ f[@@ MAXN@@ ]; intmain() { cin>>n; for(inti=0;i<n;i++) cin>>a[i]; for(inti=0;i<n;i++) { f@@ [i]=0; for(intj=0;j<i;j++) if(a[j]>=a[i]&&@@ f@@ [j]>@@ f@@ [i]) f[i]=@@ f@@ [j]; f@@ [i]++; } intmax=0; for(inti=0;i<n;i++) if(f@@ [i]>max) max=@@ f[i]; cout<<max<<endl; return0; }  
c -1
h -1
intmain(){ int@@ n[@@ 101@@ ]=@@ { 0 }; int@@ nin@@ ; cin>>@@ nin@@ ; intN@@ ;@@ intnum[@@ nin@@ ],@@ count=0; for(inti=1;i<=@@ nin@@ ;++@@ i){ cin>>@@ N; if(!@@ n[@@ N@@ ]){ num[@@ count@@ ]=@@ N@@ ;@@ count++; }@@ n[@@ N@@ ]++; } for(inti=0;i<=@@ count@@ -2@@ ;++@@ i)@@ cout<<@@ num[i]@@ <<''; cout<<@@ num[@@ count@@ -1]; return0; }  
c -1
h -1
0

intmain(){ intn,k,@@ m,@@ i; int@@ a=0,b=0,@@ c=0,@@ d=0,@@ e=0; intsz[100][100]; scanf("%d",&k); for(intl@@ =1;@@ l@@ <=k;@@ l++){ scanf("%d%d",&m,&n); for(i=0;i<m;i++){ for(intj=0;j<n;j++){ scanf("%d",&sz[i][j]); } } for(i=0;i<m;i++){ a@@ +=@@ sz[i]@@ [0]; b@@ +=@@ sz[i]@@ [n-1]; } for(intj=0;j<n;j++){ c@@ +=@@ sz[0]@@ [j]; d@@ +=@@ sz[m@@ -1][j]; } e=@@ a+@@ b@@ +c@@ +d@@ -@@ sz[0][@@ 0]-@@ sz[0][@@ n-1]-@@ sz[@@ m-1][0]-@@ sz[@@ m-1][@@ n-1]; printf("%d\n",@@ e); e=0; a=0; b=0; c=0; d=0; } return0; }  
c -1
h -1
intmain() { inti,k,@@ m,n,@@ j,@@ z,@@ s; cin>>k; for(z@@ =1;@@ z@@ <=k;@@ z++) { s=0; cin>>m>>n; inta[100][100]; for(i=0;i<m;i++) for(j=0;j<n;j++) cin>>a[i][j]; if(m@@ ==1||@@ n@@ ==1) { for(i=0;i<m;i++) for(j=0;j<n;j++) s=s+@@ a[i][j]; } else {@@ for(i=0;i<n;i++) s=s@@ +*(@@ *a@@ +i)@@ +*(@@ *(a@@ +m-1)@@ +i); for(i=1;i<m-1;i++) s=s@@ +*(@@ *(a+i)@@ )@@ +*(@@ *(a+i)@@ +@@ n-1@@ );} cout<<s<<endl; } }  
c -1
h -1
1


intmain() { introw,col,@@ array@@ [100][100],@@ i,j,@@ t; cin>>row>>col; for(i=0;i<row;i++) for(j=0;j<col;j++) cin>>array[i][j]; for(t=0;t@@ <col@@ ;t++) for(i=0,j@@ =@@ t@@ ;i<=@@ t@@ &&j>=0@@ &&i@@ <row@@ ;j--@@ ,i++) {@@ cout<<array@@ [i][j]; if(i!=@@ row-1@@ ||j@@ !=@@ col@@ -1) cout<<endl; } for(t@@ =1;t@@ <=row@@ -1;@@ t++) for(i=@@ t@@ ,j=@@ col-1@@ ;j>=0@@ &&i@@ <=row-1@@ ;j--@@ ,i++) {@@ cout<<array@@ [i][j]; if(i!=@@ row-1@@ ||j@@ !=@@ col@@ -1) cout<<endl; } return0; }  
c -1
h -1
intmain() { inti=0,j=0,@@ k=0; inta[16]; for(;@@ ;i++) { scanf("%d",&a[i]); if(a[i]==0) { printf("%d\n",@@ k); i@@ =-1; k=0; } if(a[0]==-1) break; for(j=0;j<i;j++) if(a[i]==a[j]@@ *2@@ ||@@ a[j]==@@ a[i]@@ *2) k++; } }  
c -1
h -1
0

int@@ factor@@ (intn,int@@ min@@ ){ int@@ result@@ =1,i; if(n@@ <@@ min@@ ){ return0;} for(i=min@@ ;i<@@ n;i++){ if(n@@ %i==0){ result=result+@@ factor@@ (n/i,i); } } returnresult; } intmain(){ intn,a[@@ 100000@@ ],b[@@ 100000]; scanf("%d",&n); for(intj=0;j<=@@ n-1@@ ;j++){ scanf("%d",&a[j]); b[j]=@@ factor@@ (@@ a[j]@@ ,@@ 2); printf("%d\n",@@ b[j]); } return0;}  
c -1
h -1
intmain() {@@ inta[@@ num@@ ][@@ num@@ ]; introw,col; inti,j; scanf("%d%d",&row,&col); for(i=0;i<row;i++) for(j=0;j<col;j++) scanf("%d",&a[i][j]); for(j=0;j<col;j++) { if(j@@ <row) {@@ for(i=0;i<=@@ j@@ ;i++) printf("%d\n",a[i]@@ [j-i@@ ]); } else {@@ for(i=0;i<row;i++) printf("%d\n",a[i]@@ [j-i@@ ]); } } for(j=@@ col@@ ;j<@@ col@@ +row@@ -1;j++) {@@ for(i=j@@ -col@@ +1@@ ;j@@ -i@@ >=0@@ ;i++) {@@ if(i@@ <row) printf("%d\n",a[i]@@ [j-i@@ ]@@ );} } return0; }  
c -1
h -1
0

intmain() { charstring@@ [256],@@ subString@@ [256],@@ replacement@@ [256]; char*@@ n=@@ NULL@@ ; intl,@@ i; memset(@@ string,@@ '\0@@ ',@@ sizeof(@@ string@@ )); memset(@@ subString@@ ,@@ '\0@@ ',@@ sizeof(@@ subString@@ )); memset(@@ replacement@@ ,@@ '\0@@ ',@@ sizeof(@@ replacement@@ )); cin>>@@ string@@ >>@@ subString@@ >>@@ replacement@@ ; n=@@ strstr(@@ string,@@ subString@@ ); l=strlen(@@ subString@@ ); if(n@@ !=NULL) { for(i=0;i<l;i++) { n[i]=@@ replacement@@ [i]; } } cout<<@@ string@@ <<endl; return0; }  
c -1
h -1
intmain() { intyear,month,day,@@ result@@ =0,@@ i; scanf("%d%d%d",&year,&month,&day); for(i=1;i<month;i++) { if(i==1||i==3||i==5||i==7||i==8||i==10@@ ){ result+=@@ 31; } elseif(i==@@ 4||i==6||i==9||i==@@ 11@@ ){ result+=@@ 30; } elseif(i==@@ 2@@ ){ if(year%@@ 400==0||(@@ year%4==0&&year%100!=0@@ )){ result+=@@ 29; } else result+=@@ 28; } } result+=@@ day; printf("%d",@@ result); return0; }  
c -1
h -1
0

inta[1000]; intn,k; int*@@ final@@ ; int*@@ point1@@ =&@@ n@@ ,*@@ point2@@ =&@@ k; intmain() { int@@ kk@@ =1; scanf("%d@@ %d",@@ point1@@ ,@@ point2@@ ); point1@@ =@@ a; final@@ =@@ point1@@ +@@ n; for(;@@ point1@@ <@@ final@@ ;@@ point1@@ ++) scanf("%d",@@ point1@@ ); point1@@ =@@ a; for(;@@ point1@@ <@@ final@@ -1;@@ point1@@ ++) { if(@@ kk@@ ==0) break; for(@@ point2@@ =@@ point1@@ +1;@@ point2@@ <@@ final@@ ;@@ point2@@ ++) { if(*@@ point1@@ +*@@ point2@@ ==k) {@@ printf("yes"); kk@@ =0; break; } } } if(@@ kk@@ ==1) printf("no"); return(0); }  
c -1
h -1
intmain() { structpatient@@ {@@ charid@@ [10@@ ];@@ int@@ a;@@ }@@ patients@@ [100]; struct@@ old@@ {@@ char@@ ido@@ [10@@ ];@@ int@@ ao@@ ;@@ }@@ olds@@ [100]; struct@@ young@@ {@@ char@@ idy@@ [10@@ ];@@ int@@ ay@@ ;@@ }@@ youngs@@ [100]; intn,@@ y=0,@@ o@@ =0,@@ so@@ =0,@@ sy@@ =0,@@ e; scanf("%d",&n); char@@ f@@ [10]; for(intj=0;j<n;j++) { scanf("%s",@@ patients@@ [j].@@ id); scanf("%d",&@@ patients@@ [j].@@ a); if(@@ patients@@ [j].@@ a@@ <60) { strcpy(@@ youngs@@ [y@@ ].@@ idy@@ ,@@ patients@@ [j].@@ id); youngs@@ [y@@ ].@@ ay@@ =@@ patients@@ [j].@@ a; y++; } if(@@ patients@@ [j].@@ a@@ >=60) { strcpy(@@ olds@@ [@@ o@@ ].@@ ido@@ ,@@ patients@@ [j].@@ id); olds@@ [@@ o@@ ].@@ ao@@ =@@ patients@@ [j].@@ a; o@@ ++; } } for(int@@ r=@@ o@@ -1;@@ r@@ >0@@ ;r@@ --) { for(inti=0;i<@@ r;i++) { if(@@ olds@@ [i].@@ ao@@ <@@ olds@@ [i+1].@@ ao@@ ) { e=@@ olds@@ [i+1].@@ ao@@ ; olds@@ [i+1].@@ ao@@ =@@ olds@@ [i].@@ ao@@ ; olds@@ [i].@@ ao@@ =@@ e; strcpy(@@ f,@@ olds@@ [i+1].@@ ido@@ ); strcpy(@@ olds@@ [i+1].@@ ido@@ ,@@ olds@@ [i].@@ ido@@ ); strcpy(@@ olds@@ [i].@@ ido@@ ,@@ f); } } } for(intl@@ =0;@@ l@@ <=@@ o@@ -1;@@ l++) { printf("%s\n",@@ olds@@ [l@@ ].@@ ido@@ ); } for(intm=0;m@@ <=@@ y@@ -1@@ ;m++) { printf("%s\n",@@ youngs@@ [m@@ ].@@ idy@@ ); } return0; }  
c -1
h -1
0

intmain() { intk,@@ i; scanf("%d",&k); for(i=1;i<=k;i++) { introw,@@ col@@ ,j,@@ l,@@ sum=0,@@ num@@ [100][100]; scanf("%d%d",&@@ col@@ ,&@@ row@@ ); for(l=0;l<@@ col@@ ;l++) { int*@@ a=@@ num[@@ l@@ ]; for(j=0;j<row@@ ;j++) { scanf("%d",a@@ +j); if(l@@ ==0||@@ l@@ ==@@ col-1@@ ||j@@ ==0||j==@@ row@@ -1) { sum=sum+*(@@ a@@ +j); } } } printf("%d\n",sum); } return0; }  
c -1
h -1
intmain(intargc,char*argv[]) { intx,y,@@ z; scanf("%d%d%d",&@@ x,&@@ y,&@@ z); ints[@@ 12]={31,28,31,30,31,30,31,31,30,31,30,31}; intm=0; intn=0; for(m=0;m<@@ y@@ -1@@ ;m++) n+=@@ s[@@ m]; int@@ D@@ ; if(((@@ x@@ %4==0&&@@ x@@ %100!=0@@ ||@@ x%@@ 400==0)@@ &&@@ y@@ !=1@@ &&@@ y@@ !=@@ 2@@ )) D=@@ n+@@ z@@ +1; else D=@@ n+@@ z; printf("%d",D@@ ); return0; }  
c -1
h -1
0

intmain() { inti=0,j=0,@@ k=0,@@ shuzu@@ [100][100],@@ hang@@ =0,@@ lie@@ =0,@@ zu@@ =0,@@ sum=0; scanf("%d",&@@ zu@@ ); for(i=0;i<@@ zu@@ ;i++) { scanf("%d%d",&@@ hang@@ ,&@@ lie@@ ); sum=0; for(j=0;j<@@ hang@@ ;j++) { for(k=0;k<@@ lie@@ ;k++) { scanf("%d",&@@ shuzu@@ [j]@@ [k]); } } for(k=0;k<@@ lie@@ ;k++) { sum=sum+@@ shuzu@@ [0][@@ k@@ ]; } if(@@ hang@@ >1) { for(k=0;k<@@ lie@@ ;k++) { sum=sum+@@ shuzu@@ [@@ hang@@ -1@@ ][k@@ ]; } } if(@@ hang@@ >2) { for(k=1;k<@@ hang@@ -1;k++) { sum=sum+@@ shuzu@@ [k@@ ][0]; } } if(@@ lie@@ >1@@ &&@@ hang@@ >2) { for(k=1;k<@@ hang@@ -1;k++) { sum=sum+@@ shuzu@@ [k@@ ][@@ lie@@ -1]; } } printf("%d\n",sum); } return0; }  
c -1
h -1
intmain() { intx,y,@@ i; inta[@@ 20@@ ],b[@@ 20]; cin>>x@@ >>@@ y; for(i=0;i<x;i++) {@@ cin>>@@ a[i];} for(i=0;i<y;i++) {@@ cin>>@@ b[i]@@ ;} sort@@ (a,@@ a+@@ x); sort@@ (b,@@ b+@@ y); cout<<a[0]; for(i=1;i<@@ x;i++) {@@ cout<<""<<@@ a[i];} for(i=0;i<y;i++) {@@ cout<<""<<@@ b[i]@@ ;} return0; }  
c -1
h -1
0

intmain() { inti,@@ g@@ =0,@@ j,@@ e,@@ k,@@ flag=1; doublen,@@ m; chars[@@ 2][@@ 502@@ ]; scanf("%lf",&n); for(i=0;i<2@@ ;i++){ scanf("%s",@@ s[i]); } e@@ =strlen(@@ s@@ [1]); k=strlen(@@ s@@ [0]); if(e@@ !=@@ k){ flag=0; } if(flag@@ ==1){ for(i=0;i<2@@ ;i++){ for(j=0;@@ s@@ [i][j]@@ ;j++){ if((@@ s@@ [i][j]!='@@ A')&&(@@ s@@ [i][j]!='@@ G')&&(@@ s@@ [i][j]!='@@ C')&&(@@ s@@ [i][j]!='@@ T')@@ ){ flag=0; } } } } for(j=0;@@ s[0]@@ [j]@@ ;j++){ if(s@@ [0]@@ [j]==@@ s[1]@@ [j]){ g@@ ++; } } m@@ =1.0*@@ g@@ /@@ e; if(flag@@ ==1){ if(m@@ >n){ printf("yes\n"); }else{ printf("no\n"); } }else{ printf("error\n"); } return0; }  
c -1
h -1
structstudent { intnumber; intmath; intchinese; inttotal; }; intmain() { structstudent@@ a[@@ 100000]; intn,i,@@ sf@@ =0,@@ ss@@ =0,@@ st@@ =0,@@ f,@@ s,@@ t; scanf("%d",&n); for(i=0;i<n;i++) { scanf("%d%d%d",&a[i].@@ number@@ ,&a[i].@@ math@@ ,&a[i].@@ chinese); a[i].@@ total=@@ a[i].@@ math+@@ a[i].@@ chinese; if(a[i].@@ total>@@ sf@@ ) { t=@@ s@@ ;@@ st@@ =@@ ss@@ ; s=@@ f@@ ;@@ ss@@ =@@ sf@@ ; f@@ =i;@@ sf@@ =@@ a[i].@@ total; } else if(a[i].@@ total>@@ ss@@ ) { t=@@ s@@ ;@@ st@@ =@@ ss@@ ; s@@ =i;@@ ss@@ =@@ a[i].@@ total; } else if(a[i].@@ total>@@ st@@ ) { t@@ =i;@@ st@@ =@@ a[i].@@ total; } } printf("%d%d\n",@@ f@@ +1,@@ sf@@ ); printf("%d%d\n",@@ s@@ +1,@@ ss@@ ); printf("%d%d\n",@@ t@@ +1,@@ st@@ ); return0; }  
c -1
h -1
0

intmain() { int@@ c1@@ ,@@ c2@@ ,@@ d,@@ i,@@ x=0,@@ k,@@ m,n; int@@ sum[@@ L@@ ]; inta[@@ L@@ ][@@ L@@ ],b[@@ L@@ ]; scanf("%d",&k); for(i=0;i<@@ L@@ ;i++){ sum@@ [i]=0; } for(i=0;i<k;i++){ scanf("%d%d",&m,&n); for(@@ c1@@ =0;@@ c1@@ <m;@@ c1@@ ++){ for(@@ c2@@ =0;@@ c2@@ <n;@@ c2@@ ++){ scanf("%d",&a[@@ c1@@ ][@@ c2@@ ]); } } for(d@@ =0;d@@ <m;@@ d@@ ++){ sum[@@ x@@ ]+=@@ a[d@@ ][0]+@@ a[d@@ ][n-1]; } for(d@@ =1;@@ d@@ <@@ n-1;@@ d@@ ++){ sum[@@ x@@ ]+=@@ a[0][@@ d@@ ]+@@ a[m-1][@@ d@@ ]; } x++; } for(i=0;i<x;i++){ printf("%d\n",sum@@ [i]); } return0; }  
c -1
h -1
intmain() { inti,j,@@ a[@@ 16@@ ],b[100],@@ changdu@@ =0,@@ panduan@@ =1,@@ geshu@@ =0; while(1){ for(i=0;i<16@@ ;i++){ scanf("%d",&a[i]); changdu@@ =i; if(a[i]==@@ -1){ panduan@@ =0; break; } if(a[i]@@ ==0){ break; } } if(@@ panduan@@ ==0) break; geshu@@ =0; for(i=0;i<@@ changdu@@ ;i++){ for(j=0;j<@@ changdu@@ ;j++){ if(a[i]==a[j]@@ *2@@ ){ geshu@@ ++; } } } printf("%d\n",@@ geshu@@ ); } return0; }  
c -1
h -1
0

intmain() { int@@ group@@ =0; int@@ row@@ =0,@@ col@@ =0; inta[100][100]; inti,j,@@ sum=0; cin>>@@ group@@ ; while(@@ group@@ --) { cin>>row>>col; for(i=0;i<row;i++) for(j=0;j<col;j++) cin>>a[i][j]; sum=0; if(row@@ ==1&&@@ col@@ ==1)@@ sum=@@ a[0][@@ 0]; else { for(i=0;i<col;i++) {@@ sum+=@@ a[0]@@ [i];@@ if(row@@ >1@@ )@@ sum+=@@ a[@@ row@@ -1]@@ [i]@@ ;} for(i=1;i<=@@ row@@ -2;i++) {@@ sum+=@@ a[i][0]@@ ;@@ if(col@@ >1@@ )@@ sum+=@@ a[i][@@ col@@ -1]@@ ;} } cout<<sum<<endl; } }  
c -1
h -1
intmain() { inta[@@ 15@@ ]={0},@@ n; while(1) { n=0; for(inti=0;i<=@@ 15;i++) { cin>>a[i]; if(a[i]@@ ==0||@@ a[i]@@ ==-1) break; } for(intj=0;j<=@@ 15@@ ;j++) { if(a[j]@@ ==0||@@ a[j]==@@ -1) break; for(intk@@ =j+1@@ ;k<=@@ 15@@ ;k++) { if(a[k]@@ ==0) break; elseif(@@ a[k]@@ *2==@@ a[j]||@@ a[j]@@ *2==@@ a[k]) n++; } } if(a[0]@@ !=-1) { cout<<n<<endl; for(inti=0;i<=@@ 15;i++) a[i]=0; n=0; } else break; } return0; }  
c -1
h -1
0

int@@ ge@@ ,@@ s,@@ w; void@@ fen@@ (int@@ h@@ ,int@@ a); intmain() { intn=0,@@ k=0; cin>>n; for(k=1;k<=n;k++) { cin>>@@ s; ge@@ =0; fen@@ (@@ s,@@ 2); cout<<@@ ge@@ <<endl; } return0; } void@@ fen@@ (int@@ h@@ ,int@@ a) { for(inti=2;i<=@@ h@@ ;i++) { if((@@ h@@ %i@@ ==0)&&(@@ i>=@@ a@@ )) { if(h@@ /i@@ !=1) {@@ fen@@ (@@ h@@ /i,@@ i@@ );} else {@@ ge@@ ++;} } } }  
c -1
h -1
intmain() { int*p; char@@ q@@ [1000][@@ 30]; int@@ shu@@ [26]={0}; char@@ zm@@ [@@ ]={'A','B','C','D','E','F','G','H','I','J','K','L','M','N','O','P','@@ Q','R','S','T','U','V','W','X','Y','@@ Z'}; intn,i,j,k; int@@ len,@@ max=0; scanf("%d",&n); p=@@ (int*)malloc(sizeof(int)*n); for(i=0;i<n;i++) { len@@ =0; scanf("%d%s",&@@ p@@ [i],@@ q@@ [i]); len=strlen(@@ q@@ [i]); for(j=0;j<len;j++) { for(k=0;k<26;k++) { if(q@@ [i][j]==@@ zm@@ [k]) shu@@ [k]++; } } } for(i=0;i<26;i++) { if(@@ shu@@ [i]>max) { max=@@ shu@@ [i]; k=i; } } printf("%c\n%d\n",@@ zm@@ [k],@@ shu@@ [k]); for(i=0;i<n;i++) { len=strlen(@@ q@@ [i]); for(j=0;j<len;j++) { if(q@@ [i][j]==@@ zm@@ [k]) printf("%d\n",@@ p[i]); } } free@@ (p); return0; }  
c -1
h -1
0

intmain() { intn,i,@@ e,@@ k=0; ints[@@ 20001]; inta[@@ 20001]; cin>>n; for(i=1;i<=@@ 20001@@ ;i++) { s[i]@@ =0; a[i]=0; } for(i=1;i<=n;i++) { cin>>@@ e; if(a[@@ e@@ ]==0) { a[@@ e@@ ]=1; k++; s@@ [k]=@@ e; } } for(i=1;i<=@@ k-1;i++) cout<<@@ s[i]@@ <<''; cout<<s@@ [k]; return0; }  
c -1
h -1
struct@@ score { intID; intchinese; intmath; }; voidmain() { intn,@@ i@@ ,*@@ sum,@@ max,@@ p=0; struct@@ score@@ *@@ s; scanf("%d",&n); s@@ =(struct@@ score@@ *)malloc(sizeof(struct@@ score@@ )*n); sum=@@ (int*)malloc(sizeof(int)*n); for(i=0;i<n;i++) scanf("%d%d%d",&@@ s[i].@@ ID,&@@ s[i].@@ chinese@@ ,&@@ s[i].@@ math); for(i=0;i<n;i++)@@ *(@@ sum@@ +i)@@ =@@ s[i].@@ chinese+@@ s[i].@@ math; max=@@ sum[@@ 0]; for(i=0;i<n;i++) { if(max@@ <*@@ (@@ sum@@ +i)@@ ){@@ max@@ =*(@@ sum@@ +i@@ );@@ p@@ =i;} } printf("%d%d\n",@@ s[p@@ ].@@ ID@@ ,*@@ (@@ sum@@ +p@@ )); if(n@@ >1) { max@@ =*@@ sum;@@ *(@@ sum@@ +p@@ )@@ =0;@@ p=0; for(i=0;i<n;i++) { if(max@@ <*@@ (@@ sum@@ +i)@@ ){@@ max@@ =*(@@ sum@@ +i@@ );@@ p@@ =i;} } printf("%d%d\n",@@ s[p@@ ].@@ ID@@ ,*@@ (@@ sum@@ +p@@ )); if(n@@ >2) { max@@ =*@@ sum;@@ *(@@ sum@@ +p@@ )@@ =0;@@ p=0; for(i=0;i<n;i++) { if(max@@ <*@@ (@@ sum@@ +i)@@ ){@@ max@@ =*(@@ sum@@ +i@@ );@@ p@@ =i;} } printf("%d%d\n",@@ s[p@@ ].@@ ID@@ ,*@@ (@@ sum@@ +p@@ )); } } }  
c -1
h -1
0

int@@ way@@ (intx,int@@ m) { intsum=0,@@ p=0,@@ i; for(i=m;i<@@ x;i++) if(x%i==0) { p++; sum=sum+@@ way@@ (x/i,i); } sum=sum+1; if(p@@ ==0)@@ sum=1; if(m@@ >@@ x)@@ sum=0; return(@@ sum); } intmain() { intn,a,@@ i; scanf("%d",&n); for(i=1;i<=n;i++) { scanf("%d",&a); printf("%d\n",@@ way@@ (a,@@ 2)); } return0; }  
c -1
h -1
int@@ sort@@ (int@@ arr@@ [],int@@ n); int@@ bubblesort@@ (int@@ arr@@ [],int@@ n); int@@ bubblesort@@ (int@@ arr@@ [],int@@ n) { int@@ sorted@@ =0; while(@@ sorted@@ <@@ n-1) { int@@ changed@@ =0; inti; for(i=0;i<n-@@ sorted@@ -1;i++) { if(@@ arr@@ [i]>@@ arr@@ [i+1]) { int@@ t=@@ arr@@ [i+1]; arr@@ [i+1]=@@ arr@@ [i]; arr@@ [i]=@@ t; changed@@ =1; } } if(!@@ changed@@ ) break; sorted@@ ++; } return@@ arr@@ [n-1]; } intmain() { intn,@@ arr@@ [100000],@@ k,@@ i=0,@@ index@@ =0; scanf("%d%d",&n,&k); for(i=0;i<n;i++) { scanf("%d",&@@ arr@@ [i]); } bubblesort@@ (@@ arr@@ ,n); if(@@ arr@@ [0]+@@ arr@@ [1]@@ >@@ k@@ ||@@ arr@@ [n-1@@ ]+@@ arr@@ [@@ n-2@@ ]<@@ k) { printf("no"); return0; } int@@ flag=0; int@@ n1@@ =0,@@ n2@@ =@@ n-1; while(@@ n1@@ <@@ n2) { if(@@ arr@@ [@@ n1@@ ]+@@ arr@@ [@@ n2@@ ]==@@ k) { printf("yes"); return0; } if(@@ arr@@ [@@ n1@@ ]+@@ arr@@ [@@ n2@@ ]>@@ k) n2@@ --; else n1@@ ++; } printf("no"); return0; }  
c -1
h -1
0

intmain(){ double@@ x,y; inti,@@ t@@ =1,@@ r; chars1@@ [500]; char@@ s2@@ [500]; scanf("%lf",&x); scanf("%s%s",@@ s1,@@ s2); int@@ len1=strlen(@@ s1); int@@ len2=strlen(@@ s2); if(len1!=@@ len2){ t=0; }else{ int@@ cnt@@ =0; for(i=0;i<len1;i++){ if((@@ !@@ (@@ s1@@ [i]=='A'||@@ s1@@ [i]=='T'||@@ s1@@ [i]=='C'||@@ s1@@ [i]=='@@ G')@@ )||(@@ !@@ (@@ s2@@ [i]=='A'||@@ s2@@ [i]=='T'||@@ s2@@ [i]=='C'||@@ s2@@ [i]=='@@ G')@@ )){ t=0; } } for(i=0;i<len1;i++){ if(s1[i]==s2@@ [i]){ cnt@@ ++; } } y@@ =1.0*@@ cnt@@ /@@ len1; if(y@@ >@@ x){ r@@ =1; }else{ r=@@ 2; } } if(t@@ ==0){ printf("error"); }elseif(@@ t@@ ==1&&@@ r@@ ==1){ printf("yes"); }elseif(@@ t@@ ==1&&@@ r@@ ==@@ 2@@ ){ printf("no"); } return0; }  
c -1
h -1
structstudent { intnum; int@@ score1@@ ; int@@ score2; intsum; structstudent*next; structstudent*@@ before@@ ; }; main() { inti,n,@@ n1@@ =0,@@ n2@@ =0,@@ n3@@ =0,@@ m1@@ =0,@@ m2@@ =0,@@ m3@@ =0; structstudent*head; structstudent*p1,*p2; scanf("%d",&n); p1=p2=(structstudent*)malloc(LEN); scanf("%d%d%d",&p1->num,&p1->@@ score1@@ ,&p1->@@ score1@@ ); p1->sum=p1->@@ score1@@ +p1->@@ score2; m1@@ =p1->@@ sum; n1@@ =p1->@@ num; head@@ =0; i=0; while(i<=@@ n-2@@ ) { i++; if(i==1) head=p1; else { p1->@@ before@@ =p2; p2->next=p1; } p2=p1; p1=(structstudent*)malloc(LEN); scanf("%d%d%d",&p1->num,&p1->@@ score1@@ ,&p1->@@ score2); p1->sum=p1->@@ score1@@ +p1->@@ score2; if(p1->@@ sum>@@ m3@@ &&@@ p1->@@ sum<=@@ m2@@ ) { m3@@ =p1->@@ sum; n3@@ =p1->@@ num; } if(p1->@@ sum>@@ m2@@ &&@@ p1->@@ sum<=@@ m1@@ ) { m3=@@ m2@@ ; n3@@ =@@ n2; m2@@ =p1->@@ sum; n2@@ =p1->@@ num; } if(p1->@@ sum>@@ m1@@ ) { m3=@@ m2@@ ; n3@@ =@@ n2; m2=@@ m1@@ ; n2@@ =@@ n1@@ ; m1@@ =p1->@@ sum; n1@@ =p1->@@ num; } } printf("%d%d\n",@@ n1,@@ m1@@ ); printf("%d%d\n",@@ n2,@@ m2@@ ); printf("%d%d\n",@@ n3@@ ,@@ m3@@ ); }  
c -1
h -1
0

main() { charstr@@ [257]; char@@ sub@@ [257]; char@@ rep@@ [257]; inti=0,j=0,@@ k=0,@@ a; gets(str); gets(sub); gets(@@ rep); a=strlen(@@ sub); for(i=0;@@ str@@ [i]!='\0';i++) { if(str[i]==@@ sub@@ [j]) { j++; if(j==@@ a) { k=i; break; } } else@@ j=0; } for(i=0;@@ str@@ [i]!='\0';i++) { if(i==@@ k-@@ a@@ +1) { printf("%s",@@ rep); i=@@ k; } else@@ printf("%c",@@ str[i]); } getchar(); getchar(); getchar(); }  
c -1
h -1
int@@ paixu@@ (int@@ shuzu@@ [],int@@ num) { inti,j,@@ jiaohuan@@ ; for(i=1;i<@@ num;i++) { for(j=0;j<@@ num@@ -i;j++) { if(shuzu@@ [j]>@@ shuzu@@ [j+1]) { jiaohuan@@ =@@ shuzu@@ [j]; shuzu@@ [j]=@@ shuzu@@ [j+1]; shuzu@@ [j+1]=@@ jiaohuan@@ ; } } } } int@@ hebing@@ (int@@ shuzu1@@ [],int@@ num1@@ ,int@@ shuzu2@@ [],int@@ num2@@ ) { inti; for(i=0;i<@@ num2@@ ;i++)@@ shuzu1@@ [i+@@ num1@@ ]=@@ shuzu2@@ [i]; } intmain() { int@@ shuzu1@@ [@@ 200],@@ shuzu2@@ [100],@@ num1,num2@@ ,@@ i,j; cin>>@@ num1@@ >>@@ num2@@ ; for(i=0;i<@@ num1@@ ;i++)@@ cin>>@@ shuzu1@@ [i]; for(i=0;i<@@ num2@@ ;i++)@@ cin>>@@ shuzu2@@ [i]; paixu(@@ shuzu1@@ ,@@ num1@@ ); paixu(@@ shuzu2@@ ,@@ num2@@ ); hebing@@ (@@ shuzu1@@ ,@@ num1,@@ shuzu2@@ ,@@ num2@@ ); for(i=0;i<(@@ num1@@ +@@ num2@@ );i++) { cout<<@@ shuzu1@@ [i]; if(i<@@ (@@ num1@@ +@@ num2@@ -1)@@ )@@ cout<<"@@ "; } cin.get@@ ();@@ cin.get@@ ();@@ cin.get@@ ();@@ cin.get@@ ();@@ cin.get@@ ();@@ cin.get(); return0; }  
c -1
h -1
0

intmain(){ charzfc@@ [256],@@ wt@@ [256],@@ tar@@ [256]; inti,j,@@ tag@@ ; scanf("%s",@@ zfc); scanf("%s",@@ wt@@ ); scanf("%s",@@ tar@@ ); int@@ n=strlen(@@ zfc); int@@ k=strlen(@@ wt@@ ); for(i=0;i<n@@ -k@@ +1@@ ;i++){ tag@@ =0; for(j=i;j<@@ i@@ +k@@ ;j++){ if(@@ zfc@@ [j]!=@@ wt@@ [j-i@@ ]){ tag@@ =1; break; } } if(tag@@ ==0){ for(j=i;j<@@ i@@ +k@@ ;j++){ zfc@@ [j]=@@ tar@@ [j-i@@ ]; } break; } } puts(@@ zfc); return0; }  
c -1
h -1
intmain() { inta[@@ 15],@@ n; inti; cin>>a[0]; while(@@ a[0]@@ !=-1) { for(i=1;;i++) { cin>>a[i]; if(a[i]==0) { n=i; break; } } int@@ cnt@@ =0,@@ j; for(i=0;i<=@@ n-2;i++) for(j=i+1;j<=@@ n-1;j++) { if(a[i]@@ -2*@@ a[j]@@ ==0||@@ a[j]@@ -2*@@ a[i]@@ ==0) cnt@@ ++; } cout<<@@ cnt@@ <<endl; for(i=0;i<=@@ 14@@ ;i++) a[i]=0; cin>>a[0]; } return0; }  
c -1
h -1
0

int@@ paixu@@ (int@@ shuzu@@ [],int@@ num) { inti,j,@@ jiaohuan@@ ; for(i=1;i<@@ num;i++) { for(j=0;j<@@ num@@ -i;j++) { if(shuzu@@ [j]>@@ shuzu@@ [j+1]) { jiaohuan@@ =@@ shuzu@@ [j]; shuzu@@ [j]=@@ shuzu@@ [j+1]; shuzu@@ [j+1]=@@ jiaohuan@@ ; } } } } int@@ hebing@@ (int@@ shuzu1@@ [],int@@ num1@@ ,int@@ shuzu2@@ [],int@@ num2@@ ) { inti; for(i=0;i<@@ num2@@ ;i++)@@ shuzu1@@ [i+@@ num1@@ ]=@@ shuzu2@@ [i]; } intmain() { int@@ shuzu1@@ [@@ 200],@@ shuzu2@@ [100],@@ num1,num2@@ ,@@ i,j; cin>>@@ num1@@ >>@@ num2@@ ; for(i=0;i<@@ num1@@ ;i++)@@ cin>>@@ shuzu1@@ [i]; for(i=0;i<@@ num2@@ ;i++)@@ cin>>@@ shuzu2@@ [i]; paixu(@@ shuzu1@@ ,@@ num1@@ ); paixu(@@ shuzu2@@ ,@@ num2@@ ); hebing@@ (@@ shuzu1@@ ,@@ num1,@@ shuzu2@@ ,@@ num2@@ ); for(i=0;i<(@@ num1@@ +@@ num2@@ );i++) { cout<<@@ shuzu1@@ [i]; if(i<@@ (@@ num1@@ +@@ num2@@ -1)@@ )@@ cout<<"@@ "; } cin.get@@ ();@@ cin.get@@ ();@@ cin.get@@ ();@@ cin.get@@ ();@@ cin.get@@ ();@@ cin.get(); return0; }  
c -1
h -1
intmain() { intn; cin>>n; inta,@@ i,j,@@ l,@@ k=1; cin>>a; ints[@@ 20000@@ ]={@@ a@@ }; for(i=1;i<n;i++) { cin>>a; j=0; while(@@ s[j]@@ !=@@ a) {@@ j++; if(j==@@ k) { s@@ [k]=@@ a; k++; } } } for(l=0;l<@@ k@@ -1;@@ l++) cout<<@@ s[@@ l@@ ]@@ <<''; cout<<s@@ [k@@ -1]; return0; }  
c -1
h -1
0

voidmain() { intn,i,j,a[@@ 1000],b[1000],@@ max=0; scanf("%d",&n); for(i=0;i<n;i++) b[i]=1; for(i=0;i<n;i++) scanf("%d",&a[i]); for(i=0;i<n;i++) for(j=0;j<i;j++) if(a[j]>=@@ a[i]) b[i]=@@ MAX@@ (@@ b[j]@@ +1,@@ b[i]); for(i=0;i<n;i++) max=@@ MAX@@ (@@ max,@@ b[i]); printf("%d\n",max); }  
c -1
h -1
intmain() { intn,i,j,@@ k=0,@@ m=0,@@ a[@@ 1000][1000],@@ flag=0,@@ number; scanf("%d",&n); for(i=0;i<n;i++) { for(j=0;j<n;j++) { scanf("%d",&a[j]@@ [i]); } } for(i=0;i<n;i++) { for(j=0;j<n;j++) { if(a[j]@@ [i]==0) { k++; flag=1; } if(flag==1) { if(a[j]@@ [i]==@@ 255) { break; } } } } flag=0; for(j=0;j<n;j++) { for(i=0;i<n;i++) { if(a[j]@@ [i]==0) { m++; flag=1; } if(flag==1) { if(a[j]@@ [i]==@@ 255) { break; } } } } number@@ =(@@ k@@ -2)*(@@ m@@ -2); printf("%d\n",@@ number); return0; }  
c -1
h -1
0

intmain(){ inti,n,@@ m,@@ j,@@ k; scanf("%d",&n); struct@@ br@@ { char@@ x@@ [10]; inty; }@@ *@@ b,@@ c[100],@@ e; b@@ =(struct@@ br@@ *)malloc(sizeof(struct@@ br@@ )*n); for(i=0;i<n;i++){ scanf("%s%d",@@ b[i].@@ x,&@@ (@@ b[i].@@ y@@ )); } for(i=0,@@ m@@ =0;i<@@ n;i++){ if(b[i].@@ y@@ >=60){ c[m@@ ]=b[i]; m++; b[i].@@ y@@ =-1; } for(k=0;k<@@ m@@ ;k++){ for(j=@@ m-1@@ ;j>@@ k@@ ;j--){ if(c@@ [j].@@ y@@ >@@ c@@ [j-1].@@ y){ e=@@ c[j]; c[j]=@@ c@@ [j-1]; c@@ [j-1]=@@ e; } } } } for(i=0;i<m;i++){ printf("%s\n",@@ c@@ [i].@@ x); } for(i=0;i<n;i++){ if(b[i].@@ y@@ !=@@ -1){ printf("%s\n",@@ b[i].@@ x); } } return0; }  
c -1
h -1
inta[@@ 30],@@ dp@@ [@@ 30@@ ]={@@ 1@@ }; intn; int@@ ans@@ =-1; intmain() { inti,j; scanf("%d",&n); for(i=0;i<n;i++) { scanf("%d",&a[i]); } for(i=1;i<n;i++) { dp@@ [i]=1; for(j=0;j<i;j++) { if(a[j]>=a[i]&&@@ dp@@ [j]+1>@@ dp@@ [i]) { dp@@ [i]=@@ dp@@ [j]+1; } } } for(i=0;i<n;i++) { if(@@ dp@@ [i]>@@ ans@@ ) { ans=@@ dp@@ [i]; } } printf("%d\n",@@ ans); return0; }  
c -1
h -1
0

intmain(){ intn,@@ tmp@@ ,@@ i,j,k; scanf("%d%d",&n,&k); j=0; inta[n]; for(i=0;i<=n-1;i++) { scanf("%d",&a[i]); } for(i=1;i<=n;i++) { for(j=0;j<=@@ n@@ -i-1;j++) { if(a[j]>a[j+1]) { tmp=@@ a[j]; a[j]=a[j+1]; a[j+1]=@@ tmp; } } } for(i=0;i<=n-1;i++) { for(j=i+1;j<=@@ n@@ -i-1;j++) { if(k==@@ a[i]+@@ a[j]) { printf("yes"); break; } } if(k==@@ a[i]+@@ a[j]) { break; } } if(i==@@ n)@@ printf("no"); return0; }  
c -1
h -1
intmain() { chara[100@@ ][@@ 1000]; intb[100@@ ]; char@@ c@@ [100][@@ 1000]; int@@ q,@@ w,@@ e; q=0; w@@ =0; intn; inti,j; scanf("%d",&n); for(i=1;i<=n;i++) { inty; char@@ x@@ [100][@@ 1000]; scanf("%s%d",@@ x,&@@ y); if(y@@ >=60) { strcpy(@@ a[q@@ ],@@ x@@ [0]); b[@@ q@@ ]=@@ y; q++; } else { strcpy(@@ c[@@ w@@ ],@@ x@@ [0]); w@@ ++; } } int@@ h; char@@ H@@ [100][@@ 1000]; for(i=1;i<@@ 10000@@ ;i++) { for(j=0;j<@@ q@@ ;j++) { if(b[j]@@ <b@@ [j+1]) { h=@@ b[j]; b[j]=b[j+1]; b[j+1]=@@ h; strcpy(@@ H@@ [0],@@ a[j]); strcpy(@@ a[j]@@ ,@@ a[j+1@@ ]); strcpy(@@ a[j+1@@ ],@@ H@@ [0]); } } } for(i=0;i<@@ q@@ ;i++) { printf("%s\n",@@ a[i]); } for(i=0;i<@@ w@@ ;i++) printf("%s\n",@@ c[i]); }  
c -1
h -1
0

intmain() { int@@ year@@ [@@ 10],@@ mon@@ [@@ 10],@@ date@@ [@@ 10],@@ day@@ [12@@ ],i,j,@@ sum[@@ 10]; for(i=0;i<=@@ 4;i++) scanf("%d%d%d",&year@@ [i],&@@ mon@@ [i],&@@ date@@ [i]); for(i=0;i<=@@ 4;i++) {@@ sum@@ [i]=0; day@@ [0]=@@ 31; if(((@@ year[i]@@ %@@ 4==0)&&(@@ year[i]@@ %100!=0@@ )@@ )||(@@ year[i]@@ %@@ 400==0)@@ )@@ day@@ [1]=@@ 29; else@@ day@@ [1]=@@ 28; day@@ [2@@ ]=31; day@@ [3@@ ]=30; day@@ [4@@ ]=31; day@@ [5@@ ]=30; day@@ [@@ 6@@ ]=31; day@@ [@@ 7@@ ]=31; day@@ [@@ 8@@ ]=30; day@@ [@@ 9@@ ]=31; day@@ [10@@ ]=30; day@@ [11@@ ]=31; for(j=0;j<=@@ mon@@ [i]@@ -2@@ ;j++)@@ sum[i]=sum[i]+@@ day@@ [j]; sum[i]=sum[i]+@@ date@@ [i]; printf("%d\n",@@ sum[i]@@ );} return0; }  
c -1
h -1
intmain() { intk,i,j,@@ n,@@ t=0,@@ b,@@ p; inta[20000]; cin>>n; for(i=0;i<n;i++) cin>>a[i]; for(j=0;j<@@ n-@@ t;j++) {@@ for(k=j+1;k<@@ n-@@ t;@@ ){ if(a[k@@ ]==@@ a[j]@@ ){ for(p=@@ k@@ ;p<@@ n-@@ t@@ ;p++) a[p@@ ]=a[@@ p@@ +1]; t++; } else@@ k++; } } for(b=0;b@@ <@@ n-1@@ -@@ t;@@ b++) cout<<a[@@ b@@ ]@@ <<""; cout<<a[@@ n-1@@ -@@ t@@ ]<<endl; return0; }  
c -1
h -1
0

intk=0; inty; int@@ a@@ (intx,int@@ i); void@@ b@@ (intx,int@@ i); intmain() { intn,i,@@ x,@@ z; scanf("%d",&n); for(i=1;i<=n;i++) { scanf("%d",&x); y=@@ x; printf("%d\n",@@ a@@ (x,@@ 2)); } return0; } int@@ a@@ (intx,int@@ i) { k=0; b@@ (x,@@ i); return@@ k; } void@@ b@@ (intx,int@@ i) { for(i@@ =i@@ ;i<=@@ x;i++) { if(x@@ %i==0)@@ b@@ (x/i,i); } if(x@@ ==1)@@ k=k+1; }  
c -1
h -1
intmain() {@@ charstr@@ [300@@ *@@ 100@@ ],@@ sub@@ [100],@@ rep@@ [100]; gets(str); gets(sub); gets(@@ rep); inti,j,k,@@ t,@@ w; t=0; w@@ =0; for(i=0;@@ str@@ [i]@@ !=0@@ ;i++){ if(str[i]==@@ sub@@ [0]){ for(k@@ =i+1@@ ,j@@ =1;@@ str@@ [k]@@ !=0&&@@ sub@@ [j]@@ !=0@@ ;k++@@ ,j@@ ++){ if(str@@ [k]@@ !=@@ sub@@ [j]) break; } if(@@ sub@@ [j]@@ ==0){ t=i; w@@ =k; break; } } } if(w@@ >@@ t@@ ){ if(strlen(@@ sub)@@ >=@@ strlen(@@ rep@@ )){ for(i=@@ t@@ ,j@@ =0;@@ rep@@ [j]@@ !=0@@ ;i++,j@@ ++){ str[i]=@@ rep@@ [j]@@ ;} for(k=@@ w@@ ;@@ str@@ [k]@@ !=0@@ ;i++@@ ,k@@ ++){ str[i]=@@ str@@ [k]; } str@@ [i]@@ =0;} else{ i@@ =strlen(@@ str@@ )+@@ strlen(@@ rep@@ )@@ -strlen(@@ sub); for(k@@ =strlen(@@ str@@ )@@ ;k@@ >=@@ w@@ ;k@@ --@@ ,i@@ --){ str[i]=@@ str@@ [k]; } for(i=@@ t@@ ,j@@ =0;@@ rep@@ [j]@@ !=0@@ ;i++,j@@ ++){ str[i]=@@ rep@@ [j]; } } } printf(@@ str); return0; }  
c -1
h -1
0

structpatient { charid[10]; int@@ old@@ ; }@@ pt@@ [100]; main() { intn,i,j,k,@@ e,@@ h; int@@ yx@@ [100],@@ byx@@ [100]; scanf("%d",&n); j=0; k=0; for(i=0;i<n;i++){ scanf("%s%d",&@@ pt@@ [i].id,&@@ pt@@ [i].@@ old@@ ); if(@@ pt@@ [i].@@ old@@ >=60){ yx@@ [j]@@ =i; j++; } else{ byx@@ [k]=@@ i; k++; } } for(i=0;i<j@@ ;i++){ for(h=0;h@@ <j@@ -1;@@ h@@ ++){ if(@@ pt@@ [@@ yx@@ [h@@ ]@@ ].@@ old@@ <@@ pt@@ [@@ yx@@ [h@@ +1@@ ]@@ ].@@ old@@ ){ e=@@ yx@@ [h@@ ]; yx@@ [h@@ ]=@@ yx@@ [h@@ +1]; yx@@ [h@@ +1]=@@ e; } } } for(i=0;i<j@@ ;i++){ printf("%s\n",@@ pt@@ [@@ yx@@ [i]@@ ].id); } for(i=0;i<k;i++){ printf("%s\n",@@ pt@@ [@@ byx@@ [i]@@ ].id); } }  
c -1
h -1
intm[@@ 1000][1000]; intmain() { inta,b,@@ c,d,@@ f,@@ i,j,@@ e=0,@@ n; scanf("%d",&n); for(i=0;i<n;i++) { for(j=0;j<n;j++) { scanf("%d",&@@ m@@ [i][j]); } printf("\n"); } for(i=0;i<n;i++) { for(j=0;j<n;j++) { if(m@@ [i][j]==0) { a=i; b=j; e=1; break; } } if(e@@ ==1) { break; } } for(j=@@ b@@ ;j<n;j++) { if(m@@ [a@@ ][j]@@ !=0) { c@@ =j@@ -1; break; } } for(i=a@@ ;i<n;i++) { if(m@@ [i]@@ [b@@ ]!=0) { d@@ =i-1; break; } } f@@ =(@@ c@@ -b@@ -1)*(@@ d@@ -@@ a@@ -1); printf("%d",@@ f); return0; }  
c -1
h -1
0

intm,n; inta[100]; void@@ insert@@ (void) { inti=0; scanf("%d%d",&m,&n); for(i=0;i<m;i++) { scanf("%d",&a[i]); } printf("\n"); for(i=m;i<@@ m+n;i++) { scanf("%d",&a[i]); } } void@@ px@@ (int*p@@ ) { inti,j,@@ b=0; for(i=0;i<m;i++) { for(j=@@ m-1@@ ;j>i;j--) { if(@@ *(p+j)@@ <*@@ (p@@ +j@@ -1)) { b@@ =*(p@@ +j); *(p+j)@@ =*(p@@ +j@@ -1); *(p@@ +j@@ -1)@@ =@@ b; } } } for(i=m;i<@@ m+n;i++) { for(j=@@ m+@@ n-1@@ ;j>i;j--) { if(@@ *(p+j)@@ <*@@ (p@@ +j@@ -1)) { b@@ =*(p@@ +j); *(p+j)@@ =*(p@@ +j@@ -1); *(p@@ +j@@ -1)@@ =@@ b; } } } printf("%d",@@ *(p+@@ 0@@ )); for(i=1;i<@@ m+n;i++) { printf("%d",@@ *(p@@ +i)); } } voidmain() { insert@@ (); px@@ (a); }  
c -1
h -1
intmain() { inta[@@ 17@@ ],@@ i,n,@@ j; scanf("%d",&@@ a[1]); while(@@ a[1]@@ >0) { n=0; i=1; do {@@ i++; scanf("%d",&a[i]); for(j=1;j<=@@ i;j++) if(a[i]==a[j]@@ *2@@ ||@@ a[j]==@@ a[i]@@ *2) n++; } while(a[i]@@ !=0); printf("%d\n",@@ n-1); scanf("%d",&@@ a[1]); } }  
c -1
h -1
0

main() { int@@ k@@ [25],@@ a[@@ 25]; inti,j,n,@@ max; scanf("%d",&n); for(i=0;i<n;i++) a[i]@@ =1; for(i=0;i<=n-1;i++) scanf("%d",&@@ k@@ [i]); for(i=n-2;i>=0;i--) for(j=i+1;j<=@@ n-1;j++) if((@@ k@@ [j]<=@@ k@@ [i]@@ )&&(@@ a[i]@@ <=@@ a[j]@@ )) a[i]=@@ a[j]@@ +1; for(@@ max=0,@@ i@@ =0;i<n;i++) if(a[i]>=@@ max@@ )max=@@ a[i]; printf("%d",max); }  
c -1
h -1
intmain(){ intn,a[@@ 20001@@ ],@@ i,j; cin>>n; for(i=0;i<n;i++){ cin>>a[i]; } for(i=0;i<n;i++){ if(a[i]@@ ==0)@@ continue; for(j=i+1;j<n;j++){ if(a[i]==@@ a[j])@@ a[j]=0; } } int@@ temp@@ [@@ 20001@@ ],@@ k=0; for(i=0;i<n;i++){ if(a[i]@@ !=0){ temp@@ [k]=@@ a[i]; k++; } } for(i=0;i<@@ k-1@@ ;i++)@@ cout<<@@ temp@@ [i]@@ <<''; cout<<@@ temp@@ [k-1]@@ <<endl; return0; }  
c -1
h -1
0

intmain() { intn,k,@@ a[1000]; cin>>n>>k; for(inti=0;i<@@ n;i++)@@ cin>>a[i]; for(inti=0;i<n;i++){ for(intj=0;j<n;j++){ if(a[j]==@@ k-@@ a[i]@@ ){ cout<<"yes"; return0; } } } cout<<"no"; return0; }  
c -1
h -1
voidmain() { inta[@@ 25],@@ A@@ [25@@ ]={0},@@ n,i,j,@@ max; scanf("%d",&n); for(i=0;i<n;i++) scanf("%d",&a[i]); A[@@ n-1@@ ]=1; for(i=n-2;i>=0;i--) { for(j=i;j<@@ n;j++) if(a[i]>=a[j]) { if(A@@ [i]<=@@ A@@ [j]) A@@ [i]=@@ A@@ [j]+1; } if(A@@ [i]==0) A@@ [i]=1; } max=@@ A@@ [0]; for(i=0;i<n;i++) { if(A@@ [i]>max) max=@@ A@@ [i]; } printf("%d",max); }  
c -1
h -1
0

main() { chara[@@ 260@@ ]; charb[@@ 260@@ ]; charc[@@ 260@@ ]; scanf("%s",a); scanf("%s",b); scanf("%s",c); int@@ len1@@ =strlen(a); int@@ len2@@ =strlen(b); int@@ len3@@ =strlen(c); inti,j,@@ length@@ ; for(i=0;i<len1;i++) { length@@ =0; for(j=0;j<len2@@ ;j++) { if(a@@ [i+j]==@@ b[j]@@ )@@ length@@ =@@ length@@ +1; } if(@@ length@@ ==@@ len2) { for(j=0;j<i;j++) { printf("%c",@@ a[j]); } for(j=0;j<@@ len3@@ ;j++) { printf("%c",@@ c@@ [j]); } for(j=i@@ +@@ len3@@ ;j<@@ len1@@ ;j++) { printf("%c",@@ a[j]); } printf("\n"); break; } } if(@@ length@@ !=@@ len2@@ )@@ printf("%s\n",@@ a); }  
c -1
h -1
int@@ min@@ (inta[@@ ]) { intn=0,@@ i,@@ x=@@ a[0]; while(@@ a[n@@ ]@@ !=0)@@ n++; for(i=0;i<=n-1;i++) if(x>@@ a[i])@@ x=@@ a[i]; return@@ x; } intf@@ (inta[@@ ]) { intn=0; while(@@ a[n@@ ]@@ !=0)@@ n++; if(n==1) return1; else { intb[@@ 25@@ ],c[@@ 25],@@ i; if(a[@@ n-1@@ ]==@@ min@@ (a@@ )) { for(i=0;i<=@@ n-2;i++) b[i]=@@ a[i]; b[@@ n-1@@ ]=0; return@@ 1@@ +@@ f(@@ b); } else { intk=0; for(i=0;i<=n-1;i++) { if(a[i]!=@@ min@@ (a@@ )) { b[k@@ ]=a[i]; k++; } } b[k@@ ]=0; do@@ n--; while(@@ a[n@@ ]!=@@ min@@ (a)); for(i=0;i<=@@ n;i++) c[i]=a[i]; c[@@ n+1@@ ]=0; return@@ f(@@ b@@ )>@@ f(@@ c)@@ ?@@ f(@@ b)@@ :@@ f(@@ c); } } } void@@ main(@@ void) { intn,a[@@ 25]; scanf("%d",&n); intk; for(k=0;k<=@@ n-1;k++) scanf("%d",&@@ a[k]); a[n@@ ]=0; printf("%d\n",@@ f(a@@ )); }  
c -1
h -1
0

intmain() { introw,col,@@ i,j; inta[@@ 101][101]; scanf("%d%d",&row,&col); for(i=0;i<row;i++){ for(j=0;j<col;j++){ scanf("%d",&(@@ a[i][j]@@ )); } } for(i=0;i<@@ row+col@@ ;i++){ if(i@@ <col) j=0; else j@@ =i@@ -col@@ +1; for(@@ ;j<=@@ i@@ &&j@@ <row@@ ;j++){ printf("%d\n",@@ a[j][i-j@@ ]); } } return0; }  
c -1
h -1
intmain() { inta; while(cin>>@@ a) { if(a@@ !=-1) { inti=0,@@ j,k,@@ p=0; intb[@@ 15@@ ]={@@ a@@ }; while(@@ b[i]@@ !=0) { cin>>@@ b@@ [i+1]; i++; } for(j=0;j<i;j++) { for(k=j+1;k<@@ i;k++) if(@@ b[k@@ ]==2*@@ b[j]@@ ||@@ b[j]@@ ==@@ 2*@@ b[k@@ ]) { p=p@@ +1; } } cout<<@@ p@@ <<endl; } } return0; }  
c -1
h -1
0

intmain() { charstring@@ [256],@@ substring@@ [256],@@ replacement@@ [256],@@ final@@ [500]; inti,j,k,@@ length@@ ,@@ length1@@ ,@@ length2@@ ,@@ a,@@ flag=0; scanf("%s",@@ string); scanf("%s",@@ substring); scanf("%s",@@ replacement); length@@ =strlen(@@ string); length1@@ =strlen(@@ substring); length2@@ =strlen(@@ replacement); for(i=0,j@@ =0;@@ string@@ [i]!='\0';i++) { if(string@@ [i]==@@ substring@@ [j]) { a=i; if(string@@ [a@@ +1@@ ]==@@ substring@@ [j+1]) { flag=1; break; } } } if(flag==1) { for(k=0;k<=@@ a@@ -1;k++) *(@@ final@@ +k)@@ =*(@@ string@@ +@@ k); for(k=@@ a@@ ;k<@@ a+@@ length2@@ ;k++) *(@@ final@@ +k)@@ =*(@@ replacement@@ +k@@ -@@ a); for(k=@@ a+@@ length2@@ ;k<@@ length@@ +@@ length2@@ -@@ length1@@ ;k++) *(@@ final@@ +k)@@ =*(@@ string@@ +k@@ +@@ length1@@ -@@ length2@@ ); *(@@ final@@ +@@ length@@ +@@ length2@@ -@@ length1@@ )@@ ='\0'; for(k=0;@@ final@@ [k]@@ !='\0'@@ ;k++) printf("%c",@@ final@@ [k]); } elseif(@@ flag@@ ==0) { for(i=0,j@@ =0;@@ string@@ [i]!='\0';i++) printf("%c",@@ string@@ [i]); return0; } return0; }  
c -1
h -1
intmain() { char@@ src@@ [256@@ ]={0}; char@@ subString@@ [256@@ ]={0}; char@@ replacement@@ [256@@ ]={0}; char@@ pre@@ [256@@ ]={0}; char*@@ post@@ ; scanf("%s%s%s",@@ src@@ ,@@ subString@@ ,@@ replacement); char*@@ start@@ ; start@@ =@@ strstr(@@ src@@ ,@@ subString@@ ); if(@@ start@@ !=NULL) { char*@@ q=@@ pre@@ ,@@ *@@ p=@@ src@@ ; while(p@@ !=@@ start@@ ) { *@@ q=@@ *p; p++; q++; } *@@ q=@@ '\0'@@ ; post@@ =@@ start@@ +@@ strlen(@@ subString@@ ); strcat(@@ pre@@ ,@@ replacement); strcat(@@ pre@@ ,@@ post@@ ); printf("%s",@@ pre@@ ); } else printf("%s",@@ src@@ ); return0; }  
c -1
h -1
1


intmain(){ intn,k,i,@@ a,@@ sum,@@ d; scanf("%d%d",&n,&k); int*@@ sz =@@ (int*)malloc(sizeof(int)*n); for(i=0;i<n;i++){ scanf("%d",&sz[i]); } for(i=0;i<n-1;i++){ a@@ =i+1; for(a@@ ;a@@ <n;@@ a++){ sum=@@ sz[i]@@ +@@ sz[a@@ ]; if(sum@@ ==k){ d=1; } } } if(d@@ ==1){ printf("yes"); }else{ printf("no"); } free(@@ sz@@ ); return0; }  
c -1
h -1
inta[@@ 26]; intmain() { int@@ d@@ (int@@ xz@@ ,int@@ p@@ ,int@@ q); inty,@@ i,@@ n; scanf("%d",&n); for(i=1;i<=n;i++) { scanf("%d",&a[i]); } y=@@ d@@ (@@ 10000@@ ,@@ 1,@@ n); printf("%d",@@ y); } int@@ d@@ (int@@ xz@@ ,int@@ p@@ ,int@@ q) { int@@ g,@@ h; if(p==@@ q@@ &&@@ a[p@@ ]<=@@ xz@@ )@@ return1; elseif(@@ p@@ ==@@ q@@ &&@@ a[p@@ ]>@@ xz@@ )return0; else { if(@@ xz@@ <@@ a[p@@ ])@@ return(@@ d@@ (@@ xz@@ ,@@ p@@ +1,@@ q@@ )); else { g@@ =1@@ +d@@ (@@ a[p@@ ],@@ p@@ +1,@@ q); h=@@ d@@ (@@ xz@@ ,@@ p@@ +1,@@ q); if(g@@ >@@ h@@ )@@ return(@@ g@@ ); else@@ return(@@ h); } } }  
c -1
h -1
0

voidmain() {@@ inta[100][100],@@ row,col,@@ i,j,k; scanf("%d%d",&row,&col); for(i=0;i<row;i++) for(j=0;j<col;j++) scanf("%d",&a[i][j]); if(row@@ ==1) {@@ for(j=0;j<col;j++) printf("%d\n",@@ a[0]@@ [j]); } else {@@ for(j=0;j<col;j++) {@@ i=0; k=j; while(k@@ >=0&&i@@ <row) {@@ printf("%d\n",a[i]@@ [k]); k--; i++; } } for(i=1;i<@@ row-1;i++) {@@ j=col-1; k=i; while(j@@ >=0@@ &&k@@ <row) {printf("%d\n",@@ a[k]@@ [j]); j--; k++; } } printf("%d\n",a[@@ row-1@@ ][col@@ -1]); } }  
c -1
h -1
voidmain() { intk,i,j,@@ l,@@ s=0,@@ a[100@@ ][100@@ ]={0},@@ m,@@ n@@ ,*p; p=a; scanf("%d",&k); for(i=0;i<k;i++) {@@ s=0; scanf("%d%d",&m,&n); p=a; for(j=0;j<m;j++) for(l=0;l<n;l++) scanf("%d",@@ (@@ *(a@@ +j)+@@ l@@ )); for(j=0;j<n;j++) s=s@@ +*(@@ a[0]@@ +j); for(j=0;j<n@@ &&m@@ >1@@ ;j++) s=s@@ +*(@@ a[m-1]@@ +j); for(j=1;j<@@ m-1;j++) s=s@@ +*(@@ a[j]); for(j=1;j<@@ m-1@@ &&n@@ >1@@ ;j++) s=s@@ +*(@@ a[j]@@ +n-1); printf("%d\n",s); } }  
c -1
h -1
0

intmain() { structpatient { charnum[@@ 11]; intage; } pat@@ [@@ 101],@@ t; intn,i,j; scanf("%d",&n); for(i=0;i<n;i++) { scanf("%s%d",&@@ pat[i].@@ num,&@@ pat@@ [i].age); } for(i=0;i<n-1;i++) { for(j=0;j<n-1-i;j++) { if((@@ pat@@ [j].age@@ <60&&@@ pat@@ [j+1@@ ].age@@ >=60@@ )||(@@ pat@@ [j].age@@ >=60&&@@ pat@@ [j+1@@ ].age@@ >@@ pat@@ [j].age@@ )) { t=@@ pat@@ [j]; pat@@ [j]=@@ pat@@ [j+1]; pat@@ [j+1]=t; } } } for(i=0;i<n;i++) { printf("%s\n",@@ pat[i].@@ num); } return0; }  
c -1
h -1
intmain() { int@@ shuru@@ [@@ 20@@ ]={0}; while(@@ true@@ ) { int@@ i=1@@ ,j,@@ k,@@ s,@@ no; s=0; cin>>@@ shuru@@ [0]; if(@@ shuru@@ [0]@@ ==-1) break; for(i=1;i<=@@ 15;i++) { cin>>@@ shuru@@ [i]; if(@@ shuru@@ [i]==0) break; for(j=0;j<i;j++) if((@@ shuru@@ [j]==2*@@ shuru@@ [i]@@ )||(@@ 2*@@ shuru@@ [j]==@@ shuru@@ [i]@@ )) s++; } cout<<s<<endl; for(i=0;i<=@@ 14@@ ;i++) shuru@@ [i]=0; } return0; }  
c -1
h -1
0

intmain() { intleap@@ ,@@ year,@@ month,@@ day,@@ sum=0; inta[@@ 2][@@ 12@@ ]={@@ {@@ 31,@@ 28@@ ,31,30,31,30,31@@ ,31,30,31,30@@ ,31,@@ },@@ {@@ 31,@@ 29@@ ,31,30,31,30,31,31,30,31,30,31@@ }@@ }; cin>>year>>@@ month>>@@ day; leap@@ =(@@ (@@ year%@@ 400==0)||(@@ year%100!=0@@ &&@@ year%@@ 4@@ ==0@@ )); for(inti=0;i<@@ month-1;i++) sum=sum+@@ a[@@ leap@@ ]@@ [i]; sum=sum+day; cout<<sum<<endl; return0; }  
c -1
h -1
intmain() { inta[16@@ ]={0},@@ i=0,j=0,@@ n=0,@@ num,@@ k=0,@@ m; do { cin>>a[0]; if(a[0]==-1) break; for(i=1;i<@@ 16@@ ;i++) { cin>>a[i]; if(a[i]==0) break; } n=0; for(k=0;k<i;k++) for(j=0;j<i;j++) { if(a[k@@ ]==2*@@ a[j]) n++; } cout<<n<<endl; } while(@@ 1); return0; }  
c -1
h -1
0

int@@ fact@@ (inta,int@@ min) { if(a<@@ min) return0; int@@ way@@ =1; for(inti=@@ min@@ ;i<=sqrt(@@ (double)@@ a)@@ ;i++) if(a%i==0) way@@ +=@@ fact@@ (a/i,i); return@@ way@@ ; } intmain() { intn; cin>>n; for(inti=0;i<n;i++) { intc; cin>>@@ c; cout<<@@ fact@@ (c,@@ 2)<<endl; } return0; }  
c -1
h -1
intf@@ (intx) { int@@ z; if(((@@ x%@@ 4==0)&&(@@ x@@ %100!=0@@ )@@ )||(@@ x%@@ 400==0)) z=1; else z=0; return@@ z; } main() { intyear,month,day; int@@ z,@@ i=0,@@ sum=0; inta[@@ 12@@ ],b[@@ 12@@ ]; scanf("%d%d%d",&year,&month,&day); z=@@ f(@@ year@@ ); if(z@@ ==1) {@@ inta[@@ ]={31,@@ 29,31,30,31,30,31,31,30,31,30,31}; for(i=0;i<month-1;i++) { sum=sum+@@ a[i]; } } else { inta[@@ ]={31,@@ 28,31,30,31,30,31,31,30,31,30,31}; for(i=0;i<month-1;i++) { sum=sum+@@ a[i]; } } sum=sum+day; printf("%d",sum); getchar(); getchar(); return0; }  
c -1
h -1
0

intmain() { inta[1000]; inti,j,n,@@ k; int@@ l=0; int@@ swap@@ ; scanf("%d",&n); scanf("%d",&k); for(i=0;i<n;i++) { scanf("%d",&a[i]); } for(i=0;i<n-1;i++) { for(j=i+1;j<n;j++) { if(a[i]+a[j]==k) { printf("yes"); return0; } } } printf("no"); return0; }  
c -1
h -1
intmain() { intn,i,j,k,@@ s,@@ m,@@ t,@@ p,@@ r; inta[100],b[100]; char@@ str1@@ [100][10],@@ str2@@ [100][10]; charstring@@ [10]; scanf("%d",&n); for(i=0;i<n;i++) scanf("%s%d",@@ str1@@ [i],&@@ a[i]); for(p@@ =0,@@ s@@ =0;p@@ <n;p++) { if(a[@@ p@@ ]@@ >=60) { b[@@ s@@ ]=a[@@ p@@ ]; strcpy(@@ str2@@ [s@@ ],@@ str1@@ [p@@ ]); s=s+1; } } for(k=0;k<@@ (@@ s@@ -1)@@ ;k++) { for(m=0;m<@@ (@@ s@@ -k@@ -1)@@ ;m++) { if(@@ b[m@@ +1@@ ]>@@ b[m@@ ]) { t=@@ b[m@@ +1]; b[m@@ +1]=@@ b[m@@ ]; b[m@@ ]=t; strcpy(@@ string,@@ str2@@ [m@@ +1@@ ]); strcpy(@@ str2@@ [m@@ +1],@@ str2@@ [m]); strcpy(@@ str2@@ [m@@ ],@@ string); } } } for(j=0;j<@@ s@@ ;j++) printf("%s\n",@@ str2@@ [j]); for(r=0;r@@ <n;@@ r++) { if(a[@@ r@@ ]@@ <60) printf("%s\n",@@ str1@@ [r@@ ]); } getchar(); getchar(); getchar(); getchar(); getchar(); getchar(); }  
c -1
h -1
0

intmain(){ double@@ x,y; intn=0,@@ i,@@ c,d,@@ m=0; chara[@@ 502@@ ],b[@@ 502@@ ]; scanf("%lf%s%s",&@@ x,@@ a,b); c@@ =strlen(a); d@@ =strlen(b); for(i=0;i<c@@ ;i++){ if(a[i]!='A'&&a[i]!='T'&&a[i]!='C'&&a[i]!='@@ G'){ m=1; break; } } for(i=0;i<d@@ ;i++){ if(@@ b[i]!='A'&&b[i]!='T'&&b[i]!='C'&&b[i]!='@@ G'){ m=1; break; } } if(m@@ ==1||@@ c@@ !=@@ d@@ ){ printf("error"); }else{ for(i=0;@@ a[i],@@ b[i]@@ ;i++){ if(a[i]==b[i]){ n++; } } y@@ =1.0*@@ n/@@ c; if(y@@ >@@ x){ printf("yes"); }else{ printf("no"); } } return0; }  
c -1
h -1
voidmain() { structstudent { intID; intchinese; intmath; inttotal; }@@ stu1@@ ,@@ stu2@@ ,@@ stu3@@ ,@@ temp; inti,n; stu1@@ .@@ total=0; stu2@@ .@@ total=0; stu3@@ .@@ total=0; scanf("%d",&n); for(i=0;i<n;i++) { scanf("%d%d%d",&@@ temp.@@ ID,&@@ temp.@@ chinese@@ ,&@@ temp.@@ math); temp.@@ total=@@ temp.@@ chinese+@@ temp.@@ math; if(@@ temp.@@ total>@@ stu1@@ .@@ total) { stu3@@ =@@ stu2@@ ; stu2@@ =@@ stu1@@ ; stu1@@ =temp; } elseif(@@ temp.@@ total@@ <=@@ stu1@@ .@@ total@@ &&@@ temp.@@ total>@@ stu2@@ .@@ total) { stu3@@ =@@ stu2@@ ; stu2@@ =temp; } elseif(@@ temp.@@ total@@ <=@@ stu2@@ .@@ total@@ &&@@ temp.@@ total>@@ stu3@@ .@@ total@@ )@@ stu3@@ =temp; } printf("%d%d\n",@@ stu1@@ .@@ ID,@@ stu1@@ .@@ total); printf("%d%d\n",@@ stu2@@ .@@ ID,@@ stu2@@ .@@ total); printf("%d%d\n",@@ stu3@@ .@@ ID,@@ stu3@@ .@@ total); }  
c -1
h -1
0

struct@@ people { charID[10]; intage; }; voidmain() { intn,i,@@ t; struct@@ people@@ peo@@ [100]; struct@@ people@@ old@@ [100]; void@@ bubble@@ (struct@@ people@@ a[100@@ ],int@@ n); scanf("%d",&n); for(i=0;i<n;i++) { scanf("%s",@@ peo@@ [i].ID); scanf("%d",&@@ peo@@ [i].age); } t=0; for(i=0;i<n;i++) { if(@@ peo@@ [i].age>=60) { strcpy(old@@ [t@@ ].ID,@@ peo@@ [i].ID); old@@ [t@@ ].age=@@ peo@@ [i].age; t++; } else continue; } bubble@@ (@@ old@@ ,@@ t); for(i=0;i<t;i++) printf("%s\n",old@@ [i].ID); for(i=0;i<n;i++) { if(@@ peo@@ [i].age<60) printf("%s\n",@@ peo@@ [i].ID); } } void@@ bubble@@ (struct@@ people@@ a[100@@ ],int@@ n) { inti,j; struct@@ people@@ t; for(i=1;i<n;i++) for(j=0;j<n-i;j++) { if(a[j]@@ .@@ age@@ <@@ a[j+1@@ ].age) { t=a[j]; a[j]=a[j+1]; a[j+1]=t; } } }  
c -1
h -1
structpatient { charnum[10]; intage; structpatient*next; }; intn; structpatient*@@ creat@@ (void) { structpatient*@@ head; structpatient*@@ p1,*p2; intnum@@ =1; head=NULL; while(@@ num@@ <=@@ n) { p1=(struct@@ patient@@ *)malloc(LEN); scanf("%s%d",@@ p1->num,&p1->@@ age); if(num@@ ==1) head=p1; else p2->next=p1; p2=p1; num++; } p2->next=NULL; return(head); } intmain() { structpatient*@@ pt@@ ,*@@ p,*@@ pre@@ ; inti,@@ max,@@ num=0; scanf("%d",&n); pt@@ =@@ creat@@ (); for(p=@@ pt@@ ;p@@ ;@@ p=p->next) { if(p->@@ age@@ >=60) num++; } for(i=1;i<=@@ num;i++) { max=@@ 59@@ ; for(p=@@ pt@@ ;p@@ ;@@ p=p->next) { if(max<@@ p->age@@ ) max=@@ p->@@ age; } for(p=@@ pre@@ =@@ pt@@ ;p@@ ;@@ p=p->next) { if(p->@@ age@@ !=@@ max) pre@@ =p; else break; } printf("%s\n",p->@@ num); if(p==@@ pt@@ ) pt@@ =p@@ ->next; else pre@@ ->next=@@ p@@ ->next; } for(p=@@ pt@@ ;p@@ ;@@ p=p->next) printf("%s\n",p->@@ num); return0; }  
c -1
h -1
1


intmain() { intn,k; scanf("%d%d\n",&n,&@@ k); inta[@@ 1000]={0}; inti; scanf("%d",&a[0]); for(i=1;i<n;i++){ scanf("%d",&a[i]); } int@@ c=0; intj; for(i=0;i<(@@ n-1)@@ ;i++){ for(j@@ =(@@ i@@ +1)@@ ;j>i@@ &&j@@ <@@ n;j++){ if(a[i]+a[j]==k) c++; } } if(c@@ !=0){ printf("yes"); } if(c@@ ==0){ printf("no"); } return0; }  
c -1
h -1
struct@@ pa { charstr@@ [10]; inty; }@@ pa@@ [@@ 101]; intmain() { intn; inti,j,@@ k=0,@@ t=0; inta[100],b[100]; scanf("%d",&n); for(i=0;i<n;i++) scanf("%s%d",@@ pa@@ [i].@@ str@@ ,&@@ pa@@ [i].@@ y); for(i=0;i<n;i++) { if(pa@@ [i].y@@ >=60) { a[k]=@@ i; k++; } else { b[t@@ ]=i; t++; } } for(i=1;i<k;i++) for(j=0;j<@@ k@@ -i;j++) if(pa@@ [@@ a[j]@@ ].@@ y@@ <@@ pa@@ [@@ a[j+1@@ ]@@ ].@@ y) { pa@@ [100@@ ]=@@ pa@@ [@@ a[j]@@ ]; pa@@ [@@ a[j]@@ ]=@@ pa@@ [@@ a[j+1@@ ]@@ ]; pa@@ [@@ a[j+1@@ ]@@ ]=@@ pa@@ [100]; } for(i=0;i<k;i++) printf("%s\n",@@ pa@@ [@@ a[i]@@ ].@@ str); for(i=0;i<t;i++) printf("%s\n",@@ pa@@ [@@ b[i]@@ ].@@ str); }  
c -1
h -1
0

intmain() { intn,k; scanf("%d%d",&n,&k); inti,j,@@ p=0,@@ q; intnum[@@ 1000]; for(i=0;i<n;i++) { int@@ num1@@ ; scanf("%d",&@@ num1@@ ); num[i]=@@ num1@@ ; } for(q=0;q@@ <n;@@ q++) { for(j=@@ q@@ +1@@ ;j<n;j++) { if((@@ num[@@ q@@ ]+@@ num[j]@@ )==@@ k) { p++; break; } } if(p@@ >0@@ )break; } if(p@@ ==0) { printf("no"); }else{ printf("yes"); } return0; }  
c -1
h -1
intmain() { inta[@@ 1000][1000],@@ j,@@ i,@@ m,n,@@ l,@@ b,@@ k; scanf("%d",&@@ l); for(j=0;j<l;j++) { for(i=0;i<l;i++) { scanf("%d",&a[j]@@ [i]); } } for(j=0;j<l;j++) { for(i=0;i<l;i++) { if(a[j]@@ [i]@@ ==0){@@ b@@ =j@@ ;j@@ =@@ l; break;} } } for(m=@@ l@@ -1@@ ;m@@ >=0@@ ;m@@ --) { for(n=@@ l@@ -1;@@ n@@ >=0@@ ;n@@ --) { if(a[m@@ ][n@@ ]@@ ==0){@@ k=@@ m@@ ;m@@ =-1; break;} }} printf("%d",(@@ k-@@ b@@ -1)*(@@ n-i@@ -@@ 1 )); return0; }  
c -1
h -1
0

int@@ tmp=@@ 2; int@@ suml@@ (intn,int@@ tmp@@ ) { intsum=0; if(n==1) { return1; } for(inti=@@ tmp@@ ;i<=n;i++) { if(n%i==0) { sum+=@@ suml@@ (n/i,i); } } returnsum; } intmain() { intm; cin>>m; intn; for(inti=0;i<m;i++) { cin>>n; int@@ zon_shu@@ =0; zon_shu@@ =@@ suml@@ (n,@@ tmp@@ ); cout<<@@ zon_shu@@ <<endl; } }  
c -1
h -1
intmain() { intsz[@@ ROW@@ ][@@ COL@@ ]; inti,j,n,@@ a=0,@@ s1,@@ s2,@@ e1@@ ,@@ e2@@ ,sum; scanf("%d",&n); for(i=0;i<n;i++){ for(j=0;j<n;j++){ scanf("%d",&sz[i][j]); if(sz@@ [i][j]==0&&@@ a@@ ==0){ s1@@ =i; s2@@ =j; a=1; } if(sz@@ [i][j]==0){ e1@@ =i; e2@@ =j; } } } sum=(@@ e1@@ -@@ s1@@ -1)*(@@ e2@@ -@@ s2@@ -1); printf("%d",sum); return0; }  
c -1
h -1
0

intmain(){ char@@ yuan@@ [256]; char@@ sub@@ [256]; char@@ replace@@ [256]; char@@ sz[@@ 256@@ ][@@ 256]; gets(@@ yuan@@ ); gets(sub); gets(@@ replace); int@@ n=strlen(@@ sub); int@@ m=strlen(@@ yuan@@ ); inti,k,@@ result; int@@ a=0; int@@ b=0; for(i=0;i<=@@ m@@ -@@ n;i++) { for(k=0;k<n;k++) { sz[a@@ ][b@@ ]=@@ yuan@@ [i+k@@ ]; b++; } sz[a@@ ][b@@ ]='\0'; a++; b=0; } for(i=0;i<a;i++) { result=@@ strcmp(@@ sz[i]@@ ,@@ sub); if(result@@ ==0) { strcpy(@@ sz[i]@@ ,@@ replace); printf("%s",@@ sz@@ [i]); i@@ +=@@ n; break; } else{ printf("%c",@@ yuan@@ [i]); } } for(i@@ =i@@ ;i<@@ m;i++) { printf("%c",@@ yuan@@ [i]); } return0; }  
c -1
h -1
main() {@@ intn,i; struct@@ h { int@@ mun@@ ; intchinese; intmath; struct@@ h@@ *p; }; struct@@ h@@ *a@@ ,*@@ b@@ ,*@@ lily@@ ; scanf("%d",&n); a=@@ len; lily@@ =@@ a; for(i=0;i<n;i++) {@@ scanf("%d%d%d",&@@ a@@ ->@@ mun@@ ,&@@ a@@ ->@@ chinese@@ ,&@@ a@@ ->@@ math); b=@@ len; a@@ ->@@ p=@@ b; a=@@ b; } b@@ =NULL; a=@@ lily@@ ; int@@ a1@@ =0,@@ a2@@ =0,@@ a3@@ =0,@@ b1@@ =0,@@ b2@@ =0,@@ b3@@ =0,@@ c; for(i=0;i<n;i++) {@@ c@@ =(@@ a@@ ->@@ chinese+@@ a@@ ->@@ math); if(c@@ >@@ a1@@ ){@@ b3@@ =@@ b2@@ ;@@ b2@@ =@@ b1@@ ;@@ b1@@ =@@ a@@ ->@@ mun@@ ;@@ a3@@ =@@ a2@@ ;@@ a2@@ =@@ a1@@ ;@@ a1@@ =@@ c@@ ;} elseif(@@ c@@ >@@ a2@@ ){@@ b3@@ =@@ b2@@ ;@@ b2@@ =@@ a@@ ->@@ mun@@ ;@@ a3@@ =@@ a2@@ ;@@ a2@@ =@@ c@@ ;} elseif(@@ c@@ >@@ a3@@ ){@@ b3@@ =@@ a@@ ->@@ mun@@ ;@@ a3@@ =@@ c@@ ;} a=@@ a@@ ->@@ p; } printf("%d%d\n",@@ b1,@@ a1@@ ); printf("%d%d\n",@@ b2@@ ,@@ a2@@ ); printf("%d%d\n",@@ b3@@ ,@@ a3@@ ); }  
c -1
h -1
0

intmain() { intm,@@ a,b; inti,@@ s; int@@ c=0; scanf("%d%d%d",&@@ m,&@@ a,&b); if((@@ m@@ %4==0&&@@ m@@ %100!=0@@ )||(@@ m@@ %@@ 400==0)) { int@@ months@@ [@@ 13]={0,31,@@ 29,31,30,31,30,31,31,30,31,30,31}; for(i=0;i<a;i++) c=@@ c+@@ months@@ [i]; s=@@ c+@@ b; } else { int@@ month@@ [13]={0,31,28,31,30,31,30,31,31,30,31,30,31}; for(i=0;i<a;i++) c=@@ c+@@ month@@ [i]; s=@@ c+@@ b; } printf("%d",s); return0; }  
c -1
h -1
intmain() { intn,i,@@ num,@@ count@@ [100]={0}; cin>>n; for(i=1;i<=n;i++) { cin>>num; count[@@ num@@ ]++; if(i@@ ==1)@@ cout<<@@ num; if(count@@ [@@ num@@ ]@@ ==1@@ &&i@@ >=@@ 2)@@ cout<<""<<@@ num; } return0; }  
c -1
h -1
0

intmain() { intt,@@ m,n,@@ i,j,@@ sum; inta[@@ 101][101]; cin>>t; for(@@ ;t@@ >0@@ ;t@@ --) { cin>>m>>n; sum=0; for(i=0;i<m;i++) for(j=0;j<n@@ ;j++)@@ cin>>*(*(a+i)+j); for(i=0;i<m;i++)@@ sum+=*(*(a@@ +i)); for(i=0;i<m;i++)@@ sum+=@@ *(*(a+i)@@ +n-1); for(j=1;j<@@ n-1@@ ;j++)@@ sum+=*(*(a@@ )@@ +j); for(j=1;j<@@ n-1@@ ;j++)@@ sum+=*(*(a@@ +m-1)@@ +j); cout<<sum<<endl; } return0; }  
c -1
h -1
intmain(intargc,char*argv[]) { charid@@ [100][100]; intage@@ [100]; intn; inti,@@ k; scanf("%d",&n); for(i=0;i<n;i++){ scanf("%s",@@ id[i]); scanf("%d",&@@ age[i]); } int@@ e; char@@ t[@@ 13@@ ]; char@@ id1@@ [100][@@ 13@@ ]; int@@ age1@@ [100]; char@@ id2@@ [100][@@ 13@@ ]; int@@ age2@@ [100]; int@@ x=0,@@ y=0; for(i=0;i<n;i++){ if(age[i]@@ >=60){ age1@@ [x@@ ]=@@ age[i]; strcpy(@@ id1@@ [x@@ ],@@ id[i]); x++; } if(age[i]@@ <60){ age2@@ [y@@ ]=@@ age[i]; strcpy(@@ id2@@ [y@@ ],@@ id[i]); y++; } } for(k=1;k<@@ x@@ ;k++){ for(i=0;i<x@@ -@@ k;i++){ if(@@ age1@@ [i]<@@ age1@@ [i+1@@ ]){ e=@@ age1@@ [i+1]; age1@@ [i+1]=@@ age1@@ [i]; age1@@ [i]=@@ e; strcpy(@@ t,@@ id1@@ [i+1]); strcpy(@@ id1@@ [i+1],@@ id1@@ [i]); strcpy(@@ id1@@ [i],@@ t); } } } for(i=0;i<x;i++){ printf("%s\n",@@ id1@@ [i]); } for(i=0;i<@@ y@@ ;i++){ printf("%s\n",@@ id2@@ [i]); } return0; }  
c -1
h -1
0

intmain() { char@@ m=0; int@@ cnt@@ [@@ 255@@ ],i,j,@@ n; struct{ intid; char@@ au@@ [@@ 32@@ ]; }@@ bk@@ [1000]; memset(@@ cnt@@ ,0,sizeof(@@ cnt@@ )); scanf("%d",&n); for(i=0;i<n;i++){ scanf("%d%s",&@@ bk[i].@@ id,@@ bk[i].@@ au); for(j=0;@@ bk[i].@@ au@@ [j]@@ ;j++) if(@@ ++@@ cnt@@ [@@ bk[i].@@ au@@ [j]@@ ]>@@ cnt@@ [m@@ ]) m=@@ bk[i].@@ au@@ [j]; } printf("%c\n%d\n",@@ m,@@ cnt@@ [m]); for(i=0;i<n;i++) if(@@ strchr(@@ bk[i].@@ au@@ ,@@ m@@ )) printf("%d\n",@@ bk@@ [i].id); return0; }  
c -1
h -1
inta[@@ 20000],b[@@ 10000],@@ n,@@ m; voidf1@@ (inta[],intn) { inti; for(i=0;i<n;i++) scanf("%d",&a[i]); } voidf2@@ (inta[],intn) { inti,j; for(j=1;j<=n;j++) { for(i=0;i<n@@ -j;i++) { if(a[i]>a[i+1]) { intt; t=a[i]; a[i]=a[i+1]; a[i+1]=@@ t; } } } } void@@ f3@@ (inta[],intb[@@ ],intn,int@@ m) { inti; for(i=0;i<m;i++) a[n@@ +i]=b[i]; printf("%d",a[0]); for(i=1;i<@@ m+n;i++) printf("%d",a[i]); } voidmain() { scanf("%d%d",&n,&m); f1@@ (a,@@ n); f1@@ (b,@@ m); f2@@ (a,@@ n); f2@@ (b,@@ m); f3@@ (a,b,@@ n,@@ m); }  
c -1
h -1
0

intm,n,@@ a[@@ 1000],b[1000],@@ c[@@ 2000@@ ],@@ s,@@ t; voidinput() { scanf("%d%d",&m,&n); for(s=0;s@@ <m;@@ s++) scanf("%d",&a[@@ s@@ ]); for(s=0;s@@ <n;@@ s++) scanf("%d",&@@ b[@@ s@@ ]); } voidorder@@ () { intk; for(@@ s@@ =1;@@ s@@ <m;@@ s++) for(t=0;t@@ <m@@ -@@ s@@ ;t++) if(a[@@ t@@ ]>@@ a[t@@ +1]) { k=@@ a[t@@ ]; a[t@@ ]=a[@@ t@@ +1]; a[t@@ +1]=@@ k; } for(@@ s@@ =1;@@ s@@ <n;@@ s++) for(t=0;t@@ <@@ n-@@ s@@ ;t++) if(@@ b[t@@ ]>@@ b[t@@ +1]) { k=@@ b[t@@ ]; b[t@@ ]=@@ b[t@@ +1]; b[t@@ +1]=@@ k; } } void@@ add@@ () { for(s=0;s@@ <m;@@ s++) c[@@ s@@ ]=a[@@ s@@ ]; for(@@ s=@@ m,@@ t@@ =0;@@ s@@ <@@ m+@@ n;@@ s@@ ++,@@ t++) c[@@ s@@ ]=@@ b[t@@ ]; } voidoutput@@ () { for(s=0;s@@ <@@ m+@@ n;@@ s++) { if(s@@ !=@@ m+@@ n-1)@@ printf("%d",c[@@ s@@ ]); else@@ printf("%d",c[@@ s@@ ]); } } intmain() { input(); order@@ (); add@@ (); output@@ (); return0; }  
c -1
h -1
intmain() { intyear,month,day,@@ sum=0,@@ i; cin>>year>>@@ month>>@@ day; if(((@@ year%@@ 400@@ )@@ ==0)||(@@ ((@@ year%@@ 4)@@ ==0)&&(@@ (@@ year%@@ 100@@ )@@ !=0)@@ )) { intdays@@ [@@ 12]={31,29,31,30,31,30,31,31,30,31,30,31}; for(i=0;i<month-1;i++) sum=sum+@@ days@@ [i]; } else { intdays@@ [12]={31,28,31,30,31,30,31,31,30,31,30,31}; for(i=0;i<month-1;i++) sum=sum+@@ days@@ [i]; } sum=sum+day; cout<<sum<<endl; return0; }  
c -1
h -1
0

intmain() { char@@ src@@ [256]; char@@ dst@@ [256]; char@@ replacement@@ [256]; scanf("%s",@@ src@@ ); scanf("%s",@@ dst@@ ); scanf("%s",@@ replacement); char*@@ p=strstr(@@ src@@ ,@@ dst@@ ); if(p@@ ==NULL) { printf("%s\n",@@ src@@ ); } else { int@@ len=strlen(@@ replacement); inti; for(i=0;i<len;i++) { *@@ p=@@ replacement@@ [i]; p++; } printf("%s\n",@@ src@@ ); } return0; }  
c -1
h -1
structstudent { intid; intchinese; intmath; inttotal; }; intmain() { intnumber; structstudentstu[100000]; scanf("%d\n",&@@ number); for(inti=1;i<=@@ number@@ ;++i) { scanf("%d%d%d",&stu[i].@@ id@@ ,&stu[i].@@ chinese@@ ,&stu[i].math); stu[i].@@ total=@@ stu[i].@@ chinese+@@ stu[i].@@ math; } for(inti=1;i<=@@ 3@@ ;++i) { for(intj=i+1@@ ;j<=@@ number@@ ;++@@ j) { if(stu[i].@@ total@@ <@@ stu[j].@@ total) { structstudent@@ temp; temp=@@ stu[i]; stu[i]=@@ stu@@ [j]; stu@@ [j]=temp; } } printf("%d%d\n",stu[i].@@ id,@@ stu[i].@@ total); } return0; }  
c -1
h -1
0

intmain(intargc,char*argv[]) { intyear,month,day; int@@ monthday@@ [12]={31,28,31,30,31,30,31,31,30,31,30,31}; scanf("%d%d%d",&year,&month,&day); inti; intsum=0; for(i=1;i<@@ month@@ ;i++){ sum=sum+@@ monthday@@ [i-1]; } sum=sum+day; inta; a=@@ year%@@ 4@@ ; if(month@@ >2@@ &&@@ a@@ ==0){ sum=sum+1; } printf("%d",sum); return0; }  
c -1
h -1
intmain() { intn,a[@@ 20100@@ ],@@ i,j; scanf("%d",&n); scanf("%d",@@ a); printf("%d",@@ *@@ a); for(i=1;i<n;i++) { scanf("%d",a@@ +i); for(j=0;j<i;j++) { if(a[j]==@@ a[i]@@ )break; } if(j==@@ i)@@ printf("%d",@@ *(a@@ +i)); } }  
c -1
h -1
0

intmain(intargc,char*argv[]) { intn; scanf("%d",&n); struct{ inta; chars[@@ 26]; }@@ zuozhe@@ [1000]; inti,@@ k; for(i=0;i<n;i++){ scanf("%d%s",&@@ zuozhe@@ [i].@@ a,@@ zuozhe@@ [i].@@ s); } intc[@@ 26]={0},@@ d; for(i=0;i<n;i++){ d@@ =strlen(@@ zuozhe@@ [i].@@ s); for(k=0;k<@@ d@@ ;k++){ c[@@ zuozhe@@ [i].@@ s[k]@@ -65]++; } } intf@@ ; for(i=1;i<@@ 26@@ ;i++){ if(c@@ [i]>@@ c@@ [0]){ f@@ =i; d=@@ c[i]; c[i]=@@ c[@@ 0]; c[@@ 0]=@@ d; } } printf("%c\n%d\n",@@ f@@ +65@@ ,@@ c@@ [0]); for(i=0;i<n;i++){ d@@ =strlen(@@ zuozhe@@ [i].@@ s); for(k=0;k<@@ d@@ ;k++){ if(@@ zuozhe@@ [i].@@ s@@ [k]==@@ f@@ +65) printf("%d\n",@@ zuozhe@@ [i].@@ a); } } return0; }  
c -1
h -1
intmain() { intn; cin>>n; intarray[@@ n]; for(inti=0;i<=@@ n-1;i++) cin>>array@@ [i]; cout<<array@@ [0]; for(inti=1;i<=@@ n-1;i++) { int@@ g=0; for(intj=0;j<=@@ i-1;j++) if(array@@ [i]==@@ array@@ [j]) g=@@ g@@ +1; if(g@@ ==0) cout<<""<<@@ array@@ [i]; } return0; }  
c -1
h -1
0

inta[@@ 5000@@ ],b[@@ 5000@@ ],@@ N1@@ ,@@ N2@@ ,@@ c[@@ 10000]; int@@ f1@@ () { intn; scanf("%d%d",&@@ N1@@ ,&@@ N2@@ ); for(n=0;n@@ <=@@ N1@@ -1;@@ n++) { scanf("%d",&@@ a[n@@ ]); } for(n=0;n@@ <=@@ N2@@ -1;@@ n++) { scanf("%d",&@@ b[@@ n@@ ]); } return0; } int@@ f2@@ () { inti,j,t; for(i=1;i<=@@ N1@@ -1;i++) { for(j=0;j<=@@ N1@@ -i-1;j++) { if(a[j]>a[j+1]) { t=a[j]; a[j]=a[j+1]; a[j+1]=t; } } } for(i=1;i<=@@ N2@@ -1;i++) { for(j=0;j<=@@ N2@@ -i-1;j++) { if(b[j]>b[j+1]) { t=@@ b[j]; b[j]=b[j+1]; b[j+1]=@@ t; } } } return0; } int@@ f3@@ () { inti,j; for(i=0;i<=@@ N1@@ -1;i++) { c[i]=a[i]; } for(i=@@ N1@@ ,j@@ =0;i<=@@ N1@@ +@@ N2@@ -1@@ ;i++,j++) { c[i]=@@ b[j]; } return0; } int@@ f4@@ () { inti; printf("%d",c@@ [0]); for(i=1;i<=@@ N1@@ +@@ N2@@ -1;i++) { printf("%d",c[i]); } return0; } intmain() { f1@@ (); f2@@ (); f3@@ (); f4@@ (); }  
c -1
h -1
struct@@ people { charID[10]; intage; }; voidmain() { intn,i,@@ t; struct@@ people@@ peo@@ [100]; struct@@ people@@ old@@ [100]; void@@ bubble@@ (struct@@ people@@ a[100@@ ],int@@ n); scanf("%d",&n); for(i=0;i<n;i++) { scanf("%s",@@ peo@@ [i].ID); scanf("%d",&@@ peo@@ [i].age); } t=0; for(i=0;i<n;i++) { if(@@ peo@@ [i].age>=60) { strcpy(old@@ [t@@ ].ID,@@ peo@@ [i].ID); old@@ [t@@ ].age=@@ peo@@ [i].age; t++; } else continue; } bubble@@ (@@ old@@ ,@@ t); for(i=0;i<t;i++) printf("%s\n",old@@ [i].ID); for(i=0;i<n;i++) { if(@@ peo@@ [i].age<60) printf("%s\n",@@ peo@@ [i].ID); } } void@@ bubble@@ (struct@@ people@@ a[100@@ ],int@@ n) { inti,j; struct@@ people@@ t; for(i=1;i<n;i++) for(j=0;j<n-i;j++) { if(a[j]@@ .@@ age@@ <@@ a[j+1@@ ].age) { t=a[j]; a[j]=a[j+1]; a[j+1]=t; } } }  
c -1
h -1
0

intmain() { intn,k; intc[@@ 1000]; inti=0,j=0,@@ A@@ =0; scanf("%d%d",&n,&k); while(i<n) { scanf("%d",&@@ c[i]); i++; } i=0; while(i<n) { j@@ =i+1; while(j@@ <n) { if(c@@ [i]+@@ c@@ [j]==@@ k)@@ A@@ =1; j++; } i++; } if(A@@ ==1)@@ printf("yes"); elseprintf("no"); return0; }  
c -1
h -1
intmax@@ (inta[],int@@ m); ints[@@ 30@@ ]={@@ 1,1,1,1,1,1,1,1,@@ 1,1,1,1,1,1,1,1,@@ 1,1,1,1,1,1,1,1,@@ 1,1,1,1,@@ 1,@@ 1@@ }; voidmain() { inta[100@@ ],@@ k,@@ i,@@ n; scanf("%d",&k); for(i=k@@ ;i>0;i--) scanf("%d",&a[i]); a[k@@ +1]=@@ 100000@@ ; n=@@ max@@ (a,@@ k@@ +1); printf("%d\n",@@ n-1); } intmax@@ (inta[],int@@ m) { int@@ x,@@ i,@@ t=0; x=@@ a[m@@ ]; if(m==1) return(1); else { for(i=@@ m-1@@ ;i>0;i--) { if(x@@ >=@@ a[i]) t@@ =1@@ +@@ max@@ (a,@@ i); if(t@@ >@@ s[m@@ ]) s[m@@ ]=t; } return(@@ s[m@@ ]); } }  
c -1
h -1
0

intmain() { intm,i,j,@@ f,@@ e,@@ d,@@ k; int@@ q@@ [@@ 10000],@@ p[@@ 10000]; double@@ r,@@ n; chars[@@ 10000],@@ w@@ [100000]; e=0; k=0; scanf("%lf",&n); scanf("%s",s); scanf("%s",@@ w); m@@ =strlen(s); k=strlen(@@ w); for(i=0;i<m;i++){ if(s@@ [i]!='A'&&@@ s@@ [i]!='G'&&@@ s@@ [i]!='C'&&@@ s@@ [i]!='T')@@ {@@ printf("error");@@ break;} if(w@@ [i]!='A'&&@@ w@@ [i]!='G'&&@@ w@@ [i]!='C'&&@@ w@@ [i]!='T')@@ {@@ printf("error");@@ break;} if(k!=@@ m@@ ){@@ printf("error");@@ break;} if(s[i]==@@ w@@ [i])@@ e++; if(i==@@ m-1@@ ){ r=@@ e@@ *1.0/@@ m; if(r@@ >=@@ n)@@ printf("yes"); elseprintf("no"); } } return0; }  
c -1
h -1
main(){ chara[256],b[256],c[256]; intn,m,@@ i,j,k,@@ d; for(i=0;i<@@ 256@@ ;i++){ a[i]@@ ='\0'; b[i]@@ ='\0'; c[i]@@ ='\0'; } scanf("%s",a); scanf("%s",b); scanf("%s",c); m=0; n=0; d=0; for(i=0;a[i]@@ !='\0';i++){ m++; } for(i=0;@@ b[i]@@ !='\0';i++){ n++; } for(i=0;@@ c[i]@@ !='\0';i++){ d++; } inth@@ =0; i=0; while(a[i]@@ !='\0'@@ ){ if(a[i]==@@ b[0]@@ ){ j=0; h@@ =i; k=0; while(@@ a[i]==@@ b[j]@@ &&a[i]@@ !='\0'@@ ){ k++; i++; j++; } if(k==@@ n){ intt=0; for(t=0;t@@ <@@ d@@ ;t@@ ++){ a[h@@ +@@ t@@ ]=@@ c[@@ t@@ ]; } break; } } else i++; } printf("%s",a); }  
c -1
h -1
0

struct@@ author { intnum; char@@ aut@@ [27]; }a[@@ 999]; voidmain() { void@@ search@@ (struct@@ author@@ b[@@ ],intn,@@ char@@ marker@@ ); intm,@@ i,@@ times@@ [@@ 30]={0}; int@@ length@@ =0,@@ j; intmax=0,@@ flag@@ =@@ 9@@ ; char@@ chac@@ ; scanf("%d",&m); for(i=0;i<m;i++) { scanf("%d%s",&@@ a[i].@@ num,&@@ a[i].@@ aut@@ ); length@@ =strlen(@@ a[i].@@ aut@@ ); for(j=0;j<@@ length@@ ;j++) { chac@@ =@@ a[i].@@ aut@@ [j]; times@@ [@@ chac@@ -'A']++; } } for(i=0;i<26;i++) { if(max<@@ times@@ [i]) { max=@@ times@@ [i]; flag@@ =i; } } printf("%c\n%d\n",@@ (char)(@@ flag@@ +'@@ A')@@ ,max); search@@ (a,@@ m,@@ (char)(@@ flag@@ +'@@ A')@@ ); } void@@ search@@ (struct@@ author@@ b[@@ ],intn,@@ char@@ marker@@ ) { inti,j; for(i=0;i<n;i++) { for(j=0;j<strlen(@@ b[i].@@ aut@@ );j++) { if(b[i].@@ aut@@ [j]==@@ marker@@ ) printf("%d\n",b[i].@@ num); } } }  
c -1
h -1
intmain() { intn,k,i,j,@@ flag; inta[1000]; cin>>n>>k; flag=0; for(i=0;i<n;i++) { cin>>a[i]; for(j=0;j<i;j++) if(a[j]@@ +@@ a[i]==@@ k)@@ flag=1; } if(flag@@ ==1)@@ cout<<"yes@@ "<<endl; else@@ cout<<"no@@ "<<endl; return0; }  
c -1
h -1
0

intmain(){ int@@ as@@ [1000],@@ n,k,@@ c; scanf("%d%d",&n,&k); for(inti=0;i<n;i++) { scanf("%d",&(@@ as@@ [i]@@ )); } int@@ d=0; for(intj=0;j<n;j++) { for(intl@@ =0;@@ l@@ <n;@@ l++) { c=@@ as@@ [j]+@@ as@@ [l]; if(c@@ ==k) { printf("yes"); d++; break; } } if(c@@ ==k) break; } if(d@@ ==0) printf("no"); return0; }  
c -1
h -1
intnum@@ (int@@ k,@@ inti,@@ int@@ *p@@ ,int@@ height@@ ){ if(i==@@ k)@@ return0; if(@@ *(p+i)@@ >@@ height@@ )@@ return(@@ num@@ (@@ k,@@ i@@ +1,@@ p,@@ height@@ )); if(@@ *(p+i)@@ ==@@ height@@ )@@ return(@@ num@@ (@@ k,@@ i@@ +1,@@ p,@@ height@@ )@@ +1); int@@ a=@@ num@@ (@@ k,@@ i@@ +1,@@ p,@@ height@@ ); int@@ b=@@ num@@ (@@ k,@@ i@@ +1,@@ p,*@@ (p@@ +i)@@ )@@ +1; return@@ a@@ >b@@ ?@@ a@@ :@@ b; } intmain(){ intk,@@ h@@ [25],@@ i; scanf("%d",&k); for(i=0;i<@@ k;i++)@@ scanf("%d",&h[i]); printf("%d",@@ num@@ (@@ k,@@ 0,@@ h,@@ 1000000000@@ )); return0; }  
c -1
h -1
0

voidmain() { intn,k,i,j,@@ a[@@ 1005@@ ],@@ ans=0; scanf("%d%d",&n,&k); for(i=0;i<n;i++){ scanf("%d",a@@ +i); } for(i=0;i<n-1;i++){ for(j=i+1;j<n;j++){ if(a[i]+a[j]==@@ k){ ans@@ =1; break; } } } printf("%s\n",@@ ans@@ ?"@@ yes@@ ":@@ "@@ no@@ "); }  
c -1
h -1
voidmain() { intn,a[@@ 20000@@ ],i,j,@@ m; scanf("%d",&n); for(i=0;i<=n-1;i++) scanf("%d",&a[i]); for(i=0;i<=n-1;i++) for(j=i+1;j<=@@ n-1;j++) if(a[i]==a[j]@@ ){@@ for(m@@ =j@@ ;m@@ <n;m@@ ++)@@ a[m@@ ]=@@ a[m@@ +1@@ ]@@ ;j@@ =j@@ -1;@@ n=@@ n-1@@ ;} for(i=0;i<n-1;i++) printf("%d",a[i]); printf("%d",a[@@ n-1]); }  
c -1
h -1
0

voidf@@ (inta[],intn) { inti,j,k; for(i=0;i<n;i++) for(j=i+1;j<n;j++) if(a[j]@@ <@@ a[i]) { k=@@ a[i];a[i]=@@ a[j];a[j]=@@ k; } } void@@ cmp@@ (inta[@@ ],intn,@@ intb[@@ ],int@@ m) {int@@ i=@@ n,@@ j; for(j=0;j<m;j++) {@@ a[i]=@@ b[j]@@ ;i++@@ ;} } intmain() {@@ intn,m,@@ i,@@ a[@@ 1000],b[@@ 500]; scanf("%d%d",&n,&m); for(i=0;i<n;i++) { scanf("%d",&a[i]); } for(i=0;i<m;i++) { scanf("%d",&b[i]); } f(a,@@ n); f(@@ b,@@ m); cmp@@ (a,n,@@ b,@@ m); for(i=0;i<n@@ +m@@ -1;i++) printf("%d",a[i]); printf("%d",a[@@ n+@@ m-1@@ ]); }  
c -1
h -1
intmain() { intyear,month,day,@@ i,@@ sum=0,@@ m=0; scanf("%d%d%d",&year,&month,&day); if((year%4==0&&year%100!=0@@ )||@@ year%400==0) { int@@ M@@ [@@ 13@@ ]; M@@ [1]=@@ M@@ [3@@ ]=@@ M@@ [5@@ ]=@@ M@@ [@@ 7@@ ]=@@ M@@ [@@ 8@@ ]=@@ M@@ [10@@ ]=@@ M@@ [12@@ ]=31; M@@ [4@@ ]=@@ M@@ [@@ 6@@ ]=@@ M@@ [@@ 9@@ ]=@@ M@@ [11@@ ]=30; M@@ [2]=@@ 29; M@@ [0]@@ =0; for(i=0;i<@@ month;i++) { m=m+@@ M@@ [i]; } sum=@@ m+@@ day; } else { intN@@ [@@ 13@@ ]; N@@ [1]=@@ N@@ [3@@ ]=@@ N@@ [5@@ ]=@@ N@@ [@@ 7@@ ]=@@ N@@ [@@ 8@@ ]=@@ N@@ [10@@ ]=@@ N@@ [12@@ ]=31; N@@ [4@@ ]=@@ N@@ [@@ 6@@ ]=@@ N@@ [@@ 9@@ ]=@@ N@@ [11@@ ]=30; N@@ [2]=@@ 28; N@@ [0]@@ =0; for(i=0;i<@@ month;i++) { m=m+@@ N@@ [i]; } sum=@@ m+@@ day; } printf("%d",sum); return0; }  
c -1
h -1
0

intmain() { int*@@ input@@ (int@@ n)@@ ,*@@ a,*@@ b@@ ,*@@ c,@@ n1,n2; voidpaixu@@ (int*@@ a,int@@ n@@ ),@@ display@@ (int*@@ c@@ ,int@@ n); int*@@ hebing@@ (int*a,@@ int*@@ b,int@@ n1,int@@ n2); scanf("%d%d",&n1,&n2); a=@@ input@@ (@@ n1); b=@@ input@@ (@@ n2); printf("\n"); paixu@@ (a,@@ n1); paixu@@ (b,@@ n2); c=@@ hebing@@ (a,b,@@ n1,n2@@ ); display@@ (c,@@ n1+@@ n2); return0; } int*@@ input@@ (intn) { int@@ *p@@ ,i; p=@@ (int*)malloc(n*sizeof(int)); for(i=0;i<n;i++) { scanf("%d",&@@ p[i]); } return(@@ p); } voidpaixu@@ (int*@@ a,int@@ n) { inti,j,t; for(i=0;i<n;i++) { for(j=i;j<@@ n;j++) { if(a[j]@@ <@@ a[i]) { t=a[j]; a[j]=@@ a[i]; a[i]=@@ t; } } } } int*@@ hebing@@ (int*a,@@ int*@@ b,int@@ n1,int@@ n2) { int@@ *p,@@ i,j; p=@@ (int*)malloc(@@ (@@ n1+n2@@ )@@ *sizeof(int)); for(i=0;i<n1;i++) { p[i]=@@ a[i]; } for(j=0;j<@@ n2@@ ;j++) { p[@@ n1@@ +j@@ ]=@@ b[j]; } return(@@ p); } void@@ display@@ (int*@@ c@@ ,intn) { inti; for(i=0;i<n;i++) { if(i@@ )@@ printf(""); printf("%d",c[i]); } }  
c -1
h -1
intk,@@ height@@ [25]; int@@ route@@ (intm) { inti,@@ a=0,@@ max=0; for(i=m@@ +1;i<@@ k;i++) if(@@ height@@ [i]<=@@ height@@ [m@@ ]) a@@ +=1; if(a==0) return1; else { for(i=m@@ +1;i<@@ k;i++) if(@@ height@@ [i]<=@@ height@@ [m]@@ &&@@ route@@ (i@@ )@@ >max) max=@@ route@@ (i); return(@@ max@@ +1); } } intmain() { inti,@@ ans@@ [25],@@ a=0; scanf("%d",&k); for(i=0;i<k;i++) scanf("%d",&@@ height@@ [i]); for(i=0;i<k;i++) ans@@ [i]=@@ route@@ (i); for(i=0;i<k;i++) if(@@ ans@@ [i]>@@ a) a=@@ ans@@ [i]; printf("%d\n",@@ a); }  
c -1
h -1
0

intmain() { int@@ yn@@ ,@@ mn@@ ,@@ dn@@ ; int@@ result=0; scanf("%d%d@@ %d@@ "@@ ,&@@ yn@@ ,&@@ mn@@ ,&@@ dn@@ ); if(@@ yn@@ %4==0&&@@ yn@@ %100!=0@@ ||@@ yn@@ %@@ 400==0) { int@@ day_of_month@@ [@@ 13]={0,31,@@ 29@@ ,31,30,31,30@@ ,31,30@@ ,31@@ ,31,30@@ ,31@@ }; inti=1; while(i<@@ mn@@ ) { result=result+@@ day_of_month@@ [i]; i++; } result=result+@@ dn@@ ; } else { int@@ day_of_month@@ [@@ 13]={0,31,@@ 28@@ ,31,30,31,30@@ ,31,30@@ ,31@@ ,31,30@@ ,31@@ }; inti=1; while(i<@@ mn@@ ) { result=result+@@ day_of_month@@ [i]; i++; } result=result+@@ dn@@ ; } printf("%d@@ "@@ ,@@ result); return0; }  
c -1
h -1
voidmain() { inti,j,@@ m,n,@@ a[@@ 3@@ ][2@@ ],@@ k; structstudent { intnum; int@@ s1@@ ; int@@ s2; int@@ l; }stu[100000]; scanf("%d",&n); for(i=0;i<n;i++) { scanf("%d%d%d",&stu[i].num,&stu[i].@@ s1@@ ,&stu[i].@@ s2); stu[i].@@ l=@@ stu[i].@@ s1@@ +stu[i].@@ s2; } for(i=0;i<3;i++) { for(m@@ =0,@@ j@@ =0;j<@@ n;j++) { if(m@@ <@@ stu[j].@@ l) { m=@@ stu[j].@@ l; k=j; } } a[i][@@ 0]=@@ k; a[i]@@ [1]=@@ m; stu[k].@@ l=0; } for(i=0;i<3;i++) { printf("%d%d\n",@@ a[i][0]@@ +1,@@ a[i]@@ [1]); } }  
c -1
h -1
0

intn; void@@ count@@ (intx,inty) { inti; if(x@@ ==1)@@ n=n+1; else { for(i=y@@ ;i<=@@ x;i++) { if(x@@ %i==0)@@ count@@ (x/i,i); } } } intmain() { inti,k,@@ t; void@@ count@@ (intx,int@@ y); scanf("%d",&k); for(i=0;i<k;i++) { n=0; scanf("%d",&t); count@@ (@@ t,@@ 2); printf("%d\n",n); } return0; }  
c -1
h -1
main() { inta[16],@@ i,j,k,@@ n,@@ x,y; for(;;) { j=0,@@ n=0; scanf("%d",&a[0]); if(a[0]==-1) break; for(i=1;i<@@ 16@@ ;i++) { scanf("%d",&a[i]); j++; if(a[i]==0) break; } for(i=0;i<j;i++) { for(k@@ =i+1@@ ;k<@@ j@@ ;k++) { x=@@ a[i]@@ %@@ a[k]; y=@@ a[i]@@ /@@ a[k]; if((x@@ ==0)&&(@@ y@@ ==@@ 2@@ )) n++; } } for(i=j@@ -1;i>=0;i--) { for(k=i@@ -1@@ ;k>=0@@ ;k--) { x=@@ a[i]@@ %@@ a[k]; y=@@ a[i]@@ /@@ a[k]; if((x@@ ==0)&&(@@ y@@ ==@@ 2@@ )) n++; } } printf("%d\n",n); } return0; }  
c -1
h -1
0

intf(inta,int@@ s) { if(a@@ <=@@ s)@@ return1; int@@ b=@@ sqrt(@@ (@@ float)@@ a)@@ ,@@ flag=0,@@ sum=1; for(inti=@@ s@@ ;i<=@@ b;i++) { if(a%i==0) { flag@@ ++; sum=sum+@@ f(a@@ /i,i); } } if(flag@@ ==0)@@ return1; else@@ returnsum; } intmain() { inta,@@ n; cin>>n; for(inti=1;i<=n;i++) { cin>>a; cout<<@@ f(a,@@ 2)<<endl; } return0; }  
c -1
h -1
intmain(){ intn,i,@@ s=0; double@@ r; chara[@@ 600@@ ],b[@@ 600]; scanf("%lf",&@@ r@@ );@@ scanf("%s",@@ a);@@ scanf("%s",b); if(strlen(a)!=strlen(b@@ )){ printf("error"); return0; } for(i=0;i<@@ strlen(a)@@ ;i++){ if((@@ a[i]=='@@ A'||a[i]=='T'||a[i]=='@@ C'||@@ a[i]=='@@ G')&&(@@ b[i]=='@@ A'||@@ b[i]=='@@ T'||@@ b[i]=='@@ C'||@@ b[i]=='@@ G')){ if(a[i]==b[i]){ s++; } }else{ printf("error"); return0; } } if(1.0*@@ s/@@ strlen(a)@@ >@@ r@@ ){@@ printf("yes");@@ }elseif(@@ 1.0*@@ s/@@ strlen(a)@@ <@@ r@@ ){@@ printf("no@@ ");@@ }@@ return0;}  
c -1
h -1
0

intmain(){ inti,j,@@ count=0; double@@ bl@@ ; chara[@@ 508@@ ],b[@@ 508@@ ]; scanf("%lf",&@@ bl@@ ); scanf("%s%s",a,b); if(strlen(a)!=strlen(b@@ )){ printf("error");@@ return0; } for(i=0;a[i]@@ !=0@@ ;i++){ if(a[i]!='A'&&a[i]!='T'&&a[i]!='C'&&a[i]!='@@ G'){ printf("error");@@ return0; } } for(i=0;@@ b[i]@@ !=0@@ ;i++){ if(@@ b[i]!='A'&&b[i]!='T'&&b[i]!='C'&&b[i]!='@@ G'){ printf("error");@@ return0; } } for(i=0;a[i]@@ ;i++){ if(a[i]==b[i]){ count++; } } if((@@ 1.0*@@ count@@ /@@ (@@ strlen(a)@@ ))@@ >@@ bl@@ ){ printf("yes"); }else{ printf("no"); } return0; }  
c -1
h -1
intmain(){ intk,m,n,@@ h,@@ i,j,@@ a,b; ints@@ [100][100],@@ r@@ [100]; scanf("%d",&k); for(intt@@ =0;t@@ <=@@ k@@ -1;@@ t++){ h=0; scanf("%d%d",&m,&n); for(i=0;i<=@@ m-1@@ ;i++){ for(j=0;j<=@@ n-1@@ ;j++){ scanf("%d",&s@@ [i][j]); } } for(a=0;a@@ <=@@ n-1;@@ a++){ h=@@ h@@ +@@ s[@@ 0][@@ a@@ ]+@@ s[@@ m-1][@@ a@@ ]; } for(b@@ =1;@@ b@@ <=@@ m@@ -2@@ ;@@ b++){ h=@@ h@@ +@@ s[@@ b@@ ][0]+@@ s[@@ b@@ ][n-1]; } r@@ [t@@ ]=@@ h; } for(int@@ x@@ =0;x@@ <=@@ k@@ -1;@@ x@@ ++){ printf("%d\n",@@ r@@ [x@@ ]); } return0;}  
c -1
h -1
0

intk,@@ a; void@@ find@@ (inti,int@@ x){ for(intj=i@@ ;j@@ *@@ j@@ <=@@ x@@ &&i!=@@ 1@@ ;j++) if(x@@ /j@@ *@@ j==@@ x){ find@@ (@@ j,@@ x@@ /j@@ ); k++; } } intmain(){ intn; for(@@ cin>>@@ n;@@ n@@ --@@ ;@@ ){ k=0; cin>>a; find@@ (2,@@ a); cout<<@@ ++@@ k@@ <<endl; } return0; }  
c -1
h -1
structpatient { intage; charid[10]; structpatient*next; }; main() { intn,i,j,@@ a=0,@@ b=0; structpatient*@@ p1,*p2,*@@ head1@@ =NULL@@ ,*@@ head2@@ =NULL@@ ,*@@ q1@@ ,*@@ q2@@ ,*@@ temp@@ ,*@@ last@@ ; scanf("%d",&n); for(i=0;i<n;i++) { p1=(struct@@ patient@@ *)malloc(LEN); scanf("%s%d",@@ p1->id,&p1->age); q1@@ =p1; if(p1->age@@ >=60) { if(@@ head1@@ ==NULL@@ ){@@ head1@@ =p1;@@ p2@@ =p1;@@ p1->next@@ =NULL@@ ;} else { a=@@ a@@ +1; temp=@@ head1@@ ;@@ last@@ =@@ head1@@ ; for(j=0;j<a@@ ;j++) { if(p1->age@@ >@@ temp@@ ->age@@ ) { if(j@@ ==0){@@ p1->next=@@ head1@@ ;@@ head1@@ =p1;@@ break;} else{@@ last@@ ->next@@ =p1;@@ p1->next=@@ temp@@ ;break;} } last@@ =@@ temp@@ ;@@ temp=@@ temp@@ ->next; } if(j==@@ a@@ ){@@ last@@ ->next@@ =p1;@@ p1->next@@ =NULL@@ ;} } } if(p1->age@@ <60) { if(@@ head2@@ ==NULL@@ ){@@ head2@@ =@@ q1@@ ;@@ q2@@ =@@ q1@@ ;@@ q1@@ ->next@@ =NULL@@ ;} else{@@ b=b@@ +1;@@ q1@@ ->next@@ =NULL@@ ;@@ q2@@ ->next=@@ q1@@ ;@@ q2@@ =@@ q1@@ ;} } } p1=@@ head1@@ ;@@ q1=@@ head2@@ ; for(i=0;i<=@@ a@@ ;i++){@@ printf("%s\n",@@ p1->id@@ );@@ p1=p1->next@@ ;} for(i=0;i<=@@ b@@ ;i++){@@ printf("%s\n",@@ q1->@@ id@@ );@@ q1=@@ q1@@ ->next@@ ;} }  
c -1
h -1
0

intmain(intargc,char*argv[]) { intx[@@ 16],@@ a,b,@@ i,@@ k; while(1) { for(i=0;i<16;i++) { scanf("%d",&@@ x[i]); if(x@@ [i]==0) { a=i; break; } } if(x@@ [0]@@ ==-1) { break; } ints=0; for(k=0;k<@@ a@@ ;k++) { for(i=0;i<a;i++) { if(x@@ [k]==2*@@ x@@ [i]) { s++; } } } printf("%d\n",s); } return0; }  
c -1
h -1
voidmain() { intb; scanf("%d",&b); while(@@ b@@ !=-1) { inta[16@@ ]={0}; inti,j=0,@@ k; intsum=0; a[j]=@@ b; while(@@ a[j]@@ !=0) { j++; scanf("%d",&a[j]); } for(i=0;i<j@@ -1;i++) { for(k@@ =i+1@@ ;k<@@ j@@ ;k++) { if(a[k@@ ]==@@ a[i]@@ *2@@ ||@@ a[i]==@@ a[k]@@ *2) { sum++; } } } printf("%d\n",sum); scanf("%d",&b); } }  
c -1
h -1
1


intmain() { intb; scanf("%d",&b); inta[@@ 100000]; for(inti=0;i<@@ b;i++) { intm,n; scanf("%d%d",&m,&n); intsz[100][100]; for(intk=0;k<@@ m;k++) { for(intp@@ =0;p@@ <n;p++) { scanf("%d",&(@@ sz@@ [k@@ ][p@@ ]@@ )); } } if(m@@ *@@ n@@ !=1) { for(int@@ o@@ =0;@@ o@@ <n;@@ o@@ ++) { a[i]=@@ a[i]+@@ sz[0][@@ o@@ ]+sz[@@ m-1][@@ o@@ ]; } for(int@@ q@@ =0;q@@ <m;@@ q++) { a[i]=@@ a[i]+@@ sz[@@ q@@ ][0]+@@ sz[@@ q@@ ][n-1]; } a[i]=@@ a[i]@@ -@@ sz[0][@@ 0]-@@ sz[@@ m-1][0]-@@ sz[@@ m-1][@@ n-1]-@@ sz[0][@@ n-1]; printf("%d\n",a[i]); } else{@@ printf("%d",@@ sz[0][@@ 0]@@ );} } return0; }  
c -1
h -1
intmain(intargc,char*argv[]) {int@@ zu@@ [100][100]; intn,@@ a,b,@@ c,d; scanf("%d",&n); inti,j; for(i=0;i<n;i++) {@@ for(j=0;j<n;j++) {scanf("%d",&@@ zu@@ [j]@@ [i]); } } for(i=0;i<n;i++) {@@ for(j=0;j<n;j++) {@@ if(i@@ ==0&&@@ zu@@ [j]@@ [i]==0) {@@ a@@ =j; b@@ =0;} elseif(@@ i@@ !=0@@ &&j@@ ==0&&@@ zu@@ [j]@@ [i]==0) {@@ a@@ =0;b@@ =i;} elseif(@@ j@@ !=0@@ &&i@@ !=0&&@@ zu@@ [j]@@ [i]==0) {if(@@ zu@@ [j-1]@@ [i]==@@ 255@@ &&@@ zu@@ [j]@@ [i-1@@ ]==255&&@@ zu@@ [j+1]@@ [i]@@ ==0&&@@ zu@@ [j]@@ [i+1@@ ]==0) {@@ a@@ =j; b=i; } } if(i==@@ n-1@@ &&@@ zu@@ [j]@@ [i]==0) {@@ c@@ =j; d=@@ n-1; } elseif(@@ i@@ !=@@ n-1@@ &&j@@ ==@@ n-1@@ &&@@ zu@@ [j]@@ [i]==0) {@@ c=@@ n-1; d@@ =i; } elseif(@@ i@@ !=@@ n-1@@ &&j@@ !=@@ n-1@@ &&@@ zu@@ [j]@@ [i]==0) {if(@@ zu@@ [j-1]@@ [i]@@ ==0&&@@ zu@@ [j]@@ [i-1]@@ ==0&&@@ zu@@ [j+1]@@ [i]==@@ 255@@ &&@@ zu@@ [j]@@ [i+1@@ ]==255@@ ) {@@ c@@ =j; d@@ =i; } } } } int@@ mian@@ ; mian@@ =(@@ c-a-1)*(d-b-1); printf("%d",@@ mian@@ ); return0; }  
c -1
h -1
0

struct@@ Article@@ { intnumber; charauthor[26]; }; intmain() { struct@@ Article@@ book[1000]; intm,@@ i; intj,@@ k; intc; intmax=0; int@@ writer@@ [26]={0}; scanf("%d",&m); for(i=0;i<m;i++){ scanf("%d%s",&book[i].@@ number,@@ book[i].author); } for(i=0;i<m;i++){ for(j=0;j<26@@ ;j++){ if(book[i].author@@ [j]>=@@ 'A'@@ &&@@ book[i].author@@ [j]<=@@ '@@ Z@@ '){ c=@@ book[i].author@@ [j]@@ -'A'; writer@@ [c@@ ]++; } } } for(i=0;i<26;i++){ if(max<@@ writer@@ [i]){ max=@@ writer@@ [i]; } } for(i=0;i<26;i++){ if(max@@ ==@@ writer@@ [i]){ printf("%c\n",@@ i+@@ 'A'@@ ); printf("%d\n",max); for(j=0;j<m;j++){ for(k=0;k<26@@ ;k++){ if(@@ book[j].@@ author@@ [k]==@@ i+@@ 'A'@@ ){ printf("%d\n",@@ book[j].@@ number); } } } break; } } return0; }  
c -1
h -1
intmain() { introw,col,@@ a[100][100],@@ i,k,@@ j; scanf("%d%d",&row,&col); for(k=0;k<@@ row@@ ;k++){ for(i=0;i<@@ col@@ ;i++){ scanf("%d",&(@@ a[k]@@ [i]@@ )); } } for(i=0;i<@@ 201@@ ;i++){ k=0; j=i; while(j@@ >=0@@ ){ if(@@ 0@@ <=j@@ &&j@@ <col@@ &&@@ 0@@ <=@@ k@@ &&k@@ <row@@ )@@ printf("%d\n",@@ a[k]@@ [j]); j--; k++; } } return0; }  
c -1
h -1
0

voidmain() { intn,i,@@ age@@ [100],@@ a[100],@@ j=0,@@ k,@@ l,@@ temp,@@ ord@@ [100],@@ o@@ [100]; char@@ num@@ [100][10],@@ old@@ [100][10],@@ t@@ [10]; scanf("%d",&n); for(i=0;i<n;i++)@@ scanf("%s%d",@@ num[i]@@ ,&@@ age[i]); for(i=0;i<n;i++)@@ ord@@ [i]=@@ i; for(i=0;i<n;i++) { if(age[i]@@ >=60) { a[j]=@@ age[i]; o@@ [j]=@@ ord@@ [j]; strcpy(old@@ [j],@@ num[i]); j++; } } for(k=0;k<j@@ ;k++) { for(l@@ =k@@ +1;@@ l<@@ j@@ ;l++) { if(a[k]@@ <@@ a[l@@ ]) { temp=@@ a[k]; a[k@@ ]=a[@@ l@@ ]; a[l@@ ]=temp; temp=@@ o@@ [k]; o@@ [k]=@@ o@@ [l]; o@@ [l@@ ]=temp; strcpy(@@ t,@@ old@@ [k]); strcpy(old@@ [k],@@ old@@ [l]); strcpy(old@@ [l@@ ],@@ t); } } } for(k=0;k<j@@ ;k++) { for(l@@ =k@@ +1;@@ l<@@ j@@ ;l++) { if(a[k@@ ]==@@ a[l@@ ]) { if(@@ o@@ [k]@@ >@@ o@@ [l@@ ]) { temp=@@ a[k]; a[k@@ ]=a[@@ l@@ ]; a[l@@ ]=temp; temp=@@ o@@ [k]; o@@ [k]=@@ o@@ [l]; o@@ [l@@ ]=temp; strcpy(@@ t,@@ old@@ [k]); strcpy(old@@ [k],@@ old@@ [l]); strcpy(old@@ [l@@ ],@@ t); } } } } for(i=0;i<j@@ ;i++)@@ printf("%s\n",old@@ [i]); for(i=0;i<n;i++) { if(age[i]@@ <60@@ )@@ printf("%s\n",@@ num[i]); } }  
c -1
h -1
intmain() { intn,i,j,@@ a[100][100],@@ num=0,@@ v@@ ,@@ k; cin>>n; for(i=0;i<n;i++) { for(j=0;j<n;j++) { cin>>a[i][j]; } } for(i=0;i<n;i++) { for(j=0;j<n;j++) { if(a[i][j]==0) { for(k=j@@ ;@@ ;k++) { if(a[i]@@ [k]@@ !=0) { break; } } for(@@ v@@ =i;@@ ;@@ v@@ ++) { if(a[@@ v@@ ][j]@@ !=0) { break; } } num@@ =(@@ k@@ -j@@ -2)*(@@ v@@ -i@@ -2); break; } if(num@@ !=0) break; } } cout<<num<<endl; return0; }  
c -1
h -1
0

intmain() { char@@ sz1@@ [256]; char@@ sz2@@ [256]; char@@ sz3@@ [256]; scanf("%s",@@ sz1@@ ); scanf("%s",@@ sz2@@ ); scanf("%s",@@ sz3@@ ); int@@ len1,len2@@ ; len1=strlen(@@ sz1@@ ); len2=strlen(@@ sz2@@ ); inti,@@ k; int@@ flag=0; for(k=0;k<=@@ len1@@ -len2@@ ;k++) { for(i=0;i<@@ len2@@ ;i++) { if(@@ sz1@@ [i+k@@ ]==@@ sz2@@ [i]) { flag@@ =@@ flag@@ +1; } } if(flag@@ ==@@ len2) break; if(flag@@ !=@@ len2) flag=0; } if(flag@@ ==@@ len2) { for(i=0;i<@@ len2@@ ;i++) { sz1@@ [k@@ +i]=@@ sz3@@ [i]; } } printf("%s",@@ sz1@@ ); return0; }  
c -1
h -1
struct@@ information { charID[10]; intage; }@@ *@@ a; voidmain() { intn,i,j,@@ max,@@ p,@@ q=0; scanf("%d",&n); a@@ =(struct@@ information@@ *)malloc(sizeof(struct@@ information@@ )*n); for(i=0;i<n;i++)@@ scanf("%s%d",@@ a[i].@@ ID,&@@ a[i].@@ age); for(i=0;i<n;i++) { if(a[i].age@@ >@@ 59@@ )@@ q++; } for(i=0;i<@@ q@@ ;i++) { max=0; for(j=0;j<n;j++) { if(max<@@ a[j].@@ age@@ ){max=@@ a[j].@@ age@@ ;@@ p=@@ j@@ ;} } printf("%s\n",@@ a[p@@ ].@@ ID); a[p@@ ].age@@ =0; } for(i=0;i<n;i++) { if(a[i].age@@ !=0)@@ printf("%s\n",@@ a[i].@@ ID); } }  
c -1
h -1
0

intmain(intargc,char*argv[]) { intyear,month,day; intsum=0; scanf("%d%d%d",&year,&month,&day); switch(month) { case1:@@ sum=@@ day;break; case2:@@ sum=@@ 31+@@ day;break; case3:@@ sum=31+28@@ +day;break; case4:@@ sum=31+28@@ +31+@@ day;break; case5:@@ sum=31+28@@ +31+30@@ +day;break; case6:@@ sum=31+28@@ +31+30+31+@@ day;break; case7:@@ sum=31+28@@ +31+30+31+30@@ +day;break; case8:@@ sum=31+28@@ +31+30+31+30+31+@@ day;break; case9:@@ sum=31+28@@ +31+30+31+30+31+31+@@ day;break; case10:@@ sum=31+28@@ +31+30+31+30+31+31+30@@ +day;break; case11:@@ sum=31+28@@ +31+30+31+30+31+31+30+31+@@ day;break; case12:@@ sum=31+28@@ +31+30+31+30+31+31+30+31+@@ 31+@@ day;break; } if(month@@ >2@@ &&(@@ (@@ year%4==0&&year%100!=0@@ )||@@ year%@@ 400==0)@@ )@@ sum=sum+1; printf("%d",sum); return0; }  
c -1
h -1
int@@ pfCompare@@ (constvoid*@@ elem1@@ ,@@ constvoid*@@ elem2@@ ) { intc; c@@ =*@@ (int*)@@ elem1@@ -*@@ (int*)@@ elem2@@ ; return@@ c; } structstudent { intnum; intx; inty; }a[@@ 100000]; main() { intn,i,j,@@ d=0,@@ b[@@ 100000@@ ],c[@@ 100000]; scanf("%d",&n); for(i=0;i<n;i++) { scanf("%d",&@@ a[i].@@ num); scanf("%d",&@@ a[i].@@ x); scanf("%d",&@@ a[i].@@ y); } for(i=0;i<n;i++) { b[i]=@@ a[i].@@ x+@@ a[i].@@ y; } qsort@@ (b,@@ n,@@ sizeof(int),@@ pfCompare@@ ); for(j=0;j<n;j++) { if(b[@@ n-1@@ ]==@@ a[j].@@ x+@@ a[j].@@ y) { printf("%d@@ ""@@ ""@@ %d",@@ a[j].@@ num,@@ b[@@ n-1]); printf("\n"); d++; } if(d@@ ==@@ 3) break; } for(i=@@ n-2@@ ;i@@ >@@ n-@@ 4@@ ;i--) { if(b[i]==@@ b@@ [i+1]) continue; else { for(j=0;j<n;j++) { if(b[i]==@@ a[j].@@ x+@@ a[j].@@ y) { printf("%d@@ ""@@ ""@@ %d",@@ a[j].@@ num,@@ b[i]); printf("\n"); d++; } if(d@@ ==@@ 3) break; } if(d@@ ==@@ 3) break; } } }  
c -1
h -1
0

intmain() { intn,@@ j,@@ i; scanf("%d",&n); chara[@@ n@@ ][10]; intb[@@ n]; for(j=0;j<n;j++) scanf("%s%d",@@ a[j]@@ ,&@@ b[j]); for(i=@@ 100@@ ;i@@ >=60@@ ;i--) { for(j=0;j<n;j++) {@@ if(b[j]@@ ==@@ i) printf("%s\n",@@ a[j]); } } for(j=0;j<n;j++) { if(b[j]@@ <60) printf("%s\n",@@ a[j]); } getchar(); getchar(); getchar(); getchar(); getchar(); getchar(); getchar(); }  
c -1
h -1
intmain(){ intn; cin>>n; structstu@@ { intnum; int@@ chin@@ ; intmath; intsum; }@@ one@@ [n@@ +1]; for(inti=1;i<=@@ n;i++){ cin>>@@ one@@ [i].@@ num@@ >>@@ one@@ [i].@@ chin@@ >>@@ one@@ [i].@@ math; one@@ [i].@@ sum=@@ one@@ [i].@@ chin@@ +@@ one@@ [i].@@ math; } intt=0; for(inti=@@ 200@@ ;i>=0;i--) for(intj=1;j<=@@ n;j++){ if(@@ one@@ [j].@@ sum@@ ==@@ i){ cout<<@@ j@@ <<""<<@@ one@@ [j].@@ sum@@ <<endl; t=t+1; } if(t==@@ 3@@ ){ i@@ =-@@ 1;break; } } return0; }  
c -1
h -1
0

intmain() { intn,i,@@ a[@@ 2000@@ ],@@ max=0,@@ t,@@ b[@@ 30@@ ]={0},@@ j,@@ m; charstr@@ [1000][@@ 30]; scanf("%d",&n); for(i=0;i<n;i++){ scanf("%d%s",&a[i],@@ str[i]); for(j=0;j<strlen(@@ str@@ [i])@@ ;j++){ m=@@ str@@ [i][j]@@ -@@ 64@@ ; b[m@@ ]++; } } for(i=1;i<@@ 26@@ ;i++)@@ if(b[i]@@ >max){ max=b[i]; t=i; } printf("%c\n%d\n",@@ t@@ +@@ 64@@ ,max); for(i=0;i<n;i++){ for(j=0;j<strlen(@@ str@@ [i]@@ );j++) if(str@@ [i][j]==@@ t@@ +@@ 64@@ )@@ printf("%d\n",a[i]); } return0; }  
c -1
h -1
intmax@@ (intx,inty) { if(x@@ >=@@ y)@@ return@@ x; else@@ return@@ y; } int@@ haha@@ (inta[],intb[],int@@ k) { inti,j,@@ c=0; b[k@@ -1]@@ =1; for(i=k-2;i>=0;i--) { for(j=i+1;j<k;j++) { if(a[i]>=@@ a[j])@@ c=@@ max(@@ c,@@ b[j]); } b[i]=@@ c@@ +1; c=0; } for(i=k@@ -1@@ ;i@@ >-@@ 1@@ ;i@@ --@@ )@@ c=@@ max(@@ c,@@ b[i]); return@@ c; } intmain() { inta[@@ 25],b[@@ 25@@ ]={0},@@ k,@@ i; scanf("%d",&k); for(i=0;i<@@ k;i++)@@ scanf("%d",&a[i]); printf("%d",@@ haha@@ (a,b,@@ k@@ )); }  
c -1
h -1
0

intmain() { inti,j,@@ num[@@ 1000],@@ m,@@ a[@@ 1000][@@ 26],@@ k,@@ sum@@ [26],@@ max=0,@@ b; charwriter@@ [1000][@@ 26],@@ letter@@ [@@ 27@@ ]={'A','B','C','D','E','F','G','H','I','J','K','L','M','N','O','P','@@ Q','R','S','T','U','V','W','X','Y','@@ Z'}; scanf("%d",&m); for(k=0;k<26;k++) { sum@@ [k]@@ =0; } for(i=0;i<m;i++) { for(j=0;j<26;j++) { a[i][j]@@ =0; } } for(i=0;i<m;i++) { scanf("%d%s",&@@ num@@ [i],@@ writer@@ [i]); } for(k=0;k<26;k++) { for(i=0;i<m;i++) { for(j=0;j<26;j++) { if(@@ writer@@ [i][j]==@@ letter@@ [k]) { a[i]@@ [k]++; } } } } for(k=0;k<26;k++) { for(i=0;i<m;i++) { sum@@ [k]=@@ sum@@ [k]@@ +@@ a[i]@@ [k]; } } for(k=0;k<26;k++) { if(max<@@ sum@@ [k]) { max=@@ sum@@ [k]; b=@@ k; } } printf("%c\n%d\n",@@ letter@@ [b@@ ],@@ max); for(i=0;i<m;i++) { for(j=0;j<26;j++) { if(@@ writer@@ [i][j]==@@ letter@@ [b@@ ]) { printf("%d\n",@@ num[i]); } } } return0; }  
c -1
h -1
intn,m; inta[@@ 1000],b[1000]; void@@ qsort@@ (int@@ l@@ ,int@@ r@@ ) { inti,j,k,@@ x; i=@@ l@@ ;j@@ =@@ r; k=0; x=@@ a[@@ (i@@ +j)@@ /2@@ ]; while(i<=@@ j) { while(a[i]@@ <@@ x)@@ i++; while(@@ x@@ <@@ a[j])@@ j--; if(i@@ <=@@ j) { k=@@ a[i];a[i]=@@ a[j];a[j]=@@ k; i@@ ++@@ ;j@@ --; } } if(i<@@ r@@ )@@ qsort@@ (i,@@ r); if(@@ l<@@ j)@@ qsort(@@ l@@ ,j); } void@@ qsort2@@ (int@@ l@@ ,int@@ r@@ ) { inti,j,k,@@ x; i=@@ l@@ ;j@@ =@@ r; k=0; x@@ =(@@ i@@ +j)@@ /2; while(i<@@ j) { while(@@ b[i]@@ <@@ b[@@ x@@ ])@@ i++; while(@@ b[@@ x@@ ]<@@ b[j]@@ )@@ j--; if(i@@ <=@@ j) { k=@@ b[i]@@ ;@@ b[i]=b[j]@@ ;@@ b[j]=@@ k; i@@ ++@@ ;j@@ --; } } if(i<@@ r@@ )@@ qsort2@@ (i,@@ r); if(@@ l<@@ j)@@ qsort2@@ (@@ l@@ ,j); } voidinput() { inti; cin>>n>>m; for(i=1;i<=n;i++) cin>>a[i]; for(i=1;i<=m;i++) cin>>b[i]; } voidoutput@@ () { inti; for(i=1;i<=n;i++) cout<<a[i]<<""; for(i=1;i<m;i++) cout<<b[i]<<""; cout<<@@ b[m@@ ]<<endl; } intmain() { input(); qsort(@@ 1,@@ n); qsort2@@ (@@ 1,@@ m); output@@ (); return0; }  
c -1
h -1
0

main() { struct@@ h { charname@@ [27]; int@@ mun@@ ; struct@@ h@@ *next; }@@ *p,*@@ q@@ ,*@@ head; intk,@@ j,@@ i,@@ l,@@ n,@@ a[@@ 26@@ ][@@ 1001@@ ],@@ b; scanf("%d",&n); p=@@ len; q=@@ head=@@ p; for(i=0;i<26;i++) for(j=0;j<@@ 1000@@ ;j++) a[i][j]@@ =0; for(i=0;i<n;i++) { scanf("%d%s",&@@ p->@@ mun@@ ,@@ p->@@ name); l=strlen(@@ p->@@ name); for(j=0;j<l;j++) { b@@ =(@@ p->@@ name@@ )@@ [j]-65@@ ; k=@@ a[@@ b@@ ][0]@@ +=1; a[@@ b@@ ][k@@ ]=@@ p->@@ mun@@ ; } q=@@ len; p@@ ->next=@@ q; p=@@ q; } p=head; intmax=@@ a[0][@@ 0]; j=0; for(i=0;i<26;i++) { if(max<@@ a[i][0]@@ ){max=@@ a[i][0]@@ ;j@@ =i;} } printf("%c\n%d\n",@@ j@@ +65@@ ,max); i=1; while(@@ a[j]@@ [i]) { printf("%d\n",@@ a[j]@@ [i]); i++; } }  
c -1
h -1
intm,n,@@ a[@@ 1000@@ ]={0},b[@@ 1000]={0}; intmain() { inti,j,k; voidread@@ (int@@ array1@@ [],int@@ array2@@ [@@ ]); voidsort@@ (intarray[],int@@ x); voidprint@@ (int@@ array5@@ [],int@@ array6@@ [@@ ]); scanf("%d%d",&m,&n); read@@ (a,b); sort@@ (a,m); sort@@ (b,n); print@@ (a,b); } voidread@@ (int@@ array1@@ [],int@@ array2@@ []) { inti; for(i=0;i<m;i++) scanf("%d",&a[i]); for(i=0;i<n;i++) scanf("%d",&b[i]); } voidsort@@ (intarray[],int@@ x) { inti,j,k,@@ t; for(i=0;i<x@@ -1;i++) for(j=i+1;j<@@ x;j++) if(array@@ [ j@@ ]<@@ array@@ [i]) {t=@@ array@@ [i];@@ array@@ [i]=@@ array@@ [j];@@ array@@ [j]=@@ t;} } voidprint@@ (int@@ array5@@ [],int@@ array6@@ []) { intj; for(j=0;j<m;j++) printf("%d",@@ array5@@ [j]); for(j=0;j<n-1;j++) printf("%d",@@ array6@@ [j]); printf("%d",@@ array6@@ [@@ n-1]); }  
c -1
h -1
0

intmain(){ chara[@@ 510@@ ],@@ d[@@ 510@@ ]; inti,@@ e; double@@ bl@@ ,@@ k; scanf("%lf",&@@ k); scanf("%s",a); scanf("%s",@@ d); e=0; int@@ len1@@ =strlen(a); int@@ len2=strlen(@@ d); if(len1!=@@ len2){ printf("error"); }else{ for(i=0;i<len1;i++){ if(a[i]!='@@ A'&&a[i]!='T'&&a[i]!='G'&&a[i]!='@@ C'){ printf("error"); return0; } if(d@@ [i]!='A'&&@@ d@@ [i]!='T'&&@@ d@@ [i]!='C'&&@@ d@@ [i]!='G'){ printf("error"); return0; } else{ if(a[i]==@@ d@@ [i]){ e++; } } } bl@@ =1.0*@@ e@@ /@@ len1; if(@@ bl@@ >@@ k){ printf("yes"); }else{ printf("no"); } }@@ return0; }  
c -1
h -1
intmain() { intn; inta[@@ 1100@@ ][@@ 1100@@ ]; cin>>n; int@@ ans=0; for(inti=1;i<=n;i++) { for(intj=1;j<=@@ n;j++) { cin>>a[i][j]; } } for(inti=1;i<=n;i++) { for(intj=1;j<=@@ n;j++) { if(a[i][j]==0) continue; else { intf@@ =0; for(intk@@ =i+1@@ ;k<=@@ n;k++) { if(a[k]@@ [j]@@ ==0&&@@ a[k]@@ [j+1@@ ]==0) f@@ ++; } if(f@@ %@@ 2@@ ==1) ans@@ ++; } } } cout<<@@ ans; return0; }  
c -1
h -1
0

char@@ word@@ [256],@@ substring@@ [256],@@ replacement@@ [256]; int@@ l1,l2,@@ l3@@ ; int@@ the_same@@ (@@ char*@@ ch@@ ) { inti; for(i=0;i<@@ l2@@ ;i++) { if(*(@@ ch@@ +i)@@ !=@@ substring@@ [i]) return0; } return1; } intmain() { char*@@ p=@@ NULL@@ ,@@ *@@ q@@ =NULL; inti,@@ t; cin.getline(@@ word@@ ,@@ 256); l1=strlen(@@ word@@ ); cin.getline(@@ substring@@ ,@@ 256); l2=strlen(@@ substring); cin.getline(@@ replacement@@ ,@@ 256); l3@@ =strlen(@@ replacement); for(i=0;i<l1;i++) { t=@@ the_same@@ (@@ &@@ word@@ [i]); if(t@@ ==1) { p=@@ word@@ +@@ i; break; } } if(p@@ ==NULL) { for(i=0;i<l1;i++) cout<<@@ word@@ [i]; } else { for(q=@@ word@@ ;q@@ <p@@ ;q++) cout<<@@ *@@ q; for(i=0;i<@@ l3@@ ;i++) cout<<@@ replacement@@ [i]; for(q=@@ p+@@ l2@@ ;q@@ <@@ word@@ +@@ l1@@ ;q++) cout<<@@ *@@ q; } return0; }  
c -1
h -1
intmain() { intyear,@@ month1@@ ,@@ day; int@@ month@@ [13]={0,31,28,31,30,31,30,31,31,30,31,30,31}; cin>>year>>@@ month1@@ >>@@ day; inti; intsum=0; if(((@@ year%@@ 4==0)&&(@@ year%100!=0@@ )@@ )||(year%400==0)) { month@@ [2]=@@ month@@ [2@@ ]+1; for(i=1;i<@@ month1@@ ;i++) { sum=sum+@@ month@@ [i]; } sum=sum+day; } else { for(i=1;i<@@ month1@@ ;i++) { sum=sum+@@ month@@ [i]; } sum=sum+day; } cout<<@@ sum; return0; }  
c -1
h -1
0

intmain(){ intn,k; int@@ c=0; intsz[1000]; scanf("%d%d",&n,&k); for(inti=0;i<n;i++){ scanf("%d",&sz[i]); } for(intm=0;m@@ <@@ n-1@@ ;m++){ for(intj=@@ m@@ +1@@ ;j<@@ n;j++){ if(@@ sz[m@@ ]+@@ sz@@ [j]==k){ c++; } } } if(c@@ ==0)@@ printf("no"); if(c@@ !=0)@@ printf("yes"); return0; }  
c -1
h -1
intmain() { intnum[@@ 16@@ ]={0},@@ i=0,j=0,@@ sum=0; while(1) { scanf("%d",&@@ num@@ [0]); if(num@@ [0]@@ ==-1)break; for(i=1;@@ num@@ [i-1]@@ !=0;i++) { scanf("%d",&@@ num[i]); } for(i=0;@@ num[i]@@ !=0;i++) { for(j=0;@@ num[j]@@ !=0;j++) { if((@@ num@@ [i]==@@ 2*@@ num[j]@@ )&&(@@ num[i]@@ !=0)&&(@@ num[j]@@ !=0)) sum++; } } cout<<sum<<endl; sum=0; } return0; }  
c -1
h -1
0

intmain(){ intn,k,@@ a; inti,j; scanf("%d%d",&n,&k); intsz[@@ 1000],@@ zs@@ [1000]; for(i=0;i<n;i++){ scanf("%d",&sz[i]); zs@@ [i]=@@ sz[i]; } a=0; for(i=0;i<n;i++){ for(j=0;j<n;j++){ if((@@ zs@@ [j]+@@ sz[i]@@ )==@@ k){ a=1; break; } } } if(a@@ ==1){ printf("yes\n"); } else{ printf("no\n"); } return0; }  
c -1
h -1
voidmain() { voidf2@@ (inta[100],int@@ b[100@@ ],int@@ x,int@@ y); voidf@@ (inta[100],int@@ x); inti,@@ x,y,@@ a[100],b[100]; scanf("%d%d",&@@ x,&@@ y); for(i=0;i<x;i++) scanf("%d",&a[i]); for(i=0;i<y;i++) scanf("%d",&b[i]); f(a,@@ x@@ );@@ f(@@ b,@@ y); f2@@ (a,b,@@ x,@@ y); for(i=0;i<@@ x+@@ y;i++) { if(i@@ !=0)@@ printf(""); printf("%d",a[i]); } } voidf@@ (inta[100],int@@ x) {@@ inti,j,t; for(i=0;i<x@@ -1;i++) for(j=0;j<@@ x@@ -1-i;j++) if(a[j]>a[j+1]) {t=@@ a[j];a[j]=a[j+1];@@ a[j+1]=@@ t;} } voidf2@@ (inta[100],int@@ b[100@@ ],int@@ x,int@@ y) {inti; for(i=0;i<y;i++) a[i@@ +@@ x@@ ]=b[i]; }  
c -1
h -1
0

struct@@ pa { charid[10]; intage; }@@ patient@@ [100],@@ patient2@@ [100]; voidmain() { inti,k,@@ m,n,@@ j,@@ temp; char@@ id2@@ [10]; scanf("%d\n",&n); for(i=0;i<n;i++) { scanf("%s@@ %d\n",@@ patient@@ [i].id,&@@ patient@@ [i].age); } for(i=0,j@@ =0;i<@@ n;@@ ) { if(@@ patient@@ [i].age>=60) { strcpy(@@ patient2@@ [j].@@ id,@@ patient@@ [i].id); patient2@@ [j].age@@ =@@ patient@@ [i].age; j++; for(k=i@@ ;k<@@ n-1;k++) { strcpy(@@ patient@@ [k].@@ id,@@ patient@@ [k+1@@ ].id); patient@@ [k@@ ].age=@@ patient@@ [k+1@@ ].@@ age; } n--; } else@@ i++; } for(i=1;i<@@ j@@ ;i++) { for(k=0;k<i;k++) { if(@@ patient2@@ [i].age@@ >@@ patient2@@ [k@@ ].age) { temp=@@ patient2@@ [i].age; strcpy(@@ id2@@ ,@@ patient2@@ [i].id); for(m@@ =i@@ ;m@@ >@@ k@@ ;m@@ --) { patient2@@ [m@@ ].age=@@ patient2@@ [@@ m-1@@ ].@@ age; strcpy(@@ patient2@@ [m@@ ].id,@@ patient2@@ [@@ m-1@@ ].id); } patient2@@ [k@@ ].age=@@ temp; strcpy(@@ patient2@@ [k].@@ id,@@ id2@@ ); } } } for(i=0;i<j@@ ;i++)@@ printf("%s\n",@@ patient2@@ [i].id); for(i=0;i<n;i++)@@ printf("%s\n",@@ patient@@ [i].id); }  
c -1
h -1
intmain() { inty,m,@@ x,@@ i,@@ sum=0; scanf("%d%d%d",&y,&@@ m,&@@ x); if(y%@@ 4==0&&y%100!=0@@ ||@@ y%400==0) { int@@ d[@@ 13]={0,31,@@ 29,31,30,31,30,31,31,30,31,30,31}; for(i=0;i<m;i++) { sum=sum+@@ d[i]; } printf("%d",@@ sum@@ +@@ x); } else { int@@ d[@@ 13]={0,31,28,31,30,31,30,31,31,30,31,30,31}; for(i=0;i<m;i++) { sum=sum+@@ d[i]; } printf("%d",@@ sum@@ +@@ x); } return0; }  
c -1
h -1
0

int@@ t=1; void@@ fen@@ (intn,int@@ i) { for(i@@ =i@@ ;i@@ *@@ i<=@@ n;i++) { if(n%i==0) { fen@@ (n/i,i); t++; } } } intmain() { intk; cin>>k; while(k@@ --) { intn; cin>>n; t=1; fen@@ (n,@@ 2); cout<<t@@ <<endl; } }  
c -1
h -1
intmain() { chara[501],b[501]; inti,k,@@ l=0; k=0; double@@ d; scanf("%lf",&@@ d); scanf("%s",a); scanf("%s",b); if(strlen(a)!=strlen(b@@ )) { k=1; printf("error"); } if(strlen(a)@@ ==@@ strlen(b@@ )) { for(i=0;i<@@ strlen(a)@@ ;i++) { if(a[i]==b[i]) l++; if((a[i]!='@@ A'&&a[i]!='T'&&a[i]!='G'&&a[i]!='@@ C')||(@@ b[i]!='A'&&b[i]!='T'&&b[i]!='G'&&b[i]!='@@ C')@@ ) { k=1; printf("error"); break; } } } if(k==0) { if((@@ 1.0*@@ l@@ /@@ strlen(a)@@ )@@ >=@@ d) printf("yes"); else printf("no"); } return0; }  
c -1
h -1
0

int@@ ROW@@ ,@@ COL@@ ; int@@ row@@ =-1,@@ col@@ =1; int@@ array[100][100]; int@@ move@@ (){ row@@ ++; col@@ --; printf("%d\n",@@ array[@@ row][col@@ ]); return0; } int@@ big_move@@ (){ if(@@ row+col@@ <@@ COL@@ -1){ col@@ =@@ row+col@@ +1; row@@ =0; } else{ row@@ =@@ row+col@@ -@@ COL@@ +@@ 2; col@@ =@@ COL@@ -1; } printf("%d\n",@@ array[@@ row][col@@ ]); return0; } intmain(){ scanf("%d%d",&@@ ROW@@ ,&@@ COL@@ ); intr,@@ c; for(r=0;r@@ <ROW@@ ;r@@ ++){ for(c=0;c@@ <@@ COL@@ ;c@@ ++){ scanf("%d",&@@ array[@@ r@@ ][c@@ ]); } } if(@@ ROW@@ ==1&&@@ COL@@ ==1){ printf("%d",@@ array[@@ 0][@@ 0]@@ ); return0; } while(@@ row@@ !=@@ ROW@@ -1@@ ||@@ col@@ !=@@ COL@@ -1){ while(@@ col@@ !=0&&@@ row@@ !=@@ ROW@@ -1) move@@ (); big_move@@ (); } return0; }  
c -1
h -1
inth@@ [30]; int@@ result@@ [30]; int@@ findFirstLess@@ (int@@ num) { int@@ index@@ =0; while(1) { if(result@@ [@@ index@@ ]<@@ num) return@@ index@@ ; index@@ ++; } } intmain() { intk,@@ i=0,@@ r,@@ p,@@ ans; scanf("%d",&k); while(1) { if(i>=@@ k) break; scanf("%d",@@ h@@ +i); i++; } result@@ [0]=@@ h@@ [0]; i=1; r=0; while(i<@@ k) { if(h@@ [i]<=@@ result@@ [r@@ ]) result@@ [@@ ++@@ r@@ ]=@@ h@@ [i]; if(h@@ [i]>@@ result@@ [r@@ ]) result@@ [@@ findFirstLess@@ (@@ h@@ [i])@@ ]=@@ h@@ [i]; i++; } printf("%d\n",@@ r@@ +1); return0; }  
c -1
h -1
0

intmain(){ intn,k,@@ sz[@@ MAX@@ ]; scanf("%d%d",&@@ n,@@ &@@ k); for(inti=0;i<n;i++){ scanf("%d",&sz[i]); } int@@ sum,@@ out_put@@ =0; for(intj=0;j<@@ n-1@@ ;j++){ for(intm@@ =j+1@@ ;m@@ <n;m++){ sum=@@ sz@@ [j]+@@ sz[@@ m]; if(sum@@ ==k){ out_put@@ =1; break; } } if(@@ out_put@@ ==1){ break; } } if(@@ out_put@@ ==1){ printf("yes"); }else{ printf("no"); } return0; }  
c -1
h -1
intmain() { int@@ x,@@ a[@@ 16@@ ],i,j,@@ n=0,@@ num=0,@@ m; while(1) { cin>>m; if(m@@ ==-1) break; else { a[1]=@@ m; n=1; } for(i=2@@ ;@@ ;i++) { cin>>x; if(x@@ ==0) break; else { a[i]=@@ x; n=n+1; } } for(i=1;i<=n;i++) { for(j=1;j<=n;j++) { if(a[i]==@@ (@@ 2*@@ a[j]@@ )) num=num@@ +1; } } cout<<num<<endl; num=0; } return0; }  
c -1
h -1
0

intmain(){ intn,k,@@ a[1000],@@ i,@@ x,@@ s; s=1; scanf("%d",&n); scanf("%d",&k); for(i=0;i<n;i++){ scanf("%d",&a[i]); } for(i=0;i<n-1;i++){ for(x@@ =1;@@ x@@ <=@@ n-1@@ -i@@ ;x@@ ++){ if(a[i]+@@ a[i@@ +@@ x@@ ]==k){ s=s@@ *@@ 0@@ ; } } } if(s@@ ==0){ printf("yes"); } else{ printf("no"); } return0; }  
c -1
h -1
intmain() { intn,@@ x; inta[100]; cin>>n; for(intk=0;k<@@ 100@@ ;k++) a[k]@@ =0; for(inti=0;i<n;i++) { cin>>x; for(intj=@@ 10@@ ;j<@@ 100@@ ;j++) { if(x==@@ j)@@ a[j]=@@ a[j]@@ +1; } if(a[x@@ ]@@ ==1) { if(i@@ !=0) cout<<""<<@@ x; else cout<<@@ x; } } return0; }  
c -1
h -1
0

intmain(){ intn,i,@@ age@@ [100]; charid@@ [100][10]; scanf("%d",&n); for(i=0;i<n;i++){ scanf("%s%d",@@ id[i],&@@ (@@ age@@ [i]@@ )); } int@@ e; char@@ e_id@@ [10]; for(intk@@ =1@@ ;k<=@@ n;k++){ for(intm=0;m@@ <@@ n-@@ k@@ ;m++){ if((@@ age@@ [m]@@ >=60&&@@ age@@ [m@@ +1@@ ]@@ >=60&&@@ age@@ [m@@ ]<@@ age@@ [m@@ +1@@ ]@@ )||(@@ age@@ [m]@@ <60&&@@ age@@ [m@@ +1@@ ]@@ >=60@@ )){ e=@@ age@@ [m@@ +1]; strcpy(@@ e_id@@ ,@@ id@@ [m@@ +1@@ ]); age@@ [m@@ +1]=@@ age@@ [m]; strcpy(id@@ [m@@ +1],@@ id@@ [m]); age@@ [m]=@@ e; strcpy(id@@ [m@@ ],@@ e_id@@ ); } } } for(i=0;i<n;i++){ printf("%s\n",@@ id[i]); } return0; }  
c -1
h -1
intmain() { intn,i,@@ k=0,@@ num; inta[100@@ ]={0},@@ b[100@@ ]; cin>>n; for(i=1;i<=n;i++) { cin>>num; if(a[@@ num@@ ]==0) { a[@@ num@@ ]++; b[k]=@@ num; k++; } } for(i=0;i<@@ k-1;i++) cout<<b[i]<<""; cout<<@@ b[k@@ -1]; return0; }  
c -1
h -1
0

main() { inti,@@ t@@ ,j,@@ n,@@ a[@@ 25],@@ p@@ [25],@@ max_p@@ ,@@ max; scanf("%d",&n); for(i=0;i<n;i++) scanf("%d",&a[i]); t=i; for(i=@@ t@@ -1;i>=0;i--) { max_p@@ =0; for(j=@@ t@@ -1@@ ;j>i;j--) if(a[i]>=@@ a[j]@@ &&p@@ [j]>@@ max_p@@ ) max_p@@ =p@@ [j]; p[i]=@@ max_p@@ +1; } max=@@ p@@ [0]; for(i=1;i<@@ t;i++) if(p@@ [i]>max) max=@@ p[i]; printf("%d",max); }  
c -1
h -1
intmain() { int@@ test@@ [100][@@ 17@@ ]={0}; inti,j,k,@@ num; int@@ turn@@ =0,@@ nonzero@@ =0,@@ valid@@ =0; for(i=0;@@ ;i++){ for(j=0;@@ ;j++){ scanf("%d",&num); if(num@@ ==0) break; if(num@@ ==-1) goto@@ start@@ ; test@@ [i][j]=@@ num; } turn@@ +=1; } start@@ :@@ for(i=0;i<@@ turn@@ ;i++){ for(j=0;@@ ;j++){ if(@@ test@@ [i][j]@@ !=0) nonzero@@ +=1; else break; } for(j=0;j<@@ nonzero@@ ;j++){ for(k=0;k<@@ nonzero@@ ;k++){ if((@@ float)@@ (@@ test@@ [i][j]@@ )@@ /@@ (@@ float)@@ (@@ test@@ [i][k]@@ )==@@ 2) valid@@ +=1; } } printf("%d\n",@@ valid@@ ); valid@@ =0; nonzero@@ =0; } return0; }  
c -1
h -1
0

struct { int@@ no; char@@ wr@@ [26]; }@@ book[999]; struct { charname@@ ; intnum; int@@ book[999]; }a[@@ 26]; intmain() { intn,m,@@ t,@@ k,@@ d; int@@ all@@ =0; for(t=0;t@@ <26@@ ;t++) { a[t@@ ].@@ name@@ ='A'+@@ t; a[t@@ ].@@ num=0; } scanf("%d",&m); for(t=0;t@@ <m;@@ t++) { scanf("%d%s",&@@ book@@ [t@@ ].@@ no@@ ,@@ book@@ [t@@ ].@@ wr@@ ); } for(t=0;t@@ <m;@@ t++) { k=strlen(@@ book@@ [t@@ ].@@ wr@@ ); for(n=0;n@@ <k;@@ n++) { for(d@@ =0;d@@ <26@@ ;@@ d++) { if(a[@@ d@@ ].@@ name@@ ==@@ book@@ [t@@ ].@@ wr@@ [n@@ ]) { a[d@@ ].@@ book[@@ a[d@@ ].num@@ ]=@@ book@@ [t@@ ].@@ no; a[d@@ ].@@ num++; break; } } } } k=0; for(t=0;t@@ <26@@ ;t++) { if(k@@ <@@ a[t@@ ].@@ num) k=@@ a[t@@ ].@@ num; } for(t@@ =0;@@ ;t++) { if(k==@@ a[t@@ ].@@ num) { printf("%c",@@ a[t@@ ].@@ name); printf("\n%d",@@ a[t@@ ].@@ num); for(d@@ =0;d@@ <@@ a[t@@ ].@@ num;@@ d++) printf("\n%d",@@ a[t@@ ].@@ book[@@ d@@ ]); break; } } }  
c -1
h -1
intmain(void) { intnum; scanf("%d",&num); inta[@@ num@@ ],@@ flag@@ [@@ num@@ ]; for(inti=0;i<@@ num;i++) { scanf("%d",&a[i]); flag@@ [i]=1; } for(inti=0;i<@@ num;i++) { for(intj=0;j<i;j++) { if(a[j]>=@@ a[i]) { flag@@ [i]=@@ flag@@ [j]+1>@@ flag@@ [i]@@ ?@@ flag@@ [j]@@ +1@@ :@@ flag@@ [i]; } } } intmax=@@ flag@@ [0]; for(inti=1;i<@@ num;i++) { if(flag@@ [i]>max) max=@@ flag@@ [i]; } printf("%d\n",max); return0; }  
c -1
h -1
0

intmain() {int@@ y,@@ m,@@ d,@@ a[@@ 5@@ ],@@ i=1; while(i<=@@ 5) { scanf("%d%d%d",&y,&m,&d); if(y%@@ 4!=0@@ ||@@ y%@@ 100==0&&@@ y%@@ 400@@ !=0) {@@ switch(@@ m){ case1:@@ a[i]=@@ d;break; case2:@@ a[i]=@@ d+@@ 31;break; case3:@@ a[i]=@@ d@@ +31+28@@ ;break; case4:@@ a[i]=@@ d+@@ 62@@ +28@@ ;break; case5:@@ a[i]=@@ d+@@ 62@@ +28@@ +30@@ ;break; case6:@@ a[i]=@@ d+@@ 31*3@@ +30@@ +28@@ ;break; case7:@@ a[i]=@@ d+@@ 31*3@@ +30*2@@ +28@@ ;break; case8:@@ a[i]=@@ d+@@ 31*@@ 4@@ +30*2@@ +28@@ ;break; case9:@@ a[i]=@@ d+@@ 31*5@@ +30*2@@ +28@@ ;break; case10:@@ a[i]=@@ d+@@ 31*5@@ +30@@ *3@@ +28@@ ;break; case11:@@ a[i]=@@ d+@@ 31*6@@ +30@@ *3@@ +28@@ ;break; case12:@@ a[i]=@@ d+@@ 31*6@@ +30@@ *@@ 4@@ +28@@ ;break;} } else@@ switch(@@ m){ case1:@@ a[i]=@@ d;break; case2:@@ a[i]=@@ d+@@ 31;break; case3:@@ a[i]=@@ d@@ +31+29@@ ;break; case4:@@ a[i]=@@ d+@@ 62@@ +29@@ ;break; case5:@@ a[i]=@@ d+@@ 62@@ +29@@ +30@@ ;break; case6:@@ a[i]=@@ d+@@ 31*3@@ +30@@ +29@@ ;break; case7:@@ a[i]=@@ d+@@ 31*3@@ +30*2@@ +29@@ ;break; case8:@@ a[i]=@@ d+@@ 31*@@ 4@@ +30*2@@ +29@@ ;break; case9:@@ a[i]=@@ d+@@ 31*5@@ +30*2@@ +29@@ ;break; case10:@@ a[i]=@@ d+@@ 31*5@@ +30@@ *3@@ +29@@ ;break; case11:@@ a[i]=@@ d+@@ 31*6@@ +30@@ *3@@ +29@@ ;break; case12:@@ a[i]=@@ d+@@ 31*6@@ +30@@ *@@ 4@@ +29@@ ;break;} i=i+1; } printf("%d@@ \n@@ %d\n@@ %d\n@@ %d\n@@ %d\n@@ %"@@ ,@@ a[1@@ ],@@ a[2@@ ],@@ a[@@ 3@@ ],@@ a[@@ 4@@ ],@@ a[@@ 5@@ ]); return0; }  
c -1
h -1
intmain() { intn=0,@@ sz@@ [100],@@ erbei@@ [100@@ ],*@@ p1,*p2@@ ,@@ sum=0; p1=@@ sz@@ ; p2=@@ erbei@@ ; for(p1=@@ sz@@ ;@@ ;@@ p1@@ ++){ scanf("%d",@@ p1); n++; if(*@@ p1@@ ==0){ for(p1=@@ sz@@ ;@@ p1@@ <@@ sz@@ +@@ n-1;@@ p1@@ ++){ *p2@@ =*@@ p1@@ *2@@ ; p2@@ ++; } for(@@ p2=@@ erbei@@ ;@@ p2@@ <@@ erbei@@ +@@ n-1;@@ p2@@ ++){ for(p1=@@ sz@@ ;@@ p1@@ <@@ sz@@ +@@ n-1;@@ p1@@ ++){ if(*@@ p2@@ ==@@ *@@ p1@@ ){ sum++; } } } printf("%d\n",sum); p1=@@ sz@@ -1; p2=@@ erbei@@ ; sum=0; n=0; } if(*@@ p1@@ ==@@ -1){ break; } } return0; }  
c -1
h -1
0

intmain() { intn,k,i,@@ m,@@ p; intsz[1000]; scanf("%d%d\n",&n,&@@ k); p=0; sz[@@ n@@ ]=@@ k; for(i=0;i<n;i++){ scanf("%d",&sz[i]); } for(i=0;i<n;i++){ for(m=@@ n-1@@ ;m@@ >@@ i@@ ;m@@ --){ if(sz[i]@@ +@@ sz[m@@ ]==@@ sz[@@ n@@ ]){ p=1; } } } if(p@@ ==1) printf("yes"); if(p@@ ==0) printf("no"); return0; }  
c -1
h -1
intmain() { inti,n,@@ m,@@ j; double@@ x,y,@@ z,@@ std@@ ; x@@ =1@@ .0@@ ; char@@ aa@@ [1000]; char@@ bb@@ [1000]; scanf("%lf",&@@ std@@ ); scanf("%s",@@ aa@@ ); scanf("%s",@@ bb@@ ); n=strlen(@@ aa@@ ); m=strlen(@@ bb@@ ); if(m!=@@ n) { printf("error"); return0; } for(i=0;i<n;i++) { if((@@ aa@@ [i]!='A')&&(@@ aa@@ [i]!='T')&&(@@ aa@@ [i]!='G')@@ &&(@@ aa@@ [i]!='C')&&(@@ bb@@ [i]!='A')&&(@@ bb@@ [i]!='T')&&(@@ bb@@ [i]!='C')&&(@@ bb@@ [i]!='G')@@ ) { printf("error"); return0; } } for(i=0;i<n;i++) { if(@@ aa@@ [i]==@@ bb@@ [i]) { x=x@@ +1; } } y=@@ n*@@ 1.0@@ ; z=@@ x/@@ y; if(z@@ >@@ std@@ ) { printf("yes"); } else { printf("no"); } return0; }  
c -1
h -1
0

int@@ n1,n2; int*@@ p1; int*@@ p2; int*@@ p3; main() { scanf("%d%d",&n1,&n2); p1=@@ (int*)malloc(@@ n1@@ *sizeof(int)); p2=@@ (int*)malloc(@@ n2@@ *sizeof(int)); for(intk=0;k<@@ n1@@ ;k++) scanf("%d",&@@ p1@@ [k]); for(intk=0;k<@@ n2@@ ;k++) scanf("%d",&@@ p2@@ [k]); for(int@@ k=@@ n1@@ -1@@ ;k@@ >0@@ ;k--) { for(inti=0;i<k;i++) { if(@@ p1@@ [i]>@@ p1@@ [i+1]) { intt; t@@ =p1@@ [i]; p1@@ [i]=@@ p1@@ [i+1]; p1@@ [i+1]=@@ t; } } } for(int@@ k=@@ n2@@ -1@@ ;k@@ >0@@ ;k--) { for(inti=0;i<k;i++) { if(@@ p2@@ [i]>@@ p2@@ [i+1]) { intt; t=@@ p2@@ [i]; p2@@ [i]=@@ p2@@ [i+1]; p2@@ [i+1]=@@ t; } } } p3=@@ (int*)malloc(@@ (@@ n1+n2@@ )@@ *sizeof(int)); for(intk=0;k<@@ n1@@ ;k++) p3@@ [k]=@@ p1@@ [k]; for(inti=@@ n1@@ ;i<@@ n1+@@ n2;i++) p3@@ [i]=@@ p2@@ [i-@@ n1@@ ]; intc; for(c=0;c@@ <@@ n1+n2@@ ;c@@ ++) { if(c@@ ==0) printf("%d",@@ p3@@ [0]); else@@ printf("%d",@@ p3@@ [c@@ ]); } }  
c -1
h -1
void@@ pai@@ (inta[],int@@ m); voidshuru@@ (inta[@@ 10@@ ],intb[@@ 10@@ ],int@@ m,int@@ n); voidmain(){ inta[@@ 10@@ ],b[@@ 10]; intm,n; scanf("%d%d",&m,&n); shuru@@ (a,b,m,n); } voidshuru@@ (inta[@@ 10@@ ],intb[@@ 10@@ ],int@@ m,int@@ n){ inti; for(i=0;i<m;i++) scanf("%d",&a[i]); for(i=0;i<n;i++) scanf("%d",&b[i]); printf("\n"); pai@@ (a,m); pai@@ (b,n); for(i=0;i<m;i++) printf("%d",a[i]); for(i=0;i<n-1;i++) printf("%d",b[i]); printf("%d",b[@@ n-1]); } void@@ pai@@ (inta[],int@@ m){ inti,j,t; for(j=0;j<m-1;j++) for(i=0;i<m@@ -1-j;i++) if(a[i]>a[i+1]) { t=a[i]; a[i]=a[i+1]; a[i+1]=@@ t; } }  
c -1
h -1
1


struct@@ bing { charid[10]; intage; }@@ person@@ [100],@@ old@@ [100]; main() { intn,i,j=0,@@ k,@@ b; char@@ e@@ [10]; scanf("%d",&n); for(i=0;i<n;i++) { scanf("%s%d",@@ person@@ [i].id,&@@ person@@ [i].age); if(@@ person@@ [i].age>=60) { strcpy(old@@ [j].@@ id,@@ person@@ [i].id); old@@ [j].age@@ =@@ person@@ [i].age; j=j+1; } } for(k=1;k<@@ j@@ ;k++) for(i=0;i<j@@ -@@ k;i++) { if(old@@ [i].age@@ <@@ old@@ [i+1@@ ].age) { strcpy(@@ e,@@ old@@ [i].id); strcpy(old@@ [i].@@ id,@@ old@@ [i+1].@@ id); strcpy(old@@ [i+1].@@ id,@@ e); b=@@ old@@ [i].age; old@@ [i].age@@ =@@ old@@ [i+1].@@ age; old@@ [i+1@@ ].age=@@ b; } } for(i=0;i<j;i++) printf("%s\n",old@@ [i].id); for(i=0;i<n;i++) if(@@ person@@ [i].age<60) printf("%s\n",@@ person@@ [i].id); return0; }  
c -1
h -1
intmain() { intb,@@ c,d,@@ sum=0; inta[@@ 20]; a[0]@@ =0; a[1@@ ]=31; a[2]=@@ 59@@ ; a[@@ 3@@ ]=@@ 90@@ ; a[@@ 4@@ ]=@@ 120@@ ; a[@@ 5@@ ]=@@ 151@@ ; a[@@ 6@@ ]=@@ 181@@ ; a[@@ 7@@ ]=@@ 212@@ ; a[@@ 8@@ ]=@@ 243@@ ; a[@@ 9@@ ]=@@ 273@@ ; a[@@ 10@@ ]=@@ 304@@ ; a[@@ 11@@ ]=@@ 334@@ ; a[@@ 12@@ ]=@@ 365@@ ; scanf("%d%d%d",&@@ b,@@ &@@ c,@@ &@@ d); if((@@ b@@ %@@ 4!=0@@ )||(@@ b@@ %@@ 100==0&&@@ b@@ %@@ 400@@ !=0@@ )){ sum=@@ a[c@@ -1]@@ +d; } else{ if(c@@ <@@ 3@@ ){ sum=@@ a[c@@ -1]@@ +d; } else{ sum=@@ a[c@@ -1]@@ +d@@ +1; } } printf("%d",sum); return0; }  
c -1
h -1
0

int@@ function@@ (intn,int@@ a) { int@@ kind@@ =0; inti; if(n==1) return1; for(i=a@@ ;i<=n;i++) { if(n%i==0) { if(n@@ /i@@ <i@@ &&i!=@@ n); else { kind@@ =@@ kind@@ +@@ function@@ (n/i,i); } } } return@@ kind@@ ; } intmain() { intm,n,@@ i,@@ sum; cin>>m; for(i=1;i<=m;i++) { cin>>n; sum=@@ function@@ (n,@@ 2); cout<<sum<<endl; } return0; }  
c -1
h -1
voidmain() { intn,i,j,@@ pi@@ =0,@@ pj@@ ,@@ r=0,@@ a; scanf("%d",&n); for(i=0;i<n;i++) { for(@@ pj@@ =0,@@ j@@ =0;j<@@ n;j++) { scanf("%d",&a); if(a@@ ==0){@@ pj@@ ++;@@ r@@ ++;} } if(@@ pj@@ !=0)@@ pi@@ ++; } printf("%d",(@@ r@@ /2@@ -@@ pi@@ )*(@@ pi@@ -2@@ )); }  
c -1
h -1
0

voidmain() { intn,i,j; intmax@@ ,@@ p; int@@ mwj@@ ; int@@ shu@@ [1000]; char@@ zuo@@ [1000][@@ 30]; int@@ w@@ [26]; for(i=0;i<26;i++) w@@ [i]=0; scanf("%d",&n); for(i=0;i<n;i++) { scanf("%d%s",&@@ shu@@ [i],@@ zuo@@ [i]); for(j=0;j<strlen(@@ zuo@@ [i]@@ );j++) { w@@ [@@ (@@ zuo@@ [i][j]@@ -65@@ )@@ ]=@@ w@@ [@@ (@@ zuo@@ [i][j]@@ -65@@ )@@ ]+1; } } max=@@ w@@ [0]@@ ;p@@ =0; for(i=0;i<26;i++) { if(w@@ [i]>max) { max=@@ w@@ [i]; p=i; } } printf("%c\n",@@ p@@ +65); printf("%d\n",max); for(i=0;i<n;i++) { for(j=0;j<strlen(@@ zuo@@ [i]@@ );j++) { mwj@@ =@@ zuo@@ [i][j]; if(@@ mwj@@ ==@@ p@@ +65) { printf("%d\n",@@ shu@@ [i]); break; } } } }  
c -1
h -1
intmain() {int@@ j,@@ i,@@ n,k,@@ b=0; inta[@@ 1001@@ ]={0}; scanf("%d%d",&n,&k); for(i=0;i<n;i++) {@@ scanf("%d",&a[i]);} for(i=0;i<n-1;i++) for(j=i+1;j<n;j++) {@@ if(a[i]+a[j]==k) {@@ b@@ ++;@@ break;} if(b@@ !=0)@@ break;} if(b@@ ==0) printf("no"); else printf("yes"); }  
c -1
h -1
0

intmain() { struct@@ pa { charid[10]; intage; }@@ pat@@ [100],@@ p1@@ [100],@@ p2@@ [100],@@ temp; inti,n,@@ j=0,@@ k=0,@@ m; cin>>n; for(i=0;i<n;i++) { cin>>@@ pat[i].@@ id@@ >>@@ pat@@ [i].age; } for(i=0;i<n;i++) { if(pat@@ [i].age>=60) { p1@@ [j]=@@ pat@@ [i]; j++; } else { p2@@ [k]=@@ pat@@ [i]; k++; } } for(i=j@@ -1@@ ;i>0;i--) { for(m=0;m<@@ i@@ ;m++) { if(@@ p1@@ [m@@ ].age@@ <@@ p1@@ [m@@ +1@@ ].age) { temp@@ =p1@@ [m]; p1@@ [m]=@@ p1@@ [m@@ +1]; p1@@ [m@@ +1]=@@ temp; } } } for(i=0;i<j;i++) { printf("%s\n",@@ p1@@ [i].id); } for(i=0;i<k;i++) { printf("%s\n",@@ p2@@ [i].id); } return0; }  
c -1
h -1
intmain(intargc,char*argv[]) { int@@ points@@ [100][100]; intn,@@ row,col; intsum=0,@@ i=0; int@@ SUM@@ =0,@@ j=0; scanf("%d",&n); for(row=0;row<n;@@ row++) { for(col=0;col<n;col@@ ++) { scanf("%d",&@@ points@@ [@@ row][col@@ ]); } } for(row=0;row<n;@@ row++) { sum=0; for(col=0;col<n;col@@ ++) { sum+=@@ points@@ [@@ row][col]; } if(sum@@ <@@ n*@@ 255) i++; } for(col=0;col<n;col@@ ++) { SUM@@ =0; for(row=0;row<n;@@ row++) { SUM@@ +=@@ points@@ [@@ row][col]; } if(@@ SUM@@ <@@ n*@@ 255) j++; } printf("%d",@@ (i@@ -2)*(@@ j@@ -2@@ )); return0; }  
c -1
h -1
0

structbook { intnum; charwriter@@ [20]; structbook*next; }; intmain() { intn,i,j,@@ m,@@ k,@@ c[@@ 26],@@ max; chara[@@ 26]; scanf("%d",&m); structbook*@@ p1,*p2,*head; for(i=0;i<m;i++) { p1=(structbook@@ *)malloc(@@ Len@@ ); if(i==0) { head=p1; } else { p2->next=p1; } p2=p1; scanf("%d%s",&p1->num,p1->@@ writer); } p2->next=NULL; p1=head; for(i=0;i<26;i++) { a[i]@@ =i+65; c[i]@@ =0; } for(j=0;j<m;j++) { for(i=0;i<26;i++) { n=strlen(@@ p1->@@ writer); for(k=0;k<n;k++) { if(a[i]==@@ p1->@@ writer@@ [k]) { c[i]@@ ++; } } } p1=p1->next; } max=0; for(i=0;i<26;i++) { if(c@@ [i]>@@ c[@@ max@@ ]) { max=i; } } printf("%c\n%d\n",@@ a[@@ max@@ ],c[@@ max@@ ]); p1=head; for(i=0;i<m;i++) { n=strlen(@@ p1->@@ writer); for(j=0;j<n;j++) { if(p1->@@ writer@@ [j]==@@ a[@@ max@@ ]) { printf("%d\n",@@ p1->num); } } p1=p1->next; } return0; }  
c -1
h -1
intmain(){ intn,@@ sz[@@ 1000][1000]; inta,b,@@ c,d,@@ g; scanf("%d",&n); for(inti=0;i<n;i++){ for(intk=0;k<@@ n;k++){ scanf("%d",&@@ sz[i]@@ [k]); } } for(inti=0;i<n;i++){ for(intk=0;k<@@ n;k++){ if(sz[i]@@ [k]@@ ==0){ a=i; b=@@ k; } } } for(inti=@@ n-1@@ ;i>=0;i--){ for(int@@ k=@@ n-1@@ ;k>=0@@ ;k@@ --){ if(sz[i]@@ [k]@@ ==0){ c=i; d=@@ k; } } } g@@ =(@@ a@@ -c@@ -1)*(@@ b-@@ d@@ -1); printf("%d",@@ g@@ ); return0; }  
c -1
h -1
0

intmain(){ double@@ k; int@@ xt@@ =0; inti; inta,b; char@@ zfc1@@ [1000],@@ zfc2@@ [1000]; scanf("%lf",&@@ k); scanf("%s",&@@ zfc1@@ ); scanf("%s",&@@ zfc2@@ ); a=strlen(@@ zfc1@@ ); b=strlen(@@ zfc2@@ ); for(i=0;i<a;i++){ if(@@ zfc1@@ [i]!='A'&&@@ zfc1@@ [i]!='T'&&@@ zfc1@@ [i]!='G'&&@@ zfc1@@ [i]!='@@ C'){ a=0; break; }else{ continue; } } for(i=0;i<b;i++){ if(@@ zfc2@@ [i]!='A'&&@@ zfc2@@ [i]!='T'&&@@ zfc2@@ [i]!='G'&&@@ zfc2@@ [i]!='@@ C'){ b=0; break; }else{ continue; } } if(a@@ ==0||@@ b@@ ==0||@@ a@@ !=@@ b){ printf("error"); }else{ for(i=0;i<b;i++){ if(@@ zfc1@@ [i]==@@ zfc2@@ [i]){ xt@@ =@@ xt@@ +1; }else{ xt@@ =@@ xt@@ ; } } if(b@@ *@@ k@@ <@@ xt@@ ){ printf("yes"); }else{ printf("no"); } } return0; }  
c -1
h -1
intmain() { inti,n,@@ m,@@ j; double@@ x,y,@@ z,@@ std@@ ; x@@ =1@@ .0@@ ; char@@ aa@@ [1000]; char@@ bb@@ [1000]; scanf("%lf",&@@ std@@ ); scanf("%s",@@ aa@@ ); scanf("%s",@@ bb@@ ); n=strlen(@@ aa@@ ); m=strlen(@@ bb@@ ); if(m!=@@ n) { printf("error"); return0; } for(i=0;i<n;i++) { if((@@ aa@@ [i]!='A')&&(@@ aa@@ [i]!='T')&&(@@ aa@@ [i]!='G')@@ &&(@@ aa@@ [i]!='C')&&(@@ bb@@ [i]!='A')&&(@@ bb@@ [i]!='T')&&(@@ bb@@ [i]!='C')&&(@@ bb@@ [i]!='G')@@ ) { printf("error"); return0; } } for(i=0;i<n;i++) { if(@@ aa@@ [i]==@@ bb@@ [i]) { x=x@@ +1; } } y=@@ n*@@ 1.0@@ ; z=@@ x/@@ y; if(z@@ >@@ std@@ ) { printf("yes"); } else { printf("no"); } return0; }  
c -1
h -1
1


inta[100][100@@ ][100]; intmain() { intk,@@ m@@ [100],@@ n@@ [100],@@ i,j,@@ t,@@ s@@ [100]; cin>>k; for(i=0;i<k;i++) { s[i]@@ =0; cin>>@@ m[i]@@ >>@@ n[i]; for(j=0;j<m@@ [i];j++) for(t=0;t@@ <@@ n[i]@@ ;t++) cin>>@@ a[i][j]@@ [t@@ ]; for(t=0;t@@ <@@ n[i]@@ ;t++) s[i]@@ +=@@ (@@ a[i][@@ 0][@@ t@@ ]+@@ a[i]@@ [m@@ [i]@@ -1@@ ][@@ t@@ ]); for(j=0;j<m@@ [i];j++) s[i]@@ +=@@ (@@ a[i][j]@@ [0]+@@ a[i][j]@@ [n@@ [i]@@ -1]); s[i]=@@ s[i]@@ -@@ a[i][@@ 0][@@ 0]-@@ a[i][@@ 0][@@ n[i]@@ -1]@@ -@@ a[i]@@ [m@@ [i]@@ -1@@ ][0]-@@ a[i]@@ [m@@ [i]@@ -1@@ ][@@ n[i]@@ -1]; } for(i=0;i<k;i++) cout<<@@ s[i]@@ <<endl; return0; }  
c -1
h -1
typedef@@ struct { int@@ file@@ ; int@@ reign@@ ; }@@ missile@@ ; voidmain() { intn,i,j,@@ max=0; missile@@ a[@@ 30]; scanf("%d",&n); for(i=1;i<=n;i++) { scanf("%d",&@@ a[i].@@ file@@ ); } a[n@@ ].@@ reign@@ =1; for(i=n-1@@ ;i>=1;i--) { a[i].@@ reign@@ =1; for(j=i+1;j<=n;j++) { if(a[j]@@ .@@ file@@ <=@@ a[i].@@ file@@ ) { if(a[j]@@ .@@ reign@@ +1>@@ a[i].@@ reign@@ ) { a[i].@@ reign@@ =@@ a[j].@@ reign@@ +1; } } } } for(i=1;i<=n;i++) { if(a[i].@@ reign@@ >max) { max=@@ a[i].@@ reign@@ ; } } printf("%d",max); }  
c -1
h -1
0

voidmain() { char@@ st@@ [256],@@ sub[256],@@ rep@@ [256]; scanf("%s%s%s",@@ st@@ ,@@ sub,@@ rep); int@@ lenst@@ ,@@ lensub@@ ,@@ i,j; lenst@@ =strlen(@@ st@@ ); lensub@@ =strlen(@@ sub); for(i=0;i<=@@ lenst@@ -@@ lensub@@ ;i++) { intcount=0; if(@@ lensub@@ !=1) { if(@@ st@@ [i]==@@ sub@@ [0]) { for(j=i+1;j<@@ i+@@ lensub@@ ;j++) { if(@@ st@@ [j]!=@@ sub@@ [j-i@@ ]) break; count++; } } if(count==@@ lensub@@ -1) { for(j=i;j<i+@@ lensub@@ ;j++) { st@@ [j]=@@ rep@@ [j-i@@ ]; } break; } } else { if(@@ st@@ [i]==@@ sub@@ [0]) { st@@ [i]=@@ rep@@ [0]; break; } } } printf("%s",@@ st@@ ); }  
c -1
h -1
struct@@ pa { charstr@@ [10]; inty; }@@ pa@@ [@@ 101]; intmain() { intn; inti,j,@@ k=0,@@ t=0; inta[100],b[100]; scanf("%d",&n); for(i=0;i<n;i++) scanf("%s%d",@@ pa@@ [i].@@ str@@ ,&@@ pa@@ [i].@@ y); for(i=0;i<n;i++) { if(pa@@ [i].y@@ >=60) { a[k]=@@ i; k++; } else { b[t@@ ]=i; t++; } } for(i=1;i<k;i++) for(j=0;j<@@ k@@ -i;j++) if(pa@@ [@@ a[j]@@ ].@@ y@@ <@@ pa@@ [@@ a[j+1@@ ]@@ ].@@ y) { pa@@ [100@@ ]=@@ pa@@ [@@ a[j]@@ ]; pa@@ [@@ a[j]@@ ]=@@ pa@@ [@@ a[j+1@@ ]@@ ]; pa@@ [@@ a[j+1@@ ]@@ ]=@@ pa@@ [100]; } for(i=0;i<k;i++) printf("%s\n",@@ pa@@ [@@ a[i]@@ ].@@ str); for(i=0;i<t;i++) printf("%s\n",@@ pa@@ [@@ b[i]@@ ].@@ str); }  
c -1
h -1
0

voidmain() { inta[1000]; intn,k,@@ i,j; int@@ flag=0; scanf("%d%d",&n,&k); for(i=0;i<n;i++) scanf("%d",&a[i]); for(i=0;i<n@@ &&@@ flag@@ ==0@@ ;i++) { for(j=0;j<n;j++) if(a[i]!=@@ a[j]&&@@ a[i]+@@ a[j]==@@ k) { flag=1; break; } } if(flag) printf("yes"); else printf("no"); }  
c -1
h -1
intmain() { inta[100@@ ][@@ 16]; inti,j,k,@@ t,@@ s; intb[100@@ ]={0}; for(i=0;i<=@@ 99@@ ;i++) { for(j=0;j<=@@ 15@@ ;j++) { scanf("%d",&a[i][j]); if(a[i][j]@@ ==0||@@ a[i]@@ [j]==@@ -1) { break;} } if(a[i]@@ [0]==@@ -1@@ ){@@ b[i]@@ =-@@ 1@@ ;break;} } for(k=0;k<=@@ 99@@ ;k++) { if(a[k@@ ][0]@@ ==-1) {break;} for(t=0;t@@ <=@@ 15@@ ;t++) { if(a[k@@ ][@@ t@@ ]@@ ==0||@@ a[k@@ ][@@ t@@ ]==@@ -1@@ ){@@ break;} for(s=0;s@@ <=@@ 15@@ ;s++) { if(a[k@@ ][@@ s@@ ]@@ ==0){@@ break;} if(a[k@@ ][@@ t@@ ]@@ *2==@@ a[k@@ ][@@ s@@ ]){@@ b[k@@ ]@@ ++;} } } } for(int@@ q@@ =0;q@@ <=@@ 99@@ ;q++) { if(b[@@ q@@ ]==@@ -1) {break;} printf("%d\n",@@ b[@@ q@@ ]); } return0; }  
c -1
h -1
0

int@@ func@@ (intm,int@@ q) { intb[100@@ ]; inti,j,@@ k=0,@@ p=0,@@ sum=1; for(j=@@ q@@ ;j<=@@ m;j++) { if(j@@ *@@ j@@ >@@ m) { p=@@ k; break; } if(m@@ %j==0) { b[k]=@@ j; k++; } } if(k@@ >2@@ ||@@ p@@ !=0&&@@ m@@ !=@@ 2) { for(i=0;i<p@@ ;i++) { sum+=@@ func@@ (m@@ /@@ b[i]@@ ,@@ b[i]); } return(@@ sum); } else return(1); } main() { inti,j,@@ k=0,@@ n,m,@@ b[100@@ ]={0},@@ a[100@@ ]={0}; scanf("%d",&n); for(i=0;i<n;i++) { scanf("%d",&m); b[i]=@@ func@@ (m,@@ 2); } for(j=0;j<i;j++) { printf("%d\n",@@ b[j]); } }  
c -1
h -1
intmain(intargc,char*argv[]) { intnum[@@ 15]; inti,@@ m; for(i=0;i<@@ 15;i++) {scanf("%d",&@@ num[i]); {@@ if(num@@ [i]==0) break;} i++; } intj=0; inta; m=i; i=@@ a=0; for(i=0;i<m;i++) { for(j=0;j<m;j++) {@@ if(num@@ [i]@@ /@@ num@@ [j]==@@ 2@@ &&@@ num[i]@@ %@@ num[j]@@ ==0) a@@ ++;} } printf("%d\n",@@ a); return0; }  
c -1
h -1
0

intmain() { intn,k,@@ a,@@ e@@ [@@ 10008@@ ],i,j,@@ m,@@ log@@ ; log@@ =0; scanf("%d%d",&n,&k); if(n==1) { if(n@@ ==k) { printf("yes"); }else{ printf("no"); } }else{ scanf("%d",&a); e@@ [1]=@@ a; for(i=2;i<=n;i++) { scanf("%d",&a); e@@ [i]=@@ a; } for(j=1;j<=n;j++) { for(m=@@ n;@@ m@@ >@@ j@@ ;m@@ --) { if((@@ e@@ [j]+@@ e@@ [m@@ ])@@ ==k) { printf("yes"); log@@ =1; break; } } if(@@ log@@ >0@@ .@@ 1) { break; } } if(@@ log@@ <0@@ .@@ 1) { printf("no"); } } return0; }  
c -1
h -1
main() { int@@ year; int@@ month@@ ; int@@ day; int@@ result=0; inti; int@@ yue@@ [12]={31,28,31,30,31,30,31,31,30,31,30,31}; scanf("%d%d%d",&year,&month,&day); if((@@ year%@@ 100==0&&@@ year%@@ 400==0)@@ ||@@ year%100!=0@@ &&@@ year%@@ 4==0) yue@@ [1]=@@ 29; if(month==1) { result=result@@ +day; printf("%d",@@ result); } if(month@@ >1) { for(i=0;i<month-1;i++) { result=result+@@ yue@@ [i]; } result=result@@ +day; printf("%d\n",@@ result); } }  
c -1
h -1
0

structpatient { charid[20]; intage; }; intmain() { inti,j,@@ tem@@ ,@@ n,@@ len; charid[20]; structpatient@@ a[@@ 200]; scanf("%d",&n); for(i=0;i<n;i++) scanf("%s%d",@@ a[i].@@ id,&@@ a[i].@@ age); for(i=0;i<n;i++) { for(j=n-1@@ ;j>=i@@ ;j--) if(a@@ [j+1@@ ].age@@ >=60&&@@ a[j+1@@ ].age@@ >@@ a[j].@@ age@@ ) { tem@@ =@@ a[j].@@ age; a[j].@@ age@@ =@@ a[j+1@@ ].@@ age; a[j+1@@ ].age=@@ tem; len=strlen(@@ a[j].@@ id); strcpy(@@ id,@@ a[j].@@ id); id@@ [@@ len@@ ]='\0'; strcpy(@@ a[j].@@ id,@@ a[j+1@@ ].id); strcpy(@@ a[j+1@@ ].id,@@ id); } if(n@@ !=@@ 91@@ ||@@ i@@ !=0) printf("%s\n",@@ a[i].@@ id); } if(n==@@ 88@@ ) printf("@@ 51412@@ \n"); if(n==@@ 91@@ ) printf("@@ 02510406@@ \n"); return0; }  
c -1
h -1
structstu { intnum; int@@ yw@@ ; int@@ sx; int@@ zf@@ ; }@@ s1,@@ s2,@@ s3@@ ,@@ s; intmain() { intn,i; s1@@ .@@ zf@@ =@@ s2@@ .@@ zf@@ =@@ s3@@ .@@ zf@@ =-1; scanf("%d",&n); for(i=0;i<n;i++) { scanf("%d%d%d",&@@ s.@@ num,&@@ s.@@ yw@@ ,&@@ s.@@ sx@@ ); s.@@ zf@@ =@@ s.@@ yw@@ +@@ s.@@ sx; if(s@@ .@@ zf@@ >@@ s1@@ .@@ zf@@ ) { s3=@@ s2; s2=@@ s1@@ ; s1@@ =@@ s; } elseif(@@ s.@@ zf@@ >@@ s2@@ .@@ zf@@ ) { s3=@@ s2; s2=@@ s; } elseif(@@ s.@@ zf@@ >@@ s3@@ .@@ zf@@ ) { s3=@@ s; } } printf("%d%d\n",@@ s1@@ .num,@@ s1@@ .@@ zf@@ ); printf("%d%d\n",@@ s2@@ .num,@@ s2@@ .@@ zf@@ ); printf("%d%d",@@ s3@@ .num,@@ s3@@ .@@ zf@@ ); return0; }  
c -1
h -1
0

intmain() { inti,j,n,@@ k,@@ l,@@ z; inta[100],b[100],@@ f@@ [100]; char@@ d[@@ 30],@@ c@@ [100][@@ 30],@@ e@@ [100][@@ 30]; scanf("%d",&n); for(i=0,@@ z@@ =0;i<n;i++) { scanf("%s",@@ c[i]); scanf("%d",&a[i]); if(a[i]@@ >=60) {@@ b[@@ z@@ ]=@@ a[i];@@ f[@@ z@@ ]=@@ z@@ ;@@ strcpy(@@ e@@ [@@ z@@ ],@@ c[i]@@ );@@ a[i]@@ =0;z@@ ++;} } for(i=0;i<@@ z@@ ;i++) { for(j=i+1;j<@@ z@@ ;j++) { if(b[j]@@ >@@ b[i]) { strcpy(@@ d,@@ e@@ [i]@@ );strcpy(@@ e@@ [i],@@ e@@ [j]@@ );strcpy(@@ e@@ [j],@@ d); k=@@ b[i]@@ ;@@ b[i]=b[j]@@ ;@@ b[j]=@@ k; l=@@ f@@ [i];@@ f[i]=@@ f@@ [j];@@ f@@ [j]=@@ l; } if(b[i]==@@ b[j]) { if(f@@ [i]>@@ f@@ [j]) { strcpy(@@ d,@@ e@@ [i]@@ );strcpy(@@ e@@ [i],@@ e@@ [j]@@ );strcpy(@@ e@@ [j],@@ d); k=@@ b[i]@@ ;@@ b[i]=b[j]@@ ;@@ b[j]=@@ k; l=@@ f@@ [i];@@ f[i]=@@ f@@ [j];@@ f@@ [j]=@@ l; } } } } for(i=0;i<@@ z@@ ;i++) printf("%s\n",@@ e@@ [i]); for(i=0;i<n;i++) { if(a[i]!=0) printf("%s\n",@@ c[i]); } return0; }  
c -1
h -1
voidmain() { int@@ lanjie@@ (ints[@@ ],intn,@@ intm,@@ int@@ k); intk,i,@@ s[@@ 25],@@ n; scanf("%d",&k); for(i=0;i<k;i++) scanf("%d",&s[i]); n=@@ lanjie@@ (@@ s,@@ 10000@@ ,@@ 0,@@ k); printf("%d",n); } int@@ lanjie@@ (inta[@@ 25],@@ intn,@@ intm,@@ int@@ k) { int@@ c,@@ b,@@ z; if(m!=@@ k@@ -1) { if(n@@ >=@@ a[m@@ ]) { c=@@ lanjie@@ (a,@@ a[m@@ ],@@ m@@ +1,@@ k)@@ +1; b=@@ lanjie@@ (a,n,@@ m@@ +1,@@ k); if(c@@ >@@ b) z=@@ c; else z=@@ b; } else z=@@ lanjie@@ (a,n,@@ m@@ +1,@@ k); } else { if(n@@ >=@@ a[m@@ ]) z=1; else z=0; } return(@@ z); }  
c -1
h -1
0

intmain() { inti,j,@@ t,@@ a[@@ 16@@ ]={0},@@ sum=0,@@ k=0; while(@@ scanf("%d",&@@ a[0]@@ )&&@@ a[0]@@ !=@@ -1){ for(i=1;i<=@@ 16@@ ;i++){ scanf("%d",&a[i]); if(a[i]@@ !=0)@@ sum++; elsebreak; } for(i=0;i<=@@ sum@@ ;i++){ for(j=i+1;j<=@@ sum@@ ;j++){ if(a[i]==2*@@ a[j]||@@ a[j]==@@ a[i]@@ *2@@ )@@ k++; } } printf("%d\n",@@ k); sum=0; k=0; } return0; }  
c -1
h -1
intmain() { inta; scanf("%d",&a); if(a==@@ 9) printf("@@ 9@@ \n"); elseif(a@@ ==@@ 6) printf("@@ 2@@ \n"); return0; }  
c -1
h -1
0

int@@ varieties@@ =0; void@@ factor@@ (int,int); intmain() { intn=0,@@ num=0,@@ i=0; cin>>n; for(i=1;i<=n;i++) { varieties@@ =0; cin>>num; factor@@ (2,@@ num); cout<<@@ varieties@@ <<endl; } return0; } void@@ factor@@ (int@@ first@@ ,int@@ num) { inti=0; if(num@@ ==1) { varieties@@ ++; } else { for(i=@@ first@@ ;i<=@@ num;i++) { if(num@@ %i==0) { factor@@ (i,@@ num@@ /i); } } } }  
c -1
h -1
intmain() { intk,@@ m,n; cin>>k; int@@ u@@ ; for(@@ u@@ =1;@@ u@@ <=k;@@ u@@ ++){ inti,j; cin>>m>>n; int@@ input@@ [m@@ ][n]; int(*p)@@ [n@@ ]=@@ input@@ ; for(i=0;i<m;i++){ for(j=0;j<n@@ ;j++)@@ cin>>@@ *(*(p+i)+j); } intsum=0; for(i=0;i<m;i++){ sum+=@@ input@@ [i]@@ [0]+@@ input@@ [i]@@ [n-1]; } for(j=0;j<n;j++){ sum+=@@ input@@ [0]@@ [j]+@@ input@@ [m@@ -1][j]; } sum=sum-@@ input@@ [0][@@ 0]-@@ input@@ [0][@@ n-1]-@@ input@@ [@@ m-1][0]-@@ input@@ [@@ m-1][@@ n-1]; cout<<sum<<endl; } return0; }  
c -1
h -1
0

intmain() { intn; inta[20000]; inti,j; intt; int@@ l@@ =1; scanf("%d",&n); for(i=0;i<n;i++) { scanf("%d",&a[i]); } if(n==1) { printf("%d",a[0]); return0; } printf("%d",a[0]); t=@@ n; for(i=0;i<n;i++) { for(j=0;j<i;j++) { if(a[i]==a[j]) { t=t@@ -1; break; } } } for(i=0;i<n;i++) { for(j=0;j<i;j++) { if(a[i]==a[j]) { break; } elseif(@@ j==@@ i@@ -1@@ &&@@ l<@@ t) { printf("%d",a[i]); } } } return0; }  
c -1
h -1
intmain() { inti,j,n,@@ zl@@ [@@ 500@@ ][@@ 500],@@ sti@@ ,@@ stj@@ ,@@ dsti@@ ,@@ dstj@@ ; cin>>n; for(i=0;i<n;i++) { for(j=0;j<n;j++) { cin>>@@ zl@@ [i][j]; if(@@ zl@@ [i][j]==0) { sti@@ =i; stj@@ =j; } } } for(i=n-1;i>=0;i--) { for(j=n-1;j>=0;j--) { if(@@ zl@@ [i][j]==0) { dsti@@ =i; dstj@@ =j; } } } int@@ s=(@@ sti@@ -@@ dsti@@ -1)*(@@ stj@@ -@@ dstj@@ -1); cout<<s<<endl; return0; }  
c -1
h -1
0

intnum,@@ s=1; void@@ divide@@ (intn,int@@ a) { for(inti=@@ n@@ ;i<=@@ a/@@ s;i++) { s@@ *=@@ i; if(s@@ ==@@ a) num++; elseif(@@ s@@ <a@@ &&@@ a@@ %s@@ ==0) divide@@ (i,@@ a); s@@ /=@@ i; } } intmain() { intn,i,@@ a; cin>>n; for(i=0;i<n;i++) { num=0; cin>>a; divide@@ (2,@@ a); cout<<num<<endl; } return0; }  
c -1
h -1
intmain() { inta[@@ 20001@@ ]={0}; intn=0; cin>>n; for(inti=1;i<=n;i++) { cin>>a[i]; } intb[@@ 20001@@ ]={0}; intc[@@ 20001@@ ]={0}; int@@ l@@ =1; for(intj=1;j<=@@ n;j++) { for(intk=0;k<@@ j@@ ;k++) { if(a[j]==@@ a[k]) { b[j]@@ =1; } } } for(intp@@ =1@@ ;p@@ <=n;@@ p++) { if(@@ b[p@@ ]==0) { c[@@ l@@ ]=a[@@ p@@ ]; l=l@@ +1; } } for(intm@@ =1;@@ c[m@@ ]@@ >0@@ ;m++) { if(@@ c[m@@ +1@@ ]@@ >0) cout<<@@ c[m@@ ]@@ <<""; if(@@ c[m@@ +1@@ ]==0) cout<<@@ c[m@@ ]<<endl; } return0; }  
c -1
h -1
0

intmain() { int@@ n;@@ inta[@@ 100000@@ ],b[@@ 100000@@ ]={0}; inti,j; scanf("%d\n",&n); for(i=0;i<n;i++){ scanf("%d",&a[i]); } for(i=0;i<n;i++){ for(j=0;j<n;j++){ if(b[i]@@ ==0){ if(i!=@@ j){ if(a[i]==a[j]@@ ){ b[j]@@ =1;} } else continue; }}} printf("%d",a[0]); for(i=1;i<n;i++) { if(b[i]@@ ==0) { printf("@@ ");@@ printf("%d",@@ a[i]);} else continue; } return0; }  
c -1
h -1
inta[@@ 30000@@ ]; int@@ find@@ (int@@ k) { inti; for(i=0;i<k;i++) { if(a[i]==@@ a[k]) return1; } return0; } intmain() { intn; cin>>n; for(inti=0;i<n;i++) cin>>a[i]; cout<<a[0]; for(intk@@ =1@@ ;k<@@ n;k++) { if(@@ find@@ (@@ k)@@ ==0) cout<<""<<@@ a[k]; } return0; }  
c -1
h -1
1


struct@@ shu { intnum; chara[@@ 26]; struct@@ shu@@ *next; }; intmain() { char@@ ma@@ ='A'; struct@@ shu@@ *p1,*p2; struct@@ shu@@ *head,*p; int@@ cnt@@ [@@ 128@@ ]={0}; inti,j,n,@@ m; scanf("%d",&n); p1=p2=(struct@@ shu@@ *)malloc(@@ l); scanf("%d%s",&p1->num,p1->@@ a); m=strlen(@@ p1->@@ a); for(j=0;j<m;j++){ if(@@ ++@@ cnt@@ [@@ p1->@@ a[j]@@ ]>@@ cnt@@ [@@ ma@@ ]) ma@@ =p1->@@ a[j]; } head=NULL; for(i=1;i<n;i++){ if(i@@ ==1)head=p1; elsep2->next=p1; p2=p1; p1=(struct@@ shu@@ *)malloc(@@ l); scanf("%d%s",&p1->num,p1->@@ a); m=strlen(@@ p1->@@ a); for(j=0;j<m;j++){ if(@@ ++@@ cnt@@ [@@ p1->@@ a[j]@@ ]>@@ cnt@@ [@@ ma@@ ]) ma@@ =p1->@@ a[j]; } } p2->next=p1; p2=p1; p2->next=NULL; p=head; printf("%c\n%d\n",@@ ma@@ ,@@ cnt@@ [@@ ma@@ ]); while(p@@ !=NULL@@ ){ m=strlen(@@ p->@@ a); for(i=0;i<m;i++){ if(p->@@ a[i]==@@ ma@@ ){ printf("%d\n",p->num); break; } } p=p->next; } return0; }  
c -1
h -1
main() { intyear,month,day; scanf("%d%d%d",&year,&month,&day); if((year%4==0&&year%100!=0@@ )||@@ year%400==0) { switch(month) { case1:@@ day=@@ day;break; case2:@@ day=day+@@ 31;break; case3:@@ day=day+@@ 60@@ ;break; case4:@@ day=day+@@ 91@@ ;break; case5:@@ day=day+@@ 121@@ ;break; case6:@@ day=day+@@ 152@@ ;break; case7:@@ day=day+@@ 182@@ ;break; case8:@@ day=day+@@ 213@@ ;break; case9:@@ day=day+@@ 244@@ ;break; case10:@@ day=day+@@ 274@@ ;break; case11:@@ day=day+@@ 305@@ ;break; case12:@@ day=day+@@ 335@@ ;break; } } else { switch(month) { case1:@@ day=@@ day;break; case2:@@ day=day+@@ 31;break; case3:@@ day=day+@@ 59@@ ;break; case4:@@ day=day+@@ 90@@ ;break; case5:@@ day=day+@@ 120@@ ;break; case6:@@ day=day+@@ 151@@ ;break; case7:@@ day=day+@@ 181@@ ;break; case8:@@ day=day+@@ 212@@ ;break; case9:@@ day=day+@@ 243@@ ;break; case10:@@ day=day+@@ 273@@ ;break; case11:@@ day=day+@@ 304@@ ;break; case12:@@ day=day+@@ 334@@ ;break; } } printf("%d",@@ day); getchar(); getchar(); }  
c -1
h -1
0

intmain() { introw,col,@@ i,j,@@ n; inta[100][100]; scanf("%d%d",&row,&col); for(i=0;i<row;i++) { for(j=0;j<col;j++) { scanf("%d",&a[i][j]); } } for(n=0;n@@ <row@@ -1@@ +col@@ ;n++) { if(n@@ <col) { for(i=@@ n;@@ (@@ (n@@ -i@@ )@@ <=@@ (@@ row-1)@@ )&&(i@@ >=0@@ )@@ ;i--) printf("%d\n",@@ a[n@@ -i@@ ][i]); } if(n@@ >@@ col@@ -1) { for(i=@@ col@@ -1;@@ (@@ (n@@ -i@@ )@@ <=@@ (@@ row-1)@@ )&&(i@@ >=0@@ )@@ ;i--) printf("%d\n",@@ a[n@@ -i@@ ][i]); } } return0; }  
c -1
h -1
intmain(intargc,char*argv[]) { intyear,month,@@ date; int@@ a=0; scanf("%d%d%d",&year,&month,&@@ date@@ ); if(((@@ year%@@ 4==0)&&(@@ year%100!=0@@ ))@@ ||@@ year%@@ 400@@ ==0){ switch(month@@ ){ case1:@@ a=@@ date;break; case2:@@ a@@ =31+@@ date;break; case3:@@ a=31+29@@ +@@ date;break; case4:@@ a=31+29@@ +31+@@ date;break; case5:@@ a=31+29@@ +31+30@@ +@@ date;break; case6:@@ a=31+29@@ +31+30+31+@@ date;break; case7:@@ a=31+29@@ +31+30+31+30@@ +@@ date;break; case8:@@ a=31+29@@ +31+30+31+30+31+@@ date;break; case9:@@ a=31+29@@ +31+30+31+30+31+31+@@ date;break; case10:@@ a=31+29@@ +31+30+31+30+31+31+30@@ +@@ date;break; case11:@@ a=31+29@@ +31+30+31+30+31+31+30+31+@@ date;break; case12:@@ a=31+29@@ +31+30+31+30+31+31+30+31+30@@ +@@ date;break; } } else{ switch(month@@ ){ case1:@@ a=@@ date;break; case2:@@ a@@ =31+@@ date;break; case3:@@ a=31+28@@ +@@ date;break; case4:@@ a=31+28@@ +31+@@ date;break; case5:@@ a=31+28@@ +31+30@@ +@@ date;break; case6:@@ a=31+28@@ +31+30+31+@@ date;break; case7:@@ a=31+28@@ +31+30+31+30@@ +@@ date;break; case8:@@ a=31+28@@ +30@@ +31+30+31+@@ date;break; case9:@@ a=31+28@@ +31+30+31+30+31+31+@@ date;break; case10:@@ a=31+28@@ +31+30+31+30+31+31+30@@ +@@ date;break; case11:@@ a=31+28@@ +31+30+31+30+31+31+30+31+@@ date;break; case12:@@ a=31+28@@ +31+30+31+30+31+31+30+31+30@@ +@@ date;break; } } printf("%d\n",@@ a); return0; }  
c -1
h -1
0

intmain(){ intj,@@ i,@@ n,k,@@ s=0; scanf("%d%d\n",&n,&@@ k); intsz[@@ n]; for(i=0;i<=@@ n-1;i++){ scanf("%d",&sz[i]); for(j=0;j<=@@ i;j++){ if(sz[i]+sz@@ [j]==k){ s@@ ++;@@ }}} if(s@@ >0@@ ){printf("yes");} else{printf("no");} return0; }  
c -1
h -1
voidmain() {@@ int*@@ pi@@ ,@@ i=0,j=0,@@ k@@ =1,@@ sum=0,@@ n,m,@@ z,@@ t; scanf("%d",&k); for(t=0;t@@ <k;@@ t++) {@@ sum=0; scanf("%d%d",&m,&n); int*p=@@ (int*)malloc(@@ (n@@ *@@ m)@@ *sizeof(int)); pi@@ =p; for(z@@ =0;z@@ <m@@ *@@ n;@@ z@@ ++,@@ pi@@ ++) scanf("%d",@@ pi@@ ); pi@@ =p; for(j=0;j<m@@ *@@ n;@@ pi@@ ++) {@@ j++; if(j@@ <n@@ +1@@ ||j@@ >@@ (@@ (m@@ -1)*@@ n)@@ ||j@@ %n@@ ==1||@@ j@@ %n@@ ==0) sum=sum+*@@ pi@@ ; } printf("%d\n",sum); } }  
c -1
h -1
0

void@@ fuction1@@ (int@@ x,@@ inta[]) { inti,j,@@ m; for(i=0;i<x;i++) for(j=0;j<@@ x@@ -1-i;j++) { if(a[j]>a[j+1@@ ]){@@ m=@@ a[j];a[j]=a[j+1];@@ a[j+1]=@@ m@@ ;} } for(i=0;i<x;i++) cout<<a[i]<<""; } void@@ fuction2@@ (int@@ y,int@@ b[@@ ]) { inti,j,@@ m; for(i=0;i<y;i++) for(j=0;j<@@ y@@ -i-1;j++) { if(b[j]>b@@ [j+1]@@ ){@@ m=@@ b[j]@@ ;@@ b[j]=b@@ [j+1];@@ b[j+1]=@@ m@@ ;} } for(i=0;i<@@ y@@ -1;i++) cout<<b[i]<<""; cout<<b[@@ y@@ -1]; } intmain() { intk,@@ l,@@ p,q,@@ a[@@ 1000000@@ ],b[@@ 1000000@@ ]; cin>>@@ p@@ >>@@ q; for(k=0;k<@@ p@@ ;k++) cin>>@@ a[k]; for(k=0;k<@@ q@@ ;k++) cin>>@@ b[k@@ ]; fuction1@@ (p,@@ a); fuction2@@ (@@ q,@@ b); return0; }  
c -1
h -1
intmain() { inta[16],@@ len,@@ count,@@ i,j; while(1) { cin>>a[0]; if(a[0]==-1) { break; } len@@ =0; do { len@@ ++; cin>>@@ a[@@ len@@ ]; }while(@@ a[@@ len@@ ]@@ !=0); count=0; for(i=0;i<len;i++) { for(j=0;j<len;j++) { if(j==i) { continue; } else { if(a[j]==@@ (@@ 2*@@ a[i]@@ )) count++; } } } cout<<count<<endl; } return0; }  
c -1
h -1
0

voidmain() { intk,i,j,@@ h@@ [25@@ ]={0},@@ n[@@ 25@@ ]={@@ 1@@ },@@ num; scanf("%d",&k); for(i=0;i<k;i++) scanf("%d",&h[i]); for(i=k-2;i>=0;i--) {@@ for(j=i+1;j<k;j++) { if(h@@ [i]>=@@ h@@ [j]&&@@ n[i]@@ <n@@ [j]@@ +1) n[i]=@@ n@@ [j]+1; } } num=@@ n@@ [0]; for(i=0;i<k;i++) { if(num@@ <n@@ [i]) num=@@ n[i]; } printf("%d",@@ num@@ +1); }  
c -1
h -1
intmain() { int@@ height@@ [27]; int@@ result@@ [27]; intk; inti,j; int@@ nmax@@ ; cin>>k; for(i=1;i<=@@ k;i++){ cin>>@@ height@@ [i]; } height@@ [k+1@@ ]=0; result@@ [k+1@@ ]=0; for(i=k@@ ;i>0@@ ;i--){ nmax@@ =0; for(j=i+1;j<=@@ k@@ +1@@ ;j++){ if(@@ height@@ [i]>=@@ height@@ [j]){ if(result@@ [j]>@@ nmax@@ ){ nmax@@ =@@ result@@ [j]; } } } result@@ [i]=@@ nmax@@ +1; } nmax@@ =0; for(i=1;i<@@ k;i++){ if(result@@ [i]>@@ nmax@@ ){ nmax@@ =@@ result@@ [i]; } } cout<<@@ nmax@@ <<endl; return0; }  
c -1
h -1
1


intmain(){ doublen; scanf("%lf",&n); char@@ DNA@@ [2][@@ 500]; inti; int@@ len@@ [2]; for(i=0;i<2@@ ;i++){ scanf("%s",@@ DNA@@ [i]); len@@ [i]@@ =strlen(@@ DNA@@ [i]); } intj; int@@ p=0; for(j=0;j<len@@ [0]@@ ;j++){ if(@@ DNA@@ [0]@@ [j]==@@ DNA@@ [1]@@ [j]){ p++; } } intm=0; for(i=0;i<2@@ ;i++){ for(j=0;j<len@@ [i]@@ ;j++){ if(@@ DNA@@ [i][j]!='@@ A'&&@@ DNA@@ [i][j]!='@@ T'&&@@ DNA@@ [i][j]!='@@ C'&&@@ DNA@@ [i][j]!='@@ G'){ m++; } } } double@@ bi@@ ; bi@@ =(@@ (double)@@ p@@ )@@ /@@ ((@@ double)@@ len@@ [0]); if(@@ len@@ [0]@@ !=@@ len@@ [1]@@ ||@@ m@@ !=0){ printf("error"); }elseif(@@ bi@@ >n){ printf("yes"); }else{ printf("no"); } return0; }  
c -1
h -1
main() { intn,m,@@ i,j,k,@@ t; scanf("%d",&n); int*p=@@ (int*)malloc(n*sizeof(int)); int*@@ q=@@ (int*)malloc(n*sizeof(int)); int*@@ a=@@ (int*)malloc(n*sizeof(int)); for(i=0;i<n;i++) { scanf("%d",&@@ p[i]); } for(i=0;i<n;i++) { q@@ [i]=1; } for(i=1;i<n;i++) { t=0; for(j=0;j<n;j++) {@@ a[j]@@ =0;} for(j=0;j<i;j++) { if(p@@ [j]>=@@ p@@ [i]) { a[j]=@@ q@@ [j]; } for(k=0;k<i;k++) { if(a[k]@@ >@@ t) { t=@@ a[k]; } } } q@@ [i]=@@ q@@ [i]+@@ t; } t=0; for(i=0;i<n;i++) { if(q@@ [i]>@@ t) { t=@@ q@@ [i]; } } printf("%d",t); return0; }  
c -1
h -1
0

intmain(){ int@@ ss@@ [1000]; int@@ zz@@ [1000]; intn,k,@@ num,@@ i; scanf("%d%d",&n,&k); for(i=0;i<n;i++) { scanf("%d",&num); ss@@ [i]=@@ num;@@ zz@@ [i]=@@ num; } intsz[@@ 1000][1000]; int@@ h,@@ l; for(h=0;h@@ <n;@@ h@@ ++){ for(l=0;l<n;@@ l++){ sz[@@ h@@ ][l@@ ]=@@ ss@@ [h@@ ]+@@ zz@@ [l]; if(sz[@@ h@@ ][l@@ ]==@@ k@@ &&@@ h@@ !=@@ l) {@@ printf("yes");@@ break;} elseif(@@ h@@ ==@@ n-1@@ &&@@ l@@ ==@@ n-1) {@@ printf("no@@ ");@@ break;} } if(sz[@@ h@@ ][l@@ ]==@@ k@@ &&@@ h@@ !=@@ l) {break;} elseif(@@ h@@ ==@@ n-1@@ &&@@ l@@ ==@@ n-1) {break;} } return0; }  
c -1
h -1
intmain() { intn,@@ a,b,c,d,@@ e,@@ x=0; intm[@@ 1000][1000]; scanf("%d",&n); for(a@@ =1;@@ a@@ <=n;@@ a++) { for(b@@ =1;@@ b@@ <=n;@@ b++) { scanf("%d",&@@ m@@ [a@@ ][b@@ ]); } } for(c@@ =1;@@ c@@ <=n;@@ c++) { for(d@@ =1;@@ d@@ <=n;@@ d++) { if(m@@ [c@@ ][@@ d@@ ]==0) { for(@@ e=@@ d@@ +1;@@ e@@ <=n;@@ e++) { if(m@@ [c@@ ][@@ e@@ ]!=0) { x++; } else break; } break; } } } printf("%d",x); return0; }  
c -1
h -1
0

intmain(){ intn,@@ x,@@ i,k,@@ q,@@ y=0; inta[1000]; scanf("%d%d",&n,&k); for(i=0,@@ q@@ =0;i<@@ n,@@ q@@ <n@@ ;i++,@@ q@@ ++){ scanf("%d",&x); a[i]=@@ x; } for(i=0;i<n-1;i++){ for(q@@ =i+1@@ ;q@@ <n;@@ q@@ ++){ if(a[i]+@@ a[q@@ ]==k){ y=1; break; } } if(y@@ ==1){ break; } } if(y@@ ==1){ printf("yes"); }else{ printf("no"); } return0; }  
c -1
h -1
intmain(){ double@@ y,@@ a; char@@ q@@ [501],@@ h@@ [501]; int@@ n1,n2,@@ i,@@ c=0,@@ tag@@ =0; scanf("%lf",&@@ y); scanf("%s",@@ q); scanf("%s",@@ h); n1@@ =strlen(@@ q); n2@@ =strlen(@@ h); if(@@ n1@@ !=@@ n2@@ ){ printf("error"); } else{ for(i=0;i<n1@@ ;i++){ if((@@ q@@ [i]!='A')&&(@@ q@@ [i]!='T')&&(@@ q@@ [i]!='C')&&(@@ q@@ [i]!='G')){ printf("error"); tag@@ =1; break; } } if(tag@@ ==0){ for(i=0;i<n2@@ ;i++){ if((@@ h@@ [i]!='A')&&(@@ h@@ [i]!='T')&&(@@ h@@ [i]!='C')&&(@@ h@@ [i]!='G')){ printf("error"); tag@@ =1; break; } } } for(i=0;i<n1@@ ;i++){ if(q@@ [i]==@@ h@@ [i]){ c++; } } a@@ =1.0*@@ c@@ /@@ n1@@ ; if(tag@@ ==0){ if(a@@ >@@ y){ printf("yes"); }else{ printf("no"); } } } return0; }  
c -1
h -1
0

intmain() { intn,k,i,j,@@ s=0; inta[1000]; scanf("%d%d",&n,&k); for(i=0;i<n;i++) { scanf("%d",&a[i]); if(i@@ !=0) { for(j=0;j<i;j++) { if(k==@@ (@@ a[j]@@ +@@ a[i]@@ )) { s=1; } } } } if(s@@ ==1) printf("yes"); if(s@@ !=1) printf("no"); return0; }  
c -1
h -1
intmain() { chara[256],b[256],c[256]; cin>>a>>@@ b@@ >>@@ c; int@@ L@@ ,@@ l,@@ x,y; L@@ =strlen(a); l@@ =strlen(b); for(x=0;x@@ <=@@ L@@ -l@@ ;x@@ ++) { if(a[x@@ ]!=@@ b[0]) continue; else { for(y=0;y@@ <@@ l@@ ;y@@ ++) if(a[@@ x+@@ y@@ ]!=@@ b[@@ y@@ ]) break; if(y@@ !=@@ l) continue; else break; } } if(x==@@ L@@ -l@@ +1) cout<<@@ a@@ <<endl; else { inti=0; while(i@@ !=@@ x) { cout<<a[i]; i++; } cout<<@@ c; cout<<@@ a@@ +i@@ +l@@ <<endl; } return0; }  
c -1
h -1
0

intmain() { intn,@@ amount@@ [26],@@ num[@@ 26@@ ][@@ 1000],@@ num0@@ ,@@ max=0; char@@ a; memset(@@ amount@@ ,0,sizeof(@@ amount@@ )); cin>>n; for(inti=0;i<n;i++) { cin>>@@ num0@@ ; cin.get(); a=@@ cin.get(); while(@@ a@@ !=@@ '\n@@ ') { num[@@ a@@ -65@@ ][@@ amount@@ [a@@ -65@@ ]@@ ]=@@ num0@@ ; amount@@ [a@@ -65]++; a=@@ cin.get(); } } for(inti=0;i<@@ 26;i++) if(max<@@ amount@@ [i]) max=@@ amount@@ [i]; for(inti=0;i<@@ 26;i++) if(max@@ ==@@ amount@@ [i]) { a@@ =i+65; cout<<@@ a@@ <<endl@@ <<@@ max<<endl; for(intj=0;j<@@ max@@ ;j++) cout<<num@@ [i][j]<<endl; break; } return0; }  
c -1
h -1
intmain(){ inty,m,@@ d; scanf("%d%d%d",&y,&m,&d); int@@ month@@ [12@@ ]={0,31,@@ 28@@ ,31,30,31,30,31@@ ,31,30,31,30@@ }; inti,@@ ans; if(y%@@ 400==0||(@@ y%@@ 100@@ &&@@ y%@@ 4@@ ==0)@@ )@@ month@@ [2]=@@ 29; ans=0; for(i=1;i<@@ m@@ ;i++)@@ ans@@ +=@@ month@@ [i]; ans@@ +=@@ d; printf("%d\n",@@ ans); return0; }  
c -1
h -1
0

voidmain() { intn,i,j; inta[@@ 200],@@ t; charb[@@ 200][@@ 11@@ ],@@ b1@@ [11]; scanf("%d",&n); for(i=0;i<n;i++) scanf("%s%d",&@@ b[i]@@ ,&@@ a[i]); for(i=0;i<n;i++) for(j=0;j<n-i;j++) if(a@@ [j+1]@@ >=60&&@@ a[j]@@ <@@ a[j+1@@ ]) { t=a[j]; a[j]=a[j+1]; a[j+1]=t; strcpy(@@ b1,@@ b[j]); strcpy(@@ b[j]@@ ,@@ b@@ [j+1]); strcpy(@@ b@@ [j+1],@@ b1@@ ); } for(i=0;i<n;i++) printf("%s\n",@@ b[i]); }  
c -1
h -1
intmain() { inty,m,d,@@ i,@@ sum; inta[@@ 12]={31,@@ 0@@ ,31,30,31,30,31,31,30,31,30,31}; scanf("%d%d%d",&y,&m,&d); if((y%@@ 4==0&&y%100!=0@@ )||@@ y%400==0) a[1]=29; else a[1]=@@ 28; sum=0; for(i=0;i<m;i++) sum=sum+@@ a[i]; sum=sum-@@ a[i-1]@@ +d; printf("%d",sum); getchar(); getchar(); return0; }  
c -1
h -1
0

main() { int@@ amount_temp@@ =0,@@ amount_most@@ =0; char@@ most@@ ,@@ temp; inti,j,k,@@ s,@@ p; intm; char@@ jiancha@@ [27]; struct@@ xinxi { int@@ bianhao@@ ; char@@ zuozhe@@ [27]; }; struct@@ xinxi@@ shuru@@ [999]; scanf("%d",&m); for(p=0;p@@ <m@@ ;p++) { scanf("%d%s",&@@ shuru@@ [p@@ ].@@ bianhao@@ ,@@ shuru@@ [p@@ ].@@ zuozhe@@ ); } for(@@ temp@@ ='A'@@ ;@@ temp@@ <=@@ 'Z'@@ ;@@ temp@@ ++) { for(i=0;i<m;i++) { strcpy(@@ jiancha@@ ,@@ shuru@@ [i].@@ zuozhe@@ ); for(j=0;j<strlen(@@ jiancha@@ );j++) { if(@@ jiancha@@ [j]==@@ temp@@ ) { amount_temp@@ ++; } } } if(@@ amount_temp@@ >@@ amount_most@@ ) { amount_most@@ =@@ amount_temp@@ ; most@@ =temp; amount_temp@@ =0; } else { amount_temp@@ =0; } } printf("%c\n%d\n",@@ most@@ ,@@ amount_most@@ ); for(i=0;i<m;i++) { strcpy(@@ jiancha@@ ,@@ shuru@@ [i].@@ zuozhe@@ ); for(j=0;j<strlen(@@ jiancha@@ );j++) { if(@@ jiancha@@ [j]==@@ most@@ ) { printf("%d\n",@@ shuru@@ [i].@@ bianhao@@ ); break; } } } }  
c -1
h -1
int@@ aa@@ (int@@ high@@ [@@ ],intn,@@ intk,@@ int@@ lh@@ ,int@@ point@@ ) { int@@ remax@@ =0,@@ a=0,@@ i; if(@@ point@@ ==@@ k@@ -1) { if(@@ lh@@ >=@@ high@@ [k-1]@@ )@@ return1; else@@ return0; } else { for(i=@@ point@@ ;i<@@ k;i++) if(@@ high@@ [i]<=@@ lh@@ ) { a=@@ aa@@ (@@ high@@ ,@@ n@@ +1,@@ k,@@ high@@ [i],@@ i@@ +1)@@ +1; if(a@@ >@@ remax@@ )@@ remax@@ =@@ a; } return@@ remax@@ ; } } voidmain() { inti,@@ high@@ [25],@@ k; scanf("%d",&k); for(i=0;i<@@ k;i++)@@ scanf("%d",&@@ high@@ [i]); printf("%d",@@ aa@@ (@@ high@@ ,@@ 0,@@ k,@@ 32767@@ ,@@ 0@@ )); }  
c -1
h -1
0

intmain() { double@@ m,n; intlen1,len2,@@ count=0,@@ i; chars1@@ [100],@@ s2@@ [100]; scanf("%lf",&@@ m); scanf("%s",@@ s1); scanf("%s",@@ s2); len1=strlen(@@ s1); len2=strlen(@@ s2); if(len1@@ ==@@ len2) { for(i=0;i<len1;i++) { if(s1@@ [i]!='A'&&@@ s1@@ [i]!='T'&&@@ s1@@ [i]!='C'&&@@ s1@@ [i]!='G@@ '||@@ s2@@ [i]!='A'&&@@ s2@@ [i]!='T'&&@@ s2@@ [i]!='C'&&@@ s2@@ [i]!='G') { count=@@ len1@@ +1; break; } if(s1[i]==s2@@ [i]) count++; } n@@ =1.0*@@ count@@ /@@ len1; if(count@@ >=@@ len1@@ +1) printf("error\n"); if(n@@ >@@ m@@ &&n@@ <=@@ 1) printf("yes\n"); elseif(n@@ <=@@ m) printf("no\n"); } else printf("error\n"); return0; }  
c -1
h -1
intmain() { structstudent@@ {int@@ id,@@ chin@@ ,@@ math@@ ,@@ z@@ ;@@ }@@ p[@@ 100000]; int@@ id,@@ math@@ ,@@ chin@@ ,@@ z,@@ i,n,@@ f,@@ s,@@ t,@@ id1@@ ,@@ id2@@ ,@@ id3@@ ; scanf("%d",&n); for(i=0;i<n;i++) { scanf("%d%d%d",&@@ id,&@@ chin@@ ,&@@ math); p[i].@@ id@@ =@@ id; p[i].@@ math@@ =@@ math; p[i].@@ chin@@ =@@ chin@@ ; } for(i=0;i<n;i++) { id@@ =@@ p[i].@@ id; math@@ =@@ p[i].@@ math; chin@@ =@@ p[i].@@ chin@@ ; z=@@ math+@@ chin@@ ; if(i==0) { f=@@ s=@@ t=@@ z; id1@@ =@@ id2@@ =@@ id3@@ =@@ id; } elseif(@@ i@@ ==1) { if(z@@ >@@ f@@ ) { t=@@ s@@ ;@@ id3@@ =@@ id2@@ ;@@ s=@@ f@@ ;@@ id2@@ =@@ id1@@ ;@@ f=@@ z@@ ;@@ id1@@ =@@ id; } else { t=@@ s=@@ z@@ ;@@ id2@@ =@@ id3@@ =@@ id; } } else { if(z@@ >@@ f@@ ) { t=@@ s@@ ;@@ id3@@ =@@ id2@@ ;@@ s=@@ f@@ ;@@ id2@@ =@@ id1@@ ;@@ f=@@ z@@ ;@@ id1@@ =@@ id; } elseif(@@ z@@ >@@ s) { t=@@ s@@ ;@@ id3@@ =@@ id2@@ ;@@ s=@@ z@@ ;@@ id2@@ =@@ id; } elseif(@@ z@@ >@@ t) { t=@@ z@@ ;@@ id3@@ =@@ id; } } } printf("%d%d\n",@@ id1@@ ,@@ f); printf("%d%d\n",@@ id2@@ ,@@ s); printf("%d%d\n",@@ id3@@ ,@@ t); return0; }  
c -1
h -1
0

intmain(){ char@@ DNA1@@ [501],@@ DNA2@@ [501]; double@@ rate@@ ; scanf("%lf",&@@ rate@@ ); scanf("%s%s",@@ DNA1@@ ,@@ DNA2@@ ); inti,@@ len1,len2,@@ flag=0; len1=strlen(@@ DNA1@@ ); len2=strlen(@@ DNA2@@ ); if(len1!=@@ len2){ flag=1; } for(i=0;i<len1;i++){ if(@@ DNA1@@ [i]=='A'||@@ DNA1@@ [i]=='T'||@@ DNA1@@ [i]=='C'||@@ DNA1@@ [i]=='@@ G'){ continue; } else{@@ flag@@ =1;} } for(i=0;i<@@ len2@@ ;i++){ if(@@ DNA2@@ [i]=='A'||@@ DNA2@@ [i]=='T'||@@ DNA2@@ [i]=='C'||@@ DNA2@@ [i]=='@@ G'){ continue; } else{@@ flag@@ =1;} } if(flag@@ ==1){ printf("error\n"); } else{ int@@ c=0; double@@ result; for(i=0;@@ DNA1@@ [i]@@ ;i++){ if(@@ DNA1@@ [i]==@@ DNA2@@ [i]){ c++; } } result@@ =1.0*@@ c@@ /@@ len1; if(result@@ >@@ rate@@ ){ printf("yes"); } else{ printf("no"); } } return0; }  
c -1
h -1
inta[@@ 20@@ ],b[@@ 20@@ ],c[@@ 40@@ ],@@ m,n,@@ i,j,@@ temp; voidmain() { void@@ putin@@ (inta[@@ 20@@ ],intb[@@ 20@@ ]); void@@ exchange@@ (inta[@@ 20@@ ],intb[@@ 20@@ ]); void@@ together@@ (inta[@@ 20@@ ],intb[@@ 20@@ ]); void@@ putout@@ (intc[@@ 40@@ ]); putin@@ (a,b); exchange@@ (a,b); together@@ (a,b); putout@@ (@@ c); } void@@ putin@@ (inta[@@ 20@@ ],intb[@@ 20@@ ]) { scanf("%d%d",&m,&n); for(i=0;i<m;i++)@@ scanf("%d",&a[i]); for(i=0;i<n;i++)@@ scanf("%d",&b[i]); } void@@ exchange@@ (inta[@@ 20@@ ],intb[@@ 20@@ ]) { for(i=0;i<m-1;i++) { for(j=0;j<@@ m-1@@ -i;j++) { if(a[j]>a[j+1]) { temp=a[j]; a[j]=a[j+1]; a[j+1]=temp; } } } for(i=0;i<n-1;i++) { for(j=0;j<n-1-i;j++) { if(b[j]>b[j+1]) { temp=@@ b[j]; b[j]=b[j+1]; b[j+1]=@@ temp; } } } } void@@ together@@ (inta[@@ 20@@ ],intb[@@ 20@@ ]) { for(i=0;i<m;i++)@@ c[i]=a[i]; for(i=0;i<n;i++)@@ c[m@@ +i]=b[i]; } void@@ putout@@ (intc[@@ 40@@ ]) { for(i=0;i<m+@@ n;i++) { printf("%d",c[i]); if(i!=@@ m+@@ n-1)@@ printf(""); } }  
c -1
h -1
0

voidinput@@ (inta[@@ ][100@@ ],int@@ m,intn) { for(inti=0;i<m;i++) for(intj=0;j<n;j++) cin>>@@ *(*(a@@ +j)@@ +i); } intmain() { int@@ square@@ [100][100]; intk,@@ m,n; cin>>k; for(inti=1;i<=@@ k;i++) { cin>>m>>n; input@@ (@@ square@@ ,@@ m,n); intsum=0; for(intj=0;j<m;j++) sum=sum+@@ *(@@ *@@ square@@ +j)+@@ *(*(@@ square@@ +@@ n-1)@@ +j); for(intj=1;j<@@ n-1;j++) sum=sum+@@ *@@ *(@@ square@@ +j)+@@ *(*(@@ square@@ +j)+@@ m-1@@ ); if(m==1) sum=sum@@ /2; cout<<sum<<endl; } return0; }  
c -1
h -1
structstu { inta; intb; intc; int@@ d; structstu*next; }; intn; structstu*@@ creat@@ (void) { structstu@@ *head,*p1,*p2; inti=1; head=NULL; p2@@ =p1@@ =(struct@@ stu@@ *)malloc(LEN); scanf("%d%d%d",&p1->@@ a@@ ,&p1->@@ b@@ ,&p1->@@ c); p1->@@ d=@@ p1->@@ b+@@ p1->@@ c; while(1) { if(i==1) head=p1; else p2->next=p1; p2=p1; if(i>=@@ n@@ )break; p1=(struct@@ stu@@ *)malloc(LEN); scanf("%d%d%d",&p1->@@ a@@ ,&p1->@@ b@@ ,&p1->@@ c); p1->@@ d=@@ p1->@@ b+@@ p1->@@ c; i++; } p2->next=NULL; return(head); } voidmain() { structstu*@@ z@@ ,*@@ p3@@ ,*@@ p[@@ 100007@@ ],*@@ q; inti=0,@@ j,@@ m; scanf("%d",&n); z=@@ creat@@ (); p3@@ =p@@ [i]=@@ z; while(@@ p3@@ !=NULL) { i++; p[i]=@@ p3@@ ->next; p3@@ =p@@ [i]; } m=i; q=@@ p@@ [0]; for(i=0;i<@@ 4;i++) { for(j=0;j<@@ m-1@@ -i;j++) { if(p@@ [j]@@ ->@@ d@@ >=@@ p@@ [j+1]@@ ->@@ d) { q=@@ p@@ [j]; p@@ [j]=@@ p@@ [j+1]; p@@ [j+1]=@@ q; } } } for(i=1;i<@@ 4;i++) { printf("%d%d\n",@@ p@@ [m@@ -i@@ ]@@ ->@@ a,@@ p@@ [m@@ -i@@ ]@@ ->@@ d); } }  
c -1
h -1
0

inta,b,@@ i,j,@@ t,@@ c[@@ 20],@@ d[@@ 20],@@ e@@ [@@ 40@@ ]; void@@ in@@ () { scanf("%d%d",&a,&b); for(i=0;i<a;i++) scanf("%d",&@@ c[i]); for(i=0;i<b;i++) scanf("%d",&@@ d[i]); } voidorder@@ () { for(i=0;i<@@ a@@ -1;i++) for(j=0;j<a@@ -1-i;j++) if(c@@ [j]>@@ c@@ [j+1]@@ ){@@ t=@@ c[j]@@ ;c@@ [j]=@@ c@@ [j+1];@@ c@@ [j+1]=@@ t;} for(i=0;i<b@@ -1;i++) for(j=0;j<@@ b@@ -1-i;j++) if(d@@ [j]>@@ d@@ [j+1]@@ ){@@ t=@@ d@@ [j];@@ d@@ [j]=@@ d@@ [j+1];@@ d@@ [j+1]=@@ t;} } voidcombine@@ () { for(i=0;i<a;i++) e@@ [i]=@@ c[i]; for(i=0;i<b;i++) e@@ [a@@ +i]=@@ d[i]; } voidout@@ () { for(i=0;i<@@ a+@@ b@@ -1;i++) printf("%d",@@ e@@ [i]); printf("%d",@@ e@@ [a@@ +@@ b@@ -1]); } voidmain() { in@@ (); order@@ (); combine@@ (); out@@ (); }  
c -1
h -1
voidmain() { intn,@@ m@@ [100][100],@@ i,j,@@ a=0,b=0,@@ c=0,@@ d=0,@@ x,y,@@ s; scanf("%d",&n); for(i=0;i<n;i++) for(j=0;j<n;j++) scanf("%d",&@@ m@@ [i][j]); for(i=0;i<n;i++) for(j=0;j<n;j++) { if(j@@ ==0&&@@ m@@ [i][j]==0) a@@ =j; elseif(@@ j@@ !=0&&@@ m@@ [i][j]==0&&@@ m[i]@@ [j-1@@ ]==255@@ &&m@@ [i]@@ [j+1@@ ]==0) a@@ =j; if(j==@@ n-1@@ &&m@@ [i][j]==0) b=j; elseif(@@ j@@ !=@@ n-1@@ &&m@@ [i][j]==0&&@@ m[i]@@ [j+1@@ ]==255@@ &&m@@ [i]@@ [j-1]@@ ==0) b=j; if(i@@ ==0&&@@ m@@ [i][j]==0) c=i; elseif(@@ i@@ !=0&&@@ m@@ [i][j]==0&&@@ m@@ [i-1]@@ [j]==@@ 255@@ &&m@@ [i+1][j]@@ ==0) c=i; if(i==@@ n-1@@ &&m@@ [i][j]==0) d@@ =i; elseif(@@ i@@ !=@@ n-1@@ &&m@@ [i][j]==0&&@@ m@@ [i+1]@@ [j]==@@ 255@@ &&m@@ [i-1][j]@@ ==0) d@@ =i; } x=@@ b-@@ a@@ -1; y=@@ d@@ -c@@ -1; s=@@ x@@ *@@ y; printf("%d",s); }  
c -1
h -1
0

intmain() { int*@@ array@@ ,@@ n,k,@@ i,j; scanf("%d%d",&n,&k); array@@ =@@ (int*)malloc(sizeof(int)*n); for(i=0;i<n;i++) scanf("%d",@@ array@@ +i); for(i=0;i<n-1;i++) for(j=i@@ +i@@ ;j<n;j++) if(array@@ [i]+@@ array@@ [j]==k) { printf("yes"); free(@@ array@@ ); return0; } free(@@ array@@ ); printf("no"); return0; }  
c -1
h -1
intk; int@@ height@@ [26]; int@@ len@@ (int@@ num@@ ){ int@@ temp,@@ max,@@ i; if(num@@ ==k){ return(1); }else{ max=0; for(i=@@ num@@ +1;i<=@@ k;i++){ if(@@ height@@ [@@ num@@ ]>=@@ height@@ [i]){ temp=@@ len@@ (i); if(max<@@ temp@@ ){ max=@@ temp; } } } } return(@@ max@@ +1); } main(){ height@@ [0]=@@ 30001@@ ; scanf("%d",&k); inti; for(i=1;i<=@@ k;i++){ scanf("%d",&@@ height@@ [i]); } printf("%d",@@ len@@ (@@ 0)@@ -1); scanf("%d",&k); }  
c -1
h -1
0

intmain(intargc,char*argv[]) { inta,b,@@ c[@@ 1001@@ ],i,j,@@ m=1; scanf("%d%d",&a,&b); for(i=0;i<a;i++){ scanf("%d",&@@ c[i]); } for(i=0;i<a;i++){ if(m@@ ==0)break; for(j=0;j<a@@ &&j@@ !=@@ i;j++){ if(c@@ [i]+@@ c@@ [j]==@@ b@@ ){@@ printf("yes"); m=0; break; } }} if(m@@ ==1)@@ printf("no"); return0; }  
c -1
h -1
void@@ bubble@@ (inta[],int@@ l) { inti,j,temp; for(i=1;i<@@ l@@ ;i++) { for(j=0;j<l@@ -i;j++) { if(a[j]>a[j+1]) { temp=a[j]; a[j]=a[j+1]; a[j+1]=temp; } } } } voidmain() { inti,@@ l1,l2,@@ a[100],b[100]; scanf("%d%d",&@@ l1@@ ,&@@ l2@@ ); for(i=0;i<l1;i++) { scanf("%d",&a[i]); } bubble@@ (@@ &@@ a,@@ l1@@ ); for(i=0;i<@@ l2@@ ;i++) { scanf("%d",&b[i]); } bubble@@ (@@ &@@ b,@@ l2@@ ); for(i=0;i<l1;i++) printf("%d",a[i]); printf("%d",@@ b[0]@@ ); for(i=1;i<@@ l2@@ ;i++) printf("%d",b[i]); }  
c -1
h -1
0

intmain() { int@@ row@@ =0,@@ col@@ =0,@@ i=0,j=0,@@ k=0,@@ temp=0; cin>>row>>col; int@@ array[100][100]; for(i=0;i<row;i++) for(j=0;j<col;j++) cin>>array[i][j]; for(k=0;k<=@@ col-1@@ ;k++) for(i=0;i<@@ row@@ &&k@@ -i@@ <col@@ &&k@@ -i@@ >=0@@ ;i++){ temp=@@ array@@ [i]@@ [k-i@@ ]; cout<<array@@ [i]@@ [k-i@@ ]<<endl; } for(k=@@ col@@ ;k<=@@ (@@ col@@ -1)@@ +(@@ row-1)@@ ;k++) for(i=k@@ -col@@ +1;i<@@ row@@ &&k@@ -i@@ >=0@@ ;i++){ temp=@@ array@@ [i]@@ [k-i@@ ]; cout<<array@@ [i]@@ [k-i@@ ]<<endl; } return0; }  
c -1
h -1
intmain() { intn,i,j; scanf("%d",&n); struct@@ point { charid[10]; intage; } points@@ [100],@@ news@@ [100],@@ tmp; for(i=0;i<n;i++) { scanf("%s%d",&@@ points@@ [i].id,&@@ points@@ [i].age); } for(i=n-1;i>=0;i--) { for(j=0;j<i;j++) { if(@@ points@@ [j+1@@ ].age@@ >=60&&@@ points@@ [j+1@@ ].age@@ >@@ points@@ [j].age@@ ) { tmp=@@ points@@ [j+1]; points@@ [j+1]=@@ points@@ [j]; points@@ [j]=@@ tmp; } } } for(i=0;i<n;i++) { printf("%s\n",@@ points@@ [i].id); } return0; }  
c -1
h -1
0

intmain() { inta[100][100]; inti,j,k,@@ m,n,@@ num,@@ sum=0; int*p=@@ NULL@@ ; cin>>num; for(k=1;k<=@@ num@@ ;k++) { cin>>m>>n; for(i=0;i<m;i++) for(j=0;j<n;j++) { cin>>*(*(a+i)+j); } if(m@@ ==1||@@ n@@ ==1){ for(i=0;i<m;i++) for(j=0;j<n;j++) { sum=sum+*(@@ *(a+i)@@ +j); } } else { for(i=0;i<n-1;i++) { sum=sum+*(@@ *a@@ +i); } for(i=0;i<m-1;i++) { sum=sum+*(@@ *(a+i)@@ +n-1); } for(i=1;i<n;i++) { sum=sum+*(@@ *(a@@ +m-1)@@ +i); } for(i=1;i<m;i++) { sum=sum+*@@ *(a@@ +i); } } cout<<sum<<endl; sum=0; } return0; }  
c -1
h -1
voidmain() { int@@ cnt@@ (int@@ *,@@ int@@ ); intb[@@ 50@@ ],@@ a[@@ 16@@ ],i,j,@@ h; for(i=0;i<@@ 50@@ ;i++) { scanf("%d",&@@ h); if(h@@ ==-1)break; for(@@ a[0]=@@ h@@ ,j@@ =1@@ ;j<@@ 16@@ ;j++) { scanf("%d",&a[j]); if(a[j]@@ ==0)break; } b[i]=@@ cnt@@ (a,@@ j); } for(j=0;j<i;j++) printf("%d\n",@@ b[j]); } int@@ cnt@@ (int*@@ m,intn) { intk,@@ l,@@ p=0; for(k=0;k<n;k++) for(l=0;l<n;l++) if(@@ 2@@ **@@ (@@ m+@@ k@@ )==@@ *(@@ m+@@ l@@ ))@@ p++; return(@@ p); }  
c -1
h -1
0

intmain() { inta[1000]; int@@ i,j@@ =1,@@ p,q; intn,k,@@ m; cin>>n>>k; for(i=1;i<=n;i++) { cin>>m; a[i]=@@ m; } while(j@@ <n) { p=@@ j@@ +1; while(p@@ <=@@ n) { q=@@ a[j]@@ +@@ a[p@@ ]; if(q@@ ==@@ k@@ )break; else@@ p=p@@ +1; } if(p@@ <=@@ n@@ )break; else@@ j=j+1; } if(j==@@ n@@ &&p@@ ==@@ n@@ +1) cout<<"no"; else@@ cout<<"yes"; return0; }  
c -1
h -1
intmain(){ intn,@@ age@@ [100],@@ oage@@ [100]; charID@@ [100][10],@@ old@@ [100][10],@@ young@@ [100][10]; scanf("%d",&n); inti,@@ m; for(i=0;i<n;i++){ scanf("%s%d",@@ ID@@ [i],&@@ age[i]); } intk=0,@@ j=0; for(i=0;i<n;i++){ if(age[i]@@ <60){ strcpy(@@ young@@ [k],@@ ID@@ [i]); k++; } else{ oage@@ [j]=@@ age[i]; strcpy(old@@ [j],@@ ID@@ [i]); j++; } } for(i=@@ 150@@ ;i@@ >=60@@ ;i--){ for(m=0;m<@@ j@@ ;m++){ if(@@ oage@@ [m@@ ]==@@ i){ printf("%s\n",old@@ [m]); } } } for(i=0;i<k;i++){ printf("%s\n",@@ young@@ [i]); } return0; }  
c -1
h -1
0

voidmain() { intn,i,j,@@ a[100@@ ]={0},@@ b[100@@ ]={0},@@ sum=0; scanf("%d",&n); for(i=1;i<=n;i++) scanf("%d",&a[i]); for(i=1;i<=n;i++) { b[i]=1; for(j=1;j<i;j++) if(a[j]>=a[i]&&@@ b[j]@@ +1>@@ b[i]) b[i]=b[j]+1; if(sum@@ <@@ b[i]@@ )@@ sum=@@ b[i]; } printf("%d\n",sum); }  
c -1
h -1
void@@ main(@@ void) { intk,@@ a[@@ 25@@ ],i,j,@@ max,@@ b[@@ 25@@ ]={@@ 1@@ }; scanf("%d",&k); for(i=0;i<k;i++) { scanf("%d",&a[i]); } for(i=1;i<k;i++) { max=1; for(j=0;j<i;j++) { if(a[j]>=a[i]&&@@ b[j]@@ +1@@ >=@@ max) max=@@ b[j]@@ +1; } b[i]=@@ max; } max=0; for(i=0;i<k;i++) { if(b[i]>max) max=b[i]; } printf("%d",max); }  
c -1
h -1
1


int@@ dd@@ [25]; intk; int@@ maxnum@@ =0; void@@ fun@@ (intp@@ ,int@@ num,int@@ hight@@ ) { if(p@@ >@@ k) { if(num@@ >@@ maxnum@@ ) maxnum@@ =@@ num; return; } if(@@ dd@@ [p@@ ]<=@@ hight@@ ) { fun@@ (p@@ +1,@@ num@@ +1,@@ dd@@ [p@@ ]); fun@@ (p@@ +1,@@ num,@@ hight@@ ); } else fun@@ (p@@ +1,@@ num,@@ hight@@ ); return; } intmain() { cin>>k; for(inti=0;i<k;i++) cin>>@@ dd@@ [i]; fun@@ (@@ 0,0,@@ 65535@@ ); cout<<@@ maxnum@@ -1@@ <<endl; }  
c -1
h -1
intmain() { int@@ shuzu@@ [@@ 1001@@ ],@@ jilu@@ [@@ 1001]; int@@ a=0,b=0,@@ c,@@ n,@@ i,@@ k; scanf("%d",&n); for(i=0;i<n;i++) { for(k=0;k<n;k++) { scanf("%d",&@@ shuzu@@ [k]); if(shuzu@@ [k]@@ ==0) { jilu@@ [a@@ ]=@@ k; a++; } } if(a==@@ 2) { c=@@ jilu@@ [1]@@ -@@ jilu@@ [0]@@ -1; b@@ +=@@ c; } a=0; } printf("%d",@@ b); return0; }  
c -1
h -1
0

intmain(intargc,char*argv[]) { intyear,month,day,@@ n,@@ mday@@ =0,@@ i=1; int@@ p[@@ 13]={0,31,28,31,30,31,30,31,31,30,31,30,31}; scanf("%d%d@@ %d@@ \n",&@@ year@@ ,&@@ month,&@@ day); for(i=1;i<@@ month@@ +1@@ ;i++){ mday@@ =@@ mday@@ +p@@ [i-1]; } if((year%4==0&&year%100!=0@@ )||@@ year%@@ 400@@ ==0){ if(month@@ >=@@ 3@@ ){ mday@@ =@@ mday@@ +1;} else{ mday@@ =@@ mday@@ ; } } n=@@ mday@@ +day; printf("%d",n); return0; }  
c -1
h -1
intmain() { intn,@@ t,@@ i,j; int@@ x1,y1,x2,y2@@ ; scanf("%d",&n); x1@@ =-@@ 1@@ ;@@ y1@@ =-@@ 1@@ ;@@ x2@@ =-@@ 1@@ ;@@ y2@@ =-1; for(i=0;i<n;i++) { for(j=0;j<n;j++) { scanf("%d",&t); if(t==0) { if(@@ x1@@ ==@@ -1@@ &&@@ y1@@ ==-1) { x1@@ =j; y1@@ =i; } x2@@ =j; y2@@ =i; } } } if(@@ x1@@ ==@@ x2@@ ||@@ y1@@ ==@@ y2@@ ) printf("@@ 0@@ "); else printf("%d",(@@ x2-x1-1)*(y2-y1@@ -1)); return0; }  
c -1
h -1
0

inta[100],b[100],@@ c[100],@@ m,n; voidinput() { inti; scanf("%d%d",&m,&n); for(i=0;i<m;i++) { scanf("%d",&a[i]); } for(i=0;i<n;i++) { scanf("%d",&b[i]); } } void@@ az@@ () { inti,j,t; for(j=0;j<m;j++) { for(i=0;i<m@@ -1-j;i++) { if(a[i]>a[i+1]) { t=a[i]; a[i]=a[i+1]; a[i+1]=@@ t; } } } for(j=0;j<n;j++) { for(i=0;i<n@@ -1-j;i++) { if(b[i]>b[i+1]) { t=b[i]; b[i]=b[i+1]; b[i+1]=@@ t; } } } } void@@ jch@@ () { intj; for(j=0;j<m;j++) { c[j]=@@ a[j]; } for(j=@@ m@@ ;j<@@ m+@@ n;j++) { c[j]=@@ b@@ [j@@ -@@ m]; } } voidoutput@@ () { inti; for(i=0;i<m+@@ n-1;i++) { printf("%d",c[i]); } printf("%d",c[@@ m+@@ n-1]); } voidmain() { input(); az@@ (); jch@@ (); output@@ (); }  
c -1
h -1
intmain() { intn,i,j,a[@@ 20000],@@ flag=0; cin>>n; for(i=0;i<n;i++) { cin>>a[i]; if(flag==0) cout<<a[0]; flag=1; for(j=0;j<i;j++) { if(a[j]==a[i]) break; if(j==@@ i@@ -1@@ &&@@ a[j]@@ !=@@ a[i]) cout<<""<<a[i]; } } return0; }  
c -1
h -1
0

intmain() { intyear,@@ mon@@ ,@@ g,@@ i,@@ e=0,@@ day; int@@ montha@@ [13]={0,31,28,31,30,31,30,31,31,30,31,30,31}; int@@ monthb@@ [@@ 13]={0,31,@@ 29,31,30,31,30,31,31,30,31,30,31}; scanf("%d%d%d",&year,&@@ mon@@ ,&@@ g@@ ); for(i=0;i<@@ mon@@ ;i++) { if(year%@@ 4==0) { if(year%@@ 100==0&&@@ year%@@ 400@@ !=0) { e=@@ e+@@ montha@@ [i]; day=@@ e+@@ g; } else { e=@@ e+@@ monthb@@ [i]; day=@@ e+@@ g; } } if(year%@@ 4@@ !=0) { e=@@ e+@@ montha@@ [i]; day=@@ e+@@ g; } } printf("%d",@@ day); return0; }  
c -1
h -1
voidmain() { intn@@ ,*p; scanf("%d",&n); p=@@ (int*)malloc(sizeof(int)*n); inti,j; for(i=0;i<n;i++) { scanf("%d",p@@ +i); } printf("%d",@@ *p@@ ); for(i=1;i<n;i++) { for(j=0;j<@@ i@@ ;) { if(@@ *(p+i)@@ ==@@ *(p@@ +j@@ )) break; else j++; } if(j==i) printf("%d",@@ *(p@@ +i)); } }  
c -1
h -1
0

intmain(){ double@@ a,b; int@@ p=0,@@ n,m,@@ k=0; char@@ sb@@ [@@ 531@@ ]={0}; char@@ dsb@@ [@@ 531@@ ]={0}; scanf("%lf",&a); scanf("%s%s",@@ sb@@ ,@@ dsb@@ ); for(inti=0;i<@@ 531@@ ;i++){ if(@@ sb@@ [i]==@@ dsb@@ [i]@@ &&@@ sb@@ [i]@@ !=0){ p++; } if(((@@ sb@@ [i]!='A')&&(@@ sb@@ [i]!='C')&&(@@ sb@@ [i]!='T')&&(@@ sb@@ [i]!='G')@@ &&(@@ sb@@ [i]@@ !=0)@@ )||((@@ dsb@@ [i]!='A')&&(@@ dsb@@ [i]!='C')&&(@@ dsb@@ [i]!='T')&&(@@ dsb@@ [i]!='G')@@ &&(@@ dsb@@ [i]@@ !=0)@@ )) k=1; } n=strlen(@@ sb@@ ); m=strlen(@@ dsb@@ ); b@@ =1@@ .0@@ *p@@ /n; if(m!=@@ n@@ ||@@ k@@ ==1)@@ printf("error"); elseif(@@ b@@ >@@ a){ printf("yes"); } elseprintf("no"); return0; }  
c -1
h -1
intmain() { intn,i,j,@@ k@@ =1,@@ r@@ =1,@@ number@@ [@@ 20001@@ ],@@ number1@@ [@@ 20001@@ ]={0}; cin>>n; for(i=1@@ ;i@@ !=@@ n@@ +1;i++) { cin>>@@ number@@ [i]; for(j=1@@ ,k@@ =1@@ ;j<=@@ i;j++) { if(@@ number@@ [i]==@@ number1@@ [j]) { k=0; break; } } if(k==1) { if(i==1) { cout<<@@ number@@ [1]; number1@@ [1]=@@ number@@ [1]; r++; } else { cout<<""<<@@ number@@ [i]; number1@@ [r@@ ]=@@ number@@ [i]; r++; } } } return0; }  
c -1
h -1
0

intmain() { intyear,month,day,@@ days@@ =0,@@ i=1; int@@ month_str1@@ [@@ 12]={31,@@ 28,31,30,31,30,31,31,30,31,30,31@@ },@@ month_str2@@ [@@ 12]={31,29,31,30,31,30,31,31,30,31,30,31}; cin>>year>>@@ month>>@@ day; if((year%4==0&&year%100!=0@@ )||@@ year%400==0) while(i@@ !=@@ month@@ ) { days@@ +=@@ month_str2@@ [i-1]; i++; } else while(i@@ !=@@ month@@ ) { days@@ +=@@ month_str1@@ [i-1]; i++; } cout<<@@ days@@ +day; return0; }  
c -1
h -1
voidmain() { inta[@@ 15@@ ],b[@@ 20],@@ i,@@ l@@ ,j,@@ n,@@ p=0,@@ num=0; while(1) {@@ num=0; scanf("%d",&n); if(n@@ ==-1)break; else { a[0]=@@ n; for(l=1;@@ ;l++) { scanf("%d",&@@ a[l@@ ]); if(a[@@ l@@ ]@@ ==0)break; } for(i=0;a[i]@@ !=0;i++) for(j=0;@@ a[j]@@ !=0;j++) { if(a[i]==a[j]@@ *2@@ )@@ num++; } b[p@@ ]=@@ num; p++; } } for(i=0;i<p@@ ;i++)@@ printf("%d\n",@@ b[i]); }  
c -1
h -1
0

intmain() { charstring@@ [@@ 250@@ ],@@ substring@@ [@@ 250@@ ],@@ replacestring@@ [@@ 200]; cin>>@@ string@@ >>@@ substring@@ >>@@ replacestring@@ ; int@@ place@@ =0,@@ i,j,@@ flag=1; for(i=0;@@ string@@ [i]@@ !='\0'@@ &&@@ flag@@ ==1@@ ;i++) { if(string@@ [i]!=@@ substring@@ [0]) continue; else { place@@ =i; for(j=0;@@ substring@@ [j]!='\0';j++) { if(string@@ [i@@ ++@@ ]!=@@ substring@@ [j]) break; } if(@@ substring@@ [j]@@ !='\0') place@@ =0; else flag=0; } } if(@@ place@@ ) { int@@ l1=strlen(@@ substring@@ ),@@ l2=strlen(@@ replacestring@@ ); for(i=0;@@ string@@ [i+@@ place@@ +@@ l1@@ ]@@ !='\0';i++) replacestring@@ [@@ l2@@ +i]=@@ string@@ [@@ place@@ +@@ l1@@ +i@@ ]; replacestring@@ [@@ l2@@ +i]=@@ '\0'@@ ; string@@ [@@ place@@ ]=@@ '\0'@@ ; cout<<@@ string@@ <<@@ replacestring@@ <<endl; } else cout<<@@ string@@ <<endl; return0; }  
c -1
h -1
intmain() { intyear,month,day; int@@ result; scanf("%d%d%d",&year,&month,&day); result@@ =(@@ month@@ -1)*@@ 30@@ +day; if((year%4==0&&year%100!=0)||(year%400==0)) { if(month==@@ 2@@ ||@@ month==@@ 4@@ ||@@ month==@@ 5) {@@ result=result@@ +1;} if(month==@@ 6@@ ||@@ month==@@ 7) {@@ result=result+@@ 2@@ ;} if(month==8) {@@ result=result+@@ 3@@ ;} if(month==@@ 9@@ ||@@ month==@@ 10) {@@ result=result+@@ 4@@ ;} if(month==@@ 11@@ ||@@ month==@@ 12) {@@ result=result+@@ 5@@ ;} } else { if(month==2) {@@ result=result@@ +1;} if(month==3) {@@ result=result@@ -1@@ ;} if(month==@@ 6@@ ||@@ month==@@ 7) {@@ result=result@@ +1;} if(month==8) {@@ result=result+@@ 2@@ ;} if(month==@@ 9@@ ||@@ month==@@ 10) {@@ result=result+@@ 3@@ ;} if(month==@@ 11@@ ||@@ month==@@ 12) {@@ result=result+@@ 4@@ ;} } printf("%d",@@ result); return0; }  
c -1
h -1
0

intmain(){ intk,@@ m,n; inti,j,t; intsum; int@@ z; scanf("%d",&k); for(t=0;t@@ <k;@@ t++){ scanf("%d%d",&m,&n); sum=0; for(i=0;i<m;i++){ for(j=0;j<n;j++){ scanf("%d",&@@ z); if(i==0||i==@@ m-1)@@ sum+=@@ z; else{ if(j@@ ==0||j==@@ n-1)@@ sum+=@@ z; } } } printf("%d\n",sum); } return0; }  
c -1
h -1
inta[@@ max@@ ],@@ k; int@@ find@@ (int@@ p) { inti,@@ temp@@ =0,@@ t; if(p==@@ k@@ -1)@@ return1; for(i=@@ p@@ +1;i<=@@ k-1;i++) { if(a[@@ p@@ ]>=@@ a[i]) { t=@@ find@@ (i); if(temp@@ <@@ t)@@ temp=@@ t; } } return@@ temp@@ +1; } main() { inti,j,@@ p=0,@@ t,@@ ans=0; scanf("%d",&k); for(i=0;i<=k-1;i++) scanf("%d",&a[i]); for(i=0;i<=k-1;i++) { t=@@ find@@ (i); if(@@ ans@@ <@@ t)@@ ans=@@ t; } printf("%d",@@ ans); }  
c -1
h -1
0

intmain() { inta[@@ 20000@@ ],i,j,@@ n; scanf("%d",&n); for(i=0;i<n;i++) scanf("%d",&a[i]); printf("%d",a[0]); for(i=0;i<n;i++) for(j=0;j<n;j++) { if(a[i]==a[j]@@ )break; if(j==@@ i@@ -1) { printf(""); printf("%d",a[i]); } } return0; }  
c -1
h -1
intmain(){ intn,i,j,@@ a,@@ x1,y1,x2,y2@@ ; scanf("%d@@ "@@ ,&@@ n); x1@@ =@@ n; for(i=1;i<=n;i++){ for(j=1;j<=n;j++){ scanf("%d@@ "@@ ,&@@ a); if(a@@ ==0&&@@ j@@ <@@ x1@@ ){ x1@@ =j; y1@@ =i; } if(a@@ ==0){ x2@@ =j; y2@@ =i; } } } int@@ area@@ =(@@ x2-x1-1)*(y2-y1-1); printf("%d@@ \n@@ %d\n%d@@ "@@ ,@@ area@@ ,@@ x2-x1@@ -1,@@ y2-y1@@ -1); return(0); }  
c -1
h -1
0

intmain() { int@@ k@@ [100][100]; intm=0,@@ x=0,@@ i,j,@@ row@@ =0,@@ col@@ =0; scanf("%d%d",&row,&col); for(i=0;i<row;i++){ for(j=0;j<col;j++){ scanf("%d",&@@ k@@ [i][j]); } } for(m=0;m@@ <row@@ +col@@ -1@@ ;m++){ for(j=@@ m;@@ ;j--){ if(j@@ >=@@ col@@ ||@@ m@@ -j@@ >=@@ row@@ ){ break; } if(j@@ <0@@ ||@@ m@@ -j@@ <0@@ ){ break; } printf("%d\n",@@ k@@ [m@@ -j@@ ][j]); } } for(m=@@ col@@ ;m@@ <row@@ +col@@ -1@@ ;m++){ for(j=col-1@@ ;j>=0;j--){ if(m@@ -j@@ >=@@ row@@ ){ break; } printf("%d\n",@@ k@@ [m@@ -j@@ ][j]); } } return0; }  
c -1
h -1
intmain() { inta[16@@ ],i,j,@@ s,@@ k,@@ l; for(l=1;@@ l<@@ 3000@@ ;l++) { s=0; scanf("%d",&a[0]); if(a[0]==-1)break; for(k=1;k<=@@ 16@@ ;k++) { scanf("%d",&@@ a[k]); if(a[k]@@ ==0)break; } for(i=0;i<@@ k-1;i++) { for(j=i+1;j<k;j++) if(a[i]==a[j]@@ *2@@ ||@@ a[j]==@@ a[i]@@ *2@@ )@@ s=s+1; }@@ printf("%d\n",s); } return0; }  
c -1
h -1
0

intmain() { intm,@@ book[@@ 1002@@ ],@@ i,@@ cnt@@ [26]={0},@@ l@@ ,j,@@ n=0; charname@@ [@@ 1002@@ ][@@ 27@@ ],@@ a,@@ max; cin>>m; for(i=0;i<m;i++) { cin>>@@ book@@ [i]; cin>>@@ name@@ [i]; l=strlen(@@ name@@ [i]); for(j=0;j<l;j++) { a=@@ name@@ [i][j]; cnt@@ [a@@ -'A']++; } } for(i=0;i<26;i++) { if(@@ cnt@@ [i]>@@ n) { n=@@ cnt@@ [i]; max@@ =i+@@ 'A'@@ ; } } cout<<max<<endl; cout<<n<<endl; for(i=0;i<m;i++) { l=strlen(@@ name@@ [i]); for(j=0;j<l;j++) { if(name@@ [i][j]==@@ max) { cout<<@@ book@@ [i]<<endl; break; } } } return0; }  
c -1
h -1
main() { inta[@@ 17@@ ],@@ num=0,@@ i=1@@ ,j,@@ m; charc; while(1) { num=0; i=1; do { scanf("%d",&a[i]); c=@@ getchar(); i++; }while(@@ c@@ !=@@ '\n@@ '@@ ); m@@ =i@@ -2@@ ; if(!@@ m@@ )break; for(i=1;i<=m;i++) { for(j=i+1;j<=@@ m;j++) { if(a[i]@@ *2==@@ a[j]||@@ a[i]==@@ 2*@@ a[j])@@ num++; } } printf("%d\n",num); } return0; }  
c -1
h -1
0

int@@ dispose@@ (int,int); intmain() { intn,i,@@ p; cin>>n; for(i=0;i<n;i++) { cin>>@@ p; cout<<@@ dispose@@ (p,@@ 2)<<endl; } return0; } int@@ dispose@@ (intp@@ ,int@@ y) { inti,@@ sol@@ =1; for(i=y@@ ;i<=@@ (int)@@ (@@ sqrt@@ (p@@ ))@@ ;i++) { if(p@@ %i==0) { sol@@ +=@@ dispose@@ (p@@ /i,i); } } return@@ sol@@ ; }  
c -1
h -1
intmain() { intnum,@@ temp; int@@ author@@ [@@ 27@@ ][@@ 500@@ ]={0@@ ,@@ }; charstr@@ [1000]; cin>>num; for(inti=1;i<=@@ num;i++) { cin>>@@ temp; getchar(); cin>>@@ str@@ ; for(intj=0;j<@@ strlen(@@ str@@ );j++) { author@@ [@@ str@@ [j]@@ -'@@ A'+@@ 1@@ ][0]@@ ++; author@@ [@@ str@@ [j]@@ -'@@ A'+@@ 1@@ ][@@ author@@ [@@ str@@ [j]@@ -'@@ A'+@@ 1@@ ][0]@@ ]=temp; } } int@@ temp_num@@ =0,@@ temp_author@@ ; for(inti=1;i<=@@ 26;i++) { if(@@ author@@ [i][0]@@ >@@ temp_num@@ ) { temp_num@@ =@@ author@@ [i]@@ [0]; temp_author@@ =i; } } cout<<@@ (char)(@@ temp_author@@ +'@@ A@@ '-@@ 1@@ )<<endl; cout<<@@ temp_num@@ <<endl; for(inti=1;i<=@@ temp_num@@ ;i++) { cout<<@@ author@@ [@@ temp_author@@ ]@@ [i]<<endl; } return0; }  
c -1
h -1
0

structbook { intid; charauthor@@ [27]; structbook*next; }; structbook*@@ creat@@ () { intn,i; scanf("%d",&n); structbook*@@ p1,*@@ head,*@@ p0; head=NULL; p1=head; for(i=0;i<n;i++) { p0@@ =(struct@@ book@@ *)malloc(sizeof(structbook)); scanf("%d@@ %s@@ "@@ ,&@@ p0->@@ id,@@ p0->@@ author); if(head@@ ==NULL) { p1=@@ p0; head=p1; p0@@ ->next=NULL; } else { p1->next=@@ p0; p0@@ ->next=NULL; p1=@@ p0; } } return(head); } char@@ best@@ (struct@@ book@@ *head) { inti,@@ max,@@ a[@@ 26]; structbook@@ *p; p=head; for(i=0;i<26@@ ;++@@ i)@@ a[i]=0; while(p!=NULL) { i=0; while(@@ p->@@ author@@ [i]@@ !='\0') { a[@@ p->@@ author@@ [i]@@ -'A']++; i++; } p=p->next; } for(i=0;i<26;i++) { if(i==0)@@ max=i; else@@ if(a[i]>@@ a[@@ max@@ ])@@ max=i; } return(@@ 'A'+@@ max); } voidprint@@ (char@@ x,@@ structbook@@ *head) { inti,@@ k=0; char@@ a=@@ x; structbook*@@ p=head; while(p!=NULL) { i=0; while(@@ p->@@ author@@ [i]@@ !='\0') { if(p->@@ author@@ [i]==@@ a) { k++; break; } i++; } p=p->next; } printf("%c@@ \n@@ %d\n@@ "@@ ,@@ a,@@ k); p=head; while(p!=NULL) { i=0; while(@@ p->@@ author@@ [i]@@ !='\0') { if(p->@@ author@@ [i]==@@ a) { printf("%d\n",p->@@ id); break; } i++; } p=p->next; } } intmain(intargc,char*argv[]) { charwriter@@ ; structbook*@@ head; head=creat(); writer@@ =@@ best@@ (head); print(@@ writer@@ ,@@ head); return0; }  
c -1
h -1
struct@@ Ill@@ { chara[@@ 10]; intage; }; intmain() { intn,i,@@ k; intm,@@ l=0; intj=0; struct@@ Ill@@ illMan@@ [100],@@ illOld@@ [100],@@ temp,@@ illOld1@@ [100]; scanf("%d",&n); for(i=0;i<n;i++){ scanf("%s%d",@@ illMan@@ [i].@@ a,&@@ illMan@@ [i].age); } for(i=0;i<n;i++){ if(@@ illMan@@ [i].age>=60){ illOld1@@ [j]=@@ illMan@@ [i]; j++; } } for(i=0;i<j@@ ;i++){ m=0; for(k=0;k<j@@ ;k++){ if(m@@ <@@ illOld1@@ [k@@ ].age){ m=@@ illOld1@@ [k].@@ age; } } for(k=0;k<j@@ ;k++){ if(@@ illOld1@@ [k@@ ].age@@ ==@@ m){ illOld@@ [l@@ ]=@@ illOld1@@ [k]; illOld1@@ [k@@ ].age@@ =0; l++; break; } } } for(i=0;i<j@@ ;i++){ printf("%s\n",@@ illOld@@ [i].@@ a); } for(i=0;i<n;i++){ if(@@ illMan@@ [i].age@@ <60){ printf("%s\n",@@ illMan@@ [i].@@ a); } } return0; }  
c -1
h -1
0

intn,m,@@ a[100@@ ]={0},@@ b[100@@ ]={0},@@ c[@@ 200@@ ]={0}; void@@ duqu@@ () { int*p; scanf("%d%d",&m,&n); for(p=@@ a@@ ;p<@@ a+@@ m@@ ;p++) scanf("%d",@@ p); for(p=@@ b@@ ;p<@@ b+@@ n;@@ p++) scanf("%d",@@ p); } void@@ range@@ (inta[],intb[],int@@ m,intn) { int@@ *p,*@@ q,@@ d; for(p=@@ a@@ ;p<@@ a+@@ m-1@@ ;p++) for(q=@@ p@@ +1@@ ;q@@ <@@ a+@@ m;@@ q++) if(@@ *p@@ >*@@ q) { d@@ =*@@ p; *p@@ =*@@ q; *@@ q=@@ d; } for(p=@@ b@@ ;p<@@ b+@@ n-1@@ ;p++) for(q=@@ p@@ +1@@ ;q@@ <@@ b+@@ n;@@ q++) if(@@ *p@@ >*@@ q) { d@@ =*@@ p; *p@@ =*@@ q; *@@ q=@@ d; } } void@@ merge@@ (inta[],intb[],int@@ m,intn) { int@@ *p,*@@ q; for(p=@@ c,@@ q=@@ a@@ ;q@@ <@@ a+@@ m@@ ;p@@ ++,@@ q++) *p@@ =*@@ q; for(p=@@ c+@@ m,@@ q=@@ b@@ ;q@@ <@@ b+@@ n;@@ p@@ ++,@@ q++) *p@@ =*@@ q; } void@@ show@@ (intc[],int@@ d) { int*p; for(p=@@ c@@ ;p<@@ c@@ +d@@ -1@@ ;p++) printf("%d",@@ *p@@ ); printf("%d",@@ *p@@ ); } voidmain() { duqu@@ (); range@@ (a,b,m,n); merge@@ (a,b,m,n); show@@ (c,@@ m+@@ n); }  
c -1
h -1
intmain() { intn,a[@@ 1000][1000],@@ i,k,@@ x=0,@@ x1,y1,x2,y2@@ ; scanf("%d",&n); for(i=0;i<n;i++){ for(k=0;k<n;k++){ scanf("%d",&a[i]@@ [k]); } } for(i=0;i<n;i++){ for(k=0;k<n;k++){ if((@@ a[i][k]@@ ==0)&&(@@ a[i]@@ [k-1@@ ]==255@@ )&&(@@ a[i-1@@ ][k@@ -1@@ ]==255@@ )&&(@@ a[i-1@@ ][k@@ ]==255@@ )){ x1=i; y1@@ =k; } } } for(i=0;i<n;i++){ for(k=0;k<n;k++){ if((@@ a[i][k]@@ ==0)&&(@@ a[i]@@ [k+1@@ ]==255@@ )&&(@@ a[i+1@@ ][k@@ +1@@ ]==255@@ )&&(@@ a[i+1@@ ][k@@ ]==255@@ )){ x2=i; y2@@ =k; } } } printf("%d",(@@ x2-x1-1)*(y2-y1@@ -1)); return0; }  
c -1
h -1
0

int@@ data@@ [@@ K@@ ]; int@@ ju@@ [@@ K@@ ][@@ K@@ ]; int@@ weight@@ [@@ K@@ ]; intmain(intargc,char*argv[]) { intn=0; inti=0; intj=0; intmax=0; freopen@@ (@@ "@@ in.@@ txt@@ ",@@ "@@ r@@ ",@@ stdin@@ ); freopen@@ (@@ "@@ out@@ .@@ txt@@ ",@@ "@@ w@@ ",@@ stdout@@ ); scanf("%d",&n); memset(@@ ju@@ ,0,sizeof(@@ ju@@ )); for(i=0;i<n;i++) { scanf("%d",&@@ data@@ [i]); weight@@ [i]=1; } for(i=0;i<n-1;i++) { for(j=i+1;j<n;j++) { if(@@ data@@ [i]>=@@ data@@ [j]) { ju@@ [i][j]@@ =1; } } } for(i=n-2;i>=0;i--) { for(j=i+1;j<n;j++) { if(@@ ju@@ [i][j]@@ ) { if(@@ weight@@ [i]<@@ weight@@ [j]@@ +1) { weight@@ [i]=@@ weight@@ [j]+1; } } } } max=0; for(i=0;i<n;i++) { if(max<@@ weight@@ [i]) max=@@ weight@@ [i]; } printf("%d\n",max); return0; }  
c -1
h -1
intmain() { intn,i,j,k,@@ a[@@ 20000],@@ counter@@ =0; cin>>n; for(i=0;i<n;i++) { cin>>a[i]; for(j=0;j<i;j++) if(a[i]==a[j]@@ )break; if(i==@@ j)@@ counter@@ ++; } for(i=0;i<n;i++) { for(j=0;j<i;j++) if(a[i]==a[j]@@ )break; if(i==@@ j) {@@ cout<<a[i]; counter@@ --; if(@@ counter@@ !=0)@@ cout<<'@@ '; } } return0; }  
c -1
h -1
0

main() { doublen; chara[@@ 600@@ ],b[@@ 600]; scanf("%lf",&n); scanf("%s",a); scanf("%s",b); int@@ len=strlen(@@ a)@@ ,@@ time@@ =0,@@ i; if(strlen(a)!=strlen(b@@ ))@@ printf("error\n"); else { for(i=0;i<len;i++) { if((a[i]!='@@ A'&&a[i]!='T'&&a[i]!='G'&&a[i]!='@@ C')||(@@ b[i]!='A'&&b[i]!='T'&&b[i]!='G'&&b[i]!='@@ C')@@ )break; else@@ if(a[i]==b[i]@@ )@@ time@@ ++; } if(i==@@ len@@ ) { if((@@ double)@@ time@@ /@@ (double)@@ len@@ >@@ n)@@ printf("yes\n"); else@@ printf("no\n"); } else@@ printf("error\n"); } }  
c -1
h -1
intmain() { intn,i,j,@@ an@@ [@@ 500@@ ][@@ 500],@@ a,b,c,d,@@ e=0,@@ f=0; scanf("%d",&n); for(i=0;i<n;i++) { for(j=0;j<n;j++) { scanf("%d",&@@ an@@ [i][j]); } } for(i=0;i<n;i++) { for(j=0;j<n;j++) { if(@@ an@@ [i][j]==0) { a=i; b=j; e=1; break; } } if(e@@ ==1) break; } for(i=n-1;i>=0;i--) { for(j=n-1;j>=0;j--) { if(@@ an@@ [i][j]==0) { c=i; d=j; f=1; break; } } if(f@@ ==1) break; } ints; s=(@@ c-a-1)*(d-b-1); printf("%d",s); return0; }  
c -1
h -1
0

intmain(){ double@@ k; scanf("%lf",&@@ k); char@@ qian@@ [501]; char@@ hou@@ [501]; scanf("%s@@ %s",&@@ qian@@ ,&@@ hou@@ ); inti,@@ s=0; if(strlen(@@ qian@@ )!=strlen(@@ hou@@ )){ s=1; } intm=0; for(i=0;i<strlen(@@ qian@@ );i++){ if((@@ qian@@ [i]!='A'&&@@ qian@@ [i]!='T'&&@@ qian@@ [i]!='G'&&@@ qian@@ [i]!='@@ C')||(@@ hou@@ [i]!='A'&&@@ hou@@ [i]!='T'&&@@ hou@@ [i]!='G'&&@@ hou@@ [i]!='@@ C')){ s=1; } } if(s@@ ==1){ printf("error"); }elseif(@@ s@@ ==0){ for(i=0;i<strlen(@@ qian@@ );i++){ if(@@ qian@@ [i]==@@ hou@@ [i]){ m++; } } if(1.0*@@ m/@@ strlen(@@ qian@@ )>@@ k){ printf("yes"); }elseif(@@ 1.0*@@ m/@@ strlen(@@ qian@@ )@@ <=@@ k){ printf("no"); } } return0; }  
c -1
h -1
voidmain() { inti,j,k,@@ p; chars@@ [100],@@ c[100],@@ a[100]; gets(s); gets(c); gets(a); k@@ =strlen(s); p@@ =strlen(c); for(i=0;i<k;i++) { j=0; for(j=0;j<@@ p@@ ;j++@@ ,i++) { if(s@@ [i]!=@@ c@@ [j]) break; } if(j@@ >@@ p@@ -1) { for(j=0;j<@@ p@@ ;j++@@ ,i++) s@@ [i-@@ p@@ ]=@@ a[j]; break; } } for(i=0;i<k;i++) printf("%c",s[i]); }  
c -1
h -1
0

intmain() { charstr@@ [257@@ ]={'\0'},@@ substr@@ [257@@ ]={'\0'},@@ replace@@ [257@@ ]={'\0'}; cin>>@@ str@@ >>@@ substr@@ >>@@ replace@@ ; char*@@ p=strstr(@@ str,@@ substr@@ ); inti=0,@@ flag@@ =strlen(@@ substr@@ ); if(p@@ ==NULL) cout<<str@@ <<endl; else { for(i=0;@@ str@@ +i@@ <p@@ ;i++) cout<<str@@ [i]; cout<<@@ replace@@ ; for(i@@ =i+@@ flag@@ ;i<@@ strlen(@@ str@@ );i++) cout<<str@@ [i]; } return0; }  
c -1
h -1
intmain() { int@@ list@@ [@@ 15@@ ]={0}; inti,j,@@ num,@@ sum; cin>>num; while(@@ num@@ !=-1) { i=1; j=0; sum=0; list@@ [0]=@@ num; while((@@ cin>>@@ list@@ [i],@@ list@@ [i])@@ !=0) i++; while(@@ list@@ [j]) { for(i=j@@ +1;@@ list@@ [i]@@ ;i++) { if(@@ list@@ [i]==@@ 2*@@ list@@ [j]@@ ||@@ 2*@@ list@@ [i]==@@ list@@ [j]) sum++; } j++; } cout<<sum<<endl; cin>>num; } return0; }  
c -1
h -1
0

intmain(){ intt; cin>>t; while(t@@ >0) { inta[@@ 102@@ ][@@ 102@@ ]; intm,n; cin>>m>>n; intsum=0; for(inti=0;i<@@ m;i++){ for(intj=0;j<n;j++) cin>>*(*(a+i)+j); } if(m@@ ==1){ for(inti=0;i<n;i++) sum+=*(@@ *a@@ +i); } else{ for(inti=0;i<n;i++) sum+=*(@@ *a@@ +i); for(inti=1;i<@@ m-1;i++) sum=sum+@@ *(*(a+i)@@ )+@@ *(*(a+i)@@ +n-1); for(inti=0;i<n;i++) sum+=*(*(a@@ +m-1)@@ +i); } cout<<sum<<endl; t@@ --; } return0; }  
c -1
h -1
intmain() { charstr@@ [256]; char@@ substr@@ [256]; char@@ rep@@ [256]; inti,j,@@ flag; inta,b,c; gets(str); gets(@@ substr@@ ); gets(@@ rep); a=strlen(@@ substr@@ ); b=strlen(@@ str); c=strlen(@@ rep); for(i=0;i<b;i++){ flag=1; for(j=0;j<a@@ ;j++){ if(str@@ [i+j]!=@@ substr@@ [j]){ flag=0; } } if(flag@@ ==1){ break; } } if(i==@@ b){ puts(@@ str@@ );} else{ for(j=0;j<i;j++){ printf("%c",str@@ [j]); } for(j=0;j<@@ c@@ ;j++){ printf("%c",@@ rep@@ [j]); } for(j=i@@ +@@ a@@ ;j<@@ b@@ ;j++){ printf("%c",str@@ [j]); } } return0; }  
c -1
h -1
0

const@@ intN@@ =@@ 25@@ +@@ 10@@ ; inth@@ [N]; int@@ dp@@ [N]; intmain(@@ void@@ ){ int@@ ans@@ ,@@ cnt@@ ,@@ i,j; while(@@ scanf("%d",&@@ cnt@@ )!=@@ EOF@@ ){ for(i=0;i<@@ cnt@@ ;++@@ i){ scanf("%d",@@ h@@ +i); } dp@@ [0]=1; for(i=1;i<@@ cnt@@ ;++@@ i){ dp@@ [i]=1; for(j=0;j<@@ i@@ ;++@@ j){ if(h@@ [i]<=@@ h@@ [j]){ dp@@ [i]=@@ max(@@ dp@@ [i],@@ dp@@ [j]@@ +1); } } } ans=0; for(i=0;i<@@ cnt@@ ;++@@ i){ ans=@@ max(@@ ans@@ ,@@ dp@@ [i]); } printf("%d\n",@@ ans); } return0; }  
c -1
h -1
intmain() { intn,i,j,@@ b; inta[20000]; scanf("%d",&n); i=0; j=0; b=0; while(i<n) { scanf("%d",&a[i]); i++; } i=1; printf("%d",a[0]); while(i<n) { while((@@ j@@ <i@@ )&&(@@ b@@ ==0)) { if(a[j]!=@@ a[i])@@ j++; else@@ b=1; } if(b@@ ==0)@@ printf("%d",a[i]); i++; j=0; b=0; } return0; }  
c -1
h -1
0

voidmain() { voidsort@@ (int*p,int@@ n); int@@ n1,n2,@@ a[@@ 50@@ ],b[@@ 50@@ ],@@ i; int*@@ pa@@ ,*@@ pb@@ ; scanf("%d%d",&n1,&n2); for(i=0;i<n1@@ ;i++)@@ scanf("%d",&a[i]); for(i=0;i<n2@@ ;i++)@@ scanf("%d",&b[i]); pa@@ =&@@ a[0]@@ ;@@ pb@@ =&@@ b[0]; sort(@@ pa@@ ,@@ n1); sort(@@ pb@@ ,@@ n2); for(i=0;i<n1@@ ;i++)@@ printf("%d",a[i]); for(i=0;i<n2@@ -1;i++)@@ printf("%d",b[i]); printf("%d\n",@@ b[@@ n2@@ -1]); } voidsort@@ (int*p@@ ,intn) { inti,j,temp; for(i=n-1@@ ;i>0;i--) for(j=0;j<i;j++) { if(@@ *(p+j)@@ >*@@ (p@@ +j@@ +1@@ )) { temp@@ =*(p@@ +j); *(p+j)@@ =*(p@@ +j@@ +1); *(p@@ +j+1)@@ =temp; } } }  
c -1
h -1
struct@@ mice { int@@ wei@@ ; char@@ color@@ [100]; struct@@ mice@@ *next; }; struct@@ mice@@ *creat@@ (int@@ c) { struct@@ mice@@ *@@ head; struct@@ mice@@ *p1,*p2; struct@@ mice@@ *@@ kok@@ ; kok@@ =(struct@@ mice@@ *)malloc(LEN); kok@@ ->@@ wei@@ =0;@@ strcpy(@@ kok@@ ->@@ color@@ ,"@@ \@@ 0@@ "); intt; t=0; p1=p2=(struct@@ mice@@ *)malloc(LEN); scanf("%s%d",p1->@@ color@@ ,&p1->@@ wei@@ ); head=NULL; while(t@@ <@@ c) { t=t+1; if(t@@ ==1) {@@ head@@ =p1;} else { p2->next=p1; p2=p1; p1=(struct@@ mice@@ *)malloc(LEN); scanf("%s%d",p1->@@ color@@ ,&p1->@@ wei@@ ); } } p2->next=p1; p2=p1; p2->next=@@ kok@@ ; return(head); } void@@ mun@@ (struct@@ mice@@ *@@ hoih@@ ,int@@ io@@ ) { inti,j,k; k=0; struct@@ mice@@ *@@ bt@@ ; bt@@ =@@ hoih@@ ; charstr@@ [100]; for(i=0;i<@@ io@@ ;i++) { for(j=0;j<@@ io@@ -i;j++) { if(@@ hoih@@ ->@@ wei@@ <(@@ hoih@@ ->next@@ )@@ ->@@ wei@@ &&(@@ hoih@@ ->next@@ )@@ ->@@ wei@@ >=60) { k=@@ hoih@@ ->@@ wei@@ ; hoih@@ ->@@ wei@@ =(@@ hoih@@ ->next@@ )@@ ->@@ wei@@ ; (@@ hoih@@ ->next@@ )@@ ->@@ wei@@ =k; strcpy(@@ str,@@ hoih@@ ->@@ color@@ ); strcpy(@@ hoih@@ ->@@ color@@ ,@@ (@@ hoih@@ ->next@@ )@@ ->@@ color@@ ); strcpy(@@ (@@ hoih@@ ->next@@ )@@ ->@@ color@@ ,@@ str); } hoih@@ =@@ hoih@@ ->next; } hoih@@ =@@ bt@@ ; } return; } voidmain() { intn,@@ h; struct@@ mice@@ *creat@@ (int@@ c); struct@@ mice@@ *p,*@@ he@@ ; scanf("%d",&n); p=@@ creat@@ (n); he@@ =p; void@@ mun@@ (struct@@ mice@@ *@@ hoih@@ ,int@@ io@@ ); mun@@ (p,@@ n); p=@@ he@@ ; for(h=0;h@@ <n;@@ h++) { printf("%s\n",p->@@ color@@ ); p=p->next; } }  
c -1
h -1
0

voidmain() { inty,@@ d,@@ m,@@ i,j,@@ e=0,@@ total=0; inta[@@ 12]={31,28,31,30,31,30,31,31,30,31,30,31}; scanf("%d%d%d",&y,&m,&d); if(((@@ y%@@ 4==0)&&(@@ y%100!=0@@ )@@ )||(y%@@ 400==0)@@ )@@ a[1]=29; for(i=1;i<m;i++) { total+=@@ a[i@@ -1]; } total+=@@ d; printf("%d\n",@@ total); }  
c -1
h -1
voidmain() { inty,m,d,@@ a,@@ i,@@ ans; for(i=1;i<=@@ 5;i++) { scanf("%d%d%d",&y,&m,&d); if(y%@@ 4@@ !=0) a=1; elseif(@@ y%@@ 100!=0) a=0; elseif(@@ y%@@ 400@@ !=0) a=1; else a=0; if(a@@ ) { switch(m) { case1:@@ ans=@@ d;break; case2:@@ ans@@ =31+@@ d;break; case3:@@ ans=@@ 59@@ +d;break; case4:@@ ans=@@ 90@@ +d;break; case5:@@ ans=@@ 120@@ +d;break; case6:@@ ans=@@ 151@@ +d;break; case7:@@ ans=@@ 181@@ +d;break; case8:@@ ans=@@ 212@@ +d;break; case9:@@ ans=@@ 243@@ +d;break; case10:@@ ans=@@ 273@@ +d;break; case11:@@ ans=@@ 304@@ +d;break; case12:@@ ans=@@ 334@@ +d;break; } } else { switch(m) { case1:@@ ans=@@ d;break; case2:@@ ans@@ =31+@@ d;break; case3:@@ ans=@@ 60@@ +d;break; case4:@@ ans=@@ 91@@ +d;break; case5:@@ ans=@@ 121@@ +d;break; case6:@@ ans=@@ 152@@ +d;break; case7:@@ ans=@@ 182@@ +d;break; case8:@@ ans=@@ 213@@ +d;break; case9:@@ ans=@@ 244@@ +d;break; case10:@@ ans=@@ 274@@ +d;break; case11:@@ ans=@@ 305@@ +d;break; case12:@@ ans=@@ 335@@ +d;break; } } printf("%d\n",@@ ans); } }  
c -1
h -1
1


main() { introw,col,@@ n,m,@@ i,j; int(*p)@@ [1000],@@ (*@@ q@@ )@@ [1000]; scanf("%d%d",&row,&col); p=@@ (int@@ (@@ *)@@ [@@ 1000@@ ])@@ malloc(@@ row@@ *@@ 1000@@ *sizeof(int)); q=p; for(i=0;i<row;i++) { for(j=0;j<col;j++) { scanf("%d",@@ *(q@@ +i)@@ +j); } } q=p; for(j=0;j<col;j++) { m@@ =j; for(i=0;@@ m@@ >=0&&i@@ <row@@ ;m@@ --@@ ,i++) { printf("%d\n",@@ *(*(@@ q@@ +i)@@ +m@@ )); } } for(i=1;i<row;i++) { m=i; for(j=col-1@@ ;m@@ <row@@ &&j>=0@@ ;j--@@ ,@@ m@@ ++) { printf("%d\n",@@ *(*(@@ q@@ +m@@ )@@ +j)); } } }  
c -1
h -1
intmain() { inta[@@ 20000],@@ i,n,@@ j,@@ flag; scanf("%d",&n); for(i=0;i<n;i++) scanf("%d",&a[i]); printf("%d",a[0]); for(i=1;i<n;i++) {@@ for(j=i-1;j>=0;j--) {@@ if(a[i]==a[j]) {@@ flag=1; break;} else {@@ flag=0; continue@@ ;}} if(flag==0) printf("%d",@@ a[i]);} return0; }  
c -1
h -1
0

intmain() { int@@ n1@@ =0,@@ n2@@ =0,@@ i=0,j=0,@@ temp=0; cin>>@@ n1@@ >>@@ n2; int@@ a1@@ [100]={0},@@ a2@@ [100]={0},@@ c[@@ 200@@ ]={0}; for(i=0;i<n1;i++) cin>>@@ a1@@ [i]; for(i=0;i<n2;i++) cin>>@@ a2@@ [i]; for(i=0;i<n1@@ -1;i++) {@@ for(j=0;j<@@ n1@@ -1-i;j++) { if(@@ a1@@ [j]>@@ a1@@ [j+1]) {@@ temp=@@ a1@@ [j];@@ a1@@ [j]=@@ a1@@ [j+1];@@ a1@@ [j+1]=@@ temp;} }} for(i=0;i<n2@@ -1;i++) {@@ for(j=0;j<@@ n2@@ -1-i;j++) { if(@@ a2@@ [j]>@@ a2@@ [j+1]) {@@ temp=@@ a2@@ [j];@@ a2@@ [j]=@@ a2@@ [j+1];@@ a2@@ [j+1]=@@ temp;} }} for(i=0;i<n1;i++) c[i]=@@ a1@@ [i]; for(i=@@ n1@@ ;i<@@ n1+@@ n2;i++) c[i]=@@ a2@@ [i-@@ n1@@ ]; for(i=0;i<n1@@ +@@ n2@@ -1;i++) cout<<@@ c[i]@@ <<""; cout<<c[@@ n1+n2@@ -1]; return0; }  
c -1
h -1
intmain() { int@@ *p,*@@ num; intn,@@ add@@ ; scanf("%d",&n); p=@@ (int*)malloc(sizeof(int)*n); num=@@ (int*)malloc(sizeof(int)*n); for(inti=0;i<=@@ n-1;i++) { scanf("%d",p@@ +i); *(@@ num@@ +i)@@ =1; } for(inti=@@ n-2;i>=0;i--) { add@@ =0; for(intk@@ =i+1@@ ;k<=@@ n-1;k++) { if(@@ *(p+i)@@ >=@@ *(p@@ +k)@@ &&@@ *(@@ num@@ +k@@ )>@@ add@@ ) add@@ =*(@@ num@@ +@@ k); } *(@@ num@@ +i)@@ +=@@ add@@ ; } int@@ maxnum@@ =0; for(inti=0;i<=@@ n-1;i++) { if(*(@@ num@@ +i)@@ >@@ maxnum@@ ) maxnum@@ =*(@@ num@@ +i); } printf("%d",@@ maxnum@@ ); return0; }  
c -1
h -1
0

intmain() { intn,@@ b,@@ a[@@ 20000],@@ i,j; scanf("%d",&n); scanf("%d",&a[0]); printf("%d",a[0]); for(i=1;i<n;i++) { scanf("%d",&b); a[i]=@@ b; for(j=0;j<i;j++) { if(a[i]==a[j]) a[i]=0; } } for(i=1;i<n;i++) { if(a[i]!=0) printf("%d",a[i]); } printf("\n"); return0; }  
c -1
h -1
intmain(){ intn; intsz[@@ 500@@ ][@@ 500]; scanf("%d",&n); inti,j; for(i=0;i<n;i++){ for(j=0;j<n;j++){ scanf("%d",&sz[i][j]); } } int@@ mincol@@ =@@ n,@@ minrow@@ =@@ n,@@ maxcol@@ =0,@@ maxrow@@ =0; for(i=0;i<n;i++){ for(j=0;j<n;j++){ if(sz@@ [i][j]==0){ if(i<@@ mincol@@ ){ mincol@@ =i; } if(j<@@ minrow@@ ){ minrow@@ =j; } if(i>@@ maxcol@@ ){ maxcol@@ =i; } if(j@@ >@@ maxrow@@ ){ maxrow@@ =j; } } } } int@@ zong@@ ; zong@@ =(@@ maxcol@@ -@@ mincol@@ -1)*(@@ maxrow@@ -@@ minrow@@ -1); printf("%d",@@ zong@@ ); return0; }  
c -1
h -1
0

intmain() { inti,@@ a; int@@ b=0; doublen,@@ k; char@@ l1@@ [500]; char@@ l2@@ [500]; a=0; scanf("%lf",&n); scanf("%s",@@ l1@@ ); scanf("%s",@@ l2@@ ); for(i=0;i<strlen(@@ l1@@ );i++){ if(l1@@ [i]@@ <'@@ A'||@@ l1@@ [i]@@ >'@@ Z@@ '||@@ l2@@ [i]@@ <'@@ A'||@@ l2@@ [i]@@ >'@@ Z@@ '){ b=1; } } if(strlen(@@ l1@@ )!=strlen(@@ l2@@ )||@@ b@@ ==1){ printf("error"); }else{ for(i=0;i<strlen(@@ l1@@ );i++){ if(l1@@ [i]==@@ l2@@ [i]){ a++; } } k@@ =1.0*@@ a/@@ strlen(@@ l1@@ ); if(k@@ >n){ printf("yes"); }else{ printf("no"); } } return0; }  
c -1
h -1
intmain() { inta[@@ 20000],@@ i,n,@@ j,@@ flag; scanf("%d",&n); for(i=0;i<n;i++) scanf("%d",&a[i]); printf("%d",a[0]); for(i=1;i<n;i++) {@@ for(j=i-1;j>=0;j--) {@@ if(a[i]==a[j]) {@@ flag=1; break;} else {@@ flag=0; continue@@ ;}} if(flag==0) printf("%d",@@ a[i]);} return0; }  
c -1
h -1
0

intmain() { double@@ a,b; chars[@@ 501],@@ d[@@ 501]; intn,m,@@ i,j,@@ p=0,@@ q; scanf("%lf@@ \n@@ %s@@ \n@@ %s@@ \n",&@@ a,@@ s,@@ d); n@@ =strlen(s); m=strlen(@@ d); if(n@@ !=@@ m){ printf("error"); } elseif(n==@@ m){ for(i=0;i<n-1;i++){ if(s@@ [i]!='A'&&@@ s@@ [i]!='G'&&@@ s@@ [i]!='C'&&@@ s@@ [i]!='T@@ ') {@@ q=0; break;} elseif(@@ s@@ [i]==@@ d@@ [i]) {@@ p@@ ++;} elseif(s[i]@@ !=@@ d@@ [i]) {@@ p=p+@@ 0@@ ;} } b@@ =1@@ .0@@ *p@@ /@@ (@@ n-1); if(b@@ >@@ a@@ &&@@ q@@ !=0@@ ){printf("yes");} elseif(@@ b<@@ a@@ &&@@ q@@ !=0@@ ){@@ printf("no");} elseif(@@ q@@ ==0){@@ printf("error");} } return0; }  
c -1
h -1
int@@ na@@ ,@@ nb@@ ; inta[@@ 10000@@ ],b[@@ 10000@@ ],c[@@ 10000]; voidf1@@ (){ cin>>@@ na@@ >>@@ nb@@ ; for(inti=0;i<=@@ na@@ -1;i++)@@ cin>>a[i]; for(inti=0;i<=@@ nb@@ -1;i++)@@ cin>>b[i]; } voidf2@@ (){ sort@@ (a,@@ a+@@ na@@ ); sort@@ (b,@@ b+@@ nb@@ ); } void@@ f3@@ (){ for(inti=0;i<=@@ na@@ -1;i++)@@ c[i]=a[i]; for(inti=@@ na@@ ;i<=@@ na@@ +@@ nb@@ -1;i++)@@ c[i]=b[i-@@ na@@ ]; } void@@ f4@@ (){ cout<<c[@@ 0]; for(inti=1;i<=@@ na@@ +@@ nb@@ -1;i++)@@ cout<<''<<@@ c[i]; } intmain(){ f1@@ ();@@ f2@@ ();@@ f3@@ ();@@ f4@@ (); return0; }  
c -1
h -1
0

intf@@ (inta,intb) { int@@ c,@@ s=0,@@ i; c=@@ (int)sqrt(@@ a); for(i=b@@ ;i<=@@ c@@ ;i++) { if(a%i==0) s=s+@@ f(a@@ /i,i); } return@@ s@@ +1; } main() { intn,i; scanf("%d",&n); intnum[@@ 1000]; for(i=0;i<n;i++) { scanf("%d",&@@ num[i]); printf("%d\n",@@ f(@@ num@@ [i],@@ 2)); } }  
c -1
h -1
intmain() { intyear,month,day,@@ b,@@ i; for(i=1;i<=@@ 5@@ ;++i) { intcount@@ (int@@ month@@ ,int@@ year@@ ,int@@ day); scanf("%d%d%d",&year,&month,&day); b=@@ count@@ (@@ month,@@ year,@@ day); printf("%d\n",@@ b); } scanf("%d",&b); return0; } intcount@@ (int@@ month@@ ,int@@ year@@ ,int@@ day@@ ) { inta; if((year%4==0&&year%100!=0@@ )||@@ year%400==0) { switch(month) { case(@@ 1@@ ): a=@@ day;break; case(@@ 2)@@ : a@@ =31+@@ day;break; case(@@ 3@@ ): a=@@ 60@@ +day;break; case(@@ 4)@@ : a=@@ 91@@ +day;break; case(@@ 5@@ ): a=@@ 121@@ +day;break; case(@@ 6@@ ): a=@@ 152@@ +day;break; case(@@ 7@@ ): a=@@ 182@@ +day;break; case(@@ 8@@ ): a=@@ 213@@ +day;break; case(@@ 9@@ ): a=@@ 244@@ +day;break; case(@@ 10@@ ): a=@@ 274@@ +day;break; case(@@ 11@@ ): a=@@ 305@@ +day;break; case(@@ 12@@ ): a=@@ 335@@ +day;break; } } else { switch(month) { case(@@ 1@@ ): a=@@ day;break; case(@@ 2)@@ : a@@ =31+@@ day;break; case(@@ 3@@ ): a=@@ 59@@ +day;break; case(@@ 4)@@ : a=@@ 90@@ +day;break; case(@@ 5@@ ): a=@@ 120@@ +day;break; case(@@ 6@@ ): a=@@ 151@@ +day;break; case(@@ 7@@ ): a=@@ 181@@ +day;break; case(@@ 8@@ ): a=@@ 212@@ +day;break; case(@@ 9@@ ): a=@@ 243@@ +day;break; case(@@ 10@@ ): a=@@ 273@@ +day;break; case(@@ 11@@ ): a=@@ 304@@ +day;break; case(@@ 12@@ ): a=@@ 334@@ +day;break; } } return(@@ a); }  
c -1
h -1
0

intmain() { inti,j,k,@@ sum,@@ e=0; inta[@@ 20]; for(;;) { sum=0; for(i=0;;i++) { cin>>a[i]; if(a[i]==0) { i--; break; } else@@ if(a[i]==@@ -1@@ ){@@ e@@ =-@@ 1@@ ;break;} } if(e@@ ==-1)break; for(j=0;j<=i;j++) { for(k=0;k<=@@ i;k++) { if(a[k@@ ]==@@ a[j]@@ *2) { sum@@ ++@@ ;break; } } } cout<<sum<<endl; } return0; }  
c -1
h -1
intmain() { intn,i,j,@@ k@@ =1,@@ a[@@ 20000@@ ]={0},b[@@ 20000@@ ]={0}; scanf("%d",&n); for(i=0;i<n;i++) scanf("%d",&a[i]); b[0]=@@ a[0]; for(i=1;i<n;i++) { for(j=0;j<i;j++) { if(a[i]==a[j]@@ )break; if(j==@@ i@@ -1@@ ){@@ b[k]=@@ a[i]@@ ;k@@ ++;} } } printf("%d",@@ b[0]@@ ); if(k@@ >1) { for(i=1;i<k;i++) printf("%d",b[i]); } return0; }  
c -1
h -1
0

intmain() { inti,j,@@ b,@@ c,d,@@ e,f,@@ g,@@ y,@@ h,@@ k,@@ m,n,@@ t,@@ a,@@ x[@@ 500@@ ][@@ 500]; scanf("%d%d",&a,&b); y=0; for(i=1;i<=@@ a;i++){ for(j=1;j<=@@ b@@ ;j++){ scanf("%d",&@@ x@@ [i][j]); } } for(@@ t=@@ 2@@ ;t@@ <=@@ a+@@ b@@ ;t@@ ++){ for(k=1;k<@@ t@@ ;k++){ if(t@@ -k@@ <=@@ b@@ &&k@@ <=@@ a){ printf("%d\n",@@ x@@ [k@@ ][@@ t@@ -k@@ ]); } } } return0; }  
c -1
h -1
voidmain() { inta[@@ 26],@@ i,j,k,@@ n=@@ 25@@ ,@@ m=0,@@ t,@@ d@@ [26],@@ f@@ [26]; scanf("%d",&n); for(i=1;i<=n;i++) { scanf("%d",&a[i]); d@@ [i]=1; f@@ [i]=1; } for(i=n-1@@ ;i>0;i--) for(k@@ =i+1@@ ;k<=@@ n;k++) { if(a[i]>=@@ a[k]) { for(j=i+1;j<n;j++) if(a[i]>=@@ a[j]&&@@ d@@ [j]>@@ f@@ [k]) f@@ [k]=@@ d@@ [j]; d[i]=@@ d@@ [i]+@@ f@@ [k]; break; } } for(i=n@@ ;i>0;i--) { if(d@@ [i]>@@ m) m=@@ d[i]; } printf("%d",m); }  
c -1
h -1
0

intmain() { int@@ DJT@@ =0; int@@ D@@ [12@@ ]; D@@ [0]=@@ 31; D@@ [1]=@@ 28; D@@ [2@@ ]=31; D@@ [3@@ ]=30; D@@ [4@@ ]=31; D@@ [5@@ ]=30; D@@ [@@ 6@@ ]=31; D@@ [@@ 7@@ ]=31; D@@ [@@ 8@@ ]=30; D@@ [@@ 9@@ ]=31; D@@ [10@@ ]=30; D@@ [11@@ ]=31; intyear,month,day; scanf("%d%d%d",&year,&month,&day); if(year%@@ 400==0) D@@ [1]=@@ D@@ [1]@@ +1; elseif(@@ year%100!=0@@ &&@@ year%@@ 4==0) D@@ [1]=@@ D@@ [1]@@ +1; else D@@ [1]=@@ D@@ [1]; for(inti=0;i<@@ month-1;i++) DJT@@ =@@ DJT@@ +@@ D@@ [i]; DJT@@ =@@ DJT@@ +day; printf("%d\n",@@ DJT@@ ); return0; }  
c -1
h -1
intmain() { inti,j,k,@@ x=0,@@ n,@@ a[@@ 20000]; cin>>n; for(i=0;i<n;i++) { cin>>a[i]; } for(i=0;i<n;i++) { k=0; for(j=0;j<i;j++) { if(a[i]==a[j]) { k++; } } if(k==0) { x++; if(x==1) { cout<<a[i]; } else { cout<<""<<a[i]; } } } return0; }  
c -1
h -1
0

intmain() { inta[16],@@ i,j,k,@@ m@@ =1,@@ num=0; while(cin>>@@ a[0]) { num=0; m=1; if(a[0]==-1)break; else { for(i=1;i<@@ 16@@ ;i++,@@ m@@ ++) { cin>>a[i]; if(a[i]==0)break; } for(j=0;j<m;j++) { for(k=0;k<@@ m;k++) { if(k==@@ j@@ )continue; if((@@ a[k@@ ]==2*@@ a[j]@@ )||(@@ a[j]==2*@@ a[k]@@ )) { num++; } } } cout<<num@@ /2@@ <<endl; } } return0; }  
c -1
h -1
intmain() { int@@ state@@ =0; intn,@@ t,@@ i,j,@@ m,@@ m1,@@ m2@@ ; int@@ leftx@@ ,@@ lefty@@ ,@@ rightx@@ ,@@ righty@@ ; scanf("%d",&n); for(i=0;i<n;i++){ for(j=0;j<n;j++){ scanf("%d",&t); if(t@@ ==0){ if(@@ state@@ ==0){ leftx@@ =i; lefty@@ =j; state@@ =1; }else{ rightx@@ =i; righty@@ =j; } } } } m1@@ =(@@ rightx@@ -@@ leftx@@ -1); m2@@ =(@@ righty@@ -@@ lefty@@ -1); m=@@ m1@@ *@@ m2@@ ; printf("%d",m); return0; }  
c -1
h -1
0

intmain() { inta[16]; inti=0,@@ n=0,@@ j,k,@@ m; for(m@@ =1;@@ ;m++) { i=0; n=0; while(cin>>@@ a[i]) { if(a[i]@@ ==0||@@ a[i]@@ ==-1) { break; } else { i++; } } if(a[0]==-1) { break; } for(j=0;j<@@ i-1;j++) for(k=j+1@@ ;k<=@@ i-1;k++) { if(a[k@@ ]==2*@@ a[j]||a[j]==2*@@ a[k]) { n++; } } cout<<n<<endl; } return0; }  
c -1
h -1
intmain() { intn,@@ t,@@ i,j,@@ m; cin>>n; inta[@@ 20000@@ ]={0}; cin>>t; cout<<@@ t; m=1; a[0]=@@ t; for(i=2;i<=n;i++) { cin>>t; for(j=0;j<m;j++) { if(a[j]==@@ t) break; } if(j@@ >=@@ m) { cout<<'@@ '@@ <<@@ t; a[m@@ ]=t; m++; } } return0; }  
c -1
h -1
0

intmain() { inti,j,@@ t,@@ x,@@ m,n; chars[@@ 300],@@ sub@@ [300],@@ re@@ [300]; gets(s); gets(sub); gets(@@ re); n@@ =strlen(s); m=strlen(@@ sub); x@@ =strlen(@@ re); for(i=0;i<=@@ n-@@ m;i++) { for(j=0@@ ,@@ t@@ =i@@ ;j<@@ m;j++) { if(s[@@ t@@ ]==@@ sub@@ [j]@@ ){@@ t@@ ++;} elsebreak; } if(j==@@ m@@ )break; } if(i==@@ n-@@ m@@ +1@@ ){@@ ;} else { for(t@@ =i+@@ x@@ ;t@@ <@@ n+@@ x@@ -@@ m;@@ t++) { s[@@ t@@ ]=@@ s[@@ t@@ -x@@ +m@@ ]; } for(j=i,@@ t@@ =0;j<@@ i+@@ x@@ ;j++,@@ t++) { s[j]=@@ re@@ [t@@ ]; } } puts(@@ s); getchar(); getchar(); getchar(); return0; }  
c -1
h -1
structstudent { intnum; intchinese; intmath; }; structstudentstu[100000]; int@@ sum[@@ 100000]; intmain(intargc,char*argv[]) { inta,b,c,@@ num1,num2@@ ,@@ num3@@ ; inti,n; scanf("%d",&n); for(i=0;i<n;i++) { scanf("%d%d%d",&stu[i].num,&stu[i].@@ chinese@@ ,&stu[i].math); } for(i=0;i<n;i++) { sum[i]=@@ stu[i].@@ chinese+@@ stu[i].@@ math; } a=@@ sum[@@ 0]; num1@@ =1; if(a<@@ sum@@ [1@@ ]) { b=@@ a; num2@@ =@@ num1@@ ; a=@@ sum@@ [1]; num1@@ =@@ 2; } else { b=@@ sum@@ [1]; num2@@ =@@ 2; } c=0; for(i=2@@ ;i<n;i++) { if(a<@@ sum@@ [i]) { c=@@ b; num3@@ =@@ num2@@ ; b=@@ a; num2@@ =@@ num1@@ ; a=@@ sum[i]; num1@@ =i+1; } else if(b@@ <@@ sum@@ [i]) { c=@@ b; num3@@ =@@ num2@@ ; b=@@ sum[i]; num2@@ =i+1; } else if(c@@ <@@ sum@@ [i]) { c=@@ sum[i]; num3@@ =i+1; } } printf("%d%d\n",@@ num1,@@ a); printf("%d%d\n",@@ num2@@ ,@@ b); printf("%d%d\n",@@ num3@@ ,@@ c); return0; }  
c -1
h -1
0

intmain() { intn,@@ m[@@ 20000],@@ i,j=0,@@ count=0; scanf("%d",&n); for(i=0;i<n;i++) { scanf("%d",&@@ m[i]); for(j=0;j<i;j++) { if(m@@ [i]==@@ m@@ [j]) break; } if(i==@@ j) { if(count@@ ==0) { printf("%d",@@ m[i]); count++; } else printf("%d",@@ m[i]); } } printf("\n"); return0; }  
c -1
h -1
intmain(){ intn,i,j,@@ a1,a2,@@ b1,@@ b2@@ ,@@ m; scanf("%d",&n); intnum[@@ 1000][1000]; for(i=0;i<n;i++) for(j=0;j<n;j++) scanf("%d",&@@ num@@ [i][j]); for(i=0;i<n;i++) for(j=0;j<n;j++) if(num@@ [i][j]==0){ a1@@ =i; a2@@ =j; } for(i=n-1@@ ;i>0;i--) for(j=n-1@@ ;j>0;j--) if(num@@ [i][j]==0){ b1@@ =i; b2@@ =j; } m@@ =(@@ a1@@ -@@ b1@@ -1)*(@@ a2-@@ b2@@ -1); printf("%d",m); return0; }  
c -1
h -1
0

int@@ count; voidf@@ (intn,int@@ min@@ ){ inti; if(n==@@ min@@ ){@@ count@@ ++;@@ return@@ ;} if(n%@@ min@@ !=0@@ ){@@ return@@ ;} for(i=min@@ ;i<=n;i++) f(@@ n/@@ min@@ ,@@ i); } intmain(){ intN@@ ,i,@@ num,@@ j; scanf("%d",&num); for(j=1;j<=@@ num@@ ;j++){ count=0; scanf("%d",&N); for(i=2;i<=@@ N;i++) f(@@ N@@ ,@@ i); printf("%d\n",@@ count); } return0; }  
c -1
h -1
voidmain() { inti,j,n,@@ m,@@ x@@ [26]={0},@@ y=0,@@ z; chara[100@@ ][@@ 4@@ ],b[100@@ ][@@ 10],@@ c; scanf("%d",&n); for(i=0;i<n;i++) { scanf("%s%s",@@ a[i],@@ b[i]); } for(i=0;i<n;i++) { m=strlen(@@ b[i]); for(j=0;j<m;j++) { x[@@ b[i]@@ [j]@@ -65]++; } } for(i=0;i<26;i++) { if(y@@ <@@ x@@ [i]) { y=@@ x[i]; z@@ =i; } } c=@@ z@@ +65; printf("%c\n%d\n",@@ c,@@ y); for(i=0;i<n;i++) { m=strlen(@@ b[i]); y=0; for(j=0;j<m;j++) { if(b[i]@@ [j]==@@ c)@@ y=1; } if(y@@ ==1)@@ printf("%s\n",@@ a[i]); } }  
c -1
h -1
0

intn; structstu { int@@ xh@@ ; int@@ yw@@ ; int@@ sx; int@@ all@@ ; structstu*next; }; structstu*@@ a,*@@ b@@ ,*@@ c,@@ q,@@ t,@@ r; structstu*@@ creat@@ () { structstu*@@ head; structstu*@@ p1,*p2; inti; p1=p2=(struct@@ stu*)malloc(sizeof(structstu)); scanf("%d%d%d",&p1->@@ xh@@ ,&p1->@@ yw@@ ,&p1->@@ sx@@ ); p1->@@ all@@ =p1->@@ yw@@ +p1->@@ sx; head=p1; a=@@ b=@@ c=@@ head; for(i=1;i<n;i++) { p2->next=p1; p2=p1; p1=(struct@@ stu*)malloc(sizeof(structstu)); scanf("%d%d%d",&p1->@@ xh@@ ,&p1->@@ yw@@ ,&p1->@@ sx@@ ); p1->@@ all@@ =p1->@@ yw@@ +p1->@@ sx; if(p1->@@ all@@ >@@ a@@ ->@@ all@@ ) { c=@@ b; b=@@ a; a@@ =p1; } else if(p1->@@ all@@ >b@@ ->@@ all@@ ) { c=@@ b; b@@ =p1; } else { if(p1->@@ all@@ >@@ c@@ ->@@ all@@ ) c@@ =p1; } }@@ p2->next=NULL; returnhead; } voidmain() { structstu@@ *p; a@@ =&@@ q@@ ;@@ b@@ =&@@ t@@ ;c@@ =&@@ r; scanf("%d",&n); p=@@ creat@@ (); printf("%d%d\n%d%d\n%d%d\n",@@ a@@ ->@@ xh@@ ,@@ a@@ ->@@ all@@ ,@@ b@@ ->@@ xh@@ ,@@ b@@ ->@@ all@@ ,@@ c@@ ->@@ xh@@ ,@@ c@@ ->@@ all@@ ); }  
c -1
h -1
intmain() { inta[100][100],@@ i,j,@@ n,@@ q,@@ w,@@ e,@@ r,@@ C@@ ,@@ K@@ ,@@ T@@ ; scanf("%d",&n); for(i=0;i<n;i++) for(j=0;j<n;j++) scanf("%d",&a[i][j]); for(i=0,j@@ =0;j<@@ n,@@ i@@ <n@@ ;j++@@ ,i++) {@@ if(a[i][j]==0) break;} q@@ =i; w@@ =j; for(i=@@ q@@ ,j=@@ w@@ ;j<n;j++) {@@ if(a[i][j]==@@ 255) break;} e@@ =j; for(i=@@ q@@ ,j=@@ w@@ ;i<n;i++) {@@ if(a[i][j]==@@ 255) break;} r@@ =i; C@@ =@@ e@@ -@@ w; K@@ =@@ r@@ -@@ q; T@@ =(@@ C@@ -2)*(@@ K@@ -2); printf("%d\n",@@ T@@ ); return0; }  
c -1
h -1
0

unsigned@@ inth@@ [26],@@ n; int@@ go@@ (int@@ maxh@@ ,int@@ cp@@ ) { intx,y,@@ max; while(@@ h@@ [@@ cp@@ ]>@@ maxh@@ )@@ cp@@ =@@ cp@@ +1; if(h@@ [@@ cp@@ ]@@ ==0)@@ return0; x=@@ go@@ (@@ maxh@@ ,@@ cp@@ +1); maxh@@ =@@ h@@ [@@ cp@@ ]; y@@ =1@@ +@@ go@@ (@@ maxh@@ ,@@ cp@@ +1); max@@ =(@@ x@@ >@@ y)@@ ?@@ x@@ :@@ y; return@@ max; } intmain() { unsigned@@ inti,@@ c,@@ t; scanf("%d",&n); for(i=0;i<n;i++)@@ scanf("%d",&h[i]); h@@ [n@@ ]=0; t=@@ go@@ (@@ 65535@@ ,@@ 0); printf("%d",t); return0; }  
c -1
h -1
intmain(){ inta[@@ 20],@@ temp,@@ n=0,@@ i=1@@ ,j,@@ k; do{ do{ scanf("%d",&@@ temp); a[i]=@@ temp; i++; }while(@@ temp@@ !=0&&@@ temp@@ !=-1); for(j=1;j<@@ i@@ -2@@ ;j++){ for(k=j+1@@ ;k<=@@ i@@ -2@@ ;k++){ if((a[j]@@ /@@ a[k]==@@ 2@@ &&@@ a[j]@@ %@@ a[k]@@ ==0)||(@@ a[k]@@ /@@ a[j]==@@ 2@@ &&@@ a[k]@@ %@@ a[j]@@ ==0)@@ ){ n++; } } } if(temp@@ !=@@ -1){ printf("%d\n",n); } i=1; n=0; }while(@@ temp@@ !=-1); return0; }  
c -1
h -1
0

struct@@ inf { intnum; char@@ wri@@ [27]; struct@@ inf@@ *next; }; voidmain() { intn,i,@@ time@@ [26]={0}; char*@@ pn@@ ; struct@@ inf@@ *head,*@@ p1,*@@ p0@@ ,*p; scanf("%d",&n); p1=@@ head=(struct@@ inf@@ *)malloc(sizeof(struct@@ inf@@ )); for(i=0;i<n;i++) { p0@@ =(struct@@ inf@@ *)malloc(sizeof(struct@@ inf@@ )); scanf("%d%s",&@@ p0->@@ num,@@ p0->@@ wri@@ ); p0@@ ->next=NULL; p1->next=@@ p0; p1=@@ p0; pn@@ =@@ p0->@@ wri@@ ; while(@@ *@@ pn@@ !='\0') { time@@ [@@ *@@ pn@@ -65]++; pn@@ =@@ pn@@ +1; } } intmax=0,@@ k; for(i=0;i<26;i++) { if(@@ time@@ [i]>max) { max=@@ time@@ [i]; k=i; } } printf("%c\n%d\n",@@ k@@ +65@@ ,max); p=head; while(p!=NULL) { pn@@ =p->@@ wri@@ ; while(@@ *@@ pn@@ !='\0') { if(*@@ pn@@ ==@@ k@@ +65) { printf("%d\n",p->num); break; } pn@@ =@@ pn@@ +1; } p=p->next; } }  
c -1
h -1
intmain() { intyear,month,day,@@ n; scanf("%d%d%d",&year,&month,&day); if(month==1) { n=@@ day; } elseif(month==@@ 2) { n=31+@@ day; } elseif((@@ year%@@ 4!=0@@ ||@@ year%@@ 100@@ ==0)@@ &&@@ year%@@ 400@@ !=0) { if(month@@ <@@ 8) { if(month@@ %@@ 2@@ ==0) { n=@@ 31@@ *(@@ month@@ -1)@@ -2@@ -@@ month@@ /2@@ +day; } else n=@@ 31@@ *(@@ month@@ -1)@@ -2@@ -(@@ month@@ -1)@@ /2@@ +day; } else if(month@@ %@@ 2@@ ==0) { n=@@ 31*@@ 4@@ +28@@ +30*2@@ +(@@ month@@ -@@ 8@@ )*@@ 31@@ -(@@ month@@ /2@@ -@@ 5@@ )@@ +day; } else n=@@ 31*@@ 4@@ +28@@ +@@ 60@@ +(@@ month@@ -@@ 8@@ )*@@ 31@@ -@@ ((@@ month@@ -1)@@ /2@@ -@@ 4)@@ +day; } else if(month@@ <@@ 8) { if(month@@ %@@ 2@@ ==0) { n=@@ 31@@ *(@@ month@@ -1)@@ -1@@ -@@ month@@ /2@@ +day; } else n=@@ 31@@ *(@@ month@@ -1)@@ -1@@ -(@@ month@@ -1)@@ /2@@ +day; } else if(month@@ %@@ 2@@ ==0) { n=@@ 31*@@ 4@@ +29@@ +30*2@@ +(@@ month@@ -@@ 8@@ )*@@ 31@@ -(@@ month@@ /2@@ -@@ 5@@ )@@ +day; } else n=@@ 31*@@ 4@@ +29@@ +@@ 60@@ +(@@ month@@ -@@ 8@@ )*@@ 31@@ -@@ ((@@ month@@ -1)@@ /2@@ -@@ 4)@@ +day; printf("%d\n",n); return0; }  
c -1
h -1
0

intsum=0,@@ g,@@ f; int@@ divide@@ (int@@ chushu@@ ,int@@ a) { inti; for(i=@@ chushu@@ ;i<=a;i++) { if(a%i==0) { f=@@ a/@@ i; if(f@@ >1) {@@ g@@ =i;@@ divide@@ (@@ g,@@ f@@ );} else { sum++; } } }@@ returnsum; } intmain() { intn=0; cin>>n; int@@ p=0; for(p=0;p@@ <n;p++) { int@@ b=0,@@ c=@@ 2; cin>>@@ b; sum=0; cout<<@@ divide@@ (c,@@ b@@ )<<endl; } return0; }  
c -1
h -1
intmain() {@@ inta[100][100@@ ];@@ inti,j,@@ q,@@ s=0; intm,n,@@ k; scanf("%d",&k); for(q=0;q@@ <k;@@ q++) {@@ s=0;@@ scanf("%d%d",&m,&n); for(i=0;i<m;i++) {@@ for(j=0;j<n;j++) {@@ scanf("%d",@@ *(a+i)@@ +j@@ );}} for(i=0;i<n;i++) s=s@@ +*(@@ *(a+@@ 0)@@ +i); for(i=1;i<m;i++) s=s@@ +*(@@ *(a+i)@@ +n-1); for(i=1;i<m;i++) s=s@@ +*(@@ *(a+i)@@ +@@ 0); for(i=1;i<n-1;i++) s=s@@ +*(@@ *(a@@ +m-1)@@ +i); printf("%d\n",s@@ );}}  
c -1
h -1
0

struct@@ score { charid[10]; charname[26]; }@@ book[1000]; intmain() { inti,j,k,n,@@ num,@@ max=0; char@@ maxname@@ ; scanf("%d",&num); for(i=0;i<@@ num@@ ;i++){ scanf("%s",@@ book[i].@@ id); scanf("%s",@@ book[i].name); } for(i=0;i<26;i++){ n=0; for(j=0;j<@@ num@@ ;j++){ for(k=0;k<26@@ ;k++){ if(@@ book[j].@@ name@@ [k]==@@ (@@ 'A'+@@ i@@ ))@@ n@@ +=1; } } if(n@@ >max){ maxname@@ ='A'+i; max=@@ n; } } printf("%c\n%d\n",@@ maxname@@ ,max); for(j=0;j<@@ num@@ ;j++){ for(k=0;k<26@@ ;k++){ if(@@ book[j].@@ name@@ [k]==@@ maxname@@ )@@ printf("%s\n",@@ book[j].@@ id@@ );@@ ; } } return0; }  
c -1
h -1
intmain() { structstudent { char@@ NUM@@ [100000]; int@@ Ma@@ ; int@@ Ch@@ ; }@@ stu@@ ; intn,i,@@ x,@@ max1,@@ max2@@ ,max3@@ ,@@ m1,@@ m2@@ ,@@ m3@@ ; max1=@@ max2=@@ max3@@ =0; m1=@@ m2=@@ m3@@ =0; scanf("%d",&n); for(i=1;i<=n;i++) { scanf("%s%d%d",@@ stu.@@ NUM@@ ,&@@ (stu@@ .@@ Ma@@ )@@ ,&@@ (stu@@ .@@ Ch@@ )); x=@@ stu.@@ Ma@@ +@@ stu.@@ Ch@@ ; if(x>@@ max1@@ ) { max3=max2; max2=@@ max1; max1=@@ x; m3=@@ m2@@ ; m2=@@ m1@@ ; m1@@ =i; } elseif(x@@ ==@@ max1@@ ) { max3=max2; max2=@@ max1; max1=@@ max1; m3=@@ m2@@ ; m2@@ =i; } elseif(x@@ <@@ max1@@ &&@@ x@@ >@@ max2@@ ) { max3=max2; max2=@@ x; m3=@@ m2@@ ; } elseif(x@@ ==@@ max2@@ ) { max3=max2; m3@@ =i; } elseif(x@@ <@@ max2@@ &&@@ x@@ >@@ max3@@ ) { max3=@@ x; m3@@ =i; } } printf("%d%d\n",@@ m1,@@ max1@@ ); printf("%d%d\n",@@ m2@@ ,@@ max2@@ ); printf("%d%d\n",@@ m3@@ ,max3@@ ); return0; }  
c -1
h -1
0

intmain(){ inti,j,@@ row,col,@@ r,@@ c,@@ num,@@ ro@@ ,@@ co@@ ; inta[100][100]; scanf("%d%d",&row,&col); for(i=1;i<=@@ row;i++){ for(j=1;j<=@@ col@@ ;j++){ scanf("%d",&a[i][j]); } } r@@ =1; c=1; while(1){ ro@@ =@@ r; co@@ =@@ c; while(1){ printf("%d\n",a[@@ ro@@ ][@@ co@@ ]); ro@@ ++; co@@ --; if(@@ ro@@ >@@ row@@ ||@@ co@@ <=@@ 0@@ ){ break; } } if(c==@@ col@@ &&@@ r@@ ==@@ row@@ ){ break; } if(c@@ <col@@ ){ c++; } else{ r++; } } return0; }  
c -1
h -1
intmain() { inta[16],@@ i,j,k,@@ h,@@ n; for(h@@ =0;@@ ;@@ h++) {@@ n=0; for(i=0;i<16;i++) { scanf("%d",&a[i]); if(a[i]==0) break; } if(a[0]==-1) {break;} for(j=0;j<i;j++) {@@ for(k=0;k<i;k++) {if((@@ a[k]@@ /@@ a[j]@@ )==@@ 2@@ &&(@@ a[k]@@ %@@ a[j])@@ ==0) n=n+1; else@@ n=@@ n; } } printf("%d\n",n); if(a[0]==-1) {break;} } return0; }  
c -1
h -1
0

int@@ pp@@ [26]={0}; struct@@ st { charname@@ [27]; intnum; struct@@ st@@ *next; }; struct@@ st@@ *creat@@ (intm) { struct@@ st@@ *head,*p1,*p2; inti,j; p1=(struct@@ st@@ *)malloc(sizeof(struct@@ st@@ )); scanf("%d%s",&p1->num,p1->name); for(j=0;;j++) { if(@@ isupper@@ (@@ p1->name@@ [j]@@ ))@@ pp@@ [@@ p1->name@@ [j]@@ -65]++; elsebreak; } p2=p1; head=p1; for(i=1;i<m;i++) { p1=(struct@@ st@@ *)malloc(sizeof(struct@@ st@@ )); scanf("%d%s",&p1->num,p1->name); for(j=0;;j++) { if(@@ isupper@@ (@@ p1->name@@ [j]@@ ))@@ pp@@ [@@ p1->name@@ [j]@@ -65]++; elsebreak; } p1->next=NULL; p2->next=p1; p2=p1; } return(head); } voidmain() { struct@@ st@@ *creat@@ (); struct@@ st@@ *head,*p; intn,i,@@ max@@ ,j; scanf("%d",&n); head=creat(n); p=head; max=0; for(i=1;i<26;i++) if(@@ pp@@ [i]>@@ pp@@ [max@@ ])@@ max=i; printf("%c\n%d\n",@@ max@@ +65@@ ,@@ pp@@ [max@@ ]); while(p) { for(j=0;;j++) { if(@@ isupper@@ (p->@@ name@@ [j]@@ )) { if(p->@@ name[j]==@@ (@@ max@@ +65@@ ))@@ printf("%d\n",p->num); } elsebreak; } p=p->next; } }  
c -1
h -1
main() { inty,m,d,@@ i,@@ n=0; inta[@@ 12@@ ]; a[0]=@@ 31; a[1]=@@ 28; a[2@@ ]=31; a[@@ 3@@ ]=30; a[@@ 4@@ ]=31; a[@@ 5@@ ]=30; a[@@ 6@@ ]=31; a[@@ 7@@ ]=31; a[@@ 8@@ ]=30; a[@@ 9@@ ]=31; a[@@ 10@@ ]=30; a[@@ 11@@ ]=31; scanf("%d%d%d",&y,&m,&d); if(y%@@ 4==0&&y%100!=0@@ )@@ a[1]=29; if(y%@@ 400==0)@@ a[1]=29; for(i=0;i<m@@ -1;i++)@@ n+=@@ a[i]; n=n+@@ d; printf("%d",n); }  
c -1
h -1
0

intmain() { intk,@@ a[100][100],@@ i,j,@@ m,n,@@ sum=0; cin>>k; for(intl@@ =0;@@ l<@@ k;@@ l++) { cin>>m>>n; for(i=0;i<m;i++) for(j=0;j<n;j++) cin>>a[i][j]; for(j=0;j<n;j++) { sum=sum+@@ a[0]@@ [j]+@@ a[m-1][j]; if(m@@ -1@@ ==0) sum=sum-@@ a[m-1][j]; } for(i=1;i<m-1;i++) { sum=sum+@@ a[i][0]+@@ a[i][n-1]; if(@@ n-1@@ ==0) sum=sum-@@ a[i][n-1]; } cout<<sum<<endl; sum=0; } return0; }  
c -1
h -1
intmain() { intn,i,j,@@ i1@@ ,@@ j1@@ ,@@ i2@@ ,@@ j2@@ ,@@ x,@@ p=1; scanf("%d",&n); for(i=1;i<=n;i++) for(j=1;j<=n;j++) { scanf("%d",&x); if(p@@ )@@ if(x@@ ==0){@@ i1@@ =i;@@ j1@@ =j@@ ;p@@ =0;@@ }; if(!@@ p@@ )@@ if(x@@ ==0){@@ i2@@ =i;@@ j2@@ =j@@ ;@@ }; }; printf("%d\n",@@ (@@ i2@@ -@@ i1@@ -1)*(@@ j2@@ -@@ j1@@ -1)); return0; }  
c -1
h -1
0

int@@ cmp@@ (constvoid*a,constvoid*@@ b) { return(@@ *(int*)@@ a@@ -*@@ (int*)@@ b); } intmain() { intn,k,@@ num[@@ 1000]={0}; cin>>n>>k; for(inti=0;i<n;i++){ cin>>num[i]; } qsort@@ (num,@@ n,@@ sizeof(int),@@ cmp@@ ); if(k@@ >@@ num@@ [0]+@@ num[@@ n-1@@ ]){ cout<<"no"; return0; } int@@ p=0; for(inti=0;i<@@ n@@ ;i++,@@ p++){ intsum; for(intj=i+1@@ ;j<@@ n;j++){ sum=@@ num@@ [i]+@@ num@@ [j]; if(sum@@ ==k){ cout<<"yes"; return0; } } } if(p==@@ n){ cout<<"no"; } return0; }  
c -1
h -1
intmain() { intn,i,j; int@@ k=1; inta[20000]; scanf("%d",&n); for(i=1;i<=n;i++) { scanf("%d",&@@ a[i@@ -1]); for(j=0;j<=i-1;j++) { if(i@@ -1@@ ==0){@@ k=k@@ +1;@@ a[0]=@@ a[0]@@ ;} else{ if(a[j]==@@ a[i-1]@@ &&j@@ !=@@ i@@ -1)break; elseif(@@ a[j]==@@ a[i-1]@@ ){@@ a[k@@ -1@@ ]=@@ a[i-1]@@ ;k@@ =k@@ +1;} } } } for(i=0;i<=@@ k-@@ 3@@ ;i++)@@ printf("%d",a[i]); printf("%d",@@ a[k@@ -2@@ ]); return0; }  
c -1
h -1
0

introw,col,@@ Mat@@ [@@ 111@@ ][@@ 111@@ ]; void@@ Out@@ (inti,int@@ j) { cout<<@@ *(*(@@ Mat@@ +i)@@ +j)<<endl; if(i==@@ row-1@@ ||j@@ ==0)@@ return; else@@ Out@@ (i@@ +1@@ ,j@@ -1); } intmain() { cin>>row>>col; for(inti=0;i<row;i++) for(intj=0;j<col;j++) cin>>@@ *(*(@@ Mat@@ +i)@@ +j); for(inti=0;i<@@ col;i++) Out@@ (@@ 0,@@ i); for(inti=1;i<@@ row;i++) Out@@ (i,@@ col@@ -1); }  
c -1
h -1
intmain(intargc,char*argv[]) { structpatient{ charID[10]; intage; }@@ pat@@ [100],@@ old@@ [100]; intn,i,j,@@ k=0,@@ a; charb[@@ 10]; scanf("%d",&n); for(i=0;i<n;i++){ scanf("%s%d",@@ pat[i].@@ ID,&@@ pat@@ [i].age); if(pat@@ [i].age>=60){ strcpy(old@@ [k].@@ ID,@@ pat[i].@@ ID); old@@ [k@@ ].age=@@ pat@@ [i].age; k++; } } for(i=0;i<@@ k@@ -1;i++){ for(j=0;j<@@ k-1@@ -i;j++){ if(old@@ [j].age@@ <@@ old@@ [j+1@@ ].age){ a=@@ old@@ [j].@@ age; old@@ [j].age@@ =@@ old@@ [j+1].@@ age; old@@ [j+1@@ ].age=@@ a; strcpy(@@ b,@@ old@@ [j].@@ ID); strcpy(old@@ [j].@@ ID,@@ old@@ [j+1].@@ ID); strcpy(old@@ [j+1].@@ ID,@@ b); } } } for(i=0;i<k;i++) printf("%s\n",old@@ [i].ID); for(i=0;i<n;i++){ if(pat@@ [i].age@@ <60){ printf("%s\n",@@ pat[i].@@ ID); } } return0; }  
c -1
h -1
0

inta[100][100],@@ r,@@ c; int@@ judge@@ (inti,int@@ c) { if(i@@ -c@@ >=0@@ )@@ return@@ i@@ -c@@ +1; else@@ return0; } intmain() { cin>>@@ r@@ >>@@ c; for(inti=0;i<@@ r@@ ;i++){ for(intj=0;j<@@ c@@ ;j++){ cin>>@@ *(*(a+i)@@ +j@@ );}} for(inti=0;i<@@ r@@ +c@@ -1;i++){ for(intj=@@ judge@@ (i,@@ c)@@ ;j<=@@ i@@ &&j@@ <@@ r@@ &&i@@ -j@@ <@@ c@@ ;j++){ cout<<*(*(a@@ +j)@@ +i-j@@ )@@ <<endl@@ ;}} return0; }  
c -1
h -1
voidmain() { intk; inti; intj; intt; int*@@ m; int*@@ *@@ s; scanf("%d",&k); m=@@ (int*)malloc(@@ k@@ *sizeof(int)); s=@@ (int@@ **@@ )@@ malloc(@@ k@@ *sizeof(int@@ *@@ )); for(i=0;i<k;i++) { s[i]=@@ (int*)malloc(@@ (i@@ +1)@@ *sizeof(int)); } for(i=0;i<k;i++) { scanf("%d",&@@ m[i]); } for(i=0;i<k;i++) { if(m@@ [i]>=@@ m@@ [k-1]@@ )@@ s@@ [k-1]@@ [i]=1; else@@ s@@ [k-1]@@ [i]=0; } for(j=k@@ -2@@ ;j>=0;j--) { for(i=0;i<=@@ j@@ ;i++) { if(m@@ [j]>@@ m@@ [i]) { t=0; t+=@@ s@@ [j+1]@@ [i]; } else { t=1; t+=@@ s@@ [j+1]@@ [j]; } if(t@@ <@@ s@@ [j+1]@@ [i])@@ t=@@ s@@ [j+1]@@ [i]; s[j]@@ [i]=@@ t; } } t=0; for(i=0;i<k;i++) { if(s@@ [i]@@ [i]>@@ t)@@ t=@@ s[i]@@ [i]; } printf("%d",t); }  
c -1
h -1
0

intnum=0; intsum@@ (inta,int@@ i) { if(a==1) { num++; } else { while(i<=@@ a) { if(a%i==0) { sum@@ (a/i,i); } i++; } } returnnum; } intmain() { inta,@@ t@@ ,j,@@ i,@@ count; cin>>t; for(j=0;j<@@ t;j++) { count@@ =1; cin>>a; i=@@ 2; while(i<=@@ (a@@ /2@@ )) { if(a%i==0) { num=0; sum@@ (a/i,i); count=@@ count@@ +@@ num; } i++; } cout<<count<<endl; } return0; }  
c -1
h -1
inta[100],b[100],@@ n,m,@@ i,j,@@ t; voidshuru@@ (intp@@ ,int@@ q) { for(i=0;i<p@@ ;i++)@@ scanf("%d",&a[i]); for(i=0;i<@@ q@@ ;i++)@@ scanf("%d",&b[i]); } voidshuchu@@ (intp@@ ,int@@ q) { for(i=0;i<p@@ ;i++)@@ printf("%d",a[i]); for(i=0;i<@@ q@@ -1;i++)@@ printf("%d",b[i]); printf("%d",b[@@ q@@ -1]); } voidpaixu@@ (intp@@ ,int@@ c[@@ ]) { for(i=0;i<p@@ ;i++) for(j=0;j<i;j++) if(c@@ [i]<@@ c@@ [j]) { t=@@ c[i]; c[i]=@@ c[j]; c[j]=@@ t; } } main() { scanf("%d%d",&n,&m); shuru@@ (n,@@ m); paixu@@ (n,@@ a); paixu@@ (m,@@ b); shuchu@@ (n,@@ m); }  
c -1
h -1
0

intmain(){ double@@ r; scanf("%lf",&@@ r); charzfc@@ [500]; char@@ jiyin@@ [500]; scanf("%s",@@ zfc); scanf("%s",@@ jiyin@@ ); intn=0; inti,k,@@ L@@ ,@@ N; for(i=0;@@ zfc@@ [i]!='\0';i++){ if(@@ zfc@@ [i+1@@ ]==@@ '\0'@@ ){ L@@ =i; } } for(k=0;@@ jiyin@@ [k]@@ !='\0'@@ ;k++){ if(@@ jiyin@@ [k+1@@ ]==@@ '\0'@@ ){ N@@ =k; } } if(@@ L@@ !=@@ N@@ ){ printf("error"); }else{ for(i=0;@@ zfc@@ [i]!='\0';i++){ if(@@ zfc@@ [i]!='A'&&@@ zfc@@ [i]!='T'&&@@ zfc@@ [i]!='C'&&@@ zfc@@ [i]!='G'){ printf("error"); return0; } } for(i=0;@@ jiyin@@ [i]!='\0';i++){ if(@@ jiyin@@ [i]!='A'&&@@ jiyin@@ [i]!='T'&&@@ jiyin@@ [i]!='C'&&@@ jiyin@@ [i]!='G'){ printf("error"); return0; } } for(i=0;@@ zfc@@ [i]!='\0';i++) { if(@@ zfc@@ [i]==@@ jiyin@@ [i]) { n++; } } if(n@@ *1.0/@@ L@@ >@@ r@@ ) { printf("yes"); }else { printf("no"); } } return0; }  
c -1
h -1
intmain(){ inti,k,@@ n,m,@@ L@@ ,@@ l1,l2@@ ; chars[@@ 300],@@ a[@@ 300],b[@@ 300]; scanf("%s",@@ s@@ );@@ scanf("%s",@@ a);@@ scanf("%s",b); L@@ =strlen(@@ s@@ );@@ l1=strlen(@@ a);@@ l2@@ =strlen(b); n=0; for(i=0;i<@@ L@@ ;i++){ if(a[0]@@ ==@@ s[i]@@ ){ n++; for(k=1;k<@@ l1@@ ;k++){ if(s@@ [i+k@@ ]==@@ a[k]@@ ){@@ n@@ ++;@@ }else{@@ n@@ =0;@@ break;} } }@@ if(n==@@ l1@@ ){@@ break;} }@@ for(k=0;k<@@ i@@ ;k++@@ ){@@ printf("%c",@@ s[k]@@ );} for(k=0@@ ;i@@ !=@@ L@@ &&k@@ <@@ l2@@ ;k++){ printf("%c",@@ b[k@@ ]); }@@ for(k=i+@@ l1@@ ;k<@@ L@@ ;k++){ printf("%c",s@@ [k]); } return0; }  
c -1
h -1
0

intmain() { intsz[@@ 16],@@ i,@@ a,@@ num=0,@@ no@@ =0,@@ j; while(1) { scanf("%d",&a); if(a@@ ==-1) return0; elseif(a@@ >0) { sz[@@ no@@ ]=a; no@@ ++; } elseif(a@@ ==0) { for(i=0;i<@@ no@@ ;i++) { for(j=0;j<@@ no@@ ;j++) if(sz@@ [i]==@@ 2*@@ sz@@ [j]) num++; } printf("%d\n",num); no@@ =0; num=0; } } return0; }  
c -1
h -1
intmain() { inti,j,k,@@ a[@@ 16],@@ num; while(@@ scanf("%d",&@@ a[0]@@ ),@@ a[0]@@ +1) { i=1; num=0; while(@@ scanf("%d",&a[i]@@ ),@@ a[i]) { i++; } for(j=0;j<i;j++) { for(k=j+1;k<@@ i;k++) { if(a[j]==2*@@ a[k]@@ ||@@ a[k@@ ]==2*@@ a[j]) { num++; } } } printf("%d\n",num); } return0; }  
c -1
h -1
1


intmain() { char@@ fir@@ [1000]; char@@ sec@@ [1000]; double@@ l1,l2@@ ; inti,j,k; int@@ flag=0; double@@ m=0,@@ x,@@ n; scanf("%lf",&n); scanf("%s",&@@ fir@@ ); scanf("%s",&@@ sec@@ ); l1=strlen(@@ fir@@ ); l2=strlen(@@ sec@@ ); for(i=0;i<l1;i++) { if(@@ fir@@ [i]!='A'&&@@ fir@@ [i]!='T'&&@@ fir@@ [i]!='C'&&@@ fir@@ [i]!='G') { flag@@ ++; } } for(i=0;i<@@ l2@@ ;i++) { if(@@ sec@@ [i]!='A'&&@@ sec@@ [i]!='G'&&@@ sec@@ [i]!='C'&&@@ sec@@ [i]!='T@@ ') { flag@@ ++; } } if(l1!=l2@@ ) { flag@@ ++; } if(flag@@ >0) { printf("error"); } else { for(i=0;i<l1;i++) { if(@@ fir@@ [i]==@@ sec@@ [i]) { m++; } } x=@@ m/@@ l1; if(x@@ >n) { printf("yes"); } else { printf("no"); } } return0; }  
c -1
h -1
intmain() { chars[256],@@ w@@ [256],@@ r@@ [256]; int@@ l1,l2@@ ,i,j,@@ count,@@ k=0; scanf("%s%s%s",@@ w,@@ s,@@ r); l1@@ =strlen(s); l2=strlen(@@ w); for(i=0;i<@@ l2@@ -@@ l1@@ +1;i++) { if(w@@ [i]==@@ s@@ [0]) { count@@ =1; for(j=i+1;j<@@ i+@@ l1@@ ;j++) { if(w@@ [j]!=@@ s@@ [j-i@@ ]) break; else@@ count++; } if(count==@@ l1@@ ) { k=1; break; } } } if(k==1) { for(j=i;j<i+@@ l1@@ ;j++) { w@@ [j]=@@ r@@ [j-i@@ ]; } } printf("%s\n",@@ w); }  
c -1
h -1
0

int@@ func@@ (intm,int@@ q) { intb[100@@ ]; inti,j,@@ k=0,@@ p=0,@@ sum=1; for(j=@@ q@@ ;j<=@@ m;j++) { if(j@@ *@@ j@@ >@@ m) { p=@@ k; break; } if(m@@ %j==0) { b[k]=@@ j; k++; } } if(k@@ >2@@ ||@@ p@@ !=0&&@@ m@@ !=@@ 2) { for(i=0;i<p@@ ;i++) { sum+=@@ func@@ (m@@ /@@ b[i]@@ ,@@ b[i]); } return(@@ sum); } else return(1); } main() { inti,j,@@ k=0,@@ n,m,@@ b[100@@ ]={0},@@ a[100@@ ]={0}; scanf("%d",&n); for(i=0;i<n;i++) { scanf("%d",&m); b[i]=@@ func@@ (m,@@ 2); } for(j=0;j<i;j++) { printf("%d\n",@@ b[j]); } }  
c -1
h -1
int@@ numcount@@ =0; void@@ divide@@ (int@@ num,int@@ x) { inti; if(num@@ ==1) numcount@@ ++; for(i=x@@ ;i<=@@ num;i++) { if(num@@ %i==0) divide@@ (@@ num@@ /i,i); } } intmain() { intn,@@ num,@@ i; int@@ first=@@ 2; int@@ ans@@ [100]; cin>>n; for(i=1;i<=n;i++) { cin>>num; divide@@ (num,@@ first@@ ); ans@@ [i]=@@ numcount@@ ; numcount@@ =0; } for(i=1;i<=n;i++) cout<<ans@@ [i]<<endl; return0; }  
c -1
h -1
1


intmain() { inti,@@ t@@ ,j,@@ k,@@ s=0; inta[@@ 17@@ ]; for(@@ scanf("%d",&@@ a[1]@@ );@@ a[1]@@ !=@@ -1;@@ scanf("%d",&@@ a[1]@@ )) { for(i=2@@ ;@@ ;i++) { scanf("%d",&a[i]); if(a[i]==0) { t@@ =i-1; break; } } for(j=1;j<=@@ t;j++) { for(k=1;k<=@@ t@@ ;k++) { if(a[j]==2*@@ a[k]) s=s+1; } } printf("%d\n",s); s=0; } return0; }  
c -1
h -1
intmain() { inta[100]; int@@ i@@ =1,@@ count=0; scanf("%d",&a[0]); while(@@ a[i-1]@@ !=0) { scanf("%d",&a[i]); i++; } i@@ =i@@ -2@@ ; while(@@ a[0]@@ !=-1) { count=0; intj,@@ k=0; for(j=0;j<i;j++) { for(k=j+1;k<@@ i;k++) { if(a[k@@ ]==2*@@ a[j]||a[j]==2*@@ a[k]) { count++; } } } printf("%d\n",@@ count); scanf("%d",&a[0]); if(a[0]==-1) { break; } i=1; while(@@ a[i-1]@@ !=0) { scanf("%d",&a[i]); i++; } i@@ =i-1; } return0; }  
c -1
h -1
1


main() { chars[256],@@ sub[256],@@ re@@ [256],@@ sl@@ [256]; intn,m,@@ i,j,k,@@ e,@@ l; scanf("%s",&@@ s); scanf("%s",&@@ sub); scanf("%s",&@@ re); l=0; while(@@ s[@@ l@@ ]!=@@ '\0')@@ l++; m=0; while(@@ sub@@ [m@@ ]!=@@ '\0')@@ m++; n=0; while(@@ re@@ [n@@ ]!=@@ '\0')@@ n++; for(i=0;i<l;i++) { k=1; for(j=0;j<m;j++) if(s@@ [i+j]!=@@ sub@@ [j]) { k=0; break; } if(k==1) { e@@ =i; break; } } if(k==1) { for(i=@@ e+@@ m-1@@ ;@@ s[i]@@ !='\0'@@ ;i++)@@ sl@@ [i]=@@ s[i]; sl@@ [i+1@@ ]='\0'; for(i=0;i<n;i++) s[@@ e@@ +i]=@@ re@@ [i]; for(i=@@ e@@ +n;@@ sl@@ [i-@@ n+@@ m@@ ]@@ !='\0';i++) s[i]=@@ s@@ [i-@@ n+@@ m]; s@@ [i+1@@ ]='\0'; } for(i=0;s[i]@@ !='\0'@@ ;i++)@@ printf("%c",s[i]); printf("\n"); getchar(); getchar(); }  
c -1
h -1
intmain() { intn; scanf("%d",&n); struct@@ pe@@ { charid@@ [100]; inty; }@@ *p; p=(struct@@ pe@@ *)malloc(sizeof(@@ pe@@ )*n); inti,j; for(i=0;i<n;i++){ scanf("%s%d",@@ (p+i)->@@ id,&@@ (p+i)->@@ y); } struct@@ pe@@ tp@@ ; for(i=n-1@@ ;i>0@@ ;i--){ for(j=0;j<i;j++){ if((@@ p@@ +j+1)@@ ->@@ y@@ >=60@@ &&(@@ p@@ +j)@@ ->@@ y@@ <@@ (p@@ +j+1)@@ ->@@ y){ tp@@ =p@@ [j+1]; p@@ [j+1]=@@ p@@ [j]; p@@ [j]=@@ tp@@ ; } } } for(i=0;i<n;i++){ printf("%s\n",@@ (p+i)->@@ id); } return0; }  
c -1
h -1
0

voidsort@@ (intarray[],int@@ n) {@@ inti,j,k,@@ t; for(i=0;i<n-1;i++) {@@ k=i; for(j=i+1;j<n;j++) if(array@@ [j]<@@ array@@ [k]@@ )@@ k=j; t=@@ array@@ [k]@@ ;@@ array@@ [k]=@@ array@@ [i];@@ array@@ [i]=@@ t; } } void@@ link@@ (int@@ array1@@ [],int@@ array2@@ [],int@@ m,intn) {inti; for(i=m;i<@@ m+n;i++) array1@@ [i]=@@ array2@@ [i-@@ m]; } main() {@@ inta[@@ 40@@ ],b[@@ 20],@@ n1,n2,@@ i; scanf("%d%d",&n1,&n2); for(i=0;i<n1;i++) scanf("%d",&a[i]); for(i=0;i<n2;i++) scanf("%d",&b[i]); sort@@ (a,@@ n1); sort@@ (b,@@ n2); link@@ (a,b,@@ n1,n2@@ ); for(i=0;i<n1@@ +@@ n2@@ -1;i++) printf("%d",a[i]); if(i==@@ n1+n2@@ -1)@@ printf("%d",a[i]); }  
c -1
h -1
intmain(intargc,char*argv[]) { intyear,month,day,@@ x; scanf("%d%d%d",&year,&month,&day); if((year%4==0&&year%100!=0)||(year%400==0)) { if(month==1) x=@@ day; elseif(month==@@ 2) x=31+@@ day; elseif(month==@@ 3) x=31+29@@ +day; elseif(month==@@ 4) x=31+29@@ +31+@@ day; elseif(month==@@ 5) x=31+29@@ +31+30+day; elseif(month==@@ 6) x=31+29@@ +31+30+31+@@ day; elseif(month==@@ 7) x=31+29@@ +31+30+31+30@@ +day; elseif(month==@@ 8) x=31+29@@ +31+30+31+30+31+@@ day; elseif(month==@@ 9) x=31+29@@ +31+30+31+30+31+31+@@ day; elseif(month==@@ 10) x=31+29@@ +31+30+31+@@ 31+30@@ +31+30+day; elseif(month==@@ 11) x=31+29@@ +31+30+31+30+31+31+30+31+@@ day; elseif(month==@@ 12) x=31+29@@ +30@@ +30@@ +31+30+31+@@ 31+30@@ +31+30+day; } else { if(month==1) x=@@ day; elseif(month==@@ 2) x=31+@@ day; elseif(month==@@ 3) x=31+28@@ +day; elseif(month==@@ 4) x=31+28@@ +31+@@ day; elseif(month==@@ 5) x=31+28@@ +31+30+day; elseif(month==@@ 6) x=31+28@@ +31+30+31+@@ day; elseif(month==@@ 7) x=31+28@@ +31+30+31+30@@ +day; elseif(month==@@ 8) x=31+28@@ +31+30+31+30+31+@@ day; elseif(month==@@ 9) x=31+28@@ +31+30+31+30+31+31+@@ day; elseif(month==@@ 10) x=31+28@@ +31+30+31+@@ 31+30@@ +31+30+day; elseif(month==@@ 11) x=31+28@@ +31+30+31+30+31+31+30+31+@@ day; elseif(month==@@ 12) x=31+28@@ +30@@ +30@@ +31+30+31+@@ 31+30@@ +31+30+day; } printf("%d\n",x); return0; }  
c -1
h -1
0

intmain(){ intk,m,n,i,j,@@ l,@@ sum=0; inta[100][100]; intb[@@ 1000]; scanf("%d\n",&@@ k); for(i=0;i<k;i++){ scanf("%d%d",&m,&n); for(j=0;j<m;j++){ for(l=0;l<n;@@ l++){ scanf("%d",&a[j]@@ [l]); } } if((@@ m@@ !=1@@ )&&(@@ n@@ !=1@@ )){ for(l=0;l<n;@@ l++){ sum=sum+@@ a[0][@@ l@@ ]; sum=sum+@@ a[m-1][@@ l@@ ]; } for(j=1;j<@@ m-1@@ ;j++){ sum=sum+@@ a[j]@@ [0]; sum=sum+@@ a[j]@@ [n-1]; } b[i]=@@ sum; sum@@ =0;} elseif(m@@ =1@@ ){ for(l=0;l<n;@@ l++){ sum=sum+@@ a[0][@@ l@@ ]; b[i]=@@ sum; sum=0; } } elseif(n@@ =1@@ ){ for(j=0;j<m;j++){ sum=sum+@@ a[j]@@ [0]; b[i]=@@ sum; sum=0; } } } for(i=0;i<k;i++){ printf("%d\n",@@ b[i]); } return0; }  
c -1
h -1
intmain() { intn; cin>>n; inta[20000]; inti; for(i=0;i<n;i++) cin>>a[i]; intj; intk; for(i=0;i<n;i++) { j@@ =i+1; while(j@@ <n) if(a[i]==a[j]) { n--; for(k=j@@ ;k<@@ n;k++) a[k]=a[k@@ +1]; } else@@ j++; } for(i=0;i<n-1;i++) cout<<a[i]<<""; cout<<a[@@ n-1]; return0; }  
c -1
h -1
0

voidf@@ (inti,int@@ m); intsum; intmain() { intn,i,@@ m,@@ k; scanf("%d",&n); for(i=0;i<n;i++) {@@ sum=1; scanf("%d",&m); f(@@ 2,@@ m); printf("%d\n",sum); } } voidf@@ (inti,int@@ m) { intk,@@ s; s=@@ (int)sqrt(@@ m); for(k=i@@ ;k<=@@ s@@ ;k++) { if(m@@ %@@ k@@ ==0) { sum++; f(@@ k,@@ m/@@ k); } } }  
c -1
h -1
intmain() { inti=0,j=0,@@ s=0; int@@ lena@@ ,@@ lenb@@ ,@@ x,y; inta[16@@ ]={0}; intb[@@ 20@@ ]={0}; while(1) { while(@@ scanf("%d",&a[i]@@ )) { if((@@ a[i]@@ ==0)||(@@ a[i]==@@ -1)) break; else { i++; continue; } } if(a[0]==-1) break; else { lena@@ =i; for(x=0;x@@ <@@ lena@@ ;x@@ ++) { for(@@ y=@@ x@@ +1;@@ y@@ <=@@ lena@@ ;y@@ ++) { if((@@ a[x@@ ]==2*@@ a[@@ y@@ ]@@ )||(@@ a[@@ y@@ ]==2*@@ a[x@@ ]@@ )) s++; } } b[j]=@@ s; s=0; } j++; for(i=0;i<16;i++) a[i]=0; i=0; } for(i=0;i<j;i++) printf("%d\n",@@ b[i]); return0; }  
c -1
h -1
0

structbook { intnum; chara[@@ 26]; structbook*next; }; voidmain() { structbook@@ *head,*@@ p,*@@ s; head=(struct@@ book@@ *)malloc(sizeof(structbook)); head@@ ->next=NULL; intn,i,j,@@ c[@@ 26]={0},@@ max,@@ maxj@@ ; charb[@@ 26]; for(j=0;j<26;j++) b[j]=@@ 65@@ +j@@ ; scanf("%d",&n); p=head; for(i=0;i<n;i++) { s@@ =(struct@@ book@@ *)malloc(sizeof(structbook)); scanf("%d%s",&@@ s@@ ->num,@@ s@@ ->@@ a); s@@ ->next=NULL; p@@ ->next=@@ s; p=@@ s; } for(p=head@@ ->next@@ ;p!=NULL;p=p->next) { for(i=0;@@ p->@@ a[i]@@ !='\0';i++) for(j=0;j<26;j++) if(p->@@ a[i]==@@ b[j]) c[j]@@ ++; } max=@@ c[@@ 0]; maxj@@ =0; for(j=1;j<@@ 26@@ ;j++) if(c@@ [j]@@ >max) { max=@@ c[j]; maxj@@ =j; } printf("%c\n",@@ b[@@ maxj@@ ]); printf("%d\n",@@ c[@@ maxj@@ ]); for(p=head@@ ->next@@ ;p!=NULL;p=p->next) for(i=0;@@ p->@@ a[i]@@ !='\0';i++) if(p->@@ a[i]==@@ b[@@ maxj@@ ]) printf("%d\n",p->num); }  
c -1
h -1
intmain() { inti,j,n,@@ a[@@ 20000],b[@@ 20000]; scanf("%d",&n); scanf("%d",&@@ a[1]); printf("%d",@@ a[1]); for(i=2;i<=@@ n;++@@ i) { scanf("%d",&a[i]); for(j=1;j<=@@ i@@ -1;@@ ++@@ j) { b@@ [i-1]@@ =0; b[j]=@@ a[j]@@ -@@ a[i]; if(b[j]@@ ==0)break; } if(b@@ [i-1]@@ !=0)@@ printf("%d",a[i]); } return0; }  
c -1
h -1
0

main() { int@@ k@@ [25],@@ a[@@ 25]; inti,j,n,@@ max; scanf("%d",&n); for(i=0;i<n;i++) a[i]@@ =1; for(i=0;i<=n-1;i++) scanf("%d",&@@ k@@ [i]); for(i=n-2;i>=0;i--) for(j=i+1;j<=@@ n-1;j++) if((@@ k@@ [j]<=@@ k@@ [i]@@ )&&(@@ a[i]@@ <=@@ a[j]@@ )) a[i]=@@ a[j]@@ +1; for(@@ max=0,@@ i@@ =0;i<n;i++) if(a[i]>=@@ max@@ )max=@@ a[i]; printf("%d",max); }  
c -1
h -1
intmain(intargc,char*argv[]) { intp; for(p=1@@ ;p<=@@ 100@@ ;p++){ inta[@@ 17@@ ]; int@@ u@@ ,@@ i=0; for(@@ u@@ =1;@@ u@@ <=@@ 16@@ ;@@ u@@ ++){ scanf("%d",&a[@@ u@@ ]); i++; if(a[@@ u@@ ]==0){ break; } } if(a[1@@ ]==@@ -1){ break; } intj,@@ k,@@ t; for(j=1;j<@@ i@@ -1;j++){ for(k=j+1;k<@@ i@@ ;k++){ if(a[j]>@@ a[k]@@ ){ t=@@ a[k]; a[k]=@@ a[j]; a[j]=@@ t; } } } intr,@@ s,@@ w@@ =0; for(@@ r@@ =1;@@ r@@ <i@@ -1;@@ r@@ ++){ for(@@ s=@@ r@@ +1;@@ s@@ <=i@@ -1;@@ s@@ ++){ if(a[@@ r@@ ]@@ *2==@@ a[@@ s@@ ]){ w=@@ w@@ +1; break; } } } printf("%d\n",@@ w); } return0; }  
c -1
h -1
0

intmain() { chars1@@ [100],@@ s2@@ [100],@@ s3@@ [100]; inti,j,k,@@ n,m,@@ f,@@ q; scanf("%s",@@ s1); scanf("%s",@@ s2); scanf("%s",@@ s3); m=strlen(@@ s2); n=strlen(@@ s1); for(i=0;i<strlen(@@ s1@@ );i++) { f=0; for(j=0;j<strlen(@@ s2@@ );j++) if(s2@@ [j]!=@@ s1@@ [i+j@@ ]) { f=1; break; } if(f@@ ==0) { q@@ =i; break; } } if(f@@ ==1) printf("%s\n",@@ s1); else { for(k=0;k<@@ q@@ ;k++) printf("%c",@@ s1@@ [k]); printf("%s",@@ s3); for(k=@@ q@@ +m@@ ;k<@@ n;k++) printf("%c",@@ s1@@ [k]); printf("\n"); } return0; }  
c -1
h -1
intmain() { inta[@@ 20001@@ ]={0}; intn,i,j,k; cin>>n; for(i=0;i<n;i++) cin>>a[i]; for(i=0;i<n-1;i++) for(j=i+1;j<n;j++) if(a[j]==a[i]) {@@ for(k=j@@ ;k<@@ n-1;k++) a[k]=a[k@@ +1]; j=j-1; n=@@ n-1; } for(i=0;i<n-1;i++) cout<<a[i]<<""; cout<<a[@@ n-1@@ ]<<endl; return0; }  
c -1
h -1
0

intmain() { int@@ a=@@ 10@@ ,@@ b=@@ 10@@ ,@@ o@@ =@@ 10@@ ,@@ p=@@ 10@@ ,@@ sum,@@ area@@ [@@ 111@@ ][@@ 111@@ ]; int@@ k=@@ 10@@ ,@@ i=0; scanf("%d",&k); for(i=0;i<k;i++){ sum=0; scanf("%d%d",&a,&b); for(@@ o@@ =0;@@ o@@ <@@ a;@@ o@@ ++){ for(p=0;p@@ <b@@ ;p++){ scanf("%d",&@@ area@@ [@@ o@@ ][p@@ ]); } } for(p=0;p@@ <b@@ ;p@@ ++)@@ sum+=@@ area@@ [0][@@ p@@ ]+@@ area@@ [a@@ -1@@ ][p@@ ]; for(@@ o@@ =1;@@ o@@ <a@@ -1;@@ o@@ ++)@@ sum+=@@ area@@ [@@ o@@ ][0]+@@ area@@ [@@ o@@ ][b@@ -1]; printf("%d\n",sum); } return0; }  
c -1
h -1
intmain() { intn,i,j,@@ t,@@ m,@@ l; intb[100@@ ],@@ d@@ [100],@@ g@@ [100]; chara[100@@ ][@@ 10],@@ c@@ [100][10],@@ e@@ [@@ 10],@@ f@@ [100][10]; m=0; l=0; t=0; scanf("%d",&n); for(i=0;i<n;i++) { scanf("%s%d",@@ a[i],&@@ b[i]); } for(i=0;i<n;i++) { if(b[i]@@ >=60) { strcpy(@@ c[m@@ ],@@ a[i]); d@@ [m@@ ]=b[i]; m=m+1; } else { strcpy(@@ f@@ [l@@ ],@@ a[i]); g@@ [l@@ ]=b[i]; l=l@@ +1; } } for(i=0;i<m-1;i++) { for(j=0;j<m@@ -i-1;j++) { if(d@@ [j]<@@ d@@ [j+1]) { t=@@ d@@ [j]; d@@ [j]=@@ d@@ [j+1]; d@@ [j+1]=t; strcpy(@@ e,@@ c@@ [j]); strcpy(@@ c@@ [j],@@ c@@ [j+1]); strcpy(@@ c@@ [j+1],@@ e); } } } for(i=0;i<m;i++) printf("%s\n",@@ c[i]); for(i=0;i<l;i++) printf("%s\n",@@ f@@ [i]); getchar(); getchar(); }  
c -1
h -1
0

intmain(){ introw,col,@@ array[100][100]; inti,j,k; cin>>row>>col; for(i=0;i<row;i++){ for(j=0;j<col;j++){ cin>>array[i][j]; } } for(k=0;k<col@@ ;k++){ cout<<@@ array[@@ 0][@@ k@@ ]<<endl; for(i=1@@ ,j=@@ k@@ -1;@@ ;i++,j@@ --){ if(i@@ <row@@ &&j@@ >=0) cout<<array@@ [i][j]<<endl; elsebreak; } } for(k=1;k<@@ row@@ ;k++){ cout<<array@@ [k@@ ][col@@ -1]@@ <<endl; for(i=k@@ +1@@ ,j=@@ col@@ -2@@ ;@@ ;i++,j@@ --){ if(i@@ <row@@ &&j@@ >=0) cout<<array@@ [i][j]<<endl; elsebreak; } } return0; }  
c -1
h -1
intmain(){ inti,@@ len,@@ ans@@ =0,@@ len1; doublen; chars[@@ 2][@@ 500]; scanf("%lf",&n); scanf("%s",@@ s@@ [0]); len1=strlen(@@ s@@ [0]); scanf("%s",@@ s@@ [1]); len=strlen(@@ s@@ [1]); if(len1!=@@ len@@ ){ printf("error"); return0; } for(intj=0;j<@@ len1@@ ;j++){ if(s@@ [0]@@ [j]!='@@ A'&&@@ s[0]@@ [j]!='@@ T'&&@@ s[0]@@ [j]!='@@ G'&&@@ s[0]@@ [j]!='@@ C'){ printf("error"); return0; } } for(intk=0;k<@@ len@@ ;k++){ if(s@@ [1@@ ][k@@ ]!='@@ A'&&@@ s@@ [1@@ ][k@@ ]!='@@ T'&&@@ s@@ [1@@ ][k@@ ]!='@@ G'&&@@ s@@ [1@@ ][k@@ ]!='@@ C'){ printf("error"); return0; } } if(@@ len@@ ==@@ len1@@ ){ for(i=0;i<len@@ ;i++){ if(s@@ [0]@@ [i]==@@ s[1]@@ [i])@@ ans@@ +=1; } if(@@ ans@@ *1.0/@@ len@@ >n){ printf("yes"); }@@ else{printf("no");} } return0; }  
c -1
h -1
0

intmain() { chars[@@ 256]; chara[@@ 256]; charb[@@ 256]; inti,j,@@ x=0,@@ m,n,@@ y=0,@@ p; charc; scanf("%s",s); scanf("%s",a); scanf("%s",b); n@@ =strlen(b); p@@ =strlen(s); for(i=0;i<=@@ p@@ -@@ n;i++) { c=@@ s[i]; if(c==@@ a[0]) { for(j=0;j<n;j++) { if(a[j]!=@@ s[i+j@@ ]) { x=1; } else x=0; } if(x@@ ==0) { m=i; y=1; break; } } } if(y@@ ==1) { for(i=@@ m,@@ j@@ =0;i<@@ m+@@ n@@ ;i++,j++) { s[i]=@@ b[j]; } } puts(@@ s); return0; }  
c -1
h -1
intmain() { char@@ a1@@ [257@@ *2@@ ],@@ a2@@ [257],@@ b1@@ [257]; inti,j,k,@@ start@@ =0,@@ end@@ =0; gets(@@ a1@@ ); gets(@@ a2@@ ); gets(@@ b1@@ ); for(i=0;@@ a1@@ [i]@@ !=0@@ ;i++){ if(@@ a1@@ [i]==@@ a2@@ [0]){ for(j=i+1@@ ,k@@ =1;@@ a2@@ [k]@@ !=0@@ ;j++@@ ,k@@ ++){ if(@@ a1@@ [j]!=@@ a2@@ [k]@@ ){ break; } } if(@@ a2@@ [k]@@ ==0){ start@@ =i; end@@ =j; break; } } } if(@@ start@@ <@@ end@@ ){ for(i=@@ start@@ ,k@@ =0;@@ b1@@ [k]@@ !=0@@ ;i++@@ ,k@@ ++){ a1@@ [i]=@@ b1@@ [k]; } for(j=@@ end@@ ;@@ a1@@ [j]@@ !=0@@ ;i++,j@@ ++){ a1@@ [i]=@@ a1@@ [j]; } a1@@ [i]=0; } printf(@@ a1@@ ); return0; }  
c -1
h -1
1


intmain(intargc,char*argv[]) { intyear,month,day,@@ a; scanf("%d%d%d",&year,&month,&day); if(year%@@ 4==0&&year%100!=0@@ ||@@ year%@@ 400@@ ==0){ if(month==1) a=@@ day; if(month==2) a=@@ day+@@ 31; if(month==3) a=@@ day+@@ 60@@ ; if(month==@@ 4) a=@@ day+@@ 91@@ ; if(month==@@ 5) a=@@ day+@@ 121@@ ; if(month==@@ 6) a=@@ day+@@ 152@@ ; if(month==@@ 7) a=@@ day+@@ 182@@ ; if(month==8) a=@@ day+@@ 213@@ ; if(month==@@ 9) a=@@ day+@@ 244@@ ; if(month==@@ 10) a=@@ day+@@ 274@@ ; if(month==@@ 11) a=@@ day+@@ 305@@ ; if(month==@@ 12) a=@@ day+@@ 335@@ ;} else { if(month@@ ==1)@@ a=@@ day; if(month==@@ 2)@@ a=@@ day+@@ 31; if(month==@@ 3)@@ a=@@ day+@@ 59@@ ; if(month==@@ 4)@@ a=@@ day+@@ 90@@ ; if(month==@@ 5@@ )@@ a=@@ day+@@ 120@@ ; if(month==@@ 6@@ )@@ a=@@ day+@@ 151@@ ; if(month==@@ 7@@ )@@ a=@@ day+@@ 181@@ ; if(month==@@ 8@@ )@@ a=@@ day+@@ 212@@ ; if(month==@@ 9@@ )@@ a=@@ day+@@ 243@@ ; if(month==@@ 10@@ )@@ a=@@ day+@@ 273@@ ; if(month==@@ 11@@ )@@ a=@@ day+@@ 304@@ ; if(month==@@ 12@@ )@@ a=@@ day+@@ 334@@ ;@@ }; printf("%d\n",@@ a); return0; }  
c -1
h -1
intmain() { long@@ i,j,k,@@ m,@@ a[@@ 17@@ ][@@ 17@@ ],b[100],@@ c@@ [100]={0}; for(i=1;i<=@@ 100;i++) { scanf("%d",&a[i]@@ [1]); if(a[i]@@ [1@@ ]==@@ -1) break; else { for(j=2;j<=@@ 100@@ ;j++) { scanf("%d",&a[i][j]); if(a[i][j]==0) break; else@@ b[i]@@ =j; } } for(k=1;k<=@@ b[i]@@ ;k++) { for(m=1;m@@ <=@@ b[i]@@ ;m++) { if(a[i]@@ [k]==2*@@ a[i]@@ [m@@ ]) c[i]@@ ++; } } printf("%d\n",@@ c[i]); } }  
c -1
h -1
0

intmain() { inta[100][100]; introw,col,@@ i,j,k; scanf("%d%d",&row,&col); for(i=0;i<row;i++) for(j=0;j<col;j++) scanf("%d",&a[i][j]); for(i=0;i<col;i++) { for(j=i,@@ k@@ =0@@ ;j>=0@@ ,k@@ <=i@@ ;j--@@ ,k++) { if(k@@ >@@ (@@ row-1)@@ ||j@@ >@@ (@@ col@@ -1)@@ ||@@ k@@ <0@@ ||j@@ <0) continue; printf("%d\n",@@ a[k]@@ [j]); } } for(i=1;i<=@@ row-1;i++) for(j=col-1@@ ,k@@ =i@@ ;j>=0@@ ,k@@ <=row-1@@ ;j--@@ ,k++) { if(k@@ >@@ (@@ row-1)@@ ||j@@ >@@ (@@ col@@ -1)@@ ||@@ k@@ <0@@ ||j@@ <0) continue; printf("%d\n",@@ a[k]@@ [j]); } return0; }  
c -1
h -1
inta[100][100],@@ col,@@ row; voidmain() { inti,j,k; scanf("%d%d",&@@ row,@@ &@@ col); for(i=0;i<row;i++) { for(j=0;j<col;j++) { scanf("%d",&a[i][j]); }; }; if(col@@ >=@@ row) { for(k=0;k<=@@ row@@ -1;k++) { for(i=0;i<=@@ k;i++) { printf("%d\n",a[i]@@ [k-i]); }; }; for(k=@@ row@@ ;k<=@@ col-1@@ ;k++) { for(i=0;i<=@@ row-1;i++) { printf("%d\n",a[i]@@ [k-i]); }; }; for(k=@@ col@@ ;k<=@@ row+col-2@@ ;k++) { for(i=k@@ -col@@ +1;i<=@@ row-1;i++) { printf("%d\n",a[i]@@ [k-i]); }; }; }; if(row@@ >@@ col) { for(k=0;k<=@@ col-1@@ ;k++) { for(i=0;i<=@@ k;i++) { printf("%d\n",a[i]@@ [k-i]); }; }; for(k=@@ col@@ ;k<=@@ row@@ -1;k++) { for(i=k@@ -col@@ +1;i<=@@ k;i++) { printf("%d\n",a[i]@@ [k-i]); }; }; for(k=@@ row@@ ;k<=@@ row+col-2@@ ;k++) { for(i=k@@ -col@@ +1;i<=@@ row-1;i++) { printf("%d\n",a[i]@@ [k-i]); }; }; }; }  
c -1
h -1
1


intmain(){ intn,k,i,j,@@ flag@@ =1,@@ first@@ =0; intnum[@@ 1000]={0},@@ sub@@ =0; scanf("%d%d",&n,&k); for(i=0;i<n;i++){ scanf("%d",&@@ num[i]); } for(i=0;i<n;i++){ sub@@ =@@ k-@@ num[i]; for(j=i+1;j<n;j++){ if(@@ sub@@ ==@@ num@@ [j]){ flag=0; first@@ =1; break; } } if(@@ first@@ ) break; } if(flag) printf("no"); else printf("yes"); return0; }  
c -1
h -1
intmain() { inta[16@@ ]={0},@@ i=0,j=0,@@ n=0,@@ num,@@ k=0,@@ m; do { cin>>a[0]; if(a[0]==-1) break; for(i=1;i<@@ 16@@ ;i++) { cin>>a[i]; if(a[i]==0) break; } n=0; for(k=0;k<i;k++) for(j=0;j<i;j++) { if(a[k@@ ]==2*@@ a[j]) n++; } cout<<n<<endl; } while(@@ 1); return0; }  
c -1
h -1
0

intmain() { struct@@ score { intn; inta; intb; intc; }@@ score@@ [5@@ ]; inti,@@ m; scanf("%d",&m); score@@ [1].@@ n=0; score@@ [1].@@ c=0; score@@ [2].@@ n=0; score@@ [2].@@ c=0; score@@ [3].@@ n=0; score@@ [3].@@ c=0; for(i=0;i<m;i++) { scanf("%d%d%d",&@@ score@@ [4@@ ].@@ n,&@@ score@@ [4@@ ].@@ a,&@@ score@@ [4@@ ].@@ b); score@@ [4@@ ].@@ c=@@ score@@ [4@@ ].@@ a+@@ score@@ [4@@ ].@@ b; if(@@ score@@ [4@@ ].@@ c@@ >@@ score@@ [1].@@ c) { score@@ [3@@ ]=@@ score@@ [2]; score@@ [2]=@@ score@@ [1]; score@@ [1]=@@ score@@ [4@@ ]; } elseif(@@ score@@ [4@@ ].@@ c@@ >@@ score@@ [2].@@ c) { score@@ [3@@ ]=@@ score@@ [2]; score@@ [2]=@@ score@@ [4@@ ]; } elseif(@@ score@@ [4@@ ].@@ c@@ >@@ score@@ [3].@@ c) score@@ [3@@ ]=@@ score@@ [4@@ ]; } printf("%d%d\n%d%d\n%d%d\n",@@ score@@ [1].@@ n,@@ score@@ [1].@@ c,@@ score@@ [2].@@ n,@@ score@@ [2].@@ c,@@ score@@ [3].@@ n,@@ score@@ [3].@@ c); return0; }  
c -1
h -1
intmain() { structstudent{ long@@ num; long@@ chinese; long@@ maths; long@@ sum; }@@ t[@@ 100000]; long@@ n,@@ i,j,k,@@ tmp; scanf("%ld",&n); for(i=0;i<n;i++) { scanf("%ld@@ %ld@@ %ld@@ ",&@@ t@@ [i].num,&@@ t@@ [i].@@ chinese@@ ,&@@ t@@ [i].@@ maths@@ ); } for(i=0;i<n;i++) { t@@ [i].@@ sum=@@ t@@ [i].@@ chinese+@@ t@@ [i].@@ maths; } for(i=0;i<3;i++) { k=i; for(j=i+1;j<n;j++) { if(t@@ [j].@@ sum>@@ t@@ [k].@@ sum) k=j; } tmp=@@ t@@ [i].@@ sum; t@@ [i].@@ sum=@@ t@@ [k].@@ sum; t@@ [k].@@ sum=@@ tmp; tmp=@@ t@@ [i].@@ num; t@@ [i].@@ num=@@ t@@ [k].@@ num; t@@ [k].@@ num=@@ tmp; } for(i=0;i<3;i++) { printf("%ld@@ %ld@@ \n",@@ t@@ [i].@@ num,@@ t@@ [i].@@ sum); } return0; }  
c -1
h -1
1


intmain() { intn,@@ b,@@ s[@@ 1000],@@ a; scanf("%d%d",&n,&@@ b); for(inti=0;i<n;i++){ scanf("%d",&s[i]); } for(intk=0;k<@@ n;k++){ for(inti=1;i<@@ n-@@ k;i++){ a=@@ s[k]@@ +@@ s@@ [k@@ +i@@ ]; if(a==@@ b){ printf("yes"); return0; } } } printf("no"); return0; }  
c -1
h -1
intmain() { intn,i,j,k,@@ e,@@ age@@ [100],@@ six@@ [100]; j=0; charid@@ [100][10]; scanf("%d",&n); for(i=0;i<n;i++){ scanf("%s",&@@ id[i]); scanf("%d",&@@ age[i]); if(age[i]@@ >=60){ six@@ [j]@@ =i; j++; } } for(i=j@@ ;i>=0;i--){ for(k=0;k<@@ i@@ -1@@ ;k++){ if(age@@ [@@ six@@ [k]@@ ]<@@ age@@ [@@ six@@ [k+1@@ ]@@ ]){ e=@@ six@@ [k+1]; six@@ [k+1]=@@ six@@ [k]; six@@ [k]=@@ e; } } } for(i=0;i<j;i++) printf("%s\n",@@ id@@ [@@ six@@ [i]@@ ]); for(i=0;i<n;i++){ if(age[i]@@ <60) printf("%s\n",@@ id[i]); } return0; }  
c -1
h -1
0

inta[100@@ ]={0},@@ b[100@@ ]={0}; inti=0,j=0,@@ I@@ ,@@ J@@ ; voidmain() { void@@ load@@ (); voidorder@@ (inta[],intb[@@ ]); void@@ conflate@@ (inta[],intb[@@ ]); voidprint@@ (inta[@@ ]); load@@ (); order@@ (a,b); conflate@@ (a,b); print(@@ a); } void@@ load@@ () { scanf("%d%d",&@@ i@@ ,&@@ j); I@@ =i;@@ J@@ =j; for(i=0;i<@@ I@@ ;i++) scanf("%d",&a[i]); for(j=0;j<@@ J@@ ;j++) scanf("%d",&@@ b[j]); } voidorder@@ (inta[],intb[]) { void@@ xu@@ (intx[],int@@ y); xu@@ (a,@@ I@@ ); xu@@ (b,@@ J@@ ); } void@@ xu@@ (intx[],int@@ y) { int@@ *p,@@ *@@ q,@@ *@@ temp,@@ t; p=@@ x; for(i=0;i<@@ y@@ -1;i++) { p@@ =&@@ x[i]; for(j=i+1;j<@@ y;j++) { q@@ =&@@ x@@ [j]; if(@@ *p@@ >*@@ q@@ ){@@ temp=@@ p@@ ;@@ p=@@ q@@ ;@@ q=@@ temp;} } if(p@@ !=@@ &@@ x[i]@@ ){@@ t@@ =*@@ p@@ ;*@@ p=@@ x@@ [i];@@ x@@ [i]=@@ t;} } } void@@ conflate@@ (inta[],intb[]) { for(i=@@ I@@ ;i<@@ I@@ +@@ J@@ ;i++) { a[i]=b[i-@@ I@@ ]; } } voidprint@@ (inta[@@ ]) { for(i=0;i<@@ I@@ +@@ J@@ ;i++) { printf("%d",a[i]); if(i<@@ I@@ +@@ J@@ -1)@@ printf(""); } }  
c -1
h -1
intmain() { int@@ p@@ [26]={0},@@ q@@ [26]={0},@@ a=0,@@ b,@@ c,d,@@ e,f,@@ g,@@ i,j,k,@@ l,@@ m,n; scanf("%d",&k); for(i=0;i<k;i++) {scanf("%d",&@@ p[i]@@ );} q@@ [k-1]@@ =1; for(i=k-2;i>=0;i--) { b=1; for(j=i+1;j<k;j++) { if(p@@ [i]>=@@ p@@ [j]@@ ){@@ if(q@@ [j]@@ +1@@ >b@@ )@@ b=@@ q@@ [j]@@ +1;} } q@@ [i]=@@ b; } for(i=0;i<k;i++) {@@ if(a<@@ q@@ [i])@@ a=@@ q@@ [i]@@ ;} printf("%d\n",@@ a); return0; }  
c -1
h -1
0

intmain() { doublen,@@ c; int@@ b=0,@@ p@@ =1,i; scanf("%lf",&n); chara[@@ 2][@@ 501]; scanf("%s",@@ a[0]); scanf("%s",@@ a[1]); for(i=0;i<@@ 501@@ ;i++){ if(a[0]@@ [i]==@@ '\0'@@ ){ if(@@ a[1]@@ [i]@@ !='\0'@@ ){ p=0; } break; } if(a[0]@@ [i]!='A'&&@@ a[0]@@ [i]!='T'&&@@ a[0]@@ [i]!='C'&&@@ a[0]@@ [i]!='G'){ p=0; break; } if(@@ a[1]@@ [i]!='A'&&@@ a[1]@@ [i]!='T'&&@@ a[1]@@ [i]!='C'&&@@ a[1]@@ [i]!='G'){ p=0; break; } if(a[0]@@ [i]==@@ a[1]@@ [i]){ b=b@@ +1; } } c=@@ b@@ *1.0/@@ i; if(p@@ ==0){@@ printf("error");} else{ if(c@@ >@@ n@@ ){printf("yes");} else{ printf("no"); } } return0; }  
c -1
h -1
intmain(){ inta[@@ 20001]; intn,i,j,@@ l,@@ num; scanf("%d",&n); for(i=1;i<=n@@ ;i++){@@ scanf("%d",&a[i]);} num=0; for(i=1;i<=n;i++){ for(j=1;j<@@ i;j++){ if(a[j]==@@ a[i]@@ ){ a[i]=0; num++; break; } } } j=0; for(i=1;i<=n@@ ;i++){@@ if(a[i]@@ !=0){ j++; if(j!=@@ n-@@ num@@ ){ printf("%d",@@ a[i]);} else{@@ printf("%d",a[i]); break;} }} scanf("%d",&n); return0; }  
c -1
h -1
0

voidmain() { intn,k; int@@ arr@@ [@@ 1001]; inti,j,@@ bb@@ ; scanf("%d%d",&n,&k); for(i=0;i<n;i++) { scanf("%d",&@@ arr@@ [i]); } for(i=0;i<n-1;i++) { bb@@ =@@ k-@@ arr@@ [i]; for(j=i+1;j<n;j++) { if(@@ bb@@ ==@@ arr@@ [j]) { printf("yes\n"); return0; } } } if(i==@@ n-1)@@ printf("no\n"); }  
c -1
h -1
intmain() { int@@ shuru@@ [@@ 20@@ ]={0}; while(@@ true@@ ) { int@@ i=1@@ ,j,@@ k,@@ s,@@ no; s=0; cin>>@@ shuru@@ [0]; if(@@ shuru@@ [0]@@ ==-1) break; for(i=1;i<=@@ 15;i++) { cin>>@@ shuru@@ [i]; if(@@ shuru@@ [i]==0) break; for(j=0;j<i;j++) if((@@ shuru@@ [j]==2*@@ shuru@@ [i]@@ )||(@@ 2*@@ shuru@@ [j]==@@ shuru@@ [i]@@ )) s++; } cout<<s<<endl; for(i=0;i<=@@ 14@@ ;i++) shuru@@ [i]=0; } return0; }  
c -1
h -1
0

voidmain() { struct@@ x { charnum[@@ 26]; inty; }@@ q@@ [1000],@@ x0@@ ; intn,i,j,@@ c@@ [100]={0},@@ m=0,@@ f; scanf("%d",&n); for(i=0;i<n;i++) {@@ scanf("%d%s",&@@ q@@ [i].@@ y,&@@ q@@ [i].@@ num@@ );} for(i=0;i<n;i++) for(j=0;@@ q@@ [i].@@ num@@ [j]!='\0';j++) m=@@ (int)@@ q@@ [i].@@ num@@ [j],@@ c[m@@ ]=@@ c[m@@ ]+1; for(m=0;m<@@ 100@@ ;m++) if(@@ c[m@@ ]>@@ c@@ [0]) f=@@ m,@@ c[@@ 0]=@@ c[@@ m]; printf("%c\n%d\n",@@ (char)@@ f,@@ c[@@ f@@ ]); for(i=0;i<n;i++) for(j=0;@@ q@@ [i].@@ num@@ [j]!='\0';j++) if(q@@ [i].@@ num@@ [j]==@@ (char)@@ f@@ ) printf("%d\n",@@ q@@ [i].@@ y); }  
c -1
h -1
inta,b; voidshuru@@ (); void@@ paixu1@@ (); void@@ paixu2@@ (); intmain() { shuru@@ (); paixu1@@ (); paixu2@@ (); return0; } voidshuru@@ () {@@ cin>>a>>@@ b; } void@@ paixu1@@ () {@@ inti,j,t; int@@ c[100]; for(i=0;i<a;i++) cin>>@@ c[i]; for(i=0;i<@@ a@@ -1;i++) for(j=0;j<a@@ -1-i;j++) { if(c@@ [j]>@@ c@@ [j+1]) { t=@@ c[j]; c[j]=@@ c@@ [j+1]; c@@ [j+1]=t; } } for(i=0;i<a;i++) cout<<@@ c[i]@@ <<""; } void@@ paixu2@@ () {@@ inti,j,t; int@@ c[100]; for(i=0;i<b;i++) cin>>@@ c[i]; for(i=0;i<b@@ -1;i++) for(j=0;j<@@ b@@ -1-i;j++) { if(c@@ [j]>@@ c@@ [j+1]) { t=@@ c[j]; c[j]=@@ c@@ [j+1]; c@@ [j+1]=t; } } for(i=0;i<b@@ -1;i++) cout<<@@ c[i]@@ <<""; cout<<c[@@ b@@ -1]; }  
c -1
h -1
0

inta[@@ 36@@ ],@@ f[@@ 36@@ ]; intmax@@ (inta,intb) { if(a@@ >b@@ )@@ return@@ a;@@ else@@ return@@ b; } intmain() { intk,@@ i,j; int@@ ans=0; scanf("%d",&k); for(i=1;i<=@@ k;i++)@@ scanf("%d",&a[i]); f@@ [0]@@ =0; for(i=1;i<=k;i++) { f@@ [i]=1; for(j=1;j<i;j++) if(a[i]<=@@ a[j]) f[i]=@@ max(@@ f@@ [i],@@ f@@ [j]@@ +1); ans=@@ max(@@ ans@@ ,@@ f@@ [i]); } cout<<ans@@ <<endl; return0; }  
c -1
h -1
voidmain() { structstudent { int@@ xh@@ ; int@@ yw@@ ; int@@ sx; int@@ zf@@ ; structstudent*next; }; inti,j,k,@@ n,m,@@ max; structstudent*@@ p1,*p2,*head; scanf("%d",&n); head@@ =p1@@ =p2@@ =(structstudent*)malloc(sizeof(structstudent)); scanf("%d%d%d",&p1->@@ xh@@ ,&p1->@@ yw@@ ,&p1->@@ sx@@ ); p1->@@ zf@@ =p1->@@ yw@@ +p1->@@ sx; for(i=2;i<=n;i++) { p1@@ =(structstudent*)malloc(sizeof(structstudent)); scanf("%d%d%d",&p1->@@ xh@@ ,&p1->@@ yw@@ ,&p1->@@ sx@@ ); p1->@@ zf@@ =p1->@@ yw@@ +p1->@@ sx; p2->next=p1; p2=p1; if(i==@@ n)@@ p1->next@@ =0; } p1=head; for(i=1;i<=@@ 3;i++) { p1=head; max=0; for(j=1;j<=n;j++) { max=@@ max@@ >@@ p1->@@ zf@@ ?@@ max@@ :@@ p1->@@ zf@@ ; p1=p1->next; } p1=head; for(j=1;j<=n;j++) { if(p1->@@ zf@@ ==@@ max) { printf("%d%d\n",@@ p1->@@ xh@@ ,@@ p1->@@ zf@@ ); p1->@@ zf@@ =0; break; } p1=p1->next; } } }  
c -1
h -1
0

struct@@ people {@@ charid[10]; intage; }@@ p@@ [100]; voidmain() { intn,i,@@ a[100],b[100],@@ j,k,@@ m=0; charstr@@ [10]; scanf("%d",&n); for(i=0;i<n;i++) scanf("%s%d",&@@ p[i].@@ id,&@@ p[i].age); for(i=0,j@@ =0,@@ k@@ =0;i<n;i++) { if(p@@ [i].age>=60) { a@@ [j@@ ++]=@@ i; m++; } else@@ b[k@@ ++]=@@ i; } for(i=0;i<m-1;i++) for(j=0;j<@@ m-1@@ -i;j++) { if(p@@ [@@ a[j]@@ ].age@@ <@@ p[@@ a[j+1@@ ]@@ ].age) { int@@ t=@@ p[@@ a[j]@@ ].@@ age; p[@@ a[j]@@ ].age=@@ p[@@ a[j+1@@ ]@@ ].@@ age; p[@@ a[j+1@@ ]@@ ].age=@@ t; strcpy(@@ str,@@ p[@@ a[j]@@ ].id); strcpy(@@ p[@@ a[j]@@ ].id,@@ p[@@ a[j+1@@ ]@@ ].id); strcpy(@@ p[@@ a[j+1@@ ]@@ ].id,@@ str); } } if(m@@ !=0) { printf("%s",@@ p[@@ a[0]@@ ].id); for(i=1;i<m;i++) printf("\n@@ %s",@@ p[@@ a[i]@@ ].id); for(i=0;i<n-@@ m;i++) printf("\n@@ %s",@@ p[@@ b[i]@@ ].id); } else { printf("%s",@@ p[@@ b[0]@@ ].id); for(i=1;i<n;i++) printf("\n@@ %s",@@ p[@@ b[i]@@ ].id); } }  
c -1
h -1
intmain(){ inta[16],@@ i=0,j=0,@@ n=0,@@ Two@@ ; for(i=0;i<16@@ ;i++){ a[i]=0; } while(@@ 1@@ >0){ n=0; Two@@ =0; for(i=0;i<16@@ ;i++){ cin>>a[i]; if((@@ a[i]@@ ==0)||(@@ a[0]@@ ==@@ -1)@@ )break; elsen@@ ++; } if(a[0]==-1)break; for(i=0;i<n;i++){ for(j=i+1;j<n;j++){ if((@@ a[i]==@@ (@@ 2*@@ a[j])@@ )||(@@ a[j]==@@ (@@ 2*@@ a[i]@@ ))@@ ){ Two@@ ++; } } } cout<<@@ Two@@ <<endl; } return0; }  
c -1
h -1
0

intmain(){ char@@ mubiao@@ [N@@ ],@@ h; char@@ zichuan@@ [N]; char@@ replace@@ [N]; inti,@@ x; intj=0; int@@ flag; scanf("%s",@@ mubiao@@ ); scanf("%s",@@ zichuan@@ ); scanf("%s",@@ replace); int@@ a=strlen(@@ mubiao@@ ); int@@ b=strlen(@@ zichuan@@ ); for(i=0;i<a;i++){ if(@@ mubiao@@ [i]==@@ zichuan@@ [j]){ j++; }else{ j=0; } if(j==@@ b){ flag=1; break; } } if(flag@@ ==1){ for(j=@@ b@@ -1@@ ;j>=0;j--){ h=@@ replace@@ [j]; mubiao@@ [i]=@@ h; i--; } } printf("%s\n",@@ mubiao@@ ); return0; }  
c -1
h -1
intmain() { intyear,month,@@ date@@ ,@@ February@@ ,@@ day; scanf("%d%d%d",&@@ year,@@ &@@ month,@@ &@@ date@@ ); if((year%4==0&&year%100!=0)||(year%400==0)) February@@ =@@ 29; else February@@ =@@ 28; if(month==1) day=@@ date; if(month==2) day@@ =31+@@ date; if(month==3) day@@ =31+@@ February@@ +@@ date; if(month==@@ 4) day@@ =31+@@ February@@ +31+@@ date; if(month==@@ 5) day@@ =31+@@ February@@ +31+30@@ +@@ date; if(month==@@ 6) day@@ =31+@@ February@@ +31+30+31+@@ date; if(month==@@ 7) day@@ =31+@@ February@@ +31+30+31+30@@ +@@ date; if(month==8) day@@ =31+@@ February@@ +31+30+31+30+31+@@ date; if(month==@@ 9) day@@ =31+@@ February@@ +31+30+31+30+31+31+@@ date; if(month==@@ 10) day@@ =31+@@ February@@ +31+30+31+30+31+31+30@@ +@@ date; if(month==@@ 11) day@@ =31+@@ February@@ +31+30+31+30+31+31+30+31+@@ date; if(month==@@ 12) day@@ =31+@@ February@@ +31+30+31+30+31+31+30+31+30@@ +@@ date; printf("%d\n",@@ day); return0; }  
c -1
h -1
0

intmain() {int@@ a,@@ i,j,@@ m,@@ k,@@ p; char@@ r@@ [257],@@ s[@@ 257@@ ],@@ w@@ [257]; scanf("%s",@@ w); scanf("%s",s); scanf("%s",@@ r); a@@ =strlen(s); p=0; for(i=0;@@ w@@ [i]@@ ;i++) { if(w@@ [i]==@@ s@@ [0]) {@@ m=0; for(j=0;j<a@@ ;j++) {if(@@ w@@ [i+j]==@@ s@@ [j]) {@@ m=m+1; } } if(m==@@ a) {@@ p=p@@ +1; for(k=0;k<@@ a@@ ;k++) {@@ w@@ [i+k@@ ]=@@ r@@ [k]; } printf("%s",@@ w); break; } } } if(p@@ ==0) {@@ printf("%s",@@ w); } return0; }  
c -1
h -1
voidmain() { chars[@@ 300],@@ a[@@ 300],b[@@ 300]; intn,m,@@ i,j,@@ p; scanf("%s\n@@ %s@@ \n@@ %s",@@ s,@@ a,b); n@@ =strlen(s); m=strlen(a); for(i=0,j@@ =0;i<@@ m,@@ j@@ <@@ n;j++) { if(a[i]==@@ s@@ [j]) { p=@@ j; i++; if(i==@@ m@@ )break; } else@@ i=0; } if(i==@@ m) for(i=0;i<m;i++) s[p@@ -m@@ +1@@ +i]=b[i]; printf("%s\n",@@ s); }  
c -1
h -1
1


intmain() { chara[256],b[@@ 256],c[@@ 256],@@ d@@ [256],@@ e@@ [256]; inti,j,@@ lena@@ ,@@ lenb@@ ,@@ m,n,@@ k; scanf("%s%s%s",a,b,c); lena@@ =strlen(a); lenb@@ =strlen(b); for(i=0;i<@@ lena@@ ;i++) { m=0; for(j=i;j<i+@@ lenb@@ ;j++) { if(b@@ [j-i@@ ]!=@@ a[j]) m=1; } if(m==0) { for(n=0;n@@ <i@@ ;n++) { d[@@ n@@ ]=a[@@ n]; } d[@@ n@@ ]='\0'; for(k=i+@@ lenb@@ ;k<@@ lena@@ ;k++) { e@@ [k-i@@ -@@ lenb@@ ]=@@ a[k]; } e@@ [k-i@@ -@@ lenb@@ ]='\0'; printf("%s@@ %s%s",@@ d,@@ c,@@ e); break; } } if(m==1) printf("%s",a); return0; }  
c -1
h -1
intmain(intargc,char*argv[]) { int@@ min@@ [26]; int@@ data@@ [26]; intN@@ ; inti,j; int@@ minLength@@ ; scanf("%d@@ "@@ ,&@@ N); for(i=0;i<N;i++) { scanf("%d@@ "@@ ,&@@ data@@ [i]); } min@@ [0]=1; for(i=1;i<@@ N;i++) { minLength@@ =0; for(j=0;j<i;j++) { if(@@ data@@ [i]<=@@ data@@ [j]) { if(@@ min@@ [j]>@@ minLength@@ ) { minLength@@ =@@ min@@ [j]; } } } min@@ [i]=@@ minLength@@ +1; } minLength@@ =0; for(i=0;i<N;i++) { if(@@ min@@ [i]>@@ minLength@@ ) { minLength@@ =@@ min@@ [i]; } } printf("%d@@ \n@@ "@@ ,@@ minLength@@ ); return0; }  
c -1
h -1
0

intmain(){ charstr@@ [@@ 255@@ ],@@ sub@@ [@@ 255@@ ],@@ rep@@ [@@ 255@@ ],@@ s[@@ 255@@ ]; gets(str); gets(sub); gets(@@ rep); int@@ len1=strlen(@@ str@@ ),@@ len2=strlen(@@ sub@@ ),@@ x=0; inti,j,n; for(i=0;i<len1@@ -len2@@ +1@@ ;i++){ n=0; for(j=0;j<len2@@ ;j++){ if(str@@ [i+j]!=@@ sub@@ [j]){ break; } else n++; } if(n==@@ len2){ intm=0; while(i@@ +j@@ +m@@ <@@ len1@@ ){ s[m@@ ]=@@ str@@ [i+j@@ +m@@ ]; m++; } s[m@@ ]='\0'; str@@ [i]@@ ='\0'; strcat(@@ str,@@ rep); strcat(@@ str,@@ s); puts(@@ str); x=1; break; } } if(x@@ ==0) puts(@@ str); return0; }  
c -1
h -1
int@@ compare@@ (constvoid*a,constvoid*@@ b) { int@@ x=@@ *(int*)@@ a; int@@ y=@@ *(int*)@@ b; if(x@@ <@@ y){ return-1; } if(x==@@ y){ return0; } return1; } void@@ initArrays@@ (int*a,@@ int*@@ b,int@@ m,intn) { inti; for(i=0;i<m;i++){ cin>>a[i]; } for(i=0;i<n;i++){ cin>>b[i]; } } voidsort@@ (int*a,@@ int*@@ b,int@@ m,intn) { qsort@@ (a,@@ m,@@ sizeof(int),@@ compare@@ ); qsort@@ (b,@@ n,@@ sizeof(int),@@ compare@@ ); } void@@ append@@ (int*a,@@ int*@@ b@@ ,int*@@ c@@ ,int@@ m,intn) { inti; for(i=0;i<m;i++){ c[i]=a[i]; } for(i=m;i<@@ m+@@ n;i++){ c[i]=b[i-@@ m]; } } voidprint@@ (int*@@ a,int@@ n) { inti; for(i=0;i<n-1;i++){ cout<<a[i]<<""; } cout<<a[i]; } intmain(intargc@@ ,@@ const@@ char*@@ argv[]) { intm,n; cin>>m>>n; inta[@@ m]; intb[@@ n]; initArrays@@ (a,b,m,n); sort@@ (a,b,m,n); intc[@@ m+@@ n]; append@@ (a,b,@@ c,@@ m,n); print(@@ c,@@ m+@@ n); return0; }  
c -1
h -1
0

intmain() { intk,@@ a[100@@ ][2@@ ],@@ c@@ [100][100@@ ][100],@@ i,j,@@ p,@@ s@@ [100]; scanf("%d",&k); for(i=0;i<k;i++) { scanf("%d%d",&@@ a[i][0]@@ ,&@@ a[i]@@ [1]); for(j=0;j<@@ a[i][0]@@ ;j++) for(p=0;p@@ <@@ a[i][1]@@ ;p++) scanf("%d",&@@ c@@ [i][j]@@ [p@@ ]); } for(i=0;i<k;i++) { s[i]@@ =0; for(j=0;j<@@ a[i][1]@@ ;j++) s[i]@@ +=@@ c[i]@@ [0]@@ [j]; for(j=0;j<@@ a[i][1]@@ ;j++) s[i]@@ +=@@ c[i]@@ [@@ a[i][0]@@ -1][j]; for(j=1;j<@@ a[i][0]@@ -1;j++) s[i]@@ +=@@ c@@ [i][j]@@ [0]; for(j=1;j<@@ a[i][0]@@ -1;j++) s[i]@@ +=@@ c@@ [i][j]@@ [@@ a[i][1]@@ -1]; printf("%d\n",@@ s[i]); } return0; }  
c -1
h -1
voidmain() { int@@ bianyuan@@ (); intn,i; scanf("%d",&n); for(i=0;i<n;i++) printf("%d\n",@@ bianyuan@@ (@@ )); } int@@ bianyuan@@ () { intc[@@ 10000]; intm,n,i,j,@@ t,@@ sum=0; scanf("%d%d",&m,&n); t=@@ m*@@ n; int*p=@@ c; for(i=0;i<t;i++) scanf("%d",p@@ +i); if(t@@ ==1) return@@ *p; for(i=0;i<n-1;i++) sum+=@@ *(p@@ +i); for(i=1;i<m;i++) sum+=@@ *(p@@ +i@@ *@@ n)@@ +*@@ (p@@ +i@@ *@@ n-1); for(i=1;i<n;i++) sum+=@@ *(p+@@ (m@@ -1)*@@ n@@ +i); returnsum; }  
c -1
h -1
1


intmain() { double@@ w; chars1@@ [@@ 600@@ ],@@ s2[@@ 600]; int@@ l1,l2,@@ i,@@ a; a=0; scanf("%lf\n",&@@ w); scanf("%s@@ \n",@@ s1); scanf("%s@@ \n",@@ s2); l1=strlen(@@ s1); l2=strlen(@@ s2); if(l1!=l2@@ ){ printf("error");} else{ for(i=0;i<l1;i++){ if(!@@ (@@ s1@@ [i]=='A'||@@ s1@@ [i]=='T'||@@ s1@@ [i]=='C'||@@ s1@@ [i]=='@@ G')){ printf("error"); return0@@ ;}} for(i=0;i<l1;i++){ if(!@@ (@@ s2@@ [i]=='A'||@@ s2@@ [i]=='T'||@@ s2@@ [i]=='C'||@@ s2@@ [i]=='@@ G')){ printf("error"); return0@@ ;}} for(i=0;i<l1;i++){ if(s1[i]==s2@@ [i]){ a@@ ++;} } if((@@ 1.0*@@ a)@@ /@@ l1@@ >@@ w@@ ){ printf("yes");} else{ printf("no@@ ");@@ }} return0; }  
c -1
h -1
chars@@ [100],@@ a[100],b[100],@@ c[100],@@ d@@ [100]; intmain() { gets(s); scanf("%s",a); scanf("%s",b); inti,@@ p,@@ ch@@ =0; intk; for(k=0;@@ s[k]@@ !='\0'@@ ;k++) { i=0; for(p=@@ k;@@ a[p@@ -k@@ ]!='\0'@@ ;p++) { c[i]=@@ s[p@@ ]; i++; } if(@@ strcmp@@ (a,@@ c)@@ ==0) { ch@@ =1; break; } } if(@@ ch@@ ==0) { printf("%s",s); } else { int@@ A@@ ; for(@@ A@@ =0;@@ A@@ <k;@@ A@@ ++) { d[@@ A@@ ]=@@ s[@@ A@@ ]; } strcat(@@ d,@@ b); for(@@ A@@ =k@@ +@@ strlen(@@ a);@@ s[@@ A@@ ]!='\0'@@ ;@@ A@@ ++) { d[@@ A@@ -@@ strlen(a)@@ +@@ strlen(b@@ )@@ ]=@@ s[@@ A@@ ]; } printf("%s\n",@@ d); } return0; }  
c -1
h -1
0

intmain(){ int@@ m1,@@ m2@@ ,i,@@ t,@@ d; double@@ a,b; char@@ dna1@@ [501]; char@@ dna2@@ [501]; t=0; d=0; scanf("%lf",&a); getchar(); scanf("%s",&@@ dna1); scanf("%s",&@@ dna2); m1@@ =strlen(@@ dna1); m2@@ =strlen(@@ dna2); if(@@ m1@@ !=@@ m2@@ ){@@ printf("error");@@ d@@ =1;} else{ for(i=0;i<@@ m1@@ ;i++){ if(dna1@@ [i]==@@ dna2@@ [i]@@ ){@@ t=t@@ +1;} } } b@@ =1@@ .@@ 000000@@ *@@ t@@ /@@ m1@@ ; if(d@@ ==0){@@ for(i=0;i<@@ m1@@ ;i++){ if((@@ dna1@@ [i]!='A')&&(@@ dna1@@ [i]!='T')&&(@@ dna1@@ [i]!='C')&&(@@ dna1@@ [i]!='G')@@ ){@@ printf("error"); d=1; break;} } } if(d@@ ==0){@@ for(i=0;i<@@ m2@@ ;i++){ if((@@ dna2@@ [i]!='A')&&(@@ dna2@@ [i]!='T')&&(@@ dna2@@ [i]!='C')&&(@@ dna2@@ [i]!='G')@@ ){@@ printf("error");} } } if((@@ m1@@ ==@@ m2@@ )&&(@@ d@@ ==0)@@ ){ if(b@@ >@@ a@@ ){printf("yes");} else{printf("no");} } return0; }  
c -1
h -1
intmain() { intn=0,@@ i=0,j=0,@@ h1@@ =0,@@ l1@@ =0,@@ h2@@ =0,@@ l2@@ =0,@@ s=0; cin>>n; inta[n@@ ][n]; for(i=0;i<=n-1;i++) { for(j=0;j<=n-1;j++) { cin>>a[i][j]; } } for(i=0;i<=n-1;i++) { for(j=0;j<=n-1;j++) { if(a[i][j]==0) {@@ h1@@ =i+1@@ ;@@ l1@@ =j+1@@ ;@@ goto@@ loop@@ ;} } } loop@@ :@@ for(i=n-1;i>=0;i--) { for(j=n-1;j>=0;j--) { if(a[i][j]==0) {@@ h2@@ =i+1@@ ;@@ l2@@ =j+1@@ ;@@ goto@@ loop2@@ ;} } } loop2@@ :@@ s=(@@ h2@@ -@@ h1@@ -1)*(@@ l2@@ -@@ l1@@ -1); cout<<@@ s; return0; }  
c -1
h -1
0

intmain() { inta[100][100@@ ]={0}; intn,i,j,@@ i1@@ ,@@ j1@@ ,@@ i2@@ ,@@ i3@@ ,@@ j3@@ ,@@ p=0,@@ q=0,@@ sum=0; scanf("%d",&n); for(@@ i2@@ =0;@@ i2@@ <=@@ n-1;@@ i2@@ ++) { scanf("%d%d",&@@ i@@ ,&@@ j); for(@@ i1@@ =0;@@ i1@@ <=i@@ -1;@@ i1@@ ++) { for(@@ j1@@ =0;@@ j1@@ <=j@@ -1;@@ j1@@ ++) { scanf("%d",&a[@@ i1@@ ][@@ j1@@ ]); } } for(@@ i3@@ =0;@@ i3@@ <=j@@ -1;@@ i3@@ ++) { sum=sum+@@ a[0][@@ i3@@ ]+@@ a[i-1@@ ][@@ i3@@ ]; } for(@@ j3@@ =0;@@ j3@@ <=i@@ -1;@@ j3@@ ++) { sum=sum+@@ a[@@ j3@@ ][0]+@@ a[@@ j3@@ ]@@ [j-1]; } sum=sum-@@ a[0]@@ [j-1]@@ -@@ a[i-1@@ ][0]-@@ a[i-1]@@ [j-1]@@ -@@ a[0][@@ 0]; printf("%d\n",sum); sum=0; for(@@ i1@@ =0;@@ i1@@ <=i@@ -1;@@ i1@@ ++) { for(@@ j1@@ =0;@@ j1@@ <=j@@ -1;@@ j1@@ ++) { a[@@ i1@@ ][@@ j1@@ ]=0; } } } return0; }  
c -1
h -1
intmain() { char@@ zfc1@@ [257@@ ]={0},@@ zfc2@@ [257@@ ]={0},@@ zfc3@@ [257@@ ]={0},@@ zichuan@@ [257@@ ]={0}; intlen1,len2,@@ i,j,k,@@ t,@@ flag=0; scanf("%s",@@ zfc1@@ ); scanf("%s",@@ zfc2@@ ); scanf("%s",@@ zfc3@@ ); len1=strlen(@@ zfc1@@ ); len2=strlen(@@ zfc2@@ ); for(i=0;i<=@@ len1@@ -len2@@ ;i++) { for(j=0;j<len2@@ ;j++) { zichuan@@ [j]=@@ zfc1@@ [j+i@@ ]; } if(strcmp(@@ zichuan@@ ,@@ zfc2@@ )@@ ==0) { for(k=0;k<i;k++) { printf("%c",@@ zfc1@@ [k]); } printf("%s",@@ zfc3@@ ); for(t@@ =i+@@ len2@@ ;@@ zfc1@@ [t@@ ]!='\0'@@ ;t++) { printf("%c",@@ zfc1@@ [t@@ ]); } flag=1; break; } } if(flag==0) { printf("%s",@@ zfc1@@ ); } return0; }  
c -1
h -1
0

intmain() { chars@@ [100]; for(;;) { gets(s); inti,j,@@ k=0,@@ m=0,@@ x[@@ 15],@@ n=0; if(s@@ [0]==@@ '-@@ '&&@@ s[1]@@ =='@@ 1@@ ') break; else { for(i=0;;i++) { if(s@@ [i]=='@@ 0'@@ ) break; else { if(@@ '@@ 1@@ '<=@@ s[i]@@ &&@@ s[i]@@ <=@@ '@@ 9@@ ') { j=@@ s[i]@@ -'@@ 0'; k=k@@ *@@ 10@@ +j@@ ; } else { x@@ [m]=@@ k; m++; k=0; } } } } for(i=0;i<m;i++) for(j=i+1;j<@@ m;j++) { if((@@ x[i]@@ /@@ x@@ [j]==@@ 2@@ &&@@ x[i]@@ %@@ x[j]@@ ==0)||(@@ x[j]@@ /@@ x@@ [i]==@@ 2@@ &&@@ x[j]@@ %@@ x[i]@@ ==0)) {@@ n@@ ++;} } printf("%d\n",n); } return0; }  
c -1
h -1
struct@@ score {intnum; intyuwen; intshuxue; inttotal; struct@@ score@@ *next; }; intn; struct@@ score@@ *creat@@ () {@@ struct@@ score@@ *@@ p1,*p2,*head; head=@@ p2@@ =(struct@@ score@@ *)malloc(len); scanf("%d%d%d",&@@ p2->@@ num,&@@ p2->@@ yuwen@@ ,&@@ p2->@@ shuxue); p2->@@ total=@@ p2->@@ shuxue@@ +@@ p2->@@ yuwen; n--; while(n--) {@@ p1=(struct@@ score@@ *)malloc(len); scanf("%d%d%d",&p1->num,&p1->@@ yuwen@@ ,&p1->@@ shuxue); p1->@@ total=@@ p1->@@ shuxue@@ +p1->@@ yuwen; p2->next=p1; p2=p1; } p2->next=NULL; returnhead; } void@@ search@@ (struct@@ score@@ *head) {@@ struct@@ score@@ *p@@ ;@@ inti,@@ max; for(i=0;i<3;i++) {@@ max=0; p=head; while(p!=NULL) { if(p->@@ total@@ >max)max=@@ p->@@ total; p=p->next; } p=head; while(p!=NULL) {@@ if(p->@@ total@@ ==@@ max) {@@ printf("%d%d\n",@@ p->@@ num,@@ p->@@ total); p->@@ total=0; break; } p=p->next; } } } main() {@@ scanf("%d",&n); struct@@ score@@ *@@ head; head=creat(); search@@ (head); }  
c -1
h -1
0

int@@ factorize@@ (intn,int@@ j) { int@@ F@@ =1; for(@@ ;j<=@@ sqrt(n@@ );j++) if(n@@ %j==0) F@@ +=@@ factorize@@ (n@@ /j,j); return@@ F@@ ; } intmain() { inti,@@ m,@@ n@@ [1000]; scanf("%d",&m); for(i=0;i<m;i++) scanf("%d",&@@ n@@ [i]); for(i=0;i<m;i++) printf("%d\n",@@ factorize@@ (n@@ [i],@@ 2)); return0; }  
c -1
h -1
intmain() { inta[100][100],@@ col,@@ row,@@ t,@@ i,j; cin>>row>>col; if(row@@ >@@ col) t=@@ row; else@@ t=@@ col; for(i=1;i<=@@ row;i++) { for(j=1;j<=col;j++) { cin>>a[i][j]; } } for(i=2;i<=@@ 2*@@ t;i++) { for(j=1;j<i;j++) { if(j@@ <=row@@ &&i@@ -j@@ <=col@@ ) { cout<<@@ a[j][i-j@@ ]<<endl; } } } return0; }  
c -1
h -1
0

struct{ intnum; char@@ w@@ [26]; }@@ book[@@ 999@@ ],@@ test@@ [1]; intmain(intargc,char*argv[]) { intm,i,j,@@ n,@@ s; char@@ x,@@ c; scanf("%d",&m); for(i=0;i<m;i++) { scanf("%d%s",&book[i].num,@@ book[i].@@ w); } x@@ ='A'; n=0; c@@ ='A'; while(1) { s=0; for(i=0;i<m;i++) { for(j=0;j<strlen(@@ book[i].@@ w@@ );j++) { if(book[i].@@ w@@ [j]==@@ x) {@@ s@@ ++;} } } if(s@@ >n) { n=@@ s; c=@@ x; } if(x@@ =='@@ Z@@ ')@@ {break;} x++; } printf("%c\n%d\n",@@ c,@@ n); for(i=0;i<m;i++) { for(j=0;j<strlen(@@ book[i].@@ w@@ );j++) { if(book[i].@@ w@@ [j]==@@ c) { printf("%d\n",book[i].@@ num); } } } return0; }  
c -1
h -1
intmain() { ints[@@ 30@@ ]={0@@ ,@@ 1,@@ 2,@@ 2,@@ 4@@ ,@@ 5@@ ,@@ 6@@ ,@@ 7@@ ,@@ 6@@ ,@@ 9@@ ,@@ 6@@ ,@@ 11@@ ,@@ 12@@ ,@@ 13@@ ,@@ 14@@ ,@@ 15@@ ,@@ 16@@ ,@@ 17@@ ,@@ 18@@ ,@@ 19@@ ,@@ 20@@ ,@@ 21@@ ,@@ 22@@ ,@@ 23@@ ,@@ 24@@ ,@@ 8@@ }; inta[@@ 30]; intk,@@ i; scanf("%d",&k); for(i=0;i<k;i++) scanf("%d",&a[i]); if(a[@@ 24@@ ]==@@ 1333@@ &&k@@ ==@@ 25@@ ) printf("@@ 9@@ \n"); elseif(@@ a[@@ 24@@ ]==@@ 1761@@ &&k@@ ==@@ 25@@ ) printf("@@ 8@@ \n"); else printf("%d\n",s@@ [k]); return0; }  
c -1
h -1
0

intmain() { chars@@ [100][10]; inta[100],b[100],@@ i,@@ n,k,@@ l@@ ,j; scanf("%d",&n); for(i=0;i<n;i++) { scanf("%s%d",@@ s[i]@@ ,&@@ a[i]); b[i]=@@ a[i]; } for(k=@@ n-1@@ ;k@@ >0@@ ;k--) { for(i=0;i<k;i++) { if(b[i]>b[i+1]) { l=@@ b[i]; b[i]=b[i+1]; b[i+1]=@@ l; } } } i=@@ n-1; while(@@ b[i]@@ >=60) { for(j=0;j<n;j++) { if(a[j]==@@ b[i]) { printf("%s\n",@@ s@@ [j]); } } while(@@ b@@ [i-1@@ ]==@@ b[i]) { i--; } i--; } for(i=0;i<n;i++) { if(a[i]@@ <60) printf("%s\n",@@ s[i]); } return0; }  
c -1
h -1
intmain(){ inty,m,d,@@ d1@@ =0,@@ d2@@ ,i; int@@ md@@ [11@@ ]={31,@@ 28@@ ,31,30,31,30,31@@ ,31,30,31,30@@ }; scanf("%d%d@@ %d@@ "@@ ,&@@ y,&@@ m,&d); if(m@@ ==1)@@ d2@@ =@@ d; else{ for(i=0;i<m-1;i++) d1@@ =@@ d1@@ +@@ md@@ [i]; d2@@ =@@ d+@@ d1@@ ; } printf("%d",@@ d2@@ ); return0; }  
c -1
h -1
0

intmax=0,@@ n=0; inta[@@ 30],@@ line@@ =0,@@ f[@@ 30@@ ]={0},b[@@ 30]={0}; voidmain() { intk,i,@@ n=0; void@@ missile@@ (inti,int@@ k); scanf("%d",&k); for(i=0;i<k;i++) { scanf("%d",&a[i]); if(@@ line@@ <@@ a[i]) line@@ =@@ a[i]; } missile@@ (@@ 0,@@ k); printf("%d",max); } void@@ missile@@ (inti,int@@ k) { intj; for(j=0;j<@@ 2@@ ;j++) { if(j@@ ==0&&@@ i@@ !=@@ k@@ -1) { missile@@ (i+1,@@ k); } else { if(a[i]<=@@ line@@ ||i==@@ k@@ -1) { if(a[i]<=@@ line@@ ) { b[i]=@@ line@@ ; line@@ =@@ a[i]; n++; f@@ [i]=1; } if(i==@@ k@@ -1) { if(max<@@ n) max=@@ n; printf("\n"); } else missile@@ (i+1,@@ k); if(f@@ [i]@@ ==1) { n--; line@@ =@@ b[i]; f@@ [i]=0; } } } } }  
c -1
h -1
intmain(intargc,char*argv[]) { long@@ n; long@@ num[@@ 99999@@ ],@@ math@@ [@@ 99999@@ ],@@ china@@ [@@ 99999@@ ],@@ z[@@ 99999@@ ],@@ i; long@@ num1@@ =@@ 2,@@ num2@@ =1,@@ num3@@ =0,@@ m1@@ =0,@@ m2@@ =0,@@ m3@@ =0; scanf("%ld",&n); for(i=1;i<=n;i++) { scanf("%ld",&@@ num[i]); scanf("%ld",&@@ math@@ [i]); scanf("%ld",&@@ china@@ [i]); z@@ [i]=@@ math@@ [i]+@@ china@@ [i]; if(z@@ [i]>@@ num3@@ ) { num1@@ =@@ num2@@ ; m1=@@ m2@@ ; num2@@ =@@ num3@@ ; m2=@@ m3@@ ; num3@@ =@@ z@@ [i]; m3@@ =i; } elseif(@@ z@@ [i]>@@ num2@@ ) { num1@@ =@@ num2@@ ; m1=@@ m2@@ ; num2@@ =@@ z@@ [i]; m2@@ =i; } elseif(@@ z@@ [i]>@@ num1@@ ) { num1@@ =@@ z@@ [i]; m1@@ =i; } } printf("%ld@@ %ld@@ \n",@@ m3@@ ,@@ num3@@ ); printf("%ld@@ %ld@@ \n",@@ m2@@ ,@@ num2@@ ); printf("%ld@@ %ld@@ \n",@@ m1,@@ num1@@ ); return0; }  
c -1
h -1
0

intmain() { intn,k,@@ x@@ [1000]; inti,j,@@ sign@@ =0; scanf("%d%d",&n,&k); for(i=0;i<n;i++) { scanf("%d",&@@ x[i]); } for(i=0;i<n;i++) { for(j=i+1;j<n;j++) { if((x@@ [i]+@@ x[j]@@ )==@@ k) { sign@@ =1; break; } } } if(@@ sign@@ ==1) printf("yes"); else printf("no"); scanf("%d%d",&n,&k); return0; }  
c -1
h -1
int@@ comp@@ (constvoid*a,constvoid*@@ b); intmain() { intn,m,@@ i,j,k; scanf("%d%d",&n,&m); inta[n@@ ],b[@@ m]; for(i=0;i<n;i++) scanf("%d",&a[i]); for(i=0;i<m;i++) scanf("%d",&b[i]); qsort@@ (a,n,@@ sizeof(int),@@ comp@@ ); qsort@@ (b,@@ m,@@ sizeof(int),@@ comp@@ ); for(i=0;i<n;i++) printf("%d",a[i]); for(i=0;i<m;i++) {@@ printf("%d",b[i]); if(i<@@ m-1) printf(""); } return0; } int@@ comp@@ (constvoid*a,constvoid*@@ b) { return@@ *(int*)@@ a@@ -*@@ (int*)@@ b; }  
c -1
h -1
0

intmain() { chara[@@ 256],c[@@ 256],@@ l@@ [256],@@ g@@ [@@ 20],@@ h@@ [20]; intb,@@ i,@@ e=0,@@ q,@@ p@@ ,j,@@ k; gets(a); b@@ =strlen(a); gets(@@ h); gets(@@ g@@ ); q@@ =strlen(@@ h); for(i=0;i<b;i++) { if(a[i]==@@ h@@ [0]) { p=1; for(j=1;j<@@ q@@ ;j++) { if(a@@ [i+j]!=@@ h@@ [j]) { p=0; break; } } if(p@@ ==1) { for(k=0;k<i;k++) { c@@ [k]=@@ a[k]; c@@ [k+1@@ ]='\0'; } l@@ [0]@@ =-1; for(k=i+@@ q@@ ;k<@@ b@@ ;k++) { l@@ [k-i@@ -@@ q@@ ]=@@ a[k]; l@@ [k-i@@ -@@ q@@ +1@@ ]='\0'; } strcat(@@ c,@@ g@@ ); if(l@@ [0]@@ !=-1) { strcat(@@ c,@@ l); } strcpy(@@ a,@@ c); b@@ =strlen(a); break; } } } printf("%s",a); return0; }  
c -1
h -1
voidmain() { intn,i,j; inta[@@ 200],@@ t; charb[@@ 200][@@ 11@@ ],@@ b1@@ [11]; scanf("%d",&n); for(i=0;i<n;i++) scanf("%s%d",&@@ b[i]@@ ,&@@ a[i]); for(i=0;i<n;i++) for(j=0;j<n-i;j++) if(a@@ [j+1]@@ >=60&&@@ a[j]@@ <@@ a[j+1@@ ]) { t=a[j]; a[j]=a[j+1]; a[j+1]=t; strcpy(@@ b1,@@ b[j]); strcpy(@@ b[j]@@ ,@@ b@@ [j+1]); strcpy(@@ b@@ [j+1],@@ b1@@ ); } for(i=0;i<n;i++) printf("%s\n",@@ b[i]); }  
c -1
h -1
0

intm,n,@@ num; void@@ dfs@@ (inti,int@@ j) { intx; if(i==1) { num++; return; } for(x@@ =j@@ ;x@@ <=i@@ ;x@@ ++) if(i@@ %@@ x@@ ==0) dfs@@ (i@@ /@@ x,@@ x); } intmain() { cin>>m; while(m@@ >0){ num=0; cin>>n; dfs@@ (n,@@ 2); cout<<num<<endl; m@@ --; } }  
c -1
h -1
struct@@ record { intid; }; struct@@ YyxNode { struct@@ record@@ m_rec@@ ; struct@@ YyxNode@@ *next; }; struct@@ YyxLink { intn; struct@@ YyxNode@@ *@@ head; struct@@ YyxNode@@ *@@ tail@@ ; }; struct@@ YyxLink@@ *@@ CreateNewLink@@ () { struct@@ YyxLink@@ *@@ newLn@@ ; struct@@ YyxNode@@ *@@ newNd@@ ; if(((@@ newLn@@ =(struct@@ YyxLink@@ *)malloc(sizeof(struct@@ YyxLink@@ ))@@ )==@@ NULL@@ ) ||(@@ (@@ newNd@@ =(struct@@ YyxNode@@ *)malloc(sizeof(struct@@ YyxNode@@ ))@@ )==@@ NULL@@ )){ printf("@@ Error@@ :@@ memory@@ out@@ !@@ (@@ 1@@ )@@ "); exit@@ (@@ -1); } newLn@@ ->@@ n=0; newLn@@ ->@@ head=@@ newNd@@ ; newNd@@ ->next=NULL; newLn@@ ->@@ tail@@ =@@ newNd@@ ; return@@ newLn@@ ; } struct@@ YyxLink@@ *@@ AddNode@@ (struct@@ YyxLink@@ *@@ ln@@ ,@@ const@@ struct@@ record@@ *@@ rec@@ ) { struct@@ YyxNode@@ *@@ newNd@@ ; if((@@ newNd@@ =(struct@@ YyxNode@@ *)malloc(sizeof(struct@@ YyxNode@@ ))@@ )==@@ NULL@@ ){ printf("@@ Error@@ :@@ memory@@ out@@ !@@ (@@ 2)@@ "); exit@@ (@@ -1); } newNd@@ ->@@ m_rec@@ =@@ *@@ rec@@ ; newNd@@ ->next=NULL; ln@@ ->@@ tail@@ ->next=@@ newNd@@ ; ln@@ ->@@ tail@@ =@@ newNd@@ ; ln@@ ->@@ n++; return@@ ln@@ ; } struct@@ YyxLink@@ *@@ ClearLink@@ (struct@@ YyxLink@@ *@@ ln@@ ) { struct@@ YyxNode@@ *@@ delNd@@ ,@@ *@@ nextNd@@ ; delNd@@ =@@ ln@@ ->@@ head->next; for(;@@ delNd@@ !=NULL;@@ delNd@@ =@@ nextNd@@ ){ nextNd@@ =@@ delNd@@ ->next; free(@@ delNd@@ ); } ln@@ ->@@ n=0; ln@@ ->@@ head@@ ->next=NULL; return@@ ln@@ ; } void@@ FreeLink@@ (struct@@ YyxLink@@ *@@ ln@@ ) { ClearLink@@ (@@ ln@@ ); free(@@ ln@@ ->@@ head); free(@@ ln@@ ); } intmain() { struct@@ YyxLink@@ **@@ total; intm; struct@@ record@@ rec@@ ; charauthor@@ [27]; inti; char*@@ pch@@ ; struct@@ YyxNode@@ *@@ nd@@ ; if((@@ total@@ =(struct@@ YyxLink@@ **@@ )@@ malloc(@@ 26@@ *@@ sizeof(struct@@ YyxLink@@ *)@@ ))@@ ==NULL@@ ){ printf("@@ Error@@ :@@ memory@@ out@@ !@@ (@@ 3)@@ \n"); exit@@ (@@ -1); } for(i=0;i<26;i++){ total@@ [i]=@@ CreateNewLink@@ (); } scanf("%d",&m); for(@@ ;m@@ >0@@ ;m@@ --){ scanf("%d%s",&@@ rec@@ .@@ id,@@ author); pch@@ =@@ author@@ ; for(;@@ *@@ pch@@ !='\0'@@ ;@@ pch@@ ++){ AddNode@@ (@@ total@@ [@@ *@@ pch@@ -'A'@@ ],@@ &@@ rec@@ ); } } m=0; for(i=1;i<@@ 26@@ ;i++){ if(@@ total@@ [m]@@ ->@@ n@@ <@@ total@@ [i]@@ ->@@ n) m=i; } printf("%c\n%d\n",@@ m@@ +'A',@@ total@@ [m]@@ ->@@ n); nd@@ =@@ total@@ [m]@@ ->@@ head->next; for(;@@ nd@@ !=NULL;@@ nd@@ =@@ nd@@ ->next@@ ){ printf("%d\n",@@ nd@@ ->@@ m_rec@@ ); } return0; }  
c -1
h -1
0

intmain() { intn,@@ b,@@ s[@@ 1000],@@ a; scanf("%d%d",&n,&@@ b); for(inti=0;i<n;i++){ scanf("%d",&s[i]); } for(intk=0;k<@@ n;k++){ for(inti=1;i<@@ n-@@ k;i++){ a=@@ s[k]@@ +@@ s@@ [k@@ +i@@ ]; if(a==@@ b){ printf("yes"); return0; } } } printf("no"); return0; }  
c -1
h -1
intf@@ (intx) { int@@ z; if((x@@ %@@ 4==0)&&(@@ x@@ %100!=0@@ )||(@@ x%@@ 400==0)@@ )@@ z=1; else@@ z=0; return@@ z; } main() { intyear,month,day; scanf("%d%d%d",&year,&month,&day); int@@ z,@@ i,@@ sum=0; z=@@ f(@@ year@@ ); inta[@@ 12@@ ]; a[0]=@@ 31@@ ;@@ a[2@@ ]=31;a[@@ 3@@ ]=30@@ ;a[@@ 4@@ ]=31;a[@@ 5@@ ]=30@@ ;a[@@ 6@@ ]=31;a[@@ 7@@ ]=31;a[@@ 8@@ ]=30@@ ;a[@@ 9@@ ]=31;a[@@ 10@@ ]=30@@ ;a[@@ 11@@ ]=31; if(z@@ ==1)@@ a[1]=29; else@@ a[1]=@@ 28; for(i=0;i<month-1;i++) { sum=sum+@@ a[i]; } sum=sum+day; printf("%d",sum); getchar(); getchar(); return0; }  
c -1
h -1
0

intmain() { intm,n,@@ i,@@ t@@ ,j; inta[@@ 2][@@ 1000]; scanf("%d%d",&m,&n); for(i=0;i<m;i++) scanf("%d",&@@ a[0]@@ [i]); for(i=0;i<n;i++) scanf("%d",&@@ a[1]@@ [i]); for(j=0;j<m-1;j++) for(i=0;i<m@@ -1-j;i++) if(a[0]@@ [i]>@@ a[0]@@ [i+1]) { t=@@ a[0][i]; a[0]@@ [i]=@@ a[0]@@ [i+1]; a[0]@@ [i+1]=@@ t; } for(j=0;j<n-1;j++) for(i=0;i<n@@ -1-j;i++) if(@@ a[1]@@ [i]>@@ a[1]@@ [i+1]) { t=@@ a[1]@@ [i]; a[1]@@ [i]=@@ a[1]@@ [i+1]; a[1]@@ [i+1]=@@ t; } for(i=0;i<m;i++) printf("%d",@@ a[0]@@ [i]); for(i=0;i<n-1;i++) printf("%d",@@ a[1]@@ [i]); printf("%d\n",@@ a[1@@ ][@@ n-1]); }  
c -1
h -1
intmain() { int@@ shuru@@ [@@ 20@@ ]={0}; while(@@ true@@ ) { int@@ i=1@@ ,j,@@ k,@@ s,@@ no; s=0; cin>>@@ shuru@@ [0]; if(@@ shuru@@ [0]@@ ==-1) break; for(i=1;i<=@@ 15;i++) { cin>>@@ shuru@@ [i]; if(@@ shuru@@ [i]==0) break; for(j=0;j<i;j++) if((@@ shuru@@ [j]==2*@@ shuru@@ [i]@@ )||(@@ 2*@@ shuru@@ [j]==@@ shuru@@ [i]@@ )) s++; } cout<<s<<endl; for(i=0;i<=@@ 14@@ ;i++) shuru@@ [i]=0; } return0; }  
c -1
h -1
0

intmain(){ intn,k; scanf("%d%d",&n,&k); int@@ SZ@@ [n]; for(intm=0;m@@ <n;m++){ scanf("%d",&@@ SZ@@ [m]); } for(inti=0;i<@@ n-1;i++){ int@@ I@@ =0,@@ J@@ =0; for(intj=1;j<@@ n-1@@ -i;j++){ if(@@ SZ@@ [i]+@@ SZ@@ [i+j@@ ]==k){ printf("yes"); I@@ =@@ i,@@ J@@ =j; break; } } if(@@ SZ@@ [@@ I@@ ]+@@ SZ@@ [@@ I@@ +@@ J@@ ]==k){ break;} if(i==@@ n-2@@ ){ printf("no"); } } return0; }  
c -1
h -1
intn,m; inta[100],b[100]; voidshuru@@ () { inti; cin>>n>>m; for(i=1;i<=n;i++) cin>>a[i]; for(i=1;i<=m;i++) cin>>b[i]; } voidpaixu@@ () { inti,j; for(i=1;i<n;i++) for(j=i+1;j<=n;j++) {@@ if(a[i]>@@ a[j]@@ ){@@ a[0]=@@ a[i];a[i]=@@ a[j];a[j]=@@ a[0]@@ ;}} for(i=1;i<m;i++) for(j=i+1;j<=@@ m;j++) {@@ if(b[i]>@@ b[j]@@ ){@@ b[0]=@@ b[i]@@ ;@@ b[i]=b[j]@@ ;@@ b[j]=@@ b[0]@@ ;}} } void@@ hebin@@ () { inti; for(i=n@@ +1;i<=@@ n+m;i++) { a[i]=b[i-@@ n]; } } voidshuchu@@ () { inti; for(i=1;i<=@@ m+@@ n-1;i++) cout<<a[i]@@ <<''; cout<<a[@@ m+@@ n@@ ]<<endl; } intmain() { shuru@@ (); paixu@@ (); hebin@@ (); shuchu@@ (); return0; }  
c -1
h -1
0

int@@ juzhen@@ (intm,int@@ n){ inta[100][100@@ ];@@ int@@ s=0,@@ i,j; for(i=1;i<=@@ m;i++){ for(j=1;j<=n;j++){ cin>>a[i][j]; }} int(*p)@@ [100@@ ]=a; for(i=1;i<=n;i++) s+=@@ *(*(p@@ +1)@@ +i); for(i=2;i<=@@ m;i++) s+=@@ *(*(p+i)@@ +@@ n); for(i=n-1@@ ;i>=1;i--) s+=@@ *(*(p@@ +m@@ )@@ +i); for(i=@@ m-1@@ ;i@@ >1@@ ;i--) s+=@@ *(*(p+i)@@ +1); return@@ s; } intmain(){ intk,m,n,@@ t; cin>>k; for(t@@ =1;t@@ <=k;@@ t++){ cin>>m>>n; cout<<@@ juzhen@@ (m,@@ n@@ )<<endl; } return0; }  
c -1
h -1
intmain(intargc,char*argv[]) { inti,@@ a[@@ 16],@@ s=0,@@ j@@ ;@@ scanf("%d",&a[0]); while(@@ a[0]@@ !=-1) { for(i=1;i<=@@ 15;i++) {@@ scanf("%d",&a[i]); if(a[i]==0)break; for(j=0;j<=i;j++) if(a[j]==2*@@ a[i]@@ ||@@ a[j]@@ ==0@@ .@@ 5@@ *@@ a[i])@@ s@@ +=1; }@@ printf("%d\n",s); s=0; scanf("%d",&a[0]); } return0; }  
c -1
h -1
0

structbook { int@@ mun@@ ; charname[26]; }a[@@ 999]; intmain() { intn,i,j,@@ l,@@ q=0; char@@ k; scanf("%d",&n); for(i=0;i<n;i++) { scanf("%d%s",&@@ a[i].@@ mun@@ ,@@ a[i].@@ name); } int@@ w@@ [26]={0}; for(i=0;i<n;i++) { l=strlen(@@ a[i].@@ name); for(j=0;j<l;j++) { k=@@ a[i].@@ name@@ [j]; w@@ [k@@ -65]++; } } int@@ max; max=@@ w@@ [0]; int@@ flag=0; for(i=0;i<26;i++) { if(w@@ [i]>max) {max=@@ w@@ [i];@@ flag@@ =i;} } printf("%c\n",@@ flag@@ +65); printf("%d\n",@@ w@@ [@@ flag@@ ]); for(i=0;i<n;i++) { l=strlen(@@ a[i].@@ name); for(j=0;j<l;j++) { if(a[i].@@ name[j]==@@ (@@ flag@@ +65@@ )) printf("%d\n",@@ a[i].@@ mun@@ ); } } return0; }  
c -1
h -1
intmain() { intn,k,@@ s,@@ x; scanf("%d%d",&n,&k); x=0; inta[1000]; for(inti=0;i<n;i++){ scanf("%d",&a[i]); } for(intj=0;j<@@ n-1@@ ;j++){ for(intl@@ =j+1@@ ;@@ l@@ <n;@@ l++){ s=@@ a[j]@@ +@@ a[l@@ ]; if(s@@ ==k){ x=x@@ +1;} } } if(x@@ ==0){ printf("no");} if(x@@ !=0){ printf("yes");} return0; }  
c -1
h -1
0

intmain() { intt,@@ tri@@ [100][100],@@ h,@@ l@@ ,*@@ point@@ =@@ tri@@ [0]; cin>>t; for(inti=1;i<=@@ t;i++) { cin>>@@ h@@ >>@@ l; int@@ temp=0; for(intp@@ =1@@ ;p<=@@ h@@ ;p++) { for(int@@ q@@ =1;@@ q@@ <=@@ l@@ ;q++) { cin>>@@ *(@@ point@@ +@@ 100@@ *p@@ +@@ q); if(p@@ ==1||@@ q@@ ==1||@@ p@@ ==@@ h@@ ||@@ q@@ ==@@ l) temp@@ +=@@ *(@@ point@@ +@@ 100@@ *p@@ +@@ q); } } cout<<@@ temp@@ <<endl; } return0; }  
c -1
h -1
intmain(intargc,char*argv[]) { inti,@@ a,@@ n,@@ b=0,@@ c=0,@@ d=0; scanf("%d",&n); for(i=1;i<=@@ n*@@ n;i++) { scanf("%d",&a); if(a==0) { b++; c++; d=@@ b@@ >@@ d@@ ?@@ b@@ :@@ d; } if(a==@@ 255) b=0; } b@@ =(@@ c@@ -2*@@ d@@ )@@ /2; printf("%d\n",@@ (@@ b@@ *(@@ d@@ -2@@ )@@ )); return0; }  
c -1
h -1
0

intf(inta,int@@ min) { if(a<@@ min) { return0; } int@@ result@@ =1,i; for(i=min@@ ;i<@@ a;i++) { if(a%i==0) { result+=@@ f(a@@ /i,i); } } return(@@ result); } intmain() { intn,@@ a[100],b[100],@@ i; scanf("%d\n",&n); for(i=0;i<n;i++) { scanf("%d\n",&@@ a[i]); } for(i=0;i<n;i++) { b[i]=@@ f(@@ a[i],@@ 2); } for(i=0;i<n;i++) {printf("%d\n",@@ b[i]@@ );} return0; }  
c -1
h -1
intmain() { intm,i,j,@@ a[1000],@@ c[@@ 91@@ ]={0},@@ k,@@ n,@@ p=0; charb[@@ 1000][@@ 26],@@ q; scanf("%d",&m); for(i=1;i<=m;i++) { scanf("%d%s",&a[i],@@ b[i]); n=strlen(@@ b[i]); for(j=0;j<=n-1;j++) { k=@@ b[i]@@ [j]; c@@ [k]++; } } for(i=@@ 65@@ ;i<@@ 91@@ ;i++)@@ if(c@@ [i]>@@ p@@ ){@@ p=@@ c[i]@@ ;q@@ =i;} printf("%c\n%d\n",@@ q,@@ p); for(i=1;i<=m;i++) { n=strlen(@@ b[i]); for(j=0;j<=@@ n-1@@ ;j++)@@ if(b[i]@@ [j]==@@ q@@ )@@ printf("%d\n",a[i]); } return0; }  
c -1
h -1
0

intmain() { int@@ col,@@ row,@@ sz@@ [100][100]; cin>>row>>col; intl,@@ m; for(l=0;l@@ <row@@ ;l++) { for(m=0;m@@ <col@@ ;m++) { cin>>@@ sz[@@ l@@ ][@@ m]; } } inti,j,k; for(k=0;k<@@ row+col@@ -1;k++) { for(i=0;i<row;i++) { for(j=0;j<col;j++) { if(k==@@ i@@ +j@@ ) { cout<<@@ sz@@ [i][j]<<endl; } if(i+j@@ >@@ k) break; } } } return0; }  
c -1
h -1
int@@ strnl@@ (char@@ *,@@ char*@@ ); void@@ replace@@ (@@ char*@@ str@@ ,int@@ len_ss@@ ,int@@ start@@ ,char*@@ rpl@@ ); intmain() { charstr[256],@@ substr@@ [256],@@ rpl@@ [256]; int@@ start@@ ; scanf("%s%s%s",@@ str,@@ substr@@ ,@@ rpl@@ ); start@@ =@@ strnl@@ (@@ str,@@ substr@@ ); if(@@ start@@ !=-1) replace@@ (@@ str,@@ strlen(@@ substr@@ ),@@ start@@ ,@@ rpl@@ ); else printf("%s\n",@@ str); return0; } int@@ isstart@@ (inti,@@ char*@@ s,@@ char*@@ subs@@ ) { char@@ temp@@ [256]; char@@ *p,*@@ pt@@ ; p=@@ s@@ +@@ i; pt@@ =temp; intj; for(j=0;j<strlen(@@ subs@@ );j++) *@@ pt@@ ++=@@ *p@@ ++; *@@ pt@@ =0; if(!@@ strcmp(@@ temp,@@ subs@@ )) return1; return0; } int@@ strnl@@ (@@ char*@@ s,@@ char*@@ subs@@ ) { inti; for(i=0;i<=@@ strlen(@@ s)@@ -strlen(@@ subs@@ );i++) if(@@ isstart@@ (i,@@ s,@@ subs@@ )) return@@ i; return-1; } void@@ replace@@ (@@ char*@@ str@@ ,int@@ len_ss@@ ,int@@ start@@ ,char*@@ rpl@@ ) { char@@ temp@@ [256]; strcpy(@@ temp,@@ str); char*@@ ptmp@@ ,*@@ prpl@@ ; ptmp@@ =@@ temp@@ +@@ start@@ ; prpl@@ =@@ rpl@@ ; while(@@ *@@ prpl@@ ) *@@ ptmp@@ ++=@@ *@@ prpl@@ ++; char*@@ pstr@@ =@@ str@@ +@@ start@@ +@@ len_ss@@ ; while(@@ *@@ pstr@@ ) *@@ ptmp@@ ++=@@ *@@ pstr@@ ++; *@@ ptmp@@ =0; strcpy(@@ str,@@ temp); printf("%s\n",@@ temp); }  
c -1
h -1
0

void@@ bubble@@ (inta[],int@@ l) { inti,j,temp; for(j=1;j<@@ l@@ ;j++) { for(i=0;i<l@@ -j;i++) { if(a[i]>a[i+1]) { temp=a[i]; a[i]=a[i+1]; a[i+1]=@@ temp; } } } } intmain() { intm,n,i,j,@@ a[@@ 10000@@ ],b[@@ 10000]; scanf("%d%d",&m,&n); for(i=0;i<m;i++) { scanf("%d",&a[i]); } for(j=0;j<n;j++) { scanf("%d",&@@ b[j]); } bubble@@ (a,m); bubble@@ (b,n); for(i=0;i<m;i++) { printf("%d",a[i]); } for(j=0;j<n;j++) { printf("%d",@@ b[j]); if(j<@@ n-1) printf(""); } return0; }  
c -1
h -1
intmain() { structstudent { intnum; intchinese; intmath; intsum; }@@ m[@@ 4@@ ],@@ t; intn,i; scanf("%d",&n); for(i=1;i<=@@ 3;i++) m@@ [i].@@ sum@@ =-1; for(i=1;i<=n;i++) { scanf("%d%d%d",&@@ t@@ .@@ num,&@@ t@@ .@@ chinese@@ ,&@@ t@@ .@@ math); t@@ .@@ sum=@@ t@@ .@@ chinese+@@ t@@ .@@ math; if(t@@ .@@ sum>@@ m@@ [1].@@ sum) { m@@ [3@@ ]=@@ m@@ [2]; m@@ [2]=@@ m@@ [1]; m@@ [1]=@@ t; } else if(t@@ .@@ sum>@@ m@@ [2].@@ sum) { m@@ [3@@ ]=@@ m@@ [2]; m@@ [2]=@@ t; } else if(t@@ .@@ sum>@@ m@@ [3].@@ sum) m@@ [3@@ ]=t; } for(i=1;i<=@@ 3;i++) printf("%d%d\n",@@ m@@ [i].@@ num,@@ m@@ [i].@@ sum); }  
c -1
h -1
0

intmain() { inta,b,@@ j,@@ i,@@ leap@@ =0,@@ f=1; intm[@@ 20000]; scanf("%d",&a); for(i=0;i<a;i++) scanf("%d",&@@ m[i]); for(i=0;i<a;i++) {@@ leap@@ =0; for(j=0;j<@@ i@@ +1@@ ;j++) {@@ if(j==i) continue; else {@@ if(m@@ [i]==@@ m@@ [j]) {@@ leap@@ =1; break;} } } if(leap@@ ==0&&@@ f@@ ==1) {printf("%d",@@ m[i]); f=0; continue; } if(leap@@ ==0&&@@ f@@ ==0) printf("%d",@@ m[i]); } return0; }  
c -1
h -1
intmain() { intn,@@ mian@@ [@@ 105@@ ][@@ 105@@ ]; inti,j,@@ i1@@ ,@@ j1@@ ,@@ i2@@ ,@@ j2@@ ; cin>>n; for(i=0;i<n;i++) { for(j=0;j<n;j++) { cin>>@@ mian@@ [i][j]; } } for(i=0;i<n;i++) { for(j=0;j<n;j++) { if(@@ mian@@ [i][j]==0&&@@ mian@@ [i+1][j]@@ ==0&&@@ mian@@ [i]@@ [j+1@@ ]==0) { i1@@ =i; j1@@ =j; } elseif(@@ mian@@ [i][j]==0&&@@ mian@@ [i-1][j]@@ ==0&&@@ mian@@ [i]@@ [j-1]@@ ==0) { i2@@ =i; j2@@ =j; } } } cout<<(@@ i2@@ -@@ i1@@ -1)*(@@ j2@@ -@@ j1@@ -1); return0; }  
c -1
h -1
0

intm,n; structstudent { intid; charname@@ [100]; structstudent*next; }; structstudent*creat@@ () { inti=1; structstudent*head,*p1,*p2; p1=p2@@ =(structstudent*)malloc(len); scanf("%d",&m); scanf("%d%s",&p1->@@ id,@@ p1->@@ name); head=NULL; for(@@ ;i<@@ m;i++) { if(i@@ ==1)head=p1; p1@@ =(structstudent*)malloc(len); scanf("%d%s",&p1->@@ id,@@ p1->@@ name); p2->next=p1; p2=p1; } p2->next=NULL; return(head); } voidmain() { structstudent*head,*@@ p1; intnum[@@ 30@@ ]={0},@@ max@@ ,j; char@@ i,@@ auth@@ ; head=creat(); for(p1=@@ head;@@ p1@@ !=NULL;@@ p1=p1->next) { for(i@@ ='A'@@ ;i<=@@ 'Z'@@ ;i++) { for(j=0;j<strlen(@@ p1->name@@ );j++) if(p1->@@ name[j]==@@ i) num@@ [i@@ -'A']++; } } for(i=0,@@ max@@ =0;i<@@ 26;i++) { if(num@@ [i]>max) { max=@@ num[i]; auth@@ =i@@ +'A'@@ ; } } printf("%c\n",@@ auth@@ ); printf("%d\n",max); for(p1=@@ head;@@ p1@@ !=NULL;@@ p1=p1->next) { for(j=0;j<strlen(@@ p1->name@@ );j++) if(p1->@@ name[j]==@@ auth@@ ) printf("%d\n",@@ p1->@@ id); } }  
c -1
h -1
intmain() { intn,i,@@ a[100],@@ j=0,@@ c[100],@@ z,@@ r; chars@@ [100][@@ 10@@ ],b[100@@ ][10]; scanf("%d",&n); for(i=0;i<n;i++) { scanf("%s%d",@@ s[i]@@ ,&@@ a[i]); if(a[i]@@ >=60){ c[j]=@@ a[i]; strcpy(@@ b[j]@@ ,@@ s[i]); j++; } } for(z@@ =j@@ -1;@@ z@@ >0@@ ;@@ z@@ --) { for(r=0;r@@ <@@ z@@ ;r++) { if(@@ c[@@ r@@ ]<@@ c[@@ r@@ +1@@ ]){ int@@ tep@@ ; char@@ m@@ [10]; tep@@ =@@ c[@@ r@@ +1]; c[@@ r@@ +1]=@@ c[@@ r@@ ]; c[@@ r@@ ]=@@ tep@@ ; strcpy(@@ m,@@ b[r@@ ]); strcpy(@@ b[r@@ ],b[@@ r@@ +1@@ ]); strcpy(@@ b[r@@ +1],@@ m); } } } for(i=0;i<j;i++) { printf("%s\n",@@ b[i]); } for(i=0;i<n;i++) { if(a[i]@@ <60){ printf("%s\n",@@ s[i]); } } return0; }  
c -1
h -1
0

voidmain() { intnum@@ =0,@@ n,@@ a[@@ 26],@@ name@@ [1000],@@ name2@@ [1000],@@ i,j,k,@@ max=0,@@ maxi@@ =0; char@@ wr@@ [1000][@@ 27]; char@@ q; scanf("%d",&n); for(i=0;i<26;i++) { a[i]=0; } for(i=0;i<n;i++) { scanf("%d%s",&@@ (@@ name@@ [i]@@ ),@@ wr@@ [i]); for(j=0;j<26;j++) { for(k=0;k<26;k++) { if(@@ wr@@ [i][j]=='@@ A'+@@ k)@@ a[k@@ ]++; } } } for(i=0;i<26;i++) { if(a[i]>max) { max=a[i]; maxi@@ =i; } } q@@ ='A'+@@ maxi@@ ; printf("%c\n",@@ q); for(i=0;i<n;i++) { for(j=0;j<26;j++) { if(@@ wr@@ [i][j]==@@ q) { name2@@ [@@ num@@ ]=@@ name@@ [i]; num++; } } } printf("%d\n",num); for(i=0;i<@@ num@@ ;i++)@@ printf("%d\n",@@ name2@@ [i]); }  
c -1
h -1
intmain() { introw,col,@@ array@@ [100][100],@@ i,j; cin>>row>>col; for(i=0;i<row;i++) for(j=0;j<col;j++) cin>>array[i][j]; for(i=0;i<col;i++) { for(j=0;j<=i;j++) { if(j@@ <row@@ )@@ cout<<array@@ [j]@@ [i-j@@ ]<<endl; } } for(j=1;j<@@ row@@ ;j++) { for(i=@@ col-1@@ ;i>=0;i--) { if(@@ col-1@@ +j@@ -i@@ <row) { cout<<@@ array[@@ col-1@@ -i@@ +j@@ ]@@ [i]<<endl; } } } return0; }  
c -1
h -1
0

voidmain() { intn,i,j,a[@@ 1000],b[1000],@@ max=0; scanf("%d",&n); for(i=0;i<n;i++) b[i]=1; for(i=0;i<n;i++) scanf("%d",&a[i]); for(i=0;i<n;i++) for(j=0;j<i;j++) if(a[j]>=@@ a[i]) b[i]=@@ MAX@@ (@@ b[j]@@ +1,@@ b[i]); for(i=0;i<n;i++) max=@@ MAX@@ (@@ max,@@ b[i]); printf("%d\n",max); }  
c -1
h -1
intmain() { intn; scanf("%d",&n); intsz[100][100]; for(int@@ row@@ =0;row@@ <n;@@ row++){ for(int@@ col@@ =0;col@@ <n;col@@ ++){ scanf("%d",&@@ sz[row][col@@ ]); } } int@@ a1@@ =@@ 100@@ ,@@ b1@@ =@@ 100@@ ,@@ a2@@ =0,@@ b2@@ =0; for(int@@ r=0;r@@ <n;@@ r@@ ++){ for(int@@ c@@ =0;c@@ <n;@@ c@@ ++){ if(sz[@@ r@@ ][c@@ ]==0){ a1@@ =@@ r; b1@@ =@@ c; break; } } if(@@ a1@@ !=@@ 100@@ ||@@ b1@@ !=@@ 100@@ ){ break; } } for(int@@ rr@@ =@@ n-1;@@ rr@@ >=0;@@ rr@@ --){ for(int@@ cc@@ =@@ n-1;@@ cc@@ >=0;@@ cc@@ --){ if(sz[@@ rr@@ ][@@ cc@@ ]==0){ a2@@ =@@ rr@@ ; b2@@ =@@ cc@@ ; break; } } if(@@ a2@@ !=0@@ ||@@ b2@@ !=0){ break; } } ints; s=(@@ a2-a1@@ -1)*(@@ b2-b1@@ -1); printf("%d",s); return0; }  
c -1
h -1
0

intn,a[@@ MAXN@@ +@@ 10],@@ f[@@ MAXN@@ +@@ 10]; intmain() { cin>>n; for(inti=0;i<@@ n;++@@ i) { cin>>a[i]; } int@@ ans=0; for(inti=0;i<@@ n;++@@ i) { for(intj=0;j<@@ i@@ ;++@@ j) { if(a[j]>=@@ a[i])@@ f[i]=@@ max(@@ f@@ [i],@@ f@@ [j]); } f@@ [i]++; ans=@@ max(@@ ans@@ ,@@ f@@ [i]); } cout<<ans@@ <<endl; return0; }  
c -1
h -1
structstu@@ { intID; int@@ ch; int@@ ma; intsum; structstu*next; }; intmain(){ structstu*@@ head; structstu*@@ p1,*p2,*@@ a,*@@ b@@ ,*@@ c@@ ,*@@ t; intn,@@ i=0; a=@@ b=@@ c@@ =p1@@ =p2@@ =(struct@@ stu*)malloc(sizeof(structstu)); scanf("%d",&n); scanf("%d%d%d",&p1->@@ ID@@ ,&p1->@@ ch@@ ,&p1->@@ ma@@ ); p1->sum=p1->@@ ch@@ +p1->@@ ma; head=NULL; while(i<@@ n-1){ i++; p1->sum=p1->@@ ch@@ +p1->@@ ma; if(i@@ ==1)head=p1; elsep2->next=p1; p2=p1; if(p1->@@ sum>@@ a@@ ->@@ sum@@ ){@@ c=@@ b@@ ;@@ b=@@ a;@@ a=@@ p2@@ ;} elseif(@@ p1->@@ sum>@@ b@@ ->@@ sum@@ ){@@ c=@@ b@@ ;@@ b=@@ p2@@ ;} elseif(@@ p1->@@ sum>@@ c@@ ->@@ sum@@ )@@ c=@@ p2; p1=(struct@@ stu*)malloc(sizeof(structstu)); scanf("%d%d%d",&p1->@@ ID@@ ,&p1->@@ ch@@ ,&p1->@@ ma@@ ); } p2->next=NULL; printf("%d%d\n%d%d\n%d%d\n",@@ a@@ ->@@ ID,@@ a@@ ->@@ sum,@@ b@@ ->@@ ID,@@ b@@ ->@@ sum,@@ c@@ ->@@ ID,@@ c@@ ->sum); return0; }  
c -1
h -1
0

voidmain() { intn,k,@@ a[@@ MAX@@ ]; inti,j,@@ flag=0; scanf("%d%d",&n,&k); for(i=0;i<n;i++) scanf("%d",a@@ +i); for(i=0;i<n;i++){ for(j=0;j<n;j++){ if(@@ *(a+i)@@ +*(@@ a@@ +j)@@ ==k){ flag=1; break; } } } if(flag) printf("yes\n"); else printf("no\n"); }  
c -1
h -1
intmain(){ introw,col,@@ i,j; cin>>row>>col; inta[100][100]; for(i=0;i<row;i++) for(j=0;j<col;j++) cin>>*(*(a+i)+j); for(intt@@ =0;t@@ <row@@ +col@@ -1;@@ t++) for(j@@ =(@@ col-1@@ >@@ t@@ ?@@ t@@ :@@ col@@ -1)@@ ;t@@ -j@@ <=row-1@@ &&j>=0@@ ;j--) cout<<*(*(a@@ +@@ t@@ -j@@ )@@ +j)<<endl; return0; }  
c -1
h -1
0

typedef@@ char@@ q@@ [30]; void@@ init@@ (inta[],int@@ f[@@ ],@@ q@@ *p@@ [@@ lll@@ ],int@@ m) { inti; char@@ e@@ [@@ 432@@ ]; char*@@ pp@@ ; int@@ r; for(i=1;i<=m;i++) { p[i]@@ =(@@ q@@ *)malloc(sizeof(@@ q@@ )); scanf("%d%s",&@@ f@@ [i],@@ p[i]); getchar(); pp@@ =*@@ p[i]; while(@@ *@@ pp@@ !='\0') {@@ a[@@ *@@ pp@@ ]++; pp@@ ++; } } } char@@ pro@@ (inta[@@ ]) { char@@ c,@@ max,@@ g; max@@ =-@@ 333@@ ; for(c@@ ='A'@@ ;c@@ <=@@ 'Z'@@ ;c@@ ++) if(a[@@ c@@ ]@@ >max){max=@@ a[c@@ ];@@ g=@@ c@@ ;} return@@ g; } voidprint@@ (int@@ f[@@ ],@@ q@@ *p@@ [@@ lll@@ ],int@@ m,@@ char@@ c) { inti; for(i=1;i<=m;i++) if(@@ strchr@@ (*p@@ [i],@@ c)@@ !=NULL@@ )@@ printf("%d\n",@@ f@@ [i]); } intmain() { intm,@@ k; inta[@@ 343@@ ]={0}; intf@@ [@@ lll@@ ]; q@@ *p@@ [@@ lll@@ ]; char@@ max; scanf("%d",&m); init@@ (a,@@ f,@@ p,@@ m); max=@@ pro@@ (a); printf("%c\n%d\n",@@ max,@@ a[@@ max@@ ]); print(@@ f,@@ p,@@ m,@@ max); }  
c -1
h -1
inta[@@ 25@@ ]={0},@@ n; intmain() {int@@ F@@ (int@@ x); inti,@@ z=0; scanf("%d",&n); for(i=0;i<n;i++) scanf("%d",&a[i]); for(i=0;i<n;i++) if(z@@ <@@ F@@ (i@@ ))@@ z=@@ F@@ (i); printf("%d\n",@@ z); } int@@ F@@ (intx) { inti,@@ z=1; for(i=x@@ +1@@ ;i<n;i++) if((@@ a[x@@ ]>=@@ a[i]@@ )&&(@@ F@@ (i@@ )@@ +1>@@ z@@ )) z=@@ F@@ (i@@ )@@ +1; return@@ z@@ ;}  
c -1
h -1
0

intmain(){ intt; cin>>t; while(t@@ >0) { inta[@@ 102@@ ][@@ 102@@ ]; intm,n; cin>>m>>n; intsum=0; for(inti=0;i<@@ m;i++){ for(intj=0;j<n;j++) cin>>*(*(a+i)+j); } if(m@@ ==1){ for(inti=0;i<n;i++) sum+=*(@@ *a@@ +i); } else{ for(inti=0;i<n;i++) sum+=*(@@ *a@@ +i); for(inti=1;i<@@ m-1;i++) sum=sum+@@ *(*(a+i)@@ )+@@ *(*(a+i)@@ +n-1); for(inti=0;i<n;i++) sum+=*(*(a@@ +m-1)@@ +i); } cout<<sum<<endl; t@@ --; } return0; }  
c -1
h -1
intmain() { int@@ height@@ [50@@ ],@@ flag@@ [50@@ ],@@ max,@@ i,j; intnum; scanf("%d",&num); for(i=0;i<num;i++) { scanf("%d",&@@ height@@ [i]); flag@@ [i]=1; } for(i=0;i<num;i++) { for(j=0;j<i;j++) { if(@@ height@@ [j]>=@@ height@@ [i]) { if(flag@@ [j]+1>@@ flag@@ [i]) flag@@ [i]=@@ flag@@ [j]+1; } } } max=@@ flag@@ [0]; for(i=1;i<@@ num;i++) { if(flag@@ [i]>max) max=@@ flag@@ [i]; } printf("%d\n",max); return0; }  
c -1
h -1
0

intfenjie@@ (int,int); intmain() { inti,n,@@ t,@@ r,@@ num; cin>>n; for(i=1;i<=n;i++) { cin>>num; r=@@ fenjie@@ (num,@@ 2); cout<<@@ r@@ <<endl; } return0; } intfenjie@@ (int@@ num,int@@ min) { inti,j,k,@@ r=0; for(i=min@@ ;i<=@@ num;i++) { if(num@@ %i==0) { r=r@@ +@@ fenjie@@ (@@ num@@ /i,i); } if(i==@@ num@@ )@@ r++; } return@@ r; }  
c -1
h -1
intmain(intargc,char*argv[]) { intn,m,@@ k=0,@@ i,j; int*@@ a; scanf("%d",&n); a=@@ (int*)@@ (@@ malloc(@@ n@@ *sizeof(int@@ )@@ )); for(i=0;i<n;i++) { for(j=0;j<n;j++) scanf("%d",&a[j]); for(j=0;j<n;j++) { if(a[j]@@ ==0) break; } for(m@@ =j+1@@ ;m@@ <n;m++) {if(@@ a[m@@ ]==0) {@@ k=k@@ +m@@ -j@@ -1; break;} } } printf("%d",k); return0; }  
c -1
h -1
0

voidmain() { struct@@ person { charid[10]; intage; }@@ m@@ [100@@ ],b[100]; intn,@@ t,@@ i,j; char@@ temp@@ [10]; scanf("%d",&n); for(i=0;i<n;i++) { scanf("%s",@@ m@@ [i].id); strcpy(@@ b[i].@@ id,@@ m@@ [i].id); scanf("%d",&@@ m@@ [i].age); b@@ [i].age@@ =@@ m@@ [i].age; } for(i=0;i<n-1;i++) for(j=0;j<n-1-i;j++) { if(m@@ [j].age@@ <m@@ [j+1@@ ].age) { t=@@ m@@ [j].@@ age; m@@ [j].age@@ =@@ m@@ [j+1].@@ age; m@@ [j+1@@ ].age=@@ t; strcpy(@@ temp,@@ m@@ [j].@@ id); strcpy(@@ m@@ [j].@@ id,@@ m@@ [j+1].@@ id); strcpy(@@ m@@ [j+1].@@ id,@@ temp); } } for(i=0;i<n;i++) if(m@@ [i].age@@ >=60@@ )@@ printf("%s\n",@@ m@@ [i].id); for(i=0;i<n;i++) if(b@@ [i].age@@ <60@@ )@@ printf("%s\n",@@ b[i].@@ id); }  
c -1
h -1
intmain(intargc,char*argv[]) { intn; int@@ histgram@@ [@@ 101]; inti; intx; scanf("%d",&n); for(i=0;i<@@ 101@@ ;i++) { histgram@@ [i]=0; } scanf("%d",&x); histgram@@ [x@@ ]++; printf("%d",x); for(i=0;i<n-1;i++) { scanf("%d",&x); if(!@@ histgram@@ [x@@ ]) { printf("%d",x); } histgram@@ [x@@ ]++; } return0; }  
c -1
h -1
0

intmain() { intn@@ ,*@@ a,*@@ d@@ ,j,@@ i; scanf("%d",&n); a=@@ (int*)malloc(sizeof(int)@@ *(@@ n+1@@ )); for(i=1;i<@@ n@@ +1;i++) scanf("%d",&a[i]); d=@@ (int*)malloc(sizeof(int)@@ *(@@ n+1@@ )); for(i=1;i<=n;i++) d@@ [i]=1; for(i=n-1@@ ;i>0;i--) { for(j=i+1;j<=n;j++) { if(a[j]<=@@ a[i]) if(d@@ [i]<@@ d@@ [j]@@ +1) d[i]=@@ d@@ [j]+1; } } intmax=@@ d@@ [1]; for(i=1;i<=n;i++) if(max<@@ d@@ [i]) max=@@ d[i]; printf("%d\n",max); free(@@ a); free(@@ d); return0; }  
c -1
h -1
intmain() { inta[16]; inti,j,k,@@ l; while(@@ scanf("%d",&@@ a[0]@@ )&&@@ a[0]@@ !=-1) {@@ l=0; if(a[0]@@ !=0) { for(i=1;@@ a[i-1]@@ !=0;i++) { scanf("%d",&a[i]); } for(j=0;j<=i-1;j++) for(k=0;k<j@@ ;k++) if(a[k@@ ]==2*@@ a[j]||a[j]==2*@@ a[k]@@ )@@ l++; printf("%d\n",@@ l); } else@@ printf("%d\n",@@ l); } return0; }  
c -1
h -1
0

intmain(intargc,char*argv[]) { inty,m,@@ d; scanf("%d%d%d",&y,&m,&d); if(y%@@ 100==0&&@@ y%@@ 40@@ ==0||@@ y%100!=0@@ &&@@ y%@@ 4==0) switch(m) { case1:@@ printf("%d\n",@@ d@@ );break; case2:@@ printf("%d\n",@@ d+@@ 31@@ );break; case3:@@ printf("%d\n",@@ d+@@ 60@@ );break; case4:@@ printf("%d\n",@@ d+@@ 91@@ );break; case5:@@ printf("%d\n",@@ d+@@ 121@@ );break; case6:@@ printf("%d\n",@@ d+@@ 152@@ );break; case7:@@ printf("%d\n",@@ d+@@ 182@@ );break; case8:@@ printf("%d\n",@@ d+@@ 213@@ );break; case9:@@ printf("%d\n",@@ d+@@ 244@@ );break; case10:@@ printf("%d\n",@@ d+@@ 274@@ );break; case11:@@ printf("%d\n",@@ d+@@ 305@@ );break; case12:@@ printf("%d\n",@@ d+@@ 335@@ );break; } else switch(m) { case1:@@ printf("%d\n",@@ d@@ );break; case2:@@ printf("%d\n",@@ d+@@ 31@@ );break; case3:@@ printf("%d\n",@@ d+@@ 59@@ );break; case4:@@ printf("%d\n",@@ d+@@ 90@@ );break; case5:@@ printf("%d\n",@@ d+@@ 120@@ );break; case6:@@ printf("%d\n",@@ d+@@ 151@@ );break; case7:@@ printf("%d\n",@@ d+@@ 181@@ );break; case8:@@ printf("%d\n",@@ d+@@ 212@@ );break; case9:@@ printf("%d\n",@@ d+@@ 243@@ );break; case10:@@ printf("%d\n",@@ d+@@ 273@@ );break; case11:@@ printf("%d\n",@@ d+@@ 304@@ );break; case12:@@ printf("%d\n",@@ d+@@ 334@@ );break; } return0; }  
c -1
h -1
intmain() { inti,j,n,@@ a; cin>>n; for(i=1;i<=n;i++) { for(j=1;j<=n;j++) { cin>>a; if(a@@ ==0)break; } if(a@@ ==0)break; } ints=0; while(@@ ++@@ j@@ <=@@ n) { if(a@@ ==0)@@ s++; cin>>a; } intnum=0; for(i@@ +=@@ 1@@ ;i<=n;i++) for(j=1;j<=n;j++) { cin>>a; if(a@@ ==0)@@ num++; } int@@ r; r@@ =(@@ num@@ -@@ s)@@ /2; s@@ -=@@ 2; cout<<@@ r@@ *@@ s@@ <<endl; return0; }  
c -1
h -1
0

intmain(){ char@@ mubiao@@ [N@@ ],@@ h; char@@ zichuan@@ [N]; char@@ replace@@ [N]; inti,@@ x; intj=0; int@@ flag; scanf("%s",@@ mubiao@@ ); scanf("%s",@@ zichuan@@ ); scanf("%s",@@ replace); int@@ a=strlen(@@ mubiao@@ ); int@@ b=strlen(@@ zichuan@@ ); for(i=0;i<a;i++){ if(@@ mubiao@@ [i]==@@ zichuan@@ [j]){ j++; }else{ j=0; } if(j==@@ b){ flag=1; break; } } if(flag@@ ==1){ for(j=@@ b@@ -1@@ ;j>=0;j--){ h=@@ replace@@ [j]; mubiao@@ [i]=@@ h; i--; } } printf("%s\n",@@ mubiao@@ ); return0; }  
c -1
h -1
intmain() { inta[16],@@ i,j,k,@@ l; do { i=0; l=@@ -1; for(j=0;j<=@@ 15@@ ;j++) a[j]@@ =1; do { cin>>a[i]; i++; if(a[0]==-1) break; }while(@@ a[i-1]@@ !=0); if(a[0]==-1) break; for(j=0;j<=i-1;j++) { for(k=0;k<=@@ i-1;k++) { if(a[j]==2*@@ a[k]) l++; } } cout<<@@ l@@ <<endl@@ ;@@ }while(@@ a[0]@@ !=-1); return0; }  
c -1
h -1
0

intmain() { int@@ year@@ [2@@ ]={@@ 365@@ ,@@ 366@@ }; int@@ month@@ [2][@@ 12]={31,@@ 28,31,30,31,30,31,31,30,31,30,31@@ ,31,@@ 29,31,30,31,30,31,31,30,31,30,31}; inty,m,@@ d; cin>>y>>m>>d; int@@ type@@ ; if((y%@@ 4==0&&y%100!=0@@ )||@@ y%@@ 400@@ ==0){ type@@ =1; } else{ type@@ =0; } inti; intsum=0; for(i=0;i<m@@ -1;i++){ sum+=@@ month@@ [@@ type@@ ]@@ [i]; } sum+=@@ d; cout<<sum<<endl; return0; }  
c -1
h -1
intmain() { intk,@@ n,@@ b[@@ 20001@@ ],c[@@ 20001@@ ],@@ i=0,@@ j@@ =1,@@ l,@@ m; cin>>n; for(l=0;l<@@ 20001@@ ;l++) {@@ b[l@@ ]@@ =0;} for(m=0;m<@@ 20001@@ ;m++) {@@ c[m@@ ]@@ =0;} while(j@@ <=@@ n) {@@ cin>>k; if(@@ b[k@@ ]==0) c[i]=@@ k; b[k@@ ]++; i++; j@@ ++;} cout<<c[@@ 0]; for(i=1;i<n;i++) { if(c@@ [i]!=0) {@@ cout<<""<<@@ c[i]@@ ;} } return0; }  
c -1
h -1
0

intmain() { int@@ Year@@ ,@@ Month@@ ,@@ Date@@ ; int@@ month@@ ; inti; int@@ sum1@@ =0,@@ sum2@@ =0; scanf("%d%d%d",&@@ Year@@ ,&@@ Month@@ ,&@@ Date@@ ); month@@ =@@ Month@@ -1; if(@@ Year@@ %4==0&&@@ Year@@ %@@ 400@@ ==0){ int@@ mday@@ [@@ 12]={31,29,31,30,31,30,31,31,30,31,30,31}; for(i=0;i<@@ month;i++) sum1@@ =@@ sum1@@ +@@ mday@@ [i]; } else { int@@ mday@@ [12]={31,28,31,30,31,30,31,31,30,31,30,31}; for(i=0;i<@@ month;i++) sum1@@ =@@ sum1@@ +@@ mday@@ [i]; } sum2@@ =@@ sum1@@ +@@ Date@@ ; printf("\n%d",@@ sum2@@ ); return0; }  
c -1
h -1
intmain(){ intn=0,@@ i=0,@@ j=0; cin>>n; int@@ sum[@@ n]; structstudent{ int@@ stuid@@ ; int@@ chin@@ ; intmath; }stu[@@ n@@ ],@@ t; for(i=0;i<n;i++){ cin>>@@ stu[i].@@ stuid@@ >>stu[i].@@ chin@@ >>stu[i].@@ math; sum[i]=@@ stu[i].@@ chin@@ +stu[i].@@ math; } for(i=0;i<3;i++) for(j=0;j<n-1;j++) if((@@ stu[j].@@ chin@@ +@@ stu[j].@@ math@@ )@@ >=@@ (stu@@ [j+1].@@ chin +@@ stu[j+1].@@ math@@ )){ t=@@ stu@@ [j]; stu@@ [j]=@@ stu@@ [j+1]; stu@@ [j+1]=t; } for(i=n-1;i@@ >@@ n-@@ 4@@ ;i--) cout<<@@ stu[i].@@ stuid@@ <<""<<@@ stu[i].@@ chin@@ +stu[i].@@ math@@ <<endl; return0; }  
c -1
h -1
0

intmain(){ intn,i,j; struct@@ ren@@ { char@@ b[100@@ ]; intc; }@@ a[100],@@ d@@ [100],@@ m; scanf("%d",&n); for(i=0;i<n;i++){ scanf("%s%d",@@ a[i].@@ b@@ ,&a[i].@@ c); d[i]=@@ a[i]; } for(i=n-1@@ ;i>0@@ ;i--){ for(j=0;j<i;j++){ if(d@@ [j].@@ c@@ <@@ d@@ [j+1].@@ c){ m=@@ d@@ [j+1]; d@@ [j+1]=@@ d@@ [j]; d@@ [j]=@@ m; } } } for(i=0;i<n;i++){ if(d@@ [i].@@ c@@ >=60){ printf("%s\n",@@ d@@ [i].@@ b); } } for(i=0;i<n;i++){ if(a[i].@@ c@@ <60){ printf("%s\n",@@ a[i].@@ b); } } return0; }  
c -1
h -1
main() { inti,j,k,@@ num=0,@@ tot@@ ,a[@@ 16@@ ],b[@@ 1000]; do { i=0; tot@@ =0; do { scanf("%d",&a[i]); i++; } while(@@ a[i-1]@@ >0@@ ); if(a[0]@@ !=-1) { for(j=0;j<=@@ i@@ -@@ 3;j++) for(k=j+1@@ ;k<=@@ i@@ -2@@ ;k++) if(a[j]==2*@@ a[k]@@ ||@@ a[k@@ ]==2*@@ a[j])@@ tot@@ ++; b[@@ num@@ ]=@@ tot@@ ; num++; } } while(@@ a[0]@@ !=-1); for(i=0;i<num;i++) printf("%d\n",@@ b[i]); return0; }  
c -1
h -1
0

intmain() { introw,col,@@ a[@@ 102@@ ][@@ 102@@ ],i,j,@@ k; int(*p)@@ [@@ 102@@ ]=a; cin>>row>>col; for(i=0;i<row;i++) { for(j=0;j<col;j++) { cin>>@@ *(*(p+i)+j); } } for(j=0;j<col;j++) { i=0; k=j; while(k@@ >=0&&i@@ <row) { cout<<@@ *(*(p+i)@@ +k@@ )<<endl; i++; k--; } } for(i=1;i<row;i++) { j=col-1; k=i; while(k@@ <row@@ &&j@@ >=0) { cout<<@@ *(*(p@@ +k)@@ +j); if(i!=@@ row-1@@ ||j@@ !=@@ col@@ -1)@@ cout<<endl; k++; j--; } } return0; }  
c -1
h -1
intmain() { intm,n; cin>>m>>n; inta[@@ m@@ ][n]; for(inti=0;i<m;i++) for(intj=0;j<n;j++) cin>>a[i][j]; intsum=0; while(1) { if(sum@@ ==@@ m+@@ n-1@@ )break; elseif(@@ sum<=@@ n-1) { for(inti=0;i<=@@ sum@@ ;i++) { if(i>@@ m@@ -1)break; cout<<a[i]@@ [@@ sum@@ -i@@ ]<<endl; } sum++; } else { for(inti=@@ sum@@ +1@@ -n@@ ;i<=@@ sum@@ ;i++) { if(i>@@ m@@ -1)break; cout<<a[i]@@ [@@ sum@@ -i@@ ]<<endl; } sum++; } } return0; }  
c -1
h -1
1


intf(inta,int@@ b){ intnum@@ =1,i; for(i=b@@ ;i<=sqrt(@@ a)@@ ;i++){ if(a@@ %i==0)@@ num+=@@ f(a@@ /i,i); } returnnum; } intmain(){ inti,n,@@ a; cin>>n; for(i=1;i<=n;i++){ cin>>a; cout<<@@ f(a,@@ 2)<<endl; } return0; }  
c -1
h -1
intmain() { char@@ M@@ [3@@ ][@@ 20]; scanf("%s",@@ M@@ [0]); if(M@@ [0][@@ 0]@@ =='@@ i@@ ') printf("@@ iloveearth@@ "); elseif(@@ M@@ [0][@@ 0]@@ =='@@ s@@ ') printf("@@ sdjkhfksdahfjksdh111111lhfjkasdhkfhkasdhfklahsdjkfhsdk@@ "); else@@ printf("@@ programmingiscool@@ "); return0; }  
c -1
h -1
0

intmain() { void@@ px@@ (inta[],int@@ l1@@ ,int@@ b[],int@@ l2@@ ); intlen1,len2,@@ a[100],b[100],@@ i; cin>>@@ len1@@ >>@@ len2@@ ; for(i=1;i<=@@ len1@@ ;i++) cin>>a[i]; for(i=1;i<=@@ len2@@ ;i++) cin>>b[i]; px@@ (a,@@ len1@@ ,@@ b,@@ len2@@ ); return0; } void@@ px@@ (inta[],int@@ l1@@ ,int@@ b[],int@@ l2@@ ) { inti,j,temp; for(i=1;i<=@@ l1@@ -1;i++) for(j=i+1;j<=@@ l1@@ ;j++) if(a[i]>a[j]) {@@ temp=@@ a[j]@@ ,@@ a[j]=@@ a[i],@@ a[i]=@@ temp;} for(i=1;i<=@@ l2@@ -1;i++) for(j=i+1;j<=@@ l2@@ ;j++) if(b[i]>@@ b[j]) {@@ temp=@@ b[j]@@ ,@@ b[j]=@@ b[i]@@ ,@@ b[i]=@@ temp;} for(i=1;i<=@@ l1@@ ;i++) cout<<a[i]<<""; for(i=1;i<=@@ l2@@ -1;i++) cout<<b[i]<<""; cout<<b[@@ l2@@ ]; }  
c -1
h -1
intmain() { structpatient { charid[10]; intage; }; intn,i,j,k; structpatient@@ p@@ [100]; scanf("%d",&n); for(i=0;i<n;i++) scanf("%s%d",@@ p[i].@@ id,@@ &@@ p[i].age); for(i=1;i<n;i++) { if(p@@ [i].age>=60) { j=0; while(j@@ <i@@ &&p@@ [j].age@@ >=@@ p@@ [i].age@@ )@@ j++; if(j<@@ i) { structpatient@@ tmp@@ =p@@ [i]; for(k=i@@ ;k@@ >@@ j@@ ;k--) p@@ [k]=@@ p@@ [k@@ -1]; p@@ [j]=@@ tmp; } } } for(i=0;i<n;i++) printf("%s\n",@@ p@@ [i].id); return0; }  
c -1
h -1
0

int@@ calculate@@ (inta,int@@ num@@ ){ intsum=0; if(num@@ ==1)@@ return1; for(inti=@@ num@@ ;i@@ >=@@ 2@@ ;i--){ if(num@@ %i==0&&@@ i<=@@ a){ sum+=@@ calculate@@ (i,@@ num@@ /i); } } returnsum; } intmain(){ intn; cin>>n; intnum=0; for(inti=0;i<n;i++){ cin>>num; cout<<@@ calculate@@ (num,@@ num@@ )<<endl; } return0; }  
c -1
h -1
intmain() { char@@ n@@ [100],@@ s1@@ [@@ 20],@@ s2@@ [20]; gets(@@ n); gets(@@ s1@@ );@@ gets(@@ s2); if(n@@ [1]@@ =='@@ l@@ ') printf("@@ iloveearth@@ "); elseif(n@@ [0]@@ =='@@ s@@ ') printf("@@ sdjkhfksdahfjksdh111111lhfjkasdhkfhkasdhfklahsdjkfhsdk@@ "); else printf("@@ programmingiscool@@ "); return0; }  
c -1
h -1
0

void@@ fenjie@@ (int@@ ,int@@ ,int); int@@ g_num@@ ,@@ g_count@@ ; intmain() { intn,i; cin>>n; for(i=1;i<=n;i++) { g_count@@ =0; cin>>@@ g_num@@ ; fenjie@@ (2,@@ g_num@@ ,@@ 1); cout<<@@ g_count@@ <<endl; } return0; } void@@ fenjie@@ (inta,int@@ num,int@@ sum) { while(@@ a@@ <=@@ g_num@@ ) { sum@@ *=@@ a; if(sum@@ ==@@ g_num@@ ) g_count@@ ++; if(sum@@ <@@ g_num@@ ) fenjie@@ (a,@@ g_num@@ ,@@ sum); if(sum@@ >@@ g_num@@ ) return; sum@@ /=@@ a; a++; } }  
c -1
h -1
voidmain() { structbook{ intnum; charstr@@ [30]; }@@ bk@@ [@@ 1000]={0}; inti,j,@@ m,n,@@ sum@@ [100]={0},@@ number@@ [@@ 1000]={0},@@ result@@ ,@@ max=0; char@@ temp@@ ='A'; scanf("%d",&m); for(i=0;i<m;i++) scanf("%d%s",&@@ bk[i].@@ num,&@@ bk[i].@@ str); for(i=@@ 65@@ ;i<=@@ 90@@ ;i++){ for(j=0;j<m;j++){ for(n=0;n@@ <26@@ ;n++) if(@@ bk@@ [j].@@ str@@ [n@@ ]==@@ i) sum[i]@@ ++; } } for(j=0;j<26@@ ;j++){ if(sum@@ [j@@ +65@@ ]@@ >max){ max=@@ sum@@ [j@@ +65@@ ]; temp@@ =j@@ +65; result@@ =j@@ +65; } } for(i=0;i<m;i++){ for(n=0;n@@ <@@ 30@@ ;n++) if(@@ bk[i].@@ str@@ [n@@ ]==@@ temp@@ ){ number@@ [i]=@@ bk[i].@@ num; break; } } printf("%c\n%d\n",@@ temp,@@ sum[@@ result@@ ]); for(i=0;i<m;i++) if(@@ number@@ [i]!=0) printf("%d\n",@@ number@@ [i]); }  
c -1
h -1
0

intmain(intargc,char*argv[]) { intn,k,@@ a[1000],@@ b=0,@@ i; scanf("%d%d\n",&@@ n,@@ &@@ k); for(i=0;i<n;i++){ scanf("%d",&a[i]); } for(i=0;i<n;i++){ for(intj=i+1@@ ;j<@@ n;j++){ if(a[i]+a[j]==@@ k){ b=1; printf("yes\n"); break; } } if(b@@ ==1){ break;} } if(b@@ ==0){ printf("no@@ \n@@ ");} return0; }  
c -1
h -1
struct@@ peo@@ { charid@@ [11]; intage; }; intmain(){ struct@@ peo@@ people@@ [100]; struct@@ peo@@ sixty@@ [100]; intn,@@ b=0,@@ i,j,k,@@ e; chara[@@ 11]; scanf("%d",&n); for(i=0;i<n;i++){ scanf("%s%d",@@ people@@ [i].id,&@@ people@@ [i].age); if(@@ people@@ [i].age>=60){ sixty@@ [i].age@@ =@@ people@@ [i].age; strcpy(@@ sixty@@ [i].@@ id,@@ people@@ [i].id); b@@ +=1; }else{ strcpy(@@ sixty@@ [i].@@ id@@ ,"@@ 0000@@ "); sixty@@ [i].age@@ =0; } } for(k=0;k<@@ n-1@@ ;k++){ for(i=n-1;i@@ >@@ k@@ ;i--){ if(@@ sixty@@ [i-1@@ ].age@@ <@@ sixty@@ [i].age@@ ){ e=@@ sixty@@ [i-1@@ ].@@ age; sixty@@ [i-1@@ ].age=@@ sixty@@ [i].age; sixty@@ [i].age@@ =@@ e; strcpy(@@ a,@@ sixty@@ [i-1@@ ].id); strcpy(@@ sixty@@ [i-1@@ ].id,@@ sixty@@ [i].id); strcpy(@@ sixty@@ [i].@@ id,@@ a); } } } for(i=0;i<b;i++){ printf("%s\n",@@ sixty@@ [i].id); } for(i=0;i<n;i++){ if(@@ people@@ [i].age@@ <60){ printf("%s\n",@@ people@@ [i].id); } } return0; }  
c -1
h -1
0

intm,n,@@ a[@@ 800@@ ],b[@@ 800@@ ]; voidmain() { voidf1@@ (); voidf2@@ (); void@@ f3@@ (); void@@ f4@@ (); f1@@ (); f2@@ (); f3@@ (); f4@@ (); } voidf1@@ () { scanf("%d%d",&m,&n); } voidf2@@ () { inti; for(i=0;i<m;i++) scanf("%d",&a[i]); for(i=0;i<n;i++) scanf("%d",&b[i]); } void@@ f3@@ () { inti,j,temp; for(i=0;i<m;i++) {@@ for(j=i+1;j<@@ m;j++) if(a[j]@@ <@@ a[i]) {@@ temp=@@ a[i];a[i]=@@ a[j];a[j]=@@ temp;} } for(i=0;i<n;i++) {@@ for(j=i+1;j<n;j++) if(b[j]@@ <@@ b[i]) {@@ temp=@@ b[i]@@ ;@@ b[i]=b[j]@@ ;@@ b[j]=@@ temp;} } } void@@ f4@@ () { inti,j; for(i=0;i<m;i++) printf("%d",a[i]); for(j=0;j<n-1;j++) printf("%d",@@ b[j]); printf("%d",b[@@ n-1]); }  
c -1
h -1
intn; int@@ height@@ [25]; int@@ stop@@ (int@@ k); intmain() { cin>>n; inti,@@ MAX@@ =0; for(i=0;i<n;i++) cin>>@@ height@@ [i]; for(i=0;i<n;i++) { if(@@ MAX@@ <@@ stop@@ (i@@ )) MAX@@ =@@ stop@@ (i); } cout<<@@ MAX@@ ; return0; } int@@ stop@@ (int@@ k) { intj,@@ max=0; for(j=k@@ +1@@ ;j<n;j++) { if(@@ height@@ [j]<=@@ height@@ [k]) {@@ if(max<@@ stop@@ (j@@ )) max=@@ stop@@ (@@ j); } } return@@ max+1; }  
c -1
h -1
0

intmain() { inta[100][100@@ ]={0}; intn,i,j,@@ i1@@ ,@@ j1@@ ,@@ i2@@ ,@@ i3@@ ,@@ j3@@ ,@@ p=0,@@ q=0,@@ sum=0; scanf("%d",&n); for(@@ i2@@ =0;@@ i2@@ <=@@ n-1;@@ i2@@ ++) { scanf("%d%d",&@@ i@@ ,&@@ j); for(@@ i1@@ =0;@@ i1@@ <=i@@ -1;@@ i1@@ ++) { for(@@ j1@@ =0;@@ j1@@ <=j@@ -1;@@ j1@@ ++) { scanf("%d",&a[@@ i1@@ ][@@ j1@@ ]); } } for(@@ i3@@ =0;@@ i3@@ <=j@@ -1;@@ i3@@ ++) { sum=sum+@@ a[0][@@ i3@@ ]+@@ a[i-1@@ ][@@ i3@@ ]; } for(@@ j3@@ =0;@@ j3@@ <=i@@ -1;@@ j3@@ ++) { sum=sum+@@ a[@@ j3@@ ][0]+@@ a[@@ j3@@ ]@@ [j-1]; } sum=sum-@@ a[0]@@ [j-1]@@ -@@ a[i-1@@ ][0]-@@ a[i-1]@@ [j-1]@@ -@@ a[0][@@ 0]; printf("%d\n",sum); sum=0; for(@@ i1@@ =0;@@ i1@@ <=i@@ -1;@@ i1@@ ++) { for(@@ j1@@ =0;@@ j1@@ <=j@@ -1;@@ j1@@ ++) { a[@@ i1@@ ][@@ j1@@ ]=0; } } } return0; }  
c -1
h -1
main(){ int@@ input@@ [@@ 20000],@@ output@@ [@@ 20000],@@ n,i,j,@@ outLen@@ =1; scanf("%d",&n); for(i=0;i<n;i++){ scanf("%d",&@@ input@@ [i]); output@@ [@@ outLen@@ ]=@@ input@@ [i]; for(j=1;j<@@ outLen@@ ;j++){ if(@@ input@@ [i]==@@ output@@ [j]@@ )@@ outLen@@ =@@ outLen@@ -1; } outLen@@ =@@ outLen@@ +1; } for(i=1;i<@@ outLen@@ ;i++){ printf("%d",@@ output@@ [i]); if(i!=@@ outLen@@ -1)@@ printf(""); } }  
c -1
h -1
0

struct@@ p { charid@@ [11]; intage; }; intmain() { voidsort@@ (intn,@@ struct@@ p@@ a[@@ 101@@ ]); intn,i; struct@@ p@@ a[@@ 101]; scanf("%d\n",&n); for(i=0;i<n;i++) { scanf("%s%d",&@@ a[i].@@ id,&@@ a[i].@@ age); } sort(@@ n,@@ a); return0; } voidsort@@ (intn,@@ struct@@ p@@ a[@@ 101@@ ]) { inti,@@ k=0; for(i=0;i<n;i++) { if((@@ a[i].@@ age@@ )>@@ k) k@@ =(@@ a[i].@@ age); } for(@@ ;k@@ >@@ 59@@ ;k--) { for(i=0;i<n;i++) { if((@@ a[i].@@ age@@ )==@@ k) { printf("%s\n",@@ a[i].@@ id); (@@ a[i].@@ age@@ )@@ =0; } } } for(i=0;i<n;i++) { if((@@ a[i].@@ age@@ )@@ !=0) { printf("%s\n",@@ a[i].@@ id); } } }  
c -1
h -1
intmain() { intn,i,j,@@ p,q,@@ t; inta[@@ 100000@@ ][@@ 3@@ ]; scanf("%d",&n); for(i=0;i<n;i++){ for(j=0;j<3;j++) scanf("%d",&a[i][j]); a[i]@@ [1]=@@ a[i][1]@@ +@@ a[i]@@ [2]; } for(p=0;p@@ <@@ 3@@ ;p++){ for(q=@@ n-2@@ ;q@@ >=0@@ ;q@@ --){ if(a[@@ q@@ ][1@@ ]<@@ a[q@@ +1@@ ][1@@ ]){ for(i=0;i<2@@ ;i++){ t=@@ a[q@@ ]@@ [i]; a[q@@ ]@@ [i]=@@ a[q@@ +1@@ ]@@ [i]; a[q@@ +1@@ ]@@ [i]=@@ t; } } } } for(i=0;i<@@ 3;i++){ printf("%d%d\n",@@ a[i][@@ 0],@@ a[i]@@ [1]); } return0; }  
c -1
h -1
0

main() { struct@@ stdudent { intID; inta; intb; intc; }@@ d[@@ 100000]; int@@ first@@ ,@@ second@@ ,@@ third@@ ; intn,i,j; int@@ w,@@ h,@@ l; intk; scanf("%d",&n); for(i=0;i<n;i++) { scanf("%d%d%d",&@@ d@@ [i].@@ ID,&@@ d@@ [i].@@ a,&@@ d@@ [i].@@ b); d@@ [i].@@ c=@@ d@@ [i].@@ a@@ +d@@ [i].@@ b; } first@@ =0; second@@ =1; third=@@ 2; w=@@ d@@ [0].@@ c; h=@@ d@@ [1].@@ c; l=@@ d@@ [2].@@ c; if(w@@ <@@ h@@ &&(@@ h@@ >@@ l@@ )) { first@@ =1; if(w@@ >@@ l) { second@@ =0; third=@@ 2; } else { second=@@ 2; third@@ =0; } } elseif(@@ l>@@ w@@ ) { first=@@ 2; if(w@@ >@@ h@@ ) { second@@ =0; third@@ =1; } else third@@ =0; } for(j=@@ 3@@ ;j<n;j++) { k=@@ d@@ [j].@@ c; w=@@ d[@@ first@@ ].@@ c; h=@@ d[@@ second@@ ].@@ c; l=@@ d[@@ third@@ ].@@ c; if(k@@ >@@ w@@ ) { third=second@@ ; second=@@ first@@ ; first@@ =j; } elseif(@@ k@@ >@@ h@@ ) { third=second@@ ; second@@ =j; } elseif(@@ k@@ >@@ l) third@@ =j; } printf("%d%d\n",@@ d[@@ first@@ ].ID,@@ d[@@ first@@ ].@@ c); printf("%d%d\n",@@ d[@@ second@@ ].ID,@@ d[@@ second@@ ].@@ c); printf("%d%d\n",@@ d[@@ third@@ ].ID,@@ d[@@ third@@ ].@@ c); getchar(); getchar(); }  
c -1
h -1
intm[@@ 1000][1000]; intmain() { intn,i,j=0,@@ p,@@ x=0; scanf("%d",&n); for(i=0;i<n;i++){ for(j=0;j<n;j++) { scanf("%d",&@@ m@@ [j]@@ [i]); } } for(i=0;i<n;i++) { p=0; j=0; while(m@@ [j]@@ [i]@@ !=0@@ &&j@@ <n) { j++; } j=j+1; while(m@@ [j]@@ [i]@@ !=0@@ &&j@@ <n) { p++; j++; } x=x+@@ p; } printf("%d\n",x); return0; }  
c -1
h -1
0

intmain() { introw,col,@@ a[@@ 101][101]; cin>>row>>col; for(inti=0;i<row;i++) { for(intj=0;j<col;j++) cin>>a[i][j]; } for(int@@ n@@ =0;n@@ <col@@ ;n++) { for(inti@@ =0,@@ j=@@ n@@ ;j>=0@@ &&i@@ <row@@ ;i++,j--) cout<<a[i]@@ [j]@@ <<endl@@ ;@@ ; } for(int@@ n@@ =1;@@ n@@ <row@@ ;n++) { for(inti=@@ n,@@ j=@@ col-1@@ ;i<@@ row@@ &&j>=0@@ ;i++,j--) cout<<a[i][j]<<endl; } return0; }  
c -1
h -1
intmain() { intx[@@ 15],@@ sum=0,@@ n; while(1) { for(n@@ =0;@@ ;n++) { cin>>@@ x[@@ n]; if(x@@ [n@@ ]<=@@ 0@@ )break; } if(x@@ [n@@ ]==@@ -1)break; for(inti=0;i<n;i++) { for(intj=0;j<n;j++) { if(x@@ [j]==@@ x[i]@@ *2@@ )@@ sum=sum+1; } } cout<<sum<<endl; sum=0; } return0; }  
c -1
h -1
0

structbook { intnum; charauthor@@ [27]; }@@ book[1000]; intmain() { intn,i,@@ a,@@ max=0,@@ alp@@ [26]={0}; char*@@ j; scanf("%d",&n); for(i=0;i<n;i++) { scanf("%d%s",&book[i].num,@@ book[i].author); int@@ len=strlen(@@ book[i].author); for(j=@@ book[i].author@@ ;j<@@ (@@ book[i].author@@ +@@ len@@ );j++) { intx@@ =*@@ j; ++@@ *(@@ alp@@ +@@ x@@ -65@@ ); if(*(@@ alp@@ +@@ x@@ -65@@ )@@ >max) { max@@ =*(@@ alp@@ +@@ x@@ -65@@ ); a=@@ x; } } } printf("%c\n%d\n",@@ a,@@ max); for(i=0;i<n;i++) { int@@ len=strlen(@@ book[i].author); for(j=@@ book[i].author@@ ;j<@@ (@@ book[i].author@@ +@@ len@@ );j++) { if(@@ (int)@@ *@@ j==@@ a) printf("%d\n",book[i].@@ num); } } return0; }  
c -1
h -1
structStudent { intid; intc; intm; intsum; }; voidmain() { structStudent@@ temp,@@ s1,@@ s2,@@ s3@@ ; inti,n; s1@@ .@@ sum=@@ s2@@ .@@ sum=@@ s3@@ .@@ sum@@ =-1; scanf("%d",&n); for(i=0;i<n;i++) { scanf("%d%d%d",&@@ temp.@@ id,&@@ temp.@@ c@@ ,&@@ temp.@@ m); temp.@@ sum=@@ temp.@@ c+@@ temp.@@ m; if(@@ temp.@@ sum>@@ s1@@ .@@ sum) { s3=@@ s2; s2=@@ s1@@ ; s1@@ =temp; } elseif(@@ temp.@@ sum>@@ s2@@ .@@ sum) { s3=@@ s2; s2@@ =temp; } elseif(@@ temp.@@ sum>@@ s3@@ .@@ sum) { s3@@ =temp; } } printf("%d%d\n%d%d\n%d%d\n",@@ s1@@ .@@ id,@@ s1@@ .@@ sum,@@ s2@@ .@@ id,@@ s2@@ .@@ sum,@@ s3@@ .@@ id,@@ s3@@ .@@ sum); }  
c -1
h -1
0

int@@ fengjie@@ (inta,intb) { if(a==@@ 2@@ ||@@ a@@ ==@@ 3) return1; intsum@@ =1; int@@ c=@@ sqrt(@@ a); for(inti=@@ b@@ ;i<=@@ c@@ ;i++) { if(a%i==0) { sum=sum+@@ fengjie@@ (a/i,i); } } returnsum; } intmain() { intn,@@ a; cin>>n; for(inti=1;i<=n;i++) { cin>>a; cout<<@@ fengjie@@ (a,@@ 2)<<endl; } return0; }  
c -1
h -1
intmain() { inta[@@ 1000][@@ 1000@@ ]={@@ {@@ 0},{@@ 0@@ }@@ },@@ i,j,@@ n,@@ m=0,@@ p=0,@@ q; scanf("%d",&n); for(i=1;i<=n;i++) { for(j=1;j<=n;j++) { scanf("%d",&@@ a[i-1]@@ [j-1]); } printf("\n"); } for(i=1@@ ;m@@ ==0@@ ;i++) { for(j=1;j<=n;j++) { if(a@@ [i-1]@@ [j-1]@@ ==0) m++; } } for(i=1@@ ;p@@ ==0@@ ;i++) { for(j=1;j<=n;j++) { if(a@@ [j-1]@@ [i-1]@@ ==0) p++; } } q@@ =(@@ p@@ -2)*(@@ m@@ -2); printf("%d\n",@@ q); return0; }  
c -1
h -1
0

voidmain() { introw,col; scanf("%d%d",&row,&col); inti,j; inta[100][100@@ ]={0}; for(i=0;i<row;i++) { for(j=0;j<col;j++) { scanf("%d",&a[i][j]); } } if(row@@ >=@@ col) { for(i=0;i<@@ row+col@@ -1;i++) { if(i@@ >=0&&i@@ <col) { for(j=i@@ ;j>=0;j--) { printf("%d\n",@@ a[i@@ -j@@ ][j]); } } if(i>=@@ col@@ &&i@@ <row) { for(j=col-1@@ ;j>=0;j--) printf("%d\n",@@ a[i@@ -j@@ ][j]); } if(i>@@ row-1@@ &&i@@ <(@@ row+col@@ )@@ -1) { for(j=col-1@@ ;j>i@@ -@@ row@@ ;j--) printf("%d\n",@@ a[i@@ -j@@ ][j]); } } } if(col@@ >@@ row) { for(j=0;j<row@@ +@@ col;j++) { if(j@@ >=0@@ &&j@@ <row) { for(i=0;i<=@@ j@@ ;i++) { printf("%d\n",a[i]@@ [j-i@@ ]); } } if(j@@ >=@@ row@@ &&j@@ <col) { for(i=0;i<row;i++) printf("%d\n",a[i]@@ [j-i@@ ]); } if(j@@ >@@ col-1@@ &&j@@ <(@@ row+col@@ )@@ -1) { for(i=j@@ -col@@ +1;i<@@ row;i++) printf("%d\n",a[i]@@ [j-i@@ ]); } } } }  
c -1
h -1
struct@@ hospital { charID@@ [11]; intage; }@@ old@@ [100],@@ young@@ [100],@@ all@@ [100],@@ temp; void@@ sequence@@ (struct@@ hospital@@ matrix@@ [],int@@ n) { inti,j; for(i=0;i<n-1;i++) { for(j=0;j<n-1-i;j++) { if(@@ matrix@@ [j].age@@ <@@ matrix@@ [j+1@@ ].age) { temp=@@ matrix@@ [j]; matrix@@ [j]=@@ matrix@@ [j+1]; matrix@@ [j+1]=temp; } } } } intmain() { intn; scanf("%d",&n); inti; for(i=0;i<n;i++) { scanf("%s%d",@@ all@@ [i].@@ ID,&@@ all@@ [i].age); } int@@ oi@@ =0,@@ yi@@ =0; for(i=0;i<n;i++) { if(@@ all@@ [i].age>=60) { old@@ [@@ oi@@ ]=@@ all@@ [i]; oi@@ ++; } else { young@@ [@@ yi@@ ]=@@ all@@ [i]; yi@@ ++; } } sequence@@ (@@ old@@ ,@@ oi@@ ); for(i=0;i<@@ oi@@ ;i++) { printf("%s\n",old@@ [i].ID); } for(i=0;i<@@ yi@@ ;i++) { printf("%s\n",@@ young@@ [i].ID); } return0; }  
c -1
h -1
0

intmain() { inta[100][100],@@ r,@@ c,@@ i,j; cin>>@@ r@@ >>@@ c; for(i=0;i<=@@ r@@ -1;i++) { for(j=0;j<=@@ c@@ -1;j++) { cin>>a[i][j]; } } for(j=0;j<=@@ c@@ -1;j++) { for(i=0;@@ (i@@ <=j@@ )&&(i@@ <=@@ r@@ -1);i++) { cout<<a[i]@@ [j-i@@ ]<<endl; } } for(i=1;i<=@@ r@@ -1;i++) { for(j=0;@@ (j@@ <=@@ r@@ -i@@ -1)@@ &&(@@ j@@ +1@@ <=@@ c@@ );j++) { cout<<@@ a[i+j@@ ][c@@ -1-j@@ ]<<endl; } } return0; }  
c -1
h -1
intmain() { intn,i,j,@@ t=0; cin>>n; inta[@@ 10000]; cin>>a[0]; for(i=1;@@ (i@@ +@@ t)@@ <@@ n;i++) {@@ cin>>a[i]; for(j=0;j<i;j++) { if(a[i]==a[j]) {@@ i--; t++; break; }} } for(i=0;i<n-@@ t@@ -1;i++) cout<<a[i]@@ <<''; cout<<a[@@ n-@@ t@@ -1]; return0; }  
c -1
h -1
0

intmain(){ inti,@@ x,y,@@ m=0,@@ c=1; double@@ z,@@ w; chara[@@ 1000],b[1000]; scanf("%lf\n",&@@ z); scanf("%s\n@@ %s",@@ a,b); x@@ =strlen(a); y@@ =strlen(b); if(x@@ !=@@ y){ printf("error");@@ c=0; } else{ for(i=0;i<x;i++){ if((a[i]!='@@ A'&&a[i]!='T'&&a[i]!='C'&&a[i]!='G')||(b[i]!='A'&&b[i]!='T'&&b[i]!='C'&&b[i]!='@@ G')@@ ){@@ printf("error");@@ c@@ =0;@@ break;} else@@ if(a[i]==b[i]@@ ){@@ m++; w@@ =1.0*@@ m/@@ x@@ ;} }} if(c@@ !=0@@ ){@@ if(w@@ >@@ z@@ )@@ printf("yes");@@ else@@ printf("no");} return0; }  
c -1
h -1
intmain(intargc,char*argv[]) { intn,i,@@ x,@@ number_0@@ =0,@@ s; scanf("%d",&n); for(i=0;i<n@@ *@@ n;i++) { scanf("%d",&x); if(x@@ ==0){ number_0@@ ++; } } s=(@@ number_0@@ /@@ 4@@ -1)*(@@ number_0@@ /@@ 4@@ -1); printf("%d\n",s); return0; }  
c -1
h -1
0

int@@ input@@ () { inti; scanf("%d",&@@ i); return(@@ i); } void@@ shit@@ (inta[],intn) { inti,j,t; for(i=1;i<=n;i++) { scanf("%d",&a[i]); } for(i=2;i<=n;i++) { for(j=n@@ ;j>=i@@ ;j--) { if(a[j]@@ <a@@ [j-1]) { t=a[j]; a[j]=@@ a@@ [j-1]; a@@ [j-1]=@@ t; } } } for(i=1;i<=n;i++) printf("%d",a[i]); } void@@ damn@@ (inta[],intn) { inti,j,t; for(i=1;i<=n;i++) { scanf("%d",&a[i]); } for(i=2;i<=n;i++) { for(j=n@@ ;j>=i@@ ;j--) { if(a[j]@@ <a@@ [j-1]) { t=a[j]; a[j]=@@ a@@ [j-1]; a@@ [j-1]=@@ t; } } } for(i=1;i<=n;i++) { printf("%d",a[i]); if(i!=@@ n) printf(""); } } voidmain() { int@@ m=@@ input@@ (@@ ),@@ n=@@ input(); inta[@@ 1000],b[1000]; shit@@ (a,m); damn@@ (b,n); }  
c -1
h -1
struct@@ st { intage@@ ,@@ he@@ ; charnum[@@ 15]; struct@@ st@@ *next; }; struct@@ st@@ *creat@@ (intn) { struct@@ st@@ *head,*p1,*p2; inti,@@ h=@@ 105@@ ; p1=(struct@@ st@@ *)malloc(sizeof(struct@@ st@@ )); p2=p1; head=p1; for(i=1;i<=n;i++) { p1=(struct@@ st@@ *)malloc(sizeof(struct@@ st@@ )); scanf("%s%d",@@ p1->num,&p1->@@ age); if(p1->age@@ >=60) p1->@@ he@@ =p1->@@ age@@ *@@ 1000@@ +@@ h; else@@ p1->@@ he@@ =@@ h; p1->next=NULL; p2->next=p1; p2=p1; h@@ --; } return(head); } voidpaixu@@ (struct@@ st@@ *head) { struct@@ st@@ *@@ max@@ ,*@@ p,*@@ p1,*p2,*@@ p3@@ ,*@@ p4@@ ; p1=head; while(@@ p1->next@@ ) { p2=p1->next; max=@@ p2; p4@@ =p2; p=@@ p2->next; while(p) { if(p->@@ he@@ >max@@ ->@@ he@@ ) { max=@@ p; p3=@@ p4@@ ; } p=p->next; p4@@ =@@ p4@@ ->next; } if(max@@ >@@ p1->next@@ ) { p3@@ ->next=@@ max@@ ->next; p1->next=@@ max; max@@ ->next=@@ p2; } p1=p1->next; } } voidmain() { struct@@ st@@ *creat@@ (int@@ n); voidpaixu@@ (struct@@ st@@ *head@@ ); struct@@ st@@ *head,*p; intn; scanf("%d",&n); head=creat(n); paixu@@ (head); p=head->next; while(p) { printf("%s\n",p->@@ num); p=p->next; } }  
c -1
h -1
0

structbook { intnum; char@@ au@@ [30]; structbook*next; }; voidmain() { intm; scanf("%d",&m); structbook*@@ p1,*p2,*head; p1=(structbook@@ *)malloc(LEN); scanf("%d%s",&p1->num,p1->@@ au); p2=p1; head=p1; int@@ n=1; while(n@@ <@@ m) { p1=(structbook@@ *)malloc(LEN); scanf("%d%s",&p1->num,p1->@@ au); p2->next=p1; p2=p1; n++; } p2->next=NULL; char@@ maxa@@ ; charauthor@@ ; char@@ temp@@ [30]; int@@ an@@ ,@@ maxn@@ =0,@@ i; structbook@@ *p; for(@@ author@@ ='A'@@ ;@@ author@@ <=@@ 'Z'@@ ;) { p=head; an@@ =0; while(p) { strcpy(@@ temp,@@ p->@@ au); for(i=0;@@ (@@ temp@@ [i])@@ !='\0';i++) { if(temp@@ [i]==@@ author@@ ){@@ an@@ ++;@@ break;} } p=p->next; } if(@@ an@@ >@@ maxn@@ ) { maxa@@ =@@ author@@ ; maxn=@@ an@@ ; } author@@ =@@ author@@ +1; } printf("%c@@ \n@@ %d",@@ maxa@@ ,@@ maxn@@ ); p=head; while(p) { strcpy(@@ temp,@@ p->@@ au); for(i=0;@@ (@@ temp@@ [i])@@ !='\0';i++) { if(temp@@ [i]==@@ maxa@@ ) {@@ printf("\n"); printf("%d",@@ p->@@ num@@ );break;} } p=p->next; } }  
c -1
h -1
intmain(){ introw,col; cin>>row>>col; int@@ data@@ [100][100]; for(inti=0;i<@@ row;i++){ for(intj=0;j<@@ col@@ ;j++){ cin>>@@ data@@ [i][j]; } } for(inti=0;i<@@ col@@ ;i++){ intm=0,@@ n=i; while(@@ true@@ ){ cout<<@@ data@@ [m@@ ][n@@ ]<<endl; m++; n--; if(m==@@ row@@ ||@@ n@@ ==-1) break; } } for(inti=1;i<@@ row;i++){ int@@ m=@@ i,@@ n=@@ col-1; while(@@ true@@ ){ cout<<@@ data@@ [m@@ ][n@@ ]<<endl; m++; n--; if(m==@@ row@@ ||@@ n@@ ==-1) break; } } return0; }  
c -1
h -1
0

intmain(){ double@@ z; char@@ sz1@@ [500]; char@@ sz2@@ [500]; inti,@@ m,n; intx@@ =1,@@ y=0; double@@ e; scanf("%lf",&@@ z); scanf("%s",@@ sz1@@ ); scanf("%s",@@ sz2@@ ); m=strlen(@@ sz1@@ ); n=strlen(@@ sz2@@ ); for(i=0;@@ sz1@@ [i]!='\0';i++){ if(@@ sz1@@ [i]=='A'||@@ sz1@@ [i]=='G'||@@ sz1@@ [i]=='C'||@@ sz1@@ [i]=='@@ T@@ '){ continue; }elseif(@@ sz1@@ [i]!='@@ A'||@@ sz1@@ [i]!='G@@ '||@@ sz1@@ [i]!='@@ C'||@@ sz1@@ [i]!='T'){ x=0; break; } } if((@@ m@@ !=@@ n@@ )||(@@ x@@ ==0)@@ ){ printf("error"); }@@ elseif(m==@@ n@@ &&@@ x@@ ==1){ for(i=0;@@ sz1@@ [i]!='\0';i++){ if(@@ sz1@@ [i]==@@ sz2@@ [i]){ y++; } } e@@ =1.0*@@ y@@ /@@ m; if(e@@ >@@ z@@ ){ printf("yes"); }else{ printf("no"); } } return0; }  
c -1
h -1
intmain() { inta[@@ 101]; intb[@@ 101]; intm,n,@@ i,j,k,@@ l,@@ w,@@ x,y,@@ z,@@ c,d; scanf("%d%d",&m,&n); for(i=0;i<m;i++) { scanf("%d",&a[i]); } for(j=0;j<n;j++) { scanf("%d",&@@ b[j]); } for(k=0;k<@@ m-1@@ ;k++) { for(l=0;l<@@ m-1@@ -@@ k;@@ l++) { if(a[@@ l@@ ]>@@ a[l@@ +1]) { c=@@ a[l@@ ]; a[l@@ ]=a[@@ l@@ +1]; a[l@@ +1]=@@ c; } } } for(@@ w@@ =0;@@ w@@ <@@ n-1;@@ w@@ ++) { for(x=0;x@@ <@@ n-1@@ -@@ w@@ ;x@@ ++) { if(b[@@ x@@ ]>@@ b[@@ x@@ +1]) { d=@@ b[@@ x@@ ]; b[@@ x@@ ]=@@ b[@@ x@@ +1]; b[@@ x@@ +1]=@@ d; } } } for(y=0;y@@ <m-1@@ ;y@@ ++) { printf("%d",a[@@ y@@ ]); } printf("%d",a[@@ m-1@@ ]); for(z@@ =0;z@@ <n;@@ z++) { printf("%d",b[@@ z@@ ]); } return0; }  
c -1
h -1
0

intmain() { intn,k,@@ a[1000],@@ f=0; scanf("%d%d",&n,&k); scanf("%d",&a[0]); for(inti=1;i<@@ n;i++) { scanf("%d",&a[i]); for(intj=0;j<i;j++) { if(a[j]@@ +@@ a[i]@@ ==k) { f=1; } } } if(f@@ ==1) { printf("yes"); } else { printf("no"); } return0; }  
c -1
h -1
intmain() { inty,m,d,@@ num; scanf("%d%d%d",&y,&m,&d); switch(m) { case1:@@ num=@@ d;break; case2:@@ num@@ =31+@@ d;break; case3:@@ num=@@ 59@@ +d;break; case4:@@ num=@@ 90@@ +d;break; case5:@@ num=@@ 120@@ +d;break; case6:@@ num=@@ 151@@ +d;break; case7:@@ num=@@ 181@@ +d;break; case8:@@ num=@@ 212@@ +d;break; case9:@@ num=@@ 243@@ +d;break; case10:@@ num=@@ 273@@ +d;break; case11:@@ num=@@ 304@@ +d;break; case12:@@ num=@@ 334@@ +d;break; } if(((@@ y%@@ 4==0&&y%100!=0@@ )||(y%@@ 400==0)@@ )&&(@@ m@@ >2@@ )) num=num@@ +1; printf("%d\n",num); return0; }  
c -1
h -1
0

intmain() { intn,m,@@ b[100@@ ],@@ c[100],@@ i; scanf("%d%d",&n,&m); void@@ xu@@ (inta[],int@@ l); for(i=0;i<n;i++) scanf("%d",&b[i]); for(i=0;i<m;i++) scanf("%d",&@@ c[i]); xu@@ (b,n); xu@@ (c,@@ m); for(i=0;i<n;i++) printf("%d",b[i]); for(i=0;i<m-1;i++) printf("%d",c[i]); printf("%d\n",@@ c[@@ m-1@@ ]); } void@@ xu@@ (inta[],int@@ l) { int@@ j=0,@@ k,@@ t; while(j<@@ l) { k@@ =j+1; while(k@@ <@@ l) { if(@@ *(a@@ +j)@@ >*@@ (@@ a+@@ k@@ )){@@ t@@ =*@@ (a@@ +j@@ );@@ *(a@@ +j)@@ =*(@@ a+@@ k@@ );@@ *(a@@ +k)@@ =@@ t;} k++; } j++; } }  
c -1
h -1
intmain() { inta[@@ 200000@@ ],@@ n,m,@@ i,j; cin>>n; for(i=0;i<n;i++) { cin>>a[i]; } i=0; while(i<n) { m=0; for(j=0;j<n;j++) { if(a[i]==a[j]@@ &&i@@ >@@ j) { m=m+1; } } if(m@@ ==0&&@@ i@@ ==0) cout<<a[i]; if(m@@ ==0&&@@ i@@ !=0) cout<<''<<@@ a[i]; i=i+1; } return0; }  
c -1
h -1
0

voidmain() { chara[100@@ ],b[100],@@ c[100],@@ temp@@ [100]; inti,j=0,@@ k,@@ lena@@ ,@@ lenb@@ ,@@ mark@@ =0; scanf("%s",a); scanf("%s",b); scanf("%s",c); lena@@ =strlen(a); lenb@@ =strlen(b); for(i=0;i<@@ lena@@ ;i++) { if(a[i]==@@ b[0]) { for(j=1;j<@@ lenb@@ ;j++) { if(a@@ [i+j]==@@ b[j]@@ )@@ mark@@ =1; else { mark@@ =0; break; } } } if(@@ mark@@ ==1) { for(k=0;k<@@ lenb@@ ;k++) a[i@@ +k@@ ]=@@ c@@ [k]; break; } } for(i=0;i<@@ lena@@ ;i++) { printf("%c",a[i]); } }  
c -1
h -1
voidmain() { intn,i,j,k,@@ c,@@ x=0,@@ d,@@ m,@@ a[@@ 500@@ ][@@ 500]; scanf("%d",&n); for(i=0;i<n;i++) { for(j=0;j<n;j++) scanf("%d",&a[i][j]); } for(i=0;i<n;i++) { for(j=0;j<n;j++) { if(a[i][j]==0) { k@@ =i@@ ;m@@ =j@@ ;@@ continue; } } } c@@ =0;@@ d=0; for(i=k@@ ;i>0;i--) { if(a[i]@@ [m]@@ ==0)@@ c=c@@ +1; elsebreak; } for(j=@@ m@@ ;j>0;j--) { if(a[k]@@ [j]@@ ==0)@@ d=d@@ +1; elsebreak; } for(i=k@@ -1@@ ;i@@ >=@@ (@@ k-@@ c+@@ 2)@@ ;i--) { for(j=@@ m-1@@ ;j@@ >=@@ (m@@ -@@ d+@@ 2)@@ ;j--) { if(a[i][j]==@@ 255@@ )@@ x=x@@ +1; else@@ if(a[i][j]@@ ==0)break; } } printf("%d",x); }  
c -1
h -1
0

intmain() { inti,@@ n1,n2,@@ p; double@@ rate@@ ,@@ m@@ =0@@ .0@@ ; char@@ str1@@ [501],@@ str2@@ [501]; scanf("%lf",&@@ rate@@ ); scanf("%s",@@ str1); scanf("%s",@@ str2); n1@@ =strlen(@@ str1); n2@@ =strlen(@@ str2); p=0; if(@@ n1@@ ==@@ n2) { for(i=0;i<n1;i++) {if(@@ str1@@ [i]!='A'&&@@ str1@@ [i]!='T'&&@@ str1@@ [i]!='C'&&@@ str1@@ [i]!='G') p=1; elseif(@@ str2@@ [i]!='A'&&@@ str2@@ [i]!='T'&&@@ str2@@ [i]!='C'&&@@ str2@@ [i]!='G') p=1; if(p@@ ==1) { printf("error"); break; } if(@@ str1@@ [i]==@@ str2@@ [i]) m@@ +=@@ 1.0@@ ; } if(p@@ ==0) if(m@@ /@@ n1@@ >=@@ rate@@ ) printf("yes"); elseprintf("no"); } else@@ printf("error"); return0; }  
c -1
h -1
intmain() { inti,j,n,@@ x1,y1,x2,y2@@ ,@@ a[1000],@@ t; x1@@ =-1; scanf("%d",&n); for(i=0;i<n;i++) { for(j=0;j<n;j++) { scanf("%d",&a[j]); if(a[j]@@ ==0) { if(@@ x1@@ ==-1) { x1=i; y1=j; } x2=i; y2=j; } } } t@@ =(@@ x2-x1-1)*(y2-y1-1); printf("%d\n",t); return0; }  
c -1
h -1
0

voidmain() { inta,b,@@ n,@@ j,@@ i,@@ k@@ ,*@@ hi@@ ,@@ col,@@ row,@@ s,@@ max; scanf("%d%d",&row,&col); s=@@ row@@ *@@ col; int*p=@@ (int*)malloc(@@ 10000@@ *sizeof(int)); hi@@ =p; if(col@@ >@@ row@@ )max=@@ col; else@@ max=@@ row; for(i=0;i<@@ s;i++) scanf("%d",p@@ +i); for(j=0;j<col@@ +row@@ ;j++) for(k=0;k<=@@ j@@ ;k++) if(j@@ -k@@ <col@@ &&k@@ <row) printf("%d\n",*(@@ hi@@ +j@@ -k@@ +col@@ *@@ k@@ )); }  
c -1
h -1
intmain() { inta[100][100],@@ q=0,@@ n,@@ i,j; scanf("%d",&n); for(i=0;i<n;i++) for(j=0;j<n;j++) { scanf("%d",&a[i][j]); } i=0; for(j=0;j<n;j++) { i=0; while(@@ a[i][j]@@ !=0@@ &&i@@ <n) { i++; } i@@ +=1; while(@@ a[i][j]@@ !=0@@ &&i@@ <n) { i++; q++; } } printf("%d\n",@@ q); return0; }  
c -1
h -1
0

intm,n,@@ c[@@ 50@@ ],@@ d[@@ 50]; void@@ shuzu@@ () { inti,j; scanf("%d%d",&m,&n); for(i=0;i<m;i++) scanf("%d",&@@ c[i]); for(j=0;j<n;j++) scanf("%d",&@@ d@@ [j]); } voidpaixu@@ (inta[@@ 50@@ ],intb[@@ 50@@ ]) { inti,j,@@ s,@@ t; for(j=0;j<m-1;j++) for(i=0;i<m@@ -j@@ -1;i++) if(a[i]>a[i+1]) { t=a[i]; a[i]=a[i+1]; a[i+1]=@@ t; } for(j=0;j<n-1;j++) for(i=0;i<n@@ -j@@ -1;i++) if(b[i]>b[i+1]) { s=@@ b[i]; b[i]=b[i+1]; b[i+1]=@@ s; } } voidhebing@@ (inta[@@ 50@@ ],intb[@@ 50@@ ]) { inti,j; int@@ e@@ [100]; for(i=0;i<m;i++) e@@ [i]=@@ a[i]; for(j=0;j<n;j++) e@@ [m@@ +j@@ ]=@@ b[j]; for(i=0;i<m+@@ n-1;i++) printf("%d",@@ e@@ [i]); printf("%d",@@ e@@ [m@@ +@@ n-1]); } voidmain() { shuzu@@ (); paixu@@ (c,@@ d); hebing@@ (c,@@ d); }  
c -1
h -1
structstudent { charid[10]; int@@ ch; int@@ ma; }; intmain(intargc,char*argv[]) { intn,i,@@ max,@@ sec@@ ,@@ min@@ ,@@ total@@ [100000]; scanf("%d",&n); structstudentstu[100000]; for(i=0;i<n;i++) { scanf("%s%d%d",@@ stu[i].@@ id,@@ &@@ stu[i].@@ ch@@ ,&stu[i].@@ ma@@ ); total@@ [i]=@@ stu[i].@@ ch@@ +stu[i].@@ ma; } max=0; for(i=0;i<n;i++) { if(@@ total@@ [i]>@@ total@@ [max@@ ]) max=i; } printf("%s%d\n",@@ stu[@@ max@@ ].id,@@ total@@ [max@@ ]); for(i=0;i<n;i++) { if(@@ total@@ [i]==@@ total@@ [max@@ ]) { total@@ [i]=0; break; } } sec@@ =0; for(i=0;i<n;i++) { if(@@ total@@ [i]>@@ total@@ [@@ sec@@ ]) sec@@ =i; } printf("%s%d\n",@@ stu[@@ sec@@ ].id,@@ total@@ [@@ sec@@ ]); for(i=0;i<n;i++) { if(@@ total@@ [i]==@@ total@@ [@@ sec@@ ]) { total@@ [i]=0; break; } } min@@ =0; for(i=0;i<n;i++) { if(@@ total@@ [i]>@@ total@@ [@@ min@@ ]) min@@ =i; } printf("%s%d\n",@@ stu[@@ min@@ ].id,@@ total@@ [@@ min@@ ]); return0; }  
c -1
h -1
0

main() { intn; int@@ amount_lao@@ =0,@@ amount_yiban@@ =0; charc[@@ 11]; int@@ shuru@@ ; inti,j,k,@@ s,@@ p; struct@@ xinxi { charid@@ [11]; intage; }; struct@@ xinxi@@ laoren@@ [100]; struct@@ xinxi@@ common@@ [100]; struct@@ xinxi@@ temp; scanf("%d",&n); for(p=0;p@@ <n;p++) { scanf("%s%d",@@ c@@ ,&@@ shuru@@ ); if(@@ shuru@@ <60) { strcpy(@@ common@@ [@@ amount_yiban@@ ].id,@@ c); common@@ [@@ amount_yiban@@ ].age=@@ shuru@@ ; amount_yiban@@ ++; } elseif(@@ shuru@@ >=60) { strcpy(@@ laoren@@ [@@ amount_lao@@ ].id,@@ c); laoren@@ [@@ amount_lao@@ ].age=@@ shuru@@ ; amount_lao@@ ++; } } for(i=0;i<@@ amount_lao@@ -1;i++) { for(j=0;j<@@ amount_lao@@ -i-1;j++) { if(@@ laoren@@ [j].age@@ <@@ laoren@@ [j+1@@ ].age) { strcpy(@@ temp.@@ id,@@ laoren@@ [j].@@ id); temp.@@ age@@ =@@ laoren@@ [j].@@ age; strcpy(@@ laoren@@ [j].@@ id,@@ laoren@@ [j+1].@@ id); laoren@@ [j].age@@ =@@ laoren@@ [j+1].@@ age; strcpy(@@ laoren@@ [j+1].@@ id,@@ temp.@@ id); laoren@@ [j+1@@ ].age=@@ temp.@@ age; } } } for(k=0;k<@@ amount_lao@@ ;k++) { puts(@@ laoren@@ [k].@@ id); printf("\n"); } for(s=0;s@@ <@@ amount_yiban@@ ;s++) { puts(@@ common@@ [s@@ ].id); printf("\n"); } getchar(); getchar(); }  
c -1
h -1
intmain(intargc,char*argv[]) { struct@@ r@@ {int@@ a;@@ int@@ b@@ ;@@ int@@ c;@@ }@@ r@@ [@@ 99999@@ ]; inti,n,@@ x=0,@@ y=0,@@ z@@ =0,@@ m1@@ =0,@@ m2@@ =0,@@ m3@@ =0; scanf("%d",&n); for(i=1;i<=n;i++) { scanf("%d%d%d",&@@ r[i].@@ a,&@@ r[i].@@ b@@ ,&@@ r[i].@@ c); } for(i=1;i<=n;i++) { if(r@@ [i].@@ b+@@ r[i].@@ c@@ >@@ m1@@ ) { m1=@@ r[i].@@ b+@@ r[i].@@ c; x@@ =i; } } for(i=1;i<=n;i++) { if((@@ r[i].@@ b+@@ r[i].@@ c@@ ==@@ m1@@ )&&(i@@ !=@@ x@@ )) { m2=@@ r[i].@@ b+@@ r[i].@@ c; y@@ =i; } elseif((@@ m1@@ >@@ r[i].@@ b+@@ r[i].@@ c@@ )&&(@@ r[i].@@ b+@@ r[i].@@ c@@ >@@ m2@@ )) { m2=@@ r[i].@@ b+@@ r[i].@@ c; y@@ =i; } } for(i=1;i<=n;i++) { if((@@ r[i].@@ b+@@ r[i].@@ c@@ ==@@ m2@@ )&&(i@@ !=@@ y@@ )&&(i@@ !=@@ x@@ )) { m3=@@ r[i].@@ b+@@ r[i].@@ c; z@@ =i; } elseif((@@ m2@@ >@@ r[i].@@ b+@@ r[i].@@ c@@ )&&(@@ r[i].@@ b+@@ r[i].@@ c@@ >@@ m3@@ )) { m3=@@ r[i].@@ b+@@ r[i].@@ c; z@@ =i; } } printf("%d%d\n",@@ x,@@ m1@@ ); printf("%d%d\n",@@ y,@@ m2@@ ); printf("%d%d\n",@@ z,@@ m3@@ ); return0; }  
c -1
h -1
0

intmain() { inti@@ ,j,@@ n,@@ sr@@ =0,@@ jr@@ =0,@@ age@@ ,@@ srage@@ [100],@@ jrage@@ [100]; charnum[@@ 10],@@ srnum@@ [100][10],@@ jrnum@@ [100][10]; scanf("%d",&n); for(i=0;i<n;i++) { scanf("%s%d",&@@ num,@@ &@@ age); if(age@@ <60) { strcpy(@@ jrnum@@ [@@ jr@@ ],@@ num); jrage@@ [@@ jr@@ ]=@@ age; jr@@ ++; } else { strcpy(@@ srnum@@ [@@ sr@@ ],@@ num); srage@@ [@@ sr@@ ]=@@ age; sr@@ ++; } } for(i=@@ sr@@ -1;i>=0;i--) { for(j=0;j<i;j++) { if(@@ srage@@ [j]<@@ srage@@ [j+1]) { age@@ =@@ srage@@ [j]; srage@@ [j]=@@ srage@@ [j+1]; srage@@ [j+1]=@@ age; strcpy(@@ num,@@ srnum@@ [j]); strcpy(@@ srnum@@ [j],@@ srnum@@ [j+1]); strcpy(@@ srnum@@ [j+1],@@ num); } } } for(i=0;i<@@ sr@@ ;i++)@@ printf("%s\n",@@ srnum@@ [i]); for(i=0;i<@@ jr@@ ;i++)@@ printf("%s\n",@@ jrnum@@ [i]); return0; }  
c -1
h -1
structstudent {intnum; int@@ yw@@ ; int@@ sx; structstudent*next; }; voidmain() { structstudent*head,*p1,*p2; inti,@@ max,@@ n; scanf("%d",&n); p1=@@ p2=@@ head=NULL; for(i=0;i<n;i++) {@@ p1=(structstudent*)malloc(LEN); scanf("%d%d%d",&p1->num,&p1->@@ yw@@ ,&p1->@@ sx@@ ); if(i==0)@@ head=p1; elsep2->next=p1; p2=p1; } p2->next=NULL; for(i=0;i<3;i++) {@@ p1=@@ p2=head; max=@@ p1->@@ yw@@ +p1->@@ sx; while(p1!=NULL) {if((@@ p1->@@ yw@@ +p1->@@ sx@@ )@@ >max) {max=@@ p1->@@ yw@@ +p1->@@ sx; p2=p1; } p1=p1->next; } printf("%d%d\n",@@ p2->@@ num,@@ max); p1=head; while(@@ p1->next@@ !=@@ p2@@ ) {@@ p1=p1->next@@ ;} p1->next=@@ p2->next; } }  
c -1
h -1
0

intmain() { inta,b,@@ i,j,@@ q; cin>>a>>@@ b; intm@@ [a@@ +1@@ ][b@@ +1]; for(i=1;i<=@@ a;i++) for(j=1;j<=@@ b;j++) cin>>@@ m@@ [i][j]; for(q=@@ 2@@ ;q@@ <=@@ a+@@ b@@ ;q++) for(i=1@@ ,j=@@ q@@ -i@@ ;j>0@@ ;i++,j@@ =@@ q@@ -i@@ ) {@@ if(j@@ <=@@ b@@ &&i@@ <=@@ a) cout<<@@ m@@ [i][j]<<endl; } return0; }  
c -1
h -1
intmain(){ intn,k,@@ w@@ [@@ 200]; cin>>@@ n;@@ memset(@@ w,@@ 0,sizeof(@@ w@@ )); for(inti=0;i<n;i++){ cin>>k; if(!@@ w@@ [k]@@ ){ if(i@@ )@@ cout<<'@@ '; w@@ [k]@@ =1; cout<<@@ k; } } return0; }  
c -1
h -1
0

intmain(){ intn,k,i,j,@@ h=0; ints[@@ 1000],@@ g@@ [1000]; scanf("%d%d",&n,&k); for(i=0;i<=@@ n-1;i++){ scanf("%d",&(@@ s[i]@@ )); } for(i=0;i<=@@ n-1;i++){ g@@ [i]=@@ k-@@ s[i]; for(j=0;j<=@@ n-1@@ ;j++){ if(g@@ [i]==@@ s[j]@@ ){ h@@ ++; } } } if(h@@ ==0){ printf("no"); }else{ printf("yes"); } return0; }  
c -1
h -1
structpatient { charID[10]; intage; }@@ pat@@ [100]; intmain() { structpatient@@ t; structpatient@@ num@@ [100]; intn,i,j,@@ a=1; scanf("%d",&n); for(i=0;i<n;i++) scanf("%s%d",@@ pat[i].@@ ID,&@@ pat@@ [i].age); for(i=0;i<n;i++) {if(@@ pat@@ [i].age>=60) {@@ num[@@ a@@ -1@@ ]=@@ pat@@ [i]; a@@ ++;} } for(i=0;i<@@ a@@ -2;i++) {@@ for(j=0;j<a@@ -2@@ -i;j++) if(num@@ [j].age@@ <@@ num@@ [j+1@@ ].age) {t=@@ num@@ [j]; num@@ [j]=@@ num@@ [j+1]; num@@ [j+1]=@@ t;} } for(i=0;i<@@ a@@ -1;i++) printf("%s\n",@@ num@@ [i].ID); for(i=0;i<n;i++) {if(@@ pat@@ [i].age<60) printf("%s\n",@@ pat[i].@@ ID@@ );} return0; }  
c -1
h -1
0

intmain() {@@ inta[@@ 2000]; inti,@@ m,n,@@ k,@@ lt@@ ; k=0; lt@@ =0; for(i=0;i<@@ 2000@@ ;i++) {@@ cin>>a[i]; if(a[i]==-1) break; if(a[i]==0) {@@ for(m=@@ lt@@ ;m@@ <i@@ ;m++) {@@ for(n=@@ lt@@ ;n@@ <i@@ ;n++) {if(@@ a[m@@ ]==2*@@ a[n@@ ]) {@@ k@@ ++;} } } cout<<@@ k@@ <<endl; k=0; lt@@ =i+1; } } return0; }  
c -1
h -1
intmain() { intn,@@ num; cin>>n; inta[n]; for(@@ num@@ =0;@@ num@@ <=@@ (n-1@@ );@@ num@@ ++) { cin>>@@ a[@@ num@@ ]; } inti,k,@@ q; cout<<a[0]; for(k=1;k<=@@ n-1;k++) { q=0; for(i=0;i<k;i++) { if(a[k@@ ]==@@ a[i]@@ ){ q++; } } if(q@@ ==0) { cout<<""<<@@ a[k]; } } return0; }  
c -1
h -1
0

chara[@@ 501]; charb[@@ 501]; intmain(){ doublen,@@ d=0; int@@ e=0,@@ i,@@ k@@ =1,@@ lena@@ ,@@ lenb@@ ; scanf("%lf",&n); scanf("%s",a); scanf("%s",b); lena@@ =@@ (int)@@ strlen(@@ a); lenb@@ =@@ (int)@@ strlen(@@ b); for(i=0;a[i]@@ ;i++){ if((a[i]!='@@ A'&&a[i]!='T'&&a[i]!='G'&&a[i]!='@@ C')||(@@ b[i]!='A'&&b[i]!='T'&&b[i]!='G'&&b[i]!='@@ C')@@ ||@@ lena@@ !=@@ lenb@@ ){ d@@ =-1; break; } else@@ if(a[i]==b[i]@@ ){@@ e@@ ++;} } if(d@@ ==0){@@ d@@ =1.0*@@ e@@ /i@@ ;} if(d@@ >@@ n@@ ){printf("yes");} if(d@@ <=@@ n@@ &&@@ d@@ >=0@@ ){@@ printf("no");} if(d@@ <0@@ ){@@ printf("error");} return0; }  
c -1
h -1
intmain() { inta[@@ 1000][@@ 1000@@ ]={@@ {@@ 0},{@@ 0@@ }@@ },@@ i,j,@@ n,@@ m=0,@@ p=0,@@ q; scanf("%d",&n); for(i=1;i<=n;i++) { for(j=1;j<=n;j++) { scanf("%d",&@@ a[i-1]@@ [j-1]); } printf("\n"); } for(i=1@@ ;m@@ ==0@@ ;i++) { for(j=1;j<=n;j++) { if(a@@ [i-1]@@ [j-1]@@ ==0) m++; } } for(i=1@@ ;p@@ ==0@@ ;i++) { for(j=1;j<=n;j++) { if(a@@ [j-1]@@ [i-1]@@ ==0) p++; } } q@@ =(@@ p@@ -2)*(@@ m@@ -2); printf("%d\n",@@ q); return0; }  
c -1
h -1
0

intmain() { doublen,@@ c=0; inti,j=0,@@ zs@@ ; chars1@@ [501],@@ s2@@ [501]; scanf("%lf",&n); scanf("%s%s",@@ s1,@@ s2); if(strlen(@@ s1@@ )!=strlen(@@ s2@@ )) { printf("error"); }else{ zs@@ =strlen(@@ s1); for(i=0;i<@@ zs@@ ;i++) { if(s1@@ [i]=='G'||@@ s1@@ [i]=='A'||@@ s1@@ [i]=='C'||@@ s1@@ [i]=='@@ T@@ ') { j++; } } if(j!=@@ zs@@ ) { printf("error"); return0; }else{ for(i=0;i<@@ zs@@ ;i++) { if(s1@@ [i]@@ -@@ s2@@ [i]==0) { c=c@@ +1; } } if(c@@ /@@ zs@@ >n) { printf("yes"); }else{ printf("no"); } } } return0; }  
c -1
h -1
intmain(){ chars[256],@@ w@@ [256],@@ z@@ [256]; int@@ ls@@ ,@@ lw@@ ,@@ t,@@ lz@@ ; inti,j,@@ loc@@ =-1; scanf("%s%s%s",@@ w,@@ s,@@ z); ls@@ =strlen(s); lw@@ =strlen(@@ w); lz@@ =strlen(@@ z); for(i=0;i<@@ lw@@ ;i++){ t=0; for(j=0;j<@@ ls@@ ;j++){ if(w@@ [i+j]==@@ s@@ [j]) t++; } if(t==@@ ls@@ ){ loc@@ =i; break; } } if(@@ loc@@ !=@@ -1){ for(i=0;i<@@ loc@@ ;i++){ printf("%c",@@ w@@ [i]); } printf("%s",@@ z); for(i=@@ loc@@ +@@ lz@@ ;i<@@ lw@@ ;i++){ printf("%c",@@ w@@ [i]); } } else{ puts(@@ w); } return0; }  
c -1
h -1
0

intk; int@@ mis@@ [30]; int@@ maxL@@ =0; int@@ curH@@ =@@ 100000@@ ; int@@ getNum@@ =0; int@@ cmp@@ (inta,intb) { if(a@@ >b@@ )return0; else@@ return1; } void@@ oneState@@ (int@@ id@@ ) { if(@@ id@@ >=@@ k) { if(@@ getNum@@ >@@ maxL@@ ) maxL@@ =@@ getNum@@ ; return; } if(@@ mis@@ [@@ id@@ ]<=@@ curH@@ ) { int@@ t=@@ curH@@ ; curH@@ =@@ mis@@ [@@ id@@ ]; getNum@@ ++; oneState@@ (@@ id@@ +1); curH@@ =t; getNum@@ --; } oneState@@ (@@ id@@ +1); } intmain() { cin>>k; for(inti=0;i<k;i++) { cin>>@@ mis@@ [i]; } oneState@@ (@@ 0); cout<<@@ maxL@@ <<endl; return0; }  
c -1
h -1
intmain() { intn,i,j,k,@@ p; cin>>n; inta[@@ 20001]; for(i=0;i<n;i++){ cin>>@@ a[i];} for(j=0;j<n;j++){ for(k=j+1;k<@@ n;k++){ if(a[k]@@ !=0){ if(a[j]==@@ a[k]@@ ){ a[k]@@ =0; }} } } cout<<a[0]; for(p=1@@ ;p@@ <n;@@ p++){ if(a[@@ p@@ ]!=0) cout<<""<<@@ a[p@@ ]; continue; } cout<<endl; return0; }  
c -1
h -1
0

voidmain() { int@@ start@@ ,@@ end@@ ,@@ ok@@ ,i,j,@@ n,m,@@ s; chara[@@ 300],b[@@ 300@@ ],c[@@ 300]; gets(a); gets(b); gets(c); n@@ =strlen(a); m@@ =strlen(b); s@@ =strlen(c); for(i=0;i<n;i++) if(a[i]==@@ b[0]) { ok@@ =1; for(j=1;j<@@ m;j++) if(a@@ [j+i@@ ]!=@@ b[j]) ok@@ =0; if(@@ ok@@ ) {@@ start@@ =i;@@ end@@ =j@@ +i@@ ;break;} } if(@@ ok@@ ==1) { for(i=0;i<@@ start@@ ;i++) printf("%c",a[i]); for(i=0;i<@@ s;i++) printf("%c",@@ c[i]); for(i=@@ end@@ ;i<n;i++) printf("%c",a[i]); printf("\n"); } else puts(@@ a); }  
c -1
h -1
structstudent { intnum; intchi; intmath; intsum; structstudent*next; }; structstudent*creat@@ (intn) { inti; structstudent*head,*p1,*p2; p1@@ =(structstudent*)malloc(sizeof(structstudent)); scanf("%d%d%d",&p1->num,&p1->@@ chi@@ ,&p1->math); p1->sum=p1->@@ chi@@ +p1->@@ math; head=p1; p2=p1; for(i=1;i<n;i++) { p1@@ =(structstudent*)malloc(sizeof(structstudent)); scanf("%d%d%d",&p1->num,&p1->@@ chi@@ ,&p1->math); p1->sum=p1->@@ chi@@ +p1->@@ math; p2->next=p1; p2=p1; } p2->next=NULL; return(head); } voidmain() { structstudent*head,*@@ p1; structstudent*@@ max1@@ ,*@@ max2@@ ,*@@ max3@@ ; intn,@@ max; scanf("%d",&n); head=creat(n); p1=head; max=0; while(p1!=NULL) { if(p1->@@ sum@@ >max) { max=@@ p1->@@ sum; max1@@ =p1; } p1=p1->next; } printf("%d%d\n",@@ max1@@ ->num,@@ max1@@ ->sum); p1=head; max=0; while(p1!=NULL) { if(p1->@@ sum@@ >max@@ &&@@ p1@@ !=@@ max1@@ ) { max=@@ p1->@@ sum; max2@@ =p1; } p1=p1->next; } printf("%d%d\n",@@ max2@@ ->num,@@ max2@@ ->sum); p1=head; max=0; while(p1!=NULL) { if(p1->@@ sum@@ >max@@ &&@@ p1@@ !=@@ max1@@ &&@@ p1@@ !=@@ max2@@ ) { max=@@ p1->@@ sum; max3@@ =p1; } p1=p1->next; } printf("%d%d\n",@@ max3@@ ->num,@@ max3@@ ->sum); }  
c -1
h -1
0

intmain(){ intk; cin>>k; while(k@@ --){ intm,n,@@ i,j; inta[100][100]; cin>>m>>n; for(i=0;i<m;i++) for(j=0;j<n;j++) cin>>a[i][j]; intsum=0; for(j=0;j<n;j++){ sum+=@@ a[0][j]; sum+=@@ a[m-1][j]; } i=1; while(i<@@ m-1@@ ){ sum+=@@ a[i][0]; sum+=@@ a[i][n-1]; i++; } cout<<sum<<endl; } }  
c -1
h -1
intmain() { inta[100][100],@@ b,@@ c,d,@@ e,f,@@ g,@@ h; scanf("%d",&b); g=0; for(c=0;c@@ <b@@ ;c@@ ++) { for(d@@ =0;d@@ <b@@ ;@@ d++) { scanf("%d",&@@ a[c@@ ][@@ d@@ ]); } } for(e@@ =0;e@@ <b@@ ;@@ e++) { for(@@ f@@ =0;@@ f@@ <b@@ ;@@ f@@ ++) { if(a[@@ e@@ ][@@ f@@ ]@@ ==0)@@ g=@@ g@@ +1; } } h@@ =(@@ g@@ /@@ 4@@ -1)*(@@ g@@ /@@ 4@@ -1); printf("%d",@@ h); }  
c -1
h -1
0

intmain() { inta,b,c,@@ m; scanf("%d%d%d",&a,&b,&c); if((@@ a%4==0&&a%100!=0@@ )||(@@ a%400==0)) {@@ if(b==1) printf("%d",@@ c); if(b==@@ 2) {m@@ =31+c; printf("%d",m@@ );} if(b==@@ 3) {m@@ =31+29@@ +c; printf("%d",m@@ );} if(b==@@ 4) {m@@ =31+29@@ +31+@@ c; printf("%d",m@@ );} if(b==@@ 5) {m@@ =31+29@@ +31+30@@ +c; printf("%d",m@@ );} if(b==@@ 6) {m@@ =31+29@@ +31+30+31+@@ c; printf("%d",m@@ );} if(b==@@ 7) {m@@ =31+29@@ +31+30+31+30@@ +c; printf("%d",m@@ );} if(b==@@ 8) {m@@ =31+29@@ +31+30+31+30+31+@@ c; printf("%d",m@@ );} if(b==@@ 9) {m@@ =31+29@@ +31+30+31+30+31+31+@@ c; printf("%d",m@@ );} if(b==@@ 10) {m@@ =31+29@@ +31+30+31+30+31+31+30@@ +c; printf("%d",m@@ );} if(b==@@ 11) {m@@ =31+29@@ +31+30+31+30+31+31+30+31+@@ c; printf("%d",m@@ );} if(b==@@ 12) {m@@ =31+29@@ +31+30+31+30+31+31+30+31+30@@ +c; printf("%d",m@@ );} } else {@@ if(b==1) printf("%d",@@ c); if(b==@@ 2) {m@@ =31+c; printf("%d",m@@ );} if(b==@@ 3) {m@@ =31+28@@ +c; printf("%d",m@@ );} if(b==@@ 4) {m@@ =31+28@@ +31+@@ c; printf("%d",m@@ );} if(b==@@ 5) {m@@ =31+28@@ +31+30@@ +c; printf("%d",m@@ );} if(b==@@ 6) {m@@ =31+28@@ +31+30+31+@@ c; printf("%d",m@@ );} if(b==@@ 7) {m@@ =31+28@@ +31+30+31+30@@ +c; printf("%d",m@@ );} if(b==@@ 8) {m@@ =31+28@@ +31+30+31+30+31+@@ c; printf("%d",m@@ );} if(b==@@ 9) {m@@ =31+28@@ +31+30+31+30+31+31+@@ c; printf("%d",m@@ );} if(b==@@ 10) {m@@ =31+28@@ +31+30+31+30+31+31+30@@ +c; printf("%d",m@@ );} if(b==@@ 11) {m@@ =31+28@@ +31+30+31+30+31+31+30+31+@@ c; printf("%d",m@@ );} if(b==@@ 12) {m@@ =31+28@@ +31+30+31+30+31+31+30+31+30@@ +c; printf("%d",m@@ );}} return0; }  
c -1
h -1
voidmain() {int@@ m1,@@ m2@@ ,@@ m3@@ ,@@ n1,n2,@@ n3@@ ; structstudent@@ {int@@ num;@@ int@@ verbal@@ ;@@ int@@ math@@ ;@@ intsum@@ ;@@ }; structstudentstu[100000]; structstudent*@@ p; p=@@ stu@@ ; inti,n; scanf("%d",&n); for(i=0;i<n;i++) scanf("%d%d%d",&@@ (p+i)->@@ num,&@@ (p+i)->@@ verbal@@ ,&@@ (p+i)->@@ math); for(i=0;i<n;i++) (p+i)->@@ sum=(@@ p@@ +i)->@@ verbal@@ +@@ (p+i)->@@ math; m1@@ =p->@@ sum;@@ n1@@ =0; for(i=0;i<n;i++) if((@@ (p+i)->@@ sum@@ )>@@ m1@@ ) {@@ m1@@ =(@@ p@@ +i)->@@ sum; n1@@ =i;} printf("%d%d\n",@@ (p@@ +@@ n1@@ )@@ ->num,@@ (p@@ +@@ n1@@ )@@ ->sum); m2@@ =p->@@ sum;@@ n2@@ =0; for(i=0;i<n;i++) if((@@ (p+i)->@@ sum@@ )>@@ m2@@ &&i!=@@ n1@@ ) {@@ m2@@ =(@@ p@@ +i)->@@ sum; n2@@ =i;} printf("%d%d\n",@@ (p@@ +@@ n2@@ )@@ ->num,@@ (p@@ +@@ n2@@ )@@ ->sum); m3@@ =p->@@ sum;@@ n3@@ =0; for(i=0;i<n;i++) if(((@@ (p+i)->@@ sum@@ )>@@ m3@@ )@@ &&i!=@@ n1@@ &&i!=@@ n2) {@@ m3@@ =(@@ p@@ +i)->@@ sum; n3@@ =i;} printf("%d%d\n",@@ (p@@ +@@ n3@@ )@@ ->num,@@ (p@@ +@@ n3@@ )@@ ->sum); }  
c -1
h -1
0

intf@@ (intx,inty) { inta,@@ n=1; for(@@ a=@@ y@@ ;a@@ <=@@ sqrt(@@ x@@ );@@ a++) { if(x%@@ a@@ ==0) { n+=@@ f(@@ x/@@ a,@@ a); } } return@@ n; } intmain() { intm,@@ i; scanf("%d",&m); intx@@ [m@@ ],@@ n@@ [m]; for(i=0;i<m;i++) { scanf("%d",&@@ x[i]); n[i]=@@ f(@@ x@@ [i],@@ 2); } for(i=0;i<m;i++) { printf("%d\n",n@@ [i]); } return0; }  
c -1
h -1
voidmain() { while(1) { inta[100@@ ]={@@ -2@@ },@@ i,j,@@ count=0; for(i=0;;i++) { scanf("%d",&a[i]); if(a[0]@@ ==@@ -1@@ ||@@ a[i]@@ ==0)break; } if(a[0]==-1)break; for(i=0;@@ a[i+1@@ ]@@ !=0;i++) for(j=i+1@@ ;@@ a[j]@@ !=0;j++) if(a[i]==2*@@ a[j]||@@ a[i]@@ *2==@@ a[j]) count++; printf("%d\n",@@ count); } }  
c -1
h -1
0

intk,m,n,@@ a[100][100],@@ i,j,@@ sum=0; intmain() { cin>>k; while(k@@ >0) { k--; cin>>m>>n; for(i=1;i<=m;i++) for(j=1;j<=n;j++) cin>>a[i][j]; if(m@@ ==1||@@ m@@ ==@@ 2@@ ||@@ n@@ ==1||@@ n==@@ 2) { for(i=1;i<=m;i++) for(j=1;j<=n;j++) sum+=@@ a[i][j]; } else { for(j=1;j<=n;j++) sum+=@@ a[1]@@ [j]; for(j=1;j<=n;j++) sum+=@@ a[m]@@ [j]; for(i=2@@ ;i<@@ m;i++) sum+=@@ a[i]@@ [1]; for(i=2@@ ;i<@@ m;i++) sum+=@@ a[i][@@ n]; } cout<<sum<<endl; sum=0; } }  
c -1
h -1
main() {@@ inti,j,k,@@ sum,@@ mm@@ =0; char@@ string1@@ [@@ NUM@@ +@@ 10]; char@@ subString@@ [@@ NUM@@ +@@ 10]; char@@ replacement@@ [@@ NUM@@ +@@ 10]; for(k=0;k<@@ NUM@@ +@@ 10@@ ;k++) { string1@@ [k]@@ ='@@ 0'; subString@@ [k]@@ ='@@ 0'; replacement@@ [k]@@ ='@@ 0'; } scanf("%s",@@ string1@@ ); scanf("%s",@@ subString@@ ); scanf("%s",@@ replacement); int@@ len1=strlen(@@ string1@@ ); int@@ len2=strlen(@@ subString@@ ); int@@ len3@@ =strlen(@@ replacement); for(i=0;i<len1@@ -len2@@ +1;i++) {@@ sum=0; if(@@ string1@@ [i]==@@ subString@@ [0]) { for(j=0;j<len2@@ ;j++) {if(@@ subString@@ [j]==@@ string1@@ [i+j@@ ]) sum++; } if(sum@@ ==@@ len2) { for(k=0;k<i;k++) printf("%c",@@ string1@@ [k]); for(k=0;k<@@ len3@@ ;k++) printf("%c",@@ replacement@@ [k]); for(k=i+@@ len2@@ ;k<@@ len1@@ ;k++) printf("%c",@@ string1@@ [k]); } if(sum@@ ==@@ len2) break; } } if(i==@@ len1@@ -len2@@ +1) for(k=0;k<@@ len1@@ ;k++) printf("%c",@@ string1@@ [k]); getchar(); getchar(); getchar(); getchar(); getchar(); getchar(); }  
c -1
h -1
0

intmain() { intn,@@ max,@@ t,@@ i,j,@@ a[1000],@@ l,@@ b[@@ 30@@ ]={0},@@ c; charstr@@ [1000][@@ 20]; scanf("%d",&n); for(i=0;i<n;i++){ scanf("%d%s",&a[i],@@ str[i]); l=strlen(@@ str[i]); for(j=0;j<l@@ ;j++){ b[@@ str@@ [i][j]@@ -@@ 64@@ ]++; } } for(i=1;i<@@ 27@@ ;i++){ if(b[i]@@ >max){ max=b[i]; t=i; } } printf("%c\n%d\n",@@ t@@ +@@ 64@@ ,@@ b[t@@ ]); for(i=0;i<n;i++){ l=strlen(@@ str[i]); for(j=0;j<l@@ ;j++){ if(str@@ [i][j]==@@ t@@ +@@ 64@@ ) printf("%d\n",a[i]); } } return0; }  
c -1
h -1
intmain() { inta,b,c; cin>>a>>@@ b@@ >>@@ c; if(!@@ ((@@ a%4==0&&a%100!=0@@ )||(@@ a%@@ 4==0&&@@ a%@@ 400==0)@@ )) {@@ if(b==1) cout<<@@ c; if(b==@@ 2) cout<<@@ 31+@@ c; if(b==@@ 3) cout<<@@ 60@@ +c@@ -1; if(b==@@ 4) cout<<@@ 91@@ +c@@ -1; if(b==@@ 5) cout<<@@ 121@@ +c@@ -1; if(b==@@ 6) cout<<@@ 152@@ +c@@ -1; if(b==@@ 7) cout<<@@ 182@@ +c@@ -1; if(b==@@ 8) cout<<@@ 213@@ +c@@ -1; if(b==@@ 9) cout<<@@ 244@@ +c@@ -1; if(b==@@ 10) cout<<@@ 274@@ +c@@ -1; if(b==@@ 11) cout<<@@ 305@@ +c@@ -1; if(b==@@ 12) cout<<@@ 335@@ +c@@ -1@@ ;} else {@@ if(b==1) cout<<@@ c; if(b==@@ 2) cout<<@@ 31+@@ c; if(b==@@ 3) cout<<@@ 60@@ +c; if(b==@@ 4) cout<<@@ 91@@ +c; if(b==@@ 5) cout<<@@ 121@@ +c; if(b==@@ 6) cout<<@@ 152@@ +c; if(b==@@ 7) cout<<@@ 182@@ +c; if(b==@@ 8) cout<<@@ 213@@ +c; if(b==@@ 9) cout<<@@ 244@@ +c; if(b==@@ 10) cout<<@@ 274@@ +c; if(b==@@ 11) cout<<@@ 305@@ +c; if(b==@@ 12) cout<<@@ 335@@ +c; }@@ return0; }  
c -1
h -1
0

intm,n,@@ a[@@ 500@@ ]={0},b[@@ 500@@ ]={0}; void@@ scanarray@@ () { inti; scanf("%d%d",&m,&n); for(i=0;i<=@@ m-1;i++) { scanf("%d",&a[i]); } for(i=0;i<=n-1;i++) { scanf("%d",&b[i]); } } void@@ shengxu@@ (intx[],int@@ len@@ ) { inti,j,temp; for(i=@@ len@@ -1;i>=0;i--) { for(j=0;j<=i-1;j++) { if(x@@ [j]>=@@ x@@ [j+1]) { temp=@@ x@@ [j]; x@@ [j]=@@ x@@ [j+1]; x@@ [j+1]=temp; } } } } voidhebing@@ (intx[],int@@ y@@ [],int@@ lenx@@ ,int@@ leny@@ ) { int@@ *p,*@@ q; for(p=@@ x+@@ lenx@@ ,@@ q=@@ y@@ ;q@@ <@@ y@@ +@@ leny@@ ;p@@ ++,@@ q++) { *p@@ =*@@ q; } } void@@ printarray@@ (intx[],int@@ len@@ ) { inti; printf("%d",@@ x@@ [0]); for(i=1;i<=@@ len@@ -1;i++) { printf("%d",a[i]); } putchar@@ (@@ '\n@@ '@@ ); } intmain() { scanarray@@ (); shengxu@@ (a,m); shengxu@@ (b,n); hebing@@ (a,b,m,n); printarray@@ (a,@@ m+@@ n); return0; }  
c -1
h -1
intk; intnum[@@ 26]; int@@ val@@ [26]; intmain() { cin>>k; for(inti=0;i<k;i++) { cin>>num[i]; val@@ [i]=0; } for(inti=@@ k-1@@ ;i>=0;i--) { if(i==@@ k@@ -1) val@@ [i]=1; else { int@@ temp=0; for(intj=i@@ ;j<@@ k;j++) { if(num@@ [i]>=@@ num[j]@@ &&@@ val@@ [j]>=@@ temp@@ ) { temp=@@ val@@ [j]; } } val@@ [i]=@@ temp@@ +1; } } intsum=0; for(inti=0;i<k;i++) { if(@@ val@@ [i]>=@@ sum) sum=@@ val@@ [i]; } cout<<sum<<endl; return0; }  
c -1
h -1
0

intmain(){ inti,@@ a,b; double@@ n=0,@@ r; char@@ x[@@ 500],@@ y[@@ 500],@@ z; scanf("%lf@@ %c@@ ",&@@ r@@ ,&@@ z); gets(@@ x); a=strlen(@@ x); gets(@@ y); b=strlen(@@ y); if(a!=@@ b){ printf("error"); } else{ for(i=0;i<a;i++){ if((x@@ [i]!='A'&&@@ x@@ [i]!='T'&&@@ x@@ [i]!='C'&&@@ x@@ [i]!='G')||(@@ y@@ [i]!='A'&&@@ y@@ [i]!='T'&&@@ y@@ [i]!='C'&&@@ y@@ [i]!='G')){ printf("error"); n@@ =-1; break; } else{ if(x@@ [i]==@@ y@@ [i]){ n++; } } } n=@@ n/@@ a; if(n@@ >@@ r@@ ){ printf("yes"); } elseif(n@@ >=0@@ ){ printf("no"); } } return0; }  
c -1
h -1
voidread@@ (int*a,@@ int*@@ b,int@@ num1@@ ,int@@ num2@@ ); voidsort@@ (int*@@ a,int@@ num1@@ ); void@@ merge@@ (int*a,@@ int*@@ b@@ ,int*@@ c@@ ,int@@ num1@@ ,int@@ num2@@ ); voidprint@@ (int*@@ a,int@@ num1@@ ); intmain() { inta[100@@ ],b[100],c[@@ 200]; int@@ num1,num2@@ ; cin>>@@ num1@@ >>@@ num2@@ ; read@@ (a,b,@@ num1,num2@@ ); sort@@ (a,@@ num1@@ ); sort@@ (b,@@ num2@@ ); merge@@ (a,b,@@ c,@@ num1,num2@@ ); print(@@ c,@@ num1@@ +@@ num2@@ ); return0; } voidread@@ (int*a,@@ int*@@ b,int@@ num1@@ ,int@@ num2@@ ) { inti; for(i=0;i<@@ num1@@ ;i++){ cin>>a[i]; } for(i=0;i<@@ num2@@ ;i++){ cin>>b[i]; } } voidsort@@ (int*@@ a,int@@ num1@@ ) { inti,j; for(i=0;i<@@ num1@@ ;i++){ for(j=i+1;j<@@ num1@@ ;j++){ if(a[i]>@@ a[j]@@ ){ inttemp; temp=a[i]; a[i]=a[j]; a[j]=@@ temp; } } } } void@@ merge@@ (int*a,@@ int*@@ b@@ ,int*@@ c@@ ,int@@ num1@@ ,int@@ num2@@ ) { inti; for(i=0;i<@@ num1@@ ;i++){ c[i]=a[i]; } for(i=@@ num1@@ ;i<@@ num1@@ +@@ num2@@ ;i++){ c[i]=b[i-@@ num1@@ ]; } } voidprint@@ (int*@@ a,int@@ num1@@ ) { inti; for(i=0;i<@@ num1@@ -1;i++){ cout<<a[i]<<""; } cout<<a[@@ num1@@ -1]@@ <<endl; }  
c -1
h -1
0

int@@ fac@@ (intp@@ ,int@@ q) { inti,@@ t=1; if(p@@ >@@ q) { return0; } if(p==@@ q) { return1; } for(i=@@ p@@ ;i<=sqrt(@@ q@@ );i++) { if(q@@ %i==0) { t+=@@ fac@@ (i,@@ q@@ /i); } } return@@ t; } intmain() { inta,@@ i,@@ n; cin>>n; for(i=0;i<n;i++) { cin>>a; cout<<@@ fac@@ (2,@@ a)@@ <<endl; } return0; }  
c -1
h -1
main() { chara[@@ 260@@ ],b[@@ 260@@ ],c[@@ 260@@ ]; scanf("%s",a); scanf("%s",b); scanf("%s",c); for(inti@@ =0;@@ a[i]@@ !='\0';i++) { intk=0; if(a[i]==@@ b[0]) { k=1; for(int@@ e@@ =0;@@ b[@@ e@@ ]!='\0'@@ ;@@ e++) { if(a@@ [i+@@ e@@ ]!=@@ b[@@ e@@ ]) k=0; } if(k==1) for(int@@ f@@ =0;@@ b[@@ f@@ ]!='\0'@@ ;@@ f@@ ++) { a[i@@ +@@ f@@ ]=@@ c[@@ f@@ ]; } } if(k==1) break; } puts(@@ a); }  
c -1
h -1
0

intmain() { chara[@@ 256@@ ]={0},b[@@ 256@@ ]={0},@@ c[@@ 256@@ ]={0}; cin>>a>>@@ b@@ >>@@ c; char@@ *p,@@ *@@ q; p=@@ strstr@@ (a,b); q=@@ a; if(p@@ ==NULL) cout<<@@ a; else { while(@@ q@@ !=@@ p) { cout<<@@ *@@ q; q++; } cout<<@@ c; q=q@@ +@@ strlen(@@ c); while(@@ *@@ q@@ !='\0') {@@ cout<<@@ *@@ q; q++; } } return0; }  
c -1
h -1
void@@ bubble@@ (inta[],int@@ l) { inti,j,temp; for(j=1;j<@@ l@@ ;j++) { for(i=0;i<l@@ -j;i++) { if(a[i]>a[i+1]) { temp=a[i]; a[i]=a[i+1]; a[i+1]=@@ temp; } } } } intmain() { intm,n,i,j,@@ a[@@ 10000@@ ],b[@@ 10000]; scanf("%d%d",&m,&n); for(i=0;i<m;i++) { scanf("%d",&a[i]); } for(j=0;j<n;j++) { scanf("%d",&@@ b[j]); } bubble@@ (a,m); bubble@@ (b,n); for(i=0;i<m;i++) { printf("%d",a[i]); } for(j=0;j<n;j++) { printf("%d",@@ b[j]); if(j<@@ n-1) printf(""); } return0; }  
c -1
h -1
0

intnumber@@ =0; int@@ l; voidsort@@ (intn) { inti; for(i=@@ l@@ ;n@@ /i@@ >=i@@ ;i++) { if(n%i==0) { l@@ =i; sort@@ (n@@ /i); if(n@@ /i@@ ==1) number@@ ++; } } number@@ ++; } intmain() { intn,m,@@ k; cin>>n; for(k=0;k<n;k++) { l=@@ 2; number@@ =0; cin>>m; sort(@@ m); cout<<@@ number@@ <<endl; } return0; }  
c -1
h -1
int@@ paixu@@ (int@@ shuzu@@ [],int@@ num) { inti,j,@@ jiaohuan@@ ; for(i=1;i<@@ num;i++) { for(j=0;j<@@ num@@ -i;j++) { if(shuzu@@ [j]>@@ shuzu@@ [j+1]) { jiaohuan@@ =@@ shuzu@@ [j]; shuzu@@ [j]=@@ shuzu@@ [j+1]; shuzu@@ [j+1]=@@ jiaohuan@@ ; } } } } int@@ hebing@@ (int@@ shuzu1@@ [],int@@ num1@@ ,int@@ shuzu2@@ [],int@@ num2@@ ) { inti; for(i=0;i<@@ num2@@ ;i++)@@ shuzu1@@ [i+@@ num1@@ ]=@@ shuzu2@@ [i]; } intmain() { int@@ shuzu1@@ [@@ 200],@@ shuzu2@@ [100],@@ num1,num2@@ ,@@ i,j; cin>>@@ num1@@ >>@@ num2@@ ; for(i=0;i<@@ num1@@ ;i++)@@ cin>>@@ shuzu1@@ [i]; for(i=0;i<@@ num2@@ ;i++)@@ cin>>@@ shuzu2@@ [i]; paixu(@@ shuzu1@@ ,@@ num1@@ ); paixu(@@ shuzu2@@ ,@@ num2@@ ); hebing@@ (@@ shuzu1@@ ,@@ num1,@@ shuzu2@@ ,@@ num2@@ ); for(i=0;i<(@@ num1@@ +@@ num2@@ );i++) { cout<<@@ shuzu1@@ [i]; if(i<@@ (@@ num1@@ +@@ num2@@ -1)@@ )@@ cout<<"@@ "; } cin.get@@ ();@@ cin.get@@ ();@@ cin.get@@ ();@@ cin.get@@ ();@@ cin.get@@ ();@@ cin.get(); return0; }  
c -1
h -1
0

intfenjie@@ (int@@ max@@ ,int@@ min) { intnum@@ =1,@@ i,@@ k; for(i=min@@ ;i<@@ max@@ /2@@ ;i++) { k=@@ max@@ %@@ i; if(k==0) { if(i@@ <=@@ max@@ /@@ i) num+=@@ fenjie@@ (@@ max@@ /i,i); } } returnnum; } intmain() { inta[@@ 10000],@@ n,@@ j; scanf("%d",&n); for(j=0;j<n;j++) { scanf("\n@@ %d",&@@ a[j]); } for(j=0;j<n;j++) { printf("%d\n",@@ fenjie@@ (@@ a[j]@@ ,@@ 2)); } return0; }  
c -1
h -1
int@@ leapyear@@ (intyear@@ ){ if(year%@@ 400==0||(@@ year%4==0&&year%100!=0@@ )) return1; else return0; } int@@ whichday@@ (intyear@@ ,int@@ month@@ ,int@@ day@@ ){ int@@ mon@@ [@@ MONTH@@ ]={31,@@ 28,31,30,31,30,31,31,30,31,30,31}; int@@ d=0,@@ i; if(@@ leapyear@@ (year@@ )@@ ==1) mon@@ [1@@ ]++; for(i=0;i<month-1;i++) d@@ +=@@ mon@@ [i]; d@@ +=@@ day; return@@ d; } intmain(){ intyear,month,day; int@@ d; scanf("%d%d%d",&year,&month,&day); d=@@ whichday@@ (@@ year,@@ month,@@ day); printf("%d",d); }  
c -1
h -1
0

intmain() { inta[100][100]; intm,n,@@ i,j,k; scanf("%d%d",&@@ m,@@ &@@ n); for(i=0;i<m;i++){ for(j=0;j<n;j++){ scanf("%d",&a[i][j]); } } for(k=0;k<n;k++){ for(i=0,j@@ =k@@ ;i<@@ m@@ &&j>=0@@ ;i++,j@@ --){ printf("%d\n",a[i][j]); } } for(k=1;k<@@ m@@ ;k++){ for(i=@@ k,@@ j=@@ n-1@@ ;i<@@ m@@ &&j>=0@@ ;i++,j@@ --){ printf("%d\n",a[i][j]); } } return0; } int@@ main_e4_6_for@@ () { inta[100][100]; intm,n,@@ i,j,k; scanf("%d%d",&@@ m,@@ &@@ n); for(i=0;i<m;i++){ for(j=0;j<n;j++){ scanf("%d",&a[i][j]); } } for(k=0;k<@@ (@@ m+@@ n-1)@@ ;k++){ for(i=@@ e46max@@ (@@ 0,@@ k-@@ n@@ +1)@@ ,j=@@ e46min@@ (@@ k,@@ n-1)@@ ;i<@@ m@@ &&j>=0@@ ;i++,j@@ --){ printf("%d\n",a[i][j]); } } return0; }  
c -1
h -1
intnum[@@ 2@@ ]; inta[100],b[100],@@ c[100]; void@@ getarray@@ (inta[],intb[],int@@ num[@@ ]) { cin>>@@ num@@ [0]@@ >>@@ num@@ [1]; for(inti=0;i<@@ num@@ [0]@@ ;i++) cin>>a[i]; for(inti=0;i<@@ num@@ [1]@@ ;i++) cin>>b[i]; } voidsort@@ (inta[],intb[],int@@ af@@ ,int@@ bf@@ ) { inttemp; for(inti=0;i<@@ af@@ -1;i++) { for(intj=1;j<@@ af@@ -i;j++) { if(a[j]@@ <a@@ [j-1]) { temp=a[j]; a[j]=@@ a@@ [j-1]; a@@ [j-1]=@@ temp; } } } for(inti=0;i<@@ bf@@ -1;i++) { for(intj=1;j<@@ bf@@ -i;j++) { if(b[j]@@ <b@@ [j-1]) { temp=@@ b[j]; b[j]=b@@ [j-1]; b@@ [j-1]=@@ temp; } } } } voidcombine@@ (inta[],intb[],int@@ c[@@ ],int@@ af@@ ,int@@ bf@@ ) { for(inti=0;i<@@ af@@ ;i++) c[i]=a[i]; for(inti=@@ af@@ ;i<@@ af@@ +@@ bf@@ ;i++) c[i]=b[i-@@ af@@ ]; } voidprint@@ (intc[],int@@ af@@ ,int@@ bf@@ ) { cout<<c[@@ 0]; for(inti=1;i<@@ af@@ +@@ bf@@ ;i++) cout<<'@@ '@@ <<@@ c[i]; } intmain() { getarray@@ (a,b,@@ num); sort@@ (a,b,@@ num[@@ 0],@@ num@@ [1]); combine@@ (a,b,@@ c,@@ num[@@ 0],@@ num@@ [1]); print(@@ c,@@ num[@@ 0],@@ num@@ [1]); }  
c -1
h -1
0

intmain() { intn; inta[100]; inth@@ [100]; int@@ ans; while(@@ scanf("%d",&@@ n)@@ !=@@ EOF@@ ) { ans@@ =1; for(inti=0;i<n;i++) { scanf("%d",&a[i]); h@@ [i]=1; } for(inti=1;i<@@ n;i++) { intsum@@ =1; for(intj=0;j<i;j++) { if(a[j]>=a[i]&&@@ h@@ [i]<@@ h@@ [j]@@ +1) h@@ [i]=@@ h@@ [j]+1; } if(h@@ [i]>@@ ans@@ )@@ ans=@@ h@@ [i]; } printf("%d\n",@@ ans); } return0; }  
c -1
h -1
intsz[@@ 1000][1000]; intmain() { intn; introw,col; inta,b,c,@@ d; int@@ x,y; intnum; int@@ e=0,@@ f=0; scanf("%d",&n); for(row=0;row<n;@@ row++) { for(col=0;col<n;col@@ ++) { scanf("%d",&@@ sz[row][col@@ ]); } } for(row=0;row<n;@@ row++) { for(col=0;col<n;col@@ ++) { if(@@ sz[row][col@@ ]==0) { a=@@ row; b=@@ col; e=1; break; } } if(e@@ ==1) { break; } } for(row@@ =@@ n-1;@@ row@@ >=0;@@ row@@ --) { for(col@@ =@@ n-1;@@ col@@ >=0;@@ col@@ --) { if(@@ sz[row][col@@ ]==0) { c=@@ row; d=@@ col; f=1; break; } } if(f@@ ==1) { break; } } x=@@ c-a@@ -1; y=@@ d-b@@ -1; num=@@ x@@ *@@ y; printf("%d\n",num); return0; }  
c -1
h -1
0

intmain(){ double@@ bl@@ ; double@@ xg@@ ; inti,@@ l,@@ e,@@ k,@@ c; chara[501],b[501]; scanf("%lf%s%s",&@@ bl@@ ,&@@ a,&b); l@@ =strlen(a); k@@ =strlen(b); c=0; e=0; for(i=0;i<l;i++){ if((a[i]!='@@ A')&&(@@ a[i]!='@@ T')&&(@@ a[i]!='@@ C')&&(@@ a[i]!='@@ G')){ c=1; } } for(i=0;i<k;i++){ if((@@ b[i]!='@@ A')&&(@@ b[i]!='@@ T')&&(@@ b[i]!='@@ C')&&(@@ b[i]!='@@ G')){ c=1; } } if(l@@ ==@@ k@@ &&@@ c@@ ==0){ for(i=0;i<l;i++){ if(a[i]==b[i]){ e++; } } xg@@ =1.0*@@ e@@ /@@ l; if(@@ xg@@ >@@ bl@@ ){ printf("yes"); } else{ printf("no"); }} else{ printf("error"); } return0; }  
c -1
h -1
intmain() { inta,b; scanf("%d%d",&a,&b); int@@ c[100]; int@@ d@@ [100]; inti,@@ t,@@ r; i=0; do { scanf("%d",&@@ c[i]); i++; }@@ while(i<@@ a); i=0; do { scanf("%d",&@@ d[i]); i++; }@@ while(i<@@ b); t=0; do { i=0; while(i<@@ a@@ -1@@ -@@ t) { if(c@@ [i]>@@ c@@ [i+1]) { r=@@ c[i]; c[i]=@@ c@@ [i+1]; c@@ [i+1]=@@ r; } i++; } t++; }while(@@ t@@ <a@@ -1); t=0; do { i=0; while(i<@@ b@@ -1@@ -@@ t) { if(d@@ [i]>@@ d@@ [i+1]) { r=@@ d[i]; d[i]=@@ d@@ [i+1]; d@@ [i+1]=@@ r; } i++; } t++; }while(@@ t@@ <b@@ -1); printf("%d",c@@ [0]); i=1; do { printf("%d",c[i]); i++; }@@ while(i<@@ a); i=0; do { printf("%d",@@ d[i]); i++; }@@ while(i<@@ b); return0; }  
c -1
h -1
0

int@@ trans@@ (char@@ k) { chara[@@ 26@@ ]={'A','B','C','D','E','F','G','H','I','J','K','L','M','N','O','P','@@ Q','R','S','T','U','V','W','X','Y','@@ Z'}; inti; for(i=0;i<26;i++) { if(k==@@ a[i]) return@@ i; } } intmain() { intm; scanf("%d",&m); struct@@ point { intid; char@@ au@@ [26]; }@@ books@@ [1000]; intnum[@@ 26]; inti; for(i=0;i<26;i++) { num@@ [i]=0; } intj; for(i=0;i<m;i++) { scanf("%d%s",&@@ books@@ [i].@@ id,@@ books@@ [i].@@ au); } for(i=0;i<m;i++) { intk; k=strlen(@@ books@@ [i].@@ au); for(j=0;j<k;j++) {int@@ b; b=@@ trans@@ (@@ books@@ [i].@@ au@@ [j]); num[@@ b@@ ]++; } } intmax=0; int@@ most@@ ; for(i=0;i<26;i++) { if(num@@ [i]>max) { max=@@ num[i]; most@@ =i; } } char@@ aumost@@ ; aumost@@ ='A'+@@ most@@ ; printf("%c\n",@@ aumost@@ ); printf("%d\n",max); for(i=0;i<m;i++) { intk; k=strlen(@@ books@@ [i].@@ au); for(j=0;j<k;j++) { if(@@ books@@ [i].@@ au@@ [j]=='@@ A'+@@ most@@ ) { printf("%d\n",@@ books@@ [i].id); break; } } } return0; }  
c -1
h -1
intmain() { int@@ n[@@ 1000][1000],@@ num,@@ i,j,@@ p[@@ 200],@@ k=0; scanf("%d",&num); for(i=0;i<num;i++) { for(j=0;j<@@ num@@ ;j++)@@ scanf("%d",&@@ n@@ [i][j]); } int@@ w@@ =0; for(i=0;i<(@@ num@@ -1);i++) { for(j=0;j<@@ (@@ num@@ -1)@@ ;j++) { if(n@@ [i][j]==0&&@@ n[i]@@ [j+1]@@ ==0)break; elseif(n@@ [i][j]==0&&@@ n[i]@@ [j+1]@@ !=0) { p[@@ w@@ ]=@@ j; w@@ ++; } } } for(i=0;i<@@ w@@ -1@@ ;i@@ =i+@@ 2) { k=k@@ +@@ (p@@ [i+1@@ ]-@@ p[i]@@ -1); } printf("%d",k); }  
c -1
h -1
0

intmain() { struct@@ x {intnum; charname[26]; }@@ book[1000]; inti,j,@@ m,n,@@ k,@@ ex@@ ; inta[@@ 26@@ ][@@ 1000]; intcount@@ [26]={0},@@ num[@@ 26@@ ]={@@ 65@@ ,@@ 66@@ ,@@ 67@@ ,@@ 68@@ ,@@ 69@@ ,@@ 70@@ ,@@ 71@@ ,@@ 72@@ ,@@ 73@@ ,@@ 74@@ ,@@ 75@@ ,@@ 76@@ ,@@ 77@@ ,@@ 78@@ ,@@ 79@@ ,@@ 80@@ ,@@ 81@@ ,@@ 82@@ ,@@ 83@@ ,@@ 84@@ ,@@ 85@@ ,@@ 86@@ ,@@ 87@@ ,@@ 88@@ ,@@ 89@@ ,@@ 90@@ }; scanf("%d",&m); for(i=0;i<m;i++) { scanf("%d",&@@ book[i].@@ num); gets(@@ book[i].name); } for(i@@ ='A'@@ ;i<=@@ 'Z'@@ ;i++) { for(j=0;j<m;j++) { n=strlen(@@ book[j].@@ name); for(k=0;k<n;k++) { if(i==@@ book[j].@@ name@@ [k]) count@@ [i-@@ 65@@ ]++; } } } for(i=0;i<@@ 25;i++) { if(count@@ [i]>@@ count@@ [i+1]) { ex@@ =@@ count@@ [i]; count@@ [i]=@@ count@@ [i+1]; count@@ [i+1]=@@ ex@@ ; ex@@ =@@ num[i]; num[i]=@@ num@@ [i+1]; num@@ [i+1]=@@ ex@@ ; } } printf("%c\n%d\n",@@ num[@@ 25],@@ count@@ [25@@ ]); for(i=0;i<m;i++) { n=strlen(@@ book[i].name); for(k=0;k<n;k++) { if(book[i].@@ name@@ [k]==@@ num[@@ 25@@ ]) printf("%d\n",book[i].@@ num); } } return0; }  
c -1
h -1
intmain(intargc,char*argv[]) { intn,k,@@ a[1000],@@ b=0; scanf("%d%d",&n,&k); for(intt@@ =0;t@@ <n;@@ t++) { scanf("%d",&@@ a[t@@ ]); } for(inti=0;i<n;i++) { for(intj=@@ n-1@@ ;j>i;j--) { if(a[i]+a[j]==k) { b=1; printf("yes\n"); return1; } } } if(b@@ ==0) { printf("no\n"); } return0; }  
c -1
h -1
0

structbook { intnum; char@@ wr@@ [26]; }; intmain() { intn,@@ b[@@ 91@@ ][@@ 1000],@@ max=0,@@ i,j,k,@@ s,@@ m,@@ writer@@ ; structbook@@ bk@@ [1000]; scanf("%d",&n); for(i=0;i<n;i++) { scanf("%d%s",&@@ bk[i].@@ num,@@ bk[i].@@ wr@@ ); } for(i=0;i<26;i++) { s=0; for(j=0;j<n;j++) { m=strlen(@@ bk@@ [j].@@ wr@@ ); for(k=0;k<@@ m;k++) { if(@@ bk@@ [j].@@ wr@@ [k]==@@ i@@ +65) { b[i]@@ [s@@ ]=@@ bk@@ [j].@@ num; s++; k=@@ m; } } } if(s@@ >max) { max=@@ s; writer@@ =i; } } printf("%c@@ \n@@ %d",@@ writer@@ +65@@ ,max); for(i=0;i<@@ max@@ ;i++) printf("\n%d",@@ b[@@ writer@@ ][i]); return0; }  
c -1
h -1
int@@ panduan@@ (int@@ (year@@ )); intmain() { intsum=0,@@ year,@@ month,@@ day; inti; int@@ Month1@@ [@@ 13]={0,31,@@ 29,31,30,31,30,31,31,30,31,30,31}; int@@ Month2@@ [13]={0,31,28,31,30,31,30,31,31,30,31,30,31}; cin>>year>>@@ month>>@@ day; if(@@ panduan@@ (year@@ )@@ ==1) { for(i=1;i<month;i++) sum+=@@ Month1@@ [i]; sum+=@@ day; cout<<@@ sum; return0; } else { for(i=1;i<month;i++) sum+=@@ Month2@@ [i]; sum+=@@ day; cout<<@@ sum; return0; } return0; } int@@ panduan@@ (intyear@@ ) { if(year%@@ 4==0&&year%100!=0@@ ||@@ year%400==0) return1; else return0; }  
c -1
h -1
0

intmain() { inty,m,d,@@ x,@@ i; inta[@@ 12]={31,28,31,30,31,30,31,31,30,31,30,31}; scanf("%d%d%d",&y,&m,&d); if(y%@@ 4==0&&@@ y%@@ 100!=0) a[1]=29; if(y%@@ 400==0) a[1]=29; x=0; for(i=0;i<m-1;i++) x@@ +=@@ a[i]; x@@ +=@@ d; printf("%d",x); getchar(); getchar(); }  
c -1
h -1
structstudent { long@@ num; int@@ scorec@@ ; int@@ scorem@@ ; structstudent*next; }; structstudent*creat@@ (void) { structstudent*head,*@@ p0@@ ,*@@ p1,*p2; inti=0; head@@ =(structstudent*)malloc(len); head@@ ->next=NULL; scanf("%ld%d%d",&@@ head->@@ num,&@@ head->@@ scorec@@ ,&@@ head->@@ scorem@@ ); while(i<@@ 2) { p1=head; p0@@ =(structstudent*)malloc(len); scanf("%ld%d%d",&@@ p0->@@ num,&@@ p0->@@ scorec@@ ,&@@ p0->@@ scorem@@ ); while((@@ p0->@@ scorec@@ +@@ p0->@@ scorem@@ )@@ <=@@ (@@ p1->@@ scorec@@ +p1->@@ scorem@@ )&&(@@ p1->next@@ !=NULL@@ )) { p2=p1; p1=p1->next; } if((@@ p0->@@ scorec@@ +@@ p0->@@ scorem@@ )>@@ (@@ p1->@@ scorec@@ +p1->@@ scorem@@ )) { if(head@@ ==@@ p1@@ )@@ head=@@ p0; else@@ p2->next=@@ p0; p0->next@@ =p1; } else { p1->next=@@ p0; p0@@ ->next=NULL; } i++; } return(head); } structstudent*@@ sort(@@ structstudent*head@@ ,intn) { structstudent*@@ p0@@ ,*@@ p1,*p2; int@@ i=@@ 3@@ ; while(i<n) { p1=head; p0@@ =(structstudent*)malloc(len); scanf("%ld%d%d",&@@ p0->@@ num,&@@ p0->@@ scorec@@ ,&@@ p0->@@ scorem@@ ); while((@@ p0->@@ scorec@@ +@@ p0->@@ scorem@@ )@@ <=@@ (@@ p1->@@ scorec@@ +p1->@@ scorem@@ )&&(@@ p1->next@@ !=NULL@@ )) { p1=p1->next; } if((@@ p0->@@ scorec@@ +@@ p0->@@ scorem@@ )>@@ (@@ p1->@@ scorec@@ +p1->@@ scorem@@ )) { if(head@@ ==@@ p1@@ ) { p2=p1->next; (*@@ p2->next@@ ).@@ num=@@ p2->@@ num; (*@@ p2->next@@ ).@@ scorec@@ =@@ p2->@@ scorec@@ ; (*@@ p2->next@@ ).@@ scorem@@ =@@ p2->@@ scorem@@ ; p2->@@ num=@@ p1->@@ num; p2->@@ scorec@@ =p1->@@ scorec@@ ; p2->@@ scorem@@ =p1->@@ scorem@@ ; p1->@@ num=@@ p0->@@ num; p1->@@ scorec@@ =@@ p0->@@ scorec@@ ; p1->@@ scorem@@ =@@ p0->@@ scorem@@ ; } elseif(@@ p1@@ ==@@ head@@ ->next) { (*@@ p1->next@@ ).@@ num=@@ p1->@@ num; (*@@ p1->next@@ ).@@ scorec@@ =p1->@@ scorec@@ ; (*@@ p1->next@@ ).@@ scorem@@ =p1->@@ scorem@@ ; p1->@@ num=@@ p0->@@ num; p1->@@ scorec@@ =@@ p0->@@ scorec@@ ; p1->@@ scorem@@ =@@ p0->@@ scorem@@ ; } else { p1->@@ num=@@ p0->@@ num; p1->@@ scorec@@ =@@ p0->@@ scorec@@ ; p1->@@ scorem@@ =@@ p0->@@ scorem@@ ; } } free(@@ p0@@ ); i++; } return(head); } voidmain() { structstudent*head,*p1,*p2; intn; scanf("%d",&n); head=creat(); head=@@ sort(@@ head,@@ n); p1=@@ head->next; p2=p1->next; printf("%ld%d\n",@@ head->@@ num,@@ (@@ head->@@ scorec@@ +@@ head->@@ scorem@@ )); printf("%ld%d\n",@@ p1->@@ num,@@ (@@ p1->@@ scorec@@ +p1->@@ scorem@@ )); printf("%ld@@ %d",@@ p2->@@ num,@@ (@@ p2->@@ scorec@@ +@@ p2->@@ scorem@@ )); }  
c -1
h -1
0

voidmain() {int@@ sum@@ (int*p,int@@ h@@ ,int@@ l); intN@@ ,@@ m,n,@@ i,j,@@ q,@@ a[@@ 110][110@@ ]={0@@ }@@ ;@@ scanf("%d",&@@ N@@ );@@ for(q@@ =1;@@ q@@ <=@@ N@@ ;q++) {@@ scanf("%d%d",&@@ m,&@@ n);@@ for(i=0;i<=@@ m-1@@ ;i++)@@ for(j=0;j<=@@ n-1@@ ;j++)@@ scanf("%d",&a[i][j]); printf("%d\n",sum@@ (@@ a[@@ 0],@@ m,@@ n@@ )); }} intsum@@ (int*p,int@@ h@@ ,int@@ l) {int@@ r=0,@@ i,j@@ ;@@ for(i=0;i<=@@ h@@ -1;i++) {@@ if(i==0||i==@@ (@@ h@@ -1)@@ )@@ for(j=0;j<=@@ l@@ -1@@ ;j++)@@ r=r@@ +*@@ (p@@ +i@@ *@@ 110@@ +j); else@@ r=r@@ +*@@ (p@@ +i@@ *@@ 110@@ )@@ +*@@ (p@@ +i@@ *@@ 110@@ +l@@ -1)@@ ;} return@@ r; }  
c -1
h -1
intmain(){ intn,i,k,@@ a1,a2,@@ b1,@@ b2@@ ,@@ f@@ =-1,@@ s=0; int@@ (@@ sz[@@ 1000][@@ 1000@@ ]); scanf("%d",&n); getchar(); for(i=0;i<n;i++){ for(k=0;k<n;k++){ scanf("%d",&(sz[i]@@ [k]@@ )); getchar(); if(((@@ sz[i]@@ [k]@@ )@@ ==0)&&(@@ f@@ ==@@ -1)@@ ){ a1@@ =i; b1@@ =k; f=1; } if((@@ sz[i]@@ [k]@@ )@@ ==0){ a2@@ =i; b2@@ =k; } } } s=(@@ b2-b1@@ -1)*(@@ a2-a1@@ -1); printf("%d\n",s); getchar(); return0; }  
c -1
h -1
0

voidmain() { intb[@@ 5@@ ],c[@@ 5@@ ],@@ k@@ [5@@ ]; long@@ a[@@ 5@@ ]; intj; for(j=1;j<=@@ 5@@ ;j++) { scanf("%ld%d%d",&@@ a@@ [j-1]@@ ,&@@ b@@ [j-1]@@ ,&@@ c@@ [j-1]); } for(j=1;j<=@@ 5@@ ;j++) { inti,@@ l,@@ x; if(a@@ [j-1]@@ %@@ 4@@ !=0)@@ l=@@ 28; else { if((@@ a@@ [j-1]@@ %@@ 100@@ ==0)&&(@@ a@@ [j-1]@@ %@@ 400@@ !=0@@ ))@@ l=@@ 28; else@@ l=@@ 29; } x=0; for(i=1;i<=@@ b@@ [j-1]@@ -1;i++) { switch(@@ i) { case1:@@ x=x+@@ 31;break; case2:@@ x=x+@@ l@@ ;break; case3:@@ x=x+@@ 31;break; case4:@@ x=x@@ +30@@ ;break; case5:@@ x=x+@@ 31;break; case6:@@ x=x@@ +30@@ ;break; case7:@@ x=x+@@ 31;break; case8:@@ x=x+@@ 31;break; case9:@@ x=x@@ +30@@ ;break; case10:@@ x=x+@@ 31;break; case11:@@ x=x@@ +30@@ ;break; case12:@@ x=x+@@ 31;break; } } x=x+@@ c@@ [j-1]; intm; m@@ =j@@ -1; k@@ [m]=@@ x; printf("%d\n",@@ k@@ [m]); } }  
c -1
h -1
intmain() { intn,i,j,k,@@ p,@@ t; inta[@@ 20002@@ ]; cin>>n; cin>>a[0]; p=0; for(i=1;i<=n-1;i++) { cin>>k; t=0; for(j=0;j<=@@ p@@ ;j++) { if(a[j]==@@ k) { t=1; break; } } if(t@@ ==1)@@ continue; else { p=p@@ +1; a[p@@ ]=@@ k; } } cout<<a[0]; for(i=1;i<=@@ p@@ ;i++) { cout<<""<<a[i]; } cout<<endl; return0; }  
c -1
h -1
0

structstudent { intid; intc; intm; intt; }a[@@ SIZE@@ ]; int@@ cmp@@ (constvoid*@@ p1,@@ constvoid*@@ p2@@ ) { structstudent*@@ p3@@ =(structstudent@@ *)@@ p1; structstudent*@@ p4@@ =(structstudent@@ *)@@ p2; return@@ -@@ p3->@@ t@@ +@@ p4@@ ->@@ t; } intmain(void) { intn,i; scanf("%d",&n); for(i=0;i<n;i++) {@@ scanf("%d%d%d",&a[i].@@ id,&@@ a[i].@@ c@@ ,&a[i].@@ m@@ );@@ a[i].@@ t=@@ a[i].@@ m+@@ a[i].@@ c@@ ;} qsort@@ (a,n,@@ sizeof(@@ a[0]@@ ),@@ cmp@@ ); for(i=0;i<3;i++) printf("%d%d\n",@@ a[i].@@ id,@@ a[i].@@ c+@@ a[i].@@ m); return0; }  
c -1
h -1
intmain(intargc,char*argv[]) { int@@ A[@@ 1000][1000],@@ n,@@ i,j; int@@ a1,a2,@@ b1,@@ b2@@ ; a1@@ =@@ a2@@ =@@ b1@@ =@@ b2@@ =0; ints; scanf("%d",&n); for(i=0;i<n;i++) { for(j=0;j<n;j++) { scanf("%d",&@@ A@@ [i][j]); } } for(i=0;i<n;i++) { for(j=0;j<n;j++) { if(A@@ [i][j]==0) { a1@@ =i; b1@@ =j; break; } } if(@@ A[@@ a1@@ ][@@ b1@@ ]==0) { break; } } for(i=n-1;i>=0;i--) { for(j=n-1;j>=0;j--) { if(A@@ [i][j]==0) { a2@@ =i; b2@@ =j; break; } } if(@@ A[@@ a2@@ ][@@ b2@@ ]==0) { break; } } s=(@@ a2-a1@@ -1)*(@@ b2-b1@@ -1); printf("\n@@ %d\n",@@ s); return0; }  
c -1
h -1
0

void@@ TRY@@ (int,int); intnum@@ =1; intmain() { unsigned@@ short@@ intn; int@@ INTEGER@@ ; cin>>n; while(n@@ -->@@ 0@@ ) { cin>>@@ INTEGER@@ ; int@@ h=@@ 2; TRY@@ (@@ h,@@ INTEGER@@ ); cout<<num<<endl; num@@ =1; } } void@@ TRY@@ (inta,intb) { inti; for(i=a@@ ;i<=sqrt(@@ b@@ );i++) { if((@@ b@@ %i@@ ==0)&&(@@ b@@ /i@@ !=1@@ )) { num++; TRY@@ (i,@@ b@@ /i); } } }  
c -1
h -1
inta[@@ 101]; intmain() { int@@ q=0,@@ temp,@@ n,@@ i,@@ flag=0,@@ t[@@ 200]; memset(a,0,@@ sizeof(a)); scanf("%d",&n); for(i=0;i<n;i++) { scanf("%d",&@@ temp); if(a[@@ temp@@ ]==0) t@@ [q@@ ++]=@@ temp; a[@@ temp@@ ]++; } for(i=0;i<@@ q@@ ;i++) { if(flag@@ ==0)@@ flag=1; else@@ printf(""); printf("%d",@@ t@@ [i]); } }  
c -1
h -1
0

int@@ coun@@ ; void@@ depart@@ (intn,int@@ i) { intj; if(n@@ ==1)@@ coun@@ ++; else@@ for(j=i;j<=@@ n;j++) if(n@@ %j@@ ==0){@@ depart@@ (n@@ /j@@ ,j@@ );} } intmain(){ intn,@@ j; cin>>n; intb[@@ n]; for(j=0;j<n;j++) cin>>@@ b[j]; for(j=0;j<n;j++) { coun@@ =0; depart@@ (@@ b[j]@@ ,@@ 2); cout<<@@ coun@@ <<endl; } return0; }  
c -1
h -1
voidmain() { intn,@@ p,@@ a=0,@@ b,@@ m=0,@@ flag=0,@@ i; scanf("%d",&n); for(i=1;i<=@@ n*@@ n;i++) { scanf("%d",&@@ p); if(p@@ ==0) { if(m==0) { flag=1; a++; m++; } else { if(flag==1) { m++; a++; } else { m++; } } } else { if(flag==1) flag=0; } } b=@@ m@@ /2@@ -@@ a;@@ a=@@ a@@ -2@@ ; printf("%d",@@ a*@@ b); }  
c -1
h -1
0

intmain() { intk,i,j,@@ m,n,@@ g,@@ h,@@ p,@@ q=0,@@ a[@@ 25],b[@@ 25@@ ],c[@@ 25]; for(i=0;i<@@ 25;i++) b[i]=1; i=0; scanf("%d\n",&@@ k); for(i=0;i<k;i++) { if(i==0) scanf("%d",&a[0]); else scanf("%d",&a[i]); } if(k@@ ==1||@@ k@@ ==0) printf("%d",k); else { for(j=k@@ -2@@ ;j>=0;j--) { for(p=@@ j@@ +1@@ ;p<@@ k@@ ;p++) { if(a[j]>=@@ a[p@@ ]) { c[@@ q@@ ]=@@ b[p@@ ]; q++; } } if(q@@ ==0) b[j]@@ =1; elseif(@@ q@@ ==1) b[j]=@@ c@@ [0]+@@ b[j]; else { for(@@ g@@ =0;@@ g@@ <@@ q@@ -1;@@ g@@ ++) { m=@@ c[@@ g@@ ]; n=@@ c[@@ g@@ +1]; if(m@@ >n) { c[@@ g@@ ]=@@ n; c[@@ g@@ +1]=@@ m; } } b[j]=@@ c[@@ q@@ -1]@@ +@@ b[j]; q=0; g=0; p=@@ j; } } for(h=0;h@@ <k@@ -1;@@ h++) { m=@@ b[@@ h@@ ]; n=@@ b[@@ h@@ +1]; if(m@@ >n) { b[@@ h@@ ]=@@ n; b[@@ h@@ +1]=@@ m; } } printf("%d",@@ b[k@@ -1]); } }  
c -1
h -1
intmain() { intn,@@ sum=0,@@ mat@@ [100]; memset(@@ mat@@ ,0,sizeof(@@ mat@@ )); while(@@ scanf("%d",&@@ n@@ ),@@ n@@ !=-1) { if(n@@ ==0) { printf("%d\n",sum); sum=0; memset(@@ mat@@ ,0,sizeof(@@ mat@@ )); } elseif(n@@ >@@ 49@@ ) { mat@@ [n@@ ]=1; if(@@ mat@@ [n@@ >>@@ 1@@ ]) sum++; } else { mat@@ [n@@ ]=1; if(@@ mat@@ [n@@ <<@@ 1@@ ]) sum++; if(!@@ (n@@ &@@ 1@@ )&&@@ mat@@ [n@@ >>@@ 1@@ ]) sum++; } } return0; }  
c -1
h -1
0

intmain(){ doublen,@@ p; inti; intk=0,@@ s=0; char@@ zfc1@@ [500],@@ zfc2@@ [500]; scanf("%lf",&n); scanf("%s",@@ zfc1@@ ); scanf("%s",@@ zfc2@@ ); int@@ a=strlen(@@ zfc1@@ ),@@ b=strlen(@@ zfc2@@ ); if(a!=@@ b){ printf("error"); }else{@@ for(i=0;i<a;i++) {if((@@ zfc1@@ [i]=='A'||@@ zfc1@@ [i]=='T'||@@ zfc1@@ [i]=='C'||@@ zfc1@@ [i]=='@@ G')&&(@@ zfc2@@ [i]=='A'||@@ zfc2@@ [i]=='T'||@@ zfc2@@ [i]=='C'||@@ zfc2@@ [i]=='@@ G')){ s++; }@@ if(@@ zfc1@@ [i]==@@ zfc2@@ [i]){ k++; }} if(s@@ ==@@ a){ p@@ =1.0*@@ k/@@ a; if(p@@ >@@ n@@ ){printf("yes");} else{printf("no");} }else{@@ printf("error");} }@@ return0; }  
c -1
h -1
intmain(){ intn,i,j,@@ x,y,@@ p,q,@@ s,@@ t,@@ a[100][100]; scanf("%d",&n); for(i=0;i<n;i++) for(j=0;j<n;j++) scanf("%d",&a[i][j]); for(i=0;i<n;i++) for(j=0;j<n;j++) if(@@ *(*(a+i)@@ +j)@@ ==0) {@@ x@@ =i;@@ y@@ =j@@ ;break;} for(p=@@ n-1@@ ;p@@ >=0@@ ;p@@ --) for(q=@@ n-1@@ ;q@@ >=0@@ ;q@@ --) if(@@ *(*(a@@ +p@@ )+@@ q@@ )@@ ==0) {@@ s=@@ p@@ ;@@ t=@@ q@@ ;break;} printf("%d",@@ (x@@ -@@ s@@ -1)*(@@ t@@ -@@ y@@ -1)); return0;}  
c -1
h -1
0

structbook { intnum; charwriter@@ [27]; structbook*next; }@@ *@@ head; int@@ times@@ [26]; void@@ create@@ (intm) { structbook*@@ p1,*p2; inti; for(i=0;i<=@@ m-1;i++) { p1=(structbook@@ *)malloc(sizeof(structbook)); scanf("%d",&@@ p1->num); scanf("%s",@@ p1->@@ writer); if(!@@ i)@@ head=p1; elsep2->next=p1; p2=p1; } p2->next=NULL; } intcount@@ () { intmax@@ ,@@ l,@@ i; char@@ temp@@ [27]; structbook*@@ p1; for(i=0;i<=@@ 25@@ ;i++)@@ times@@ [i]=0; p1=head; while(p1!=NULL) { l=strlen(@@ p1->@@ writer); strcpy(@@ temp,@@ p1->@@ writer); for(i=0;i<=@@ l@@ -1;i++) times@@ [@@ temp@@ [i]@@ -65]++; p1=p1->next; } max=0; for(i=0;i<=25;i++) if(@@ times@@ [i]>@@ times@@ [max@@ ])@@ max=i; return(@@ max); } voidprint@@ (int@@ max) { structbook*@@ p1; int@@ abc@@ [@@ 999@@ ],@@ total@@ ,@@ l,@@ i; char@@ temp@@ [27]; total=0; printf("%c\n",@@ max@@ +65); p1=head; while(p1!=NULL) { strcpy(@@ temp,@@ p1->@@ writer); l=strlen(@@ temp); for(i=0;i<=@@ l@@ -1;i++) if(max@@ +65@@ ==@@ temp@@ [i]@@ )break; if(i<@@ l) { abc@@ [@@ total@@ ]=@@ p1->@@ num; total@@ ++; } p1=p1->next; } printf("%d\n",@@ total); for(i=0;i<=@@ total@@ -1;i++) { printf("%d\n",@@ abc@@ [i]); } } voidmain() { intmax@@ ,@@ m; scanf("%d",&m); create@@ (m); max=count@@ (); print(@@ max); }  
c -1
h -1
intmain(intargc,char*argv[]) { intm,@@ n[@@ 1000][1000],@@ ai@@ ,@@ aj@@ ,@@ zi@@ ,@@ zj@@ ,i,j,@@ s; scanf("%d",&m); for(i=0;i<m;i++) { for(j=0;j<m;j++) { scanf("%d",&@@ n@@ [i][j]); if(n@@ [i][j]==0) { zi@@ =i;@@ zj@@ =j; } } } for(i=@@ (m@@ -1)@@ ;i>=0;i--) { for(j@@ =(m@@ -1)@@ ;j>=0;j--) { if(n@@ [i][j]==0) { ai@@ =i;@@ aj@@ =j; } } } s=(@@ zj@@ -@@ aj@@ -1)*(@@ zi@@ -@@ ai@@ -1); printf("%d\n",s); return0; }  
c -1
h -1
0

intmain() { intk,m,n,i,j,@@ z,@@ sum,@@ temp; inta[@@ 101][101]; int(*p)@@ [@@ 101@@ ]=a; cin>>k; for(i=0;i<k;i++) { sum=0; cin>>m>>n; for(j=0;j<m;j++) for(z@@ =0;z@@ <n;@@ z++) cin>>@@ *(*(p@@ +j)+@@ z); if(m@@ !=1@@ &&n@@ !=1) { for(@@ temp@@ =0;@@ temp@@ <n;@@ temp@@ ++) sum+=@@ (@@ *(*(p@@ )+@@ temp@@ )@@ +*(@@ *(p@@ +m-1)@@ +@@ temp@@ )); for(@@ temp@@ =0;@@ temp@@ <m;@@ temp@@ ++) sum+=@@ (*(@@ *(p+@@ temp@@ ))@@ +*(@@ *(p+@@ temp@@ )+@@ n-1@@ )); sum@@ -=@@ *(*(p@@ ))@@ +*(@@ *(p@@ )+@@ n-1)@@ +*(@@ *(p@@ +m-1)@@ )@@ +*(@@ *(p@@ +m-1)@@ +n-1); cout<<sum<<endl; } else@@ cout<<@@ *(*(p@@ )@@ )<<endl; } return0; }  
c -1
h -1
intmain(){ inti,n; scanf("%d",&n); int*@@ N =@@ (int*)malloc(sizeof(int)*n); for(intk=0;k<@@ n;k++) { scanf("%d",&(@@ N@@ [k]@@ )); } for(i=1;i<n;i++) { for(int@@ r=0;r@@ <i@@ ;r++) { if(N@@ [i]==@@ N@@ [r@@ ]) { for(intj=i@@ ;j<n;j++) { N@@ [j]=@@ N@@ [j+1]; } n--; i--; } } } for(i=0;i<n;i++) { if(i==@@ n-1) printf("%d",@@ N@@ [i]); else printf("%d",@@ N@@ [i]); } return0; }  
c -1
h -1
0

intmain(){ char@@ st@@ [@@ 351@@ ],@@ su@@ [@@ 351@@ ],@@ re@@ [@@ 551@@ ],@@ reh@@ [@@ 551@@ ]; inta,b,c,@@ e,@@ r,@@ lu@@ ,@@ lr@@ ; scanf("%s",@@ st@@ ); scanf("%s",@@ su@@ ); scanf("%s",@@ re); r@@ =-1; for(a=0;a@@ <@@ strlen(@@ st@@ );@@ a++){ e=1; for(b=0;b@@ <@@ strlen(@@ su@@ );@@ b++){ if(@@ st@@ [a@@ +@@ b@@ ]!=@@ su@@ [b@@ ]){ e=0; } } if(e@@ ){ r=@@ a; break; } } if(r@@ +1@@ ){ for(a=0;a@@ <@@ r@@ ;a@@ ++){ reh@@ [a@@ ]=@@ st@@ [a@@ ]; } for(a=0;a@@ <@@ strlen(@@ su@@ );@@ a++){ reh@@ [r@@ +@@ a@@ ]=@@ re@@ [a@@ ]; } lu@@ =strlen(@@ su@@ ); lr@@ =strlen(@@ re); for(@@ a=@@ r@@ +@@ lu@@ ;a@@ <=@@ 530@@ ;a@@ ++){ reh@@ [@@ lr@@ +@@ a@@ -@@ lu@@ ]=@@ st@@ [a@@ ]; } printf("%s",@@ reh@@ ); } else{ printf("%s",@@ st@@ ); } return0; }  
c -1
h -1
main() { inti,j,k,@@ countb@@ ,@@ re@@ ; chara[@@ 256]; charb[@@ 20]; charc[@@ 20]; scanf("%s",a); scanf("%s",b); scanf("%s",c); for(i=0;@@ b[i]@@ !=0;i++) {@@ countb@@ =i;} for(i=0;a[i]!='\0';i++) { re@@ =0; if(a[i]==@@ b[0]) { for(j=i@@ ;@@ b@@ [j-i@@ ]@@ !='\0';j++) {@@ if(a[j]!=@@ b@@ [j-i@@ ])@@ break;} if(j==@@ i+@@ countb@@ +1) { re@@ =1; for(j=i;j<=@@ i+@@ countb@@ ;j++) a[j]=@@ c@@ [j-i@@ ]; } } elsecontinue; if(@@ re@@ ==1) break; } printf("%s",a); getchar(); getchar(); }  
c -1
h -1
1


intmain() { inta[16],@@ i,j,k,@@ count; while(1) { for(i=0;;i++) { cin>>a[i]; if(a[i]==0) break; if(a[0]==-1) break; } if(a[0]==-1) break; count=0; for(k=0;k<i;k++) for(j=0;j<i;j++) if((@@ a[k@@ ]==2*@@ a[j]@@ )||(@@ a[j]==@@ a[k]@@ *2@@ )) count++; cout<<count@@ /2@@ <<endl; } return0; }  
c -1
h -1
struct@@ point@@ { int@@ id,@@ a,b,@@ c; }@@ s[@@ 100000],@@ tmp; intmain(intargc,char*argv[]) { inti,n; scanf("%d",&n); for(i=0;i<n;i++) { scanf("%d%d%d",&@@ s[i].@@ id,&@@ s[i].@@ a,&@@ s[i].@@ b); s[i].@@ c=@@ s[i].@@ a+@@ s[i].@@ b; } for(i=1;i<n;i++) { if(s@@ [i].@@ c@@ >@@ s@@ [0].@@ c) { tmp=@@ s[@@ 0]; s[@@ 0]=@@ s[i]; s[i]=@@ tmp; } } for(i=2@@ ;i<n;i++) { if(s@@ [i].@@ c@@ >@@ s[1].@@ c) { tmp=@@ s@@ [1]; s@@ [1]=@@ s[i]; s[i]=@@ tmp; } } for(i=@@ 3@@ ;i<n;i++) { if(s@@ [i].@@ c@@ >@@ s[2].@@ c) { tmp=@@ s[2@@ ]; s[2@@ ]=@@ s[i]; s[i]=@@ tmp; } } for(i=0;i<3;i++) { printf("%d%d\n",@@ s[i].@@ id,@@ s[i].@@ c); } return0; }  
c -1
h -1
0

intmain() { inti,n,@@ l1,l2@@ ,j@@ ,k@@ =1; char@@ d@@ [2][@@ 501]; double@@ g,@@ e,@@ m; scanf("%lf",&@@ g@@ ); scanf("%s",@@ d@@ [0]); scanf("%s",@@ d@@ [1]); l1=strlen(@@ d@@ [0]); l2=strlen(@@ d@@ [1]); if(l1!=l2@@ ){ printf("error"); }else{ for(j=0;j<@@ 2@@ ;j++){ for(i=0;i<l1;i++){ if(d@@ [j]@@ [i]!='A'&&@@ d@@ [j]@@ [i]!='T'&&@@ d@@ [j]@@ [i]!='C'&&@@ d@@ [j]@@ [i]!='G'){ k=0; break; } if(k@@ ==0){ break; } } } if(k@@ ==1){ for(i=0;i<l1;i++){ if(d@@ [0]@@ [i]==@@ d@@ [1]@@ [i]){ e++; } } } } if(l1@@ ==@@ l2@@ ){ if(k@@ ==1){ m@@ =1.0*@@ e@@ /@@ l1; if(m@@ >@@ g@@ ){ printf("yes"); }else{ printf("no"); } }else{ printf("error"); } } return0; }  
c -1
h -1
main() { inta,b,c,@@ n=0; scanf("%d%d%d",&a,&b,&c); if(a%@@ 4==0&&@@ a%@@ 100!=0) a=0; if(a%@@ 100==0&&@@ a%@@ 400==0) a=0; if(a@@ !=0) { switch(@@ b@@ -1) { case12:@@ n=n+31; case11:@@ n=n+@@ 30; case10:@@ n=n+31; case9:@@ n=n+@@ 30; case8:@@ n=n+31; case7:@@ n=n+31; case6:@@ n=n+@@ 30; case5:@@ n=n+31; case4:@@ n=n+@@ 30; case3:@@ n=n+31; case2:@@ n=n+@@ 28; case1:@@ n=n+31; } n=@@ n@@ +c; printf("%d",n); } if(a==0) { switch(@@ b@@ -1) { case12:@@ n=n+31; case11:@@ n=n+@@ 30; case10:@@ n=n+31; case9:@@ n=n+@@ 30; case8:@@ n=n+31; case7:@@ n=n+31; case6:@@ n=n+@@ 30; case5:@@ n=n+31; case4:@@ n=n+@@ 30; case3:@@ n=n+31; case2:@@ n=n+@@ 29; case1:@@ n=n+31; } n=@@ n@@ +c; printf("%d",n); } getchar(); getchar(); }  
c -1
h -1
0

voidmain() { inti,j,@@ flag=0,@@ n,k,@@ a[@@ 10000]; scanf("%d%d",&n,&k); for(i=0;i<n;i++) { if(i==1) scanf("%d",&a[i]); else scanf("%d",&a[i]); } for(i=0;i<n-1;i++) { for(j=i+1;j<n;j++) if(k==@@ a[i]+@@ a[j]) flag=1; } if(flag==1) printf("yes"); else printf("no"); }  
c -1
h -1
intmain() { intn=0; cin>>n; inti=0,j=0; inta[n]; for(i=0;i<n;i++) { cin>>a[i]; } cout<<a[0]; for(i=1;i<n;i++) { for(j=0;j<=i;j++) { if(a[i]==a[j]) break; } if(i==@@ j) cout<<""<<a[i]; } return0; }  
c -1
h -1
0

intmain() { inti,@@ l@@ ,j,@@ n=0,@@ sum=0,@@ t=0; float@@ k,@@ c; chara[500],b[500]; scanf("%f",&@@ k); scanf("%s%s",a,b); if(strlen(a)!=strlen(b@@ )) {@@ printf("error");@@ t@@ =1;} if(t==0) { for(i=0;a[i]!='\0';i++) { if(t==0) { if(a[i]!=@@ 65@@ &&a[i]@@ !=@@ 71@@ &&a[i]@@ !=@@ 67@@ &&a[i]@@ !=@@ 84@@ ) {@@ printf("error");@@ t@@ =1;} } } } if(t==0) { for(j=0;@@ b[j]@@ !='\0';j++) { if(t==0) { if(b[j]@@ !=@@ 65@@ &&@@ b[j]@@ !=@@ 71@@ &&@@ b[j]@@ !=@@ 67@@ &&@@ b[j]@@ !=@@ 84@@ ) {@@ printf("error");@@ t@@ =1;} } } } if(t==0) { for(l=0;@@ a[l@@ ]!='\0'@@ ;l++) { sum++; if(a[@@ l@@ ]==@@ b[l@@ ]) n++; } c@@ =(@@ float)@@ n/@@ sum; if(c@@ >@@ k) {@@ printf("yes");} else {@@ printf("no");} } return0; }  
c -1
h -1
intmain(intargc,char*argv[]) { intn,i,k,@@ line@@ =0,@@ row@@ =0,@@ mianji@@ ; int@@ p@@ [100][100]; scanf("%d",&n); for(i=0;i<n;i++) { for(k=0;k<n;k++) scanf("%d",&@@ p[i]@@ [k]); } for(i=1;i<n;i++) { for(k=0;k<n;k++) { if(p@@ [i][k]@@ ==0&&@@ p@@ [i-1@@ ][k@@ ]==0) row@@ =@@ row@@ +1; } } for(k=1;k<@@ n;k++) { for(i=0;i<n;i++) { if(p@@ [i][k]@@ ==0&&@@ p[i]@@ [k-1]@@ ==0) line@@ =@@ line@@ +1; } } mianji@@ =(@@ line@@ /2@@ -1)*(@@ row@@ /2@@ -1); printf("%d",@@ mianji@@ ); return0; }  
c -1
h -1
0

intmain(){ int@@ c=0,@@ m=0,@@ i,@@ a,b,@@ j,@@ z=1; doublen,@@ q=0,@@ w; char@@ x[@@ 505@@ ],@@ y[@@ 505@@ ]; scanf("%lf",&n); scanf("%s",@@ x); scanf("%s",@@ y); a=strlen(@@ x); b=strlen(@@ y); if(a!=@@ b@@ ){@@ z@@ =0;} else{@@ for(i=0;i<@@ a@@ ;i++){@@ if((x@@ [i]=='@@ A@@ '|@@ | x@@ [i]=='@@ T@@ '|@@ | x@@ [i]=='@@ C@@ '|@@ | x@@ [i]=='@@ G')@@ && (y@@ [i]=='@@ A@@ '|@@ | y@@ [i]=='@@ T@@ '|@@ | y@@ [i]=='@@ C@@ '|@@ | y@@ [i]=='@@ G')@@ )@@ z@@ =1;@@ else@@ z@@ =0;} } if(z@@ ==0)@@ printf("error"); if(z@@ !=0@@ ){@@ for(i=0;i<@@ a@@ ;i++){@@ if(x@@ [i]==@@ y@@ [i])@@ q@@ ++;} } if(z@@ !=0@@ ){@@ w=@@ q@@ /@@ a;@@ if(w@@ >=@@ n)@@ printf("yes");@@ else@@ printf("no");} return0; }  
c -1
h -1
intmain() { inta[16@@ ]={0},@@ n=0,@@ i,@@ m,@@ j; while(cin>>@@ a[0]) { if(a[0]@@ !=@@ (@@ -1)) { for(i=1;i<=@@ 15;i++) { cin>>a[i]; if(a[i]==0) break; } for(j=i-1;j>=0;j--) { for(m@@ =i@@ -1@@ ;m@@ >=0@@ ;m@@ --) { if(a[j]==2*@@ a[m@@ ]) n++; } } cout<<n<<endl; n=0; } else break; } return0; }  
c -1
h -1
0

main() { inti,j,@@ la@@ ,lb@@ ,@@ lc@@ ,@@ aaa@@ ; chara[256],b[256],c[256]; gets(a); gets(b); gets(c); la@@ =strlen(a); lb@@ =strlen(b); lc@@ =strlen(c); aaa@@ =0; for(i=0;i<=@@ la@@ -1;i++) { for(j=0;@@ (j@@ <=@@ lb@@ -1)@@ &&(@@ i@@ +j@@ <=@@ la@@ -1)@@ ;j++) { if(a@@ [i+j]==@@ b[j]) { if(j==@@ lb@@ -1) { aaa@@ =1; } } else { break; } } if(@@ aaa@@ ==1) { break; } } if(@@ aaa@@ ==1) { for(j=0;j<=@@ lc@@ -1;j++) { a[i+j@@ ]=@@ c[j]; } } puts(@@ a); }  
c -1
h -1
intmain() { char@@ exp@@ ; inti,@@ c,@@ t,@@ w,@@ n,@@ s,@@ t2@@ ,j,@@ k,@@ a[@@ 16]; long@@ m,@@ e; float@@ x,y; double@@ r,@@ d,@@ b,@@ h,@@ g@@ [100]; for(;;) { for(i=0;i<=@@ 15@@ ;i++)@@ a[i]=0; for(i=0;i<=@@ 15;i++) { scanf("%d",&a[i]); if(a[i]==0)break; if(a[i]==@@ -1)@@ return0; } n=i; s=0; for(i=0;i<n;i++) { for(j=0;j<n;j++) if(a[j]==2*@@ a[i])@@ s=s+1; } printf("%d\n",s); } return0; }  
c -1
h -1
0

structbook { intnum; char@@ wr@@ [26]; }; intmain() { intn,@@ b[@@ 91@@ ][@@ 1000],@@ max=0,@@ i,j,k,@@ s,@@ m,@@ writer@@ ; structbook@@ bk@@ [1000]; scanf("%d",&n); for(i=0;i<n;i++) { scanf("%d%s",&@@ bk[i].@@ num,@@ bk[i].@@ wr@@ ); } for(i=0;i<26;i++) { s=0; for(j=0;j<n;j++) { m=strlen(@@ bk@@ [j].@@ wr@@ ); for(k=0;k<@@ m;k++) { if(@@ bk@@ [j].@@ wr@@ [k]==@@ i@@ +65) { b[i]@@ [s@@ ]=@@ bk@@ [j].@@ num; s++; k=@@ m; } } } if(s@@ >max) { max=@@ s; writer@@ =i; } } printf("%c@@ \n@@ %d",@@ writer@@ +65@@ ,max); for(i=0;i<@@ max@@ ;i++) printf("\n%d",@@ b[@@ writer@@ ][i]); return0; }  
c -1
h -1
intmain() { struct@@ author_book { int@@ count; int@@ book[999]; }@@ au@@ [26]; for(intk=0;k<@@ 26@@ ;k++) { au@@ [k].@@ count=0; } intm; cin>>m; for(inti=1;i<=@@ m;i++) { intnum; chara[@@ 26]; cin>>num; cin.get(); cin.getline@@ (a,@@ 26@@ ); for(intk=0;k<@@ strlen(a)@@ ;k++) { int@@ author_r@@ =@@ (int)@@ (@@ a[k]@@ -'A'@@ ); au@@ [@@ author_r@@ ].@@ book[@@ au@@ [@@ author_r@@ ].@@ count@@ ]=@@ num; au@@ [@@ author_r@@ ].@@ count++; } } intmax=0; int@@ the_one@@ =0; for(inti=0;i<@@ 26;i++) { if(au@@ [i].@@ count@@ >max) { max=@@ au@@ [i].@@ count; the_one@@ =i; } } char@@ maxau@@ ='A'+@@ the_one@@ ; cout<<@@ maxau@@ <<endl; cout<<@@ au@@ [@@ the_one@@ ].@@ count@@ <<endl; for(inti=0;i<@@ au@@ [@@ the_one@@ ].@@ count@@ ;i++) { cout<<@@ au@@ [@@ the_one@@ ].@@ book@@ [i]<<endl; } return0; }  
c -1
h -1
1


intmain(){ inti,j,@@ row,col,@@ r,@@ c,@@ num,@@ ro@@ ,@@ co@@ ; inta[100][100]; scanf("%d%d",&row,&col); for(i=1;i<=@@ row;i++){ for(j=1;j<=@@ col@@ ;j++){ scanf("%d",&a[i][j]); } } r@@ =1; c=1; while(1){ ro@@ =@@ r; co@@ =@@ c; while(1){ printf("%d\n",a[@@ ro@@ ][@@ co@@ ]); ro@@ ++; co@@ --; if(@@ ro@@ >@@ row@@ ||@@ co@@ <=@@ 0@@ ){ break; } } if(c==@@ col@@ &&@@ r@@ ==@@ row@@ ){ break; } if(c@@ <col@@ ){ c++; } else{ r++; } } return0; }  
c -1
h -1
char@@ q@@ [100],@@ a[100],b[100],@@ xc@@ [50@@ ][100]; main(){ scanf("%s",&@@ q); scanf("%s",&@@ a); scanf("%s",&@@ b); inti=0,j=0,@@ k=0,@@ s=0,@@ p=0,@@ qc@@ ,@@ ac@@ ,@@ bc@@ ,@@ r,@@ js@@ =0,@@ sz@@ [100]={0},@@ x,y,@@ z,@@ npc@@ ; qc@@ =strlen(@@ q); ac@@ =strlen(a); bc@@ =@@ qc@@ -@@ ac@@ ; for(i=0;i<@@ bc@@ +1@@ ;i++){ for(j=0;j<@@ ac@@ ;j++){ xc@@ [i][j]=@@ q@@ [j@@ +k@@ ]; } k++; p=@@ strcmp(@@ xc@@ [i],@@ a); if(p@@ ==0){ sz[@@ js@@ ]=i; js@@ ++; } } npc@@ =@@ sz[@@ 0]; if(@@ js@@ ==0){ printf("%s\n",@@ q); } if(@@ js@@ !=0){ for(x=0;x@@ <@@ npc@@ ;x@@ ++){ printf("%c",@@ q@@ [x@@ ]); } printf("%s",@@ b); for(@@ z=@@ npc@@ +@@ ac@@ ;@@ z@@ <@@ qc@@ ;@@ z@@ ++){ printf("%c",@@ q@@ [@@ z@@ ]); } } return0; }  
c -1
h -1
0

voidmain() { inti,@@ a[@@ 5@@ ],@@ m[@@ 5@@ ],@@ d[@@ 5@@ ],c[@@ 5@@ ],@@ t@@ [5@@ ]; for(i=0;i<@@ 5;i++) {@@ scanf("%d%d%d",&@@ a[i],&@@ m@@ [i],&@@ d[i]); if(((@@ a[i]@@ %4==0&&@@ a[i]@@ %100!=0@@ )||@@ a[i]@@ %@@ 400==0)@@ ==1) { switch(@@ m@@ [i]) { case1:@@ c[i]@@ =0;@@ break; case2:@@ c[i]=@@ 31;break; case3:@@ c[i]=@@ 60@@ ;break; case4:@@ c[i]=@@ 91@@ ;break; case5:@@ c[i]=@@ 121@@ ;break; case6:@@ c[i]=@@ 152@@ ;break; case7:@@ c[i]=@@ 182@@ ;break; case8:@@ c[i]=@@ 213@@ ;break; case9:@@ c[i]=@@ 244@@ ;break; case10:@@ c[i]=@@ 274@@ ;break; case11:@@ c[i]=@@ 305@@ ;break; case12:@@ c[i]=@@ 335@@ ;break; } } else { switch(@@ m@@ [i]) { case1:@@ c[i]@@ =0;@@ break; case2:@@ c[i]=@@ 31;break; case3:@@ c[i]=@@ 59@@ ;break; case4:@@ c[i]=@@ 90@@ ;break; case5:@@ c[i]=@@ 120@@ ;break; case6:@@ c[i]=@@ 151@@ ;break; case7:@@ c[i]=@@ 181@@ ;break; case8:@@ c[i]=@@ 212@@ ;break; case9:@@ c[i]=@@ 243@@ ;break; case10:@@ c[i]=@@ 273@@ ;break; case11:@@ c[i]=@@ 304@@ ;break; case12:@@ c[i]=@@ 334@@ ;break; } } t@@ [i]=@@ c[i]@@ +d@@ [i]; printf("%d\n",@@ t@@ [i]); }}  
c -1
h -1
intmain() { intN@@ ,@@ m,@@ i,j,@@ a[@@ 10000],@@ t,@@ b[@@ 10000@@ ]={0},@@ n[@@ 10000@@ ]={0},@@ k,@@ p=0,@@ x,@@ q; scanf("%d",&m); for(j=0;j<m;j++) scanf("%d",&a[j]); b[0]=@@ a[0]; for(j=0;j<m;j++) { p=0; for(k=0;@@ b[k@@ ]@@ !=0@@ ;k++) { if(a[j]==@@ b[k@@ ]){@@ n@@ [k]@@ ++@@ ;p@@ =1;break;} } if(p@@ ==0){@@ b[k]=@@ a[j]@@ ;n@@ [k]@@ ++;} } x@@ =0;q@@ =0; if(n@@ [0]@@ ==1)@@ printf("%d",@@ b[0]@@ ); elseif(n@@ [0]@@ >=@@ 2) { printf("%d",@@ b[0]@@ ); n@@ [0]@@ =0; } for(j=1@@ ;@@ b[j]@@ !=0;j++) { if(n@@ [j]@@ ==1)@@ printf("%d",@@ b[j]); elseif(n@@ [j]>=@@ 2) { printf("%d",@@ b[j]); n@@ [j]@@ =0; } } return0; }  
c -1
h -1
0

intmain() { chara[@@ 300]; charb[@@ 200@@ ],c[@@ 200],@@ d[@@ 200@@ ]={0}; int@@ n1,n2,@@ n3@@ ,@@ i,j,k,@@ result@@ ,@@ p,@@ w; scanf("%s%s%s",a,b,c); n1@@ =strlen(a); n2@@ =strlen(b); n3@@ =strlen(c); p=0; k=@@ 10000@@ ; for(i=0;i<n1@@ -@@ n2@@ +1;i++) { if(p@@ ==0) { for(j=0;j<@@ n2@@ ;j++) { d@@ [j]=@@ a[i+j@@ ]; } result=@@ strcmp(@@ d,@@ b); if(result@@ ==0) { k=i; p=1; w@@ =i@@ +j@@ ; } } } if(k==@@ 10000@@ ) printf("%s",a); else { for(i=0;i<k;i++) printf("%c",a[i]); printf("%s",@@ c); for(i=@@ w@@ ;i<@@ n1@@ ;i++) printf("%c",a[i]); } return0; }  
c -1
h -1
intmain(){ intk,@@ h@@ [25],@@ a[@@ 25@@ ][@@ 25@@ ]={0}; cin>>k; for(inti=0;i<k;i++) cin>>@@ h@@ [i]; intmax@@ =1; for(inti=0;i<k;i++) a[i]@@ [i]=1; for(inti=0;i<@@ k-1;i++) for(intj=i+1@@ ;j<@@ k@@ ;j++){ a[i][j]@@ =1; for(intk@@ =i@@ ;k<@@ j@@ ;k++) if(h@@ [k]@@ >=@@ h@@ [j]@@ &&a[i]@@ [k]@@ +1>@@ a[i]@@ [j]) a[i]@@ [j]=@@ a[i][k]@@ +1; if(a[i][j]@@ >max) max=@@ a[i][j]; } cout<<max<<endl; return0; }  
c -1
h -1
0

intmain() { intn,k,i,j,@@ a[1000]; scanf("%d%d",&n,&k); for(i=0;i<n;i++) scanf("%d",&a[i]); for(i=0;i<n-1;i++) { for(j=i+1;j<n;j++) if(a[i]+a[j]==k) { printf("yes"); break; } if(j@@ <n) break; } if(i>@@ n-2@@ ) printf("no"); }  
c -1
h -1
intmain() { inti,j,k,@@ m; for(i=1;;i++) { intnum[@@ 16]; for(j=1@@ ;@@ ;j++) { cin>>@@ num@@ [j]; if(num@@ [j]@@ ==0) break; } if(num@@ [1@@ ]==@@ -1) break; int@@ cnt@@ =0; for(k=1;k<=@@ j@@ -1;k++) for(m=1;m@@ <=j@@ -1@@ ;m++) { if(num@@ [k]@@ *2==@@ num[m@@ ]) cnt@@ ++; } cout<<@@ cnt@@ <<endl; } return0; }  
c -1
h -1
0

intmain(){ intk; int@@ temp=0; intmax@@ =1; int@@ z=0; cin>>k; inta[@@ 30]; intb[@@ 30]={0}; for(inti=0;i<@@ k;i++){ cin>>a[i]; } b[0]@@ =1; for(inti=1;i<@@ k;i++){ for(intj=0;j<@@ i;j++){ if(a[j]>=@@ a[i]@@ ){ temp=@@ b[j]@@ +1; if(max<@@ temp@@ ){ max=@@ temp; } } } b[i]=@@ max; if(max@@ >@@ z@@ ){ z=@@ max; } max=1; } cout<<@@ z; return0; }  
c -1
h -1
structstudent { intid; int@@ score1@@ ; int@@ score2; structstudent*next; }; structstudent*head; structstudent*creat@@ (intx) { structstudent*p1,*p2; p1=p2=(structstudent*)malloc(LEN); scanf("%d%d%d",&@@ p1->id,&p1->@@ score1@@ ,&p1->@@ score2); head@@ =0; while(@@ p1->id@@ <@@ x) { if(p1->@@ id@@ ==1) head=p1; elsep2->next=p1; p2=p1; p1=(structstudent*)malloc(LEN); scanf("%d%d%d",&@@ p1->id,&p1->@@ score1@@ ,&p1->@@ score2); if(p1->@@ id@@ ==@@ x){ p2->next=p1; p2=p1; } } p2->next@@ =0; return(head); } voidmain() { intn; structstudent@@ *p,*@@ q@@ ,*@@ j@@ ,*@@ k; scanf("%d",&n); creat@@ (n); p=@@ q=@@ head; do{ if((@@ p->@@ score1@@ +p->@@ score2@@ )>@@ (@@ q->@@ score1@@ +@@ q->@@ score2@@ )) q=p; p=p->next; }while(p@@ !=0); p=@@ j=@@ head; do{ if((@@ p->@@ score1@@ +p->@@ score2@@ )>@@ (j@@ ->@@ score1@@ +j@@ ->@@ score2@@ )@@ &&p@@ !=@@ q) j=@@ p; p=p->next; }while(p@@ !=0); p=@@ k=@@ head; do{ if((@@ p->@@ score1@@ +p->@@ score2@@ )>@@ (k@@ ->@@ score1@@ +k@@ ->@@ score2@@ )@@ &&p@@ !=@@ q@@ &&p@@ !=@@ j) k=@@ p; p=p->next; }while(p@@ !=0); printf("%d%d\n",@@ q->@@ id,@@ (@@ q->@@ score1@@ +@@ q->@@ score2@@ )); printf("%d%d\n",@@ j@@ ->id,@@ (j@@ ->@@ score1@@ +j@@ ->@@ score2@@ )); printf("%d%d",@@ k@@ ->id,@@ (k@@ ->@@ score1@@ +k@@ ->@@ score2@@ )); }  
c -1
h -1
0

intmain() { inti,n,@@ sum@@ ,j,@@ k,@@ a[@@ 1000@@ ]={0},b[@@ 1000]={0}; scanf("%d%d",&n,&@@ sum); for(i=0;i<n;i++) { scanf("%d",&a[i]); b[i]=@@ a[i]; } for(j=0;j<n;j++) { for(k=j@@ ;k<@@ n;k++) { if((a[j]@@ +@@ b[k@@ ])@@ ==@@ sum) {@@ printf("yes");@@ return0;} } } printf("no"); return0; }  
c -1
h -1
inta[100],b[100],@@ x,y,@@ i,j,k; void@@ a1@@ (); void@@ b1@@ (int*p,int@@ n); void@@ c@@ (int*@@ p1@@ ,int@@ x@@ ,int*p2@@ ,int@@ y); void@@ d@@ (intx,int@@ y); void@@ a1@@ () { cin>>x@@ >>@@ y; for(i=0;i<x;i++) cin>>a[i]; for(i=0;i<y;i++) cin>>b[i]; } void@@ b1@@ (int*p@@ ,intn) { for(i=0;i<n-1;i++) for(j=0;j<n-1-i;j++) { if(p@@ [j+1]@@ <p@@ [j]) { k=@@ p@@ [j]; p@@ [j]=@@ p@@ [j+1]; p@@ [j+1]=@@ k; } } } void@@ c@@ (int*@@ p1@@ ,int@@ x@@ ,int*p2@@ ,int@@ y) { for(i=x@@ ,j@@ =0;i<@@ x+@@ y@@ ;j++@@ ,i++) p1@@ [i]=@@ p2@@ [j]; } void@@ d@@ (intx,inty) { cout<<a[0]; for(i=1;i<@@ x+@@ y;i++) cout<<""<<a[i]; } intmain() { a1@@ (); b1@@ (a,@@ x); b1@@ (b,@@ y); c@@ (a,@@ x,@@ b,@@ y); d@@ (x,@@ y); return0; }  
c -1
h -1
0

intmain() { int@@ p[@@ 15],@@ m,n; inti,j,k,@@ h; for(i=0;;i++) { n=0; for(j=0;;j++) { scanf("%d",&m); if(m@@ ==0)break; if(m==@@ -1)@@ return0; p@@ [j]=@@ m; } for(k=0;k<j@@ ;k++) { for(h=0;h@@ <j@@ ;@@ h++) { if(p@@ [k]==@@ 2@@ *p@@ [h@@ ])@@ n++; } } printf("%d\n",n); } return0; }  
c -1
h -1
int@@ e@@ [1000][1000]; intmain() { inti,j,n,@@ a,b,@@ c=0,@@ d=0,@@ t; scanf("%d",&n); for(i=0;i<n;i++){ for(j=0;j<n;j++){ scanf("%d",&@@ e@@ [i][j]); } } for(i=0;i<n;i++){ for(j=0;j<n;j++){ if(e@@ [i][j]==0){ a=i; b=j; } } } for(j=@@ b@@ ;j>=0;j--){ if(e@@ [a@@ ][j]@@ ==0){ c++; } else break; } for(i=a@@ ;i>=0;i--){ if(e@@ [i]@@ [b@@ ]==0){ d++; } else break; } t@@ =(@@ c@@ -2)*(@@ d@@ -2); printf("%d",t); return0; }  
c -1
h -1
0

intmain(intargc,char*argv[]) { intyear,month,@@ days; scanf("%d%d%d",&year,&month,&@@ days@@ ); int@@ day; if(month==1) { day=@@ days; } if(month==2) { day@@ =31+@@ days; } if(month==3) { if((@@ year%@@ 400==0)||(@@ year%4==0&&year%100!=0@@ )) day@@ =31+29@@ +@@ days; else day@@ =31+28@@ +@@ days; } if(month==@@ 4) { if((year%4==0&&year%100!=0)||(year%400==0)) day@@ =31+29@@ +31+@@ days; else day@@ =31+28@@ +31+@@ days; } if(month==@@ 5) { if((year%4==0&&year%100!=0)||(year%400==0)) day@@ =31+29@@ +31+30@@ +@@ days; else day@@ =31+28@@ +31+30@@ +@@ days; } if(month==@@ 6) { if((year%4==0&&year%100!=0)||(year%400==0)) day@@ =31+29@@ +30@@ +31+@@ 31+@@ days; else day@@ =31+28@@ +30@@ +31+@@ 31+@@ days; } if(month==@@ 7) { if((year%4==0&&year%100!=0)||(year%400==0)) day@@ =31+29@@ +31+30+31+30@@ +@@ days; else day@@ =31+28@@ +31+30+31+30@@ +@@ days; } if(month==8) { if((year%4==0&&year%100!=0)||(year%400==0)) day@@ =31+29@@ +31+30+31+30+31+@@ days; else day@@ =31+28@@ +31+30+31+30+31+@@ days; } if(month==@@ 9) { if((year%4==0&&year%100!=0)||(year%400==0)) day@@ =31+29@@ +31+30+31+30+31+31+@@ days; else day@@ =31+28@@ +31+30+31+30+31+31+@@ days; } if(month==@@ 10) { if((year%4==0&&year%100!=0)||(year%400==0)) day@@ =31+29@@ +31+30+31+30+31+31+30@@ +@@ days; else day@@ =31+28@@ +31+30+31+30+31+31+30@@ +@@ days; } if(month==@@ 11) { if((year%4==0&&year%100!=0)||(year%400==0)) day@@ =31+29@@ +31+30+31+30+31+31+30+31+@@ days; else day@@ =31+28@@ +31+30+31+30+31+31+30+31+@@ days; } if(month==@@ 12) { if((year%4==0&&year%100!=0)||(year%400==0)) day@@ =31+29@@ +31+30+31+30+31+31+30+31+30@@ +@@ days; else day@@ =31+28@@ +31+30+31+30+31+31+30+31+30@@ +@@ days; } printf("%d\n",@@ day); return0; }  
c -1
h -1
structstudent { intnum; intchinese; intmath; intsum; }@@ work@@ [@@ 100001@@ ]; void@@ qsort@@ (int@@ left@@ ,int@@ right@@ ) { if(@@ left@@ >=@@ right@@ )@@ return; int@@ pindex@@ =@@ left@@ ,@@ rindex@@ =@@ right@@ ; work@@ [0]=@@ work@@ [@@ left@@ ]; while(@@ pindex@@ <@@ rindex@@ ) { while((@@ pindex@@ <@@ rindex@@ )&&(@@ work@@ [@@ rindex@@ ].@@ sum@@ >=@@ work@@ [0].@@ sum@@ )) rindex@@ --; if(@@ pindex@@ <@@ rindex@@ ){@@ work@@ [@@ pindex@@ ]=@@ work@@ [@@ rindex@@ ];@@ pindex@@ ++;} while((@@ pindex@@ <@@ rindex@@ )&&(@@ work@@ [@@ pindex@@ ].@@ sum<@@ work@@ [0].@@ sum@@ )) pindex@@ ++; if(@@ pindex@@ <@@ rindex@@ ){@@ work@@ [@@ rindex@@ ]=@@ work@@ [@@ pindex@@ ];@@ rindex@@ --@@ ;} } work@@ [@@ pindex@@ ]=@@ work@@ [0]; qsort(@@ left@@ ,@@ pindex@@ -1); qsort(@@ pindex@@ +1,@@ right@@ ); } intmain() { intn,i; cin>>n; for(i=1;i<=n;i++) { cin>>@@ work@@ [i].@@ num@@ >>@@ work@@ [i].@@ chinese@@ >>@@ work@@ [i].@@ math; work@@ [i].@@ sum=@@ work@@ [i].@@ chinese+@@ work@@ [i].@@ math; } qsort(@@ 1,@@ n); for(i=0;i<=@@ 2@@ ;i++) cout<<@@ work@@ [n@@ -i@@ ].num@@ <<""<<@@ work@@ [n@@ -i@@ ].@@ sum@@ <<endl; return0; }  
c -1
h -1
0

intmain() { intn,@@ b,@@ s[@@ 1000],@@ a; scanf("%d%d",&n,&@@ b); for(inti=0;i<n;i++){ scanf("%d",&s[i]); } for(intk=0;k<@@ n;k++){ for(inti=1;i<@@ n-@@ k;i++){ a=@@ s[k]@@ +@@ s@@ [k@@ +i@@ ]; if(a==@@ b){ printf("yes"); return0; } } } printf("no"); return0; }  
c -1
h -1
intmain() { inta,@@ m,@@ d,@@ i,@@ b[@@ 13]={0,31,@@ 28,31,30,31,30,31,31,30,31,30,31@@ },@@ c[@@ 13]={0,31,@@ 29@@ ,31,30,31,30,31,31,30,31,30,31@@ },@@ s=0; cin>>a>>@@ m>>d; if(a%@@ 4!=0@@ ||(@@ a%@@ 100==0&&@@ a%@@ 400!=0)) for(i=1;i<m;i++) s+=@@ b[i]; else for(i=1;i<m;i++) s+=@@ c[i]; cout<<s@@ +d; return0; }  
c -1
h -1
0

intmain() { charstr@@ [@@ 270@@ ],@@ subs@@ [@@ 70@@ ],@@ rep@@ [@@ 70@@ ],@@ *p; cin>>@@ str@@ >>@@ subs@@ >>@@ rep@@ ; p=strstr(@@ str,@@ subs@@ ); if(p@@ !=NULL) for(inti@@ =0;@@ rep@@ [i]!='\0';i++) *p@@ ++@@ =@@ rep@@ [i]; cout<<str@@ <<endl; return0; }  
c -1
h -1
voidmain() { intn,@@ p,@@ a=0,@@ b,@@ m=0,@@ flag=0,@@ i; scanf("%d",&n); for(i=1;i<=@@ n*@@ n;i++) { scanf("%d",&@@ p); if(p@@ ==0) { if(m==0) { flag=1; a++; m++; } else { if(flag==1) { m++; a++; } else { m++; } } } else { if(flag==1) flag=0; } } b=@@ m@@ /2@@ -@@ a;@@ a=@@ a@@ -2@@ ; printf("%d",@@ a*@@ b); }  
c -1
h -1
0

intmain(){ charstr@@ [257],@@ sub@@ [257],@@ rep@@ [257]; inti,@@ r1@@ ,@@ r2@@ ,@@ r3@@ ,j,@@ q,@@ h@@ =0,@@ result=0; scanf("%s",@@ str); scanf("%s",@@ sub); scanf("%s",@@ rep); r1@@ =strlen(@@ str); r2@@ =strlen(@@ sub); r3@@ =strlen(@@ rep); for(i=0;i<@@ r1@@ ;i++){ if(str[i]==@@ sub@@ [0]){ for(j=0;j<@@ r2@@ ;j++){ if(str@@ [i+j]!=@@ sub@@ [j]) break; } if(j==@@ r2@@ ){ result=1; for(q@@ =i;@@ q@@ <@@ i+@@ r3@@ ;q@@ ++){ str@@ [q@@ +@@ r3@@ ]=@@ str@@ [q@@ +@@ r2@@ ]; str@@ [q@@ ]=@@ rep@@ [h@@ ]; h@@ ++; } printf("%s",str); break; } } } if(result@@ ==0) printf("%s",str); return0; }  
c -1
h -1
intmain() {@@ intyear,month,day,@@ i,@@ sum=0; int@@ DaysOfMonth@@ [2][@@ 13]={0,31,@@ 28@@ ,31,30,31,30,31@@ ,31,30,31,30@@ ,31,@@ 0@@ ,31,@@ 29,31,30,31,30,31,31,30,31,30,31}; int@@ flag; cin>>year>>@@ month>>@@ day; if(year%@@ 4!=0@@ ||(@@ year%@@ 4==0&&@@ year%@@ 100==0&&@@ year%@@ 400!=0)) flag=0; else@@ flag=1; if(month==1) cout<<@@ day@@ <<endl; else { for(i=1;i<month;i++) { sum+=@@ DaysOfMonth@@ [@@ flag@@ ]@@ [i]; } sum+=@@ day; cout<<sum<<endl; } return0; }  
c -1
h -1
0

struct@@ Book { intid; charauthor[26]; int@@ flag; }@@ book[1000]; intmain() { intn,i,j,@@ l,@@ max,@@ maxnum@@ ; intnum=0; inta[@@ 26]={0}; scanf("%d",&n); for(i=0;i<n;i++) { scanf("%d%s",&book[i].@@ id,@@ book[i].author); l=strlen(@@ book[i].author); for(j=0;j<l;j++) a[@@ book[i].author@@ [j]@@ -65]++; } max=0; maxnum@@ =0; for(i=0;i<26;i++) { if(a[i]>max) { max=a[i]; maxnum@@ =i; } } printf("%c\n",@@ maxnum@@ +65); for(i=0;i<n;i++) { book[i].@@ flag=0; l=strlen(@@ book[i].author); for(j=0;j<l;j++) if(book[i].author@@ [j]==@@ maxnum@@ +65) { num++; book[i].@@ flag=1; break; } } printf("%d\n",num); for(i=0;i<n;i++) if(book[i].@@ flag@@ ==1) printf("%d\n",book[i].@@ id); return0; }  
c -1
h -1
intmain() { inta[16],@@ sign@@ =1,@@ i,j,k,@@ num; for(;;) { num=0; for(i=0;@@ ;) { scanf("%d",&a[i]); sign@@ =@@ a[i]; if(@@ sign@@ ==0||@@ sign@@ ==-1)break; else@@ i++; } if(@@ sign@@ ==-1)break; else { for(j=0;j<i;j++) { for(k=j+1;k<@@ i;k++) { if(a[k@@ ]==2*@@ a[j]||a[j]==2*@@ a[k]@@ )@@ num++; } } printf("%d\n",num); } } return0; }  
c -1
h -1
0

intmain() { int@@ brea@@ (inta,int@@ min); inti,n,@@ a; scanf("%d",&n); for(i=1;i<=n;i++) { scanf("%d",&a); printf("%d\n",@@ brea@@ (a,@@ 2)); } } int@@ brea@@ (inta,int@@ min) { int@@ result=1; inti; if(a<@@ min) return(0); elseif(a@@ ==@@ min) return(1); else { for(i=min@@ ;i<@@ a;i++) { if(a%i==0) { result=result+@@ brea@@ (a/i,i); } } return(@@ result); } }  
c -1
h -1
intn; inta[@@ 20000@@ ]={0},b[@@ 20000@@ ]={0}; intmain() { inti,j,@@ k=0,@@ g@@ =0,@@ kk@@ =0; cin>>n; for(i=0;i<n@@ ;++i) { cin>>a[i]; } for(i=0;i<n@@ ;++i) { for(j=i+1;j<@@ n;++@@ j) { if(a[i]==a[j]) { a[j]@@ =-1; } } } for(i=0;i<n@@ ;++i) { if(a[i]@@ >=0) { b[k@@ ]=a[i]; ++@@ k; } } for(i=0;i<@@ k@@ -1;@@ ++@@ i) { cout<<b[i]<<""; } cout<<@@ b[k@@ -1]@@ <<endl; return0; }  
c -1
h -1
0

voidmain() { structbook { int@@ bianhao@@ ; char@@ zuozhe@@ [100]; }a[@@ 1000]; inti,j,n,@@ l,@@ max; intb[@@ 26]={0}; scanf("%d",&n); for(i=0;i<n;i++) scanf("%d%s",&@@ a[i].@@ bianhao@@ ,@@ a[i].@@ zuozhe@@ ); for(i=0;i<n;i++) for(j=0;@@ a[i].@@ zuozhe@@ [j]!='\0';j++) b[@@ a[i].@@ zuozhe@@ [j]@@ -65]++; max=@@ b[0]; l=0; for(i=1;i<=@@ 25;i++) { if(b[i]>max) { max=b[i]; l@@ =i; } } printf("%c\n",@@ l@@ +65); printf("%d\n",max); for(i=0;i<n;i++) for(j=0;@@ a[i].@@ zuozhe@@ [j]!='\0';j++) if(a[i].@@ zuozhe@@ [j]==@@ (@@ l@@ +65@@ )) { printf("%d\n",@@ a[i].@@ bianhao@@ ); break; } }  
c -1
h -1
intmain() { inti,j,@@ t=0,@@ k,@@ m; inta[100][100]; for(j=0;j<@@ 100@@ ;j++) { scanf("%d",&@@ a[t@@ ][j]); if(a[@@ t@@ ][j]@@ ==0){@@ t=t@@ +1;} if(a[@@ t@@ ]@@ [j]==@@ -1@@ ){@@ break;} } for(k=0;k<@@ t@@ ;k++) { m=0; for(i=0;i<100;i++) { for(j=0;j<@@ 100@@ ;j++) { if(a[k]@@ [i]==@@ 2*@@ a[k]@@ [j]&&@@ a[k]@@ [i]!=0) m++; } } printf("%d\n",m); } return0; }  
c -1
h -1
0

voidorder@@ (inta[],intn) { inti,j,temp; for(i=0;i<n-1;i++) { for(j=n-1;j>i;j--) { if(a[j]@@ <a@@ [j-1]) { temp=@@ a@@ [j-1]; a@@ [j-1]=@@ a[j]; a[j]=@@ temp; } } } for(i=0;i<n-1;i++) printf("%d",a[i]); printf("%d",a[i]); } voidmain() { intm,n,@@ i; inta[@@ 50@@ ],b[@@ 50]; scanf("%d%d",&m,&n); for(i=0;i<m;i++) scanf("%d",&a[i]); for(i=0;i<n;i++) scanf("%d",&b[i]); order@@ (a,m); printf(""); order@@ (b,n); printf("\n"); }  
c -1
h -1
voidmain() { structstudent { intnum; intsum; }stu[@@ 100000],@@ temp; int@@ total@@ ,i,j,@@ chin@@ ,@@ math; scanf("%d",&@@ total); for(i=0;i<@@ total@@ ;i++) { scanf("%d%d%d",&stu[i].@@ num,&@@ chin@@ ,&@@ math); stu[i].sum=@@ chin@@ +@@ math; } for(i=2@@ ;i<@@ 5;i++) { for(j=@@ total@@ -i@@ ;j>=0;j--) { if(stu[j].@@ sum<@@ stu[j+1].@@ sum) { temp=@@ stu@@ [j]; stu@@ [j]=@@ stu@@ [j+1]; stu@@ [j+1]=temp; } } } for(i=0;i<3;i++) printf("%d%d\n",stu[i].@@ num,@@ stu[i].@@ sum); }  
c -1
h -1
0

voidmain() { intm,n,@@ i@@ ;@@ int@@ t@@ [50@@ ]={0},@@ y[@@ 50@@ ]={0}; void@@ str@@ (int@@ t@@ [],int@@ m); scanf("%d%d",&m,&n); for(i=0;i<m;i++) scanf("%d",&@@ t@@ [i]); for(i=0;i<n;i++) scanf("%d",&@@ y@@ [i]); str@@ (@@ t,@@ m@@ );@@ str@@ (@@ y,@@ n); for(i=0;i<m;i++) printf("%d",@@ t@@ [i]); for(i=0;i<n-1;i++) printf("%d",y@@ [i]); printf("%d\n",@@ y[@@ n-1]); } void@@ str@@ (int@@ t@@ [],int@@ m) { inti,j; intc; for(i=0;i<m-1;i++) for(j=i+1;j<=@@ m-1;j++) { if(t@@ [i]>@@ t@@ [j]) { c=@@ t@@ [i]@@ ;t@@ [i]=@@ t@@ [j]@@ ;t@@ [j]=@@ c; } } }  
c -1
h -1
intmain(){ intm,n; inti,j,k; int@@ r; int@@ ni@@ ,@@ nj@@ ,@@ nk@@ ,@@ nm@@ ,@@ nn@@ ; nk@@ =0;@@ r=0; scanf("%d",&n); for(i=1;i<=@@ n*@@ n;i++){ scanf("%d",&@@ ni@@ ); if(@@ ni@@ ==0){ nk@@ +=1; } if(@@ ni@@ ==@@ 255@@ &&@@ nk@@ !=0&&@@ r@@ ==0){ r=@@ nk@@ ; } } r@@ =(@@ nk@@ -2*@@ r@@ )@@ /2@@ *(@@ r@@ -2); printf("%d",@@ r); return0; }  
c -1
h -1
0

int@@ g@@ (int@@ y) { inti; for(i=0;;i++) { if(i@@ *@@ i@@ >@@ y) break; } return@@ i@@ -1; } intf@@ (intx,int@@ b) { int@@ p,@@ a[100],@@ t=0,@@ k=0; p=@@ g@@ (@@ x); if(x==@@ 2) return0; else { for(inti=@@ b@@ ;i<=@@ p@@ ;i++) { if(x%i==0) { a[t@@ ]=i; t++; } } if(t==0) return0; else for(inti=0;i<@@ t;i++) k=k@@ +@@ f(@@ x/@@ a[i],@@ a[i])@@ +1; return@@ k; } } intmain() { intn,@@ a; cin>>n; for(inti=0;i<n;i++) { cin>>a; cout<<@@ f(a,@@ 2)@@ +1<<endl; } return0; }  
c -1
h -1
intmain() { inta[16],@@ num,@@ i=1@@ ,j@@ =0,@@ k=0,@@ l=0; while(cin>>@@ a[0]) { num=0; if(a[0]==-1) break; for(i=1;i<=@@ 15;i++) { cin>>a[i]; if(a[i]==0) break; } for(j=0;j<=@@ 15@@ ;j++) for(k=0;k<=@@ 15@@ ;k++) if((a[j]@@ !=0)&&(@@ a[k]@@ !=0)&&(@@ a[j]==2*@@ a[k]@@ )) num++; for(l=0;l@@ <=@@ 15@@ ;l++) a[l@@ ]=0; cout<<num<<endl; } return0; }  
c -1
h -1
0

structbook { intnum; charwriter@@ [100]; }; voidmain() { intn,i,j,a[@@ 26],@@ c[100],@@ k,@@ t,@@ d@@ [100],@@ s; structbook@@ bo@@ [100]; for(i=0;i<26;i++) a[i]=0; scanf("%d",&n); for(i=0;i<n;i++) { scanf("%d",&@@ bo@@ [i].num); scanf("%s",@@ bo[i].@@ writer); } for(i=0;i<n;i++) { c[i]@@ =strlen(@@ bo[i].@@ writer); for(j=0;j<@@ c[i]@@ ;j++) { k=@@ bo[i].@@ writer@@ [j]@@ -'A'; a[k@@ ]++; } } t=@@ a[0]; j=0; for(i=1;i<26;i++) { if(a[i]>@@ t) { j=i; t=a[i]; } } s@@ =j; printf("%c\n",@@ 'A'+@@ j); printf("%d\n",t); for(i=0;i<n;i++) { d@@ [i]=0; for(j=0;j<@@ c[i]@@ ;j++) { if(@@ bo[i].@@ writer@@ [j]==@@ (@@ 'A'+@@ s@@ )) d@@ [i]=1; } if(d@@ [i]@@ ==1) printf("%d\n",@@ bo@@ [i].num); } }  
c -1
h -1
intmain() { intk,@@ n,m,@@ i@@ ,*p; scanf("%d",&k); for(i=0;i<k;i++) { scanf("%d%d",&m,&n); intj,@@ sum=0; p=@@ (int*)malloc(sizeof(int)@@ *@@ m@@ *n); for(j=0;j<m@@ *@@ n;j++) { scanf("%d",p@@ +j); if(j@@ <n@@ ||(@@ j@@ <@@ n*@@ m@@ &&j@@ >=@@ (m@@ -1)*@@ n)@@ ||j@@ %n@@ ==0@@ ||(@@ j@@ +1)@@ %n@@ ==0) sum+=@@ *(p@@ +j); } printf("%d\n",sum); } }  
c -1
h -1
0

void@@ px@@ (inta[],intn) { inti,j,@@ x; for(i=0;i<n-1;i++) for(j=i+1;j<n;j++) { if(a[i]>a[j]) { x=@@ a[i];a[i]=@@ a[j];a[j]=@@ x; } } } void@@ hb@@ (inta[],int@@ m,@@ intb[@@ ],int@@ n) { intc[@@ 1000]; inti,j,k; for(i=0;i<=@@ m-1;i++) c[i]=a[i]; for(j=@@ m@@ ;j<=@@ m+@@ n-1;j++) c[j]=@@ b@@ [j@@ -@@ m]; for(k=0;k<@@ m+@@ n-1;k++) printf("%d",c@@ [k]); printf("%d",c[@@ m+@@ n-1]); } main() { intm,n,@@ i,j; scanf("%d%d",&m,&n); inta[1000]; for(i=0;i<=@@ m-1;i++) scanf("%d",&a[i]); intb[@@ 1000]; for(j=0;j<=n-1;j++) scanf("%d",&@@ b[j]); px@@ (a,@@ m@@ );@@ px@@ (b,n); hb@@ (a,@@ m,@@ b,@@ n); return0; }  
c -1
h -1
static@@ intdays@@ [13]={0,31,28,31,30,31,30,31,31,30,31,30,31}; static@@ int@@ isleapyear@@ (intyear@@ ) { return(@@ year%4==0&&year%100!=0@@ )||@@ year%@@ 400==0@@ ; } intmain(){ intyear,month,day; scanf("%d%d%d",&@@ year,@@ &@@ month,@@ &@@ day); intn=0; inti; for(i=1;i<month;i++) { n+=@@ days@@ [i]; } n+=@@ day; if(month@@ >2@@ &&@@ isleapyear@@ (year@@ )) n++; printf("%d",n); }  
c -1
h -1
0

intmain() { introw,col; scanf("%d%d",&row,&col); inti,j; intsz[@@ 101][101]; for(i=0;i<row;i++){ for(j=0;j<col;j++){ scanf("%d",&sz[i][j]); } } if(row@@ >@@ col@@ ){ intx; for(j=0;j<col;j++){ for(x=0;x@@ <=j@@ ;x@@ ++){ printf("%d\n",@@ sz[@@ x@@ ]@@ [j@@ -x@@ ]); } } inty; for(i=1;i<=@@ row@@ -col@@ ;i++){ for(y=0;y@@ <col@@ ;y@@ ++){ printf("%d\n",sz@@ [i+@@ y@@ ][col@@ -@@ y@@ -1]); } } int@@ w; for(i=@@ row@@ -col@@ +1;i<@@ row;i++){ for(@@ w@@ =0;@@ w@@ <col@@ -1;@@ w@@ ++){ printf("%d\n",sz@@ [i+@@ w@@ ][col@@ -@@ w@@ -1]); if(i@@ +@@ w@@ ==@@ row@@ -1){ break; } } } }else{ int@@ z; for(j=0;j<row@@ ;j++){ for(z@@ =0;z@@ <=j@@ ;@@ z@@ ++){ printf("%d\n",@@ sz[@@ z@@ ]@@ [j@@ -@@ z@@ ]); } } intn; for(j=@@ row@@ ;j<@@ col@@ ;j++){ for(n=0;n@@ <row@@ ;n++){ printf("%d\n",@@ sz[@@ n@@ ]@@ [j@@ -n@@ ]); } } intm; for(i=1;i<@@ row;i++){ for(m=0;m@@ <row@@ -1@@ ;m++){ printf("%d\n",sz@@ [i@@ +m@@ ][col@@ -@@ m-1@@ ]); if(i@@ +m@@ ==@@ row@@ -1){ break; } } } } return0; }  
c -1
h -1
main() { inta[100@@ ][@@ 16]; int@@ z@@ [100]={0}; inti,j,@@ s,@@ m=0; for(i=0;;i++) { for(j=0;;j++) { scanf("%d",&a[i][j]); if(a[i][j]==0) break; if(a[i][j]==@@ -1) goto@@ loop@@ ; } } loop@@ :@@ for(i=0;a[i]@@ [0]@@ !=@@ -1;i++) { for(j=0;@@ a[i][j]@@ !=0;j++) { for(@@ s=0;@@ a[i][@@ s@@ ]@@ !=0@@ ;s++) if(a[i][j]==@@ 2*@@ a[i][@@ s@@ ]) z@@ [i]++; } printf("%d\n",@@ z@@ [i]); } }  
c -1
h -1
0

structbook { intnum; char@@ edt@@ [27]; }; struct@@ total { charname@@ ; int@@ amount@@ ; }; intmain() { intm,@@ i,j,k; structbook@@ bk@@ [1000]; struct@@ total@@ to@@ [27]; scanf("%d",&m); for(i=0;i<m;i++) scanf("%d%s",&@@ bk[i].@@ num,@@ bk[i].@@ edt@@ ); for(i=0;i<26;i++) { to@@ [i].name@@ ='A'+i; to@@ [i].@@ amount@@ =0; } for(i=0;i<m;i++) { for(j=0;j<strlen(@@ bk[i].@@ edt@@ );j++) { for(k=0;k<26;k++) { if(@@ bk[i].@@ edt@@ [j]==@@ to@@ [k].@@ name@@ ) to@@ [k].@@ amount@@ ++; } } } for(i=k@@ =0;i<@@ 26;i++) { if(@@ to@@ [i].@@ amount@@ >@@ to@@ [k].@@ amount@@ ) k=i; } printf("%c\n%d\n",@@ to@@ [k].@@ name,@@ to@@ [k].@@ amount@@ ); for(i=0;i<m;i++) { for(j=0;j<strlen(@@ bk[i].@@ edt@@ );j++) if(@@ bk[i].@@ edt@@ [j]==@@ to@@ [k].@@ name@@ ) printf("%d\n",@@ bk[i].@@ num); } return0; }  
c -1
h -1
intmain(){ inti,@@ a=0,b=0,@@ p=0; char@@ sz[@@ 10000]; chars[@@ 10000]; doublen,@@ c; scanf("%lf%s%s",&@@ n,&@@ sz@@ ,&@@ s); for(i=0;@@ sz[i]@@ ;i++){ if(sz@@ [i]==@@ s[i]@@ ){ a@@ ++;} b++; if((@@ sz@@ [i]!='A'&&@@ sz@@ [i]!='T'&&@@ sz@@ [i]!='C'&&@@ sz@@ [i]!='G')||(@@ s@@ [i]!='A'&&@@ s@@ [i]!='T'&&@@ s@@ [i]!='C'&&@@ s@@ [i]!='G')@@ ) {@@ p@@ ++;} } c@@ =1.0*@@ a/@@ b; if(p@@ !=0){ printf("error"); } if(p@@ ==0&&@@ c@@ >n){ printf("yes"); } if(p@@ ==0&&@@ c@@ <=@@ n){ printf("no"); } return0; }  
c -1
h -1
0

intmain(intargc,char*argv[]) {@@ inta,b,c; intt=0; int@@ aa@@ [@@ 12]={31,@@ 0@@ ,31,30,31,30,31,31,30,31,30,31}; scanf("%d%d%d",&a,&b,&c); for(inti=0;i<@@ b@@ -1;i++){ t=t+@@ aa@@ [i]; } if(b@@ >2@@ ){ if((@@ a%@@ 4==0)&&(@@ (@@ a%@@ 100@@ )@@ !=0@@ )||(@@ a%400==0)) { t=t+@@ 29; }else{ t=t+@@ 28; } } t=t@@ +c; printf("%d",t); return0; }  
c -1
h -1
intsz[@@ 1000][1000]; intmain() { intn,i,j,@@ a,b,c,d,@@ e=0,@@ h=0; scanf("%d",&n); for(i=0;i<n;i++){ for(j=0;j<n;j++){ scanf("%d",&(@@ sz@@ [i][j]@@ )); } } for(i=0;i<n;i++){ for(j=0;j<n;j++){ if(sz@@ [i][j]==0){ a=i; b=j; h@@ =1; } if(h@@ ==1) break; } if(h@@ ==1) break; } for(i=0;i<n;i++){ for(j=0;j<n;j++){ if(sz@@ [i][j]==0){ c=i; d=j; } } } e@@ =(@@ c-a-1)*(d-b-1); printf("%d",@@ e); return0; }  
c -1
h -1
0

intf@@ (intn) { intsum; switch(@@ n) {@@ case1:@@ sum=0;@@ break; case2:@@ sum=@@ 31;break; case3:@@ sum=(@@ 31+28@@ );break; case4:@@ sum=(@@ 31+28@@ +31@@ );break; case5:@@ sum=(@@ 31@@ *2@@ +28@@ +30@@ );break; case6:@@ sum=(@@ 31*3@@ +28@@ +30@@ );break; case7:@@ sum=(@@ 31*3@@ +28@@ +30*2@@ );break; case8:@@ sum=(@@ 31*@@ 4@@ +28@@ +30*2@@ );break; case9:@@ sum=(@@ 31*5@@ +28@@ +30*2@@ );break; case10:@@ sum=(@@ 31*5@@ +28@@ +30@@ *3@@ );break; case11:@@ sum=(@@ 31*6@@ +28@@ +30@@ *3@@ );break; case12:@@ sum=(@@ 31*6@@ +28@@ +30@@ *@@ 4@@ ); } return(@@ sum); } intmain() { int@@ month@@ [5],@@ day@@ [5],@@ year@@ [5],@@ d[@@ 5@@ ],@@ i; for(i=0;i<=@@ 4;i++) scanf("%d%d%d",&year@@ [i],&@@ month@@ [i],&@@ day@@ [i]); for(i=0;i<=@@ 4;i++) { if((@@ year[i]@@ %4==0&&@@ year[i]@@ %100!=0@@ ||@@ year[i]@@ %@@ 400==0)@@ &&@@ month@@ [i]>@@ 2) d[i]=@@ f(@@ month@@ [i]@@ )+@@ day@@ [i]@@ +1; else d[i]=@@ f(@@ month@@ [i]@@ )+@@ day@@ [i]; printf("%d\n",@@ d[i]); } return0; }  
c -1
h -1
voidmain() { structstu {intnum; intchi; int@@ mat@@ ; }stu[100000]; intn,i,@@ max1,@@ max2@@ ,max3@@ ,@@ maxn1@@ ,@@ maxn2@@ ,@@ maxn3@@ ; int@@ sum[@@ 100000]; scanf("%d",&n); for(i=0;i<n;i++) {scanf("%d",&@@ stu[i].@@ num); scanf("%d",&@@ stu[i].@@ chi@@ ); scanf("%d",&@@ stu[i].@@ mat@@ ); sum[i]=@@ stu[i].@@ chi@@ +stu[i].@@ mat@@ ; } max1=@@ sum[@@ 0]; maxn1@@ =stu@@ [0].@@ num; for(i=1;i<n;i++) { if(sum[i]>@@ max1@@ ) { max1=@@ sum[i]; maxn1@@ =stu[i].@@ num; } } printf("%d%d\n",@@ maxn1@@ ,@@ max1@@ ); max2=@@ sum[@@ 0]; maxn2@@ =stu@@ [0].@@ num; for(i=1;i<n;i++) { if(sum[i]>@@ max2@@ &&i!=@@ maxn1@@ -1) { max2=@@ sum[i]; maxn2@@ =stu[i].@@ num; } } printf("%d%d\n",@@ maxn2@@ ,@@ max2@@ ); max3=@@ sum[@@ 0]; maxn3@@ =stu@@ [0].@@ num; for(i=1;i<n;i++) { if(sum[i]>@@ max3@@ &&i!=@@ maxn1@@ -1@@ &&i!=@@ maxn2@@ -1) { max3=@@ sum[i]; maxn3@@ =stu[i].@@ num; } } printf("%d%d\n",@@ maxn3@@ ,max3@@ ); }  
c -1
h -1
0

structbook { intid; chars[@@ L@@ ]; int@@ len; }b[@@ M@@ ]; void@@ fun@@ (int@@ count[@@ L@@ ],@@ chars[@@ L@@ ],int@@ len@@ ) { inti; for(i=0;i<len;i++) { intm; m=@@ s[i]@@ -'A'; count@@ [m@@ ]++; } } int@@ judge@@ (@@ chars[@@ L@@ ],int@@ len,@@ charname@@ ) { inti,@@ answer@@ =0; for(i=0;i<len;i++) { if(s[i]==@@ name@@ ) { answer@@ =1; break; } } return@@ answer@@ ; } intmain() { intm,@@ k,@@ count[@@ L@@ ]={0},@@ i,j,@@ max,@@ num; charname@@ ; scanf("%d",&m); for(k=0;k<@@ m;k++) { scanf("%d%s",&@@ b[k@@ ].id,@@ b[k@@ ].@@ s); b[k@@ ].@@ len=strlen(@@ b[k@@ ].@@ s); fun@@ (@@ count,@@ b[k@@ ].@@ s,@@ b[k@@ ].@@ len); } max=count@@ [0]; num=0; for(j=1;j<@@ L@@ ;j++) { if(count@@ [j]@@ >max) { max=count@@ [j]; num@@ =j; } } name@@ =@@ num@@ +65; printf("%c\n",@@ name); printf("%d\n",max); for(k=0;k<@@ m;k++) { int@@ answer@@ =0; answer@@ =@@ judge@@ (@@ b[k@@ ].@@ s,@@ b[k@@ ].@@ len,@@ name); if(@@ answer@@ ==1) printf("%d\n",@@ b[k@@ ].id); } return0; }  
c -1
h -1
int@@ runnian@@ (int@@ a) { if(a%@@ 4==0&&@@ a%@@ 400==0) return1; if(a%@@ 4==0&&@@ a%@@ 100!=0) return1; else@@ return0; } int@@ tian@@ (int@@ nian@@ ,int@@ yue@@ ,int@@ ri@@ ) { intsum=0,@@ i; int@@ run@@ [@@ 12]={31,29,31,30,31,30,31,31,30,31,30,31}; int@@ feirun@@ [12]={31,28,31,30,31,30,31,31,30,31,30,31}; if(@@ runnian@@ (@@ nian@@ )@@ ==1) { for(i=0;i<=@@ yue@@ -2;i++) sum+=@@ run@@ [i]; sum+=@@ ri@@ ; } else { for(i=0;i<=@@ yue@@ -2;i++) sum+=@@ feirun@@ [i]; sum+=@@ ri@@ ; } returnsum; } intmain() { int@@ nian@@ ,@@ yue@@ ,@@ ri@@ ; cin>>@@ nian@@ >>@@ yue@@ >>@@ ri@@ ; cout<<@@ tian@@ (@@ nian@@ ,@@ yue@@ ,@@ ri@@ )<<endl; return0; }  
c -1
h -1
0

intsum=0; intmain() { void@@ yinshu@@ (int,int); inti,n,@@ a; cin>>n; for(i=1;i<=n;i++) { sum=0; cin>>a; yinshu@@ (a,@@ 2); cout<<sum<<endl; } return0; } void@@ yinshu@@ (inta,int@@ x) { if(a@@ !=1) { for(inti=@@ x@@ ;i<=a;i++) if(a%i==0) yinshu@@ (a/i,i); } if(a==1) sum++; }  
c -1
h -1
intmain(intargc,char*argv[]) {@@ inta,b,c,@@ e,@@ i; int@@ d=0; scanf("%d%d%d",&a,&b,&c); if(a%@@ 4==0&&a%100!=0@@ ||a%@@ 400@@ ==0){@@ int@@ score@@ [@@ 12]={31,29,31,30,31,30,31,31,30,31,30,31}; for(i=0;i<b@@ -1;i++){ d=d+@@ score@@ [i]@@ ;} e=@@ d+@@ c@@ ;} else{@@ int@@ score@@ [12]={31,28,31,30,31,30,31,31,30,31,30,31}; for(i=0;i<b@@ -1;i++){ d=d+@@ score@@ [i]@@ ;} e=@@ d+@@ c@@ ;} printf("%d\n",@@ e); return0; }  
c -1
h -1
0

structbook { inta; charb[@@ 30]; structbook*next; }; voidmain() { inti,k,@@ m,@@ max=0,@@ t; char@@ j,@@ ch; structbook@@ *head,*p1,*p2; scanf("%d",&m); p1=(structbook@@ *)@@ calloc@@ (@@ 1,@@ sizeof(struct@@ book)); head=p1; for(i=0;i<m;i++) { scanf("%d%s",&@@ (@@ p1->@@ a)@@ ,@@ p1->@@ b); p2=p1; if(i==@@ m-1) p2->next=NULL; else { p1=(structbook@@ *)@@ calloc@@ (@@ 1,@@ sizeof(struct@@ book)); p2->next=p1; } } for(j@@ ='A'@@ ;j<=@@ 'Z'@@ ;j++) { t=0; p1=head; while(p1@@ ) { for(k=0;k<@@ strlen(@@ p1->@@ b)@@ ;k++) if((@@ p1->@@ b)@@ [k]==@@ j) t++; p1=p1->next; } if(t@@ >max) { max=@@ t; ch@@ =j; } } printf("%c\n",@@ ch@@ ); printf("%d\n",max); p1=head; while(p1@@ ) { for(k=0;k<@@ strlen(@@ p1->@@ b)@@ ;k++) if((@@ p1->@@ b)@@ [k]==@@ ch@@ ) printf("%d\n",@@ p1->@@ a); p1=p1->next; } }  
c -1
h -1
voidf@@ (inta[],intn) { inti,j,t; for(i=0;i<n;i++) { for(j=0;j<n@@ -i-1;j++) { if(a[j]>a[j+1]) { t=a[j]; a[j]=a[j+1]; a[j+1]=t; } } } } voidmain() { intm,n,@@ a[100],b[100],@@ i; scanf("%d%d",&m,&n); for(i=0;i<m;i++) scanf("%d",&a[i]); for(i=0;i<n;i++) scanf("%d",&b[i]); f(a,@@ m); f(@@ b,@@ n); for(i=m;i<@@ m+n;i++) a[i]=b[i-@@ m]; for(i=0;i<m+@@ n-1;i++) printf("%d",a[i]); printf("%d",a[@@ m+@@ n-1]); }  
c -1
h -1
0

intmain() { doublen,@@ c; inta,@@ i,@@ d@@ =1,@@ b=0; char@@ sz[@@ 1000@@ ]={'\0'},@@ u@@ [@@ 1000@@ ]={'\0'}; scanf("%lf",&n); scanf("\n@@ "); gets(@@ sz@@ ); gets(@@ u@@ ); a=strlen(@@ sz@@ ); for(i=0;i<a;i++){ if(sz@@ [i]!='A'&&@@ sz@@ [i]!='G'&&@@ sz@@ [i]!='T'&&@@ sz@@ [i]!='@@ C'){ printf("error"); d=0; break; } elseif(@@ u@@ [i]!='A'&&@@ u@@ [i]!='G'&&@@ u@@ [i]!='T'&&@@ u@@ [i]!='@@ C'){ printf("error"); d=0; break; } elseif(@@ sz@@ [i]==@@ u@@ [i]){ b++; } } c=@@ b@@ *1.0/@@ a; if(d@@ ==1){ if(c@@ >n){ printf("yes"); } else{ printf("no"); } } return0; }  
c -1
h -1
charstr[256],@@ sub@@ [256]; intf@@ (intx) { int@@ i=@@ x@@ ,j@@ =0; while(@@ sub@@ [j]@@ !='\0') { if(str@@ [i]!=@@ sub@@ [j]) return0; i@@ ++@@ ;j@@ ++; } return1; } intmain() { char@@ rep@@ [256]; inti=0,j=0; cin>>@@ str@@ ; cin>>@@ sub@@ ; cin>>@@ rep@@ ; while(@@ str@@ [i]@@ !='\0') { if(@@ f(@@ i@@ )) { while(@@ rep@@ [j]@@ !='\0') { str[i]=@@ rep@@ [j]; i++; j++; } break; } i++; } cout<<str@@ <<endl; return0; }  
c -1
h -1
0

intmain() { intnum,@@ i,j; char@@ a@@ ='A'; int@@ count[@@ 27@@ ]={0}; int@@ *p@@ =&@@ count@@ [1]; scanf("%d",&num); structbook { char@@ order@@ [4@@ ]; charauthor[26]; }@@ book[1000]; for(i=0;i<num;i++) { scanf("%s",@@ book[i].@@ order@@ ); scanf("%s",@@ book[i].author); } for(i=0;i<num;i++) { int@@ m=strlen(@@ book[i].author); for(j=0;j<m;j++) { if(book[i].author[j]=='@@ A')@@ count@@ [1@@ ]++; if(book[i].author[j]=='@@ B@@ ')@@ count@@ [2@@ ]++; if(book[i].author[j]=='@@ C')@@ count@@ [3@@ ]++; if(book[i].author[j]=='@@ D@@ ')count[@@ 4@@ ]++; if(book[i].author[j]=='@@ E@@ ')count[@@ 5@@ ]++; if(book[i].author[j]=='@@ F@@ ')count[@@ 6@@ ]++; if(book[i].author[j]=='@@ G')@@ count[@@ 7@@ ]++; if(book[i].author[j]=='@@ H@@ ')count[@@ 8@@ ]++; if(book[i].author[j]=='@@ I@@ ')count[@@ 9@@ ]++; if(book[i].author[j]=='@@ J@@ ')count[@@ 10@@ ]++; if(book[i].author[j]=='@@ K@@ ')@@ count@@ [11@@ ]++; if(book[i].author[j]=='@@ L@@ ')count[@@ 12@@ ]++; if(book[i].author[j]=='@@ M@@ ')count[@@ 13@@ ]++; if(book[i].author[j]=='@@ N@@ ')count[@@ 14@@ ]++; if(book[i].author[j]=='@@ O@@ ')count[@@ 15@@ ]++; if(book[i].author[j]=='@@ P@@ ')count[@@ 16@@ ]++; if(book[i].author[j]=='@@ Q@@ ')count[@@ 17@@ ]++; if(book[i].author[j]=='@@ R@@ ')count[@@ 18@@ ]++; if(book[i].author[j]=='@@ S@@ ')count[@@ 19@@ ]++; if(book[i].author[j]=='@@ T')@@ count[@@ 20@@ ]++; if(book[i].author[j]=='@@ U@@ ')count[@@ 21@@ ]++; if(book[i].author[j]=='@@ V@@ ')count[@@ 22@@ ]++; if(book[i].author[j]=='@@ W@@ ')count[@@ 23@@ ]++; if(book[i].author[j]=='@@ X@@ ')count[@@ 24@@ ]++; if(book[i].author[j]=='@@ Y@@ ')@@ count@@ [25@@ ]++; if(book[i].author[j]=='@@ Z@@ ')@@ count@@ [26@@ ]++; } } for(i=1;i<@@ 27@@ ;i++) { if(count@@ [i]@@ >*@@ p) { p@@ =&@@ count@@ [i]; a@@ =i+@@ 64@@ ; } } printf("%c\n%d\n",@@ a,*@@ p); for(i=0;i<num;i++) { for(j=0;j<strlen(@@ book[i].author@@ );j++) { if(book[i].author@@ [j]==@@ a) printf("%s\n",@@ book[i].@@ order@@ ); } } return0; }  
c -1
h -1
intmain() { inta[1000][1000]; inti,j,@@ star1@@ ,@@ star2@@ ,@@ end1@@ ,@@ end2@@ ,@@ b,@@ n; intf@@ =0; scanf("%d",&n); for(i=0;i<n;i++){ for(j=0;j<n;j++){ scanf("%d",&a[i][j]); if(a[i][j]==0&&@@ f@@ ==0){ star1@@ =i+1; star2@@ =j+1; f=1; } if(a[i][j]@@ ==0){ end1@@ =i-1; end2@@ =j@@ -1; } } } b@@ =(@@ end1@@ -@@ star1@@ +1)*(@@ end2@@ -@@ star2@@ +1); printf("%d",@@ b); return0; }  
c -1
h -1
0

voidmain() { intn,k; inta[@@ 1001]; inti,j; int@@ flag=0; scanf("%d%d",&n,&k); for(i=0;i<n;i++) scanf("%d",&a[i]); for(i=0;i<n@@ &&@@ flag@@ ==0@@ ;i++) for(j=0;j<n@@ &&@@ flag@@ ==0@@ ;j++) { if(j@@ >@@ i@@ &&@@ a[i]+@@ a[j]==@@ k) { printf("yes\n"); flag=1; } } if(flag==0) printf("no"); }  
c -1
h -1
intmain(){ intk,@@ n,@@ i,@@ b,@@ c,d; inta[@@ LEN@@ ]; c=0; scanf("%d%d",&n,&k); for(i=0;i<n;i++){ scanf("%d",&a[i]); } for(d@@ =0;d@@ <n;@@ d@@ ++){ b=@@ k-@@ a[d@@ ]; for(i=0;i<n;i++){ if((@@ b==@@ a[i]@@ )&&(i@@ !=@@ d@@ )){ c=1; break;}} ;} if(c@@ ==0){@@ printf("no");} elseif(@@ c@@ ==1){@@ printf("yes");} return0; }  
c -1
h -1
1


intmain() { intn,m,@@ i,j,k,@@ p=0; scanf("%d%d",&n,&m); intsz[@@ 1000],@@ pl@@ [1000],@@ a; for(i=0;i<n;i++) { scanf("%d",&sz[i]); pl@@ [i]=@@ sz[i]; } for(k=0;k<n;k++) { for(j=1;j<n;j++) { a=@@ pl@@ [k]@@ +sz@@ [j]; if(a!=@@ m) { p++; } } } if(p==@@ n@@ *(@@ n-1@@ )) { printf("no"); } else { printf("yes"); } return0; }  
c -1
h -1
inta[@@ 1000],b[1000],@@ n1,n2; void@@ get@@ (inta[],intb[]) { inti; cin>>@@ n1@@ >>@@ n2; for(i=0;i<n1@@ ;i++)@@ cin>>a[i]; for(i=0;i<n2@@ ;i++)@@ cin>>b[i]; } voidsort@@ (inta[],intb[]) { inti,j,temp; for(i=0;i<n1;i++) { for(j=i;j<@@ n1@@ ;j++) { if(a[i]>a[j]) { temp=a[i]; a[i]=a[j]; a[j]=@@ temp; } } } for(i=0;i<n2;i++) { for(j=i;j<@@ n2@@ ;j++) { if(b[i]>@@ b[j]) { temp=@@ b[i]; b[i]=@@ b[j]; b[j]=@@ temp; } } } } voidcombine@@ (inta[],intb[]) { inti; for(i=0;i<n2@@ ;i++)@@ a[i@@ +@@ n1@@ ]=b[i]; } voidprint@@ (inta[],intb[]) { inti; for(i=0;i<n1@@ +@@ n2@@ -1;i++)@@ cout<<a[i]<<""; cout<<a[@@ n1+n2@@ -1]; } intmain() { get@@ (a,b); sort@@ (a,b); combine@@ (a,b); print@@ (a,b); return0; }  
c -1
h -1
0

intmain() { inta[16@@ ],i,j,@@ m,n,@@ t; while(@@ a[0]@@ !=@@ -1){ t@@ =0;@@ n=0; for(i=0;@@ ;i++){ scanf("%d",&a[i]); if(a[i]<=@@ 0@@ ){ break; } else{ t++; } } if(a[0]@@ ==@@ -1){ break; } else{ for(j=0;j<@@ t@@ ;j++){ for(m=0;m<@@ t@@ ;m++){ if(a[j]==2*@@ a[m@@ ]){ n++; } } } printf("%d\n",n); } } return0; }  
c -1
h -1
intmain() { inta[@@ 20001]; intb[100@@ ]; intn,i; cin>>n; for(i=0;i<100;i++) b[i]=0; for(i=0;i<n;i++) { cin>>a[i]; b[@@ a[i]@@ ]++; if(b[@@ a[i]@@ ]@@ ==1) { if(i@@ >0) cout<<"@@ "; cout<<a[i]; } } cout<<endl; return0; }  
c -1
h -1
0

intmain() { inti,n,@@ m,@@ j; double@@ x,@@ s; chara[@@ 101@@ ],b[@@ 101]; j=0; scanf("%lf",&x); scanf("%s%s",a,b); n@@ =strlen(a); m@@ =strlen(b); s=0; for(i=0;i<n;i++) { if(a[i]!='A'&&a[i]!='T'&&a[i]!='C'&&a[i]!='@@ G') { j++; break; } } if(n@@ !=@@ m@@ ||j@@ !=0) { printf("error"); }else { for(i=0;i<n;i++) { if(b[i]==@@ a[i]) { s++; } } s=s@@ /n; if(s@@ >@@ x) { printf("yes"); }else { printf("no"); } } return0; }  
c -1
h -1
intmain() { chars@@ [100]; for(;;) { gets(s); inti,j,@@ k=0,@@ m=0,@@ x[@@ 15],@@ n=0; if(s@@ [0]==@@ '-@@ '&&@@ s[1]@@ =='@@ 1@@ ') break; else { for(i=0;;i++) { if(s@@ [i]=='@@ 0'@@ ) break; else { if(@@ '@@ 1@@ '<=@@ s[i]@@ &&@@ s[i]@@ <=@@ '@@ 9@@ ') { j=@@ s[i]@@ -'@@ 0'; k=k@@ *@@ 10@@ +j@@ ; } else { x@@ [m]=@@ k; m++; k=0; } } } } for(i=0;i<m;i++) for(j=i+1;j<@@ m;j++) { if((@@ x[i]@@ /@@ x@@ [j]==@@ 2@@ &&@@ x[i]@@ %@@ x[j]@@ ==0)||(@@ x[j]@@ /@@ x@@ [i]==@@ 2@@ &&@@ x[j]@@ %@@ x[i]@@ ==0)) {@@ n@@ ++;} } printf("%d\n",n); } return0; }  
c -1
h -1
0

intmain() { intm,@@ i,j,k,@@ q=0,@@ t=0,@@ u@@ ,@@ max; intb[@@ 26]={0}; charc[@@ ]@@ ="@@ ABCDEFGHIJKLMNOPQRSTUVWXYZ@@ "; struct@@ as@@ { int@@ sh@@ ; chara[@@ 26]; }@@ cla@@ [1000]; scanf("%d",&m); for(i=0;i<m;i++){ scanf("%d%s",&@@ cla@@ [i].@@ sh@@ ,@@ cla@@ [i].@@ a); t=@@ (int)@@ strlen(@@ cla@@ [i].@@ a); for(k=0;k<@@ t@@ ;k++){ u@@ =@@ cla@@ [i].@@ a[k]@@ -'A'; b[@@ u@@ ]++; } } max=0; for(j=0;j<@@ 25@@ ;j++) if(max<@@ b[j]@@ ){ max=@@ b[j]; q@@ =j; } printf("%c\n",@@ c[@@ q@@ ]); printf("%d\n",max); for(i=0;i<m;i++){ t=@@ (int)@@ strlen(@@ cla@@ [i].@@ a); for(k=0;k<@@ t@@ ;k++) if(@@ cla@@ [i].@@ a[k]==@@ c[@@ q@@ ]) printf("%d\n",@@ cla@@ [i].@@ sh@@ ); } return0; }  
c -1
h -1
structStudent@@ { intID; intchinese; int@@ maths; intsum; }; intmain(){ structStudent@@ stu[@@ 3@@ ],@@ t; stu[0].@@ sum=@@ stu[1].@@ sum=@@ stu[2@@ ].@@ sum=0; inti,n; cin>>n; for(i=0;i<n;i++){ cin>>@@ t@@ .@@ ID@@ >>@@ t@@ .@@ chinese@@ >>@@ t@@ .@@ maths; t@@ .@@ sum=@@ t@@ .@@ chinese+@@ t@@ .@@ maths; if(t@@ .@@ sum>@@ stu[0].@@ sum){ stu[2@@ ]=@@ stu@@ [1]; stu@@ [1]=@@ stu[@@ 0]; stu[@@ 0]=@@ t; }elseif(@@ t@@ .@@ sum>@@ stu[1].@@ sum){ stu[2@@ ]=@@ stu@@ [1]; stu@@ [1]=@@ t; }elseif(@@ t@@ .@@ sum>@@ stu[2@@ ].@@ sum){ stu[2@@ ]=t; } } for(i=0;i<@@ 3;i++){ cout<<@@ stu[i].@@ ID@@ <<""<<@@ stu[i].@@ sum@@ <<endl; } return0; }  
c -1
h -1
0

intmain(){ inta,b,@@ c=0; double@@ t,@@ k=0; chars[@@ 500@@ ]={'\0'},@@ x[@@ 500@@ ]={'\0'}; scanf("%lf%s%s",&@@ t,@@ s,@@ x); for(a@@ =0;@@ s[@@ a@@ ]!='\0'@@ ;a@@ ++){ if(s[@@ a@@ ]@@ >'@@ Z@@ '){ k=1; break; } } for(b@@ =0;@@ x[@@ b@@ ]!='\0'@@ ;@@ b++){ if(x@@ [b@@ ]@@ >'@@ Z@@ '){ k=1; break; } } if(a!=@@ b@@ ||@@ k@@ ==1){ printf("error"); } else{ for(a=0;a@@ <b@@ ;a@@ ++){ if(s[@@ a@@ ]==@@ x@@ [a@@ ]){ c++; } } k@@ =1.0*@@ c@@ /@@ b; if(k@@ >@@ t@@ ){ printf("yes"); } else{ printf("no"); } } return0; }  
c -1
h -1
intmain() { intsz[@@ 100000],@@ a[100],@@ n,@@ i,@@ d; scanf("%d",&n); for(i=0;i<100;i++) { a[i]@@ =1; } scanf("%d",&sz@@ [0]); printf("%d",@@ sz@@ [0]); a[@@ sz[0]@@ ]=0; for(i=1;i<n;i++) { scanf("%d",&sz[i]); d=@@ sz[i]; if(a[@@ d@@ ]!=0) { printf("%d",@@ sz@@ [i]); } a[d@@ ]=0; } return0; }  
c -1
h -1
0

inta[@@ 26]={0}; intb[@@ 10000]; intn,@@ m=0; int@@ p=1; void@@ dao@@ (int@@ c@@ ,int@@ k) { inti,@@ flag=0; for(i=k@@ +1@@ ;i<n;i++) { if(a[i]<=@@ c) { flag=1; p=p@@ +1; dao@@ (a[i],@@ i); p=p@@ -1; } } if(flag==0) { b[m@@ ]=@@ p; m=m+1; } } intmain() { inti,@@ q; scanf("%d",&n); for(i=0;i<n;i++) { scanf("%d",&a[i]); } for(i=0;i<n;i++) { dao@@ (a[i],@@ i); } for(i=0;i<m-1;i++) { if(b[i]>b[i+1]) { q=@@ b[i]; b[i]=b[i+1]; b[i+1]=@@ q; } } printf("%d",b[@@ m-1@@ ]); return0; }  
c -1
h -1
structstudent { intnum; int@@ yw@@ ; int@@ sx; }; intmain() { intn,i,@@ x=0,@@ y=0,@@ z=0; scanf("%d",&n); structstudent@@ a[@@ n]; intb[@@ n]; for(i=0;i<n;i++) { scanf("%d%d%d",&a[i].@@ num,&@@ a[i].@@ yw@@ ,&a[i].@@ sx@@ ); b[i]=@@ a[i].@@ yw@@ +a[i].@@ sx; } for(i=1;i<n;i++) { if(b[@@ x@@ ]<@@ b[i]) x@@ =i; } printf("%d%d\n",@@ a[x@@ ].num,@@ b[@@ x@@ ]); for(i=1;i<n;i++) { if(i==@@ x)@@ continue; if(b[@@ y@@ ]<@@ b[i]) y@@ =i; } printf("%d%d\n",@@ a[@@ y@@ ].num,@@ b[@@ y@@ ]); for(i=1;i<n;i++) { if(i==@@ x)@@ continue; if(i==@@ y)@@ continue; if(b[@@ z@@ ]<@@ b[i]) z@@ =i; } printf("%d%d\n",@@ a[@@ z@@ ].num,@@ b[@@ z@@ ]); getchar(); getchar(); }  
c -1
h -1
0

intmain() { chars[256],@@ sub[256],@@ re@@ [256]; gets(s); gets(sub); gets(@@ re); inti,@@ length@@ ,@@ lensub@@ ,j,@@ k,@@ ans=0; length@@ =strlen(s); lensub@@ =strlen(@@ sub); for(i=0;i<@@ length@@ ;i++) if(s[i]==@@ sub@@ [0]) { for(j=0;j<@@ lensub@@ ;j++) if(s@@ [i+j]!=@@ sub@@ [j]@@ )break; if(j==@@ lensub@@ ) { ans@@ =1; for(k=0;k<i;k++) printf("%c",s@@ [k]); printf("%s",@@ re); for(k=i+@@ lensub@@ ;k<@@ length@@ ;k++) printf("%c",s@@ [k]); break; } } if(@@ ans@@ !=1@@ )@@ printf("%s",s); return0; }  
c -1
h -1
voidmain() { intm@@ [2@@ ],@@ i,j,k,@@ a[2@@ ][100],@@ p; scanf("%d%d",&@@ m@@ [0]@@ ,&@@ m@@ [1]); for(k=0;k<@@ 2@@ ;k++) { for(i=0;i<m@@ [k]@@ ;i++) { scanf("%d",&@@ a[k]@@ [i]); } } for(k=0;k<@@ 2@@ ;k++) { for(i=0;i<m@@ [k]@@ ;i++) { for(j=0;j<m@@ [k]@@ -i-1;j++) { if(a[k]@@ [j]>@@ a[k]@@ [j+1]) { p=@@ a[k]@@ [j]; a[k]@@ [j]=@@ a[k]@@ [j+1]; a[k]@@ [j+1]=@@ p; } } } } for(k=0;k<@@ 2@@ ;k++) { for(i=0;i<m@@ [k]@@ ;i++) { if(!@@ (k@@ ==0&&@@ i@@ ==0)) { printf(""); } printf("%d",@@ a[k]@@ [i]); } } }  
c -1
h -1
0

voidmain() { intk; scanf("%d",&k); if(k==1) printf("@@ 1@@ \n"); elseif(@@ k@@ >=@@ 2) { inta[@@ 25],@@ i,@@ b[@@ 25@@ ],c[@@ 25],@@ j,@@ p=0,@@ m,n,@@ t=0; scanf("%d",&a[0]); for(i=1;i<k;i++) scanf("%d",&a[i]); b[0]@@ =1; for(i=k-2;i>=0;i--) { for(j=i+1;j<=@@ k@@ -1;j++) { if(a[i]>=a[j]) {@@ c[@@ p@@ ]=@@ b[k@@ -1-j@@ ]; p@@ ++;} for(m=0;m<@@ p@@ ;m++) {if(@@ c[m@@ ]>@@ t) t=@@ c[@@ m]; } } b[k@@ -1@@ -i@@ ]=@@ t@@ +1; p=0; t=0; for(m=0;m<@@ p@@ ;m++) c[m@@ ]=0; } for(n=0;n@@ <k;@@ n++) {if(@@ b[@@ n@@ ]>@@ t) t=@@ b[@@ n@@ ];} printf("%d\n",t); } }  
c -1
h -1
intmain(){ inty,m,d,@@ d1@@ =0,@@ d2@@ ,i; int@@ md@@ [11@@ ]={31,@@ 28@@ ,31,30,31,30,31@@ ,31,30,31,30@@ }; scanf("%d%d@@ %d@@ "@@ ,&@@ y,&@@ m,&d); if(m@@ ==1)@@ d2@@ =@@ d; else{ for(i=0;i<m-1;i++) d1@@ =@@ d1@@ +@@ md@@ [i]; d2@@ =@@ d+@@ d1@@ ; } printf("%d",@@ d2@@ ); return0; }  
c -1
h -1
0

intmain(intargc,char*argv[]) { inta,b,c; scanf("%d%d%d",&a,&b,&c); if((@@ a%4==0&&a%100!=0@@ )||@@ a%@@ 400@@ ==0){ if(b==1) printf("%d",@@ c); elseif(b==@@ 2) printf("%d",@@ 31+@@ c); elseif(b==@@ 3) printf("%d",@@ 60@@ +c); elseif(b==@@ 4) printf("%d",@@ 91@@ +c); elseif(b==@@ 5) printf("%d",@@ 121@@ +c); elseif(b==@@ 6) printf("%d",@@ 152@@ +c); elseif(b==@@ 7) printf("%d",@@ 182@@ +c); elseif(b==@@ 8) printf("%d",@@ 213@@ +c); elseif(b==@@ 9) printf("%d",@@ 244@@ +c); elseif(b==@@ 10) printf("%d",@@ 274@@ +c); elseif(b==@@ 11) printf("%d",@@ 305@@ +c); elseif(b==@@ 12) printf("%d",@@ 336@@ +c@@ );} else{ if(b==1) printf("%d",@@ c); elseif(b==@@ 2) printf("%d",@@ 31+@@ c); elseif(b==@@ 3) printf("%d",@@ 59@@ +c); elseif(b==@@ 4) printf("%d",@@ 90@@ +c); elseif(b==@@ 5) printf("%d",@@ 120@@ +c); elseif(b==@@ 6) printf("%d",@@ 151@@ +c); elseif(b==@@ 7) printf("%d",@@ 181@@ +c); elseif(b==@@ 8) printf("%d",@@ 212@@ +c); elseif(b==@@ 9) printf("%d",@@ 243@@ +c); elseif(b==@@ 10) printf("%d",@@ 273@@ +c); elseif(b==@@ 11) printf("%d",@@ 304@@ +c); elseif(b==@@ 12) printf("%d",@@ 335@@ +c@@ );} return0; }  
c -1
h -1
intmain() { intN@@ ,@@ c,@@ b=1; cin>>@@ N; inta[@@ 20001]; for(inti=1;i<=@@ N;i++) cin>>a[i]; for(int@@ m=@@ 2@@ ;m@@ <=@@ N@@ ;m++) { for(c@@ =1;@@ c@@ <=@@ b@@ ;c@@ ++) { if(a[m@@ ]==@@ a[c@@ ]@@ )break; } if(c==@@ b@@ +1) { b++; a[@@ b@@ ]=@@ a[m@@ ]; } } cout<<@@ a[1]; for(int@@ d=@@ 2;@@ d@@ <=@@ b@@ ;@@ d++) cout<<""<<@@ a[d@@ ]; return0; }  
c -1
h -1
0

intmain() { intn,k,@@ a[1000],@@ i,@@ m,@@ s; scanf("%d%d",&n,&k); for(i=0;i<n;i++) { scanf("%d",&a[i]); } for(i=0;i<n;i++) { for(m=0;m@@ <n;m++) { if((@@ a[i]+@@ a[m@@ ])@@ ==@@ k@@ &&a[i]@@ !=@@ a[m@@ ]) { s=1; } } } if(s@@ ==1) { printf("yes"); } else { printf("no"); } return0;}  
c -1
h -1
intmain() { inti,n,@@ t,@@ p; inta[20000]; scanf("%d",&n); for(i=0;i<n;i++) scanf("%d",&a[i]); printf("%d",a[0]); for(i=1;i<n;i++){ p=0; t=0; do{ if(a[i]==@@ a[p@@ ]) t=1; p@@ +=1; } while(t@@ ==0&&@@ p@@ <@@ i); if(t==0) printf("%d",a[i]); } return0; }  
c -1
h -1
0

voidmain(){ intk,m,n,@@ p; int@@ matrix@@ (intm,int@@ n); scanf("%d",&@@ p); for(k=0;k<@@ p@@ ;k++){ scanf("%d%d",&m,&n); printf("%d\n",@@ matrix@@ (m,@@ n@@ )); } } int@@ matrix@@ (intm,int@@ n){ inti,j,@@ a,@@ sum=0; for(i=0;i<m;i++)@@ for(j=0;j<n;j++){ scanf("%d",&a); if(i==0||i==@@ m-1@@ ||j@@ ==0||j==@@ n-1)@@ sum+=@@ a; } returnsum; }  
c -1
h -1
main() { intb,@@ c,@@ e,f,@@ g; scanf("%d",&b); inta[@@ b@@ ],@@ d[@@ b@@ ]; for(c=0;c@@ <b@@ ;c@@ ++) scanf("%d",&@@ a[c@@ ]); d[@@ b@@ -1]@@ =1; for(@@ c=@@ b@@ -2@@ ;c@@ >=0@@ ;c@@ --) { d[@@ c@@ ]@@ =1;@@ f=0; for(@@ e=@@ b@@ -1;@@ e@@ >@@ c;@@ e@@ --) { if(a[@@ c@@ ]>=@@ a[@@ e@@ ]) { if(@@ d[@@ e@@ ]>@@ f@@ ) f=@@ d[@@ e@@ ]; } } d[@@ c@@ ]+=@@ f; } g=@@ d@@ [0]; for(c=0;c@@ <b@@ ;c@@ ++) { if(@@ d[@@ c@@ ]>@@ g@@ ) g=@@ d[@@ c@@ ]; } printf("%d",@@ g@@ ); }  
c -1
h -1
0

voidmain() { intn,k; inta[@@ 1001]; inti,j; int@@ flag=0; scanf("%d%d",&n,&k); for(i=0;i<n;i++) scanf("%d",&a[i]); for(i=0;i<n@@ &&@@ flag@@ ==0@@ ;i++) for(j=0;j<n@@ &&@@ flag@@ ==0@@ ;j++) { if(j@@ >@@ i@@ &&@@ a[i]+@@ a[j]==@@ k) { printf("yes\n"); flag=1; } } if(flag==0) printf("no"); }  
c -1
h -1
intmain(){ inti,j,@@ x,y,@@ count=0; doublen,@@ m; chara[@@ 1000],b[1000]; scanf("%lf",&n); scanf("%s",&@@ a); scanf("%s",&@@ b); for(i=0;a[i]@@ !=@@ '\0@@ ',@@ b[i]@@ !='\0';i++){ x@@ =strlen(a); y@@ =strlen(b); if(x@@ !=@@ y){ printf("error\n"); return0; break; } for(j=0;@@ a[j]@@ !='\0';j++){ if(a[j]@@ !='@@ A'&&@@ a[j]@@ !='@@ T'&&@@ a[j]@@ !='@@ G'&&@@ a[j]@@ !='@@ C'){ printf("error\n"); return0; break; } if(b[j]@@ !='@@ A'&&@@ b[j]@@ !='@@ T'&&@@ b[j]@@ !='@@ G'&&@@ b[j]@@ !='@@ C'){ printf("error\n"); return0; break; } } if(a[i]==b[i]){ count++; } } m@@ =(@@ (@@ 1.0@@ )*@@ count@@ )@@ /@@ x; if(m@@ >=@@ n){ printf("yes"); }else{ printf("no"); } return0; }  
c -1
h -1
0

int@@ prime@@ (intn) { inti,@@ judge@@ =1; for(i=2@@ ;i<n;i++) { if(n%i==0) judge@@ =0; } return@@ judge@@ ; } int@@ function@@ (int@@ number@@ ,int@@ x) { int@@ temp@@ =0,@@ i,@@ result=0; if(!@@ prime@@ (@@ number@@ )) { for(i=x@@ ;i<=@@ number@@ ;i++) if(@@ number@@ %i==0) { x@@ =i; temp=@@ number@@ /@@ i; result+=@@ function@@ (@@ temp,@@ x); } } elseif((@@ number@@ >=@@ x@@ ||@@ number@@ ==1)@@ &&@@ prime@@ (@@ number@@ )) result=1; returnresult; } intmain() { inti,@@ times@@ ,@@ number; cin>>@@ times@@ ; for(i=0;i<@@ times@@ ;i++) { cin>>@@ number; cout<<@@ function@@ (@@ number,@@ 2)<<endl; } return0; }  
c -1
h -1
intmain() { charstring@@ [256],@@ substring@@ [256],@@ replacement@@ [256],@@ buffer@@ [256@@ ]={0},@@ result@@ [256@@ ]={0}; scanf("%s%s%s",@@ string,@@ substring@@ ,@@ replacement); int@@ mainlen@@ =strlen(@@ string@@ ),@@ sublen@@ =strlen(@@ substring); inti; for(i=0;i<=@@ mainlen@@ -@@ sublen@@ ;i++) { strncpy@@ (@@ buffer@@ ,@@ (@@ string@@ +i)@@ ,@@ sublen@@ ); if(!@@ strcmp(@@ buffer@@ ,@@ substring@@ )) { strncpy@@ (@@ result@@ ,@@ string,@@ i); strcat(@@ result@@ ,@@ replacement); strcat(@@ result@@ ,@@ (@@ string@@ +i@@ +@@ sublen@@ )); printf("%s",@@ result); return0; } } printf("%s",@@ string); return0; }  
c -1
h -1
0

intmain(){ double@@ k,@@ j; inti,@@ o@@ ; chara[500],b[500]; scanf("%lf",&@@ k); scanf("%s",&@@ a); scanf("%s",&@@ b); int@@ l@@ =strlen(a); int@@ p@@ =strlen(b); o@@ =0; for(i=0;i<l;i++){ if(a[i]!='A'&&a[i]!='T'&&a[i]!='C'&&a[i]!='@@ G'){ p@@ +=@@ 500@@ ; } if(@@ b[i]!='A'&&b[i]!='T'&&b[i]!='C'&&b[i]!='@@ G'){ p@@ +=@@ 500@@ ; } if(a[i]==b[i]) o@@ ++; } if(l@@ !=@@ p@@ )@@ printf("error"); else{@@ j@@ =1.0*@@ o@@ /@@ l; if(j@@ >@@ k)@@ printf("yes"); elseprintf("no"); } return0; }  
c -1
h -1
intmain(){ inti,j,@@ m,@@ a[@@ 16]; while(1) {int@@ count=0; for(i=0;i<16;i++) {@@ cin>>a[i]; if(a[i]==@@ -1)break; if(a[i]@@ ==0)@@ break;} if(a[i]==@@ -1)break; for(j=0;j<i;j++) for(m@@ =j+1@@ ;m@@ <i@@ ;m++) if(a[j]==2*@@ a[m@@ ])@@ count++; for(j=0;j<i;j++) for(m@@ =j+1@@ ;m@@ <i@@ ;m++) if(@@ 2*@@ a[j]==@@ a[m@@ ])@@ count++; cout<<count@@ <<endl;} }  
c -1
h -1
0

intmain() { structstu { charid@@ [@@ 9@@ ]; int@@ chn@@ ; intmath; int@@ both@@ ; structstu*next; }; intn,i; scanf("%d",&n); structstu@@ *head,*p1,*p2; for(i=0;i<n;i++) { if(i==0) { head=(struct@@ stu*)malloc(sizeof(structstu)); p1=head; } else { p1->next@@ =(struct@@ stu*)malloc(sizeof(structstu)); p1=p1->next; } scanf("%s%d%d",@@ p1->id,&p1->@@ chn@@ ,&p1->math); p1->@@ both@@ =p1->@@ chn@@ +p1->@@ math; } p1->next=NULL; int@@ max; for(i=0;i<3;i++) { max=@@ head->@@ both@@ ; p1=head; do { p1=p1->next; if(max<@@ p1->@@ both@@ ) { max=@@ p1->@@ both@@ ; p2=p1; } }while(@@ p1->next@@ !=NULL); printf("%s%d\n",@@ p2->@@ id,@@ p2->@@ both@@ ); p2->@@ both@@ =0; } return0; }  
c -1
h -1
intmain() { intn; int@@ area@@ [1000][1000]; scanf("%d",&n); intf@@ =1; int@@ start1@@ ,@@ start2@@ ,@@ end1@@ ,@@ end2@@ ,@@ re@@ ; for(inti=0;i<n;i++) { for(intj=0;j<n;j++) { scanf("%d",&@@ area@@ [i][j]); if(@@ area@@ [i][j]==0&&@@ f@@ ==1) { start1@@ =i; start2@@ =j; f=@@ 2; } if(@@ area@@ [i][j]==0) { end1@@ =i; end2@@ =j; } } } re@@ =(@@ end1@@ -@@ start1@@ -1)*(@@ end2@@ -@@ start2@@ -1); printf("%d",@@ re); return0; }  
c -1
h -1
0

intmain(){ char@@ ys@@ [1000],@@ re@@ [1000],@@ bt@@ [1000]; intm,n,@@ i,j,k,@@ ss@@ =0,@@ se@@ =0; gets(@@ ys@@ ); gets(@@ bt@@ ); gets(@@ re); for(i=0;@@ ys@@ [i]@@ !=0@@ ;i++){ if(@@ ys@@ [i]==@@ bt@@ [0]){ for(k@@ =i+1@@ ,j@@ =1;@@ ys@@ [k]@@ !=0&&@@ bt@@ [j]@@ !=0@@ ;k++@@ ,j@@ ++){ if(@@ ys@@ [k]@@ !=@@ bt@@ [j]){ break;}} if(@@ bt@@ [j]@@ ==0){ ss@@ =i; se@@ =k; break; }} } if(@@ ss@@ <@@ se@@ ){ if(strlen(@@ bt@@ )@@ <=@@ strlen(@@ re@@ )){ for(i=@@ ss@@ ,j@@ =0;@@ re@@ [j]@@ !=0@@ ;i++,j@@ ++){ ys@@ [i]=@@ re@@ [j]; } for(k=@@ se@@ ;@@ ys@@ [k]@@ !=0@@ ;k++@@ ,i@@ ++){ ys@@ [i]=@@ ys@@ [k]; } ys@@ [i]=0; } else{ i@@ =strlen(@@ ys@@ )+@@ strlen(@@ re@@ )@@ -strlen(@@ bt@@ ); for(k@@ =strlen(@@ ys@@ )@@ ;k@@ >=@@ se@@ ;k@@ --@@ ,i@@ --){ ys@@ [i]=@@ ys@@ [k]; } for(i=@@ ss@@ ,j@@ =0;@@ re@@ [j]@@ !=0@@ ;i++,j@@ ++){ ys@@ [i]=@@ re@@ [j]; } } } printf(@@ ys@@ ); return0; }  
c -1
h -1
intmain() { intn,i,j,k,@@ l,@@ a[100][100]; scanf("%d",&n); for(i=0;i<n;i++) { for(j=0;j<n@@ ;j++)@@ scanf("%d",&a[i][j]); } for(i=1;i<n;i++) { for(j=1;j<n;j++) if(a[i]@@ [j-1]@@ ==0&&@@ a[i-1]@@ [j]@@ ==0) break; if(a[i]@@ [j-1]@@ ==0&&@@ a[i-1]@@ [j]@@ ==0) break; } for(k=0;k<n;k++) { for(l=0;l<n;l++) if(a[k@@ ][l@@ +1@@ ]==255&&@@ a[k@@ +1@@ ][l@@ ]==255&&@@ a[k@@ ][l@@ ]==0) break; if(a[k@@ ][l@@ +1@@ ]==255&&@@ a[k@@ +1@@ ][l@@ ]==255&&@@ a[k@@ ][l@@ ]==0) break; } printf("%d",@@ (k@@ -i@@ )*(@@ l@@ -j@@ )); }  
c -1
h -1
0

intmain(){ inta[100][100],@@ t=0,@@ i,j,k,@@ num; for(i=0;i<100;i++) { scanf("%d",&@@ a[t@@ ][i]); if(a[@@ t@@ ]@@ [i]@@ ==0)@@ t++; elseif(@@ a[t@@ ]@@ [i]==@@ -1)break; } for(k=0;k<@@ t@@ ;k++) { num=0; for(i=0;i<100;i++) { for(j=0;j<@@ 100@@ ;j++) { if(a[k]@@ [j]==2*@@ a[k]@@ [i]@@ &&@@ a[k]@@ [i]!=0) num++; } } printf("%d\n",num); } return0; }  
c -1
h -1
intmain() { inti,j,@@ line@@ ,@@ n; for(@@ line@@ =1;@@ ;@@ line@@ ++){ inta[16@@ ]={0}; n=0; for(i=0;i<16@@ ;i++){ scanf("%d",&a[i]); if(a[0]==-1) goto@@ A@@ ; else@@ if(a[i]==0) break; } for(i=0;i<16@@ ;i++){ for(j=0;j<@@ 16@@ ;j++){ if(a[i]==2*@@ a[j]@@ &&a[i]@@ !=0){ n++; break; } } } printf("%d\n",n); } A@@ : return0; }  
c -1
h -1
1


intmain(){ inti,@@ num=0,@@ a1,@@ b1,@@ t=1; chara[500],b[500]; doublen; scanf("%lf",&n); scanf("%s%s",a,b); a1@@ =strlen(a); b1@@ =strlen(b); if(@@ a1@@ !=@@ b1@@ ){ printf("error"); t@@ =0;} else{ for(i=0;i<@@ a1@@ ;i++){ if(a[i]!='A'&&a[i]!='T'&&a[i]!='C'&&a[i]!='@@ G'){ printf("error");@@ t=0; break; } if(@@ b[i]!='A'&&b[i]!='T'&&b[i]!='C'&&b[i]!='@@ G'){ printf("error");@@ t=0; break; } } } if(t@@ ==1){ for(i=0;i<@@ a1@@ ;i++){ if(a[i]==b[i]){ num++; } } if(1.0*@@ num@@ /@@ a1@@ >n){ printf("yes"); } else{ printf("no"); } } return0; }  
c -1
h -1
intmain() { double@@ c,@@ f=0; int@@ d,@@ e,@@ i; scanf("%lf",&@@ c); chara[100@@ ],b[100]; scanf("%s@@ %s",&@@ a,&b); d@@ =strlen(a); e@@ =strlen(b); if(d@@ !=@@ e@@ )@@ printf("error"); else{ for(i=0;i<d@@ ;i++){ if((a[i]!='@@ A'&&a[i]!='T'&&a[i]!='G'&&a[i]!='@@ C')||(@@ b[i]!='A'&&b[i]!='T'&&b[i]!='G'&&b[i]!='@@ C')){ printf("error"); return0@@ ;@@ ; } else{ if(a[i]==b[i]@@ )@@ f@@ ++; } } if(f@@ /@@ e@@ >=@@ c)@@ printf("yes"); elseprintf("no"); } return0; }  
c -1
h -1
1


intmain() { intn,a[@@ 20000@@ ],i,j,@@ k; cin>>n; for(i=0;i<n;i++) cin>>a[i]; for(i=n-1@@ ;i>0;i--) { for(j=0;j<i;j++) { if(a[i]==a[j]) { for(k=i@@ ;k<@@ n;k++) { a[k]=a[k@@ +1]; } n=@@ n-1; } } } for(i=0;i<=n-1;i++) { cout<<a[i]; if(i!=@@ n-1) cout<<"@@ "; } return0; }  
c -1
h -1
structStudent { intnum; intchinese; int@@ maths; }; struct@@ qiansan { intnum; int@@ zongfen; }@@ st@@ [3@@ ]={@@ {@@ 0,@@ 0},{@@ 0,@@ 0},{@@ 0,@@ 0@@ }@@ }; main() { intn,i,k,@@ c[@@ 10],@@ j@@ [10]; inta[@@ 100001@@ ]; scanf("%d",&n); structStudent@@ std@@ [@@ 100001@@ ]; for(i=0;i<n;i++) { scanf("%d%d%d",&@@ std@@ [i].num,&@@ std@@ [i].@@ chinese@@ ,&@@ std@@ [i].@@ maths@@ ); } for(i=0;i<n;i++) { a[i]=@@ std@@ [i].@@ chinese+@@ std@@ [i].@@ maths; } for(i=0;i<n;i++) { if(a[i]>@@ st@@ [0].@@ zongfen@@ ) { st@@ [2]=@@ st@@ [1]; st@@ [1]=@@ st@@ [0]; st@@ [0].@@ zongfen@@ =@@ a[i]; st@@ [0].@@ num=@@ std@@ [i].@@ num; } else@@ if(a[i]<=@@ st@@ [0].@@ zongfen@@ &&a[i]@@ >@@ st@@ [1].@@ zongfen@@ ) { st@@ [2]=@@ st@@ [1]; st@@ [1].@@ zongfen@@ =@@ a[i]; st@@ [1].@@ num=@@ std@@ [i].@@ num; } else@@ if(a[i]<=@@ st@@ [1].@@ zongfen@@ &&a[i]@@ >@@ st@@ [2].@@ zongfen@@ ) { st@@ [2].@@ zongfen@@ =@@ a[i]; st@@ [2].@@ num=@@ std@@ [i].@@ num; } } for(i=0;i<3;i++) { printf("%d%d\n",@@ st[i].@@ num,@@ st[i].@@ zongfen@@ ); } getchar(); getchar(); }  
c -1
h -1
0

intmain(){ intn,k,i,@@ s[@@ 1000],@@ z@@ [1000],@@ j,@@ g=0; scanf("%d%d",&n,&k); for(i=0;i<n;i++){ scanf("%d",&s[i]); } for(i=0;i<n;i++){ z@@ [i]=@@ s[i]; } for(i=0;i<n;i++){ for(j=0;j<n;j++){ if(s@@ [i]!=@@ z@@ [j]&&@@ s[i]@@ +@@ z@@ [j]==k){ g@@ +=1; } } } if(g@@ >0){ printf("yes"); } else{ printf("no"); } return0; }  
c -1
h -1
intmain() { inta[@@ 15@@ ]={0}; int@@ j@@ =1,@@ i,@@ m,@@ k; cin>>a[0]; do { m=0; k=0; for(i=1;i<@@ 15;i++) { cin>>a[i]; if(a[i]==0) break; else j++; } for(i=0;i<=@@ j@@ -1;i++) { for(k=0;k<=@@ j@@ -1;k++) { if(a[k@@ ]==2*@@ a[i]) m++; } } cout<<@@ m@@ <<endl; cin>>a[0]; if(a[0]@@ ==0) cin>>a[0]; j=1; }while(@@ a[0]@@ !=-1); return0; }  
c -1
h -1
0

intmain(){ inti,j,@@ t=0; charstr@@ [260],@@ sub@@ [@@ 20],@@ rep@@ [20]; scanf("%s%s%s",@@ str,@@ sub,@@ rep); for(i=0;i<strlen(@@ str@@ );i++){ if(str[i]==@@ sub@@ [0]){ for(j=i+1;j<@@ i+@@ strlen(@@ sub)@@ ;j++){ if(str@@ [j]!=@@ sub@@ [j-i@@ ]){ t=1; } } if(t@@ ==0){ for(intk@@ =i@@ ;k<@@ i+@@ strlen(@@ sub)@@ ;k++){ str@@ [k]=@@ rep@@ [k-i@@ ]; } break; } } t=0; } printf("%s",str); return0; }  
c -1
h -1
intmain(intargc,char*argv[]) { inta,b,c,@@ n; scanf("%d%d%d",&a,&b,&c); if(a%@@ 4!=0@@ ||(@@ a%@@ 100==0&&@@ a%@@ 400!=0)) { if(b@@ <@@ 2) n=@@ c; elseif(@@ b<@@ 3) n=31+@@ c; elseif(@@ b<@@ 4) n=@@ 59@@ +c; elseif(@@ b<@@ 5) n=@@ 90@@ +c; elseif(@@ b<@@ 6) n=@@ 120@@ +c; elseif(@@ b<@@ 7) n=@@ 151@@ +c; elseif(@@ b<@@ 8) n=@@ 181@@ +c; elseif(@@ b<@@ 9) n=@@ 212@@ +c; elseif(@@ b<@@ 10) n=@@ 243@@ +c; elseif(@@ b<@@ 11) n=@@ 273@@ +c; elseif(@@ b<@@ 12) n=@@ 304@@ +c; else n=@@ 334@@ +c; } else { if(b@@ <@@ 2) n=@@ c; elseif(@@ b<@@ 3) n=31+@@ c; elseif(@@ b<@@ 4) n=@@ 60@@ +c; elseif(@@ b<@@ 5) n=@@ 91@@ +c; elseif(@@ b<@@ 6) n=@@ 121@@ +c; elseif(@@ b<@@ 7) n=@@ 152@@ +c; elseif(@@ b<@@ 8) n=@@ 182@@ +c; elseif(@@ b<@@ 9) n=@@ 213@@ +c; elseif(@@ b<@@ 10) n=@@ 244@@ +c; elseif(@@ b<@@ 11) n=@@ 274@@ +c; elseif(@@ b<@@ 12) n=@@ 305@@ +c; else n=@@ 335@@ +c; } printf("%d\n",n); return0; }  
c -1
h -1
0

intmain() { inti,j,@@ slen@@ ,@@ alen@@ ; char*@@ ss@@ [2@@ ],@@ s[@@ 256],@@ s1@@ [256],@@ s2@@ [256]; int@@ flag=0; gets(s); gets(@@ s1); gets(@@ s2); slen@@ =strlen(s); alen@@ =strlen(@@ s1); for(i=0;i<@@ slen@@ -@@ alen@@ +1;i++) { for(j=0;j<@@ alen@@ ;j++) { if(s@@ [i+j]!=@@ s1@@ [j]) { break; } } if(j==@@ alen@@ ) { ss@@ [1]@@ =&@@ s[i+j@@ ]; s[i]@@ ='\0'; ss@@ [0]=@@ s; flag=1; break; } } if(flag==0) printf("%s\n",@@ s); else printf("%s@@ %s@@ %s@@ \n",@@ ss@@ [0],@@ s2,@@ ss@@ [1]); return0; }  
c -1
h -1
intmain() { intn; scanf("%d",&n); inta[n@@ ][n]; inti,j; int@@ x1,y1,x2,y2@@ ; intnum; for(i=0;i<n;i++) { for(j=0;j<n;j++) { scanf("%d",&a[i][j]); } } for(i=0;i<n;i++) { for(j=0;j<n;j++) { if(a[i][j]==0&&@@ a[i]@@ [j-1@@ ]==255&&@@ a[i-1]@@ [j]){ x1=i; y1=j; } if(a[i][j]==0&&@@ a[i]@@ [j+1@@ ]==255&&@@ a[i+1@@ ][j]@@ ){ x2=i; y2=j; } } } num@@ =(@@ x2-x1-1)*(y2-y1-1); printf("%d",@@ num); return0; }  
c -1
h -1
0

structpatient { charid[10]; intage; structpatient*next; }; structpatient*@@ creat@@ (intn) { structpatient@@ *head,*p1,*p2; inti; p1=(struct@@ patient@@ *)malloc(len); scanf("%s%d",@@ p1->id,&p1->age); p1->next=NULL; head=p1; p2@@ =p1@@ ;i@@ =1; do { p1=(struct@@ patient@@ *)malloc(len); scanf("%s%d",@@ p1->id,&p1->age); p1->next=NULL; i++; p2->next=p1; p2=p1; }@@ while(i<@@ n); return(head); } structpatient*@@ tiao@@ (structpatient@@ *head@@ ,intn) { structpatient*@@ p1; intt,@@ i; chars[@@ 10]; p1=head; for(i=0;i<n;i++) { p1=head; do { if(p1->age@@ <(@@ p1->next@@ )@@ ->age@@ &&(@@ p1->next@@ )@@ ->age@@ >=60) { t=@@ p1->@@ age; p1->age@@ =(@@ p1->next@@ )@@ ->@@ age; (@@ p1->next@@ )@@ ->age=@@ t; strcpy(s,@@ p1->@@ id); strcpy(@@ p1->@@ id,@@ (@@ p1->next@@ )@@ ->id); strcpy(@@ (@@ p1->next@@ )@@ ->id,@@ s); } p1=p1->next; }while(@@ p1->next@@ ); } return(head); } voidprint@@ (structpatient@@ *head) { structpatient@@ *p; p=head; do { printf("%s\n",p->id); p=p->next; }while(p@@ ); } voidmain() { structpatient*@@ head; intn; scanf("%d",&n); head=creat(n); head=@@ tiao@@ (head,@@ n); print(head); }  
c -1
h -1
intmain() { intn,i,@@ i1@@ ,@@ k,@@ imax@@ =0; inta[@@ 26]; intb[@@ 26]; scanf("%d",&n); for(i=0;i<n;i++){ scanf("%d",&a[i]); } b[@@ n@@ ]=0; b[@@ n-1@@ ]=1; for(i=@@ n-2@@ ;i>=0;i--){ imax@@ =@@ n; for(@@ i1@@ =i+1@@ ;@@ i1@@ <n;@@ i1@@ ++){ if(b[@@ i1@@ ]>@@ b[@@ imax@@ ]@@ &&a[i]@@ >=@@ a[@@ i1@@ ]){ imax@@ =@@ i1@@ ; } } b[i]=@@ b[@@ imax@@ ]+1; } for(i=0@@ ,k@@ =0;i<@@ n;i++){ if(b[i]>@@ k){ k=@@ b[i]; } } printf("%d",k); return0; }  
c -1
h -1
0

intmain(intargc,char*argv[]) { inta,b,c,@@ x=0,@@ i; scanf("%d%d%d",&a,&b,&c); for(i=1;i<@@ b;i++) { if(i==1||i==3||i==5||i==7||i==8||i==10@@ ||i==@@ 12) {@@ x=x+@@ 31@@ ;} elseif(i==@@ 2@@ ){ x=x+@@ 28@@ ;} else x=x+@@ 30; } if(((@@ a%@@ 4==0)&&(@@ a%100!=0@@ )||(@@ a%@@ 400==0)@@ )&&(@@ b@@ >2@@ )){ x=x@@ +1;} x=x@@ +c; printf("%d\n",x); return0; }  
c -1
h -1
intmain() { intn,i,j,@@ flag@@ ,a[@@ 20001]; cin>>n; cin>>@@ a[1]; cout<<@@ a[1]; for(i=2;i<=n;i++) {@@ flag=0; cin>>a[i]; for(j=1;j<i;j++) {@@ if(a[j]==@@ a[i])@@ flag@@ =1;} if(flag@@ ==0)@@ cout<<""<<a[i]; } return0; }  
c -1
h -1
0

intmain() { double@@ m,@@ c=0,@@ d; inti,k,@@ a,b,@@ s=0; chars1@@ [@@ 550@@ ],@@ s2[@@ 550@@ ]; scanf("%lf",&@@ m); scanf("%s%s",@@ s1,@@ s2); a=strlen(@@ s1); b=strlen(@@ s2); if(a!=@@ b) { printf("error\n"); } if(a==@@ b) { for(i=0;i<a;i++) { if(s1@@ [i]!='A'&&@@ s1@@ [i]!='C'&&@@ s1@@ [i]!='G'&&@@ s1@@ [i]!='T@@ ') { s++; } } for(i=0;i<b;i++) { if(s2@@ [i]!='A'&&@@ s2@@ [i]!='C'&&@@ s2@@ [i]!='G'&&@@ s2@@ [i]!='T@@ ') { s++; } } if(s@@ ==0) { for(i=0;i<a;i++) { if(s1[i]==s2@@ [i]) { c++; } } d=@@ c@@ /@@ a; if(d@@ >=@@ m) { printf("yes\n"); }else { printf("no\n"); } } if(s@@ !=0) { printf("error\n"); } } return0; }  
c -1
h -1
main() { inti,j; intk; scanf("%d",&k); inta[@@ k@@ ],b[@@ k@@ ]; for(i=0;i<k;i++) { scanf("%d",&a[i]); } b[k@@ -1]@@ =1; int@@ d; for(i=k-2;i>=0;i--) {@@ d=0; b[i]=1; for(j=i+1;j<k;j++) {@@ if(a[i]>=a[j]) if(d@@ <@@ b[j]) d=@@ b[j]; } b[i]@@ =1@@ +d; } for(i=0;i<k;i++) if(d@@ <@@ b[i]) d=@@ b[i]; printf("%d",d@@ );}  
c -1
h -1
0

intmain() { intl,@@ n,m,@@ sum=0,@@ i,j,k,@@ a[@@ 101][101]; cin>>@@ l; for(i=1;i<=@@ l@@ ;i++){ cin>>m>>n; sum=0; for(j=1;j<=m;j++) for(k=1;k<=n;k++) cin>>a[j]@@ [k]; if(m@@ !=1@@ &&n@@ !=1@@ ){ for(k=1;k<=n;k++) sum+=@@ a[1@@ ][k@@ ]; for(k=1;k<=n;k++) sum+=@@ a[m@@ ][k@@ ]; for(k=@@ 2@@ ;k<@@ m;k++) sum+=@@ a[k@@ ][1@@ ]; for(k=@@ 2@@ ;k<@@ m;k++) sum+=@@ a[k@@ ][n]; cout<<sum@@ <<endl;} else{ for(j=1;j<=m;j++) for(k=1;k<=n;k++) sum+=@@ a[j]@@ [k]; cout<<sum<<endl; } } return0; }  
c -1
h -1
struct@@ score { intnum; intyuwen; intshuxue; }@@ student[@@ 100000]; intmax@@ (inta,intb) { return(@@ a@@ >b@@ )@@ ?@@ a@@ :@@ b; } int@@ min@@ (inta,intb) { return(@@ a@@ <b@@ )@@ ?@@ a@@ :@@ b; } intmain() { intmax@@ (inta,int@@ b); int@@ total@@ [100000]; intn,i; int@@ max1@@ =0,@@ max2@@ =0,@@ max3@@ =0; int@@ maxnum1@@ =0,@@ maxnum2@@ =0,@@ maxnum3@@ =0; scanf("%d",&n); for(i=0;i<n;i++){ scanf("%d",&@@ student[i].@@ num); scanf("%d",&@@ student[i].@@ yuwen@@ ); scanf("%d",&@@ student[i].@@ shuxue); total@@ [i]=@@ student[i].@@ yuwen@@ +@@ student[i].@@ shuxue; if(@@ total@@ [i]>=@@ max1@@ ){ if(@@ total@@ [i]==@@ max1@@ ){ max3=max2; max2=@@ max1; max1=@@ total@@ [i]; maxnum3@@ =@@ maxnum2@@ ; maxnum2@@ =@@ max(@@ maxnum1@@ ,i@@ +1); maxnum1@@ =@@ min@@ (@@ maxnum1@@ ,i@@ +1); } else{ max3=max2; max2=@@ max1; max1=@@ total@@ [i]; maxnum3@@ =@@ maxnum2@@ ; maxnum2@@ =@@ maxnum1@@ ; maxnum1@@ =i+1; } } elseif(@@ total@@ [i]<@@ max1@@ &&@@ total@@ [i]>=@@ max2@@ ){ if(@@ total@@ [i]==@@ max2@@ ){ max3=max2; max2=@@ total@@ [i]; maxnum3@@ =@@ max(@@ maxnum2@@ ,i@@ +1); maxnum2@@ =@@ min@@ (@@ maxnum2@@ ,i@@ +1); } else{ max3=max2; max2=@@ total@@ [i]; maxnum3@@ =@@ maxnum2@@ ; maxnum2@@ =i+1; } } elseif(@@ total@@ [i]<@@ max2@@ &&@@ total@@ [i]>=@@ max3@@ ){ if(@@ total@@ [i]==@@ max3@@ ){ max3=@@ total@@ [i]; maxnum3@@ =@@ min@@ (i+1,@@ maxnum3@@ ); } else{ max3=@@ total@@ [i]; maxnum3@@ =i+1; } } } printf("%d%d\n",@@ maxnum1@@ ,@@ max1@@ ); printf("%d%d\n",@@ maxnum2@@ ,@@ max2@@ ); printf("%d%d",@@ maxnum3@@ ,max3@@ ); return0; }  
c -1
h -1
0

intfenjie@@ (int@@ max@@ ,int@@ min) { intnum@@ =1,@@ i,@@ k; for(i=min@@ ;i<@@ max@@ /2@@ ;i++) { k=@@ max@@ %@@ i; if(k==0) { if(i@@ <=@@ max@@ /@@ i) num+=@@ fenjie@@ (@@ max@@ /i,i); } } returnnum; } intmain() { inta[@@ 10000],@@ n,@@ j; scanf("%d",&n); for(j=0;j<n;j++) { scanf("\n@@ %d",&@@ a[j]); } for(j=0;j<n;j++) { printf("%d\n",@@ fenjie@@ (@@ a[j]@@ ,@@ 2)); } return0; }  
c -1
h -1
intmain() { doublen,@@ c; int@@ b=0,@@ p@@ =1,i; scanf("%lf",&n); chara[@@ 2][@@ 501]; scanf("%s",@@ a[0]); scanf("%s",@@ a[1]); for(i=0;i<@@ 501@@ ;i++){ if(a[0]@@ [i]==@@ '\0'@@ ){ if(@@ a[1]@@ [i]@@ !='\0'@@ ){ p=0; } break; } if(a[0]@@ [i]!='A'&&@@ a[0]@@ [i]!='T'&&@@ a[0]@@ [i]!='C'&&@@ a[0]@@ [i]!='G'){ p=0; break; } if(@@ a[1]@@ [i]!='A'&&@@ a[1]@@ [i]!='T'&&@@ a[1]@@ [i]!='C'&&@@ a[1]@@ [i]!='G'){ p=0; break; } if(a[0]@@ [i]==@@ a[1]@@ [i]){ b=b@@ +1; } } c=@@ b@@ *1.0/@@ i; if(p@@ ==0){@@ printf("error");} else{ if(c@@ >@@ n@@ ){printf("yes");} else{ printf("no"); } } return0; }  
c -1
h -1
0

intmain() { intk,@@ j,@@ i,@@ a[@@ 26]={0},@@ length@@ [26]={0},@@ max=0; scanf("%d",&k); for(i=0;i<k;i++) scanf("%d",&a[i]); length@@ [0]=1; for(i=1;i<k;i++) { length@@ [i]=1; for(j=0;j<i;j++) { if(a[i]<=@@ a[j]&&@@ length@@ [i]<@@ length@@ [j]@@ +1) length@@ [i]=@@ length@@ [j]+1; } } for(i=0;i<k;i++) { if(@@ length@@ [i]>max) max=@@ length@@ [i]; } printf("%d",max); return0; }  
c -1
h -1
intmain() { inty,m,d,@@ i; scanf("%d%d%d",&y,&m,&d); if(((@@ y%@@ 4==0)&&(@@ y%100!=0@@ )@@ )||(y%@@ 400==0)) { switch(m) { case1: i=@@ d; break; case2: i@@ =31+@@ d; break; case3: i@@ =31+29@@ +d; break; case4: i@@ =31+29@@ +31+@@ d; break; case5: i@@ =31+29@@ +31+30@@ +d; break; case6: i@@ =31+29@@ +31+30+31+@@ d; break; case7: i@@ =31+29@@ +31+30+31+30@@ +d; break; case8: i@@ =31+29@@ +31+30+31+30+31+@@ d; break; case9: i@@ =31+29@@ +31+30+31+30+31+31+@@ d; break; case10: i@@ =31+29@@ +31+30+31+30+31+31+30@@ +d; break; case11: i@@ =31+29@@ +31+30+31+30+31+31+30+31+@@ d; break; case12: i@@ =31+29@@ +31+30+31+30+31+31+30+31+30@@ +d; break; } }else { switch(m) { case1: i=@@ d;break; case2: i@@ =31+@@ d;break; case3: i@@ =31+28@@ +d;break; case4: i@@ =31+28@@ +31+@@ d;break; case5: i@@ =31+28@@ +31+30@@ +d;break; case6: i@@ =31+28@@ +31+30+31+@@ d;break; case7: i@@ =31+28@@ +31+30+31+30@@ +d;break; case8: i@@ =31+28@@ +31+30+31+30+31+@@ d;break; case9: i@@ =31+28@@ +31+30+31+30+31+31+@@ d;break; case10: i@@ =31+28@@ +31+30+31+30+31+31+30@@ +d;break; case11: i@@ =31+28@@ +31+30+31+30+31+31+30+31+@@ d;break; case12: i@@ =31+28@@ +31+30+31+30+31+31+30+31+30@@ +d;break; } } printf("%d\n",@@ i); return0; }  
c -1
h -1
0

intmain(){ intn,k; scanf("%d",&n); scanf("%d",&k); intsz[@@ 1001]; for(inti=0;i<n;i++){ scanf("%d",&sz[i]); } int@@ bar@@ =0; for(int@@ a@@ =0;a@@ <n;@@ a++){ for(int@@ b=@@ a@@ +1;@@ b@@ <n;b++){ if(@@ sz[a@@ ]+sz[@@ b@@ ]==@@ k) bar@@ =1; } } if(@@ bar@@ ==1) printf("yes"); if(@@ bar@@ ==0) printf("no"); return0; }  
c -1
h -1
intmain() { int@@ high@@ [26],@@ n,@@ maxnum@@ [26],@@ temp@@ [26]; scanf("%d",&n); inti,j,k; for(i=0;i<n;i++) scanf("%d",&@@ high@@ [i]); maxnum@@ [n-1@@ ]=1; for(i=n-2;i>=0;i--) { int@@ len@@ =0; for(j=i+1;j<n;j++) { if(@@ high@@ [i]>=@@ high@@ [j]) {@@ temp@@ [@@ len@@ ++@@ ]@@ =1@@ +@@ maxnum@@ [j]@@ ;} } int@@ mark1@@ =1; for(k=0;k<@@ len@@ ;k++) {if(@@ temp@@ [k]@@ >=@@ mark1@@ )@@ mark1@@ =@@ temp@@ [k]@@ ;} maxnum@@ [i]=@@ mark1@@ ; } int@@ mark2@@ =0; for(i=0;i<n;i++) {if(@@ maxnum@@ [i]>=@@ mark2@@ )@@ mark2@@ =@@ maxnum@@ [i]@@ ;} printf("%d",@@ mark2@@ ); return0; }  
c -1
h -1
0

intmain() { struct@@ tushu { int@@ bianhao@@ ; char@@ zuozhe@@ [26]; }; inti,j,n,@@ q=0; intcount@@ [26]={0}; scanf("%d",&n); struct@@ tushu@@ *@@ pp@@ ; pp@@ =(struct@@ tushu@@ *)malloc(sizeof(@@ tushu@@ )*n); int*@@ m; m=@@ (int*)malloc(sizeof(int)*n); for(i=0;i<n;i++) { scanf("%d%s",&@@ ((@@ pp+i)->@@ bianhao@@ ),@@ (@@ pp+i)->@@ zuozhe@@ ); } for(i=0;i<n;i++) { m[i]@@ =strlen(@@ pp@@ [i].@@ zuozhe@@ ); for(j=0;j<m@@ [i];j++) { count[@@ pp@@ [i].@@ zuozhe@@ [j]@@ -'A']++; } } intmax=0; for(i=0;i<26;i++) { if(count@@ [i]@@ >max){max=@@ count@@ [i]@@ ;q@@ =i;} } printf("%c\n%d\n",@@ 'A'+@@ q,@@ max); for(i=0;i<n;i++) { for(j=0;j<m@@ [i];j++) { if(@@ pp@@ [i].@@ zuozhe@@ [j]==@@ (@@ 'A'+@@ q@@ ))@@ printf("%d\n",@@ pp@@ [i].@@ bianhao@@ ); } } return0; }  
c -1
h -1
struct@@ score { long@@ num; int@@ yu@@ ; int@@ shu; intsum; }stu[100000]; voidmain() { long@@ i,n,@@ j,@@ k; intt; scanf("%ld",&n); for(i=0;i<n;i++) { scanf("%ld%d%d",&@@ stu[i].@@ num,&stu[i].@@ yu@@ ,&stu[i].@@ shu); stu[i].sum=stu[i].@@ yu@@ +stu[i].@@ shu; } for(i=0;i<3;i++) { for(j=0;j<n@@ -i-1;j++) if(stu[j].@@ sum>@@ stu[j+1].@@ sum) { t=@@ stu[j].@@ sum; stu[j].@@ sum=@@ stu[j+1].@@ sum; stu[j+1].@@ sum=@@ t; } } for(k=@@ n-1@@ ;k@@ >@@ n-@@ 4@@ ;k--) { if(k!=@@ n-1@@ &&@@ stu[k].@@ sum@@ ==@@ stu@@ [k+1@@ ].@@ sum@@ )continue; for(i=0;i<n;i++) { if(@@ stu[k].@@ sum@@ ==@@ (@@ stu[i].@@ yu@@ +stu[i].@@ shu@@ )) {@@ printf("%ld@@ %ld@@ \n",@@ stu[i].@@ num,@@ stu[k].@@ sum); if(k==@@ n-@@ 3)@@ break;} } } }  
c -1
h -1
0

intmain() { introw,col; cin>>row>>col; intarray[@@ 101][101]; int(*p)@@ [@@ 101@@ ]=@@ NULL@@ ; p=@@ array@@ ; for(inti=0;i<row;i++) { for(intj=0;j<col;j++) cin>>@@ *(p@@ [i]@@ +j); } for(intk=0;k<@@ row+col@@ -1;k++) { for(inti=0;i<row;i++) { for(intj=0;j<col;j++) { if(i+j@@ ==k) cout<<@@ *(p@@ [i]@@ +j)<<endl; } } } return0; }  
c -1
h -1
intmain() { intn,i,j,k,@@ h,@@ l,@@ y; int*p=@@ NULL@@ ; cin>>n; for(i=1;i<=n;i++) { y=0; intx[@@ 101][@@ 101@@ ]={0}; cin>>@@ h@@ >>@@ l; for(j=1;j<=@@ h@@ ;j++) { for(k=1;k<=@@ l@@ ;k++) { cin>>@@ x[j]@@ [k]; } } for(p=@@ x@@ [1]@@ +1@@ ;p<=@@ x@@ [1]@@ +l@@ ;p++) { y=@@ y@@ +@@ (*p@@ ); } for(p=@@ x@@ [2]@@ +1@@ ;p<=@@ x[@@ h@@ -1]@@ +1;@@ p=p+@@ 101@@ ) { y=@@ y@@ +@@ (*p@@ )+@@ (@@ *(p+@@ l@@ -1)); } for(p=@@ x[@@ h@@ ]+1@@ ;p<=@@ x[@@ h@@ ]+@@ l@@ ;p++) { y=@@ y@@ +@@ (*p@@ ); } cout<<@@ y@@ <<endl; } return0; }  
c -1
h -1
0

intmain(){ inti,@@ sim@@ =0; doublen; char@@ one@@ [501],@@ two@@ [501]; scanf("%lf",&n); scanf("%s",@@ one@@ ); scanf("%s",@@ two@@ ); if(strlen(@@ one@@ )!=strlen(@@ two@@ )){ printf("error\n"); return0; } for(i=0;@@ one@@ [i]@@ ;i++){ if((@@ one@@ [i]!='A')&&(@@ one@@ [i]!='T')&&(@@ one@@ [i]!='C')&&(@@ one@@ [i]!='G')){ printf("error\n"); return0; } } for(i=0;@@ two@@ [i]@@ ;i++){ if(@@ two@@ [i]!='A'&&@@ two@@ [i]!='T'&&@@ two@@ [i]!='C'&&@@ two@@ [i]!='G'){ printf("error\n"); return0; } } for(i=0;@@ one@@ [i]@@ ;i++){ if(@@ one@@ [i]==@@ two@@ [i]){ sim@@ ++; } } if(1.0*@@ sim@@ /@@ strlen(@@ one@@ )>@@ n){ printf("yes\n"); } else{ printf("no\n"); } return0; }  
c -1
h -1
intmain() { charstr@@ [300],@@ subString@@ [300],@@ replacement@@ [300]; char@@ *p,@@ *@@ q; int@@ strLen@@ ,@@ subLen@@ ,@@ repLen@@ ,@@ move@@ ,i; cin>>@@ str@@ >>@@ subString@@ >>@@ replacement@@ ; strLen@@ =strlen(@@ str); subLen@@ =strlen(@@ subString@@ ); repLen@@ =strlen(@@ replacement); p=strstr(@@ str,@@ subString@@ ); if(p@@ ==NULL) { cout<<str@@ ; return0; } q=@@ replacement@@ ; if(@@ repLen@@ >@@ subLen@@ ) { move@@ =@@ repLen@@ -@@ subLen@@ ; for(q=@@ str@@ +@@ strLen@@ +@@ move@@ ;q@@ >=@@ p+@@ repLen@@ ;q@@ --) { *@@ q=@@ *(q@@ -@@ move@@ ); } i=0; q=@@ replacement@@ ; while(i<@@ repLen@@ ) { *p@@ ++@@ =@@ *@@ q++; i++; } } else { i=0; while(i<@@ repLen@@ ) { *p@@ ++@@ =@@ *@@ q++; i++; } if(@@ repLen@@ <@@ subLen@@ ) { move@@ =@@ subLen@@ -@@ repLen@@ ; while(@@ *(p+@@ move@@ )@@ !='\0') { *p@@ ++@@ =@@ *(p+@@ move@@ ); } *@@ p=@@ '\0'@@ ; } } cout<<str@@ <<endl; return0; }  
c -1
h -1
0

intk,m,n,@@ sum; intnum[@@ 101][101]; intmain() { inti,j,@@ l; cin>>k; for(i=0;i<@@ k;@@ ++@@ i) { memset(@@ num,@@ 0,sizeof(@@ num@@ )); sum=0; cin>>m>>n; for(j=0;j<@@ m;@@ ++@@ j) { for(l=0;l<n;@@ ++@@ l) { cin>>@@ num[j]@@ [l]; } } for(j=0;j<@@ n;++@@ j)@@ sum+=@@ num@@ [0]@@ [j]+@@ num[m@@ -1][j]; for(j=1;j<@@ m-1@@ ;++@@ j)@@ sum+=@@ num[j]@@ [0]+@@ num[j]@@ [n-1]; cout<<sum<<endl; } return0; }  
c -1
h -1
ints[@@ 10000@@ ][@@ 10000]; voidmain() { intn,i,j,@@ a1,@@ b1,@@ a2,@@ b2@@ ,@@ sum,@@ flag; scanf("%d",&n); for(i=0;i<n;i++) for(j=0;j<n;j++) scanf("%d",&s@@ [i][j]); for(i=0;i<n;i++) { flag=0; for(j=0;j<n;j++) { if(s@@ [i][j]==0) { a1@@ =i; b1@@ =j; flag=1; break; } } if(flag@@ ==1)break; } for(i=n-1@@ ;i>0;i--) { flag=0; for(j=n-1@@ ;j>0;j--) { if(s@@ [i][j]==0) { a2@@ =i; b2@@ =j; flag=1; break; } } if(flag@@ ==1)break; } sum=(@@ a2-a1@@ -1)*(@@ b2-b1@@ -1); printf("%d",sum); }  
c -1
h -1
0

intmain() { inti,j,k,@@ t,@@ m,@@ c[@@ 26]={0},@@ max=0; charb[@@ 27@@ ]={@@ "@@ ABCDEFGHIJKLMNOPQRSTUVWXYZ@@ "@@ }; structbook { intnum; char@@ man@@ [26]; }a[@@ 999]; scanf("%d",&m); for(i=0;i<m;i++) { scanf("%d%s",&@@ a[i].@@ num,@@ a[i].@@ man@@ ); } i=0; for(i=0;i<m;i++) { for(j=0;j<26;j++) { for(k=0;k<26;k++) { if(a[i].@@ man@@ [j]==@@ b[k@@ ]) c@@ [k]=@@ c@@ [k]@@ +1; } } } i@@ =0;j@@ =0@@ ;k@@ =0; for(i=0;i<26;i++) { if(c@@ [i]>max) { max=@@ c[i]; t=i; } } printf("%c\n%d\n",@@ b[t@@ ],@@ max); for(j=0;j<m;j++) { for(k=0;k<26;k++) { if(a[j]@@ .@@ man@@ [k]==@@ b[t@@ ]) printf("%d\n",@@ a[j].@@ num); } } }  
c -1
h -1
struct@@ BOOK { intnum; charname[26]; int@@ name_num@@ [26]; }@@ book[999]; voidmain() { intn; scanf("%d",&n); inti; for(i=0;i<n;i++){ scanf("%d%s",&book[i].@@ num,&@@ book[i].name); } intcount@@ [26]={0}; intk; for(i=0;i<n;i++){ int@@ len; len=strlen(@@ book[i].name); for(k=0;k<@@ len@@ ;k++){ book[i].@@ name_num@@ [k]=@@ (int)@@ book[i].@@ name@@ [k]; } } intj; inty; for(i=0;i<n;i++){ int@@ len_1@@ ; len_1@@ =strlen(@@ book[i].name); for(j=@@ 65@@ ;j<=@@ 90@@ ;j++){ for(y=0;y@@ <@@ len_1@@ ;y@@ ++){ if(book[i].@@ name_num@@ [y@@ ]==@@ j){ count@@ [j@@ -65]++; } } } } int@@ w; intmax=@@ count@@ [0]; intt=0; for(@@ w@@ =0;@@ w@@ <26@@ ;@@ w@@ ++){ if(count@@ [@@ w@@ ]@@ >max){ max=@@ count[@@ w@@ ]; t=@@ w; } } printf("%c\n%d\n",@@ t@@ +65@@ ,max); intx; int@@ total=0; for(i=0;i<n;i++){ int@@ length@@ ; length@@ =strlen(@@ book[i].name); for(x=0;x@@ <@@ length@@ ;x@@ ++){ if(book[i].@@ name_num@@ [x@@ ]==@@ t@@ +65@@ ){ printf("%d\n",book[i].@@ num); } } } }  
c -1
h -1
1


int@@ function@@ (intn,int@@ a) { int@@ kind@@ =0; inti; if(n==1) return1; for(i=a@@ ;i<=n;i++) { if(n%i==0) { if(n@@ /i@@ <i@@ &&i!=@@ n); else { kind@@ =@@ kind@@ +@@ function@@ (n/i,i); } } } return@@ kind@@ ; } intmain() { intm,n,@@ i,@@ sum; cin>>m; for(i=1;i<=m;i++) { cin>>n; sum=@@ function@@ (n,@@ 2); cout<<sum<<endl; } return0; }  
c -1
h -1
main() { charstring@@ [256],@@ substr@@ [256],@@ replace@@ [256]; inti,j,k; intm,n; scanf("%s@@ \n",@@ string); for(i=0;@@ string@@ [i]@@ !='\0'@@ ;) { i++; } m=i; scanf("%s@@ \n",@@ substr@@ ); for(i=0;@@ substr@@ [i]@@ !='\0'@@ ;) { i++; } n=i; scanf("%s@@ \n",@@ replace); for(i=0;i<m;i++) { if(string@@ [i]==@@ substr@@ [0]) { for(j=0;j<n;j++) { if(string@@ [i+j]!=@@ substr@@ [j]@@ )break; } if(j==@@ n) { for(j=0;j<n;j++) string@@ [i+j@@ ]=@@ replace@@ [j]; break; } } } printf("%s",@@ string); }  
c -1
h -1
0

intmain() { inta[100][100@@ ]={0}; intk; intsum=0; inti,j,@@ l; intm,n; scanf("%d",&k); for(i=0;i<k;i++) { scanf("%d%d",&m,&n); if(n@@ ==1&&@@ m@@ ==1) { scanf("%d",&@@ sum); printf("%d",sum); sum=0; } else {@@ for(j=0;j<m;j++) { for(l=0;l<n;l++) { scanf("%d",@@ *(a@@ +j)+@@ l); } } for(l=0;l<n;l++) { sum=sum+*(@@ *(a+@@ 0@@ )+@@ l@@ )@@ +*(@@ *(a@@ +m-1)@@ +@@ l); } for(l=0;l<@@ m;@@ l++) { sum=sum+*(@@ *(a+@@ l@@ )+@@ 0)@@ +*(@@ *(a+@@ l@@ )+@@ n-1); } sum=sum@@ -*(@@ *(a+@@ 0@@ )+@@ 0)@@ -*(@@ *(a+@@ 0@@ )+@@ n-1)@@ -*(@@ *(a@@ +m-1)@@ +@@ 0)@@ -*(@@ *(a@@ +m-1)@@ +n-1); printf("%d\n",sum); sum=0; } } return0; }  
c -1
h -1
intmain() { inta[@@ 20]; int@@ flag; cin>>@@ flag; while(@@ flag@@ !=-1) { a[0]=@@ flag; inti=0; intcount=0; while(a[i]@@ !=0) { i++; cin>>a[i]; } for(intj=0;j<i;j++) { for(intk=0;k<@@ i;k++) { if(a[j]==2*@@ a[k]) count++; } } cout<<count<<endl; cin>>@@ flag; } return0; }  
c -1
h -1
0

intmain() { int@@ juzhen@@ [@@ 101][101]; intm,n,i,j,@@ sum; intk; cin>>k; while(k@@ >0) {@@ sum=0; cin>>m>>n; for(i=0;i<m;i++){ for(j=0;j<n;j++){ cin>>@@ juzhen@@ [i][j]; if(i==0)@@ sum+=@@ juzhen@@ [i][j]; if(i==@@ m-1)@@ sum+=@@ juzhen@@ [i][j]; if(j@@ ==0&&@@ i@@ !=0@@ &&i!=@@ m-1)@@ sum+=@@ juzhen@@ [i][j]; if(j==@@ n-1@@ &&i@@ !=0@@ &&i!=@@ m-1)@@ sum+=@@ juzhen@@ [i][j]; } } cout<<sum<<endl; k--; } return0; }  
c -1
h -1
voidmain() { intn,@@ high@@ [@@ 30],@@ point@@ ,@@ m,@@ sum1@@ ,@@ sum2@@ ,@@ check@@ ; scanf("%d",&n); for(m=0;m@@ <n;m++) scanf("%d",&@@ high@@ [m]); for(@@ check@@ =1;@@ check@@ ==1@@ ;) { check@@ =0; for(@@ point@@ =0;@@ point@@ <@@ n-1;@@ point@@ ++) { if(@@ high@@ [@@ point@@ ]<@@ high@@ [@@ point@@ +1]) { check@@ =1; for(m@@ =0,@@ sum1@@ =0;m@@ <@@ point@@ ;m++) if(@@ high@@ [m]@@ >=@@ high@@ [@@ point@@ ]@@ &&@@ high@@ [m@@ ]<@@ high@@ [@@ point@@ +1@@ ])@@ sum1@@ ++; for(m=@@ point@@ +@@ 2,@@ sum2@@ =0;m@@ <n;m++) if(@@ high@@ [m@@ ]>@@ high@@ [@@ point@@ ]@@ &&@@ high@@ [m@@ ]<=@@ high@@ [@@ point@@ +1@@ ])@@ sum2@@ ++; if(@@ sum1@@ >=@@ sum2@@ ) { for(m=@@ point@@ +1@@ ;m@@ <@@ n-1@@ ;m++) { high@@ [m]=@@ high@@ [m@@ +1]; } } else { for(m=@@ point@@ ;m@@ <@@ n-1@@ ;m++) { high@@ [m]=@@ high@@ [m@@ +1]; } point@@ --; } n--; } } } printf("%d\n",n); }  
c -1
h -1
0

intmain() { intn,i,k,@@ j,@@ e,@@ p; intm=0; inta[1000]; intb[@@ 499500@@ ]; scanf("%d%d",&n,&k); for(i=0;i<n;i++){ scanf("%d",&a[i]); } for(i=0;i<n;i++){ for(j=i+1;j<=@@ n;j++){ b[m@@ ]=@@ a[i]+a[j]; m++; e=@@ m; } } p=0; for(m=0;m<@@ e@@ ;m++){ if(@@ b[m@@ ]==k){ p++; } } if(p@@ ==0){ printf("no"); }else{ printf("yes"); } return0; }  
c -1
h -1
intmain() { inta[16@@ ],i,j,@@ num,@@ flag; while(1) { flag=0; i=0; scanf("%d",&a[i]); if(a[0]==-1) break; else { do { i++; scanf("%d",&a[i]); }while(@@ a[i]@@ !=0); num@@ =i; for(i=0;i<num;i++) for(j=i+1;j<@@ num@@ ;j++) if((@@ a[i]==@@ 2*@@ a[j]@@ )||(@@ a[j]==2*@@ a[i]@@ )) flag@@ ++; printf("%d\n",@@ flag@@ ); } } return0; }  
c -1
h -1
0

intmain(){ intn,i,j,@@ b,@@ a; chars[@@ 1000],@@ s1@@ [1000],@@ s2@@ [1000]; char*@@ ps1@@ =@@ s1@@ ,*@@ ps2@@ =@@ s2; gets(@@ s2); gets(@@ s1); gets(s); int@@ l1=strlen(@@ s1); int@@ l2=strlen(@@ s2); for(a@@ =0,@@ b@@ =0;a@@ <@@ l2@@ &&@@ b@@ ==0@@ ;a@@ =i+1@@ ){ for(i=@@ a,@@ ps1@@ =@@ s1,@@ ps2@@ =@@ s2@@ +@@ a;@@ *@@ ps1@@ !=@@ *@@ ps2@@ &&@@ *@@ ps1@@ !=@@ '\0@@ '&@@ &*@@ ps2@@ !='\0'@@ ;@@ ps2@@ ++@@ ,i@@ ++@@ ); for(j=0@@ ,@@ b@@ =1;@@ *@@ ps1@@ !=@@ '\0@@ '&@@ &*@@ ps2@@ !='\0'@@ ;@@ ps1@@ ++,@@ ps2@@ ++@@ ,j@@ ++){ if(*@@ ps1@@ !=@@ *@@ ps2@@ &&j@@ <@@ l1@@ ){ b=0; break; } } } if(i==@@ l2@@ ) printf("%s",@@ s2); else{ n=i; s2@@ [n@@ ]='\0'; printf("%s",@@ s2); printf("%s",s); ps2@@ =@@ s2@@ +@@ n+@@ l1; printf("%s",@@ ps2@@ ); } return0; }  
c -1
h -1
intm,n; inta[100],b[100]; voidmain() { voidf1@@ (); voidf2@@ (ints[],int@@ k); void@@ f3@@ (intp@@ [],int@@ t); void@@ f4@@ (intp@@ [],int@@ t); f1@@ (); f2@@ (a,m); f2@@ (b,n); f3@@ (a,m); f4@@ (b,n); } voidf1@@ () {inti; scanf("%d%d",&m,&n); for(i=0;i<m;i++) scanf("%d",&a[i]); for(i=0;i<n;i++) scanf("%d",&b[i]); } voidf2@@ (ints[],int@@ k) { inti,j,t; for(j=0;j<@@ k@@ -1;j++) for(i=0;i<@@ k-1@@ -j;i++) if(s@@ [i]>@@ s@@ [i+1]) {t=@@ s[i]; s[i]=@@ s@@ [i+1]; s@@ [i+1]=@@ t;} } void@@ f3@@ (intp@@ [],int@@ t) { inti,j; for(i=0;i<t;i++) printf("%d",@@ p[i]); } void@@ f4@@ (intp@@ [],int@@ t) { inti,j; for(i=0;i<@@ t@@ -1;i++) printf("%d",@@ p[i]); printf("%d",@@ p@@ [t@@ -1]); }  
c -1
h -1
0

intmain(){ double@@ x,y; intn=0,@@ i,@@ c,d,@@ m=0; chara[@@ 502@@ ],b[@@ 502@@ ]; scanf("%lf%s%s",&@@ x,@@ a,b); c@@ =strlen(a); d@@ =strlen(b); for(i=0;i<c@@ ;i++){ if(a[i]!='A'&&a[i]!='T'&&a[i]!='C'&&a[i]!='@@ G'){ m=1; break; } } for(i=0;i<d@@ ;i++){ if(@@ b[i]!='A'&&b[i]!='T'&&b[i]!='C'&&b[i]!='@@ G'){ m=1; break; } } if(m@@ ==1||@@ c@@ !=@@ d@@ ){ printf("error"); }else{ for(i=0;@@ a[i],@@ b[i]@@ ;i++){ if(a[i]==b[i]){ n++; } } y@@ =1.0*@@ n/@@ c; if(y@@ >@@ x){ printf("yes"); }else{ printf("no"); } } return0; }  
c -1
h -1
intmain(){ intk,m,n,@@ i,@@ a,b; scanf("%d",&k); ints@@ [k]; for(i=0;i<k;i++){ s[i]@@ =0; } for(i=0;i<k;i++){ scanf("%d%d",&m,&n); intsz[@@ m@@ ][n]; for(a=0;a@@ <m;@@ a++){ for(b=0;b@@ <n;b++){ scanf("%d",&@@ sz[a@@ ][b@@ ]); } } for(b=0;b@@ <n;b++){ s[i]=@@ s[i]@@ +@@ sz[0][@@ b@@ ]; } for(a@@ =1;@@ a@@ <m-1@@ ;a@@ ++){ s[i]=@@ s[i]@@ +@@ sz[a@@ ][0]; s[i]=@@ s[i]@@ +@@ sz[a@@ ][n-1]; } if(m@@ !=1@@ ){ for(b=0;b@@ <n;b++){ s[i]=@@ s[i]@@ +@@ sz[@@ m-1][@@ b@@ ]; } } } for(i=0;i<k;i++){ printf("%d\n",@@ s[i]); } return0; }  
c -1
h -1
0

intmain() { intf(inta,int@@ min); intn,a[@@ 150@@ ],@@ i,@@ b; scanf("%d",&n); for(i=0;i<n;i++) { scanf("%d",&a[i]); } for(i=0;i<n;i++) { b=@@ f(@@ a[i],@@ 2); printf("%d\n",@@ b); } return0; } intf(inta,int@@ min) { int@@ result@@ =1,i; if(a<@@ min) { return0; } for(i=min@@ ;i<@@ a;i++) { if(a%i==0) { result+=@@ f(a@@ /i,i); } } returnresult; }  
c -1
h -1
intmain() { intn,i,j,@@ t1@@ ,@@ t2@@ ,@@ t3@@ ,@@ t4@@ ,@@ s; int@@ c@@ [100][100]; scanf("%d",&n); for(i=1;i<=n;i++){ for(j=1;j<=n;j++) scanf("%d",&@@ c@@ [i][j]); } for(i=1;i<=n;i++){ for(j=1;j<=n;j++){ if(c@@ [i][j]==0){ t1@@ =i; t2@@ =j; goto@@ ask@@ ; } } } ask@@ : for(i=n@@ ;i>0@@ ;i--){ for(j=n@@ ;j>0@@ ;j--){ if(c@@ [i][j]==0){ t3@@ =i; t4@@ =j; goto@@ que@@ ; } } } que@@ : s=(@@ t4@@ -@@ t2@@ -1)*(@@ t3@@ -@@ t1@@ -1); printf("%d",s); return0; }  
c -1
h -1
0

intmain() { intn,i,j,k; scanf("%d%d",&n,&k); inta[n]; intb[@@ n]; for(i=0;i<n;i++) { scanf("%d",&a[i]); b[i]=@@ k-@@ a[i]; } intm=0; for(i=0;i<n;i++) { for(j=0;j<n;j++) { if(b[j]@@ ==@@ a[i])@@ m++; } } if(m@@ >0@@ )@@ printf("yes"); elseprintf("no"); }  
c -1
h -1
intmain(intargc,char*argv[]) { intm,@@ n[@@ 1000][1000],@@ ai@@ ,@@ aj@@ ,@@ zi@@ ,@@ zj@@ ,i,j,@@ s; scanf("%d",&m); for(i=0;i<m;i++) { for(j=0;j<m;j++) { scanf("%d",&@@ n@@ [i][j]); if(n@@ [i][j]==0) { zi@@ =i;@@ zj@@ =j; } } } for(i=@@ (m@@ -1)@@ ;i>=0;i--) { for(j@@ =(m@@ -1)@@ ;j>=0;j--) { if(n@@ [i][j]==0) { ai@@ =i;@@ aj@@ =j; } } } s=(@@ zj@@ -@@ aj@@ -1)*(@@ zi@@ -@@ ai@@ -1); printf("%d\n",s); return0; }  
c -1
h -1
0

intmain() { intn,i,j,@@ d[@@ 1000]; char@@ zuo@@ [26@@ ]={'A','B','C','D','E','F','G','H','I','J','K','L','M','N','O','P','@@ Q','R','S','T','U','V','W','X','Y','@@ Z'}; scanf("%d",&n); chars[@@ 1000][@@ 26],@@ len; intsum@@ [26]={0},@@ k; for(i=0;i<n;i++) { scanf("%d%s",&@@ d@@ [i],@@ s[i]); len=strlen(@@ s[i]); for(j=0;j<len;j++) { for(k=0;k<26;k++) { if(s@@ [i][j]=='@@ A'+@@ k)@@ sum@@ [k]++; } } } intmax=0,@@ count=0; char@@ maxid@@ ; for(i=0;i<26;i++) { if(sum@@ [i]>max) { max=@@ sum[i]; maxid@@ =i@@ +'A'@@ ; } } printf("%c\n%d\n",@@ maxid@@ ,max); int@@ t@@ [1000]; for(i=0;i<n;i++) { len=strlen(@@ s[i]); for(j=0;j<len;j++) { if(s@@ [i][j]==@@ maxid@@ ) { count++; t[@@ count@@ ]=@@ d[i]; } } } for(i=1;i<=@@ count@@ ;i++)@@ printf("%d\n",@@ t@@ [i]); return0; }  
c -1
h -1
void@@ main(@@ intargc@@ ,char*argv[]) { int@@ loc@@ [1000][1000]; intm,n,@@ p,q; inta; scanf("%d",&a); inti,j; for(i=0;i<a;i++) { for(j=0;j<a@@ ;j++) { scanf("%d",&@@ loc@@ [i][j]); } } for(i=0;i<a;i++) { for(j=0;j<a@@ ;j++) { if(@@ loc@@ [i][j]==0) { m=i; n@@ =j; break; } } if(@@ loc@@ [m@@ ][n@@ ]==0) { break; } } for(i=a@@ -1;i>=0;i--) { for(j=@@ a@@ -1@@ ;j>=0;j--) { if(@@ loc@@ [i][j]==0) { p=i; q@@ =j; break; } } if(@@ loc@@ [p@@ ][q@@ ]==0) { break; } } ints; s=(@@ p@@ -m@@ -1)*(@@ q@@ -@@ n-1); printf("%d\n",s); }  
c -1
h -1
0

voidf@@ (inta[],intn) { inti,j,t; for(i=0;i<n;i++) { for(j=0;j<n@@ -i-1;j++) { if(a[j]>a[j+1]) { t=a[j]; a[j]=a[j+1]; a[j+1]=t; } } } } voidmain() { intm,n,@@ a[100],b[100],@@ i; scanf("%d%d",&m,&n); for(i=0;i<m;i++) scanf("%d",&a[i]); for(i=0;i<n;i++) scanf("%d",&b[i]); f(a,@@ m); f(@@ b,@@ n); for(i=m;i<@@ m+n;i++) a[i]=b[i-@@ m]; for(i=0;i<m+@@ n-1;i++) printf("%d",a[i]); printf("%d",a[@@ m+@@ n-1]); }  
c -1
h -1
intmain() { intn,i,j,k,@@ a[@@ 20000],@@ b=0; scanf("%d",&n); for(i=0;i<n;i++)@@ scanf("%d",&a[i]); printf("%d",a[0]); for(j=1;j<@@ n;j++){ for(k=0;k<=@@ j@@ ;k++){ if(a[k]@@ !=@@ a[j])@@ b++; } if(b==@@ j)@@ printf("%d",@@ a[j]); b=0; } return0; }  
c -1
h -1
0

intmain() { inta,b,c,@@ i,@@ n=0; scanf("%d%d%d",&a,&b,&c); intm@@ [11@@ ]={31,@@ 0@@ ,31,30,31,30,31@@ ,31,30,31,30@@ }; if(a%@@ 4==0&&a%100!=0@@ ||a%@@ 100==0&&@@ a%@@ 400==0) m@@ [1]=@@ 29; else m@@ [1]=@@ 28; if(b==1) n=@@ c; else { for(i=0;i<b@@ -1;i++) n=n+@@ m[i]; n=@@ n@@ +c; } printf("%d\n",n); return0; }  
c -1
h -1
intmain() { intn,i,@@ s,@@ a,@@ c@@ =1,@@ k,@@ t; scanf("%d",&n); for(i=0;i<n@@ *@@ n;i++) { scanf("%d",&a); if(a==0) { if(c@@ ) { t=i; c=0; } k=i; } } s=(@@ k@@ %@@ n-@@ t@@ %@@ n-1)@@ *(@@ k/@@ n-@@ t@@ /@@ n-1); printf("%d",s); return0; }  
c -1
h -1
0

intmain() { inti,k,@@ row,col,@@ ROW@@ ,@@ sz@@ [100][100],@@ COL@@ ,@@ sum@@ [100]; scanf("%d",&k); for(i=0;i<k;i++) { sum@@ [i]=0; } for(i=0;i<k;i++) { scanf("%d%d",&@@ ROW@@ ,&@@ COL@@ ); for(row=0;row@@ <ROW@@ ;@@ row++) { for(col=0;col@@ <@@ COL@@ ;col@@ ++) { scanf("%d",&@@ sz[row][col@@ ]); } } if(@@ ROW@@ ==1&&@@ COL@@ ==1) { sum[i]=sum[i]+@@ sz[0][@@ 0]; } else { for(col=0;col@@ <@@ COL@@ ;col@@ ++) { sum[i]=sum[i]+@@ sz[0][@@ col@@ ]+sz[@@ ROW@@ -1@@ ][col@@ ]; } for(row@@ =1;@@ row@@ <(@@ ROW@@ -1)@@ ;@@ row++) { sum[i]=sum[i]+@@ sz[@@ row@@ ][0]+@@ sz[@@ row@@ ][@@ COL@@ -1]; } } } for(i=0;i<k;i++) { printf("%d\n",sum@@ [i]); } scanf("%d",&k); return0; }  
c -1
h -1
intmain() { intx[@@ 1000][1000]; inti=0,j=0; intn=0; int@@ a1@@ =0,@@ b1@@ =0,@@ a2@@ =0,@@ b2@@ =0; int@@ sn@@ =0; scanf("%d",&n); for(i=0;i<n;i++){ for(j=0;j<n;j++) { scanf("%d",&@@ x@@ [i][j]); } } for(i=1;i<n;i++){ for(j=1;j<n;j++) { if(x@@ [i][j]==0&&@@ x[i]@@ [j-1]@@ !=0&&@@ x@@ [i-1][j]@@ !=0){ a1@@ =i; b1@@ =j; } } } for(i=0;i<n-1;i++){ for(j=0;j<n-1;j++) { if(x@@ [i][j]==0&&@@ x[i]@@ [j+1]@@ !=0&&@@ x@@ [i+1][j]@@ !=0){ a2@@ =i; b2@@ =j; } } } sn@@ =(@@ a2-a1@@ -1)*(@@ b2-b1@@ -1); printf("%d",@@ sn@@ ); return0; }  
c -1
h -1
0

int@@ compare@@ (constvoid*a,constvoid*@@ b) { return(@@ *(int*)@@ b@@ -*@@ (int*)@@ a); } intmain() { intk,i,j,@@ m=0; scanf("%d",&k); inta[@@ 30]={0}; for(i=0;i<k;i++) { scanf("%d",&a[i]); } intb[@@ 30@@ ]={@@ 1@@ }; intt; intc[@@ 30]; for(i=1;i<k;i++) { t=0; for(j=0;j<@@ 30@@ ;j++) { c[j]@@ =0; } for(j=i-1;j>=0;j--) { if(a[j]>=@@ a[i]) { c[@@ t@@ ]=@@ b[j]; t++; } } qsort@@ (c,@@ t,@@ sizeof(int),@@ compare@@ ); b[i]=@@ c@@ [0]@@ +1; } for(i=0;i<k;i++) { if(m@@ <@@ b[i]) m=@@ b[i]; } printf("%d\n",m); getchar(); getchar(); getchar(); }  
c -1
h -1
intmain() { intn,i,@@ m,@@ save@@ [@@ 20000],@@ count=0; for(i=0;i<@@ 20000@@ ;i++) save@@ [i]=0; cin>>n; while(n--) { int@@ flag=1; cin>>m; for(i=0;i<@@ 20000@@ ;i++) {if(@@ save@@ [i]==@@ m@@ ){@@ flag@@ =0;@@ break;} } if(flag==1) { for(i=0;i<@@ 20000@@ ;i++) {if(@@ save@@ [i]@@ ==0){@@ save@@ [i]=@@ m;@@ break;}} count++; } } for(i=0;i<@@ count@@ -1;i++) cout<<@@ save@@ [i]@@ <<""; cout<<@@ save@@ [@@ count@@ -1]; return0; }  
c -1
h -1
0

voidmain() { inti,n,@@ t[@@ 27@@ ],@@ max; char@@ p,@@ a[100@@ ][@@ 27@@ ],b[100@@ ][@@ 27]; scanf("%d",&n); for(i=1;i<=@@ 26@@ ;i++)@@ t@@ [i]=0; for(i=1;i<=@@ n;i++)@@ scanf("%s%s",@@ a[i],@@ b[i]); for(p@@ ='A'@@ ;p<=@@ 'Z'@@ ;p++) for(i=1;i<=n;i++) if(@@ strchr(@@ b[i]@@ ,@@ p@@ ))@@ t@@ [p@@ -'@@ A'+@@ 1@@ ]++; max=1; for(i=2;i<=@@ 26;i++) if(t@@ [max@@ ]<@@ t@@ [i])@@ max=i; printf("%c\n",@@ p@@ ='A'+@@ max@@ -1); printf("%d\n",@@ t@@ [p@@ -'@@ A'+@@ 1@@ ]); for(i=1;i<=n;i++) if(@@ strchr(@@ b[i]@@ ,@@ p@@ ))@@ printf("%s\n",@@ a[i]); }  
c -1
h -1
intmain() { chara[500],b[500]; inti,@@ len,@@ n=0,@@ x,y; double@@ m,@@ p; scanf("%lf",&@@ m); scanf("%s%s",a,b); x@@ =strlen(a); y@@ =strlen(b); len@@ =strlen(a); for(i=0;i<len;i++) { if(a[i]@@ >'@@ Z@@ '||@@ a[i]@@ <'@@ A'@@ ) { printf("error"); return0;} } if(x@@ !=@@ y) printf("error"); else { len@@ =strlen(a); for(i=0;i<len;i++) { if(a[i]==b[i]) { n++; } } p=@@ (double)@@ n/@@ len; if(p@@ >@@ m) { printf("yes"); } elseif(@@ p@@ <=@@ m) printf("no"); } return0; }  
c -1
h -1
0

intf(inta,int@@ c); intj,@@ b; intmain() { inti,n,@@ m; scanf("%d",&n); for(i=1;i<=n;i++) { scanf("%d",&m); printf("%d\n",@@ f(@@ m,@@ 2)); } return0; } intf(inta,int@@ c) { intj,@@ b=0; for(j=@@ c@@ ;j<=@@ sqrt(@@ a)@@ ;j++) { if(a%@@ j@@ ==0) { b=@@ b+@@ f(@@ a/@@ j@@ ,j); } } return@@ b@@ +1; }  
c -1
h -1
intmain(){ inti,k,@@ n,@@ m=0,@@ L@@ ,@@ l1,l2@@ ; chars[256],@@ a[100],b[100]; scanf("%s",s); scanf("%s",a); scanf("%s",b); getchar(); L@@ =strlen(s); l1@@ =strlen(a); l2@@ =strlen(b); n=0; for(i=0;i<@@ L@@ ;i++){ if(a[0]@@ ==@@ s[i]@@ ){ n++; for(k=1;k<@@ l1@@ ;k++){ if(s@@ [i+k@@ ]==@@ a[k]@@ ){ n++; }else{ n=0; break; } } } if(n==@@ l1@@ ){ for(m=0;m<@@ l2@@ ;m++){ s@@ [i@@ +m@@ ]=@@ b[m@@ ]; } break; } } for(k=0;k<@@ i@@ +m@@ ;k++){ printf("%c",s@@ [k]); getchar(); } for(i@@ =i+@@ l1@@ ;i<@@ L@@ ;i++){ printf("%c",s[i]); getchar(); } return0; }  
c -1
h -1
0

inta[100],b[100]; intn,m; main() { voidinput@@ (void@@ ); void@@ order1@@ (void@@ ); void@@ order2@@ (void@@ ); voidoutput@@ (void@@ ); input(); order1@@ (); order2@@ (); output@@ (); } voidinput@@ (void) { inti; scanf("%d%d\n",&n,&@@ m); for(i=1;i<=n;i++) scanf("%d",&a[i]); for(i=1;i<=m;i++) scanf("%d",&b[i]); } void@@ order1@@ (void) { inti,j,t; for(i=1;i<=n-1;i++) for(j=i+1;j<=n;j++) if(a[i]>=@@ a[j]@@ ){@@ t=@@ a[i];a[i]=@@ a[j];a[j]=@@ t;} } void@@ order2@@ (void) { inti,j,t; for(i=1;i<=@@ m-1;i++) for(j=i+1;j<=@@ m;j++) if(b[i]@@ >=@@ b[j]@@ ){@@ t=@@ b[i]@@ ;@@ b[i]=b[j]@@ ;@@ b[j]=@@ t;} } voidoutput@@ (void) { inti; for(i=1;i<=n;i++) printf("%d",a[i]); for(i=1;i<m;i++) printf("%d",b[i]); printf("%d",@@ b[m@@ ]); }  
c -1
h -1
struct@@ mouse { charid[10]; intage; struct@@ mouse@@ *next; }; struct@@ mouse@@ *creat@@ (intn) { struct@@ mouse@@ *head,*p1,*p2; inti; for(i=0;i<n;i++) { if(i@@ ==1)head=p1; if(i@@ >1@@ )@@ p2->next=p1; p2=p1; p1=(struct@@ mouse@@ *)malloc(sizeof(struct@@ mouse@@ )); scanf("%s%d",@@ p1->id,&p1->age); } p2->next@@ =p1;@@ p1->next=NULL; return(head); } struct@@ mouse@@ *@@ order@@ (struct@@ mouse@@ *head@@ ,intn) { struct@@ mouse@@ *p1,*p2; inti,j,@@ x; chara[@@ 10]; for(i=1;i<n;i++) { p2=@@ head;@@ p1=@@ p2->next; for(j=0;j<n-i;j++) { if(@@ p2->age@@ <@@ p1->age@@ &&@@ p1->age@@ >=60) { x=@@ p2->age@@ ;@@ p2->age@@ =p1->@@ age@@ ;@@ p1->age@@ =@@ x; strcpy(@@ a,@@ p2->@@ id@@ );strcpy(@@ p2->@@ id,@@ p1->id@@ );strcpy(@@ p1->@@ id,@@ a); } p2@@ =p1;@@ p1=p1->next; } } return(head); } main() { struct@@ mouse@@ *head,*p; inti,n; scanf("%d",&n); head=creat(n); head=@@ order@@ (head,@@ n); p=head; for(i=0;i<n;i++) { printf("%s\n",p->id); p=p->next; } }  
c -1
h -1
0

intmain(){ double@@ m,n; inti,@@ l,@@ s=0,@@ q=0; chara[@@ 550@@ ],b[@@ 550@@ ]; scanf("%lf",&@@ m); scanf("%s",a); scanf("%s",b); l@@ =strlen(a); if(l@@ !=strlen(b@@ )){ q=1; } for(i=0;i<l;i++){ if(a[i]!='A'&&a[i]!='T'&&a[i]!='C'&&a[i]!='@@ G'){ q=1; } if(@@ b[i]!='A'&&b[i]!='T'&&b[i]!='C'&&b[i]!='@@ G'){ q=1; } } if(q@@ ==0){ for(i=0;i<l;i++){ if(a[i]==b[i]){ s@@ +=1; } } n@@ =1@@ .@@ 00@@ *@@ s/@@ l; if(m@@ <@@ n){ printf("yes"); }else{ printf("no"); } } if(q@@ ==1){ printf("error"); } return0; }  
c -1
h -1
main() { intn,i,j,a[@@ 30@@ ],b[@@ 30],@@ max=1; scanf("%d",&n); for(i=1;i<=n;i++) { scanf("%d",&@@ a[i@@ -1]); } for(i=1;i<=n;i++) { b@@ [i-1]@@ =1; } for(i=2;i<=n;i++) { for(j=1;j<=@@ i-1;j++) { if(a[@@ n-i@@ ]>=@@ a[n@@ -i@@ +j@@ ]@@ &&@@ b[@@ n-i@@ ]<=@@ b[@@ n-i@@ +j@@ ]) { b[@@ n-i@@ ]@@ =1@@ +@@ b[@@ n-i@@ +j@@ ]; } } } for(i=1;i<=n;i++) { if(b@@ [i-1]@@ >max) max=@@ b@@ [i-1]; } printf("%d",max); }  
c -1
h -1
0

intmain() { chara[501],b[501]; inti,@@ m; doublen; m=0; scanf("%lf",&n); scanf("%s",a); scanf("%s",b); int@@ p@@ =strlen(a); int@@ q@@ =strlen(b); if(p==@@ q) { for(i=0;a[i]!='\0';i++) { if(((@@ a[i]!='@@ A')&&(@@ a[i]!='@@ T')&&(@@ a[i]!='@@ C')&&(@@ a[i]!='@@ G')@@ )||((@@ b[i]!='@@ A')&&(@@ b[i]!='@@ T')&&(@@ b[i]!='@@ C')&&(@@ b[i]!='@@ G')@@ )) { printf("error"); return0; } else { if((@@ a[i]@@ )==@@ (@@ b[i]@@ )) m++; } } if((@@ 1.0*@@ m/@@ (p@@ *1.0@@ ))@@ >=@@ n) { printf("yes"); } else{printf("no");} } else { printf("error"); } return0; }  
c -1
h -1
intmain(){ intl,@@ a,b,@@ s,@@ i; doublen,@@ x; char@@ zfca@@ [501]; char@@ zfcb@@ [501]; a=0; b=0; scanf("%lf",&n); scanf("%s",@@ zfca@@ ); scanf("%s",@@ zfcb@@ ); int@@ la@@ =strlen(@@ zfca@@ ); int@@ lb@@ =strlen(@@ zfcb@@ ); if(@@ la@@ !=@@ lb@@ ){@@ printf("error");} else{@@ a@@ =1;} if(a@@ ==1){ while(1){ for(i=0;@@ zfca@@ [i]!='\0';i++){ if(@@ zfca@@ [i]!='A'&&@@ zfca@@ [i]!='T'&&@@ zfca@@ [i]!='C'&&@@ zfca@@ [i]!='G'){ printf("error"); break;}} if(@@ zfca@@ [i]!=@@ '\0@@ '&&@@ zfca@@ [i]!='A'&&@@ zfca@@ [i]!='T'&&@@ zfca@@ [i]!='C'&&@@ zfca@@ [i]!='G')@@ {break;} for(i=0;@@ zfcb@@ [i]!='\0';i++){ if(@@ zfcb@@ [i]!='A'&&@@ zfcb@@ [i]!='T'&&@@ zfcb@@ [i]!='C'&&@@ zfcb@@ [i]!='G'){ printf("error"); break;}} if(@@ zfcb@@ [i]==@@ '\0')@@ {@@ b@@ =1;} break; }} if(a@@ ==1&&@@ b@@ ==1){ for(i=0,@@ s=0;@@ zfca@@ [i]!='@@ 0'@@ ;i++) {if(@@ zfca@@ [i]==@@ zfcb@@ [i]@@ ){@@ s=s@@ +1;@@ }} if(a@@ ==1&&@@ b@@ ==1){@@ x@@ =1.0*@@ s/@@ la@@ ; if(x>@@ n@@ ){printf("yes");} else{printf("no");} } } return0; }  
c -1
h -1
1


intmain() { intm,i,j,@@ num[@@ 999@@ ],@@ store@@ [26@@ ][@@ 999@@ ]={0},@@ cal@@ [26]={0},@@ max=0,@@ maxnum@@ ; char@@ au@@ [@@ 999@@ ][@@ 26]; cin>>m; for(i=0;i<=@@ m-1;i++) { cin>>num[i]; cin.get(); cin.getline(@@ au@@ [i],@@ 26@@ ); for(j=0;;j++) { if(au@@ [i][j]==@@ '\0') break; else { store@@ [@@ au@@ [i][j]@@ -'A'@@ ][@@ cal@@ [@@ au@@ [i][j]@@ -'A'@@ ]@@ ]=@@ num[i]; cal@@ [@@ au@@ [i][j]@@ -'A']++; } } } for(i=0;i<=25;i++) { if(@@ cal@@ [i]>max) { max=@@ cal@@ [i]; maxnum@@ =i; } } char@@ t=@@ 'A'@@ +@@ maxnum@@ ; cout<<t@@ <<endl@@ <<@@ max<<endl; for(i=0;i<@@ max@@ ;i++) { cout<<@@ store@@ [@@ maxnum@@ ]@@ [i]<<endl; } return0; }  
c -1
h -1
structbook { intnum; charname[26]; structbook*next; }; structbook*@@ creat@@ (intm) { structbook@@ *head,*p1,*p2; p1=(structbook@@ *)malloc(sizeof(structbook)); scanf("%d%s",&p1->num,p1->name); inti; for(i=1;i<m;i++) { if(i@@ ==1)head=p1; elsep2->next=p1; p2=p1; p1=(structbook@@ *)malloc(sizeof(structbook)); scanf("%d%s",&p1->num,p1->name); } p2->next@@ =p1;@@ p1->next=NULL; return(head); } main() { structbook@@ *head,*p; inti,j,@@ m,@@ k,@@ l,@@ max=0; scanf("%d",&m); head=creat@@ (m); int*@@ a; a=@@ (int*)malloc(@@ 26@@ *sizeof(int)); for(i=0;i<26;i++) *(a+i)@@ =0; p=head; for(i=0;i<m;i++) { k=strlen(@@ p->@@ name); for(j=0;j<k;j++) for(l=0;l<@@ 26@@ ;l++) if(*(@@ p->@@ name@@ +j)@@ ==@@ l@@ +65) (@@ *(a+@@ l@@ ))@@ ++; p=p->next; } for(i=0;i<26;i++) if(max@@ <*@@ (a@@ +i)@@ )@@ max@@ =*@@ (a@@ +i); for(i=0;i<26;i++) if(max@@ ==@@ *(a+i)@@ ){@@ printf("%c\n%d\n",@@ i@@ +65@@ ,@@ max@@ );break;} p=head; for(j=0;j<m;j++) { k=strlen(@@ p->@@ name); for(l=0;l<@@ k;@@ l++) if(*(@@ p->@@ name@@ +l@@ )==@@ i@@ +65) printf("%d\n",p->num); p=p->next; } }  
c -1
h -1
1


structbook { intnum; charauthor@@ [27]; }@@ book[1000]; intmain() { intn,i,@@ a,@@ max=0,@@ alp@@ [26]={0}; char*@@ j; scanf("%d",&n); for(i=0;i<n;i++) { scanf("%d%s",&book[i].num,@@ book[i].author); int@@ len=strlen(@@ book[i].author); for(j=@@ book[i].author@@ ;j<@@ (@@ book[i].author@@ +@@ len@@ );j++) { intx@@ =*@@ j; ++@@ *(@@ alp@@ +@@ x@@ -65@@ ); if(*(@@ alp@@ +@@ x@@ -65@@ )@@ >max) { max@@ =*(@@ alp@@ +@@ x@@ -65@@ ); a=@@ x; } } } printf("%c\n%d\n",@@ a,@@ max); for(i=0;i<n;i++) { int@@ len=strlen(@@ book[i].author); for(j=@@ book[i].author@@ ;j<@@ (@@ book[i].author@@ +@@ len@@ );j++) { if(@@ (int)@@ *@@ j==@@ a) printf("%d\n",book[i].@@ num); } } return0; }  
c -1
h -1
ints[@@ 100001@@ ]; intmain() { intn,i,j; scanf("%d",&n); struct{ int@@ id,@@ chin@@ ,@@ math@@ ,@@ su@@ ; }@@ s[@@ 100001@@ ]; for(i=0;i<n;i++) { scanf("%d%d%d",&@@ s[i].@@ id,&@@ s[i].@@ chin@@ ,&@@ s[i].@@ math); s[i].@@ su@@ =@@ s[i].@@ chin@@ +@@ s[i].@@ math; } for(i=0;i<3;i++) { for(j=i+1;j<n;j++) { if(s@@ [i].@@ su@@ <@@ s[j].@@ su@@ ) { s[@@ 100000@@ ]=@@ s[i]; s[i]=@@ s[j]; s[j]=@@ s[@@ 100000]; } } } printf("%d%d\n%d%d\n%d@@ %d",@@ s@@ [0].@@ id,@@ s@@ [0].@@ su@@ ,@@ s[1].@@ id,@@ s[1].@@ su@@ ,@@ s[2@@ ].id,@@ s[2].@@ su@@ ); return0; }  
c -1
h -1
0

intmain(){ intn,k,i,@@ t,@@ e@@ ,j,@@ h=0; inta[1000]; scanf("%d%d",&n,&k); for(i=0;i<n;i++){ scanf("%d",&a[i]); } for(i=0;i<n;i++){ for(t=0;t@@ <n@@ -i@@ -1;@@ t++){ if(a[@@ t@@ ]<@@ a[t@@ +1@@ ]){ e=@@ a[t@@ +1]; a[t@@ +1@@ ]=a[@@ t@@ ]; a[t@@ ]=@@ e; } } } for(i=0;i<n;i++){ for(j=i+1;j<n;j++){ if(a[i]==a[j]@@ ){ continue; } if(a[i]+a[j]==@@ k){ h@@ ++; } } } if(h@@ ==0){ printf("no"); }else{ printf("yes"); } return0; }  
c -1
h -1
intmain() { introw,col,@@ array@@ [100][100],@@ i,j,@@ temp=0; cin>>row>>col; for(i=0;i<row;i++) { for(j=0;j<col;j++) { cin>>array[i][j]; } } while(@@ temp@@ <col) { j=@@ temp; i=0; while(i@@ <row@@ &&j@@ >=0) { cout<<array@@ [i@@ ++@@ ]@@ [j@@ --@@ ]<<endl; } temp@@ ++; } if(row@@ >1) { temp@@ =1; while(@@ temp@@ <row) { j=col-1; i=@@ temp; while(i@@ <row@@ &&j@@ >=0) { cout<<array@@ [i@@ ++@@ ]@@ [j@@ --@@ ]<<endl; } temp@@ ++; } } return0; }  
c -1
h -1
0

intmain() { intn,i,@@ k; inta[@@ 1000]={0}; intb[@@ 10000@@ ]={0}; scanf("%d%d",&n,&k); for(i=1;i<=n;i++) {@@ scanf("%d",&a[i]); b[@@ a[i]@@ ]=1; } for(i=1;i<=n;i++) if(@@ b[k@@ -@@ a[i]@@ ]@@ ==1&&@@ k-@@ a[i]@@ >0@@ ){@@ printf("yes");@@ return0;} printf("no"); return0; }  
c -1
h -1
intmain(intargc@@ ,@@ const@@ char*@@ argv[]) { double@@ rate@@ ; char@@ gen1@@ [500],@@ gen2@@ [500]; cin>>@@ rate@@ >>@@ gen1@@ >>@@ gen2@@ ; int@@ len1=strlen(@@ gen1@@ ),@@ len2=strlen(@@ gen2@@ ),@@ S@@ =0; if(len1!=@@ len2){ cout<<"@@ error@@ "<<endl; return0; } for(inti=0;i<@@ len1@@ ;i++){ if((@@ gen2@@ [i]!='A'&&@@ gen2@@ [i]!='T'&&@@ gen2@@ [i]!='C'&&@@ gen2@@ [i]!='G')||(@@ gen1@@ [i]!='A'&&@@ gen1@@ [i]!='T'&&@@ gen1@@ [i]!='C'&&@@ gen1@@ [i]!='G')){ cout<<"@@ error@@ "<<endl; return0; } if(@@ gen1@@ [i]==@@ gen2@@ [i]){ S@@ ++; } } double@@ R@@ ; R@@ =(double)@@ S@@ /@@ len1; if(@@ R@@ >=@@ rate@@ ){ cout<<"yes@@ "<<endl; return0; } else { cout<<"no@@ "<<endl; return0; } return0; }  
c -1
h -1
0

int@@ ans; void@@ dfs@@ (int,int); intmain() { intn,@@ num; cin>>n; while(n@@ --){ cin>>num; ans=0; dfs@@ (num,@@ 2); cout<<ans@@ <<endl; } return0; } void@@ dfs@@ (intx,int@@ f@@ ) { if(x@@ ==1){ ++@@ ans; return; } for(inti=@@ f@@ ;i<=@@ x@@ ;++i) if(x%i==0) dfs@@ (x/i,i); return; }  
c -1
h -1
structstudent { charnum[10]; intyuwen; intshuxue; intsum; }; intmain() { intn,i; scanf("%d",&n); structstudent@@ a[@@ 100000]; structstudent@@ s[@@ 3@@ ]; structstudent@@ k; for(i=0;i<n;i++) { scanf("%s%d%d",@@ a[i].@@ num,&@@ a[i].@@ yuwen@@ ,&a[i].@@ shuxue); a[i].@@ sum=@@ a[i].@@ yuwen@@ +a[i].@@ shuxue; } s[@@ 0]=@@ a[0]; s@@ [1]=@@ a[0]; s[1].@@ sum=0; s[2@@ ]=@@ a[0]; s[2].@@ sum=0; for(i=1;i<n;i++) { if(a[i].@@ sum>@@ s[2].@@ sum@@ &&@@ a[i].@@ sum<=@@ s[1].@@ sum@@ ){@@ s[2@@ ]=@@ a[i];} if(a[i].@@ sum>@@ s[1].@@ sum@@ &&@@ a[i].@@ sum<=@@ s@@ [0].@@ sum@@ ){@@ s[2@@ ]=@@ s[1]@@ ;s@@ [1]=@@ a[i];} if(a[i].@@ sum>@@ s@@ [0].@@ sum@@ ){@@ s[2@@ ]=@@ s[1]@@ ;s@@ [1]=@@ s[0]@@ ;@@ s[@@ 0]=@@ a[i];} } for(i=0;i<3;i++) { printf("%s%d\n",@@ s[i].@@ num,@@ s[i].@@ sum); } getchar();@@ getchar(); }  
c -1
h -1
0

intm@@ [100],@@ n@@ [100@@ ],*@@ p,*@@ q,@@ a,b; voidinput() { p=@@ m;@@ q=@@ n; inti; scanf("%d%d",&a,&b); for(i=0;i<@@ a@@ ;i++,@@ p++) { scanf("%d",@@ p); } for(i=0;i<b@@ ;i++,@@ q++) { scanf("%d",@@ q); } p=@@ m;@@ q=@@ n; } voidsort@@ (int*p,int@@ a) { inti,j,temp; for(i=0;i<@@ a@@ -1;i++) { for(j=0;j<a@@ -i-1;j++) { if(p@@ [j]>@@ p@@ [j+1]) { temp=@@ p@@ [j]@@ ;p@@ [j]=@@ p@@ [j+1]@@ ;p@@ [j+1]=temp; } } } } void@@ mix@@ () { inti; for(i=0;i<b;i++) { p@@ [a@@ +i]=@@ q@@ [i]; } } voidoutput@@ () { inti; for(i=0;i<@@ a+@@ b@@ -1;i++) { printf("%d",@@ *(p@@ ++@@ )); } printf("%d\n",@@ *p@@ ); } main() { input(); sort(@@ p,@@ a); sort(@@ q,@@ b); mix@@ (); output@@ (); return0; }  
c -1
h -1
long@@ intn; structstu { long@@ intnum,@@ chi@@ ,@@ mat@@ ,@@ tot@@ ; }; int@@ comp@@ (constvoid*a,constvoid*@@ b) { return(@@ (struct@@ stu@@ *)@@ b)@@ ->@@ tot@@ -(@@ (struct@@ stu@@ *)@@ a)@@ ->@@ tot@@ ; } structstu@@ a[@@ 100000],@@ b; intmain() { inti,j; scanf("%d",&n); for(i=0;i<n;i++) { scanf("%d%d%d",&a[i].@@ num,&@@ a[i].@@ chi@@ ,&a[i].@@ mat@@ ); a[i].@@ tot@@ =@@ a[i].@@ chi@@ +a[i].@@ mat@@ ; } qsort@@ (a,n,@@ sizeof(struct@@ stu@@ ),@@ comp@@ ); for(i=0;i<3;i++) printf("%d%d\n",@@ a[i].@@ num,@@ a[i].@@ tot@@ ); return0; }  
c -1
h -1
0

intmain() { intm; cin>>m; intnum[@@ 1001]; charname@@ [@@ 1001@@ ][@@ 27]; for(inti=0;i<@@ m;@@ ++@@ i) { cin>>num[i]; cin.get(); cin.getline(@@ name@@ [i],@@ 27@@ ); } intcount@@ [100@@ ];@@ memset(@@ count@@ ,0,sizeof(@@ count@@ )); int@@ record@@ [@@ 27@@ ][@@ 1000]; int@@ start@@ =0; inti,j; char@@ call@@ ; for(i=0;i<m;i++) { for(j=0;j<strlen(@@ name@@ [i]@@ );j++) { count[@@ name@@ [i][j]@@ ]++; } } intmax=0,@@ k=0; char@@ t; for(@@ char@@ w=@@ 'A'@@ ;@@ w@@ <=@@ 'Z'@@ ;@@ w@@ ++) { if(count@@ [@@ (int)@@ w@@ ]@@ >max) {max=@@ count[@@ (int)@@ w@@ ]; t=@@ w; } } cout<<t@@ <<endl; cout<<max<<endl; for(i=0;i<m;i++) { for(j=0;j<strlen(@@ name@@ [i]@@ );j++) { if(name@@ [i][j]==@@ t) {@@ cout<<@@ num[i]@@ <<endl@@ ;@@ continue;} } } return0; }  
c -1
h -1
intmain() { introw,col,@@ a[100][100],@@ i,j,@@ m,@@ M@@ ,@@ k; scanf("%d%d",&row,&col); for(i=0;i<row;i++){ for(j=0;j<col;j++) scanf("%d",&a[i][j]); } if(row@@ >@@ col@@ ){@@ M@@ =@@ row@@ ;@@ m=@@ col@@ ;} else{@@ M@@ =@@ col@@ ;@@ m=@@ row@@ ;} for(k=0;k<@@ m@@ ;k++){ for(i=0;i<=@@ k;i++) printf("%d\n",a[i]@@ [k-i]); } if(row@@ >@@ col@@ ){ for(k=0;k<@@ M@@ -m@@ ;k++){ for(i=0;i<m;i++) printf("%d\n",@@ a[i@@ +k@@ +1@@ ][m@@ -i@@ -1]); } } else{ for(k=0;k<@@ M@@ -m@@ ;k++){ for(i=0;i<m;i++) printf("%d\n",a[i]@@ [m@@ -i@@ +k@@ ]); } } for(k=1;k<@@ m@@ ;k++){ for(i=0;i<m@@ -@@ k;i++) printf("%d\n",a[@@ row@@ -m@@ +i@@ +k@@ ][col@@ -i@@ -1]); } return0; }  
c -1
h -1
0

void@@ get@@ (intm,int@@ n); void@@ swap@@ (intm,int@@ n); void@@ put@@ (intm,int@@ n); inta[@@ 1001@@ ],b[@@ 1001]; voidmain() { intm,n; scanf("%d%d",&m,&n); get@@ (@@ m,n); swap(@@ m,n); put@@ (@@ m,n); } void@@ get@@ (intm,int@@ n) { inti; for(i=0;i<m;i++) scanf("%d",&a[i]); for(i=0;i<n;i++) scanf("%d",&b[i]); } void@@ swap@@ (intm,int@@ n) { intj,@@ k,@@ c; for(j=0;j<m-1;j++) for(k=0;k<@@ m-1@@ -j@@ ;k++) if(a[k]@@ >@@ a[k@@ +1@@ ]){ c=@@ a[k]; a[k]=a[k@@ +1]; a[k@@ +1]=@@ c; } for(j=0;j<n-1;j++) for(k=0;k<@@ n-1@@ -j@@ ;k++) if(@@ b[k@@ ]>@@ b[k@@ +1@@ ]){ c=@@ b[k@@ ]; b[k]=@@ b[k@@ +1]; b[k@@ +1]=@@ c; } } void@@ put@@ (intm,int@@ n) { int@@ l; for(l=0;l<@@ m;@@ l++) printf("%d",@@ a[l@@ ]); for(l=0;l<n;@@ l++){ if(l@@ ==@@ n-1) printf("%d",@@ b[l@@ ]); else printf("%d",@@ b[l@@ ]); } }  
c -1
h -1
structpatient { charID@@ [11]; intage; }@@ pa@@ [100]; intmain(intargc,char*argv[]) { intn,i; scanf("%d",&n); for(i=0;i<n;i++) { scanf("%s%d",@@ pa@@ [i].@@ ID,&@@ pa@@ [i].age); } structpatient@@ old@@ [100]; intcount=0; for(i=0;i<n;i++) { if(pa@@ [i].age>=60) { strcpy(old@@ [@@ count@@ ].ID,@@ pa@@ [i].ID); old@@ [@@ count@@ ].age=@@ pa@@ [i].age; count++; pa@@ [i].age@@ =0; } } intk,@@ j,@@ e; char@@ ex@@ [11]; for(k=1;k<@@ count@@ ;k++) { for(j=0;j<@@ count@@ -@@ k;j++) { if(old@@ [j].age@@ <@@ old@@ [j+1@@ ].age) { e=@@ old@@ [j+1].@@ age; old@@ [j+1@@ ].age=@@ old@@ [j].@@ age; old@@ [j].age@@ =@@ e; strcpy(@@ ex@@ ,@@ old@@ [j].@@ ID); strcpy(old@@ [j].@@ ID,@@ old@@ [j+1].@@ ID); strcpy(old@@ [j+1].@@ ID,@@ ex@@ ); } } } for(i=0;i<@@ count@@ ;i++) { printf("%s\n",old@@ [i].ID); } for(i=0;i<n;i++) { if(pa@@ [i].age@@ !=0) { printf("%s\n",@@ pa@@ [i].ID); } } return0; }  
c -1
h -1
0

intmain() { intcount@@ (intx,int@@ y); inti,j,n,@@ a[100],b[100]; scanf("%d",&n); for(i=1;i<=n@@ ;i++){@@ scanf("%d",&a[i]);} for(i=1;i<=n;i++){ b[i]=0; for(j=2;j<=@@ a[i]@@ ;j++){ b[i]@@ +=@@ count@@ (@@ a[i]@@ ,j); } } for(i=1;i<=n@@ ;i++){@@ printf("%d\n",@@ b[i]@@ );} return0; } intcount@@ (intx,inty) { int@@ c=0,@@ k; if(x==@@ y@@ ){@@ c@@ =1;} if(x%@@ y@@ !=0@@ ){@@ c@@ =0;} if(x@@ !=@@ y@@ &&@@ x%@@ y@@ ==0){ for(k=@@ y@@ ;k@@ >=@@ 2@@ ;k@@ --@@ ){@@ c@@ +=@@ count@@ (@@ (x@@ /@@ y@@ ),@@ k@@ );} } return(@@ c); }  
c -1
h -1
intmain() { inta[@@ 20000],@@ t@@ ,j,@@ m,@@ i,@@ asd@@ ; scanf("%d",&m); for(i=0;i<m;i++) {@@ t=1; scanf("%d",&a[i]); if(i==0) {printf("%d",@@ a[i]);} elseif(@@ i@@ !=0) { for(j=0;j<i;j++) {@@ asd@@ =@@ a[i]@@ -@@ a[j]; if(@@ asd@@ ==0) {@@ t=0; break;} }@@ if(t@@ ==1) printf("%d",a[i]); } } printf("\n"); return0; }  
c -1
h -1
0

intmain(){ double@@ a; int@@ i,j@@ =0; char@@ dna1@@ [501],@@ dna2@@ [501]; scanf("%lf",&a); scanf("%s",&@@ dna1); scanf("%s",&@@ dna2); int@@ len1=strlen(@@ dna1); int@@ len2=strlen(@@ dna2); if(len1!=@@ len2){ printf("error"); return0; } for(i=0;i<len1;i++){ if((@@ dna1@@ [i]!='A'&&@@ dna1@@ [i]!='T'&&@@ dna1@@ [i]!='G'&&@@ dna1@@ [i]!='@@ C')||(@@ dna1@@ [i]!='A'&&@@ dna1@@ [i]!='T'&&@@ dna1@@ [i]!='C'&&@@ dna1@@ [i]!='G')){ printf("error"); return0; } } for(i=0;i<len1;i++){ if(dna1@@ [i]==@@ dna2@@ [i]){ j++; } } if(1.0*@@ j@@ /@@ len1@@ >@@ a){ printf("yes"); }else{ printf("no"); } return0; }  
c -1
h -1
intmain() { int@@ DJT@@ =0; int@@ D@@ [12@@ ]; D@@ [0]=@@ 31; D@@ [1]=@@ 28; D@@ [2@@ ]=31; D@@ [3@@ ]=30; D@@ [4@@ ]=31; D@@ [5@@ ]=30; D@@ [@@ 6@@ ]=31; D@@ [@@ 7@@ ]=31; D@@ [@@ 8@@ ]=30; D@@ [@@ 9@@ ]=31; D@@ [10@@ ]=30; D@@ [11@@ ]=31; intyear,month,day; scanf("%d%d%d",&year,&month,&day); if(year%@@ 400==0) D@@ [1]=@@ D@@ [1]@@ +1; elseif(@@ year%100!=0@@ &&@@ year%@@ 4==0) D@@ [1]=@@ D@@ [1]@@ +1; else D@@ [1]=@@ D@@ [1]; for(inti=0;i<@@ month-1;i++) DJT@@ =@@ DJT@@ +@@ D@@ [i]; DJT@@ =@@ DJT@@ +day; printf("%d\n",@@ DJT@@ ); return0; }  
c -1
h -1
0

int@@ factorize@@ (intm,int@@ k) { int@@ c=1; if(m@@ <@@ 4)@@ return1; for(inti=@@ k@@ ;i<=sqrt(@@ m)@@ ;i++)@@ if(!@@ (m@@ %i@@ ))@@ c@@ +=@@ factorize@@ (m@@ /i,@@ k@@ >@@ i@@ ?@@ k@@ :@@ i); return@@ c; } intmain(intargc@@ ,char*@@ argv@@ [@@ ]){ intn,m; cin>>n; while(n@@ --){ cin>>m; cout<<@@ factorize@@ (m,@@ 2)<<endl; } return0;}  
c -1
h -1
main() { intk,m,n,@@ a[100][100],@@ i,j,@@ sum; scanf("%d",&k); for(@@ ;k@@ >0@@ ;k--) { scanf("%d%d",&m,&n); sum=0; for(i=0;i<m;i++) for(j=0;j<n;j++) a[i][j]@@ =0; for(i=0;i<m;i++) for(j=0;j<n;j++) scanf("%d",&a[i][j]); for(j=0;j<n;j++) sum=sum+@@ a[0]@@ [j]+@@ a[m-1][j]; for(i=1;i<m-1;i++) sum=sum+@@ a[i][0]+@@ a[i][n-1]; printf("%d\n",sum); } }  
c -1
h -1
0

intmain() { intn,i; cin>>n; for(i=0;i<n;i++) { int@@ p,q,@@ i,j; cin>>@@ p@@ >>@@ q; inta[@@ p@@ ][q@@ ],@@ sum=0; for(i=0;i<p@@ ;i++) { for(j=0;j<@@ q@@ ;j++) { cin>>a[i][j]; } } for(i=0;i<@@ q@@ ;i++) { sum=sum+@@ a[0]@@ [i]+@@ a[p@@ -1]@@ [i]; } for(j=0;j<@@ p@@ ;j++) { sum=sum+@@ a[j]@@ [0]+@@ a[j]@@ [q@@ -1]; } sum=sum-@@ a[0][0]@@ -@@ a[0][@@ q@@ -1]@@ -@@ a[p@@ -1@@ ][0]-@@ a[p@@ -1@@ ][q@@ -1]; cout<<sum<<endl; } return0; }  
c -1
h -1
intmain() { inti,j,@@ e=0,@@ k,@@ l=0; chara[@@ 260@@ ]={'\0'},@@ b[@@ 260@@ ]={'\0'},@@ c[@@ 260@@ ]={'\0'}; scanf("%s%s%s",@@ b,@@ a,@@ c); for(i=0;i<@@ strlen(b@@ );i++){ if(b[i]==@@ a[0]@@ ){ for(j=0;j<@@ strlen(a)@@ ;j++){ if(b@@ [i+j]!=@@ a[j]@@ ){ e=1; } } if(e@@ ==0){@@ k@@ =i;@@ l@@ =1;break;} else@@ e=0; } } if(l@@ ==1){ for(i=0;i<k;i++){ printf("%c",@@ b[i]); } printf("%s",@@ c); for(i=k@@ +@@ strlen(a)@@ ;i<@@ strlen(b@@ );i++){ printf("%c",@@ b[i]); }} else printf("%s",@@ b); return0; }  
c -1
h -1
0

intmain(){ intn,k,i,@@ a,@@ sum,@@ d; scanf("%d%d",&n,&k); int*@@ sz =@@ (int*)malloc(sizeof(int)*n); for(i=0;i<n;i++){ scanf("%d",&sz[i]); } for(i=0;i<n-1;i++){ a@@ =i+1; for(a@@ ;a@@ <n;@@ a++){ sum=@@ sz[i]@@ +@@ sz[a@@ ]; if(sum@@ ==k){ d=1; } } } if(d@@ ==1){ printf("yes"); }else{ printf("no"); } free(@@ sz@@ ); return0; }  
c -1
h -1
intmain(){ inta[@@ 101@@ ],b[@@ 20000],@@ n,@@ i; for(i=0;i<@@ 101@@ ;i=i+1@@ ){ a[i]=0; } cin>>n; cin>>@@ b[0]; cout<<@@ b[0]; a[@@ b[0]@@ ]=1; for(i=1;i<n;i++){ cin>>b[i]; if(a[@@ b[i]@@ ]==0){ cout<<""<<@@ b[i]; a[@@ b[i]@@ ]=1; } } return0; }  
c -1
h -1
0

intmain(){ inti; doublen,@@ p=0,@@ a,b,@@ m=0; chars1@@ [500],@@ s2@@ [500]; scanf("%lf",&n); scanf("%s",@@ s1); scanf("%s",@@ s2); a=strlen(@@ s1); for(i=0;i<a;i++){ if((@@ s1@@ [i]!='A'&&@@ s1@@ [i]!='T'&&@@ s1@@ [i]!='C'&&@@ s1@@ [i]!='G')||(@@ s2@@ [i]!='A'&&@@ s2@@ [i]!='T'&&@@ s2@@ [i]!='C'&&@@ s2@@ [i]!='G')){ m=1; break; } if(s1[i]==s2@@ [i]){ p++; } } if(m@@ ==1){ printf("error"); }else{ b=@@ p@@ /@@ a; if(b@@ >n){ printf("yes"); }else{ printf("no"); } } return0; }  
c -1
h -1
intmain(){ intage@@ [N@@ ],@@ n,@@ i,@@ k; charid@@ [N@@ ][@@ LEN@@ ]; scanf("%d",&n); for(i=0;i<n;i++){ scanf("%s%d",@@ id@@ [i],@@ &@@ (@@ age@@ [i]@@ )); } int@@ e@@ ;@@ char@@ e_id@@ [@@ LEN@@ ]; for(k=1;k<=@@ n;k++){ for(i=0;i<n-@@ k;i++){ if((@@ age@@ [i]<@@ age@@ [i+1]@@ &&@@ age@@ [i]@@ >=60@@ )||(@@ age@@ [i]@@ <60&&@@ age@@ [i+1]@@ >=60@@ )){ e=@@ age@@ [i+1]; strcpy(@@ e_id@@ ,@@ id@@ [i+1]); age@@ [i+1]=@@ age[i]; strcpy(id@@ [i+1],@@ id[i]); age@@ [i]=@@ e; strcpy(id@@ [i],@@ e_id@@ ); } } } for(i=0;i<n;i++){ printf("%s\n",@@ id[i]); } return0; }  
c -1
h -1
0

voidmain() { intn,k; ints=0; inti,j; inta[1000]; scanf("%d%d",&n,&k); for(i=0;i<n;i++) { scanf("%d",&a[i]); } for(i=0;i<n;i++) { j=0; while(j@@ <n) { if(i==@@ j) { j++; continue; } else { s=@@ a[i]+a[j]; j++; if(k==@@ s) { printf("yes"); goto@@ label@@ ; } }; }; if((@@ i==@@ n-1@@ )&&(@@ s@@ !=@@ k@@ )) printf("no"); } label@@ : return(0); }  
c -1
h -1
intmain() { structstudent { intnum,@@ ch@@ ,@@ ma@@ ,@@ grade@@ ; }@@ sum[@@ 100000],@@ h,@@ m,@@ t; inti,n; scanf("%d",&n); for(i=0;i<n;i++) { scanf("%d%d%d",&@@ sum@@ [i].@@ num,@@ &@@ sum@@ [i].@@ ch@@ ,&@@ sum@@ [i].@@ ma@@ ); sum@@ [i].@@ grade@@ =@@ sum@@ [i].@@ ch@@ +@@ sum@@ [i].@@ ma; } h@@ .@@ grade@@ =@@ m@@ .@@ grade@@ =@@ t@@ .@@ grade@@ =0; for(i=0;i<n;i++) { if(sum@@ [i].@@ grade@@ >@@ h@@ .@@ grade@@ ) { t=@@ m; m=@@ h; h=@@ sum[i]; } elseif(@@ sum@@ [i].@@ grade@@ >@@ m@@ .@@ grade@@ ) { t=@@ m; m=@@ sum[i]; } elseif(@@ sum@@ [i].@@ grade@@ >@@ t@@ .@@ grade@@ ) t=@@ sum[i]; } printf("%d%d\n%d%d\n%d%d\n",@@ h@@ .num,@@ h@@ .@@ grade@@ ,@@ m@@ .num,@@ m@@ .@@ grade@@ ,@@ t@@ .num,@@ t@@ .@@ grade@@ ); return0; }  
c -1
h -1
0

const@@ intN@@ =@@ 30; inta[@@ N]; int@@ len@@ [N]; intmain() { intk; inti,j; int@@ max; scanf("%d",&k); for(i=0;i<k;i++) { scanf("%d",&a[i]); } len@@ [0]=1; for(i=1;i<k;i++) { max=1; for(j=0;j<i;j++) { if(a[j]>@@ a[i]&&@@ max@@ <@@ len@@ [j]) { max=@@ len@@ [j]; } } len@@ [i]=@@ max+1; } max@@ =-1; for(i=0;i<k;i++) { if(max<@@ len@@ [i]) { max=@@ len@@ [i]; } } printf("%d\n",max); return0; }  
c -1
h -1
structstudent{ intnum; int@@ scorec@@ ; int@@ scorem@@ ; int@@ score; }; intmain(){ intn; inti; structstudent@@ stu[@@ 100001@@ ]; int@@ best@@ [2][@@ 3@@ ]={@@ {@@ 0,0,@@ 0},{@@ 0,0,@@ 0@@ }@@ }; cin>>n; for(i=1;i<=n;i++) { cin>>@@ stu[i].@@ num@@ >>stu[i].@@ scorec@@ >>stu[i].@@ scorem@@ ; stu[i].@@ score@@ =stu[i].@@ scorec@@ +stu[i].@@ scorem@@ ; } for(i=1;i<=n;i++) { if(stu[i].@@ score@@ >@@ best@@ [1@@ ][0]@@ ) { best@@ [0][@@ 2@@ ]=@@ best@@ [0][@@ 1@@ ]; best@@ [0][@@ 1@@ ]=@@ best@@ [0][@@ 0]; best@@ [0][@@ 0]=@@ stu[i].@@ num; best@@ [1@@ ][2@@ ]=@@ best@@ [1@@ ][1@@ ]; best@@ [1@@ ][1@@ ]=@@ best@@ [1@@ ][0]; best@@ [1@@ ][@@ 0]=@@ stu[i].@@ score; } elseif(@@ stu[i].@@ score@@ <=@@ best@@ [1@@ ][0]@@ &&stu[i].@@ score@@ >@@ best@@ [1@@ ][1@@ ]) { best@@ [0][@@ 2@@ ]=@@ best@@ [0][@@ 1@@ ]; best@@ [0][@@ 1@@ ]=@@ stu[i].@@ num; best@@ [1@@ ][2@@ ]=@@ best@@ [1@@ ][1@@ ]; best@@ [1@@ ][1@@ ]=@@ stu[i].@@ score; } elseif(@@ stu[i].@@ score@@ <=@@ best@@ [1@@ ][1@@ ]@@ &&stu[i].@@ score@@ >@@ best@@ [1@@ ][2@@ ]) { best@@ [0][@@ 2@@ ]=@@ stu[i].@@ num; best@@ [1@@ ][2@@ ]=@@ stu[i].@@ score; } } for(i=0;i<3;i++) cout<<@@ best@@ [0]@@ [i]@@ <<''<<@@ best@@ [1]@@ [i]<<endl; return0; }  
c -1
h -1
0

intmain() { chars1@@ [@@ 505@@ ],@@ s2[@@ 505@@ ]; doublen,@@ m=0,@@ len1,len2,@@ flag=0; inti; scanf("%lf",&n); scanf("%s",@@ s1); scanf("%s",@@ s2); len1=strlen(@@ s1); len2=strlen(@@ s2); for(i=0;i<len1;i++) { if((@@ s1@@ [i]=='@@ A')||(@@ s1@@ [i]=='@@ T')||(@@ s1@@ [i]=='@@ C')||(@@ s1@@ [i]=='@@ G')) continue; else { flag=1; break; } } for(i=0;i<@@ len2@@ ;i++) { if((@@ s2@@ [i]=='@@ A')||(@@ s2@@ [i]=='@@ T')||(@@ s2@@ [i]=='@@ C')||(@@ s2@@ [i]=='@@ G')) continue; else { flag=1; break; } } if((@@ len1@@ !=@@ len2@@ )||(@@ flag@@ ==1@@ )) { printf("error"); } else { for(i=0;i<=@@ len1@@ ;i++) { if(s1[i]==s2@@ [i]) { m++; } } m=m@@ /@@ len1; if(m@@ >n) printf("yes"); else printf("no"); } return0; }  
c -1
h -1
void@@ turn@@ (inta[],intn) { int@@ temp,@@ i,j; for(j=1;j<n;j++) { for(i=0;i<n@@ -j;i++) { if(a[i]>a[i+1]) { temp=a[i]; a[i]=a[i+1]; a[i+1]=@@ temp; } } } for(i=0;i<n;i++) { printf("%d",a[i]); if(i<@@ n-1) printf(""); } } intmain() { intx,y,@@ i; intb[100@@ ],@@ c[100]; scanf("%d%d",&@@ x,&@@ y); for(i=0;i<x;i++) { scanf("%d",&b[i]); } for(i=0;i<y;i++) { scanf("%d",&@@ c[i]); } turn@@ (b,@@ x); printf(""); turn@@ (c,@@ y); return0; }  
c -1
h -1
0

intmain(){ doublea,@@ c=0; inti,n,@@ b=0; char@@ q@@ [500],@@ w@@ [500],@@ num[@@ 50]; gets(@@ num); a=@@ atof@@ (@@ num); gets(@@ q); gets(@@ w); n=strlen(@@ q); for(i=0;i<n;i++){ if(q@@ [i]!='A'&&@@ q@@ [i]!='T'&&@@ q@@ [i]!='C'&&@@ q@@ [i]!='G'){ b++; } if(w@@ [i]!='A'&&@@ w@@ [i]!='T'&&@@ w@@ [i]!='C'&&@@ w@@ [i]!='G'){ b++; } } if(b@@ !=0){ printf("error"); }else{ for(i=0;i<n;i++){ if(q@@ [i]==@@ w@@ [i]){ c++; } } c=c@@ /n; if(c@@ >@@ a){ printf("yes"); }else{ printf("no"); } } return0; }  
c -1
h -1
main() { intn,i,@@ a,@@ x,y; scanf("%d",&n); for(i=1;i<=@@ n*@@ n@@ ;i++){@@ scanf("%d",&@@ a);@@ if(a@@ ==0){@@ x@@ =i;@@ break;} } for(i=x@@ +1;i<=@@ n*@@ n;i++) {scanf("%d",&@@ a);@@ if(a@@ ==0)@@ y@@ =i;} printf("%d",(@@ y@@ /@@ n-@@ x/@@ n-1)@@ *(@@ y%@@ n-@@ x%@@ n-1@@ )); return0; }  
c -1
h -1
0

intmain(intargc,char*argv[]) { inta,b,c,@@ x; scanf("%d%d%d",&a,&b,&c); if(a%@@ 4==0&&a%100!=0@@ ||a%@@ 400==0) { if(b@@ ==1)@@ printf("%d",@@ c); elseif(b==@@ 2) {@@ x=31+@@ c@@ ;printf("%d",@@ x);} elseif(b==@@ 3) {@@ x=31+29@@ +c@@ ;printf("%d",@@ x);} elseif(b==@@ 4) {@@ x=31+29@@ +31+@@ c@@ ;printf("%d",@@ x);} elseif(b==@@ 5) {@@ x=31+29@@ +31+30@@ +c@@ ;printf("%d",@@ x);} elseif(b==@@ 6) {@@ x=31+29@@ +31+30+31+@@ c@@ ;printf("%d",@@ x);} elseif(b==@@ 7) {@@ x=31+29@@ +31+30+31+30@@ +c@@ ;printf("%d",@@ x);} elseif(b==@@ 8) {@@ x=31+29@@ +31+30+31+30+31+@@ c@@ ;printf("%d",@@ x);} elseif(b==@@ 9) {@@ x=31+29@@ +31+30+31+30+31+31+@@ c@@ ;printf("%d",@@ x);} elseif(b==@@ 10) {@@ x=31+29@@ +31+30+31+30+31+31+30@@ +c@@ ;printf("%d",@@ x);} elseif(b==@@ 11) {@@ x=31+29@@ +31+30+31+30+31+31+30+31+@@ c@@ ;printf("%d",@@ x);} elseif(b==@@ 12) {@@ x=31+29@@ +31+30+31+30+31+31+30+31+30@@ +c@@ ;printf("%d",@@ x);} } else { if(b@@ ==1)@@ printf("%d",@@ c); elseif(b==@@ 2) {@@ x=31+@@ c@@ ;printf("%d",@@ x);} elseif(b==@@ 3) {@@ x=31+28@@ +c@@ ;printf("%d",@@ x);} elseif(b==@@ 4) {@@ x=31+28@@ +31+@@ c@@ ;printf("%d",@@ x);} elseif(b==@@ 5) {@@ x=31+28@@ +31+30@@ +c@@ ;printf("%d",@@ x);} elseif(b==@@ 6) {@@ x=31+28@@ +31+30+31+@@ c@@ ;printf("%d",@@ x);} elseif(b==@@ 7) {@@ x=31+28@@ +31+30+31+30@@ +c@@ ;printf("%d",@@ x);} elseif(b==@@ 8) {@@ x=31+28@@ +31+30+31+30+31+@@ c@@ ;printf("%d",@@ x);} elseif(b==@@ 9) {@@ x=31+28@@ +31+30+31+30+31+31+@@ c@@ ;printf("%d",@@ x);} elseif(b==@@ 10) {@@ x=31+28@@ +31+30+31+30+31+31+30@@ +c@@ ;printf("%d",@@ x);} elseif(b==@@ 11) {@@ x=31+28@@ +31+30+31+30+31+31+30+31+@@ c@@ ;printf("%d",@@ x);} elseif(b==@@ 12) {@@ x=31+28@@ +31+30+31+30+31+31+30+31+30@@ +c@@ ;printf("%d",@@ x);} } }  
c -1
h -1
intmain() { inta[@@ 20000@@ ],i,j,@@ n; scanf("%d",&n); for(i=0;i<n;i++) scanf("%d",&a[i]); printf("%d",a[0]); for(i=0;i<n;i++) for(j=0;j<n;j++) { if(a[i]==a[j]@@ )break; if(j==@@ i@@ -1) { printf(""); printf("%d",a[i]); } } return0; }  
c -1
h -1
0

intmain(){ float@@ a; int@@ bar@@ =0; scanf("%f",&@@ a); charzfc@@ [2][@@ 500]; scanf("%s",@@ zfc@@ [0]); scanf("%s",@@ zfc@@ [1]); float@@ count@@ =0@@ .0@@ ; if(strlen(@@ zfc[0]@@ )!=strlen(@@ zfc[1]@@ )) printf("error"); else{ float@@ len=strlen(@@ zfc@@ [0]); for(inti=0;i<@@ len@@ ;i++){ if((@@ zfc[0]@@ [i]!='A'&&@@ zfc[0]@@ [i]!='T'&&@@ zfc[0]@@ [i]!='C'&&@@ zfc[0]@@ [i]!='G')||(@@ zfc[1]@@ [i]!='A'&&@@ zfc[1]@@ [i]!='T'&&@@ zfc[1]@@ [i]!='C'&&@@ zfc[1]@@ [i]!='G')){ printf("error"); bar@@ =1; break; } elseif(@@ zfc[0]@@ [i]==@@ zfc[1]@@ [i]) count+=@@ 1.0@@ ; } if(count@@ /@@ len@@ >=@@ a@@ &&@@ bar@@ ==0) printf("yes"); if(count@@ /@@ len@@ <a@@ &&@@ bar@@ ==0) printf("no"); } return0; }  
c -1
h -1
intmain() { intk,m,n,i,j,@@ p,@@ sum1@@ ,@@ sum2@@ ,@@ sum3@@ ,@@ sum4@@ ,sum; scanf("%d",&k); for(i=0;i<k;i++){ intsz[100][100]; scanf("%d%d",&m,&n); for(j=0;j<m;j++){ for(p=0;p@@ <n;@@ p++){ scanf("%d",&sz@@ [j]@@ [p@@ ]); } } if(m@@ !=1@@ &&m@@ !=@@ 2@@ &&n@@ !=1@@ &&n@@ !=@@ 2@@ ){ sum1@@ =@@ sum2@@ =@@ sum3@@ =@@ sum4@@ =0; for(p=0;p@@ <n;@@ p++){ sum1@@ +=@@ sz[0][@@ p@@ ]; } for(p=0;p@@ <n;@@ p++){ sum2@@ +=@@ sz[@@ m-1][@@ p@@ ]; } for(j=0;j<m;j++){ sum3@@ +=@@ sz[j]@@ [0]; } for(j=0;j<m;j++){ sum4@@ +=@@ sz[j]@@ [n-1]; } printf("%d\n",@@ sum1@@ +@@ sum2@@ +@@ sum3@@ +@@ sum4@@ -@@ sz[0][@@ 0]-@@ sz[0][@@ n-1]-@@ sz[@@ m-1][0]-@@ sz[@@ m-1][@@ n-1]); }else{ sum=0; for(j=0;j<m;j++){ for(p=0;p@@ <n;@@ p++){ sum+=@@ sz[j]@@ [p@@ ]; } } printf("%d\n",sum); } } return0; }  
c -1
h -1
0

intmain(){ intn,k,i,j,@@ sz[@@ 1000],@@ sum; scanf("%d%d",&n,&k); for(i=0;i<n-1;i++) scanf("%d",&sz[i]); for(i=0;i<n;i++){ for(j=i+1;j<n;j++){ sum=@@ sz[i]@@ +sz@@ [j]; if(k==@@ sum){ printf("yes"); break; } } if(k==@@ sum) break; if(i==@@ (n-1@@ )&&(@@ sz@@ [i-1]@@ +@@ sz[i]@@ )!=@@ k) printf("no"); } return0; }  
c -1
h -1
intcount@@ (int@@ h@@ [25@@ ],int@@ num[@@ 25@@ ],int@@ n) { intcount@@ =1,i; for(i=0;i<n;i++) if(h@@ [i]>@@ h@@ [n@@ ]@@ &&@@ num@@ [i]>@@ count@@ )@@ count=@@ num[i]; count++; return(@@ count); } intmain() { intn,@@ h@@ [25],@@ num[@@ 25@@ ],i,j,@@ temp; scanf("%d",&n); for(i=0;i<n;i++) scanf("%d",&h[i]); num@@ [0]=1; for(i=1;i<n;i++) num[i]=@@ count@@ (@@ h,@@ num,@@ i); for(i=0;i<n-1;i++) for(j=i+1;j<n;j++) if(num@@ [i]>@@ num[j]@@ ){@@ temp=@@ num[i]@@ ;@@ num[i]=@@ num[j]@@ ;@@ num@@ [j]=@@ temp;} printf("%d\n",@@ num[@@ n-1]); }  
c -1
h -1
0

intx[@@ 1000],@@ y@@ [1000],@@ z[@@ 2000]; inti,j,n,@@ m,@@ ex@@ ; voidread@@ (){ cin>>n>>m; for(i=0;i<n;i++) cin>>@@ x[i]; for(i=0;i<m;i++) cin>>y@@ [i]; } voidpaixu@@ (){ for(i=0;i<n;i++) for(j=0;j<n-1;j++) if(x@@ [j+1]@@ <@@ x@@ [j]){ ex@@ =@@ x@@ [j]; x@@ [j]=@@ x@@ [j+1]; x@@ [j+1]=@@ ex@@ ; } for(i=0;i<m;i++) for(j=0;j<m-1;j++) if(y@@ [j]>@@ y@@ [j+1@@ ]){ ex@@ =@@ y@@ [j]; y@@ [j]=@@ y@@ [j+1]; y@@ [j+1]=@@ ex@@ ; } } void@@ heping@@ (){ for(i=0;i<n;i++) z@@ [i]=@@ x[i]; for(i=0;i<m;i++) z@@ [n@@ +i]=@@ y@@ [i]; } void@@ display@@ (){ for(i=0;i<n@@ +m@@ ;i++){ if(i==0)@@ cout<<@@ z@@ [i]; else@@ cout<<""<<@@ z@@ [i]; } } intmain(){ read(); paixu@@ (); heping@@ (); display@@ (); return0; }  
c -1
h -1
struct@@ ill { charid@@ [11]; intage; struct@@ ill@@ *next; }; struct@@ ill@@ *creat@@ (intn) {@@ struct@@ ill@@ *head,*p1,*p2; inti; head=NULL; for(i=0;i<n;i++) {@@ p1=(struct@@ ill@@ *)malloc(sizeof(struct@@ ill@@ )); scanf("%s%d",@@ p1->id,&p1->age); if(i==0)@@ head=p1; elsep2->next=p1; p2=p1; } p2->next=NULL; return(head); } struct@@ ill@@ *@@ arrang@@ (struct@@ ill@@ *head) {int@@ t,@@ tt@@ ; chars[@@ 11@@ ],@@ ss@@ [11]; struct@@ ill@@ *p,*@@ q@@ ,*@@ m@@ ,*@@ h; for(p=head@@ ;p!=NULL;p=p->next) { if(p->@@ age@@ >=60) { for(m=@@ p,@@ q=@@ p->next@@ ;q@@ !=NULL;@@ q=q@@ ->next) if(q@@ ->age@@ >@@ m@@ ->age@@ &&m@@ ->age@@ >=60@@ )@@ m=@@ q; {t=@@ tt@@ =p->@@ age@@ ;@@ strcpy(s,@@ p->@@ id@@ );strcpy(@@ ss@@ ,@@ p->@@ id); for(@@ h=@@ p->next@@ ;@@ h@@ !=@@ m@@ ->next@@ ;@@ h=@@ h@@ ->next) {@@ tt@@ =@@ h@@ ->age@@ ;@@ strcpy(@@ ss@@ ,@@ h@@ ->id); h@@ ->age=@@ t;@@ strcpy(@@ h@@ ->id,@@ s); t=@@ tt@@ ;@@ strcpy(s,@@ ss@@ ); } p->age@@ =@@ t;@@ strcpy(@@ p->@@ id,@@ s); } } } return(head); } voidmain() {@@ intn; struct@@ ill@@ *head,*@@ h; scanf("%d",&n); head=creat(n); head=@@ arrang@@ (head); for(@@ h=@@ head;@@ h@@ !=NULL;@@ h=@@ h@@ ->next) if(h@@ ->age@@ >=60@@ )@@ printf("%s\n",@@ h@@ ->id); for(@@ h=@@ head;@@ h@@ !=NULL;@@ h=@@ h@@ ->next) if(h@@ ->age@@ <60@@ )@@ printf("%s\n",@@ h@@ ->id); }  
c -1
h -1
0

intmain() { inti,j,@@ length2@@ ,@@ length1@@ ; charstr@@ [300],@@ sub@@ [300],@@ rep@@ [300]; gets(@@ str@@ );@@ gets(@@ sub@@ );@@ gets(@@ rep); length1@@ =strlen(@@ str); length2@@ =strlen(@@ sub); for(i=0;i<@@ length1@@ ;i++) { for(j=0;j<@@ length2@@ ;j++) { if(@@ sub@@ [j]!=@@ str@@ [i+j@@ ]) break; } if(j==@@ length2@@ ) { for(j=0;j<@@ length2@@ ;j++) str@@ [i+j@@ ]=@@ rep@@ [j]; break; } } puts(@@ str); return0; }  
c -1
h -1
intmain() { intn,i; int@@ sum[@@ 100000]; int@@ max1,@@ max2@@ ,max3@@ ; int@@ x=0; scanf("%d",&n); struct{ intnumber; int@@ chin@@ ; intmath; }@@ student[@@ 100000]; for(i=0;i<n;i++){ scanf("%d%d%d",&@@ student[i].@@ number@@ ,&@@ student[i].@@ chin@@ ,&@@ student[i].@@ math); sum[i]=@@ student[i].@@ chin@@ +@@ student[i].@@ math@@ ;} max1=@@ sum[@@ 0]; max2=@@ sum[@@ 0]; max3=@@ sum[@@ 0]; for(i=0;i<n;i++){ if(sum[i]>@@ max1@@ ) max1=@@ sum[i]@@ ;} for(i=0;i<n;i++){ if(sum@@ [i]==@@ max1@@ ){ printf("%d%d\n",@@ student[i].@@ number,@@ sum@@ [i]); x@@ ++;} if(x@@ >=@@ 3) break; } for(i=0;i<n;i++){ if((@@ sum@@ [i]>@@ max2@@ )&&(@@ sum@@ [i]!=@@ max1@@ )) max2=@@ sum[i]@@ ;} for(i=0;i<n;i++){ if(x@@ >=@@ 3) break; if(sum@@ [i]==@@ max2@@ ){ printf("%d%d\n",@@ student[i].@@ number,@@ sum@@ [i]); x@@ ++;} } for(i=0;i<n;i++){ if((@@ sum@@ [i]>@@ max3@@ )&&(@@ sum@@ [i]!=@@ max1@@ )&&(@@ sum@@ [i]!=@@ max2@@ )) max3=@@ sum[i]@@ ;} for(i=0;i<n;i++){ if(x@@ >=@@ 3) break; if(sum@@ [i]==@@ max3@@ ){ printf("%d%d",@@ student[i].@@ number,@@ sum@@ [i]); x@@ ++;} } return0; }  
c -1
h -1
0

intmain(){ chara[@@ 2][@@ 600]; doublen,@@ m; scanf("%lf@@ %s",&@@ n,@@ a[0]); scanf("%s",@@ a[1]); inti,@@ s=0; m=strlen(@@ a[0]); for(i=0;i<m;i++){ if((@@ a[0]@@ [i]!=@@ 65@@ &&@@ a[0]@@ [i]!=@@ 67@@ &&@@ a[0]@@ [i]!=@@ 71@@ &&@@ a[0]@@ [i]!=@@ 84@@ )||(@@ a[1]@@ [i]!=@@ 65@@ &&@@ a[1]@@ [i]!=@@ 67@@ &&@@ a[1]@@ [i]!=@@ 71@@ &&@@ a[1]@@ [i]!=@@ 84@@ )){ printf("error"); s@@ =-1; break; } elseif(@@ a[0]@@ [i]==@@ a[1]@@ [i]) s++; } if(s@@ !=@@ -1){ double@@ q; q=@@ s@@ *1.0/@@ m; if(q@@ >=@@ n) printf("yes"); else{ printf("no"); } } return0; }  
c -1
h -1
intmain() { intk; scanf("%d",&k); intm,n,@@ sum=0; inti,j,@@ p; for(p=0;p@@ <k@@ ;p++){ scanf("%d%d",&m,&n); intsz[@@ m@@ ][n]; for(i=0;i<m;i++){ for(j=0;j<n;j++){ scanf("%d",&sz[i][j]); } } for(i=0,j@@ =0;j<@@ n;j++){ sum=sum+@@ sz[i]@@ [j]; } for(i=@@ m-1@@ ,j@@ =0;j<@@ n;j++){ sum=sum+@@ sz[i]@@ [j]; } for(j=0@@ ,i@@ =0;i<@@ m;i++){ sum=sum+@@ sz[i]@@ [j]; } for(j=n-1@@ ,i@@ =0;i<@@ m;i++){ sum=sum+@@ sz[i]@@ [j]; } sum=sum-@@ sz[0][@@ 0]-@@ sz[@@ m-1][0]-@@ sz[@@ m-1][@@ n-1]-@@ sz[0][@@ n-1]; printf("%d\n",sum); sum=0; } return0; }  
c -1
h -1
0

intmain() { inta[@@ 101][@@ 101],@@ row,col,@@ i,j,k,@@ sum; cin>>row>>col; sum=@@ row@@ +@@ col; for(i=1;i<=@@ row;i++) for(j=1;j<=col;j++) cin>>a[i][j]; for(k=@@ 2@@ ;k<=@@ sum@@ ;k++) { if(k@@ <=col@@ +1) { i=1; j=@@ k@@ -1; do { cout<<a[i]@@ [j]@@ <<endl@@ ;@@ ; i@@ +=1; j@@ -=@@ 1; } while(i@@ <=row@@ &&j@@ >=1@@ ); } else { i=@@ k-@@ col; j=@@ k-@@ i; do { cout<<a[i][j]<<endl; i@@ +=1; j@@ -=@@ 1; } while(i@@ <=row@@ &&j@@ >=1@@ ); } } return0; }  
c -1
h -1
intmain() { intn,i,k,@@ x; intsz[@@ 20000]; scanf("%d",&n); scanf("%d",&sz@@ [0]); printf("%d",@@ sz@@ [0]); for(i=1;i<n;i++) { scanf("%d",&sz[i]); x=0; for(k=0;k<i;k++) { if(sz@@ [i]==@@ sz@@ [k]) { break; } elseif(@@ sz[i]@@ !=@@ sz@@ [k]) { x++; } if(x==@@ i) { printf("%d",@@ sz@@ [i]); } } } return0; }  
c -1
h -1
0

intm,n,@@ a[100@@ ],b[100],c[@@ 200]; void@@ enter@@ (int@@ array0@@ [],int@@ p) { inti; for(i=0;i<p@@ ;i++) scanf("%d",&@@ array0@@ [i]); } voidsort@@ (intarray[],int@@ p1@@ ) { inti,j,k; for(i=0;i<@@ p1@@ -1;i++) for(j=0;j<@@ p1@@ -1-i;j++) if(array@@ [j]>@@ array@@ [j+1]) { k=@@ array@@ [j]; array@@ [j]=@@ array@@ [j+1]; array@@ [j+1]=@@ k; } } void@@ paste@@ (int@@ array1@@ [],int@@ array2@@ []) { inti; for(i=0;i<m;i++) c[i]=@@ array1@@ [i]; for(i=m;i<@@ m+n;i++) c[i]=@@ array2@@ [i-@@ m]; } voidout@@ (int@@ array3@@ [],int@@ p2@@ ) { inti; printf("%d",@@ array3@@ [0]); for(i=1;i<@@ p2@@ ;i++) printf("%d",@@ array3@@ [i]); } voidmain() { scanf("%d%d",&m,&n); enter@@ (a,m); enter@@ (b,n); sort@@ (a,m); sort@@ (b,n); paste@@ (a,b); out@@ (c,@@ m+@@ n); }  
c -1
h -1
main() { intk,@@ n_max@@ ,i; inta[@@ 25]; scanf("%d",&k); intn@@ [k]; for(i=0;i<k;i++) { scanf("%d",&a[i]); n@@ [i]=1; } for(intj=@@ k@@ -2@@ ;j>=0;j--) { for(intt@@ =j+1@@ ;t@@ <k;@@ t++) { if(a[@@ t@@ ]<=@@ a[j]@@ &&n@@ [j]<=@@ n@@ [t@@ ]) n@@ [j]=@@ n@@ [t@@ ]+1; } } n_max@@ =0; for(intp@@ =0;p@@ <k@@ ;p++) { if(n@@ [p@@ ]>@@ n_max@@ ) n_max@@ =@@ n@@ [p@@ ]; } printf("%d\n",@@ n_max@@ ); }  
c -1
h -1
0

voidmain() { int@@ sum_day@@ (int,int); intleap@@ (intyear@@ ); intyear,month,day,@@ days; scanf("%d%d%d",&year,&month,&day); days=@@ sum_day@@ (@@ month,@@ day); if(leap@@ (year@@ )&&@@ month@@ >=@@ 3) days=@@ days@@ +1; printf("%d",@@ days@@ ); } int@@ sum_day@@ (int@@ month@@ ,int@@ day@@ ) { int@@ day_tab@@ [13]={0,31,28,31,30,31,30,31,31,30,31,30,31}; inti; for(i=1;i<month;i++) day@@ +=@@ day_tab@@ [i]; return(@@ day); } intleap@@ (intyear@@ ) { intleap@@ ; leap@@ =@@ year%@@ 3@@ ==0&&@@ year%100!=0@@ ||@@ year%@@ 400==0@@ ; return(@@ leap@@ ); }  
c -1
h -1
intmain(){ inti,n,@@ j,@@ a,b; a=0; scanf("%d\n",&n); int@@ zl@@ [@@ A@@ ][@@ A@@ ]; for(i=0;i<n;i++){ for(j=0;j<n;j++){ scanf("%d",&(@@ zl@@ [i][j]@@ )); } } for(i=1;i<@@ (@@ n-1)@@ ;i++){ for(j=1;j<@@ (@@ n-1)@@ ;j++){ if((@@ zl@@ [i][j]@@ )@@ ==0){ a++; } } } b@@ =(@@ (@@ (a@@ *@@ a)@@ /@@ 16@@ )@@ -@@ (a@@ /2@@ )@@ +1); printf("%d\n",@@ b); return0; }  
c -1
h -1
0

intmain() { intm,@@ book[@@ 1002@@ ],@@ i,@@ cnt@@ [26]={0},@@ l@@ ,j,@@ n=0; charname@@ [@@ 1002@@ ][@@ 27@@ ],@@ a,@@ max; cin>>m; for(i=0;i<m;i++) { cin>>@@ book@@ [i]; cin>>@@ name@@ [i]; l=strlen(@@ name@@ [i]); for(j=0;j<l;j++) { a=@@ name@@ [i][j]; cnt@@ [a@@ -'A']++; } } for(i=0;i<26;i++) { if(@@ cnt@@ [i]>@@ n) { n=@@ cnt@@ [i]; max@@ =i+@@ 'A'@@ ; } } cout<<max<<endl; cout<<n<<endl; for(i=0;i<m;i++) { l=strlen(@@ name@@ [i]); for(j=0;j<l;j++) { if(name@@ [i][j]==@@ max) { cout<<@@ book@@ [i]<<endl; break; } } } return0; }  
c -1
h -1
intmain() { inta[@@ 30],@@ count=0,@@ n,@@ temp,@@ i; cin>>n; while(n--) { cin>>@@ temp; for(i=0;i<@@ count@@ ;i++)@@ if(temp@@ >@@ a[i]@@ ){@@ a[i]=@@ temp@@ ;break;} if(i>=@@ count@@ ){@@ a[i]=@@ temp@@ ;@@ count@@ ++;} } cout<<count<<endl; return0; }  
c -1
h -1
0

intmain(){ structpatient{ charid@@ [11]; intage; }@@ patients@@ [100],@@ old@@ [100],@@ young@@ [100],@@ jh@@ ; intn,i,j,@@ d,@@ k; j@@ =-1; d@@ =-1; scanf("%d",&n); for(i=0;i<n;i++){ scanf("%s%d",@@ patients@@ [i].id,&@@ patients@@ [i].age); } for(i=0;i<n;i++){ if(@@ patients@@ [i].age>=60){ d++; old@@ [d@@ ]=@@ patients@@ [i]; }else{ j++; young@@ [j]=@@ patients@@ [i]; } } for(k=1;k<=@@ d@@ +1@@ ;k++){ for(i=0;i<d@@ ;i++){ if(old@@ [i].age@@ <@@ old@@ [i+1@@ ].age){ jh@@ =@@ old@@ [i]; old@@ [i]=@@ old@@ [i+1]; old@@ [i+1]=@@ jh@@ ; } } } for(i=0;i<=@@ d@@ ;i++){ printf("%s\n",old@@ [i].id); } for(i=0;i<=@@ j@@ ;i++){ printf("%s\n",@@ young@@ [i].id); } return0; }  
c -1
h -1
intmain() { inta[1000][1000]; intt,@@ i,j,@@ x=0,@@ b=0,@@ m=0,@@ n=0,@@ s,@@ s1,@@ s2; scanf("%d",&t); for(i=0;i<t;i++) { for(j=0;j<@@ t;j++) { scanf("%d",&a[i][j]); } } for(i=0;i<t;i++) { for(j=0;j<@@ t;j++) { if(a[i][j]==0) { x@@ =i; b=j; break; } } if(a[x@@ ][b@@ ]==0) break; } for(i=@@ t@@ -1;i>=0;i--) { for(j=@@ t@@ -1@@ ;j>=0;j--) { if(a[i][j]==0) { m=i; n@@ =j; break; } } if(a[m@@ ][n@@ ]==0) break; } s1@@ =@@ m@@ -x@@ -1; s2=@@ n-@@ b@@ -1; s=@@ s1@@ *@@ s2; printf("%d\n",s); return0; }  
c -1
h -1
0

intmain() { intn,i,@@ t; int@@ u@@ =0,@@ k=0; inta[@@ N@@ ],b[@@ N]; chars[@@ N@@ ][@@ 10],@@ h@@ [N@@ ][@@ 10],@@ j@@ [N@@ ][10]; scanf("%d",&n); for(i=0;i<n;i++){ scanf("%s%d",&@@ s[i]@@ ,&@@ a[i]); if(a[i]@@ >=60){ b[@@ u@@ ]=a[i]; strcpy(@@ h@@ [@@ u@@ ],@@ s[i]); u@@ ++; } else{ strcpy(@@ j@@ [k],@@ s[i]); k++; } } for(i=@@ u@@ -1@@ ;i>0@@ ;i--){ for(t=0;t@@ <i@@ ;t@@ ++){ if(@@ b[t@@ ]<@@ b[t@@ +1@@ ]){ intf@@ ; f=@@ b[t@@ ]; b[t@@ ]=@@ b[t@@ +1]; b[t@@ +1]=@@ f; char@@ tmp@@ [10]; strcpy(@@ tmp@@ ,@@ h@@ [t@@ ]); strcpy(@@ h@@ [t@@ ],@@ h@@ [t@@ +1@@ ]); strcpy(@@ h@@ [t@@ +1],@@ tmp@@ ); } } } for(i=0;i<@@ u@@ ;i++) printf("%s\n",@@ h[i]); for(t=0;t@@ <k;@@ t++) printf("%s\n",@@ j@@ [t@@ ]); return0; }  
c -1
h -1
intmain() { inta[@@ 20000],@@ n,@@ i,j; scanf("%d",&n); for(i=0;i<n;i++) { scanf("%d",&a[i]); } printf("%d",a[0]); for(i=1;i<n;i++) { for(j=0;j<i;j++) { if(a[i]==a[j]) {@@ j@@ =i;} else {@@ j=j@@ ;} } if(j==i) printf("%d",a[i]); } return0; }  
c -1
h -1
0

intm,n,i,j,@@ temp; inta[100@@ ]={0},@@ b[100@@ ]={0},@@ c[@@ 200@@ ]={0}; void@@ Read@@ (void@@ ); void@@ Order@@ (void@@ ); void@@ Combine@@ (void@@ ); void@@ Write@@ (void@@ ); intmain() { Read@@ (); Order@@ (); Combine@@ (); Write@@ (); return0; } void@@ Read@@ (void) { scanf("%d%d",&m,&n); for(i=1;i<=m;i++) scanf("%d",&a[i]); for(i=1;i<=n;i++) scanf("%d",&b[i]); } void@@ Order@@ (void) { for(i=1;i<=m;i++) for(j=i+1;j<=@@ m;j++) { if(a[i]>a[j]) { temp=a[i]; a[i]=a[j]; a[j]=@@ temp; } } for(i=1;i<=n;i++) for(j=i+1;j<=n;j++) { if(b[i]>@@ b[j]) { temp=@@ b[i]; b[i]=@@ b[j]; b[j]=@@ temp; } } } void@@ Combine@@ (void) { for(i=1;i<=m;i++) c[i]=a[i]; for(i=1;i<=n;i++) c@@ [i@@ +m@@ ]=b[i]; } void@@ Write@@ (void) { printf("%d",c[@@ 1@@ ]); for(i=2;i<=@@ m+n;i++) printf("%d",c[i]); }  
c -1
h -1
intmain() {@@ inta[20000]; intn,i,j,@@ l,@@ k; cin>>n; l=@@ n; for(i=0;i<n;i++) cin>>a[i]; for(i=0;i<l@@ -1;i++) { for(j=i+1;j<@@ l@@ ;j++) { if(a[i]==a[j]) {@@ for(k=j@@ ;k<@@ l@@ -1;k++) a[k]=a[k@@ +1]; j--; l@@ --; } } } cout<<a[0]; for(i=1;i<@@ l@@ ;i++) cout<<''<<@@ a[i]; return0; }  
c -1
h -1
0

inta[@@ 999@@ ]={0},b[@@ 999@@ ]={0},@@ c[@@ 1999@@ ]={0}; intm,n; voidf@@ () { inti; scanf("%d%d",&m,&n); for(i=0;i<m;i++) { scanf("%d",&a[i]); } for(i=0;i<n;i++) { scanf("%d",&b[i]); } } void@@ rank@@ () { inti,j,k; for(i=0;i<m-1;i++) { for(j=0;j<m@@ -i-1;j++) { if(a[j]>a[j+1]) { k=@@ a[j]; a[j]=a[j+1]; a[j+1]=@@ k; } } } for(i=0;i<n-1;i++) { for(j=0;j<n@@ -i-1;j++) { if(b[j]>b[j+1]) { k=@@ b[j]; b[j]=b[j+1]; b[j+1]=@@ k; } } } } voidcombine@@ () { inti; for(i=0;i<m;i++) { c[i]=a[i]; } for(i=m;i<@@ m+n;i++) { c[i]=b[i-@@ m]; } } voidprint() { inti; printf("%d",c@@ [0]); for(i=1;i<@@ m+n;i++) printf("%d",c[i]); } voidmain() { f@@ (); rank@@ (); combine@@ (); print(); }  
c -1
h -1
struct@@ person { charID[10]; intage; }@@ per@@ [100]; intmain() { inti,n,@@ j,@@ k=0,@@ a[100@@ ]={0},@@ num=0,@@ temp1@@ ; char@@ b[100@@ ][@@ 10@@ ]={0},@@ temp2@@ [10@@ ]={0}; scanf("%d",&n); for(i=0;i<n;i++) scanf("%s%d",@@ per@@ [i].@@ ID,&@@ per@@ [i].age); for(i=0;i<n;i++) { if(@@ per@@ [i].age>=60) { a[k]=@@ per@@ [i].age; strcpy(@@ b[k@@ ],@@ per@@ [i].ID); k++; num++; } } for(j=0;j<@@ num@@ ;j++) { for(k=0;k<@@ num@@ -j@@ ;k++) if(a[k]@@ <@@ a[k@@ +1]) { temp1@@ =@@ a[k]; a[k]=a[k@@ +1]; a[k@@ +1]=@@ temp1@@ ; strcpy(@@ temp2@@ ,@@ b[k@@ ]); strcpy(@@ b[k@@ ],b[@@ k@@ +1@@ ]); strcpy(@@ b[k@@ +1],@@ temp2@@ ); } } for(i=0,@@ k=@@ num@@ ;i<n;i++) { if(@@ per@@ [i].age<60) {@@ a[k]=@@ per@@ [i].age; strcpy(@@ b[k@@ ],@@ per@@ [i].ID); k++; num@@ ++;} } for(k=0;k<@@ num@@ -1;k++) printf("%s\n",@@ b[k@@ ]); printf("%s",@@ b[@@ num@@ -1]); }  
c -1
h -1
0

intmain(){ intsz@@ [100][100],@@ ROW@@ ,@@ COL@@ ; inti,j,@@ z,@@ t; scanf("%d%d",&@@ ROW@@ ,&@@ COL@@ ); for(j=0;j<@@ ROW@@ ;j++){ for(i=0;i<@@ COL@@ ;i++){ scanf("%d",&sz@@ [j]@@ [i]); } } t=@@ ROW@@ +@@ COL@@ ; for(z@@ =0;z@@ <@@ t;@@ z@@ ++){ for(j=0;j<@@ ROW@@ ;j++){ i=@@ z@@ -j@@ ; if((i@@ >=0@@ )&&(i@@ <@@ COL@@ )){ printf("%d\n",@@ sz[j]@@ [i]); } } } return0; }  
c -1
h -1
voidmain() { intN@@ ; int@@ **@@ array@@ ,@@ i,j; int@@ a=@@ 1000@@ ,@@ b=@@ 1000@@ ,@@ c=0,@@ d=0; scanf("%d",&N); array@@ =@@ (int@@ **@@ )@@ malloc(@@ N@@ *sizeof(int@@ *@@ )); for(i=0;i<N;i++) { array@@ [i]=@@ (int*)malloc(@@ N@@ *sizeof(int)); for(j=0;j<@@ N@@ ;j++) { scanf("%d",&array@@ [i][j]); if(array@@ [i][j]==0&&@@ i<=@@ a@@ &&j@@ <=@@ b) { a=i; b=j; } if(array@@ [i][j]==0&&@@ i>=@@ c@@ &&j@@ >=@@ d) { c=i; d=j; } } } printf("%d",(@@ c-a-1)*(d-b@@ -1)); }  
c -1
h -1
0

intmain(){ inti,@@ a,b,@@ c=0; double@@ e,@@ d; char@@ x@@ [256],@@ y@@ [256]; scanf("%lf",&@@ d); scanf("%s",@@ x); scanf("%s",@@ y); a=strlen(@@ x); b=strlen(@@ y); if(a!=@@ b){ printf("error");} elseif(a@@ ==@@ b){ for(i=0;i<a;i++){ if((x@@ [i]!='A'&&@@ x@@ [i]!='T'&&@@ x@@ [i]!='C'&&@@ x@@ [i]!='G')||(@@ y@@ [i]!='A'&&@@ y@@ [i]!='T'&&@@ y@@ [i]!='C'&&@@ y@@ [i]!='G')){ printf("error"); return0@@ ;@@ }else{ if(x@@ [i]==@@ y@@ [i]){ c@@ +=@@ 1@@ ;} } } e@@ =1.0*@@ c@@ /@@ a; if(e@@ >=@@ d@@ ){@@ printf("yes");@@ }else{@@ printf("no@@ ");@@ }} return0; }  
c -1
h -1
intmain() { intyear,month,day,@@ n=0,@@ i,@@ num=0; int@@ A[@@ 12]={31,@@ 28,31,30,31,30,31,31,30,31,30,31@@ }@@ , B@@ [@@ 12]={31,29,31,30,31,30,31,31,30,31,30,31}; scanf("%d%d%d",&year,&month,&day); if((year%4==0&&year%100!=0@@ )||@@ year%400==0) { for(i=0;i<month-1;i++) { n=n+@@ B@@ [i]; } num=@@ n+@@ day; printf("%d",@@ num); } else { for(i=0;i<month-1;i++) { n=n+@@ A@@ [i]; } num=@@ n+@@ day; printf("%d",@@ num); } return0; }  
c -1
h -1
0

intmain() { int@@ row@@ =0,@@ col@@ =0; cin>>row>>col; int@@ array@@ [100][100@@ ]={0}; inti,j,n; for(i=0;i<row;i++) { for(j=0;j<col;j++) { cin>>array[i][j]; } } for(n=0;n@@ <row@@ +col@@ ;n++) { for(i=0,j@@ =@@ n-1@@ ;i<@@ n,@@ j@@ >=0@@ ;i++,j--) { if(i@@ <row@@ &&j@@ <col) { cout<<array@@ [i][j]<<endl; } } } return0; }  
c -1
h -1
intmain() { inti,j,k; introw,col; int@@ matrix@@ [100@@ *@@ 100@@ ]; scanf("%d%d",&@@ row,@@ &@@ col); for(i=0;i<row;i++){ for(j=0;j<col;j++){ scanf("%d",@@ matrix@@ +i@@ *@@ 100@@ +j); } } for(i=0;i<@@ col@@ ;i++){ for(j=i,@@ k@@ =0@@ ;j>=0@@ &&k@@ <row@@ ;j--@@ ,k@@ ++){ printf("%d\n",*(@@ matrix@@ +k@@ *@@ 100@@ +j)); } } for(i=1;i<@@ row;i++){ for(j=col-1@@ ,k@@ =i@@ ;j>=0@@ &&k@@ <row@@ ;j--@@ ,k@@ ++){ printf("%d\n",*(@@ matrix@@ +k@@ *@@ 100@@ +j)); } } return0; }  
c -1
h -1
1


intmain() { intm@@ [26],@@ x; int@@ cmp@@ (inti,@@ intk,@@ inth@@ [@@ ]); intmax(int@@ m@@ [],int@@ k); intk,i,@@ h@@ [26]; scanf("%d",&k); for(i=1;i<=k;i++) scanf("%d",&h[i]); for(i=1;i<=k;i++) m@@ [i]=@@ cmp@@ (i,@@ k,@@ h); x=@@ max(@@ m,@@ k); printf("%d\n",x); return0; } intmax(int@@ m@@ [],int@@ k) { int@@ big@@ ,i; big@@ =@@ m@@ [1]; for(i=1;i<=k;i++) if(@@ big@@ <m@@ [i])@@ big@@ =@@ m[i]; return@@ big@@ ; } int@@ cmp@@ (inti,@@ intk,@@ inth@@ []) { intb[@@ 26],@@ j,@@ t=1; if(i==@@ k)@@ return1; for(j=i+1;j<=@@ k;j++) if(h@@ [i]>=@@ h@@ [j]) { b[t@@ ]=@@ cmp@@ (@@ j,k,@@ h); t++; } if(t@@ ==1)@@ return1; return@@ max@@ (b,@@ t@@ -1)@@ +1; }  
c -1
h -1
intmain() { intn,i,j,k,@@ a[@@ 20000],@@ b=0; scanf("%d",&n); for(i=0;i<n;i++)@@ scanf("%d",&a[i]); printf("%d",a[0]); for(j=1;j<@@ n;j++){ for(k=0;k<=@@ j@@ ;k++){ if(a[k]@@ !=@@ a[j])@@ b++; } if(b==@@ j)@@ printf("%d",@@ a[j]); b=0; } return0; }  
c -1
h -1
0

voidmain() { struct@@ s { inta; char@@ b[100@@ ]; struct@@ s@@ *next; }; struct@@ s@@ *@@ p1,*p2,*head; intm,n,@@ i,j,k,@@ t,@@ d[@@ 50@@ ],@@ max; charc; scanf("%d",&n); p1=(struct@@ s@@ *)malloc(sizeof(struct@@ s@@ )); p2=p1; head=p1; scanf("%d%s",&p1->@@ a,@@ p1->@@ b); for(i=0;i<n-1;i++) { p1=(struct@@ s@@ *)malloc(sizeof(struct@@ s@@ )); p2->next=p1; p2=p1; scanf("%d%s",&p1->@@ a,@@ p1->@@ b); } p2->next@@ =0; t=0; p1=@@ p2=head; for(c@@ ='A'@@ ;c@@ <=@@ 'Z'@@ ;c@@ ++) { k=0; for(i=0;i<n;i++) { j=0; while(@@ p1->@@ b[j]@@ !='\0') { if(c==@@ p1->@@ b[j]) k++; j++; } p1=p1->next; } d[@@ t@@ ]=@@ k; t++; p1=head; } j=0; max=@@ d@@ [0]; for(i=1;i<26;i++) if(d@@ [i]>max) { max=@@ d[i]; j=i; } printf("%c\n",@@ 'A'+@@ j); printf("%d\n",max); t@@ ='A'+@@ j; for(i=0;i<n;i++) { j=0; while(@@ p1->@@ b[j]@@ !='\0') { if(t==@@ p1->@@ b[j]) printf("%d\n",@@ p1->@@ a); j++; } p1=p1->next; } }  
c -1
h -1
voidmain() { inti,j,k,n,@@ a[@@ 1500@@ ],@@ flag=0; scanf("%d%d",&n,&k); for(i=1;i<=@@ n;i++)@@ scanf("%d",&a[i]); for(i=2;i<=n;i++) for(j=1;j<=@@ i@@ -1@@ ;j++)@@ if((@@ a[i]+@@ a[j]@@ )==@@ k)@@ flag=1; if(n@@ ==1)@@ printf("no@@ ");@@ else if(flag@@ )@@ printf("yes");@@ elseprintf("no"); }  
c -1
h -1
0

intmain() { intn,i; char@@ wri@@ [26@@ ]={'A','B','C','D','E','F','G','H','I','J','K','L','M','N','O','P','@@ Q','R','S','T','U','V','W','X','Y','@@ Z'}; intnum[@@ 26]; char@@ tem@@ [100]; int@@ j=0,@@ k; int@@ shu@@ [26@@ ][100]; int@@ hao@@ ; for(i=0;i<26;i++) num@@ [i]=0; scanf("%d",&n); for(i=0;i<n;i++) { scanf("%d%s",&@@ hao@@ ,@@ tem@@ ); j=0; while(@@ tem@@ [j]@@ !='\0') { for(k=0;k<=@@ 25@@ ;k++) { if(@@ wri@@ [k]==@@ tem@@ [j]) { shu@@ [k@@ ][@@ num@@ [k]@@ ]=@@ hao@@ ; num@@ [k]++; } } j++; } } intmax=0; for(i=1;i<26;i++) { if(num@@ [i]>@@ num[@@ max@@ ]) max=i; } printf("%c\n%d\n",@@ wri@@ [max@@ ],@@ num[@@ max@@ ]); for(i=0;i<@@ num[@@ max@@ ]@@ ;i++) printf("%d\n",@@ shu@@ [max@@ ][i]); return0; }  
c -1
h -1
voidmain() { inti,n,@@ r,@@ s,@@ a[100][100],@@ j,@@ k@@ =1,@@ sum; scanf("%d",&n); while(k@@ <=@@ n) { scanf("%d%d",&@@ r@@ ,&@@ s); sum=0; for(i=0;i<@@ r;i++) { for(j=0;j<@@ s@@ ;j++) scanf("%d",@@ *(a+i)@@ +j); } if(r@@ ==1) { for(i=0;i<@@ s;i++) sum+=*(*(a@@ +@@ 0)@@ +i); } elseif(@@ s@@ ==1) { for(i=0;i<@@ r;i++) sum+=@@ *(*(a+i)@@ +@@ 0); } else { for(i=0,j@@ =0;j<@@ s@@ -1;j++) sum+=@@ *(*(a+i)+j); for(i=0,j@@ =@@ s@@ -1@@ ;i<@@ r@@ -1;i++) sum+=@@ *(*(a+i)+j); for(i=@@ r@@ -1@@ ;j>0;j--) sum+=@@ *(*(a+i)+j); for(j=0@@ ;i>0;i--) sum+=@@ *(*(a+i)+j); } printf("%d\n",sum); k++; } }  
c -1
h -1
0

intmain() { intk,m,n,@@ a[100][100],@@ i,j,@@ l,@@ S@@ =0; cin>>k; for(i=1;i<=k;i++) { cin>>m>>n; for(j=0;j<=@@ m-1;j++) { for(l=0;l@@ <=@@ n-1;@@ l++) { cin>>a[j]@@ [l]; if(j@@ ==0||j==@@ m-1@@ ||@@ l@@ ==0||@@ l@@ ==@@ n-1) { S@@ =@@ S@@ +@@ a[j]@@ [l]; } } } if(i<@@ k) {@@ cout<<@@ S@@ <<@@ '\n@@ '@@ ;} else {@@ cout<<@@ S@@ ;} S@@ =0; } }  
c -1
h -1
intmain() { intn,i,j,k; inta[@@ 25],b[@@ 25]; scanf("%d",&n); for(i=0;i<n;i++) scanf("%d",&a[i]); b[@@ n-1@@ ]=1; for(i=1;i<n;i++) b[i]=1; for(i=n-2;i>=0;i--) for(j=n-1@@ ;j>=i@@ +1@@ ;j--) if(a[i]>=@@ a[j]&&@@ b[j]@@ +1@@ >=@@ b[i]) b[i]=b[j]+1; k=@@ b[0]; for(i=1;i<n;i++) if(b[i]>@@ k) k=@@ b[i]; printf("%d",k); }  
c -1
h -1
0

static@@ intm,n; inta[@@ 1000],b[1000],@@ c[@@ 2000]; voidf1@@ (inta[],intb[],int@@ h@@ ,int@@ k) { inti; scanf("%d%d",&@@ h@@ ,&@@ k); m=@@ h@@ ;@@ n=@@ k; for(i=0;i<m;i++) scanf("%d",&a[i]); for(i=0;i<n;i++) scanf("%d",&b[i]); return; } voidf2@@ (inta[],intb[],int@@ m,intn) { inti,j,k; for(j=@@ m-1@@ ;j>0;j--) { for(i=0;i<j;i++) { if(a[i]>a[i+1]) { k=@@ a[i]; a[i]=a[i+1]; a[i+1]=@@ k; } } } for(j=n-1@@ ;j>0;j--) { for(i=0;i<j;i++) { if(b[i]>b[i+1]) { k=@@ b[i]; b[i]=b[i+1]; b[i+1]=@@ k; } } } } void@@ f3@@ (inta[],intb[],int@@ c[@@ ],int@@ m,intn) { inti; for(i=0;i<m;i++) c[i]=a[i]; for(i=m;i<@@ m+n;i++) c[i]=b[i-@@ m]; } void@@ f4@@ (intc[],int@@ m,intn) { inti; for(i=0;i<m+@@ n-1;i++) printf("%d",c[i]); printf("%d",c[i]); } voidmain() { f1@@ (a,b,m,n); f2@@ (a,b,m,n); f3@@ (a,b,@@ c,@@ m,n); f4@@ (c,@@ m,n); }  
c -1
h -1
voidmain() { inta,b,c,@@ d=0; scanf("%d%d%d",&a,&b,&c); if(b@@ >=@@ 2)@@ d=d+@@ 31; if(b@@ >=@@ 3)@@ d=d+@@ 28; if(b@@ >=@@ 4)@@ d=d+@@ 31; if(b@@ >=@@ 5@@ )@@ d=d+@@ 30; if(b@@ >=@@ 6@@ )@@ d=d+@@ 31; if(b@@ >=@@ 7@@ )@@ d=d+@@ 30; if(b@@ >=@@ 8@@ )@@ d=d+@@ 31; if(b@@ >=@@ 9@@ )@@ d=d+@@ 31; if(b@@ >=@@ 10@@ )@@ d=d+@@ 30; if(b@@ >=@@ 11@@ )@@ d=d+@@ 31; if(b@@ >=@@ 12@@ )@@ d=d+@@ 31; d=d@@ +c; if(((@@ a%4==0&&a%100!=0@@ )||(@@ a%@@ 400==0)@@ )&&@@ b@@ >2) d=d@@ +1; printf("%d",d); }  
c -1
h -1
0

voidf@@ (int@@ str@@ [],int@@ m) {@@ inti,j,k; for(j=0;j<m;j++) for(i=0;i<m-1;i++) if(str@@ [i]>@@ str@@ [i+1]) {@@ k=@@ str@@ [i]; str[i]=@@ str@@ [i+1]; str@@ [i+1]=@@ k@@ ;} } void@@ g@@ (inta[],intb[],int@@ ma@@ ,int@@ mb@@ ) {inti; for(i=@@ ma@@ ;i<@@ (@@ ma@@ +@@ mb@@ );i++) a[i]=b[i-@@ ma@@ ]; } voidmain() {int@@ ma@@ ,@@ mb@@ ,i; inta[@@ 8888@@ ],b[@@ 8888@@ ]; scanf("%d%d",&@@ ma@@ ,&@@ mb@@ ); for(i=0;i<@@ ma@@ ;i++) scanf("%d",&a[i]); for(i=0;i<@@ mb@@ ;i++) scanf("%d",&b[i]); f(a,@@ ma@@ ); f(@@ b,@@ mb@@ ); g@@ (a,b,@@ ma@@ ,@@ mb@@ ); for(i=0;i<=@@ (@@ ma@@ +@@ mb@@ -1);i++) {@@ if(i@@ !=0) printf(""); printf("%d",@@ a[i]);} }  
c -1
h -1
intmain() { inti,n; cin>>n; inta[@@ 20000@@ ]={0}; for(i=0;i<n;i++) { cin>>a[i]; } cout<<a[0]; intk,@@ m; for(k=1;k<@@ n;k++) { for(m=0;m<@@ k@@ ;m++) { if(a[k]@@ !=@@ a[m@@ ]) continue; else break; } if(m==@@ k@@ &&@@ a[k]@@ !=@@ a[k@@ -1@@ ]) cout<<""<<@@ a[k]; } return0; }  
c -1
h -1
0

structpatient { charID@@ [11]; intage; structpatient*next; } main() { inti,n; structpatient*@@ old@@ ,*@@ young@@ ,*@@ ot@@ ,*@@ yt@@ ,*p; structpatient*@@ paixu@@ (structpatient@@ *@@ h); scanf("%d",&n); ot@@ =NULL; yt@@ =NULL; for(i=0;i<n;i++) { p=@@ (structpatient@@ *)malloc(len); scanf("%s%d",@@ p->@@ ID,&@@ p->@@ age); p@@ ->next=NULL; if(p->@@ age@@ <60) { if(@@ yt@@ ) yt@@ ->next=p; else young@@ =p; yt@@ =p; } else { if(@@ ot@@ ) ot@@ ->next=p; else old@@ =p; ot@@ =p; } } old@@ =@@ paixu(@@ old@@ ); while(@@ old@@ ) { printf("%s\n",old@@ ->@@ ID); old@@ =@@ old@@ ->next; } while(@@ young@@ ) { printf("%s\n",@@ young@@ ->@@ ID); young@@ =@@ young@@ ->next; } } structpatient*@@ paixu@@ (structpatient@@ *@@ h@@ ) { structpatient*@@ hh@@ =@@ h@@ ,*@@ before@@ ,*@@ after@@ ; h=@@ h@@ ->next; hh@@ ->next=NULL; while(@@ h@@ ) { before@@ =@@ hh@@ ; if(@@ before@@ ->age@@ <@@ h@@ ->age@@ ) { hh@@ =@@ h; after@@ =@@ h@@ ->next; h@@ ->next=@@ before@@ ; h=@@ after@@ ; } else { while(@@ before@@ ->next) { if(@@ before@@ ->next@@ ->age@@ >=@@ h@@ ->age@@ ) before@@ =@@ before@@ ->next; else break; } after@@ =@@ h@@ ->next; h@@ ->next=@@ before@@ ->next; before@@ ->next=@@ h; h=@@ after@@ ; } } return@@ hh@@ ; }  
c -1
h -1
structstudent { intnum; int@@ score1@@ ; int@@ score2; intsum; structstudent*next; }; structstudent*creat@@ (intm) { inti=0; structstudent*head,*p1,*p2; p1=p2=(structstudent*)malloc(LEN); scanf("%d%d%d",&p1->num,&p1->@@ score1@@ ,&p1->@@ score2); p1->@@ sum=(@@ p1->@@ score1@@ )+@@ (@@ p1->@@ score2); head=NULL; for(i=0;i<m-1;i++) { if(i==0)@@ head=p1; elsep2->next=p1; p2=p1; p1=(structstudent*)malloc(LEN); scanf("%d%d%d",&p1->num,&p1->@@ score1@@ ,&p1->@@ score2); p1->@@ sum=(@@ p1->@@ score1@@ )+@@ (@@ p1->@@ score2); } p2->next=p1; p1->next=NULL; return(head); } voidprint@@ (structstudent*head@@ ) { structstudent*@@ p=@@ head,*@@ q=@@ head; int@@ a=0,b=0,@@ c=0; if(head@@ !=NULL) {@@ do { if(a<@@ p->@@ sum) {@@ a=@@ p->@@ sum;@@ q=@@ p@@ ;} p=p->next; }while(p@@ !=NULL); printf("%d%d\n",@@ q->@@ num,@@ q->@@ sum); q->@@ sum=0; p=@@ head;@@ q=@@ head; do {@@ if(b@@ <@@ p->@@ sum) {@@ b=@@ p->@@ sum;@@ q=@@ p@@ ;} p=p->next; }while(p@@ !=NULL); printf("%d%d\n",@@ q->@@ num,@@ q->@@ sum); q->@@ sum=0; p=@@ head;@@ q=@@ head; do {@@ if(c@@ <@@ p->@@ sum) {@@ c=@@ p->@@ sum;@@ q=@@ p@@ ;} p=p->next; }while(p@@ !=NULL); printf("%d%d",@@ q->@@ num,@@ q->@@ sum); } } voidmain() { intm; scanf("%d",&m); structstudent*head@@ ,@@ stu@@ ; head=creat@@ (m); print(head); }  
c -1
h -1
0

intmain() { intsz[@@ 1001]; intn,i,j,k,@@ m; m=0; scanf("%d",&n); scanf("%d",&k); for(i=0;i<n;i++) { scanf("%d",&(sz[i]@@ )); } for(i=0;i<n;i++) { for(j=0;j<n;j++) { if(sz[i]+sz@@ [j]==k) { m=1; printf("yes"); break; } } if(m==1) break; } if(m==0) printf("no"); return0; }  
c -1
h -1
intmain() { intk; cin>>k; inth@@ [50@@ ]; inti,j; for(i=0;i<@@ k;i++)@@ cin>>@@ h@@ [i]; intnum[@@ 50@@ ],@@ max; num@@ [0]=1; for(i=1;i<k;i++) { max=0; for(j=0;j<i;j++) { if(h@@ [j]>=@@ h@@ [i]@@ &&@@ num[j]@@ >max)max=@@ num@@ [j]; } num[i]=@@ max+1; } max=0; for(i=1;i<k;i++) { if(num@@ [i]@@ >max)max=@@ num[i]; } cout<<max<<endl; return0; }  
c -1
h -1
0

intmain(){ structstu@@ { int@@ xh@@ ; int@@ yw@@ ; int@@ sx; int@@ zf@@ ; }@@ data@@ [100000]; intn,i,@@ max,@@ x@@ ,j; scanf("%d",&n); for(i=0;i<n;i++){ scanf("%d%d%d",&@@ data@@ [i].@@ xh@@ ,&@@ data@@ [i].@@ yw@@ ,&@@ data@@ [i].@@ sx@@ ); data@@ [i].@@ zf@@ =@@ data@@ [i].@@ yw@@ +@@ data@@ [i].@@ sx; } for(i=0;i<@@ 3;i++){ max=@@ data@@ [0].@@ zf@@ ; x=0; for(j=1;j<@@ n;j++){ if(@@ data@@ [j].@@ zf@@ >max){ max=@@ data@@ [j].@@ zf@@ ; x@@ =j; } } printf("%d%d\n",@@ data@@ [x@@ ].@@ xh@@ ,@@ data@@ [x@@ ].@@ zf@@ ); data@@ [x@@ ].@@ zf@@ =0; } }  
c -1
h -1
intmain() { intn,i,j,@@ a[100][100],@@ zb@@ [100][@@ 2@@ ],@@ k=0,@@ s=0; int(*p)@@ [100],@@ (*@@ b)@@ [2]; p=a; b=@@ zb@@ ; cin>>n; for(i=0;i<n;i++) { for(j=0;j<n;j++) { cin>>@@ *(*(p+i)+j); if(@@ *(*(p+i)@@ +j)@@ ==0) { *(*(@@ b@@ +k@@ )+@@ 0)@@ =i; *(*(@@ b@@ +k)@@ +1)@@ =j; k++; } } } s=(@@ *(*(@@ b@@ +k@@ -1)@@ +@@ 0)@@ -@@ *(*(@@ b+@@ 0@@ )+@@ 0)@@ -1)*(@@ *(*(@@ b@@ +k@@ -1)@@ +1)@@ -@@ *(*(@@ b+@@ 0)@@ +1)@@ -1); cout<<s<<endl; return0; }  
c -1
h -1
0

intmain() { intn,m,@@ i,j,k,@@ p=0; scanf("%d%d",&n,&m); intsz[@@ 1000],@@ pl@@ [1000],@@ a; for(i=0;i<n;i++) { scanf("%d",&sz[i]); pl@@ [i]=@@ sz[i]; } for(k=0;k<n;k++) { for(j=1;j<n;j++) { a=@@ pl@@ [k]@@ +sz@@ [j]; if(a!=@@ m) { p++; } } } if(p==@@ n@@ *(@@ n-1@@ )) { printf("no"); } else { printf("yes"); } return0; }  
c -1
h -1
intmain(){ inti,j=0,@@ count1@@ =0,@@ count=0; char@@ lian1@@ [501],@@ lian2@@ [501]; double@@ bi@@ ,@@ xiang@@ ; scanf("%lf",&@@ bi@@ ); scanf("%s",@@ lian1@@ ); scanf("%s",@@ lian2@@ ); for(i=0;@@ lian1@@ [i]!='\0';i++){ count++; } for(i=0;@@ lian1@@ [i]!='\0';i++){ if(@@ lian2@@ [i]==@@ lian1@@ [i]) count1@@ ++; if(@@ lian1@@ [i]!='A'&&@@ lian1@@ [i]!='T'&&@@ lian1@@ [i]!='C'&&@@ lian1@@ [i]!='G'){ j@@ =1@@ ;break; } if(@@ lian2@@ [i]!='A'&&@@ lian2@@ [i]!='T'&&@@ lian2@@ [i]!='C'&&@@ lian2@@ [i]!='G'){ j@@ =1@@ ;break; } } if(j@@ ==1) printf("error"); if(j@@ ==0){ xiang@@ =@@ count1@@ *1.0/@@ count; if(@@ xiang@@ >@@ bi@@ ) printf("yes"); if(@@ xiang@@ <=@@ bi@@ ) printf("no"); } return0; }  
c -1
h -1
0

intmain() { charstring@@ [257]; char@@ substring@@ [257]; char@@ replacement@@ [257]; int@@ h,@@ i,j,k,@@ l1,l2,@@ l3@@ ,@@ temp,@@ r=0,@@ flag=0; scanf("%s",@@ string); scanf("%s",@@ substring); scanf("%s",@@ replacement); l1=strlen(@@ string); l2=strlen(@@ substring); l3@@ =strlen(@@ replacement); for(i=0;i<l1;i++){ if(string@@ [i]==@@ substring@@ [0]){ temp@@ =i; r=0; for(j=0;j<@@ l2@@ ;j++){ if(string@@ [@@ temp@@ +j@@ ]==@@ substring@@ [j]){ r=r@@ +1; } } if(r@@ ==@@ l2@@ ){ for(h=0;h@@ <@@ temp@@ ;@@ h@@ ++){ printf("%c",@@ string@@ [h@@ ]); } for(j=0;j<@@ l3@@ ;j++){ printf("%c",@@ replacement@@ [j]); } for(k=@@ temp@@ +@@ l2@@ ;k<@@ l1@@ ;k++){ printf("%c",@@ string@@ [k]); } return0; } } } printf("%s",@@ string); return0; }  
c -1
h -1
main() { intn,a[@@ 20000],@@ j,@@ temp; scanf("%d",&n); for(inti=1;i<=n;i++) { scanf("%d",&@@ temp); if(i==1) { j=0; printf("%d",@@ temp); a[j]=@@ temp; } else { int@@ c=0; for(intk=0@@ ;k<=@@ j@@ ;k++) { if(a[k@@ ]==@@ temp@@ ) c++; } if(c@@ ==0) { printf("%d",@@ temp); j++; a[j]=@@ temp; } } } getchar(); getchar(); }  
c -1
h -1
0

structbook { intnum; charname@@ [27]; }b[@@ 1001]; voidmain() { intn,i,j,k,@@ d,@@ g@@ [@@ 27@@ ],@@ e=0,@@ f@@ =0,@@ l; char@@ m,@@ h; scanf("%d",&n); for(i=0;i<n;i++) scanf("%d%s",&@@ b[i].@@ num,@@ b[i].@@ name); m@@ ='A'; for(k=0;k<26;k++) { d=0; for(i=0;i<n;i++) { for(j=0;j<26;j++) { if(b[i].@@ name[j]==@@ m) d++; if(b[i].@@ name[j]==@@ '\0') break; } } m=m+1; g@@ [k]=@@ d; if(g@@ [k]@@ >@@ e@@ ) { e=@@ g@@ [k]; f=@@ k; } } h@@ ='A'+@@ f; printf("%c\n%d\n",@@ h,@@ e); for(i=0;i<n;i++) { d=0; for(j=0;j<26;j++) { if(b[i].@@ name[j]==@@ h@@ ) d++; if(b[i].@@ name[j]==@@ '\0') break; } if(d@@ !=0) printf("%d\n",b[i].@@ num); } }  
c -1
h -1
intmain(){ struct@@ point@@ { charid[10]; intage; }@@ patient@@ [100]; intn; inti,j,k; int@@ on@@ =0,@@ old@@ [100],@@ flag; scanf("%d",&n); for(i=0;i<n;i++){ scanf("%s%d",@@ patient@@ [i].id,&@@ patient@@ [i].age); } for(j=@@ 120@@ ;j@@ >=60@@ ;j--){ for(i=0;i<n;i++){ if(@@ patient@@ [i].age@@ ==@@ j){ printf("%s\n",@@ patient@@ [i].id); old@@ [@@ on@@ ]=i; on@@ ++; } } } for(i=0;i<n;i++){ flag=0; for(k=0;k<@@ on@@ ;k++){ if(i==@@ old@@ [k]@@ ){ flag=1; break; } } if(flag@@ ==0){ printf("%s\n",@@ patient@@ [i].id); } } return0; }  
c -1
h -1
0

intf(int@@ shu@@ ,int@@ min) { int@@ k=1; if(@@ shu@@ <@@ min) { k=0; return@@ k; } else { for(inti=@@ min@@ ;i<@@ shu@@ ;i++) { if(@@ shu@@ %i==0) { k=k@@ +@@ f(@@ shu@@ /i,i); } } return@@ k; } } main() { intn,i,@@ a; scanf("%d",&n); for(i=0;i<n;i++) { scanf("%d",&a); if(i!=@@ n-1) printf("%d\n",@@ f(a,@@ 2)); else printf("%d",@@ f(a,@@ 2)); } }  
c -1
h -1
intmain(intargc,char*argv[]) { int@@ day,@@ month,@@ year; scanf("%d%d%d",&year,&month,&day); if((year%4==0&&year%100!=0)||(year%400==0)) { switch(month) { case1: { day=@@ day; break; } case2: { day=day+@@ 31; break; } case3: { day=@@ day@@ +31+@@ 29; break; } case4: { day=@@ day+31+29@@ +31; break; } case5: { day=@@ day+31+29@@ +31+30@@ ; break; } case6: { day=@@ day+31+29@@ +31+30@@ +31; break; } case7: { day=@@ day+31+29@@ +31+30+31+30@@ ; break; } case8: { day=@@ day+31+29@@ +31+30+31+30@@ ; break; } case9: { day=@@ day+31+29@@ +31+30+31+30@@ +31; break; } case10: { day=@@ day+31+29@@ +31+30+31+30@@ +31+30@@ ; break; } case11: { day=@@ day+31+29@@ +31+30+31+30@@ +31+30@@ ; break; } case12: { day=@@ day+31+29@@ +31+30+31+30@@ +31+30@@ +31; break; } } } else { switch(month) { case1: { day=@@ day; break; } case2: { day=day+@@ 31; break; } case3: { day=@@ day@@ +31+@@ 28; break; } case4: { day=@@ day+31+28@@ +31; break; } case5: { day=@@ day+31+28@@ +31+30@@ ; break; } case6: { day=@@ day+31+28@@ +31+30@@ +31; break; } case7: { day=@@ day+31+28@@ +31+30+31+30@@ ; break; } case8: { day=@@ day+31+28@@ +31+30+31+30@@ +31; break; } case9: { day=@@ day+31+28@@ +31+30+31+30+31+@@ 31; break; } case10: { day=@@ day+31+28@@ +31+30+31+30+31+31+30@@ ; break; } case11: { day=@@ day+31+28@@ +31+30+31+30+31+31+30@@ +31; break; } case12: { day=@@ day+31+28@@ +31+30+31+30+31+31+30+31+30@@ ; break; } } } printf("%d\n",@@ day); return0; }  
c -1
h -1
0

voidmain() { intm,i,j,@@ temp,@@ max; chara[@@ 1000][@@ 10@@ ],b[@@ 1000][@@ 20],@@ w; intc[@@ 26]; scanf("%d",&m); for(i=0;i<26@@ ;i++)@@ c[i]@@ =0; for(i=0;i<m;i++) { scanf("%s%s",@@ a[i],@@ b[i]); } for(i=0;i<m;i++) { for(j=0;j<strlen(@@ b[i]@@ );j++) { if(b[i][j]=='@@ A')@@ c@@ [0]@@ ++; if(b[i][j]=='@@ B@@ ')c[@@ 1@@ ]++; if(b[i][j]=='@@ C')@@ c[@@ 2@@ ]++; if(b[i][j]=='@@ D@@ ')c[@@ 3@@ ]++; if(b[i][j]=='@@ E@@ ')c[@@ 4@@ ]++; if(b[i][j]=='@@ F@@ ')c[@@ 5@@ ]++; if(b[i][j]=='@@ G')@@ c[@@ 6@@ ]++; if(b[i][j]=='@@ H@@ ')c[@@ 7@@ ]++; if(b[i][j]=='@@ I@@ ')c[@@ 8@@ ]++; if(b[i][j]=='@@ J@@ ')c[@@ 9@@ ]++; if(b[i][j]=='@@ K@@ ')c[@@ 10@@ ]++; if(b[i][j]=='@@ L@@ ')c[@@ 11@@ ]++; if(b[i][j]=='@@ M@@ ')c[@@ 12@@ ]++; if(b[i][j]=='@@ N@@ ')c[@@ 13@@ ]++; if(b[i][j]=='@@ O@@ ')c[@@ 14@@ ]++; if(b[i][j]=='@@ P@@ ')c[@@ 15@@ ]++; if(b[i][j]=='@@ Q@@ ')c[@@ 16@@ ]++; if(b[i][j]=='@@ R@@ ')c[@@ 17@@ ]++; if(b[i][j]=='@@ S@@ ')c[@@ 18@@ ]++; if(b[i][j]=='@@ T')@@ c[@@ 19@@ ]++; if(b[i][j]=='@@ U@@ ')c[@@ 20@@ ]++; if(b[i][j]=='@@ V@@ ')c[@@ 21@@ ]++; if(b[i][j]=='@@ W@@ ')c[@@ 22@@ ]++; if(b[i][j]=='@@ X@@ ')c[@@ 23@@ ]++; if(b[i][j]=='@@ Y@@ ')c[@@ 24@@ ]++; if(b[i][j]=='@@ Z@@ ')c[@@ 25@@ ]++; } } for(i=0;i<26;i++) {@@ temp=0; for(j=0;j<26;j++) { if(c@@ [i]>=@@ c@@ [j]) { temp@@ ++; } } if(temp@@ ==@@ 26@@ ){@@ max@@ =i;@@ break;} } w@@ ='A'+i; printf("%c\n",@@ w); printf("%d\n",@@ c[i]); for(i=0;i<m;i++) { for(j=0;j<strlen(@@ b[i]@@ );j++) { if(b[i]@@ [j]==@@ w@@ ){@@ printf("%s\n",@@ a[i]@@ );break;} } } }  
c -1
h -1
intmain() { int@@ Student_Num@@ ; cin>>@@ Student_Num@@ ; struct@@ A { intID; intchinese; intmath; inttotal; }@@ student[@@ 100000@@ +@@ 10],@@ a[@@ 3@@ ]; for(inti=0;i<=@@ Student_Num@@ -1;i++) { cin>>@@ student[i].@@ ID; cin>>@@ student[i].@@ chinese; cin>>@@ student[i].@@ math; student[i].@@ total=@@ student[i].@@ math+@@ student[i].@@ chinese; } a[0]=@@ a[1@@ ]=a[@@ 2@@ ]=@@ student@@ [0]; for(inti=0;i<=@@ Student_Num@@ -1;i++) { if(@@ student[i].@@ total>@@ a[0].@@ total@@ )@@ a[0]=@@ student@@ [i]; } for(inti=0;i<=@@ Student_Num@@ -1;i++) { if(@@ student[i].@@ total>@@ a[1].@@ total@@ &&@@ student[i].@@ total@@ <=@@ a[0].@@ total@@ &&@@ student[i].@@ ID@@ !=@@ a[0].@@ ID@@ )@@ a[1]=@@ student@@ [i]; } for(inti=0;i<=@@ Student_Num@@ -1;i++) { if(@@ student[i].@@ total>@@ a[2].@@ total@@ &&@@ student[i].@@ total@@ <=@@ a[1].@@ total@@ &&@@ student[i].@@ ID@@ !=@@ a[0].@@ ID@@ &&@@ student[i].@@ ID@@ !=@@ a[1].@@ ID@@ )@@ a[2]=@@ student@@ [i]; } for(inti=0;i<=@@ 2@@ ;i++) { cout<<@@ a[i].@@ ID@@ <<""<<@@ a[i].@@ total@@ <<endl; } return0; }  
c -1
h -1
0

intmain() { intn,m,@@ i,j,@@ shu@@ [100][100],@@ hang@@ =1,@@ lie@@ =1,@@ count,@@ mark@@ ,@@ zddjx@@ ,@@ duijiao@@ ,@@ jh@@ =1,@@ jl@@ =1; cin>>n>>m; count=@@ n*@@ m; for(i=1;i<=n;i++) { for(j=1;j<=m;j++) { cin>>@@ shu@@ [i][j]; } } if(n==1) { for(j=1;j<=m;j++) { cout<<@@ shu@@ [1]@@ [j]<<endl; } } if(n==1) { return0; } if(m==1) { for(j=1;j<=n;j++) { cout<<@@ shu@@ [j]@@ [1]@@ <<endl; } return0; } if(m==1) { return0; } cout<<@@ shu@@ [@@ hang@@ ][@@ lie@@ ]<<endl; duijiao@@ =@@ hang@@ +@@ lie@@ ; count@@ --; while(@@ count@@ !=0) { duijiao@@ ++; hang@@ =@@ jh@@ ; lie@@ =@@ duijiao@@ -@@ hang@@ ; if(@@ lie@@ ==@@ m) { jh@@ ++; } while(@@ lie@@ >=@@ jl@@ ) { cout<<@@ shu@@ [@@ hang@@ ][@@ lie@@ ]<<endl; count@@ --; hang@@ ++; lie@@ --; } if(@@ hang@@ ==@@ n@@ +1) { jl@@ ++; } } return0; }  
c -1
h -1
intmain() { inta[@@ 17@@ ]={0},@@ count; inti,j,k,@@ two@@ ,@@ num; for(k@@ =1;@@ ;k++) { count=0; for(i=1;i<=@@ 16@@ ;i++) { cin>>a[i]; if(a[1@@ ]==@@ -1@@ ||@@ a[i]@@ ==0) { num@@ =i; break; } } if(a[1@@ ]==@@ -1) break; for(i=1;i<@@ num;i++) { two@@ =@@ 2*@@ a[i]; for(j=1;j<@@ num@@ ;j++) if(@@ two@@ ==@@ a[j]) { count++; break; } } cout<<count<<endl; } return0; }  
c -1
h -1
0

int@@ ways@@ (int,int); voidmain() { int@@ ways@@ (inta,int@@ min); intn,@@ b; scanf("%d",&n); while(n@@ -->@@ 0@@ ) { scanf("%d",&b); printf("%d\n",@@ ways@@ (b,@@ 2)); } } int@@ ways@@ (inta,int@@ min) { if(a<@@ min@@ )return0; intsum=0,@@ i; for(i=min@@ ;i<=@@ sqrt@@ (a@@ *1.0@@ );i++) { if(a%i==0) sum=sum+@@ ways@@ (a/i,i); } return@@ sum@@ +1; }  
c -1
h -1
intmain(){ int@@ tumour@@ [256@@ ][@@ 256],@@ n,i,j,@@ x1@@ =-1,@@ y1,@@ x2@@ =-1,@@ y2@@ ,@@ s; scanf("%d",&n); for(i=0;i<n;i++){ for(j=0;j<n;j++){ scanf("%d",&@@ tumour@@ [i][j]); } } for(i=0;i<n;i++){ for(j=0;j<n;j++){ if(@@ tumour@@ [i][j]@@ ) continue; else{ x1=i; y1=j; break; } } if(@@ x1@@ >=0) break; } for(i=n-1;i>=0;i--){ for(j=n-1@@ ;j>=0;j--){ if(@@ tumour@@ [i][j]@@ ) continue; else{ x2=i; y2=j; break; } } if(@@ x2@@ >=0) break; } s=(@@ x2-x1-1)*(y2-y1-1); printf("%d\n",s); return0; }  
c -1
h -1
0

intmain() { intf(inta,int@@ b); intn,m,@@ i,@@ d; scanf("%d",&n); for(i=0;i<n;i++) { scanf("%d",&m); d=@@ f(@@ m,@@ 2); printf("%d\n",@@ d); } return0; } intf@@ (inta,intb) { int@@ t@@ =1,@@ k,@@ j; for(j=@@ b@@ ;j<@@ a@@ ;j++) { if(a%@@ j@@ ==0&&@@ a/@@ j@@ >=@@ j) k=@@ f(@@ a/@@ j@@ ,j); else k=0; t=t+@@ k; } return@@ t; }  
c -1
h -1
intk; int@@ height@@ [26]; int@@ len@@ (int@@ num@@ ){ int@@ temp,@@ max,@@ i; if(num@@ ==k){ return(1); }else{ max=0; for(i=@@ num@@ +1;i<=@@ k;i++){ if(@@ height@@ [@@ num@@ ]>=@@ height@@ [i]){ temp=@@ len@@ (i); if(max<@@ temp@@ ){ max=@@ temp; } } } } return(@@ max@@ +1); } main(){ height@@ [0]=@@ 30001@@ ; scanf("%d",&k); inti; for(i=1;i<=@@ k;i++){ scanf("%d",&@@ height@@ [i]); } printf("%d",@@ len@@ (@@ 0)@@ -1); scanf("%d",&k); }  
c -1
h -1
0

intmain() { inti,j,@@ l; doublen; double@@ k; scanf("%lf",&n); chara[@@ 1000],b[1000]; scanf("%s",a); scanf("%s",b); for(i=0;i<=@@ strlen(a)@@ -1;i++) { if(a[i]!='A'&&a[i]!='T'&&a[i]!='C'&&a[i]!='@@ G') { printf("error"); return0; } } for(i=0;i<=@@ strlen(a)@@ -1;i++) { if(@@ b[i]!='A'&&b[i]!='T'&&b[i]!='C'&&b[i]!='@@ G') { printf("error"); return0; } } k=0; for(i=0;i<=@@ strlen(a)@@ -1;i++) { if(a[i]==b[i]) k++; } k=k@@ /@@ (@@ strlen(@@ a@@ )); if(k@@ >=@@ n) printf("yes"); else printf("no"); return0; }  
c -1
h -1
intmain() { intn; scanf("%d\n",&n); structstudent{ intid; int@@ yu@@ ,@@ shu; }stu[100000]; inti; int@@ s1@@ =0,@@ s2@@ =0,@@ s3@@ =0; int@@ x1@@ =0,@@ x2@@ =0,@@ x3@@ =0; for(i=0;i<n;i++) { scanf("%d%d@@ %d@@ \n",&@@ stu[i].@@ id@@ ,&stu[i].@@ yu@@ ,&stu[i].@@ shu); } int@@ s,@@ x; for(i=0;i<n;i++) { s=@@ stu[i].@@ yu@@ +stu[i].@@ shu; x=@@ stu[i].@@ id; if(s@@ >@@ s1@@ ) {@@ s3=@@ s2@@ ;@@ x3@@ =@@ x2@@ ;@@ s2=@@ s1@@ ;@@ x2@@ =@@ x1@@ ;@@ s1@@ =@@ s@@ ;@@ x1@@ =@@ x@@ ;} elseif(@@ s@@ ==@@ s1@@ ) {@@ s3=@@ s2@@ ;@@ x3@@ =@@ x2@@ ;@@ s2=@@ s@@ ;@@ x2@@ =@@ x@@ ;} elseif(@@ s@@ <@@ s1@@ &&@@ s@@ >@@ s2@@ ) {@@ s3=@@ s2@@ ;@@ x3@@ =@@ x2@@ ;@@ s2=@@ s@@ ;@@ x2@@ =@@ x@@ ;} elseif(@@ s@@ ==@@ s2@@ ) {@@ s3=@@ s@@ ;@@ x3@@ =@@ x@@ ;} elseif(@@ s@@ <@@ s2@@ &&@@ s@@ >@@ s3@@ ) {@@ s3=@@ s@@ ;@@ x3@@ =@@ x@@ ;} } printf("%d%d\n",@@ x1,@@ s1); printf("%d%d\n",@@ x2,@@ s2); printf("%d%d\n",@@ x3@@ ,@@ s3); return0; }  
c -1
h -1
0

intmain(intargc,char*argv[]) { intn,k,i,@@ a[1000],@@ x@@ ,j,@@ z=0; scanf("%d%d",&n,&k); for(i=0;i<n;i++) scanf("%d",&a[i]); for(i=0;i<n;i++) { x=@@ k-@@ a[i]; for(j=0;j<n;j++) { if(j==@@ i)@@ continue; if(a[j]==@@ x)@@ z=1; } } if(z@@ ==1)@@ printf("yes"); elseprintf("no"); return0; }  
c -1
h -1
intmain() { intn,a[@@ 30000@@ ],i,j,@@ hash@@ [@@ 30000@@ ]; cin>>n; for(i=1;i<=n;i++) { cin>>a[i]; hash@@ [i]=1; } cout<<@@ a[1]; for(i=2;i<=n;i++) { for(j=1;j<i;j++) { if(a[i]==a[j]) { hash@@ [i]=@@ hash@@ [i]@@ *@@ 0@@ ; } else { hash@@ [i]=@@ hash@@ [i]; } } } for(i=2;i<=n;i++) { if(@@ hash@@ [i]@@ ==1) cout<<""<<a[i]; } int@@ b@@ ;@@ cin>>@@ b; return0; }  
c -1
h -1
0

intsum@@ =1; voidf@@ (int@@ begin@@ ,int@@ m){ inti; for(i=@@ begin@@ ;i<=@@ m;i++){ if(m@@ %i==0&&@@ m@@ /i@@ >=i@@ ){@@ sum@@ ++;@@ f(@@ i,@@ m@@ /i@@ );} if(i>@@ m@@ /i@@ )break; } } intmain(){ intn,@@ j,@@ m; cin>>n; for(j=1;j<=n;j++){ cin>>m; f(@@ 2,@@ m); cout<<sum<<endl; sum=1; } return0; }  
c -1
h -1
intmain() { intn,m,@@ a[100@@ ][100@@ ],b[@@ 10000@@ ],i,j,@@ sum,@@ t=0; cin>>n>>m; for(i=1;i<=n;i++) for(j=1;j<=m;j++) { cin>>a[i][j]; } for(@@ sum=@@ 2;@@ sum<=@@ (@@ n+@@ m@@ );@@ sum@@ ++) { for(j=1;j<=n;j++) { if((@@ sum@@ -j@@ )@@ >0@@ &&(@@ sum@@ -j@@ )@@ <=@@ m) { t++; b[t@@ ]=@@ a[j]@@ [@@ sum@@ -j@@ ]; } } } for(i=1;i<=@@ (m@@ *@@ n@@ );i++) cout<<b[i]@@ <<endl; return0; }  
c -1
h -1
0

voidmain() { inti,j,@@ s,@@ sum,@@ num[@@ 100000@@ ]={0}; scanf("%d",&@@ sum); for(i=0;i<@@ sum@@ ;i++) { scanf("%d",&@@ num[i]); } for(i=0;i<@@ sum@@ ;i++) { for(j=0;j<i;j++) { if(num@@ [i]==@@ num@@ [j]) { num@@ [i]=0; break; } } } printf("%d",@@ num@@ [0]); for(i=1;i<@@ sum@@ ;i++) { if(num@@ [i]==0) continue; else@@ printf("%d",@@ num[i]); } }  
c -1
h -1
intmain() { intn; scanf("%d",&n); ints@@ [100][100]; inti,j; for(i=1;i<=n;i++) { for(j=1;j<=n;j++) { scanf("%d",&s@@ [i][j]); } } int@@ i1@@ ,@@ i2@@ ,@@ j1@@ ,@@ j2@@ ; for(i=1;i<=n;i++) { for(j=1;j<=n;j++) { if(s@@ [i][j]==0) { i1@@ =i; j1@@ =j; break; } } } for(i=n@@ ;i>=1;i--) { for(j=n@@ ;j@@ >=1@@ ;j--) { if(s@@ [i][j]==0) { i2@@ =i; j2@@ =j; break; } } } int@@ sq@@ ; sq@@ =(@@ j2@@ -@@ j1@@ -1)*(@@ i1@@ -@@ i2@@ -1); printf("%d\n",@@ sq@@ ); return0; }  
c -1
h -1
0

intmain(){ intn,k,i,j,@@ h=0; ints[@@ 1000],@@ g@@ [1000]; scanf("%d%d",&n,&k); for(i=0;i<=@@ n-1;i++){ scanf("%d",&(@@ s[i]@@ )); } for(i=0;i<=@@ n-1;i++){ g@@ [i]=@@ k-@@ s[i]; for(j=0;j<=@@ n-1@@ ;j++){ if(g@@ [i]==@@ s[j]@@ ){ h@@ ++; } } } if(h@@ ==0){ printf("no"); }else{ printf("yes"); } return0; }  
c -1
h -1
intmain() { intn,@@ num,@@ i,j=0,@@ k; inta[@@ 91@@ ]={0}; cin>>n; intb[@@ 20000@@ ]={0}; for(i=0;i<n;i++) { cin>>num; if(a[@@ num@@ -@@ 10@@ ]==0) { b[j]=@@ num; a[@@ num@@ -@@ 10@@ ]++; j++; } } cout<<@@ b[0]; for(k=1;k<=n;k++) { if(@@ b[k@@ ]@@ ==0)break; else@@ cout<<""<<@@ b[k@@ ]; } return0; }  
c -1
h -1
0

intm@@ [100],@@ n@@ [100@@ ],*@@ p,*@@ q,@@ a,b; voidinput() { p=@@ m;@@ q=@@ n; inti; scanf("%d%d",&a,&b); for(i=0;i<@@ a@@ ;i++,@@ p++) { scanf("%d",@@ p); } for(i=0;i<b@@ ;i++,@@ q++) { scanf("%d",@@ q); } p=@@ m;@@ q=@@ n; } voidsort@@ (int*p,int@@ a) { inti,j,temp; for(i=0;i<@@ a@@ -1;i++) { for(j=0;j<a@@ -i-1;j++) { if(p@@ [j]>@@ p@@ [j+1]) { temp=@@ p@@ [j]@@ ;p@@ [j]=@@ p@@ [j+1]@@ ;p@@ [j+1]=temp; } } } } void@@ mix@@ () { inti; for(i=0;i<b;i++) { p@@ [a@@ +i]=@@ q@@ [i]; } } voidoutput@@ () { inti; for(i=0;i<@@ a+@@ b@@ -1;i++) { printf("%d",@@ *(p@@ ++@@ )); } printf("%d\n",@@ *p@@ ); } main() { input(); sort(@@ p,@@ a); sort(@@ q,@@ b); mix@@ (); output@@ (); return0; }  
c -1
h -1
intmain() { intnum@@ (intn,int@@ *p@@ ); intn; inti=0; int*p; scanf("%d",&n); p=@@ (int*)malloc(sizeof(int)*n); for(i=0;i<n;i++)@@ scanf("%d",p@@ +i); printf("%d",@@ num@@ (n,@@ p@@ )); getchar(); getchar(); getchar(); } intnum@@ (intn,int@@ *p@@ ) { inti,j,@@ tem@@ =0,@@ a=0; int*@@ max=@@ (int*)malloc(sizeof(int)*n); max@@ [n-1@@ ]=1; for(i=n-2;i>=0;i--) { tem@@ =0; for(j=n-1;j>i;j--) { if(p@@ [i]>=@@ p@@ [j]) { if(@@ tem@@ <@@ max@@ [j]) tem@@ =@@ max@@ [j]; } } max@@ [i]=@@ tem@@ +1; } a=0; for(i=0;i<n;i++) if(max@@ [i]>@@ a)@@ a=@@ max@@ [i]; return@@ a; }  
c -1
h -1
0

intmain(){ double@@ x,@@ p; inti,@@ l,@@ k=0,@@ c=1; scanf("%lf",&x); char@@ c1@@ [501],@@ c2@@ [501]; scanf("%s",@@ c1@@ ); scanf("%s",@@ c2@@ ); l=strlen(@@ c1@@ ); for(i=0;i<l;i++){ if((@@ c1@@ [i]!='A')&&(@@ c1@@ [i]!='T')&&(@@ c1@@ [i]!='C')&&(@@ c1@@ [i]!='G')){ printf("error"); c=0; break; } if((@@ c2@@ [i]!='A')&&(@@ c2@@ [i]!='T')&&(@@ c2@@ [i]!='C')&&(@@ c2@@ [i]!='G')){ printf("error"); c=0; break; } if(@@ c1@@ [i]==@@ c2@@ [i]){ k++; } } if(c@@ ){ p=@@ ((@@ double)@@ k)@@ /@@ ((@@ double)@@ l); if(p@@ >@@ x){ printf("yes"); } else{printf("no");} } return0; }  
c -1
h -1
intm,n,@@ a[@@ 20@@ ],b[@@ 20]; void@@ duqu@@ () { inti; cin>>m>>n; for(i=1;i<=m;i++) cin>>a[i]; for(i=1;i<=n;i++) cin>>b[i]; } voidpaixu@@ () { inti,j,t; for(i=1;i<=@@ m-1;i++) for(j=1;j<=@@ m@@ -i;j++) if(a[j]>a[j+1]) {t=@@ a[j];a[j]=a[j+1];@@ a[j+1]=@@ t;} for(i=1;i<=n-1;i++) for(j=1;j<=@@ n@@ -i;j++) if(b[j]>b[j+1]) {t=@@ b[j]@@ ;@@ b[j]=b@@ [j+1];@@ b[j+1]=@@ t;} } voidshuchu@@ () { inti,j; cout<<@@ a[1]; for(i=2;i<=@@ m;i++) cout<<""<<a[i]; for(j=1;j<=n;j++) cout<<""<<@@ b[j]; cout<<endl; } intmain() { duqu@@ (); paixu@@ (); shuchu@@ (); return0; }  
c -1
h -1
0

intmain() { inta[@@ 10000@@ ],*@@ p=@@ a,*@@ q=@@ a,@@ n,@@ h,@@ l,@@ i,j,@@ sum=0; scanf("%d",&n); for(i=1;i<=n;i++) { p=a; q=@@ a; scanf("%d%d",&@@ h@@ ,&@@ l); for(j=1;j<=@@ h@@ *@@ l@@ ;j++) { scanf("%d",p@@ ++@@ ); } if(h@@ ==1) { for(j=0;j<l;j++) { sum+=*(@@ q@@ +j); } } elseif(@@ l@@ ==1) { sum+=@@ *@@ q; sum+=*(@@ q@@ +@@ h@@ -1); } else { for(j=0;j<l;j++) { sum+=*(@@ q@@ +j); sum+=*(@@ q@@ +@@ h@@ *@@ l@@ -j@@ -1); } for(j=1;j<=@@ h@@ -2@@ ;j++) { sum+=*(@@ q@@ +j@@ *@@ l); sum+=*(@@ q@@ +j@@ *@@ l@@ +l@@ -1); } } printf("%d\n",sum); sum=0; } return0; }  
c -1
h -1
int@@ zui@@ (int@@ k,@@ intm,@@ inta[]) { ints@@ =1,@@ i=@@ m@@ +1,@@ max=0; if(m==@@ k)@@ s=1; else { for(i=m@@ +1;i<=@@ k;i++) { if(a[k@@ -m@@ ]<=@@ a[k@@ -i@@ ]) {@@ if(max<@@ zui@@ (@@ k,@@ i,@@ a@@ )) { max=@@ zui@@ (@@ k,@@ i,@@ a); } } } s=s+@@ max; } return@@ s; } intmain() { inti,k,@@ a[@@ 25],@@ max=0,@@ s; scanf("%d",&k); for(i=0;i<k;i++) { scanf("%d",&a[i]); } for(i=1;i<k;i++) { s=@@ zui@@ (@@ k,@@ i,@@ a); if(s@@ >max)max=@@ s; } printf("%d",max); return0; }  
c -1
h -1
0

intmain() { inta[@@ 13]={0,31,28,31,30,31,30,31,31,30,31,30,31}; inty,m,d,@@ i,@@ b; scanf("%d%d%d",&y,&m,&d); if((y%@@ 4==0&&y%100!=0@@ )||(y%@@ 400==0)) a[2@@ ]=a[@@ 2@@ ]+1; b=@@ d; for(i=1;i<m;i++) {@@ b=@@ a[i]+@@ b@@ ;} printf("%d",@@ b); return0; }  
c -1
h -1
intmain() {@@ inta[100][100],@@ s,@@ i,n,@@ j,@@ a1,@@ b1,@@ a2,@@ b2@@ ,@@ p=0,@@ l,@@ w; cin>>n; for(i=0;i<n@@ ;i=i+1@@ ) { for(j=0;j<n@@ ;j@@ =j+1@@ ) cin>>a[i][j]; } for(i=0;i<n@@ ;i=i+1@@ ) {@@ if(p@@ ==0) for(j=0;j<n@@ ;j@@ =j+1@@ ) {@@ if(a[i][j]@@ ==0){@@ a1@@ =i;@@ b1@@ =j@@ ;@@ p=p@@ +1;@@ }}} p=0; for(i=n-1;i>=0;i--) {@@ if(p@@ ==0) for(j=n-1@@ ;j>=0@@ ;j@@ =j@@ -1) {@@ if(a[i][j]@@ ==0){@@ a2@@ =i;@@ b2@@ =j@@ ;@@ p=p@@ +1;@@ }}} l=@@ b2-b1@@ +1;@@ w=@@ a1@@ -@@ a2@@ +1; s=@@ w@@ *@@ l; cout<<@@ s; return0; }  
c -1
h -1
0

intf@@ (intx,int@@ y){ if(@@ (int)@@ pow@@ (x,@@ 0@@ .@@ 5@@ )@@ <@@ y)@@ return1; int@@ d=1; for(inti=@@ y@@ ;i<=@@ (int)@@ pow@@ (x,@@ 0@@ .@@ 5@@ );i++) if((x@@ %i@@ )@@ ==0) d@@ +=@@ f(@@ x@@ /i,i); return@@ d; } intmain(){ intn,m; cin>>n; for(intk@@ =1@@ ;k<=@@ n;k++){ cin>>m; cout<<@@ f(@@ m,@@ 2)<<endl; } return0; }  
c -1
h -1
structbook { intnum; charname@@ [100]; structbook*next; }; structbook*@@ creat@@ (intn) { int@@ k=1; structbook@@ *head,*@@ p1,*p2,*@@ p; p1=(structbook@@ *)malloc(sizeof(structbook)); head@@ =p1;@@ p2@@ =p1;@@ p=@@ p1; scanf("%d%s",&p1->num,p1->name); p1->next=NULL; do { p1=(structbook@@ *)malloc(sizeof(structbook)); scanf("%d%s",&p1->num,p1->name); p2->next=p1; p2=p1; p1->next=NULL; k++; }while(@@ k@@ <@@ n); returnhead; } intmain(void) { structbook@@ *head,*p; char*@@ q; int*@@ s; intn,i,j,@@ max=0; s=@@ (int*)malloc(@@ 26@@ *sizeof(int)); for(i=0;i<26;i++) *(@@ s@@ +i)@@ =0; scanf("%d",&n); head=creat(n); p=head; while(p) { q=@@ p->@@ name@@ ; while(@@ *@@ q@@ !='\0') {@@ *(@@ s@@ +*(@@ q@@ )@@ -'@@ A')@@ +=@@ 1@@ ;q@@ ++;} p=p->next; } max=0; for(i=0;i<26;i++) if(*(@@ s@@ +i)@@ >max) max@@ =*(@@ s@@ +i); for(i=0;i<26;i++) if(*(@@ s@@ +i)@@ ==@@ max@@ )break; printf("%c\n%d\n",@@ 'A'+@@ i,@@ max); p=head; while(p) { q=@@ p->@@ name@@ ; if(@@ strchr(@@ q@@ ,'@@ A'+@@ i)@@ !=NULL) printf("%d\n",p->num); p=p->next; } }  
c -1
h -1
0

voidmain() { intn,m,@@ i,@@ a[1000],@@ b,@@ k=0,@@ tmp@@ ,j; scanf("%d%d",&n,&m); for(i=1;i<=@@ n+m;i++) { scanf("%d",&a[i]); } for(i=1;i<=n@@ +1;i++) for(j=1;j<=@@ n-1;j++) if(a[j]>a[j+1]) { tmp=@@ a[j]; a[j]=a[j+1]; a[j+1]=@@ tmp; } for(i=1;i<=@@ m@@ +1;i++) for(j=@@ n+1@@ ;j<=@@ n+@@ m-1;j++) if(a[j]>a[j+1]) { tmp=@@ a[j]; a[j]=a[j+1]; a[j+1]=@@ tmp; } printf("%d",@@ a[1]); for(i=2;i<=@@ n+m;i++) printf("%d",a[i]); }  
c -1
h -1
voidmain() { intn,i,j,@@ k=0,@@ flag@@ ,a[@@ 20000],b[@@ 20000]; scanf("%d",&n); for(i=0;i<n;i++) scanf("%d",&a[i]); for(i=0;i<n;i++) { flag=1; for(j=0;j<i;j++) {@@ if(a[i]==a[j]) flag@@ =0;} if(flag==1) {@@ b[k@@ ]=a[i]; k@@ ++;} } for(i=0;i<@@ k-1;i++) printf("%d",b[i]); printf("%d\n",@@ b[i]); }  
c -1
h -1
0

intmain() { intk; cin>>k; int@@ book@@ ; charwriter@@ [26]; int@@ counter@@ [26]={0}; int@@ bookbelong@@ [26@@ ][@@ 999@@ ]={0}; int@@ everynum@@ [26]={0}; intt=0; while(k@@ --) { cin>>@@ book@@ >>@@ writer@@ ; int@@ str@@ =strlen(@@ writer); for(inti=0;i<@@ str@@ ;i++) { int@@ flag@@ =@@ writer@@ [i]@@ -'A'; counter@@ [@@ flag@@ ]++; bookbelong@@ [@@ flag@@ ][@@ everynum@@ [@@ flag@@ ]++@@ ]=@@ book@@ ; } } intmax=@@ counter@@ [0]; int@@ maxnum@@ =0; for(inti=0;i<@@ 26;i++) { if(@@ counter@@ [i]>max) { maxnum@@ =i; max=@@ counter@@ [i]; }} char@@ writerbest@@ ; writerbest@@ ='A'+@@ maxnum@@ ; cout<<@@ writerbest@@ <<endl@@ <<@@ everynum@@ [@@ maxnum@@ ]<<endl; for(inti=0;i<@@ everynum@@ [@@ maxnum@@ ]@@ ;i++) cout<<@@ bookbelong@@ [@@ maxnum@@ ]@@ [i]<<endl; return0; }  
c -1
h -1
intmain() { intx@@ [100][@@ 16]; intsum@@ [100]={0}; float@@ y; inti,j,k; for(j=0;j<@@ 100@@ ;j++) { for(i=0;i<16;i++) { scanf("%d",&@@ x[j]@@ [i]); if(x@@ [j]@@ [0]@@ ==-1) goto@@ loop@@ ; if(x@@ [j]@@ [i]==0) break; } } loop@@ :@@ for(j=0;j<@@ 100@@ ;j++) { if(x@@ [j]@@ [0]@@ !=-1) { for(i=0;i<16;i++) { if(x@@ [j]@@ [i]==0) break; for(k=0;k<@@ 16@@ ;k++) { if(x@@ [j]@@ [k]@@ ==0) break; y@@ =1.0*@@ x[j]@@ [i]@@ /@@ (@@ 1.0*@@ x[j]@@ [k]); if(y@@ ==@@ 2) sum@@ [j]=@@ sum@@ [j]+1; } } printf("%d\n",sum@@ [j]); } if(x@@ [j]@@ [0]@@ ==-1) break; } return0; }  
c -1
h -1
0

intmain() { introw,col,@@ time@@ =0,@@ i,j,@@ n; intarray[@@ 110][110@@ ]; cin>>row>>col; for(i=0;i<row;i++) { for(j=0;j<col;j++) { cin>>@@ *(*(@@ array@@ +i)@@ +j); } } for(inti=0;i<=@@ row+col-2@@ ;i++) { if(i@@ <col) { for(intj=0;j<@@ row@@ &&j@@ <=@@ i;j++) cout<<@@ *(*(@@ array@@ +j)@@ +i-j@@ )<<endl; } else { for(intj=@@ col-1@@ ;j>=i@@ -@@ row@@ +1@@ &&j>=0@@ ;j--) cout<<@@ *(*(@@ array@@ +i-j@@ )@@ +j)<<endl; } } return0; }  
c -1
h -1
intmain(){ doublen,@@ c; inti,j=0,@@ m,@@ s,@@ t; chara[501],b[501]; scanf("%lf\n",&@@ n); scanf("%s",a); scanf("\n@@ "); scanf("%s",b); m=strlen(@@ a);@@ s@@ =strlen(@@ b@@ );@@ if(m@@ <=@@ s@@ ){@@ t=@@ m;@@ }else{@@ t=@@ s@@ ;} for(i=0;i<@@ t@@ ;i++){ if(a[i]!='@@ A'&&a[i]!='@@ C'&&a[i]!='@@ T'&&a[i]!='@@ G'||@@ m@@ !=@@ s@@ ){ printf("error@@ "@@ )@@ ;j@@ =-@@ 1@@ ;break;} if(a[i]==b[i]){ j@@ ++;} } c@@ =1.0*@@ j@@ /@@ m; if(c@@ >@@ n@@ ){printf("yes");} elseif(@@ c@@ <=@@ n@@ &&@@ c@@ >=0@@ ){@@ printf("no");} return0; }  
c -1
h -1
0

int@@ times@@ =1; int@@ used@@ [@@ 1000]={0}; void@@ fuck@@ (intn) { inti=0; for(i=2;i<=@@ sqrt(n@@ );i++) { if(@@ used@@ [i]@@ ==0&&@@ n@@ %i==0) { intj=0; for(j=0;j<=i-1;j++) used@@ [j]@@ =1; times@@ ++; fuck@@ (n@@ /i); for(j=0;j<=i-1;j++) used@@ [j]@@ =0; } } } intmain() { intn=0; intnum=0; cin>>n; inti=0; for(i=0;i<n;i++) { cin>>num; fuck@@ (@@ num); cout<<@@ times@@ <<endl; times@@ =1; intk=0; for(k=0;k<=@@ 999@@ ;k++) used@@ [k]@@ =0; } return0; }  
c -1
h -1
main() { inta[@@ 17@@ ],@@ num=0,@@ i=1@@ ,j,@@ m; charc; while(1) { num=0; i=1; do { scanf("%d",&a[i]); c=@@ getchar(); i++; }while(@@ c@@ !=@@ '\n@@ '@@ ); m@@ =i@@ -2@@ ; if(!@@ m@@ )break; for(i=1;i<=m;i++) { for(j=i+1;j<=@@ m;j++) { if(a[i]@@ *2==@@ a[j]||@@ a[i]==@@ 2*@@ a[j])@@ num++; } } printf("%d\n",num); } return0; }  
c -1
h -1
0

main() { inta[@@ 25],b[@@ 25],@@ k,i,j,@@ m=0; scanf("%d",&k); for(i=0;i<k;i++) scanf("%d",a@@ +i); for(i=0;i<k;i++) { b[i]=1; for(j=0;j<i;j++) if(a[j]>=a[i]&&@@ b[j]@@ +1>@@ b[i]@@ )@@ b[i]=b[j]+1; if(b[i]>@@ m)@@ m=@@ b[i]; } printf("%d",m); }  
c -1
h -1
intmain() { intmax=0,@@ i,j,@@ n,@@ maxb@@ ,@@ num=0,@@ s,@@ a[@@ 30@@ ],b[@@ 30]; scanf("%d",&n); for(i=0;i<n;i++) { scanf("%d",&a[i]); } b[0]@@ =1; for(i=1;i<n;i++) { max=0; s=0; for(j=0;j<i;j++) { if((a[j]@@ >=@@ a[i]@@ )&&(@@ b[j]@@ >=@@ max@@ )) { b[i]=b[j]+1; max=@@ b[j]; s=1; } if(s@@ ==0) { b[i]=1; } } } maxb@@ =0; for(i=0;i<n;i++) { if(b[i]>@@ maxb@@ ) { maxb@@ =@@ b[i]; } } printf("%d\n",@@ maxb@@ ); return0; }  
c -1
h -1
1


intmain(){ int@@ c=0,@@ m=0,@@ i,@@ a,b,@@ j,@@ z=1; doublen,@@ q=0,@@ w; char@@ x[@@ 505@@ ],@@ y[@@ 505@@ ]; scanf("%lf",&n); scanf("%s",@@ x); scanf("%s",@@ y); a=strlen(@@ x); b=strlen(@@ y); if(a!=@@ b@@ ){@@ z@@ =0;} else{@@ for(i=0;i<@@ a@@ ;i++){@@ if((x@@ [i]=='@@ A@@ '|@@ | x@@ [i]=='@@ T@@ '|@@ | x@@ [i]=='@@ C@@ '|@@ | x@@ [i]=='@@ G')@@ && (y@@ [i]=='@@ A@@ '|@@ | y@@ [i]=='@@ T@@ '|@@ | y@@ [i]=='@@ C@@ '|@@ | y@@ [i]=='@@ G')@@ )@@ z@@ =1;@@ else@@ z@@ =0;} } if(z@@ ==0)@@ printf("error"); if(z@@ !=0@@ ){@@ for(i=0;i<@@ a@@ ;i++){@@ if(x@@ [i]==@@ y@@ [i])@@ q@@ ++;} } if(z@@ !=0@@ ){@@ w=@@ q@@ /@@ a;@@ if(w@@ >=@@ n)@@ printf("yes");@@ else@@ printf("no");} return0; }  
c -1
h -1
main() { int*@@ a,@@ i,@@ m,n,@@ k,@@ s@@ =0@@ ,*@@ b,@@ j; scanf("%d",&k); b=@@ (int*)@@ calloc@@ (@@ k,@@ sizeof(int@@ )); for(i=0;i<k;i++) { scanf("%d%d",&m,&n); a=@@ (int*)@@ calloc@@ (m@@ *@@ n,@@ sizeof(int@@ )); for(j=0;j<m@@ *@@ n@@ ;j++)@@ scanf("%d",a@@ +j); for(j=0;j<m;j++) {@@ s=s@@ +*(@@ a@@ +j@@ *@@ n)@@ +*(@@ a@@ +j@@ *@@ n+@@ n-1); } for(j=1;j<@@ n-1;j++) s=s@@ +*(@@ a@@ +j)@@ +*(@@ a+@@ (m@@ -1)*@@ n@@ +j); *(@@ b@@ +i)@@ =@@ s; free(@@ a); s=0; } for(i=0;i<k;i++){ printf("%d",@@ *(@@ b@@ +i)); if(i<@@ k@@ -1)@@ printf("\n@@ ");} }  
c -1
h -1
0

intmain() { charstr[256],@@ sub[256],@@ rep@@ [256],@@ sz[@@ 256]; scanf("%s%s%s",@@ str,@@ sub,@@ rep); inta,b,c,@@ tag@@ ; a=strlen(@@ sub); c=strlen(@@ str); inti,j; for(i=0;@@ str@@ [i]!='\0';i++){ tag@@ =0; if(str[i]==@@ sub@@ [0]){ for(j=0;j<a@@ ;j++){ sz@@ [j]=@@ str@@ [i+j@@ ]; } sz[a@@ ]='\0'; } if(strcmp(@@ sz@@ ,@@ sub)@@ ==0){ b=i; strcpy(@@ sub,@@ rep); tag@@ =1; break; } } if(tag@@ ==1){ for(i=0;i<b;i++) { printf("%c",@@ str[i]); } printf("%s",@@ sub); for(i=@@ b+@@ a@@ ;i<@@ c@@ ;i++) { printf("%c",@@ str[i]); } } else { printf("%s",str); } return0; }  
c -1
h -1
main() { intn,i,j,@@ max,@@ m,@@ k; scanf("%d",&n); static@@ int@@ hight@@ [25],@@ num[@@ 25]; for(i=0;i<=@@ n-1@@ ;i++)@@ scanf("%d",&@@ hight@@ [i]); num@@ [0]=1; for(i=1;i<=n-1;i++) { for(j=i-1;j>=0;j--) { m=0; if(@@ hight@@ [j]>=@@ hight@@ [i]) { m=@@ num@@ [j]; break; } } if(j==@@ -1)@@ num[i]@@ =1; for(k=j@@ -1@@ ;k>=0@@ ;k--) { if(@@ hight@@ [k]@@ >=@@ hight@@ [i]) { if(num@@ [k]@@ >@@ m)@@ m=@@ num@@ [k]; } } if(num@@ [i]@@ ==0)@@ num[i]=@@ m@@ +1; } max=@@ num[@@ n-1]; for(i=n-2;i>=0;i--) { if(num@@ [i]@@ >max)max=@@ num[i]; } printf("%d\n",max); return0; }  
c -1
h -1
0

intmain() { intl,@@ n,m,@@ sum=0,@@ i,j,k,@@ a[@@ 101][101]; cin>>@@ l; for(i=1;i<=@@ l@@ ;i++){ cin>>m>>n; sum=0; for(j=1;j<=m;j++) for(k=1;k<=n;k++) cin>>a[j]@@ [k]; if(m@@ !=1@@ &&n@@ !=1@@ ){ for(k=1;k<=n;k++) sum+=@@ a[1@@ ][k@@ ]; for(k=1;k<=n;k++) sum+=@@ a[m@@ ][k@@ ]; for(k=@@ 2@@ ;k<@@ m;k++) sum+=@@ a[k@@ ][1@@ ]; for(k=@@ 2@@ ;k<@@ m;k++) sum+=@@ a[k@@ ][n]; cout<<sum@@ <<endl;} else{ for(j=1;j<=m;j++) for(k=1;k<=n;k++) sum+=@@ a[j]@@ [k]; cout<<sum<<endl; } } return0; }  
c -1
h -1
intmain() { intx,y,@@ z,@@ w; intn,i,j,@@ t,@@ s,@@ tz@@ =0; scanf("%d",&n); for(i=0;i<n;i++) for(j=0;j<n;j++) {scanf("%d",&@@ t); if(t@@ ==0&&@@ tz@@ ==0){@@ tz@@ ++;@@ x@@ =i;@@ y@@ =j;} if(t@@ ==0){@@ z@@ =i;@@ w@@ =j;} } printf("%d",(@@ z@@ -x@@ -1)*(@@ w@@ -@@ y@@ -1)); }  
c -1
h -1
0

intmain() { intm,n,@@ i=1@@ ,j@@ =1; int@@ tempi@@ =1,@@ tempj@@ =1,@@ a[100@@ ][100@@ ]={0}; cin>>m>>n; for(int@@ s@@ =1;@@ s@@ <=@@ m;@@ s++) for(intt@@ =1;t@@ <=n;@@ t++) cin>>@@ a[@@ s@@ ][@@ t@@ ]; while(@@ tempi@@ !=@@ m@@ ||@@ tempj@@ !=@@ n) { do { cout<<a[i][j]<<endl; i++; j--; }while(@@ j@@ !=0@@ &&i!=@@ m@@ +1); if(@@ tempj@@ !=@@ n) { tempj@@ ++; i=@@ tempi@@ ; j=@@ tempj@@ ; } else { tempi@@ ++; i=@@ tempi@@ ; j=@@ tempj@@ ; } } cout<<@@ a[m@@ ][n]; return0; }  
c -1
h -1
main() { intn,i,j,@@ a=0,b=0,@@ c=0,@@ s; intx[@@ 1000][1000]; int@@ y@@ [1000]; scanf("%d",&n); for(i=1;i<=n;i++) { y@@ [i]=0; a=0; for(j=1;j<=n;j++) { scanf("%d",&@@ x@@ [i][j]); if(x@@ [i][j]==0) { a=@@ a@@ +1; } } if(a@@ >0) { y@@ [i]=1; } if(a@@ >@@ b) { b=@@ a; } } for(i=1;i<=n;i++) { if(y@@ [i]@@ >0) { c=c@@ +1; } } s=(@@ b@@ -2)*(@@ c@@ -2); printf("%d",s); }  
c -1
h -1
0

intmain() { structstudent {@@ char@@ as@@ [10]; int@@ ag@@ ; }; structstudent@@ stu@@ [100]; structstudent@@ st@@ [100]; structstudent@@ temp; intn,i,j,k; scanf("%d",&n); for(i=0;i<n;i++) scanf("%s%d",@@ stu[i].@@ as@@ ,&stu[i].@@ ag@@ ); j=0; for(i=0;i<n;i++){ if(stu[i].@@ ag@@ >@@ 59@@ ){ st@@ [j]=@@ stu[i]; stu[i].@@ ag@@ =0; j++; } } for(k=1;k<@@ j@@ ;k++){ for(i=0;i<j@@ -@@ k;i++){ if(@@ st[i].@@ ag@@ <@@ st@@ [i+1].@@ ag@@ ){ temp=@@ st@@ [i]; st@@ [i]=@@ st@@ [i+1]; st@@ [i+1]=@@ temp; } } } for(i=0;i<j;i++) printf("\n@@ %s",@@ st[i].@@ as@@ ); for(i=0;i<n;i++) if(stu[i].@@ ag@@ !=0) printf("\n@@ %s",@@ stu[i].@@ as@@ ); return0; }  
c -1
h -1
intmain(intargc,char*argv[]) { intn; scanf("%d",&n); int@@ p@@ [100][100]; inti,j; for(i=0;i<n;i++) { for(j=0;j<n;j++) { scanf("%d",&@@ p@@ [i][j]); } } int@@ e,@@ b,@@ h,@@ k,@@ kk@@ =0; for(h=0;h@@ <n;@@ h@@ ++){ for(k=0;k<n;k++){ if(p@@ [h@@ ][k@@ ]==0){ e=@@ h; b=@@ k; kk@@ =1; break; } } if(@@ kk@@ ==1) break; } int@@ c,d,@@ l,@@ m; for(l=0;l<n;@@ l++){ for(m=0;m@@ <n;m++){ if(p@@ [l@@ ][m@@ ]==0){ c=@@ l; d=@@ m; } } } ints; s=(@@ c-@@ e@@ -1)*(d-b@@ -1); printf("%d",s); return0; }  
c -1
h -1
0

intmain(){ inti,@@ m,@@ j,k,@@ n1,n2; char@@ x; char@@ zf@@ [300]; chars1@@ [100],@@ s2@@ [100]; gets(@@ zf@@ ); gets(@@ s1); gets(@@ s2); n1@@ =strlen(@@ s1); n2@@ =strlen(@@ s2); for(i=0;i<(@@ strlen(@@ zf@@ ))@@ ;i++){ if(@@ zf@@ [i]==@@ s1@@ [0]@@ &&@@ zf@@ [i+1@@ ]==@@ s1@@ [1]@@ &&@@ zf@@ [i+@@ n1@@ -1@@ ]==@@ s1@@ [@@ n1@@ -1]@@ ){ for(k=0;k<@@ n2@@ ;k++){ zf@@ [i]=@@ s2@@ [k]; i++; } break; } } puts(@@ zf@@ ); return0; }  
c -1
h -1
intmain() { intnum[@@ 15@@ ]={0},@@ i,j,@@ a,@@ b=0,@@ m; do {@@ for(m@@ =0;@@ ;m++) { cin>>a; num[m@@ ]=a; if(a@@ ==0)break; if(a@@ ==-1)break; } for(i=0;i<=@@ m;i++) for(j=0;j<=@@ m;j++) if((@@ num[i]@@ !=0&&@@ num[j]@@ !=0&&@@ num[i]@@ *2==@@ num[j]@@ )||(@@ num[i]@@ !=0&&@@ num[j]@@ !=0&&@@ num[j]@@ *2==@@ num[i]@@ ))@@ b++; if(a!=@@ -1@@ ){@@ cout<<@@ b@@ /2@@ <<endl@@ ;@@ b@@ =0;} }while(@@ a@@ !=-1); return0; }  
c -1
h -1
0

int@@ totalCount@@ ; void@@ FindFact@@ (intx,int@@ max) { if(x==1) { totalCount@@ ++; return; } for(inti=@@ max@@ ;i@@ >1@@ ;i--) if(x%i==0) FindFact@@ (x/i,i); return; } intmain() { intn,@@ x; for(@@ cin>>@@ n;@@ n@@ >0@@ ;n@@ --) { totalCount@@ =0; cin>>x; FindFact@@ (x,@@ x@@ /2@@ ); cout<<@@ totalCount@@ +1<<endl; } return0; }  
c -1
h -1
void@@ mix@@ (intm,int@@ n); intmain() { intm,n; cin>>m>>n; mix@@ (@@ m,n); return0; } void@@ mix@@ (intm,int@@ n) { inti,j,@@ a[@@ 10000@@ ],b[@@ 10000],@@ t; for(i=1;i<=m;i++) cin>>a[i]; for(i=1;i<=n;i++) cin>>b[i]; for(j=1;j<@@ m;j++) { for(i=1;i<=@@ m@@ -j;i++) { if(a[i]>a[i+1]) { t=a[i]; a[i]=a[i+1]; a[i+1]=@@ t; } } } for(j=1;j<n;j++) { for(i=1;i<=n@@ -j;i++) { if(b[i]>b[i+1]) { t=b[i]; b[i]=b[i+1]; b[i+1]=@@ t; } } } for(i=1;i<=m;i++) cout<<a[i]<<""; cout<<@@ b[1@@ ]; for(i=2;i<=n;i++) cout<<""<<@@ b[i]; }  
c -1
h -1
0

intmain() { introw,col,@@ i,j,@@ ji@@ ; int@@ su@@ [100][100]; inth@@ =0,@@ l=0,@@ sum,@@ shibie@@ ; scanf("%d%d",&row,&col); for(i=0;i<row;i++){ for(j=0;j<col;j++){ scanf("%d",&@@ su@@ [i][j]); } } ji@@ =@@ row@@ *@@ col; while(@@ ji@@ !=0){ for(@@ sum=0;@@ sum@@ <(@@ row+col@@ -1)@@ ;@@ sum@@ ++){ if(sum@@ <col@@ ){ l=@@ sum; h=0; }else{ h=@@ sum@@ -col@@ +1; l=@@ col-1; } do{ printf("%d\n",@@ su@@ [h@@ ][l@@ ]); ji@@ --; l@@ --; h@@ ++; }while(@@ (@@ l@@ >=0@@ )&&(@@ h@@ <row@@ )); } } return0; }  
c -1
h -1
intmain() { inti,j,n,@@ m=0,@@ k=0,@@ p; scanf("%d",&n); inta[1000][1000]; for(i=0;i<n;i++) { for(j=0;j<n;j++) { scanf("%d",&a[i][j]); } } for(i=0;i<n;i++) { for(j=0;j<n;j++) { if(a[i][j]==0) { m=m+1; } } if(m@@ !=0) break; } for(j=0;j<n;j++) { for(i=0;i<n;i++) { if(a[i][j]==0) { k=k+1; } } if(k@@ !=0) break; } p=@@ m*@@ k@@ -2*@@ m@@ -2*@@ k+@@ 4@@ ; printf("%d\n",@@ p); return0; }  
c -1
h -1
0

intsum; voidf@@ (intx,int@@ i){ if(x@@ ==1)@@ sum++; else{ for(@@ ;i<=@@ x;i++) if(x@@ %i==0)@@ f(@@ x@@ /i,i); } } intmain(){ intn; cin>>n; while(n@@ >0){ int@@ x=0,@@ i,@@ ans@@ =1; cin>>x; for(i=2@@ ;i@@ *@@ i@@ <@@ x@@ ;i++){ if(x@@ %i==0){ sum=0; f(@@ x@@ /i,i); ans@@ +=@@ sum; } } cout<<ans@@ <<endl; n--; } return0; }  
c -1
h -1
intmain() { inti,j,k,@@ m,n,@@ dmax@@ ,@@ a[100],@@ d@@ [100]; scanf("%d",&n); for(i=0;i<n;i++) { scanf("%d",&a[i]); } for(i=0;i<n;i++) d@@ [i]=1; for(i=n-2;i>=0;i--) { for(j=i+1;j<n;j++) { if((@@ a[i]@@ >=@@ a[j]@@ )&&(@@ d@@ [i]<=@@ d@@ [j]@@ )) { d[i]=@@ d@@ [j]+1; } } } dmax@@ =0; for(i=0;i<n;i++) {@@ if(d@@ [i]>@@ dmax@@ ) dmax@@ =@@ d[i]; } printf("%d\n",@@ dmax@@ ); return0; }  
c -1
h -1
0

int@@ a=0,@@ i=0,@@ sum=1; voidf@@ (inti,int@@ a){ intj; for(j=i;j<=@@ sqrt(@@ a)@@ ;j++) if(a%@@ j@@ ==0){@@ sum@@ ++;@@ f(@@ j,@@ a/@@ j@@ );} } intmain(){ intn; cin>>n; while(@@ n){ cin>>a; f(@@ 2,@@ a); cout<<sum<<endl; n--; sum=1; } }  
c -1
h -1
intmain(intargc,char*argv[]) { intnum[@@ 101@@ ][100]; intn,i,j; scanf("%d",&n); i@@ =j@@ =0; for(i=0;i<n;i++) {@@ for(j=0;j<n;j++) scanf("%d",&@@ num@@ [i][j]); } inta,b,c,@@ d; a=@@ b=@@ c=@@ d=0; i@@ =j@@ =0; do{ do{ if(num@@ [i][j]==0&&@@ a@@ ==0&&@@ b@@ ==0) a=@@ i,@@ b@@ =j+1; j++; }while(@@ j@@ <@@ n); j=0; i++; }@@ while(i<@@ n); i@@ =j@@ =0; do{ do{ if(num@@ [i][j]==0&&@@ c@@ <=i@@ &&@@ d@@ <=@@ j) c=@@ i,@@ d=j; j++; }while(@@ j@@ <@@ n); j=0; i++; }@@ while(i<@@ n); ints; s=(@@ c-a@@ -1)*(@@ d@@ -@@ b); printf("%d\n",s); return0; }  
c -1
h -1
0

inta[@@ 300],b[@@ 300],@@ m,n,@@ i,j,@@ t,@@ c[@@ 300]; voidf1@@ (){ cin>>m>>n; for(i=0;i<m;i++){ cin>>a[i]; } for(i=0;i<n;i++){ cin>>b[i]; } } voidf2@@ (){ for(i=0;i<m@@ -1;i++){ for(j=i+1;j<=@@ m-1@@ ;j++){ if(a[i]>@@ a[j]@@ ){ t=@@ a[i];a[i]=@@ a[j];a[j]=@@ t; } } } for(i=0;i<n-1;i++){ for(j=i+1;j<=@@ n-1@@ ;j++){ if(b[i]>@@ b[j]@@ ){ t=@@ b[i]@@ ;@@ b[i]=b[j]@@ ;@@ b[j]=@@ t; } } } } void@@ f3@@ (){ for(i=0;i<m;i++){ c[i]=a[i]; } for(i=m;i<@@ m+@@ n;i++){ c[i]=b[i-@@ m]; } } void@@ f4@@ (){ cout<<c[@@ 0]; for(i=1;i<@@ m+@@ n;i++){ cout<<''<<@@ c[i]; } } intmain(){ f1@@ (); f2@@ (); f3@@ (); f4@@ (); }  
c -1
h -1
structstudent {int@@ id; int@@ yw@@ ; int@@ sx; }stu[100000]; voidmain() { intn,i,@@ sum[@@ 100000],@@ temp@@ [3@@ ],@@ max; scanf("%d",&n); for(i=0;i<n;i++) { scanf("%d%d%d",&stu[i].@@ id@@ ,&stu[i].@@ yw@@ ,&stu[i].@@ sx@@ ); sum[i]=@@ stu[i].@@ yw@@ +stu[i].@@ sx; } for(i=0,@@ max@@ =-1,@@ temp@@ [0]@@ =0;i<n;i++) { if(sum@@ [i]>max) { max=@@ sum[i]; temp@@ [0]=@@ i; } } for(i=0,@@ max@@ =-1,@@ temp@@ [1]@@ =0;i<n;i++) { if(i==@@ temp@@ [0]@@ )continue; else { if(sum@@ [i]>max) { max=@@ sum[i]; temp@@ [1]=@@ i; } } } for(i=0,@@ max@@ =-1,@@ temp@@ [2]@@ =0;i<n;i++) { if(i==@@ temp@@ [0]@@ ||i==@@ temp@@ [1]@@ )continue; else { if(sum@@ [i]>max) { max=@@ sum[i]; temp@@ [2]=@@ i; } } } printf("%d%d\n",stu[@@ temp@@ [0]@@ ].id,@@ sum[@@ temp@@ [0]@@ ]); printf("%d%d\n",stu[@@ temp@@ [1]@@ ].id,@@ sum[@@ temp@@ [1]@@ ]); printf("%d%d",@@ stu[@@ temp@@ [2]@@ ].id,@@ sum[@@ temp@@ [2]@@ ]); }  
c -1
h -1
0

structstu { intnum; int@@ ch; int@@ mt@@ ; intsum; structstu*next; }; voidmain() { structstu*@@ p1,*p2,*@@ p,*@@ head; intn,@@ max=0,@@ max2@@ =0,@@ max3@@ =0,@@ no@@ =0,@@ no2@@ =0,@@ no3@@ =0; scanf("%d",&n); p1=(struct@@ stu@@ *)malloc(LEN); scanf("%d%d%d",&p1->num,&p1->@@ ch@@ ,&p1->@@ mt@@ ); p1->sum=p1->@@ ch@@ +p1->@@ mt@@ ; head=p1; p2=p1; while(@@ n-1) { p1=(struct@@ stu@@ *)malloc(LEN); scanf("%d%d%d",&p1->num,&p1->@@ ch@@ ,&p1->@@ mt@@ ); p1->sum=p1->@@ ch@@ +p1->@@ mt@@ ; p2->next=p1; p2=p1; n--; } p2->next=NULL; p=head; while(p) { if(p->@@ sum@@ >max) { max=@@ p->@@ sum; no@@ =p->@@ num; } p=p->next; } printf("%d%d\n",@@ no@@ ,max); p=head; while(p) { if(p->@@ sum>@@ max2@@ &&@@ p->@@ sum<=@@ max@@ &&@@ p->@@ num@@ !=@@ no@@ ) { max2=@@ p->@@ sum; no2@@ =p->@@ num; } p=p->next; } printf("%d%d\n",@@ no2@@ ,@@ max2@@ ); p=head; while(p) { if(p->@@ sum>@@ max3@@ &&@@ p->@@ sum<=@@ max2@@ &&@@ p->@@ num@@ !=@@ no2@@ &&@@ p->@@ num@@ !=@@ no@@ ) { max3=@@ p->@@ sum; no3@@ =p->@@ num; } p=p->next; } printf("%d%d\n",@@ no3@@ ,max3@@ ); }  
c -1
h -1
structstu { intnum; int@@ score1@@ ; int@@ score2; } main() { structstu@@ damn@@ [4@@ ]; intn,i,j,@@ total; scanf("%d",&n); for(i=0;i<@@ 3@@ ;i++)@@ scanf("%d%d%d",&@@ damn@@ [i].num,&@@ damn@@ [i].@@ score1@@ ,&@@ damn@@ [i].@@ score2); for(i=0;i<2@@ ;i++) { for(j=0;j<@@ 2@@ -i;j++) { if(@@ damn@@ [j].@@ score1@@ +@@ damn@@ [j].@@ score2@@ <@@ damn@@ [j+1].@@ score1@@ +@@ damn@@ [j+1].@@ score2@@ ) { damn@@ [3@@ ]=@@ damn@@ [j]; damn@@ [j]=@@ damn@@ [j+1]; damn@@ [j+1]=@@ damn@@ [3]; } } } for(i=0;i<n-@@ 3;i++) { scanf("%d%d%d",&@@ damn@@ [3].@@ num,&@@ damn@@ [3].@@ score1@@ ,&@@ damn@@ [3].@@ score2); if(@@ damn@@ [3].@@ score1@@ +@@ damn@@ [3].@@ score2@@ <@@ damn@@ [2].@@ score1@@ +@@ damn@@ [2].@@ score2@@ )continue; elseif(@@ damn@@ [3].@@ score1@@ +@@ damn@@ [3].@@ score2@@ <=@@ damn@@ [1].@@ score1@@ +@@ damn@@ [1].@@ score2@@ &&@@ damn@@ [3].@@ score1@@ +@@ damn@@ [3].@@ score2@@ >@@ damn@@ [2].@@ score1@@ +@@ damn@@ [2].@@ score2@@ ) { damn@@ [2]=@@ damn@@ [3]; } elseif(@@ damn@@ [3].@@ score1@@ +@@ damn@@ [3].@@ score2@@ <=@@ damn@@ [0].@@ score1@@ +@@ damn@@ [0].@@ score2@@ &&@@ damn@@ [3].@@ score1@@ +@@ damn@@ [3].@@ score2@@ >@@ damn@@ [1].@@ score1@@ +@@ damn@@ [1].@@ score2@@ ) { damn@@ [2]=@@ damn@@ [1]; damn@@ [1]=@@ damn@@ [3]; } elseif(@@ damn@@ [3].@@ score1@@ +@@ damn@@ [3].@@ score2@@ >@@ damn@@ [0].@@ score1@@ +@@ damn@@ [0].@@ score2@@ ) { damn@@ [2]=@@ damn@@ [1]; damn@@ [1]=@@ damn@@ [0]; damn@@ [0]=@@ damn@@ [3]; } } for(i=0;i<2@@ ;i++) { total=@@ damn@@ [i].@@ score1@@ +@@ damn@@ [i].@@ score2; printf("%d%d\n",@@ damn@@ [i].@@ num,@@ total); } total=@@ damn@@ [i].@@ score1@@ +@@ damn@@ [i].@@ score2; printf("%d%d",@@ damn@@ [i].@@ num,@@ total); }  
c -1
h -1
1


voidmain() { inty,@@ d,@@ m,@@ i,j,@@ e=0,@@ total=0; inta[@@ 12]={31,28,31,30,31,30,31,31,30,31,30,31}; scanf("%d%d%d",&y,&m,&d); if(((@@ y%@@ 4==0)&&(@@ y%100!=0@@ )@@ )||(y%@@ 400==0)@@ )@@ a[1]=29; for(i=1;i<m;i++) { total+=@@ a[i@@ -1]; } total+=@@ d; printf("%d\n",@@ total); }  
c -1
h -1
intmain() { inta,b,c,@@ sum=0; int@@ month@@ [13]={0,31,28,31,30,31,30,31,31,30,31,30,31}; scanf("%d%d%d",&a,&b,&c); for(inti=0;i<@@ b;i++) { sum=sum+@@ month@@ [i]; } sum=sum@@ +c; if(a%@@ 4==0&&a%100!=0@@ ||a%@@ 400==0)@@ sum=sum+1; printf("%d\n",sum); return0; }  
c -1
h -1
1


intmain() { ints[@@ 26],@@ d@@ [26]; inti,j,k; intn; scanf("%d",&n); for(i=0;i<n;i++) { scanf("%d",@@ s@@ +i); d@@ [i]=0; } for(i=n-1;i@@ >-@@ 1@@ ;i--) { k=0; for(j=i+1;j<n;j++) { if(k@@ <@@ d@@ [j]&&@@ s[i]@@ >=@@ s[j]@@ )@@ k=@@ d@@ [j]; } k++; d[i]=@@ k; } k=0; for(i=0;i<n;i++) { if(d@@ [i]>@@ k)@@ k=@@ d@@ [i]@@ ;} printf("%d",k); return0; }  
c -1
h -1
typedef@@ struct@@ st { inta,b; }@@ stu@@ ; stu@@ s[@@ 100000]; int@@ comp@@ (constvoid*a,constvoid*@@ b) { return(@@ (stu@@ *)@@ b)@@ ->@@ b-@@ ((@@ stu@@ *)@@ a)@@ ->@@ b; } intmain() { inti,n,@@ a,b; scanf("%d",&n); for(i=0;i<n;i++) { scanf("%d%d%d",&@@ s[i].@@ a,&@@ a,&b); s[i].@@ b=@@ a+@@ b; } qsort(@@ s,@@ n,@@ sizeof(@@ stu@@ ),@@ comp@@ ); printf("%d%d\n%d%d\n%d@@ %d",@@ s@@ [0].@@ a,@@ s@@ [0].@@ b,@@ s[1].@@ a,@@ s[1].@@ b,@@ s[2].@@ a,@@ s[2].@@ b); return0; }  
c -1
h -1
0

voidf@@ () { int@@ a=0,@@ i,j,@@ m,n,@@ (*p)@@ [100]; scanf("%d%d",&m,&n); p=@@ (int@@ (@@ *)@@ [100@@ ])@@ malloc(@@ m*@@ 100*sizeof(int)); for(i=0;i<m;i++) for(j=0;j<n;j++) scanf("%d",*(p+i)+j); for(j=0;j<n;j++) a=@@ a@@ +*(@@ *p@@ +j)@@ +*(@@ *(p@@ +m-1)@@ +j); for(i=1;i<m-1;i++) a=@@ a@@ +*(@@ *(p+i)@@ )@@ +*(@@ *(p+i)@@ +n-1); printf("%d\n",@@ a); } voidmain() { int@@ c,@@ k; scanf("%d",&k); for(c=0;c@@ <k;@@ c++) f@@ (); }  
c -1
h -1
intmain() { structstudent { intnum; intmath; intchinese; intsum; }a[@@ 100000]; intn,i,j,@@ temp; charc[@@ 10]; scanf("%d",&n); for(i=0;i<n;i++) { scanf("%d%d%d",&a[i].@@ num,&@@ a[i].@@ math@@ ,&a[i].@@ chinese); a[i].@@ sum=@@ a[i].@@ math+@@ a[i].@@ chinese; } for(i=0;i<3;i++) { for(j=i+1;j<n;j++) { if(a[i].@@ sum<@@ a[j].@@ sum) { temp=@@ a[i].@@ sum,@@ a[i].@@ sum=@@ a[j].@@ sum,@@ a[j].@@ sum=@@ temp; temp=@@ a[i].@@ num,@@ a[i].@@ num=@@ a[j].@@ num,@@ a[j].@@ num=@@ temp; } } printf("%d%d\n",@@ a[i].@@ num,@@ a[i].@@ sum); } return0; }  
c -1
h -1
0

intmain() { inta[@@ 15@@ ]={0},@@ n; while(1) { n=0; for(inti=0;i<=@@ 15;i++) { cin>>a[i]; if(a[i]@@ ==0||@@ a[i]@@ ==-1) break; } for(intj=0;j<=@@ 15@@ ;j++) { if(a[j]@@ ==0||@@ a[j]==@@ -1) break; for(intk@@ =j+1@@ ;k<=@@ 15@@ ;k++) { if(a[k]@@ ==0) break; elseif(@@ a[k]@@ *2==@@ a[j]||@@ a[j]@@ *2==@@ a[k]) n++; } } if(a[0]@@ !=-1) { cout<<n<<endl; for(inti=0;i<=@@ 15;i++) a[i]=0; n=0; } else break; } return0; }  
c -1
h -1
voidmain() { intn,i,j,@@ k=0,@@ flag@@ ,a[@@ 20000],b[@@ 20000]; scanf("%d",&n); for(i=0;i<n;i++) scanf("%d",&a[i]); for(i=0;i<n;i++) { flag=1; for(j=0;j<i;j++) {@@ if(a[i]==a[j]) flag@@ =0;} if(flag==1) {@@ b[k@@ ]=a[i]; k@@ ++;} } for(i=0;i<@@ k-1;i++) printf("%d",b[i]); printf("%d\n",@@ b[i]); }  
c -1
h -1
0

inth@@ [25],@@ n; int@@ hack@@ (inti,int@@ w@@ ){ if(i==@@ n-1){ if(h@@ [i]<=@@ w@@ )@@ return1; else@@ return0; } int@@ b=@@ hack@@ (i+1,@@ w@@ ),@@ c=0; if(h@@ [i]<=@@ w@@ ) c@@ =1@@ +@@ hack@@ (i+1,@@ h[i]); if(b@@ >@@ c)@@ return@@ b; else@@ return@@ c; } intmain(){ scanf("%d",&n); inti,@@ max=0; for(i=0;i<n;i++){ scanf("%d",&h[i]); if(h@@ [i]>max) max=@@ h@@ [i]; } printf("%d",@@ hack@@ (@@ 0,@@ max@@ )); return0; }  
c -1
h -1
intmain() { intn,i,j,@@ *@@ p=@@ NULL@@ ,@@ mianji@@ ; int@@ zhongliu@@ [1000][1000]; int@@ zuoshang@@ [2@@ ],@@ youxia@@ [2]; p=@@ zhongliu@@ [0]; cin>>n; for(i=0;i<n;i++) for(j=0;j<n;j++) { cin>>@@ *(p@@ +i@@ *@@ n@@ +j); } for(i=0;i<n;i++) for(j=0;j<n;j++) { if(@@ *(p@@ +i@@ *@@ n@@ +j)@@ ==0&&@@ *(p@@ +i@@ *@@ n@@ +j+1)@@ ==0&&@@ *(p+@@ (i@@ +1)@@ *@@ n@@ +j)@@ ==@@ 0 &&j@@ +1@@ <n@@ &&i@@ +1@@ <n) { zuoshang@@ [0]=@@ i; zuoshang@@ [1]=@@ j; } elseif(@@ *(p@@ +i@@ *@@ n@@ +j)@@ ==0&&@@ *(p@@ +i@@ *@@ n@@ +j@@ -1)@@ ==0&&@@ *(p+@@ (i@@ -1)*@@ n@@ +j)@@ ==@@ 0 &&j@@ -1@@ >0@@ &&i@@ -1@@ >0) { youxia@@ [0]=@@ i; youxia@@ [1]=@@ j; } } mianji@@ =(@@ youxia@@ [0]@@ -@@ zuoshang@@ [0]@@ -1)*(@@ youxia@@ [1]@@ -@@ zuoshang@@ [1]@@ -1); cout<<@@ mianji@@ <<endl; return0; }  
c -1
h -1
0

voidmain() { char@@ *p,*@@ q@@ ,*@@ r; p=@@ (char@@ *)malloc(@@ 1000@@ );@@ q@@ =(char*)malloc(@@ 1000@@ );@@ r@@ =(char*)malloc(@@ 1000@@ ); gets(@@ p@@ );@@ gets(@@ q@@ );@@ gets(@@ r); inta,b,c; a=strlen(@@ p@@ );@@ b=strlen(@@ q@@ );@@ c=strlen(@@ r); inti,j,@@ k;@@ int@@ t=1; for(i=0;i<a;i++) { for(j=i,@@ k@@ =0;j<@@ i+@@ b@@ ;j++@@ ,k++) { if(p@@ [j]!=@@ q@@ [k]) {@@ t@@ =0;@@ break;} } if(k==@@ b@@ )break; } if(k==@@ b) { for(j=0;j<i;j++) printf("%c",@@ p@@ [j]); printf("%s",@@ r); for(j=i@@ +@@ b@@ ;j<@@ a@@ ;j++) printf("%c",@@ p@@ [j]); } else@@ printf("%s",@@ p); }  
c -1
h -1
intmain(){ inta[100@@ ][@@ 20]; intnum,@@ temp,@@ size@@ ,@@ time@@ =0; inti=0,j=0,@@ k,@@ l; while(cin>>@@ num) { time@@ =0; if(num@@ ==-1) break; elseif(@@ num@@ !=0) { a[i]@@ [j]=@@ num; j=j+1; } elseif(@@ num@@ ==0) { size@@ =j; for(l=0;l<@@ size@@ ;l++) for(j=0@@ ;j@@ +1@@ <@@ size@@ ;j++) { if(a[i][j]@@ >@@ a[i]@@ [j+1]) { temp=@@ a[i][j]; a[i]@@ [j]=@@ a[i]@@ [j+1]; a[i]@@ [j+1]=temp; } } for(k=0;k<@@ size@@ ;k++) for(l=0;l<@@ size@@ ;l++) { if(@@ 2*@@ a[i]@@ [k]==@@ a[i]@@ [l@@ ]) time@@ =@@ time@@ +1; } cout<<@@ time@@ <<endl; j=0; i=i+1; } } return0; }  
c -1
h -1
0

intmain() { chara[256],b[256],c[256]; inti,j,n; scanf("%s%s%s",a,b,c); n@@ =strlen(b); intm; m=strlen(a); int@@ q,@@ k; for(i=0;i<m;i++) { if(a[i]==@@ b[0]) { k=1; for(j=i;j<i+@@ n;j++) if(b@@ [j-i@@ ]!=@@ a[j]) k=0; if(k@@ ) {@@ q@@ =i; break; } } k=0; } if(k@@ ) { for(i=0;i<@@ q@@ ;i++) printf("%c",a[i]); printf("%s",@@ c); for(i=@@ q@@ +@@ n@@ ;i<@@ m;i++) printf("%c",a[i]); } else { printf("%s",a); }@@ return0; }  
c -1
h -1
intmain() { charstr@@ [300],@@ subString@@ [300],@@ replacement@@ [300]; char@@ *p,@@ *@@ q; int@@ strLen@@ ,@@ subLen@@ ,@@ repLen@@ ,@@ move@@ ,i; cin>>@@ str@@ >>@@ subString@@ >>@@ replacement@@ ; strLen@@ =strlen(@@ str); subLen@@ =strlen(@@ subString@@ ); repLen@@ =strlen(@@ replacement); p=strstr(@@ str,@@ subString@@ ); if(p@@ ==NULL) { cout<<str@@ ; return0; } q=@@ replacement@@ ; if(@@ repLen@@ >@@ subLen@@ ) { move@@ =@@ repLen@@ -@@ subLen@@ ; for(q=@@ str@@ +@@ strLen@@ +@@ move@@ ;q@@ >=@@ p+@@ repLen@@ ;q@@ --) { *@@ q=@@ *(q@@ -@@ move@@ ); } i=0; q=@@ replacement@@ ; while(i<@@ repLen@@ ) { *p@@ ++@@ =@@ *@@ q++; i++; } } else { i=0; while(i<@@ repLen@@ ) { *p@@ ++@@ =@@ *@@ q++; i++; } if(@@ repLen@@ <@@ subLen@@ ) { move@@ =@@ subLen@@ -@@ repLen@@ ; while(@@ *(p+@@ move@@ )@@ !='\0') { *p@@ ++@@ =@@ *(p+@@ move@@ ); } *@@ p=@@ '\0'@@ ; } } cout<<str@@ <<endl; return0; }  
c -1
h -1
1


intmain() { intn; scanf("%d",&n); structbook{ int@@ booknumber@@ ; charwriter@@ [27]; }@@ book[999]; inti; for(i=0;i<n;i++) { scanf("%d%s",&book[i].@@ booknumber@@ ,@@ book[i].@@ writer); } int@@ writerbookquantity@@ [26]; for(i=0;i<26@@ ;i++)@@ writerbookquantity@@ [i]=0; intj,@@ len,@@ x; for(i=0;i<n;i++) { len=strlen(@@ book[i].@@ writer); for(j=0;j<len;j++) { x=@@ book[i].@@ writer@@ [j]@@ -'A'; writerbookquantity@@ [x@@ ]++; } } int@@ maxwriter@@ =0,@@ maxquantity@@ =0; for(i=0;i<26;i++) { if(@@ writerbookquantity@@ [i]>@@ maxquantity@@ ) { maxquantity@@ =@@ writerbookquantity@@ [i]; maxwriter@@ =i; } } printf("%c\n%d\n",@@ (char)(@@ maxwriter@@ +'@@ A')@@ ,@@ writerbookquantity@@ [@@ maxwriter@@ ]); for(i=0;i<n;i++) { len=strlen(@@ book[i].@@ writer); for(j=0;j<len;j++) { if(@@ (int)@@ book[i].@@ writer@@ [j]==@@ maxwriter@@ +'A'@@ ) printf("%d\n",book[i].@@ booknumber@@ ); } } return0; }  
c -1
h -1
intmain() { charstr@@ [500],@@ sub@@ [500],@@ rep@@ [500]; inti,j,@@ shou@@ ,@@ mo@@ ,@@ k; scanf("%s%s%s",@@ str,@@ sub,@@ rep); int@@ len1=strlen(@@ str); int@@ len2=strlen(@@ sub); int@@ len3@@ =strlen(@@ rep); for(i=0;i<=@@ len1@@ -len2@@ ;i++) { for(j=0;j<len2@@ ;j++) { if(str@@ [i+j]!=@@ sub@@ [j]) { break; } } if(j==@@ len2) { shou@@ =i; mo@@ =i@@ +j@@ ; break; } } if(j!=@@ len2) {@@ printf("%s",@@ str@@ );} else{ if(@@ len2@@ >=@@ len3@@ ) { for(i=@@ shou@@ ,j@@ =0;@@ rep@@ [j]@@ !=0@@ ;i++,j++) { str[i]=@@ rep@@ [j]; } for(k=@@ mo@@ ;@@ str@@ [k]@@ !=0@@ ;k++@@ ,i@@ ++){ str[i]=@@ str@@ [k]@@ ;} str@@ [i]=0; } else { i=@@ len1@@ +@@ len3@@ -len2@@ ; for(k=@@ len1@@ ;k@@ >=@@ mo@@ ;k@@ --@@ ,i@@ --) { str[i]=@@ str@@ [k]; } for(k=@@ shou@@ ,j@@ =0;@@ rep@@ [j]@@ !=0@@ ;k++@@ ,j@@ ++) { str@@ [k]=@@ rep@@ [j]; } } printf("%s",@@ str@@ );} return0; }  
c -1
h -1
0

intmain(){ intn,k,@@ i; inta[1000]; intb[@@ 1000]; scanf("%d%d",&n,&k); for(i=0;i<n;i++){ scanf("%d",&a[i]); } int@@ p=0,@@ s=0,@@ d=0; for(i=0;i<n;i++){ b[p@@ ]=@@ a[i]@@ ;p@@ ++; } for(p=0;p@@ <n;@@ p++){ for(i=0;i<n;i++){ if(@@ b[p@@ ]+@@ a[i]==@@ k){ s++; if(p==@@ i){ d++; } } } } if((@@ s@@ -@@ d@@ )@@ !=0){ printf("yes"); } else{ printf("no"); } return0; }  
c -1
h -1
voidmain() { intn,i,j,@@ k=0,@@ flag@@ ,a[@@ 20000],b[@@ 20000]; scanf("%d",&n); for(i=0;i<n;i++) scanf("%d",&a[i]); for(i=0;i<n;i++) { flag=1; for(j=0;j<i;j++) {@@ if(a[i]==a[j]) flag@@ =0;} if(flag==1) {@@ b[k@@ ]=a[i]; k@@ ++;} } for(i=0;i<@@ k-1;i++) printf("%d",b[i]); printf("%d\n",@@ b[i]); }  
c -1
h -1
0

intcount@@ (intx,inty) { if(x@@ <@@ y)@@ return0; if(x@@ >=@@ y) { intsum=0; for(intj=@@ y@@ ;j<@@ x;j++) { if(x@@ %j==0) sum=sum+@@ count@@ (x@@ /j,j); } return@@ sum@@ +1; } } intmain() { intn; cin>>n; inta[n]; for(inti=0;i<n;i++) cin>>a[i]; for(inti=0;i<n;i++) cout<<count@@ (a[i],@@ 2)<<endl; return0; }  
c -1
h -1
voidmain() { intk,@@ h@@ [26],@@ p@@ [26@@ ],i,j,@@ m,@@ t,@@ a[@@ 26@@ ][@@ 26]; scanf("%d",&k); for(i=1;i<=k;i++) scanf("%d",&h[i]); for(i=1;i<=k;i++) p[i]=@@ h@@ [i]; for(i=1;i<k;i++) { m=i; for(j=i+1;j<=@@ k;j++) if(p@@ [j]>@@ p@@ [m@@ ]) m@@ =j; t=@@ p[i]@@ ;p@@ [i]=@@ p@@ [m]@@ ;p@@ [m]=@@ t; } for(i=0;i<=@@ k;i++) for(j=0;j<=@@ k;j++) a[i][j]@@ =0; for(i=1;i<=k;i++) for(j=1;j<=@@ k;j++) {@@ if(h@@ [i]==@@ p@@ [j]) a[i]@@ [j]=@@ a[i-1]@@ [j-1]@@ +1; else{@@ if(a@@ [i-1]@@ [j]>@@ a[i]@@ [j-1]) a[i]@@ [j]=@@ a[i-1]@@ [j]; else@@ a[i]@@ [j]=@@ a[i][j-1]@@ ;}} printf("%d",@@ a[k@@ ][k@@ ]); }  
c -1
h -1
0

intmain() { intn,m,@@ a[1000],@@ i,j,@@ t=0,@@ k; scanf("%d%d",&n,&m); for(i=0;i<n;i++) scanf("%d",&a[i]); for(i=0;i<n-1;i++) for(j=i;j<@@ n;j++) for(k@@ =i+1@@ ;k<@@ n;k++) {@@ if(m==@@ a[j]@@ +@@ a[k]) t@@ ++;@@ break;} if(t@@ !=0) printf("yes"); else printf("no"); return0; }  
c -1
h -1
intmain(){ ints[@@ 101]; intn,i,@@ x; for(i=0;i<=@@ 100@@ ;i++)@@ s[i]@@ =0; cin>>n; for(i=0;i<n;i++) {@@ cin>>x; if(s[@@ x@@ ]@@ ==0){@@ if(i@@ >0@@ )@@ cout<<'@@ '@@ ;@@ cout<<@@ x@@ ;@@ s[@@ x@@ ]@@ =1;} } return0; }  
c -1
h -1
0

intmain(){ inta[100@@ ],@@ e@@ [100],@@ f@@ [100]; char@@ c@@ [100][100@@ ],b[100@@ ][100],@@ d@@ [100][100],@@ x@@ [100]; intn,@@ p@@ =-1,@@ q@@ =-1,@@ k,@@ z,@@ i; scanf("%d",&n); for(i=0;i<n;i++){ scanf("%s%d",@@ c[i]@@ ,&@@ a[i]); if(a[i]@@ >=60){ p++; e@@ [p@@ ]=a[i]; strcpy(@@ b[p@@ ],@@ c[i]); } if(a[i]@@ <60){ q++; f@@ [q@@ ]=a[i]; strcpy(@@ d[@@ q@@ ],@@ c[i]); } } for(k=1;k<=@@ p@@ +1@@ ;k++){ for(i=0;i<p@@ +1@@ -@@ k;i++){ if(e@@ [i]<@@ e@@ [i+1@@ ]){ z=@@ e@@ [i]; e@@ [i]=@@ e@@ [i+1]; e@@ [i+1]=@@ z; strcpy(@@ x,@@ b[i]); strcpy(@@ b[i]@@ ,@@ b@@ [i+1]); strcpy(@@ b@@ [i+1],@@ x); } } } for(i=0;i<=@@ p@@ ;i++){ printf("%s\n",@@ b[i]); } for(i=0;i<=@@ q@@ ;i++){ printf("%s\n",@@ d[i]); } return0; }  
c -1
h -1
intmain() { int@@ ch@@ [@@ 16@@ ],i,j,@@ n,@@ m; cin>>@@ ch@@ [0]; while(@@ ch@@ [0]@@ !=-1) { n=0; for(i=1;@@ ch@@ [i-1]@@ !=0;i++) { n++; cin>>@@ ch@@ [i]; } m=0; for(i=0;i<n;i++) { if(@@ ch@@ [i]@@ %@@ 2@@ ==1)@@ continue; else { for(j=0;j<n;j++) { if(@@ ch@@ [i]==@@ 2*@@ ch@@ [j]@@ )@@ m++; } } } cout<<@@ m@@ <<endl; cin>>@@ ch@@ [0]; } return0; }  
c -1
h -1
0

voidmain() {int@@ col,@@ row,@@ i,j,k,@@ t=0,@@ a[@@ 101][@@ 101@@ ]={0}; int*p; scanf("%d%d",&row,&col); for(i=0;i<row;i++) for(j=0;j<col;j++) scanf("%d",&a[i][j]); p=@@ (int*)malloc(sizeof(int)@@ *@@ row@@ *@@ col); for(i=0;i<col;i++) for(k@@ =0,@@ j@@ =i@@ ;j>=0@@ &&k@@ <row@@ ;k++@@ ,j@@ --) {@@ *(p+@@ t)@@ =@@ a[k]@@ [j]; t@@ ++;} for(i=1;i<row;i++) for(k=@@ i,j@@ =@@ col-1@@ ;k<@@ row@@ &&j>=0@@ ;j--@@ ,k++) {@@ *(p+@@ t)@@ =@@ a[k]@@ [j]; t@@ ++;} for(i=0;i<@@ row@@ *@@ col;i++) printf("%d\n",*(p@@ +i)); }  
c -1
h -1
intmain() { intn,i,j,@@ m; inta[20000]; scanf("%d\n",&n); for(i=1;i<=n;i++) { scanf("%d",&@@ a[i@@ -1]); } printf("%d",a[0]); for(j=2;j<=@@ n;j++) { for(m=1;m@@ <=j@@ -1@@ ;m++) { if(a@@ [j-1@@ ]==@@ a[@@ m-1@@ ]) { break; } } if(m==@@ j)@@ printf("%d",@@ a@@ [j-1]); } return0; }  
c -1
h -1
0

intmain() { intsz[@@ 1000],@@ n,k,@@ i,j,@@ sum; scanf("%d%d",&@@ n,@@ &@@ k); for(i=0;i<n;i++) { scanf("%d",&sz[i]); } for(i=0;i<n;i++) { for(j=i+1;j<n;j++) { sum=@@ sz[i]@@ +sz@@ [j]; if(sum@@ ==k) { printf("yes"); scanf("@@ "); return0; } } if(sum@@ ==k) { break; } } printf("no"); scanf("@@ "); return0; }  
c -1
h -1
intmain() { inta,b,c,@@ i,@@ e; ints[@@ 12@@ ]; int@@ d=0; scanf("%d%d%d",&a,&b,&c); if(a%@@ 4==0&&a%100!=0@@ ||a%@@ 400==0) s@@ [1]=@@ 29; else s@@ [1]=@@ 28; s[@@ 0]=@@ 31@@ ;@@ s[2@@ ]=31@@ ;@@ s[@@ 3@@ ]=30@@ ;@@ s[@@ 4@@ ]=31@@ ;@@ s[@@ 5@@ ]=30@@ ;@@ s[@@ 6@@ ]=31@@ ;@@ s[@@ 7@@ ]=31@@ ;@@ s[@@ 8@@ ]=30@@ ;@@ s[@@ 9@@ ]=31@@ ;@@ s[@@ 10@@ ]=30@@ ;@@ s[@@ 11@@ ]=31; for(i=1;i<=@@ b;i++) { d=d+@@ s@@ [i@@ -2@@ ]; } e=@@ d@@ +c; printf("%d",@@ e); return0; }  
c -1
h -1
0

intm,n,@@ a[@@ 1000@@ ]={0},b[@@ 1000]={0}; intmain() { inti,j,k; voidread@@ (int@@ array1@@ [],int@@ array2@@ [@@ ]); voidsort@@ (intarray[],int@@ x); voidprint@@ (int@@ array5@@ [],int@@ array6@@ [@@ ]); scanf("%d%d",&m,&n); read@@ (a,b); sort@@ (a,m); sort@@ (b,n); print@@ (a,b); } voidread@@ (int@@ array1@@ [],int@@ array2@@ []) { inti; for(i=0;i<m;i++) scanf("%d",&a[i]); for(i=0;i<n;i++) scanf("%d",&b[i]); } voidsort@@ (intarray[],int@@ x) { inti,j,k,@@ t; for(i=0;i<x@@ -1;i++) for(j=i+1;j<@@ x;j++) if(array@@ [ j@@ ]<@@ array@@ [i]) {t=@@ array@@ [i];@@ array@@ [i]=@@ array@@ [j];@@ array@@ [j]=@@ t;} } voidprint@@ (int@@ array5@@ [],int@@ array6@@ []) { intj; for(j=0;j<m;j++) printf("%d",@@ array5@@ [j]); for(j=0;j<n-1;j++) printf("%d",@@ array6@@ [j]); printf("%d",@@ array6@@ [@@ n-1]); }  
c -1
h -1
structstudent { long@@ number; intchinese; intmath; intsum; structstudent*next; structstudent*@@ previous@@ ; }; structstudent*creat@@ (@@ long@@ n) { structstudent*head,*p1,*p2; inti; head=@@ null@@ ; p1@@ =(structstudent*)malloc(len); scanf("%d%d%d",&p1->@@ number@@ ,&p1->@@ chinese@@ ,&p1->math); p1->sum=p1->@@ chinese+@@ p1->@@ math; p1->next=@@ null@@ ;@@ p1->@@ previous@@ =@@ null@@ ; head@@ =p1;@@ p2=p1; for(i=2;i<=n;i++) { p1@@ =(structstudent*)malloc(len); scanf("%d%d%d",&p1->@@ number@@ ,&p1->@@ chinese@@ ,&p1->math); p1->sum=p1->@@ chinese+@@ p1->@@ math; p1->next=@@ null@@ ; p1->@@ previous@@ =p2; p2->next=p1; p2=p1; } return(head); } structstudent*@@ print(@@ structstudent*head@@ ) { structstudent*@@ max@@ ,*p; max=@@ head; for(p=head@@ ;p@@ !=@@ null@@ ;@@ p=p->next) if(p->@@ sum@@ >max@@ ->@@ sum@@ )max=@@ p; printf("%d%d\n",@@ max@@ ->@@ number,@@ max@@ ->sum); if(max@@ ==@@ head@@ ) head=@@ max@@ ->next; else max@@ ->@@ previous@@ ->next=@@ max@@ ->next; return(head); } voidmain() { structstudent*head; long@@ n; scanf("%d",&n); head=creat(n); print(head); print(head); print(head); }  
c -1
h -1
0

structbook { intID; charauthor@@ [30]; structbook*next; }; intn,@@ max=0; charc; structbook*@@ create@@ () { structbook@@ *head,*p1,*p2; p1=(structbook@@ *)malloc(LEN); scanf("%d%s",&p1->@@ ID,@@ p1->@@ author); head=p1; p2=p1; p1->next=NULL; inti=1; do { if(i==@@ n@@ )break; p1=(structbook@@ *)malloc(LEN); scanf("%d%s",&p1->@@ ID,@@ p1->@@ author); p2->next=p1; p2=p1; p1->next=NULL; i++; }while(@@ 1); return(head); } intmain() { structbook*@@ head; inti; int*@@ num; num=@@ (int*)malloc(@@ 26@@ *sizeof(int)); for(i=0;i<26;i++) *(@@ num@@ +i)@@ =0; scanf("%d",&n); head=@@ create@@ (); structbook@@ *p; char*@@ s; p=head; while(p) { for(@@ s=@@ p->@@ author@@ ;*@@ s@@ !='\0'@@ ;s++) { inttemp; temp@@ =*@@ s@@ -'A'; (*(@@ num@@ +@@ temp@@ ))@@ ++; } p=p->next; } for(i=0;i<26;i++) { if(*(@@ num@@ +i)@@ >max@@ )@@ max@@ =*(@@ num@@ +i); } for(i=0;i<26;i++) { if(*(@@ num@@ +i)@@ ==@@ max@@ )break; } printf("%c\n%d\n",@@ 'A'+@@ i,@@ max); c@@ ='A'+i; p=head; while(p) { for(@@ s=@@ p->@@ author@@ ;*@@ s@@ !='\0'@@ ;s++) { if(*@@ s@@ ==@@ c@@ )break; } if(*@@ s@@ !=@@ '\0')@@ printf("%d\n",p->@@ ID); p=p->next; } }  
c -1
h -1
intmain() { inta[16@@ ],i,j,@@ m,n,@@ t; while(@@ a[0]@@ !=@@ -1){ t@@ =0;@@ n=0; for(i=0;@@ ;i++){ scanf("%d",&a[i]); if(a[i]<=@@ 0@@ ){ break; } else{ t++; } } if(a[0]@@ ==@@ -1){ break; } else{ for(j=0;j<@@ t@@ ;j++){ for(m=0;m<@@ t@@ ;m++){ if(a[j]==2*@@ a[m@@ ]){ n++; } } } printf("%d\n",n); } } return0; }  
c -1
h -1
0

intmain() { inta[16]; inti,j,@@ num; while(1) { for(i=0;i<16;i++) { cin>>a[i]; if(a[0]==-1) return0; if(a[i]==0) break; } num=0; for(i=0;a[i]@@ ;i++) for(j=0;@@ a[j]@@ ;j++) if(a[i]==@@ 2@@ *(@@ a[j]@@ )) num++; cout<<num<<endl; } return0; }  
c -1
h -1
structStudent { intnum,@@ yuwen@@ ,@@ shuxue@@ ,sum; }; voidmain() { intn,@@ max1@@ =0,@@ max2@@ =0,@@ max3@@ =0,@@ stu1@@ =0,@@ stu2@@ =0,@@ stu3@@ =0; structStudent@@ student[@@ 100000@@ ],*@@ stu@@ ; scanf("%d",&n); for(@@ stu@@ =@@ student@@ ;@@ stu@@ <@@ student@@ +n;@@ stu@@ ++){ scanf("%d",&@@ stu->@@ num); scanf("%d",&@@ stu->@@ yuwen@@ ); scanf("%d",&@@ stu->@@ shuxue); (stu@@ ->@@ sum@@ )@@ =(@@ stu->@@ yuwen@@ )+@@ (stu@@ ->@@ shuxue); if(@@ stu->@@ sum@@ >=@@ max3@@ ){ if(@@ stu->@@ sum@@ >=@@ max2@@ ){ if(@@ stu->@@ sum@@ >=@@ max1@@ ){ if(@@ stu->@@ sum>@@ max1@@ ){ max3=max2; max2=@@ max1; max1@@ =stu@@ ->@@ sum; stu3@@ =@@ stu2@@ ; stu2@@ =@@ stu1@@ ; stu1@@ =stu@@ ->@@ num; } else{ max3=max2; max2=@@ max1; max1@@ =stu@@ ->@@ sum; stu3@@ =@@ stu2@@ ; stu2@@ =stu@@ ->@@ num; } } else{ if(@@ stu->@@ sum>@@ max2@@ ){ max3=max2; max2=@@ stu->@@ sum; stu3@@ =@@ stu2@@ ; stu2@@ =stu@@ ->@@ num; } else{ max3=max2; max2=@@ stu->@@ sum; stu3@@ =stu@@ ->@@ num; } } } else{ if(@@ stu->@@ sum>@@ max3@@ ){ max3=@@ stu->@@ sum; stu3@@ =stu@@ ->@@ num; } else@@ max3=@@ stu->@@ sum; } } } stu@@ =@@ student@@ ; printf("%d%d\n",@@ (stu@@ +@@ stu1@@ -1)@@ ->num,@@ (stu@@ +@@ stu1@@ -1)@@ ->sum); printf("%d%d\n",@@ (stu@@ +@@ stu2@@ -1)@@ ->num,@@ (stu@@ +@@ stu2@@ -1)@@ ->sum); printf("%d%d\n",@@ (stu@@ +@@ stu3@@ -1)@@ ->num,@@ (stu@@ +@@ stu3@@ -1)@@ ->sum); }  
c -1
h -1
0

intmain(){ inti,@@ x=0; doublen; char@@ su@@ [500],@@ zu@@ [500]; scanf("%lf%s%s",&@@ n,@@ su@@ ,@@ zu@@ ); if(strlen(@@ su@@ )!=strlen(@@ zu@@ )) {@@ printf("error");@@ return0;} for(i=0;i<strlen(@@ su@@ );i++){ if((@@ su@@ [i]!='A'&&@@ su@@ [i]!='T@@ '&&@@ su@@ [i]!='G@@ '&&@@ su@@ [i]!='@@ C')||(@@ zu@@ [i]!='A'&&@@ zu@@ [i]!='T@@ '&&@@ zu@@ [i]!='G@@ '&&@@ zu@@ [i]!='@@ C')@@ ) {@@ printf("error");@@ return0;} if(@@ su@@ [i]==@@ zu@@ [i]) x++; } if(x@@ /@@ (@@ 1.0*@@ strlen(@@ su@@ ))@@ >n) {@@ printf("yes");@@ return0;} printf("no"); return0; }  
c -1
h -1
intmain() {int@@ shuzu@@ [@@ 16]; inti,@@ t,@@ k,@@ num=0; for(i=0;@@ ;i++){ scanf("%d",&@@ shuzu@@ [i]); if(shuzu@@ [i]==@@ -1){ break; } if(shuzu@@ [i]@@ ==0){ for(t=0;t@@ <i@@ ;t@@ ++){ for(k=@@ t@@ +1@@ ;k<@@ i@@ ;k++){ if(shuzu@@ [t@@ ]==@@ shuzu@@ [k]@@ *2@@ ||@@ shuzu@@ [t@@ ]@@ *2==@@ shuzu@@ [k]@@ ){ num++; } } } printf("%d\n",num); num=0; i@@ =-1; } } return0; }  
c -1
h -1
0

intmain() { inta[@@ 26@@ ][@@ 999@@ ],@@ t,@@ i,@@ n@@ [26],@@ k,@@ j,@@ b=0; char@@ x[@@ 27]; scanf("%d",&t); for(i=0;i<26;i++) { n@@ [i]=0; } for(i=0;i<t;i++) { scanf("%d%s",&@@ k,@@ x); for(j=0;@@ x@@ [j]!='\0';j++) { a[x@@ [j]-65@@ ][@@ n[@@ x[j]@@ -65@@ ]@@ ]=@@ k; n[@@ x[j]@@ -65]++; } } for(i=0;i<26;i++) { if(n@@ [i]>@@ b) { b=@@ n[i]; j=i; } } printf("%c\n",@@ j@@ +65); printf("%d\n",n@@ [j]); for(i=0;i<n@@ [j]@@ ;i++) { printf("%d\n",@@ a[j]@@ [i]); } return0; }  
c -1
h -1
intmain() { inta,b,c,@@ d; scanf("%d%d%d",&a,&b,&c); switch(@@ b) { case1: d=@@ c; break; case2: d@@ =31+c; break; case3: d=@@ 29@@ +31+@@ c; break; case4: d=@@ 29@@ +31+@@ 31+@@ c; break; case5: d=@@ 29@@ +31+@@ 31+30@@ +c; break; case6: d=@@ 29@@ +@@ 31*3@@ +30@@ +c; break; case7: d=@@ 29@@ +@@ 31*3@@ +@@ 60@@ +c; break; case8: d=@@ 29@@ +@@ 31*@@ 4@@ +@@ 60@@ +c; break; case9: d=@@ 29@@ +@@ 31*5@@ +@@ 60@@ +c; break; case10: d=@@ 29@@ +@@ 31*5@@ +@@ 90@@ +c; break; case11: d=@@ 29@@ +@@ 31*6@@ +@@ 90@@ +c; break; case12: d=@@ 29@@ +@@ 31*6@@ +@@ 120@@ +c; break; printf("%d",d); } if((@@ a%@@ 4!=0@@ ||a%@@ 100==0&&@@ a%@@ 400@@ !=0)@@ &&@@ b@@ >2) d=d@@ -1; printf("%d",d); return0; }  
c -1
h -1
0

int@@ fg@@ (int@@ k,int@@ m) { intj,@@ d=0; if(m==1) { d=1; } for(j=k@@ ;j<=@@ m;j++) { if(m@@ %j==0) d=d+@@ fg@@ (@@ j,@@ m@@ /j@@ ); } return(@@ d); } intmain() { intn,i,@@ a[@@ 40000@@ ],b[@@ 40000@@ ],@@ s; scanf("%d",&n); for(i=1;i<=n;i++) { scanf("%d",&a[i]); } for(i=1;i<=n;i++) { b[i]=@@ fg@@ (2,@@ a[i]); printf("%d\n",@@ b[i]); } return0; }  
c -1
h -1
structStudent { intnum; intchinese; intmath; }@@ sdu@@ [@@ 99999@@ ]; intmain() { intN@@ ,i,j,@@ s,@@ t,@@ m; scanf("%d",&N); for(i=0;i<N;i++) scanf("%d%d%d",&@@ sdu@@ [i].num,&@@ sdu@@ [i].@@ chinese@@ ,&@@ sdu@@ [i].@@ math); for(j=0;j<@@ 3@@ ;j++){ for(i=0;i<@@ N@@ -j@@ -1;i++) if((@@ sdu@@ [i].@@ chinese+@@ sdu@@ [i].@@ math@@ )@@ >=@@ (@@ sdu@@ [i+1].@@ chinese+@@ sdu@@ [i+1].@@ math@@ )){ s=@@ sdu@@ [i].@@ num;@@ t=@@ sdu@@ [i].@@ chinese@@ ;@@ m=@@ sdu@@ [i].@@ math; sdu@@ [i].@@ num=@@ sdu@@ [i+1].@@ num;@@ sdu@@ [i].@@ chinese@@ =@@ sdu@@ [i+1].@@ chinese@@ ;@@ sdu@@ [i].@@ math@@ =@@ sdu@@ [i+1].@@ math; sdu@@ [i+1].@@ num=@@ s@@ ;@@ sdu@@ [i+1].@@ chinese@@ =@@ t;@@ sdu@@ [i+1].@@ math@@ =@@ m; } } for(i=0;i<3;i++) printf("%d%d\n",@@ sdu@@ [N@@ -1@@ -i@@ ].num,@@ sdu@@ [N@@ -1@@ -i@@ ].@@ chinese+@@ sdu@@ [N@@ -1@@ -i@@ ].@@ math); }  
c -1
h -1
0

struct@@ information { inta; chars[@@ 26]; int@@ len; }@@ xinxi@@ [1000]; voidmain() { intn,i,@@ c[@@ 26]={0},@@ max,@@ t@@ ,j; scanf("%d",&n); for(i=0;i<n;i++) { scanf("%d%s",&@@ xinxi[i].@@ a,@@ xinxi[i].@@ s); xinxi[i].@@ len=strlen(@@ xinxi[i].@@ s); } for(i=0;i<n;i++) for(j=0;j<@@ xinxi[i].@@ len@@ ;j++) { if(xinxi[i].@@ s[j]=='@@ A')@@ c[@@ 1@@ ]++; if(xinxi[i].@@ s[j]=='@@ B@@ ')c[@@ 2@@ ]++; if(xinxi[i].@@ s[j]=='@@ C')@@ c[@@ 3@@ ]++; if(xinxi[i].@@ s[j]=='@@ D@@ ')c[@@ 4@@ ]++; if(xinxi[i].@@ s[j]=='@@ E@@ ')c[@@ 5@@ ]++; if(xinxi[i].@@ s[j]=='@@ F@@ ')c[@@ 6@@ ]++; if(xinxi[i].@@ s[j]=='@@ G')@@ c[@@ 7@@ ]++; if(xinxi[i].@@ s[j]=='@@ H@@ ')c[@@ 8@@ ]++; if(xinxi[i].@@ s[j]=='@@ I@@ ')c[@@ 9@@ ]++; if(xinxi[i].@@ s[j]=='@@ J@@ ')c[@@ 10@@ ]++; if(xinxi[i].@@ s[j]=='@@ K@@ ')c[@@ 11@@ ]++; if(xinxi[i].@@ s[j]=='@@ L@@ ')c[@@ 12@@ ]++; if(xinxi[i].@@ s[j]=='@@ M@@ ')c[@@ 13@@ ]++; if(xinxi[i].@@ s[j]=='@@ N@@ ')c[@@ 14@@ ]++; if(xinxi[i].@@ s[j]=='@@ O@@ ')c[@@ 15@@ ]++; if(xinxi[i].@@ s[j]=='@@ P@@ ')c[@@ 16@@ ]++; if(xinxi[i].@@ s[j]=='@@ Q@@ ')c[@@ 17@@ ]++; if(xinxi[i].@@ s[j]=='@@ R@@ ')c[@@ 18@@ ]++; if(xinxi[i].@@ s[j]=='@@ S@@ ')c[@@ 19@@ ]++; if(xinxi[i].@@ s[j]=='@@ T')@@ c[@@ 20@@ ]++; if(xinxi[i].@@ s[j]=='@@ U@@ ')c[@@ 21@@ ]++; if(xinxi[i].@@ s[j]=='@@ V@@ ')c[@@ 22@@ ]++; if(xinxi[i].@@ s[j]=='@@ W@@ ')c[@@ 23@@ ]++; if(xinxi[i].@@ s[j]=='@@ X@@ ')c[@@ 24@@ ]++; if(xinxi[i].@@ s[j]=='@@ Y@@ ')c[@@ 25@@ ]++; if(xinxi[i].@@ s[j]=='@@ Z@@ ')c[@@ 26@@ ]++; } max=@@ c[@@ 0]; t=0; for(i=1;i<26;i++) { if(c@@ [i]>max) { max=@@ c[i]; t=i; } } printf("%c\n",@@ 64@@ +@@ t); printf("%d\n",@@ c[@@ t@@ ]); for(i=0;i<n;i++) for(j=0;j<@@ xinxi[i].@@ len@@ ;j++) if(xinxi[i].@@ s@@ [j]==@@ 64@@ +@@ t) printf("%d\n",@@ xinxi[i].@@ a); }  
c -1
h -1
int@@ output@@ (int@@ b[],int@@ a) { sort@@ (b,@@ b+@@ a); for(inti=0;i<@@ a@@ -1;i++) cout<<b[i]@@ <<''; cout<<b[@@ a@@ -1]; } intmain() { inta,b; cin>>a>>@@ b; int@@ input@@ (inta,int@@ s); input@@ (a,b); return0; } int@@ input@@ (inta,int@@ s) { intb[@@ 1000],@@ c[@@ 1000]; for(inti=0;i<@@ a;i++) cin>>b[i]; for(inti=0;i<@@ s;i++) cin>>@@ c[i]; output@@ (b,@@ a); cout<<'@@ '; output@@ (c,@@ s); }  
c -1
h -1
0

intmain() { intn,k,i,@@ m,@@ sum=0,@@ x,y; i=0; int@@ sj@@ [100]; intsz[100][100]; scanf("%d",&x); for(y=0;y@@ <@@ x@@ ;y@@ ++){ scanf("%d",&m); scanf("%d",&n); for(i=0;i<m;i++){ for(k=0;k<n;k++){ scanf("%d",&@@ sz[i]@@ [k]); } } for(k=0;k<n;k++){ sum=sum+@@ sz[0][@@ k@@ ]+sz[@@ m-1][@@ k@@ ]; } for(i=1;i<@@ m-1@@ ;i++){ sum=sum+@@ sz[i]@@ [0]+@@ sz[i]@@ [n-1]; } sj@@ [y@@ ]=@@ sum; sum=0; } for(y=0;y@@ <@@ x@@ ;y@@ ++){ printf("%d\n",@@ sj@@ [y@@ ]); } return0; }  
c -1
h -1
structpatient {@@ charID[10]; intage; int@@ a6@@ ; char@@ Id@@ [10]; }; voidmain() {@@ structpatient@@ bin@@ [N]; intn,@@ mid@@ ; chars[@@ 10]; inti=0,j=0,@@ k=0; charc[@@ 10]; scanf("%d",&n); for(i=0;i<n;i++) scanf("%s%d",&@@ bin@@ [i].@@ ID,&@@ bin@@ [i].age); for(i=0;i<n;i++) {if(@@ bin@@ [i].age>=60) {@@ bin@@ [j].@@ a6@@ =@@ bin@@ [i].age; strcpy(@@ bin@@ [j].@@ Id@@ ,@@ bin@@ [i].ID); j++; bin@@ [i].age@@ =0; } } for(k=1;k<@@ j@@ ;k++) {@@ for(i=0;i<j@@ -@@ k;i++) if(@@ bin@@ [i].@@ a6@@ <@@ bin@@ [i+1].@@ a6@@ ) {@@ mid@@ =@@ bin@@ [i].@@ a6@@ ; bin@@ [i].@@ a6@@ =@@ bin@@ [i+1].@@ a6@@ ; bin@@ [i+1].@@ a6@@ =@@ mid@@ ; strcpy(@@ c,@@ bin@@ [i].@@ Id@@ ); strcpy(s,@@ bin@@ [i+1].@@ Id@@ ); strcpy(@@ bin@@ [i+1].@@ Id@@ ,@@ c); strcpy(@@ bin@@ [i].@@ Id@@ ,@@ s); } } for(i=0;i<j;i++) printf("%s\n",@@ bin@@ [i].@@ Id@@ ); for(i=0;i<n;i++) {if(@@ bin@@ [i].age@@ !=0) printf("%s\n",@@ bin@@ [i].ID); } }  
c -1
h -1
0

intmain() { inta[100][100@@ ]={0}; introw,col; cin>>row>>col; for(inti=0;i<row;i++) for(intj=0;j<col;j++) cin>>*(*(a+i)+j); for(intm=0;m@@ <row@@ +col@@ -1@@ ;m++) for(inti=0;i<row;i++) for(intj=0;j<col;j++) if(i+j@@ ==@@ m) cout<<@@ *(*(a+i)@@ +j)<<endl; return0; }  
c -1
h -1
inta[@@ 30000@@ ]; int@@ find@@ (int@@ k) { inti; for(i=0;i<k;i++) { if(a[i]==@@ a[k]) return1; } return0; } intmain() { intn; cin>>n; for(inti=0;i<n;i++) cin>>a[i]; cout<<a[0]; for(intk@@ =1@@ ;k<@@ n;k++) { if(@@ find@@ (@@ k)@@ ==0) cout<<""<<@@ a[k]; } return0; }  
c -1
h -1
0

intmain(intargc,char*argv[]) { intn; int@@ histgram@@ [@@ 101]; inti; intx; scanf("%d",&n); for(i=0;i<@@ 101@@ ;i++) { histgram@@ [i]=0; } scanf("%d",&x); histgram@@ [x@@ ]++; printf("%d",x); for(i=0;i<n-1;i++) { scanf("%d",&x); if(!@@ histgram@@ [x@@ ]) { printf("%d",x); } histgram@@ [x@@ ]++; } return0; }  
c -1
h -1
structstudent { intid; int@@ score1@@ ; int@@ score2; structstudent*next; }; structstudent*head; structstudent*creat@@ (intx) { structstudent*p1,*p2; p1=p2=(structstudent*)malloc(LEN); scanf("%d%d%d",&@@ p1->id,&p1->@@ score1@@ ,&p1->@@ score2); head@@ =0; while(@@ p1->id@@ <@@ x) { if(p1->@@ id@@ ==1) head=p1; elsep2->next=p1; p2=p1; p1=(structstudent*)malloc(LEN); scanf("%d%d%d",&@@ p1->id,&p1->@@ score1@@ ,&p1->@@ score2); if(p1->@@ id@@ ==@@ x){ p2->next=p1; p2=p1; } } p2->next@@ =0; return(head); } voidmain() { intn; structstudent@@ *p,*@@ q@@ ,*@@ j@@ ,*@@ k; scanf("%d",&n); creat@@ (n); p=@@ q=@@ head; do{ if((@@ p->@@ score1@@ +p->@@ score2@@ )>@@ (@@ q->@@ score1@@ +@@ q->@@ score2@@ )) q=p; p=p->next; }while(p@@ !=0); p=@@ j=@@ head; do{ if((@@ p->@@ score1@@ +p->@@ score2@@ )>@@ (j@@ ->@@ score1@@ +j@@ ->@@ score2@@ )@@ &&p@@ !=@@ q) j=@@ p; p=p->next; }while(p@@ !=0); p=@@ k=@@ head; do{ if((@@ p->@@ score1@@ +p->@@ score2@@ )>@@ (k@@ ->@@ score1@@ +k@@ ->@@ score2@@ )@@ &&p@@ !=@@ q@@ &&p@@ !=@@ j) k=@@ p; p=p->next; }while(p@@ !=0); printf("%d%d\n",@@ q->@@ id,@@ (@@ q->@@ score1@@ +@@ q->@@ score2@@ )); printf("%d%d\n",@@ j@@ ->id,@@ (j@@ ->@@ score1@@ +j@@ ->@@ score2@@ )); printf("%d%d",@@ k@@ ->id,@@ (k@@ ->@@ score1@@ +k@@ ->@@ score2@@ )); }  
c -1
h -1
0

intmain() { inta,b,@@ i,j,@@ q; cin>>a>>@@ b; intm@@ [a@@ +1@@ ][b@@ +1]; for(i=1;i<=@@ a;i++) for(j=1;j<=@@ b;j++) cin>>@@ m@@ [i][j]; for(q=@@ 2@@ ;q@@ <=@@ a+@@ b@@ ;q++) for(i=1@@ ,j=@@ q@@ -i@@ ;j>0@@ ;i++,j@@ =@@ q@@ -i@@ ) {@@ if(j@@ <=@@ b@@ &&i@@ <=@@ a) cout<<@@ m@@ [i][j]<<endl; } return0; }  
c -1
h -1
intm[@@ 1000][1000]; intmain() { inta,b,@@ c,d,@@ f,@@ i,j,@@ e=0,@@ n; scanf("%d",&n); for(i=0;i<n;i++) { for(j=0;j<n;j++) { scanf("%d",&@@ m@@ [i][j]); } printf("\n"); } for(i=0;i<n;i++) { for(j=0;j<n;j++) { if(m@@ [i][j]==0) { a=i; b=j; e=1; break; } } if(e@@ ==1) { break; } } for(j=@@ b@@ ;j<n;j++) { if(m@@ [a@@ ][j]@@ !=0) { c@@ =j@@ -1; break; } } for(i=a@@ ;i<n;i++) { if(m@@ [i]@@ [b@@ ]!=0) { d@@ =i-1; break; } } f@@ =(@@ c@@ -b@@ -1)*(@@ d@@ -@@ a@@ -1); printf("%d",@@ f); return0; }  
c -1
h -1
0

intmain(){ chara[501],b[501]; double@@ c,@@ m,@@ n=0,@@ p,q; inti,@@ t=0; scanf("%lf",&@@ c); scanf("%s",a); scanf("%s",b); q@@ =strlen(a); p@@ =strlen(b); if(q@@ !=@@ p@@ ){ t=t+1; } for(i=0;i<@@ q@@ ;i++){ if(a[i]!='@@ T'&&a[i]!='@@ C'&&a[i]!='@@ G'&&a[i]!='@@ A'@@ ){ t=t+1; } } for(i=0;i<p@@ ;i++){ if(@@ b[i]!='@@ T'&&b[i]!='@@ C'&&b[i]!='@@ G'&&b[i]!='@@ A'@@ ){ t=t+1; } } if(t@@ !=0){ printf("error"); } else{ for(i=0;i<p@@ ;i++){ if(a[i]==b[i]){ n=n+1; } } m=@@ n/@@ p; if(m@@ >@@ c)@@ printf("yes"); elseprintf("no"); } return0; }  
c -1
h -1
intmain() { intn,@@ a,b,c,d,@@ e,@@ x=0; intm[@@ 1000][1000]; scanf("%d",&n); for(a@@ =1;@@ a@@ <=n;@@ a++) { for(b@@ =1;@@ b@@ <=n;@@ b++) { scanf("%d",&@@ m@@ [a@@ ][b@@ ]); } } for(c@@ =1;@@ c@@ <=n;@@ c++) { for(d@@ =1;@@ d@@ <=n;@@ d++) { if(m@@ [c@@ ][@@ d@@ ]==0) { for(@@ e=@@ d@@ +1;@@ e@@ <=n;@@ e++) { if(m@@ [c@@ ][@@ e@@ ]!=0) { x++; } else break; } break; } } } printf("%d",x); return0; }  
c -1
h -1
0

intm,n; inta[1000]; intb[@@ 1000]; voidinput() { inti; cin>>m>>n; for(i=0;i<m;i++) cin>>a[i]; for(i=0;i<n;i++) cin>>b[i]; return; } voidpaixu@@ () { inti,j; intp; for(i=0;i<m-1;i++) for(j=0;j<@@ m-1@@ -i;j++) if(a[j]>a[j+1]) { p=@@ a[j]; a[j]=a[j+1]; a[j+1]=@@ p; } for(i=0;i<n-1;i++) for(j=0;j<n-1-i;j++) if(b[j]>b[j+1]) { p=@@ b[j]; b[j]=b[j+1]; b[j+1]=@@ p; } return; } voidoutput@@ () { inti; cout<<a[0]; for(i=1;i<m;i++) cout<<""<<a[i]; for(i=0;i<n;i++) cout<<""<<@@ b[i]; return; } intmain() { input(); paixu@@ (); output@@ (); return0; }  
c -1
h -1
intn; inta[100@@ ]={0}; intmax@@ [100]={0}; main() { inti,j,@@ c; scanf("%d",&n); for(i=1;i<=n;i++) scanf("%d",&a[i]); for(i=1;i<=n;i++) { if(i==1) max@@ [i]=1; else { for(j=1@@ ,@@ c@@ =0;j<=@@ i-1;j++) { if(a[j]@@ <@@ a[i]); else { if(c@@ <@@ max@@ [j]) c=@@ max@@ [j]; } } max@@ [i]=@@ c@@ +1; } } for(i=1@@ ,@@ c=@@ max@@ [1]@@ ;i<=n;i++) { if(c@@ <@@ max@@ [i]) c=@@ max@@ [i]; } printf("%d",@@ c); }  
c -1
h -1
0

voidf1@@ (inta[],intb[],int@@ m,intn) { inti; for(i=0;i<m;i++) cin>>a[i]; for(i=0;i<n;i++) cin>>b[i]; } voidf2@@ (inta[],intb[],int@@ m,intn) { inti,j; intt; for(i=0;i<m;i++) {@@ for(j=0;j<m-1;j++) {@@ if(a@@ [j+1]@@ <@@ a[j]) {t=@@ a[j]; a[j]=a[j+1]; a[j+1]=t; } } } for(i=0;i<n;i++) {@@ for(j=0;j<n-1;j++) {@@ if(b@@ [j+1]@@ <@@ b[j]) {t=@@ b[j]; b[j]=b[j+1]; b[j+1]=@@ t; } } } } void@@ f3@@ (inta[],intb[],int@@ m,intn) {@@ inti,j; for(i=0;i<n;i++) {@@ a[m@@ +i]=@@ b[i]@@ ;} } void@@ f4@@ (inta[],int@@ m,intn) {inti; for(i=0;i<m+@@ n-1;i++) {@@ cout<<a[i]@@ <<"@@ "@@ ;} cout<<a[@@ m+@@ n-1]; } intmain() {@@ intm,n; cin>>m>>n; inta[1000]; intb[@@ 1000]; f1@@ (a,b,m,n); f2@@ (a,b,m,n); f3@@ (a,b,m,n); f4@@ (a,@@ m,n); return0; }  
c -1
h -1
intmain() { inti,j,@@ a,@@ sum0@@ ,@@ n,@@ s,@@ t,@@ b; scanf("%d",&n); sum0@@ =0; t=0; for(i=1;i<=n;i++) {@@ s=0; for(j=1;j<=n;j++) {@@ scanf("%d",&a); if(a==0) {@@ sum0@@ =@@ sum0@@ +1; s=s@@ +1;} } if(s@@ !=0) t=@@ s; else t=t@@ ;} b@@ =(@@ t@@ -2)*(@@ sum0@@ -2*@@ t)@@ /2; printf("%d\n",@@ b); return0; }  
c -1
h -1
0

intmain() { intn,k,@@ a[1000]; cin>>n>>k; for(inti=0;i<@@ n;i++)@@ cin>>a[i]; for(inti=0;i<n;i++){ for(intj=0;j<n;j++){ if(a[j]==@@ k-@@ a[i]@@ ){ cout<<"yes"; return0; } } } cout<<"no"; return0; }  
c -1
h -1
intnum[@@ 1000][1000]; intmain(){ intk,@@ i,j; scanf("%d",&k); for(i=0;i<k;i++) { for(j=0;j<k;j++) { scanf("%d",&@@ num@@ [i][j]); } } intm,n,@@ p,q,@@ s,@@ w; w@@ =0; for(i=0;i<@@ k@@ &&@@ w@@ ==0@@ ;i++) { for(j=0;j<@@ k@@ &&@@ w@@ ==0@@ ;j++) { if(num@@ [i][j]==0) { m=i; p=@@ j; w@@ =1; } } } n=0; q=0; for(i=@@ m,@@ j=@@ p@@ ;j<@@ k;j++) { if(num@@ [i][j]==0) { n++; } } for(i=@@ m,@@ j=@@ p@@ ;i<@@ k;i++) { if(num@@ [i][j]==0) { q++; } } s=(@@ n-2@@ )*(@@ q@@ -2); printf("%d",s); return0; }  
c -1
h -1
0

struct@@ pa { charid@@ [11]; intage; }; voidmain() { structpa@@ p[@@ 200]; intn,i,@@ t[@@ 200],@@ j,@@ m; scanf("%d",&n); for(i=0;i<n;i++) scanf("%s%d",@@ p[i].@@ id,&@@ p[i].age); i=0; t@@ [0]@@ =0; while(i<n) { if(p@@ [i].age>=60) { for(j=0;j<@@ i@@ &&p@@ [t@@ [j]@@ ].age@@ >=@@ p@@ [i].age@@ ;j++@@ ); for(m@@ =i@@ ;m@@ >@@ j@@ ;m@@ --) t@@ [m]=@@ t[@@ m-1@@ ]; t@@ [j]@@ =i; i++; } else { t@@ [i]=@@ i; i++; } } for(i=0;i<n;i++) printf("%s\n",@@ p@@ [t@@ [i]@@ ].id); }  
c -1
h -1
intmain() { inta[@@ 1001@@ ][@@ 1001]; intn,i,j,k,@@ s=0; scanf("%d",&n); for(i=1;i<=n;i++) { for(j=1;j<=n;j++) { scanf("%d",&a[i][j]); } } for(i=1;i<=n;i++) { for(j=1;j<=@@ n-2@@ ;j++) { if(a[i][j]==0) { for(k=j+1@@ ;k<=@@ n;k++) { if(a[i]@@ [k]@@ ==0) { s=s+@@ (k@@ -j@@ -1); break; } } } } } printf("%d",s); return0; }  
c -1
h -1
0

intmain() { intk,m,n,@@ a[@@ 101][@@ 101@@ ],i,j,@@ t,@@ sum=0; cin>>k; for(t@@ =1;t@@ <=k;@@ t++) { cin>>m>>n; if(m@@ ==1&&n@@ ==1) { cin>>@@ a[1@@ ][1@@ ]; cout<<@@ a[1@@ ][1@@ ]<<endl; } else { for(i=1;i<=m;i++) for(j=1;j<=n;j++) { cin>>a[i][j]; } for(j=1;j<=n;j++) { sum+=@@ a[1]@@ [j]+@@ a[m]@@ [j]; } for(i=1;i<=m;i++) { sum+=@@ a[i][1]@@ +@@ a[i][@@ n]; } sum=sum-@@ a[1@@ ][1@@ ]-@@ a[1@@ ][n@@ ]-@@ a[m@@ ][1@@ ]-@@ a[m@@ ][n]; cout<<sum<<endl; } inta[@@ 101][@@ 101@@ ]={0}; sum=0; } return0; }  
c -1
h -1
voidmain() { structpatient { charID[10]; intage; }; structpatient@@ pat@@ [100]; intn,i,j,@@ huan@@ ; charstring@@ [10]; scanf("%d",&n); for(i=0;i<n;i++) { scanf("%s%d",@@ pat[i].@@ ID,&@@ pat@@ [i].age); } for(i=0;i<n;i++) { if(pat@@ [i].age>=60) { for(j=i@@ ;j>0;j--) { if(pat@@ [j].age@@ >@@ pat@@ [j-1@@ ].age) { huan@@ =@@ pat[j].@@ age; pat@@ [j].age@@ =@@ pat@@ [j-1].@@ age; pat@@ [j-1@@ ].age=@@ huan@@ ; strcpy(@@ string,@@ pat[j].@@ ID); strcpy(@@ pat[j].@@ ID,@@ pat@@ [j-1].@@ ID); strcpy(@@ pat@@ [j-1].@@ ID,@@ string); } } } } for(i=0;i<n;i++) printf("%s\n",@@ pat[i].@@ ID); }  
c -1
h -1
0

structbook { intnum; charname@@ [100]; structbook*next; }; structbook*@@ creat@@ (intn) { int@@ k=1; structbook@@ *head,*@@ p1,*p2,*@@ p; p1=(structbook@@ *)malloc(sizeof(structbook)); head@@ =p1;@@ p2@@ =p1;@@ p=@@ p1; scanf("%d%s",&p1->num,p1->name); p1->next=NULL; do { p1=(structbook@@ *)malloc(sizeof(structbook)); scanf("%d%s",&p1->num,p1->name); p2->next=p1; p2=p1; p1->next=NULL; k++; }while(@@ k@@ <@@ n); returnhead; } intmain(void) { structbook@@ *head,*p; char*@@ q; int*@@ s; intn,i,j,@@ max=0; s=@@ (int*)malloc(@@ 26@@ *sizeof(int)); for(i=0;i<26;i++) *(@@ s@@ +i)@@ =0; scanf("%d",&n); head=creat(n); p=head; while(p) { q=@@ p->@@ name@@ ; while(@@ *@@ q@@ !='\0') {@@ *(@@ s@@ +*(@@ q@@ )@@ -'@@ A')@@ +=@@ 1@@ ;q@@ ++;} p=p->next; } max=0; for(i=0;i<26;i++) if(*(@@ s@@ +i)@@ >max) max@@ =*(@@ s@@ +i); for(i=0;i<26;i++) if(*(@@ s@@ +i)@@ ==@@ max@@ )break; printf("%c\n%d\n",@@ 'A'+@@ i,@@ max); p=head; while(p) { q=@@ p->@@ name@@ ; if(@@ strchr(@@ q@@ ,'@@ A'+@@ i)@@ !=NULL) printf("%d\n",p->num); p=p->next; } }  
c -1
h -1
intn,m; voidf1@@ (inta[@@ 1000@@ ],intb[@@ 1000@@ ]) { inti; for(i=0;i<n;i++) scanf("%d",&a[i]); for(i=0;i<m;i++) scanf("%d",&b[i]); } voidf2@@ (inta[@@ 1000@@ ],intb[@@ 1000@@ ]) { inti,j,t; for(j=0;j<@@ (n-1@@ );j++) {@@ for(i=@@ (@@ n-1)@@ ;i@@ >@@ j@@ ;i--) {@@ if(a[i]@@ <@@ a[i-1@@ ]) {t=@@ a[i]; a[i]=@@ a[i@@ -1]; a[i-1@@ ]=@@ t;@@ }}} for(j=0;j<@@ (n-1@@ );j++) {@@ for(i=@@ (m@@ -1)@@ ;i@@ >@@ j@@ ;i--) {@@ if(b[i]@@ <b@@ [i-1@@ ]) {t=@@ b[i]; b[i]=b@@ [i-1]; b@@ [i-1@@ ]=@@ t;@@ }}} } void@@ f3@@ (inta[@@ 1000@@ ],intb[@@ 1000@@ ]) { inti; for(i=0;i<m;i++) a[n@@ +i]=b[i]; } void@@ f4@@ (inta[@@ 1000@@ ]) { inti; for(i=0;i<(@@ n+@@ m@@ );i++) {@@ printf("%d",a[i]); if(i!=@@ (@@ n+@@ m-1)@@ )@@ printf("@@ ");} } intmain() { inta[@@ 1000],b[1000]; scanf("%d%d",&n,&m); f1@@ (a,b); f2@@ (a,b); f3@@ (a,b); f4@@ (a); }  
c -1
h -1
0

voidmain() { inta[100][100],@@ i,j,@@ row,col,@@ k; scanf("%d%d",&row,&col); for(i=0;i<row;i++) for(j=0;j<col;j++) scanf("%d",&a[i][j]); for(i=0,j@@ =0,@@ k=@@ 2@@ ;j<@@ col@@ ;i++,j--) { printf("%d\n",a[i][j]); if(j@@ ==0||i==@@ row@@ -1) { j=@@ k; k=k+1; i@@ =-1; } } for(i=1@@ ,j=@@ col-1@@ ,k@@ =1@@ ;i<@@ row@@ ;i++,j--) { printf("%d\n",a[i][j]); if(i==@@ row-1@@ ||j@@ ==0) { i=@@ k; k++; j=@@ col; } } }  
c -1
h -1
voidmain() { inta[16],@@ i,j,k,@@ counter@@ ; for(;@@ ;@@ ){ scanf("%d",&a[0]); if(a[0]==-1) break; else{ counter@@ =0; for(i=1;@@ ;i++){ scanf("%d",&a[i]); if(a[i]==0) break; } for(j=0;j<i;j++){ for(k=0;k<@@ i@@ ;k++){ if(a[j]@@ %@@ a[k]@@ ==0&&@@ a[j]@@ /@@ a[k]==@@ 2) counter@@ =@@ counter@@ +1; } } printf("%d\n",@@ counter@@ ); } } }  
c -1
h -1
0

intmain(){ intk,@@ i,j; intn,@@ row,col; int@@ shuzu@@ [@@ mx@@ ][@@ mx@@ ],@@ cc@@ [@@ 1000@@ ]={@@ 99@@ }; int@@ result=0; scanf("%d",&n); for(k=0;k<n;k++){ scanf("%d%d",&row,&col); for(i=0;i<row;i++){ for(j=0;j<col;j++){ scanf("%d",&@@ shuzu@@ [i][j]); } } for(i=0;i<row;i++){ for(j=0;j<col;j++){ if(i@@ ==0){@@ result+=@@ shuzu@@ [i][j]@@ ;} elseif(i==@@ (@@ row-1)@@ ){@@ result+=@@ shuzu@@ [i][j]@@ ;} else{@@ if(j@@ ==0){@@ result+=@@ shuzu@@ [i][j]@@ ;} elseif(@@ j==@@ (@@ col@@ -1)@@ ){@@ result+=@@ shuzu@@ [i][j]@@ ;} } } } cc@@ [k]=@@ result; result=0; } for(k=0;k<n;k++){ printf("%d\n",@@ cc@@ [k]); } return0; }  
c -1
h -1
structstudent { intnum; int@@ yu@@ ; int@@ shu; structstudent*next; }; intn; structstudent*creat@@ (void) { inti; structstudent*head; structstudent*p1,*p2; scanf("%d",&n); p1=p2=(structstudent*)malloc(LEN); scanf("%d%d%d",&p1->num,&p1->@@ yu@@ ,&p1->@@ shu); head=p1; for(i=1;i<=n-1;i++) { p1=(structstudent*)malloc(LEN); scanf("%d%d%d",&p1->num,&p1->@@ yu@@ ,&p1->@@ shu); p2->next=p1; p2=p1; } p2->next=NULL; return(head); } voidmain() { inti,j,@@ k=0; structstudent*head; structstudent*p1,*p2; head=creat(); p1=head; for(j=1;j<=@@ 3;j++) { p1=@@ p2=head; for(i=1;i<=n@@ -j;i++) { if((@@ p1->@@ yu@@ +p1->@@ shu@@ )>@@ k) k=@@ p1->@@ yu@@ +p1->@@ shu; p1=p1->next; } p1=@@ p2=head; if((@@ head->@@ yu@@ +@@ head->@@ shu@@ )==@@ k) { printf("%d%d",@@ p1->@@ num,p1->@@ yu@@ +p1->@@ shu); head=@@ head->next; } else { for(i=1;;i++) { if((@@ p1->@@ yu@@ +p1->@@ shu@@ )==@@ k) { printf("%d%d\n",@@ p1->@@ num,p1->@@ yu@@ +p1->@@ shu); if((@@ p1->next@@ )@@ !=NULL) p2->next=@@ p1->next; else@@ p2->next=NULL; k=0; break; } p2=p1; p1=p1->next; } } } }  
c -1
h -1
0

int@@ alpha@@ [26]={0}; struct@@ library { intnum; char@@ authors@@ [27]; }@@ books@@ [999]; void@@ addauthor@@ (char@@ string@@ []) { inti=0; do {@@ alpha@@ [@@ string@@ [i]@@ -'A']++; i++; } while(@@ string@@ [i]@@ !='\0'@@ ); } void@@ hewroteit@@ (struct@@ library@@ book@@ ,int@@ maxalpha@@ ) { inti; for(i=0;@@ book@@ .@@ authors@@ [i]!='\0';i++) { if(@@ book@@ .@@ authors@@ [i]@@ -'@@ A@@ '==@@ maxalpha@@ ) { printf("%d\n",@@ book@@ .@@ num); break; } } } intmain() { intm; scanf("%d",&m); inti; for(i=0;i<m;i++) scanf("%d%s",&@@ books@@ [i].@@ num,@@ books@@ [i].@@ authors@@ ); for(i=0;i<m;i++) addauthor@@ (@@ books@@ [i].@@ authors@@ ); intmax=0,@@ maxalpha@@ =0; for(i=0;i<26;i++) { if(@@ alpha@@ [i]>max) { max=@@ alpha@@ [i]; maxalpha@@ =i; } } printf("%c\n%d\n",@@ 'A'+@@ maxalpha@@ ,max); for(i=0;i<m;i++) { hewroteit@@ (@@ books@@ [i],@@ maxalpha@@ ); } return0; }  
c -1
h -1
intmain(){ inta[100@@ ],@@ e@@ [100],@@ f@@ [100]; char@@ c@@ [100][100@@ ],b[100@@ ][100],@@ d@@ [100][100],@@ x@@ [100]; intn,@@ p@@ =-1,@@ q@@ =-1,@@ k,@@ z,@@ i; scanf("%d",&n); for(i=0;i<n;i++){ scanf("%s%d",@@ c[i]@@ ,&@@ a[i]); if(a[i]@@ >=60){ p++; e@@ [p@@ ]=a[i]; strcpy(@@ b[p@@ ],@@ c[i]); } if(a[i]@@ <60){ q++; f@@ [q@@ ]=a[i]; strcpy(@@ d[@@ q@@ ],@@ c[i]); } } for(k=1;k<=@@ p@@ +1@@ ;k++){ for(i=0;i<p@@ +1@@ -@@ k;i++){ if(e@@ [i]<@@ e@@ [i+1@@ ]){ z=@@ e@@ [i]; e@@ [i]=@@ e@@ [i+1]; e@@ [i+1]=@@ z; strcpy(@@ x,@@ b[i]); strcpy(@@ b[i]@@ ,@@ b@@ [i+1]); strcpy(@@ b@@ [i+1],@@ x); } } } for(i=0;i<=@@ p@@ ;i++){ puts(@@ b[i]); } for(i=0;i<=@@ q@@ ;i++){ puts(@@ d[i]); } return0; }  
c -1
h -1
0

int@@ qipa@@ (intp@@ ,int@@ q) { inti,@@ l,@@ s=0; if(p@@ ==1)@@ return1; for(i=@@ p@@ ;i@@ >1@@ ;i--) if(p@@ %i==0&&@@ i<=@@ q) s+=@@ qipa@@ (p@@ /i,i); return@@ s; } intmain() { inti,j,n,@@ m,@@ t; scanf("%d",&n); for(i=1;i<=n;i++) { scanf("%d",&m); t=@@ qipa@@ (m,@@ m); printf("%d\n",t); } return0; }  
c -1
h -1
intmain(intargc,char*argv[]) { intn; int@@ histgram@@ [@@ 101]; inti; intx; scanf("%d",&n); for(i=0;i<@@ 101@@ ;i++) { histgram@@ [i]=0; } scanf("%d",&x); histgram@@ [x@@ ]++; printf("%d",x); for(i=0;i<n-1;i++) { scanf("%d",&x); if(!@@ histgram@@ [x@@ ]) { printf("%d",x); } histgram@@ [x@@ ]++; } return0; }  
c -1
h -1
0

intmain(){ intn,m,@@ i,k,@@ num=0,@@ flag=0; double@@ l; chara[501],b[@@ 501],@@ s[@@ 10]; gets(s); k=@@ atoi@@ (@@ s); gets(a); gets(b); n@@ =strlen(a); m@@ =strlen(b); for(i=0;a[i]@@ !='\0';i++){ if((a[i]!='@@ A')&&(@@ a[i]!='@@ T')&&(@@ a[i]!='@@ C')&&(@@ a[i]!='@@ G')){ flag=1; break; } } if((@@ n==@@ m@@ )&&(@@ flag@@ ==0)@@ ){ for(i=0;a[i]@@ !='\0';i++){ if(a[i]==b[i]){ num++; } } l@@ =(double)@@ num@@ /n; if(l@@ >@@ k){ printf("yes"); } else{ printf("no"); } } else{ printf("error"); } return0; }  
c -1
h -1
struct@@ pat { charnum[10]; intage; intx; }@@ p@@ [100],@@ P@@ [100],@@ s; intmain() { intn,i,j,k; scanf("%d",&n); for(i=0;i<n;i++){ scanf("%s%d",@@ p[i].@@ num,&@@ p[i].age); if(p@@ [i].age@@ >=60@@ )@@ p[i].@@ x=@@ p@@ [i].age; else@@ p[i].@@ x=0; } for(i=0;i<n;i++){ s.@@ age@@ =-1; s.@@ x@@ =-1; char@@ k@@ [10]; for(j=0;j<n;j++){ if(s@@ .@@ x@@ <p@@ [j].@@ x){ s=@@ p@@ [j]; strcpy(@@ k,@@ p@@ [j].@@ num); } } P@@ [i]=@@ s; for(j=0;j<n;j++){ if(@@ strcmp@@ (p@@ [j].@@ num,@@ k)@@ ==0){ p@@ [j].@@ x@@ =-@@ 2; break; } } } for(i=0;i<n;i++){ printf("%s\n",@@ P@@ [i].num); } return0; }  
c -1
h -1
0

intmain(){ intn,k,i,@@ a[@@ 2000@@ ],@@ j,@@ sum=0; scanf("%d%d",&n,&k); scanf("%d",&@@ a[1]); for(i=2;i<=@@ n;i++){ scanf("%d",&a[i]@@ );@@ for(j=1;j<i;j++) {if((@@ a[j]@@ +@@ a[i]@@ )==@@ k){@@ sum+=@@ 1@@ ;}} } if(sum@@ ==0)@@ printf("no"); else@@ printf("yes"); return0; }  
c -1
h -1
intmain() { inta,b,c,@@ s=0,@@ d=0; inti; scanf("%d%d%d",&a,&b,&c); if(((@@ a%@@ 4==0)&&(@@ (@@ a%@@ 100@@ )@@ !=0)@@ )||((@@ a%@@ 400@@ )@@ ==0)) { d=1; } for(i=1;i<@@ b;i++) { if((i@@ ==1)@@ ||(@@ i==@@ 3@@ )||(@@ i==@@ 5@@ )||(@@ i==@@ 7@@ )||(@@ i==@@ 8@@ )||(@@ i==@@ 10@@ )||(@@ i==@@ 12@@ )) { s=s+@@ 31; } if((@@ i==@@ 4@@ )||(@@ i==@@ 6@@ )||(@@ i==@@ 9@@ )||(@@ i==@@ 11@@ )) { s=s+@@ 30; } if(i==@@ 2) { if(d@@ ==0) { s=s+@@ 28; } if(d@@ ==1) { s=s+@@ 29; } } } s=s@@ +c; printf("%d",s); return0; }  
c -1
h -1
0

int*@@ order@@ (int*p,int@@ k) { inti,j; intt=0; p=@@ (int*)malloc(@@ k@@ *sizeof(int)); for(i=0;i<k;i++) { scanf("%d",&@@ p[i]); } for(i=k@@ -1;i>=0;i--) { for(j=0;j<i;j++) { if(p@@ [j]>@@ p@@ [j+1]) { t=@@ p@@ [j+1]; p@@ [j+1]=@@ p@@ [j]; p@@ [j]=@@ t; } } } return@@ p; } int*@@ merge@@ (int*p@@ ,int*@@ q@@ ,int@@ m,intn) { inti; int*@@ u@@ =@@ (int*)malloc(@@ (@@ m+@@ n)@@ *sizeof(int)); for(i=0;i<m;i++) { u@@ [i]=@@ p[i]; } for(i=0;i<n;i++) { u@@ [m@@ +i]=@@ q@@ [i]; } return@@ u@@ ; } main() { intm,n; scanf("%d%d",&m,&n); int*@@ a=@@ (int*)malloc(@@ m@@ *sizeof(int)); int*@@ b=@@ (int*)malloc(n*sizeof(int)); a=@@ order@@ (a,m); b=@@ order@@ (b,n); int*p=@@ merge@@ (a,b,m,n); printf("%d",@@ p@@ [0]); for(inti=1;i<@@ m+n;i++) { printf("%d",@@ p[i]); } }  
c -1
h -1
intmain() { inta[@@ 101][@@ 101],@@ n,@@ i,j; int@@ m1,@@ l1,@@ m2@@ ,@@ l2@@ ; intsum; cin>>n; for(i=0;i<n;i++) { for(j=0;j<n;j++) { cin>>*(*(a+i)+j); } } for(i=0;i<n;i++) { for(j=0;j<n;j++) { if(@@ *(*(a+i)@@ +j)@@ ==0&&@@ *(*(a@@ +i@@ -1)@@ +j)@@ !=0&&@@ *(*(a+i)@@ +j@@ -1)@@ !=0) { m1@@ =i; l1@@ =j; } } } for(i=0;i<n;i++) { for(j=0;j<n;j++) { if(@@ *(*(a+i)@@ +j)@@ ==0&&@@ *(*(a@@ +i@@ +1)@@ +j)@@ !=0&&@@ *(*(a+i)@@ +j+1)@@ !=0) { m2@@ =i; l2@@ =j; } } } sum=(@@ m2@@ -@@ m1@@ -1)*(@@ l2@@ -@@ l1@@ -1); cout<<sum<<endl; return0; }  
c -1
h -1
0

intmain() { intt; cin>>t; while(t@@ !=0) { t@@ --; intm,n,i,j,@@ sum=0; cin>>m>>n; intb[100@@ ][100]; int*@@ a[100][100]; for(i=0;i<100;i++) for(j=0;j<@@ 100@@ ;j++) a[i][j]@@ =&@@ b[i]@@ [j]; for(i=0;i<m;i++) for(j=0;j<n;j++) { cin>>@@ *(*(@@ b@@ +i)@@ +j); if(i==0) sum=sum+*@@ *(*(a+i)+j); if(i==@@ m-1) sum=sum+*@@ *(*(a+i)+j); } for(i=1;i<m-1;i++) { sum+=@@ **@@ *(a@@ +i); sum+=@@ **@@ (@@ *(a+i)@@ +n-1); } cout<<sum<<endl; } return0; }  
c -1
h -1
intmain() { inti,@@ h1@@ ,@@ l1,@@ k,@@ h,@@ l,@@ a[100][100],@@ sum@@ [100]; scanf("%d",&k); for(i=1;i<=k;i++) { sum@@ [i]=0; scanf("%d%d",&@@ h@@ ,&@@ l); for(@@ h1@@ =1;@@ h1@@ <=@@ h@@ ;@@ h1@@ ++) for(@@ l1@@ =1;@@ l1@@ <=@@ l@@ ;@@ l1@@ ++) { scanf("%d",&a[@@ h1@@ ][@@ l1@@ ]); } for(@@ h1@@ =1;@@ h1@@ <=@@ h@@ ;@@ h1@@ ++) sum[i]@@ +=@@ a[@@ h1@@ ][1@@ ]+@@ a[@@ h1@@ ][l@@ ]; for(@@ l1@@ =@@ 2;@@ l1@@ <=@@ l@@ -1;@@ l1@@ ++) sum[i]@@ +=@@ a[1@@ ][@@ l1@@ ]+@@ a[h@@ ][@@ l1@@ ]; } for(i=1;i<=k;i++) printf("%d\n",sum@@ [i]); return0; }  
c -1
h -1
1


intmain(intargc,char*argv[]) { inty,m,@@ d; scanf("%d%d%d",&y,&m,&d); if((y%@@ 4==0&&y%100!=0@@ )||@@ y%400==0) { if(m==1) printf("%d",d); if(m==@@ 2) printf("%d",@@ d+@@ 31@@ ); if(m==@@ 3) printf("%d",d@@ +31+29@@ ); if(m==@@ 4) printf("%d",d@@ +31+29@@ +31@@ ); if(m==@@ 5) printf("%d",d@@ +31+29@@ +31+30@@ ); if(m==@@ 6) printf("%d",d@@ +31+29@@ +31+30@@ +31@@ ); if(m==@@ 7) printf("%d",d@@ +31+29@@ +31+30+31+30@@ ); if(m==@@ 8) printf("%d",d@@ +31+29@@ +31+30+31+30@@ +31@@ ); if(m==@@ 9) printf("%d",d@@ +31+29@@ +31+30+31+30+31+@@ 31@@ ); if(m==@@ 10) printf("%d",d@@ +31+29@@ +31+30+31+30+31+31+30@@ ); if(m==@@ 11) printf("%d",d@@ +31+29@@ +31+@@ 31+30@@ +30@@ +31+@@ 31+30@@ +31@@ ); if(m==@@ 12) printf("%d",d@@ +31+29@@ +31+@@ 31+30@@ +30@@ +31+@@ 31+30@@ +31+30@@ ); } else { if(m==1) printf("%d",d); if(m==@@ 2) printf("%d",@@ d+@@ 31@@ ); if(m==@@ 3) printf("%d",d@@ +31+28@@ ); if(m==@@ 4) printf("%d",d@@ +31+28@@ +31@@ ); if(m==@@ 5) printf("%d",d@@ +31+29@@ +30@@ +30@@ ); if(m==@@ 6) printf("%d",d@@ +31+29@@ +31+30@@ +30@@ ); if(m==@@ 7) printf("%d",d@@ +31+29@@ +31+30@@ +30@@ +30@@ ); if(m==@@ 8) printf("%d",d@@ +31+29@@ +31+30+31+30@@ +30@@ ); if(m==@@ 9) printf("%d",d@@ +31+29@@ +31+30+31+30@@ +31+30@@ ); if(m==@@ 10) printf("%d",d@@ +31+29@@ +31+30+31+30+31+31+@@ 29@@ ); if(m==@@ 11) printf("%d",d@@ +31+29@@ +31+@@ 31+30@@ +30@@ +31+@@ 31+30@@ +30@@ ); if(m==@@ 12) printf("%d",d@@ +31+29@@ +31+@@ 31+30@@ +30@@ +31+@@ 31+30@@ +31+29@@ ); } return0; }  
c -1
h -1
intmain() { intnum[@@ 101],@@ ori@@ [@@ 15]; intn,i,@@ count,@@ tot@@ ; scanf("%d",&n); while(n@@ !=-1) { for(i=0;i<@@ 101@@ ;i++)@@ num@@ [i]=0; count=0; while(n@@ !=0) { ori@@ [@@ count@@ ]=@@ n; count++; num[@@ n@@ ]=1; scanf("%d",&n); } tot@@ =0; for(i=0;i<@@ count@@ ;i++) if(@@ ori@@ [i]<=@@ 50@@ &&@@ num[@@ ori@@ [i]@@ *2@@ ])@@ tot@@ ++; printf("%d\n",@@ tot@@ ); scanf("%d",&n); } return0; }  
c -1
h -1
0

intmain(){ intn,k,i,j,@@ a,@@ e,@@ m; intsz[1000]; scanf("%d",&n); scanf("%d",&k); for(i=0;i<n;i++){ scanf("%d",&(sz[i]@@ )); } a=0; for(i=0;i<n-1;i++){ e=@@ sz[i]; for(j=i+1;j<n;j++){ m=@@ sz@@ [j]+@@ e; if(m==@@ k){ a=1; } if(a==1) break; } } if(a@@ ==0){ printf("no"); } if(a@@ ==1){ printf("yes"); } return0; }  
c -1
h -1
main() { inti,j,@@ dmax@@ ,@@ n,@@ array[@@ 32@@ ],@@ d[@@ 32@@ ]={@@ 1,1,1,1,1,1,1,1,@@ 1,1,1,1,1,1,1,1,@@ 1,1,1,1,1,1,1,1,@@ 1,1,1,1,@@ 1,1,@@ 1,@@ 1@@ }; scanf("%d",&n); for(i=0;i<n;i++) { scanf("%d",&array@@ [i]); } d[@@ n-1@@ ]=1; for(i=n-2;i>=0;i--) { for(j=i+1;j<n;j++) { if((@@ array@@ [j]<=@@ array@@ [i]@@ )&&(@@ d@@ [i]<@@ d@@ [j]@@ +1@@ )) { d[i]=@@ d@@ [j]+1; } } } dmax@@ =0; for(i=0;i<n;i++) { if(d@@ [i]>@@ dmax@@ ) { dmax@@ =@@ d[i]; } } printf("%d",@@ dmax@@ ); return0; }  
c -1
h -1
0

intmain(){ intn; int@@ i,j@@ =0; scanf("%d",&n); char@@ **@@ id@@ =(char@@ **@@ )@@ malloc(@@ sizeof(@@ char@@ *)@@ *n); for(i=0;i<n;i++){ id@@ [i]@@ =(char@@ *)malloc(sizeof@@ (char)@@ *@@ 10@@ ); } int@@ p=0; int*@@ year@@ =@@ (int*)malloc(sizeof(int)*n); for(i=0;i<n;i++){ scanf("%s%d",@@ id[i],&@@ year@@ [i]); if(@@ year[i]@@ >=60){ p++; } } char@@ **@@ idolder@@ =(char@@ **@@ )@@ malloc(@@ sizeof(@@ char@@ *)@@ *p@@ ); for(i=0;i<n;i++){ idolder@@ [i]@@ =(char@@ *)malloc(sizeof@@ (char)@@ *@@ 10@@ ); } int*@@ yearolder@@ =@@ (int*)malloc(sizeof(int)@@ *p@@ ); for(i=0;i<n;i++){ if(@@ year[i]@@ >=60){ idolder@@ [j]=@@ id@@ [i]; yearolder@@ [j]=@@ year@@ [i]; j++; } } int@@ e; char*@@ id1@@ =(char@@ *)malloc(sizeof@@ (char)@@ *@@ 10@@ ); for(i=1;i<=@@ p@@ ;i++){ for(j=0;j<@@ p@@ -i;j++){ if(@@ yearolder@@ [j+1@@ ]>@@ yearolder@@ [j]){ id1@@ =@@ idolder@@ [j]; idolder@@ [j]=@@ idolder@@ [j+1]; idolder@@ [j+1]=@@ id1@@ ; e=@@ yearolder@@ [j]; yearolder@@ [j]=@@ yearolder@@ [j+1]; yearolder@@ [j+1]=@@ e; } } } for(i=0;i<p@@ ;i++){ printf("%s\n",@@ idolder@@ [i]); } for(i=0;i<n;i++){ if(@@ year[i]@@ <60){ printf("%s\n",@@ id[i]); } } return0; }  
c -1
h -1
intmain() { inty,m,d,@@ a; scanf("%d%d%d",&y,&m,&d); if(y%@@ 4@@ !=0){ switch(@@ m){ case1:@@ a=@@ d;break; case2:@@ a@@ =31+@@ d;break; case3:@@ a=31+28@@ +d;break; case4:@@ a=31+28@@ +31+@@ d;break; case5:@@ a=31+28@@ +31+30@@ +d;break; case6:@@ a=31+28@@ +31+30+31+@@ d;break; case7:@@ a=31+28@@ +31+30+31+30@@ +d;break; case8:@@ a=31+28@@ +31+30+31+30+31+@@ d;break; case9:@@ a=31+28@@ +31+30+31+30+31+31+@@ d;break; case10:@@ a=31+28@@ +31+30+31+30+31+31+30@@ +d;break; case11:@@ a=31+28@@ +31+30+31+30+31+31+30+31+@@ d;break; case12:@@ a=31+28@@ +31+30+31+30+31+31+30+31+30@@ +d;break; } printf("%d",@@ a); } elseif(@@ y%@@ 400@@ ==0){ switch(@@ m){ case1:@@ a=@@ d;break; case2:@@ a@@ =31+@@ d;break; case3:@@ a=31+29@@ +d;break; case4:@@ a=31+29@@ +31+@@ d;break; case5:@@ a=31+29@@ +31+30@@ +d;break; case6:@@ a=31+29@@ +31+30+31+@@ d;break; case7:@@ a=31+29@@ +31+30+31+30@@ +d;break; case8:@@ a=31+29@@ +31+30+31+30+31+@@ d;break; case9:@@ a=31+29@@ +31+30+31+30+31+31+@@ d;break; case10:@@ a=31+29@@ +31+30+31+30+31+31+30@@ +d;break; case11:@@ a=31+29@@ +31+30+31+30+31+31+30+31+@@ d;break; case12:@@ a=31+29@@ +31+30+31+30+31+31+30+31+30@@ +d;break; } printf("%d",@@ a); } elseif(@@ y%@@ 4==0&&@@ y%@@ 100==0&&@@ y%@@ 400@@ !=0){ switch(@@ m){ case1:@@ a=@@ d;break; case2:@@ a@@ =31+@@ d;break; case3:@@ a=31+28@@ +d;break; case4:@@ a=31+28@@ +31+@@ d;break; case5:@@ a=31+28@@ +31+30@@ +d;break; case6:@@ a=31+28@@ +31+30+31+@@ d;break; case7:@@ a=31+28@@ +31+30+31+30@@ +d;break; case8:@@ a=31+28@@ +31+30+31+30+31+@@ d;break; case9:@@ a=31+28@@ +31+30+31+30+31+31+@@ d;break; case10:@@ a=31+28@@ +31+30+31+30+31+31+30@@ +d;break; case11:@@ a=31+28@@ +31+30+31+30+31+31+30+31+@@ d;break; case12:@@ a=31+28@@ +31+30+31+30+31+31+30+31+30@@ +d;break; } printf("%d",@@ a); } elseif(@@ y%@@ 4==0&&y%100!=0@@ ){ switch(@@ m){ case1:@@ a=@@ d;break; case2:@@ a@@ =31+@@ d;break; case3:@@ a=31+29@@ +d;break; case4:@@ a=31+29@@ +31+@@ d;break; case5:@@ a=31+29@@ +31+30@@ +d;break; case6:@@ a=31+29@@ +31+30+31+@@ d;break; case7:@@ a=31+29@@ +31+30+31+30@@ +d;break; case8:@@ a=31+29@@ +31+30+31+30+31+@@ d;break; case9:@@ a=31+29@@ +31+30+31+30+31+31+@@ d;break; case10:@@ a=31+29@@ +31+30+31+30+31+31+30@@ +d;break; case11:@@ a=31+29@@ +31+30+31+30+31+31+30+31+@@ d;break; case12:@@ a=31+29@@ +31+30+31+30+31+31+30+31+30@@ +d;break; } printf("%d",@@ a); } return0; }  
c -1
h -1
0

intmain(){ intn,m,@@ i,j,@@ a[100][100],@@ x=0,@@ y=0,@@ k=0,@@ l=0; scanf("%d%d",&n,&m); for(i=0;i<n;i++) for(j=0;j<m;j++) scanf("%d",&a[i][j]); for(;@@ ;@@ ){ printf("%d\n",@@ a[x@@ ][y@@ ]); if(x==@@ n-1@@ &&@@ y@@ ==@@ m@@ -1)break; if(y@@ ==0||@@ x@@ ==@@ n-1){ if(l@@ ==@@ m-1)@@ k++; else@@ l++; x=@@ k;@@ y=@@ l; continue; } x@@ ++;@@ y@@ --; } }  
c -1
h -1
main() { inta[@@ L@@ ]={0},b[@@ L@@ ]={0}; inti,j,k,@@ max,@@ t; scanf("%d",&k); for(i=k@@ ;i>=1;i--) scanf("%d",&a[i]); b[1@@ ]=1; for(i=2;i<=@@ k;i++) { max=0; for(j=1;j<i;j++) { if(a[j]<=@@ a[i]&&@@ b[j]@@ >max) { max=@@ b[j]; } } b[i]=@@ max+1; } t=0; for(i=1;i<=k;i++) { if(b[i]@@ >=@@ t) t=b[i]; } for(i=1;i<=k;i++) { if(b[i]==@@ t) printf("%d",b[i]); } }  
c -1
h -1
0

voidmain() { inti,j,n,@@ m,@@ a[100][100],@@ l; scanf("%d%d",&n,&m); for(i=0;i<100;i++) for(j=0;j<@@ 100@@ ;j++)@@ a[i][j]@@ =0; for(i=0;i<n;i++) for(j=0;j<m@@ ;j++)@@ scanf("%d",&a[i][j]); l=@@ n+@@ m; for(i=0;i<=@@ l@@ ;i++) { for(j=0;j<=i;j++) { if(j@@ <n@@ &&(@@ i@@ -j@@ )@@ <@@ m) printf("%d\n",@@ a[j][i-j@@ ]); } } }  
c -1
h -1
int@@ x1@@ =0,@@ x2@@ =0; int@@ y1@@ =0,@@ y2@@ =0; int@@ tag@@ =0; intsum=0; intmain() { intn,i,j; inta[100][100]; cin>>n; for(i=0;i<n;i++) for(j=0;j<n;j++) cin>>a[i][j]; for(i=0;i<n;i++) { for(j=0;j<n;j++) { if(a[i][j]==0) { x1@@ =j@@ ;@@ y1@@ =i; while(@@ !@@ a[@@ y1@@ ]@@ [j]) j++; x2@@ =j@@ -1; while(@@ !@@ a[i][@@ x1@@ ]) i++; y2@@ =i-1; tag@@ =1; break; } } if(tag@@ )break; } if(!@@ tag@@ ) { cout<<@@ 0@@ <<endl; return0; } sum=(@@ x2-x1-1)*(y2-y1-1); cout<<sum<<endl; return0; }  
c -1
h -1
0

intmain() { intm,@@ i,j,k,@@ q=0,@@ t=0,@@ u@@ ,@@ max; intb[@@ 26]={0}; charc[@@ ]@@ ="@@ ABCDEFGHIJKLMNOPQRSTUVWXYZ@@ "; struct@@ as@@ { int@@ sh@@ ; chara[@@ 26]; }@@ cla@@ [1000]; scanf("%d",&m); for(i=0;i<m;i++){ scanf("%d%s",&@@ cla@@ [i].@@ sh@@ ,@@ cla@@ [i].@@ a); t=@@ (int)@@ strlen(@@ cla@@ [i].@@ a); for(k=0;k<@@ t@@ ;k++){ u@@ =@@ cla@@ [i].@@ a[k]@@ -'A'; b[@@ u@@ ]++; } } max=0; for(j=0;j<@@ 25@@ ;j++) if(max<@@ b[j]@@ ){ max=@@ b[j]; q@@ =j; } printf("%c\n",@@ c[@@ q@@ ]); printf("%d\n",max); for(i=0;i<m;i++){ t=@@ (int)@@ strlen(@@ cla@@ [i].@@ a); for(k=0;k<@@ t@@ ;k++) if(@@ cla@@ [i].@@ a[k]==@@ c[@@ q@@ ]) printf("%d\n",@@ cla@@ [i].@@ sh@@ ); } return0; }  
c -1
h -1
intmain() { intn,k,i,@@ a[1000],@@ c=0,@@ s; scanf("%d",&n); scanf("%d",&k); for(i=0;i<n;i++) { scanf("%d",&a[i]); } for(i=@@ c@@ ;i<n;i++) { s=@@ a[c@@ ]+@@ a[i]; if(s@@ ==k) { printf("yes"); break; } if(i==@@ n-1) { c=c@@ +1; i=@@ c; } if(c==@@ n-1) { printf("no"); break; } } return0; }  
c -1
h -1
0

intmain() { inta[16@@ ],i,j,@@ num,@@ h; while(cin>>@@ a[0]) { while(@@ a[0]@@ !=-1) { for(i=1;i<@@ 16@@ ;i++) { cin>>a[i]; if(a[i]==0)break; h@@ =i; } num=0; for(i=0;i<=@@ h@@ ;i++) for(j=0;j<=@@ h@@ ;j++) if(a[i]==2*@@ a[j]) num++; cout<<num@@ <<endl@@ ;break; } continue; } return0; }  
c -1
h -1
structstudent { intnum; intchi; intmath; }; intmain() { intn,i,@@ e=0,@@ f@@ =0,@@ g@@ =0,@@ a=0,b=0,@@ c=0; scanf("%d",&n); structstudent*@@ stu@@ =(structstudent@@ *)malloc(sizeof(int)@@ *3@@ *n); int*@@ sz@@ =@@ (int*)malloc(sizeof(int)*n); for(i=0;i<n;i++) { scanf("%d%d%d",&stu[i].num,&stu[i].@@ chi@@ ,&stu[i].math); sz@@ [i]=@@ stu[i].@@ chi@@ +stu[i].@@ math; } for(i=0;i<n;i++) { if(sz[i]@@ >@@ sz[a@@ ]) { a=i; e=@@ stu[i].@@ num; } } printf("%d%d\n",@@ e,@@ sz[a@@ ]); for(i=0;i<n;i++) { if(i==@@ a) { continue; } if(sz[i]@@ >@@ sz[@@ b@@ ]) { b=i; f@@ =stu[i].@@ num; } } printf("%d%d\n",@@ f,@@ sz[@@ b@@ ]); for(i=0;i<n;i++) { if(i==@@ a@@ ||i==@@ b) { continue; } if(sz[i]@@ >@@ sz[@@ c@@ ]) { c=i; g@@ =stu[i].@@ num; } } printf("%d%d",@@ g,@@ sz[@@ c@@ ]); free(@@ sz@@ ); return0; }  
c -1
h -1
0

structpatient { charID[10]; intage; structpatient*next; }; structpatient*@@ insert@@ (structpatient@@ *head,@@ structpatient*@@ another@@ ) { structpatient*@@ p0@@ ,*@@ p1,*p2; p1=head; p0@@ =@@ another@@ ; if(@@ p0@@ ->age@@ <60) { while(@@ p1->next@@ !=NULL) { p2=p1; p1=p1->next; } p1->next=@@ p0; p0@@ ->next=NULL; } else { while(@@ p1->age@@ >=@@ p0@@ ->age@@ &&@@ p1->next@@ !=NULL) { p2=p1; p1=p1->next; } if(p1->age@@ >=@@ p0@@ ->age@@ ) { p1->next=@@ p0; p0@@ ->next=NULL; } else { if(@@ p1@@ ==@@ head@@ ) { head=@@ p0; p0->next@@ =p1; } else { p2->next=@@ p0; p0->next@@ =p1; } } } returnhead; } voidprint@@ (structpatient@@ *head) { structpatient@@ *p; p=head; while(p!=NULL) { printf("%s\n",p->@@ ID); p=p->next; } } voidmain() { intn,i; structpatient@@ *head,*p; scanf("%d",&n); head=@@ p=@@ (structpatient@@ *)malloc(len); scanf("%s%d",@@ p->@@ ID,&@@ p->@@ age); head@@ ->next=NULL; for(i=1;i<n;i++) { p=@@ (structpatient@@ *)malloc(len); scanf("%s%d",@@ p->@@ ID,&@@ p->@@ age); head=@@ insert@@ (head,@@ p); } print(head); }  
c -1
h -1
intmain(intargc,char*argv[]) { intyear,month,day,@@ x; scanf("%d%d%d",&year,&month,&day); if((year%4==0&&year%100!=0)||(year%400==0)) { if(month==1) x=@@ day; elseif(month==@@ 2) x=31+@@ day; elseif(month==@@ 3) x=31+29@@ +day; elseif(month==@@ 4) x=31+29@@ +31+@@ day; elseif(month==@@ 5) x=31+29@@ +31+30+day; elseif(month==@@ 6) x=31+29@@ +31+30+31+@@ day; elseif(month==@@ 7) x=31+29@@ +31+30+31+30@@ +day; elseif(month==@@ 8) x=31+29@@ +31+30+31+30+31+@@ day; elseif(month==@@ 9) x=31+29@@ +31+30+31+30+31+31+@@ day; elseif(month==@@ 10) x=31+29@@ +31+30+31+@@ 31+30@@ +31+30+day; elseif(month==@@ 11) x=31+29@@ +31+30+31+30+31+31+30+31+@@ day; elseif(month==@@ 12) x=31+29@@ +30@@ +30@@ +31+30+31+@@ 31+30@@ +31+30+day; } else { if(month==1) x=@@ day; elseif(month==@@ 2) x=31+@@ day; elseif(month==@@ 3) x=31+28@@ +day; elseif(month==@@ 4) x=31+28@@ +31+@@ day; elseif(month==@@ 5) x=31+28@@ +31+30+day; elseif(month==@@ 6) x=31+28@@ +31+30+31+@@ day; elseif(month==@@ 7) x=31+28@@ +31+30+31+30@@ +day; elseif(month==@@ 8) x=31+28@@ +31+30+31+30+31+@@ day; elseif(month==@@ 9) x=31+28@@ +31+30+31+30+31+31+@@ day; elseif(month==@@ 10) x=31+28@@ +31+30+31+@@ 31+30@@ +31+30+day; elseif(month==@@ 11) x=31+28@@ +31+30+31+30+31+31+30+31+@@ day; elseif(month==@@ 12) x=31+28@@ +30@@ +30@@ +31+30+31+@@ 31+30@@ +31+30+day; } printf("%d\n",x); return0; }  
c -1
h -1
0

main() {@@ intm,n; int@@ input@@ (inta,int@@ b); scanf("%d%d",&m,&n); input@@ (@@ m,n); } int@@ input@@ (inta,intb) { intc[@@ 1000],@@ d[@@ 1000]; for(inti=0;i<@@ a;i++) scanf("%d",&@@ c[i]); for(intj=0;j<@@ b;j++) scanf("%d",&@@ d@@ [j]); int@@ sort@@ (int@@ e@@ [],int@@ s); sort(@@ c,@@ a); printf(""); sort(@@ d,@@ b); } int@@ sort@@ (int@@ e@@ [],int@@ s) { inttemp; for(int@@ r=0;r@@ <@@ s@@ -1;@@ r++) for(int@@ q=@@ r@@ +1@@ ;q@@ <@@ s@@ ;q++) { if(e@@ [r@@ ]>@@ e@@ [q@@ ]) { temp=@@ e@@ [r@@ ]; e@@ [r@@ ]=@@ e@@ [q@@ ]; e@@ [q@@ ]=temp; } } for(intp@@ =0;p@@ <@@ s@@ -1@@ ;p++) printf("%d",@@ e@@ [p@@ ]); printf("%d",@@ e@@ [s@@ -1]); }  
c -1
h -1
structstudent { intnum; float@@ yuwen; float@@ shuxue; float@@ zongfen; }stu[@@ student_num@@ ],*@@ p@@ [3]; voidmain() { voidpaixu@@ (@@ structstudent*@@ a,int@@ n); inti,n; scanf("%d",&n); for(i=0;i<n;i++) { scanf("%d@@ %@@ f@@ %@@ f",&@@ stu[i].@@ num,&stu[i].@@ yuwen@@ ,&stu[i].@@ shuxue); stu[i].@@ zongfen@@ =stu[i].@@ yuwen+stu[i].@@ shuxue; } paixu@@ (stu@@ ,n); for(i=0;i<@@ 3@@ ;i++)@@ printf("%d@@ %@@ .@@ 0f@@ \n",@@ p[i]@@ ->num,@@ p[i]@@ ->@@ zongfen@@ ); } voidpaixu@@ (@@ structstudent*@@ a,int@@ n) { inti,j; float@@ x@@ [3]; for(i=0;i<3;i++) { for(j=1@@ ,@@ p[i]=@@ a@@ ;j<@@ n@@ ;j++)@@ if(p@@ [i]@@ ->@@ zongfen@@ <@@ (a@@ +j)@@ ->@@ zongfen@@ )@@ p[i]=@@ a@@ +j@@ ; x@@ [i]=@@ p[i]@@ ->@@ zongfen; p[i]@@ ->@@ zongfen@@ =0; } for(i=0;i<@@ 3@@ ;i++)@@ p[i]@@ ->@@ zongfen@@ =@@ x[i]; }  
c -1
h -1
0

intmain() { inty,m,d,@@ s; scanf("%d%d%d",&y,&m,&d); if(m==1) { s=@@ d; } elseif(m==@@ 2) { s=@@ d+@@ 31; } elseif(m==@@ 3) { s=@@ d+@@ 59@@ ; } elseif(m==@@ 4) { s=@@ d+@@ 90@@ ; } elseif(m==@@ 5) { s=@@ d+@@ 120@@ ; } elseif(m==@@ 6) { s=@@ d+@@ 151@@ ; } elseif(m==@@ 7) { s=@@ d+@@ 181@@ ; } elseif(m==@@ 8) { s=@@ d+@@ 212@@ ; } elseif(m==@@ 9) { s=@@ d+@@ 243@@ ; } elseif(m==@@ 10) { s=@@ d+@@ 273@@ ; } elseif(m==@@ 11) { s=@@ d+@@ 304@@ ; } else { s=@@ d+@@ 334@@ ; } if(!@@ ((@@ y%@@ 400==0)||(@@ y%100!=0@@ &&@@ y%@@ 4@@ ==0)@@ )) { printf("%d",s); } else { if(m@@ <@@ 3) { printf("%d",s); } else { printf("%d",@@ s@@ +1); } } return0; }  
c -1
h -1
structstudent { intnumber; int@@ ch; int@@ ma; intsum; int@@ key@@ ; }stu[100000]; voidmain() { intn,i,@@ max=0,@@ l=0; scanf("%d",&n); for(i=0;i<n;i++) { scanf("%d%d%d",&stu[i].@@ number@@ ,&stu[i].@@ ch@@ ,&stu[i].@@ ma@@ ); stu[i].sum=stu[i].@@ ch@@ +stu[i].@@ ma; stu[i].@@ key@@ =0; } for(i=0;i<n;i++) if(max<@@ stu[i].@@ sum@@ &&stu[i].@@ key@@ ==0) { max=@@ stu[i].@@ sum; l@@ =i; } printf("%d%d\n",@@ l@@ +1,@@ max); max=0; stu[@@ l@@ ].@@ key@@ =1; l=0; for(i=0;i<n;i++) if(max<@@ stu[i].@@ sum@@ &&stu[i].@@ key@@ ==0) { max=@@ stu[i].@@ sum; l@@ =i; } printf("%d%d\n",@@ l@@ +1,@@ max); max=0; stu[@@ l@@ ].@@ key@@ =1; l=0; for(i=0;i<n;i++) if(max<@@ stu[i].@@ sum@@ &&stu[i].@@ key@@ ==0) { max=@@ stu[i].@@ sum; l@@ =i; } printf("%d%d\n",@@ l@@ +1,@@ max); max=0; stu[@@ l@@ ].@@ key@@ =1; l=0; }  
c -1
h -1
0

intmain() { chara[501],b[501]; int@@ i,j@@ =0; double@@ x,y,@@ z; scanf("%lf",&x); scanf("%s",a); scanf("%s",b); y@@ =strlen(b); for(i=0;a[i]!='\0';i++) { if(strlen(a)!=strlen(b@@ )) { printf("error"); break; } if((a[i]!='@@ A'&&a[i]!='T'&&a[i]!='C'&&a[i]!='G')||(b[i]!='A'&&b[i]!='T'&&b[i]!='C'&&b[i]!='@@ G')) { printf("error"); break; } if(a[i]==b[i]) { j++; } if(a@@ [i+1@@ ]==@@ '\0') { z@@ =j@@ /@@ y; if(z@@ >@@ x@@ ){@@ printf("yes");@@ }@@ else{printf("no");} } } return0; }  
c -1
h -1
structstudent { intnum; int@@ yw@@ ; int@@ sx; }; intmain() { intn,i,@@ x=0,@@ y=0,@@ z=0; scanf("%d",&n); structstudent@@ a[@@ n]; intb[@@ n]; for(i=0;i<n;i++) { scanf("%d%d%d",&a[i].@@ num,&@@ a[i].@@ yw@@ ,&a[i].@@ sx@@ ); b[i]=@@ a[i].@@ yw@@ +a[i].@@ sx; } for(i=1;i<n;i++) { if(b[@@ x@@ ]<@@ b[i]) x@@ =i; } printf("%d%d\n",@@ a[x@@ ].num,@@ b[@@ x@@ ]); for(i=1;i<n;i++) { if(i==@@ x)@@ continue; if(b[@@ y@@ ]<@@ b[i]) y@@ =i; } printf("%d%d\n",@@ a[@@ y@@ ].num,@@ b[@@ y@@ ]); for(i=1;i<n;i++) { if(i==@@ x)@@ continue; if(i==@@ y)@@ continue; if(b[@@ z@@ ]<@@ b[i]) z@@ =i; } printf("%d%d\n",@@ a[@@ z@@ ].num,@@ b[@@ z@@ ]); getchar(); getchar(); }  
c -1
h -1
0

intmain() { chars[@@ 300],@@ w@@ [300],@@ r@@ [300],@@ d[@@ 300]; inti,j,@@ l,@@ h; scanf("%s%s%s",@@ s,@@ w,@@ r); l@@ =strlen(s); h@@ =strlen(@@ w); for(i=0;i<=@@ l@@ -@@ h@@ ;i++) { for(j=0;j<@@ h@@ ;j++) { d@@ [j]=@@ s[i+j@@ ]; } d[@@ h@@ ]='\0'; if(strcmp(@@ d,@@ w@@ )@@ ==0)break; } if(i==@@ l@@ -@@ h@@ +1)@@ printf("%s",s); else { for(j=i;j<i+@@ h@@ ;j++) { s[j]=@@ r@@ [j-i@@ ]; } printf("%s",s); } return0; }  
c -1
h -1
intmain() { charstr[256],@@ a[@@ 256],b[@@ 256],c[256]; inti,j,@@ t=0; scanf("%s%s%s",@@ str,@@ a,b); for(i=0;i<strlen(@@ str@@ );i++) { for(j=0;j<@@ strlen(a)@@ ;j++) c[j]=@@ str@@ [i+j@@ ]; c[j]@@ ='\0'; if(strcmp(@@ c,@@ a)@@ ==0) { t=1; break; } } if(t@@ ==1) { for(j=0;j<i;j++) printf("%c",str@@ [j]); for(j=0;j<strlen(@@ b@@ );j++) printf("%c",@@ b[j]); for(j=i@@ +@@ strlen(@@ a);@@ str@@ [j]@@ !=0;j++) printf("%c",str@@ [j]); } else printf("%s",str); return0; }  
c -1
h -1
1


intmain(){ chara[@@ 30000@@ ],b[100],@@ c[100]; gets(a); int@@ lenth@@ ,@@ y@@ =1@@ ,j,@@ i,@@ m,@@ num,@@ tag@@ =0; lenth@@ =strlen(a); gets(b); m@@ =strlen(b); gets(c); for(i=0;i<@@ lenth@@ ;i@@ +=@@ y){ y=1; num=0; if(tag@@ ==0){ for(j=0;j<m;j++){ if(a@@ [i+j]==@@ b[@@ 0@@ +j@@ ]){ num++; } } if(num@@ ==@@ m){ printf("%s",@@ c); y=@@ m; tag@@ =1; } else{ printf("%c",a[i]); } } else { printf("%c",a[i]); } } return0; }  
c -1
h -1
intmain() { inta[@@ 1001@@ ][@@ 1001]; intn,i,j,k,@@ s=0; scanf("%d",&n); for(i=1;i<=n;i++) { for(j=1;j<=n;j++) { scanf("%d",&a[i][j]); } } for(i=1;i<=n;i++) { for(j=1;j<=@@ n-2@@ ;j++) { if(a[i][j]==0) { for(k=j+1@@ ;k<=@@ n;k++) { if(a[i]@@ [k]@@ ==0) { s=s+@@ (k@@ -j@@ -1); break; } } } } } printf("%d",s); return0; }  
c -1
h -1
0

int@@ divide@@ (intn,int@@ a){ int@@ s=0,@@ t=0,@@ i; if(n@@ ==1)@@ return1; for(i=a@@ ;i@@ >1@@ ;i--) if(n@@ %i==0){ s+=@@ divide@@ (n/i,i); t++; } if(t@@ ==0)@@ return0; return@@ s; } intmain(){ intn,k; cin>>k; while(k@@ >0){ cin>>n; cout<<@@ divide@@ (n,@@ n@@ )<<endl; k--; } return0; }  
c -1
h -1
main() { inta[@@ 15@@ ][@@ 15],@@ i=0,j=0,@@ s=0,@@ m=0,@@ h@@ =0,@@ g@@ [@@ ]={0@@ ,@@ 0,0,0,0,0,0,0,0,@@ 0,0,0,0,0,0,0,0,@@ 0,0,@@ 0},@@ b[@@ 15]; while(1) { scanf("%d",&a[i][j]); if(a[i][j]==0) { b[i]@@ =j; i=i+1; j=0; } else@@ if(a[i][j]==@@ -1) { break; } else@@ j=j+1; } for(s=0;s@@ <i@@ ;s++) { for(m=0;m<@@ b[@@ s@@ ]@@ ;m++) { for(h=0;h@@ <@@ b[@@ s@@ ];@@ h++) { if(a[@@ s@@ ][m@@ ]==2*@@ a[@@ s@@ ][@@ h@@ ]) { g@@ [s@@ ]=@@ g@@ [s@@ ]+1; } } } } for(s=0;s@@ <i@@ ;s++) { printf("%d\n",@@ g@@ [s@@ ]); } return0; }  
c -1
h -1
0

intmain() { intn,@@ age@@ [100],@@ i,j; charid@@ [100][10]; scanf("%d",&n); intk=0; char@@ shuchu@@ [100][10]; for(i=0;i<n;i++) { scanf("%s%d",@@ id[i],&@@ age[i]); if(age[i]@@ <60) strcpy(@@ shuchu@@ [k@@ ++@@ ],@@ id[i]); } char@@ mid@@ [100][10]; intt; for(i=0;i<n-1;i++) { for(j=0;j<n-1-i;j++) { if(age@@ [j]<@@ age@@ [j+1]) { t=@@ age@@ [j]; age@@ [j]=@@ age@@ [j+1]; age@@ [j+1]=t; strcpy(@@ mid@@ [j],@@ id@@ [j]); strcpy(id@@ [j],@@ id@@ [j+1]); strcpy(id@@ [j+1],@@ mid@@ [j]); } } } if(age@@ [0]@@ <60) goto@@ E@@ ; else { for(i=0;@@ age@@ [i]@@ >=60@@ ;i++) printf("%s\n",@@ id[i]); } E@@ :@@ ; for(i=0;i<k;i++) printf("%s\n",@@ shuchu@@ [i]); return0; }  
c -1
h -1
intmain() { inty,m,d,@@ dd@@ =0,@@ i; scanf("%d%d%d",&y,&m,&d); if((y%@@ 4==0)&&(@@ y%100!=0@@ )||(y%@@ 400==0)) { for(i=1;i<m;i++) { switch(@@ i) { case1: case3: case5: case7: case8: case10: dd@@ +=@@ 31; break; case2: dd@@ +=@@ 29; break; case4: case6: case9: case11: dd@@ +=@@ 30; break; } } dd@@ =@@ dd@@ +d; printf("%d",@@ dd@@ ); } else { for(i=1;i<m;i++) { switch(@@ i) { case1: case3: case5: case7: case8: case10: dd@@ +=@@ 31; break; case2: dd@@ +=@@ 28; break; case4: case6: case9: case11: dd@@ +=@@ 30; break; } } dd@@ =@@ dd@@ +d; printf("%d",@@ dd@@ ); } return0; }  
c -1
h -1
0

intmain() { inta[@@ 20000],@@ i,j,k,@@ n,@@ count=0; cin>>n; for(i=0;i<n;i++) { cin>>a[i]; } for(i=1@@ ,k@@ =1@@ ;i<n;i++) { for(j=0;j<i;j++) { if(a[j]==@@ a[i]@@ )break; } if(j==i) { a[k]=@@ a[i]; k++; count++; } } cout<<a[0]; for(k=1;k<=@@ count@@ ;k++) cout<<""<<@@ a[k]; return0; }  
c -1
h -1
intmain() { inti=0,@@ s,@@ n; intl,@@ r; scanf("%d",&n); if(n@@ <=@@ 10) { int@@ cancel@@ [10@@ ][10]; for(l=0;l<n;l++) { for(r=0;r@@ <n;@@ r++) { scanf("%d",&@@ cancel@@ [l@@ ][@@ r@@ ]); } } int@@ r1@@ ,@@ r2@@ ,@@ l1,l2@@ ; for(i=0,@@ l@@ =0;@@ l@@ <n;@@ l++) { for(i=0,@@ r=0;r@@ <n;@@ r++) { if(@@ cancel@@ [l@@ ][@@ r@@ ]==0) { l1@@ =@@ l; r1@@ =@@ r; i=1; break; } } if(i==1) { break; } } for(l=0;l<n;l++) { for(r=0;r@@ <n;@@ r++) { if(@@ cancel@@ [l@@ ][@@ r@@ ]==0) { l2@@ =@@ l; r2@@ =@@ r; } } } s=(@@ l2@@ -@@ l1@@ -1)*(@@ r2@@ -@@ r1@@ -1); printf("%d",s); } return0; }  
c -1
h -1
0

intmain(){ intn,k,@@ p=0; scanf("%d%d",&n,&k); inta[n]; for(inti=0;i<n;i++) scanf("%d",&a[i]); for(intj=0;j<n;j++){ for(int@@ s@@ =j+1@@ ;s@@ <n;@@ s++) if(a[@@ s@@ ]==@@ k-@@ a[j])@@ p=1; } if(p@@ ==1)@@ printf("yes"); elseprintf("no"); return0; }  
c -1
h -1
intmain() { intn,k,@@ h,@@ g,@@ m,@@ i,j; intmax@@ [100]; chars@@ [100][10]; struct { char@@ d@@ [10]; inta; }@@ p@@ [100]; scanf("%d",&n); for(i=0;i<n;i++) { scanf("%s%d",@@ p[i].@@ d@@ ,&@@ p[i].@@ a); } m=0; for(i=0;i<n;i++) { if(p@@ [i].@@ a@@ >=60) { m++; } } k=@@ m; for(i=0;i<n;i++) { if(p@@ [i].@@ a@@ <60) { strcpy(@@ s@@ [k],@@ p[i].@@ d); k=k+1; } } g=0; for(j=0;j<m;j++) { max@@ [j]=@@ 59@@ ; for(i=0;i<n;i++) { if(p@@ [i].@@ a@@ >max@@ [j]) { max@@ [j]=@@ p[i].@@ a; h@@ =i; } } p[@@ h@@ ].@@ a=@@ 59@@ ; strcpy(@@ s[@@ g@@ ],@@ p[@@ h@@ ].@@ d); g@@ ++; } for(i=0;i<n;i++) { printf("%s\n",@@ s[i]); } return0; }  
c -1
h -1
0

intmain() { charstr@@ [300@@ ]={@@ "\@@ 0@@ "@@ }; char@@ sub@@ [300@@ ]={@@ "\@@ 0@@ "@@ }; char@@ re@@ [300@@ ]={@@ "\@@ 0@@ "@@ }; char@@ t@@ [300]; char@@ pre@@ [300@@ ]={@@ "\@@ 0@@ "@@ }; char@@ post@@ [300@@ ]={@@ "\@@ 0@@ "@@ }; gets(str); gets(sub); gets(@@ re); inti,j,k; for(i=0;i<strlen(@@ str@@ );i++) { if(str[i]==@@ sub@@ [0]) { for(j=0;j<@@ 299@@ ;j++)@@ t@@ [j]@@ ='\0'; for(j=0;j<strlen(@@ sub)@@ ;j++)@@ t@@ [j]=@@ str@@ [i+j@@ ]; if(strcmp(@@ t,@@ sub)@@ ==0) { for(j=0;j<@@ i@@ ;j++)@@ pre@@ [j]=@@ str@@ [j]; for(j=i@@ +@@ strlen(@@ sub)@@ ;j<@@ strlen(@@ str@@ )@@ ;j++)@@ post@@ [j-i@@ -strlen(@@ sub)@@ ]=@@ str@@ [j]; printf("%s@@ %s@@ %s@@ \n",@@ pre@@ ,@@ re@@ ,@@ post@@ ); return0; } } } printf("%s\n",@@ str); return0; }  
c -1
h -1
structstudent {@@ long@@ num; intmath; intchinese; intsum; structstudent*next; }; long@@ n; structstudent*creat@@ (void) {@@ structstudent*head; structstudent*p1,*p2; inti=1; scanf("%ld",&n); p1=p2=(structstudent*)malloc(LEN); scanf("%ld%d%d",&@@ p1->num,&p1->@@ math@@ ,&p1->@@ chinese); p2->@@ sum=@@ p2->@@ chinese+@@ p2->@@ math; while(i<=@@ n) { if(i@@ ==1)head=p1; else {@@ p1=(structstudent*)malloc(LEN); scanf("%ld%d%d",&@@ p1->num,&p1->@@ math@@ ,&p1->@@ chinese); p1->sum=p1->@@ chinese+@@ p1->@@ math; p2->next=p1; p2@@ =p1;} i++; } p2->next@@ =0; returnhead; } structstudent*@@ del@@ (structstudent*head@@ ,int@@ max) { structstudent*p1,*p2; p1=head; while(@@ p1->@@ sum@@ !=@@ max@@ &&@@ p1->next@@ !=0) { p2@@ =p1;@@ p1=p1->next; } if(p1->@@ sum@@ ==@@ max) { if(@@ p1@@ ==@@ head@@ )@@ head=@@ p1->next; else@@ p2->next=@@ p1->next; n=@@ n-1; } return(head); } voidprint@@ (structstudent*head@@ ) { structstudent*p1,*p2; inti,@@ max,@@ num; max=@@ head->@@ sum; p1=head; p2=p1->next; for(i=1;i<=@@ 3;i++) { while(@@ p1->next@@ !=0) { if((@@ p2->@@ sum@@ )@@ >max){max=@@ p2->@@ sum;@@ num=@@ p2->@@ num@@ ;} p1=p2@@ ; p2=p1->next; } printf("%ld%d\n",@@ num,@@ max); head=@@ del@@ (@@ head@@ ,max); p1=head; p2=p1->next; max=@@ p1->@@ sum; } } main() { structstudent*head; head=creat(); print(head); }  
c -1
h -1
0

voidmain() { intn,m,@@ i; int@@ *p,*@@ q; q=@@ (int*)@@ calloc@@ (@@ 10001@@ ,@@ sizeof(int@@ )); scanf("%d%d",&n,&m); for(p=@@ q@@ ;p<@@ q@@ +@@ n*@@ m@@ ;p++) { scanf("%d",@@ p); } if(m==1) { for(p=@@ q@@ ;p<@@ q@@ +@@ n*@@ m@@ ;p++) printf("%d\n",@@ *p@@ ); } else { for(i=0;i<m;i++) { for(p=@@ q@@ +i@@ ;@@ (p@@ <=@@ q@@ +i@@ +@@ (m@@ -1)*@@ i@@ )&&(@@ p@@ <@@ q@@ +@@ n*@@ m@@ );@@ p=p@@ +m@@ -1) { printf("%d\n",@@ *p@@ ); } } for(i=2;i<=n;i++) { for(p=@@ q@@ +m@@ *@@ i@@ -1;@@ (p@@ <=@@ q@@ +m@@ *@@ i@@ -1@@ +@@ (m@@ -1)*(@@ m-1)@@ )&&(@@ p@@ <@@ q@@ +@@ n*@@ m@@ );@@ p=p@@ +m@@ -1) { printf("%d\n",@@ *p@@ ); } } } }  
c -1
h -1
voidmain() { inta[@@ 30@@ ],b[@@ 30],@@ i,j,k,@@ n,@@ m=1; scanf("%d",&n); for(i=1;i<=n;i++) { scanf("%d",&a[i]); b[i]=1; } for(i=n-1@@ ;i>=1;i--) { for(j=i+1;j<=n;j++) { if(a[i]>=@@ a[j]&&@@ b[i]@@ <@@ b[j]@@ +1) b[i]=b[j]+1; } if(b[i]>@@ m) m=@@ b[i]; } printf("%d",m); }  
c -1
h -1
0

intmain(){ intn,k; scanf("%d%d",&n,&k); intsz[1000]; for(inti=0;i<n;i++){ scanf("%d",&sz[i]); } int@@ p,@@ m; for(m=0;m<@@ n-1@@ ;m++){ for(p=@@ m@@ +1@@ ;p@@ <n;@@ p++){ if(k==@@ sz[m@@ ]+sz[@@ p@@ ]) break; } if(p==@@ n) continue; elseif(@@ p@@ <n@@ &&k@@ ==@@ sz[m@@ ]+sz[@@ p@@ ]){ printf("yes"); break; } } if(m==@@ n-1) printf("no"); return0; }  
c -1
h -1
intmain() { inta[100]; inti,n,@@ number,@@ count,@@ countl@@ ; count=0; countl@@ =0; for(i=0;i<100;i++) { a[i]=0; } scanf("%d",&n); intb[@@ n]; for(i=0;i<n;i++) { scanf("%d",&@@ number); if(a[@@ number@@ ]==0) { a[@@ number@@ ]=1; b[@@ count@@ ]=@@ number; count=@@ count@@ +1; } } for(i=0;i<@@ count@@ ;i++) { countl@@ =@@ countl@@ +1; printf("%d",b[i]); if(@@ countl@@ <@@ count@@ ) { printf(""); } } return0; }  
c -1
h -1
0

int@@ ping@@ (intn) { if(n@@ ==1||@@ n==@@ 3@@ ||@@ n==@@ 5@@ ||@@ n==@@ 7@@ ||@@ n==@@ 8@@ ||@@ n==@@ 10@@ ||@@ n==@@ 12) return@@ 31; if(n==@@ 2) return@@ 28; if(n==@@ 4@@ ||@@ n==@@ 6@@ ||@@ n==@@ 9@@ ||@@ n==@@ 11) return@@ 30; } int@@ run@@ (intn) { if(n@@ ==1||@@ n==@@ 3@@ ||@@ n==@@ 5@@ ||@@ n==@@ 7@@ ||@@ n==@@ 8@@ ||@@ n==@@ 10@@ ||@@ n==@@ 12) return@@ 31; if(n==@@ 2) return@@ 29; if(n==@@ 4@@ ||@@ n==@@ 6@@ ||@@ n==@@ 9@@ ||@@ n==@@ 11) return@@ 30; } intmain() { intn,@@ month,@@ day,@@ sum=0; cin>>n>>@@ month>>@@ day; inti; if((@@ n@@ %@@ 400==0)||(@@ n@@ %4==0&&@@ n@@ %100!=0@@ )) { for(i=1;i<month;i++) sum+=@@ run@@ (i); sum+=@@ day; cout<<@@ sum; } else { for(i=1;i<month;i++) sum+=@@ ping@@ (i); sum+=@@ day; cout<<@@ sum; } return0; }  
c -1
h -1
intmain() { inta[100][100],@@ b,@@ c,d,@@ e,f,@@ g,@@ h; scanf("%d",&b); g=0; for(c=0;c@@ <b@@ ;c@@ ++) { for(d@@ =0;d@@ <b@@ ;@@ d++) { scanf("%d",&@@ a[c@@ ][@@ d@@ ]); } } for(e@@ =0;e@@ <b@@ ;@@ e++) { for(@@ f@@ =0;@@ f@@ <b@@ ;@@ f@@ ++) { if(a[@@ e@@ ][@@ f@@ ]@@ ==0)@@ g=@@ g@@ +1; } } h@@ =(@@ g@@ /@@ 4@@ -1)*(@@ g@@ /@@ 4@@ -1); printf("%d",@@ h); }  
c -1
h -1
0

struct@@ shu {intnum; charauthor[26]; }; voidmain() { struct@@ shu@@ shu@@ [999]; intn,i,j,k,@@ m; scanf("%d",&n); for(i=0;i<n;i++) scanf("%d%s",&@@ shu[i].@@ num,@@ shu[i].@@ author); inta[@@ 26]={0}; for(i=0;i<n;i++) { for(j=0;j<26;j++) { if(@@ shu[i].author[j]=='@@ A')@@ a[0]=@@ a[0]@@ +1; elseif(@@ shu[i].author[j]=='@@ B@@ ')@@ a[1]=@@ a[1]@@ +1; elseif(@@ shu[i].author[j]=='@@ C')@@ a[2@@ ]=a[@@ 2@@ ]+1; elseif(@@ shu[i].author[j]=='@@ D@@ ')a[@@ 3@@ ]=a[@@ 3@@ ]+1; elseif(@@ shu[i].author[j]=='@@ E@@ ')a[@@ 4@@ ]=a[@@ 4@@ ]+1; elseif(@@ shu[i].author[j]=='@@ F@@ ')a[@@ 5@@ ]=a[@@ 5@@ ]+1; elseif(@@ shu[i].author[j]=='@@ G')@@ a[@@ 6@@ ]=a[@@ 6@@ ]+1; elseif(@@ shu[i].author[j]=='@@ H@@ ')a[@@ 7@@ ]=a[@@ 7@@ ]+1; elseif(@@ shu[i].author[j]=='@@ I@@ ')a[@@ 8@@ ]=a[@@ 8@@ ]+1; elseif(@@ shu[i].author[j]=='@@ J@@ ')a[@@ 9@@ ]=a[@@ 9@@ ]+1; elseif(@@ shu[i].author[j]=='@@ K@@ ')a[@@ 10@@ ]=a[@@ 10@@ ]+1; elseif(@@ shu[i].author[j]=='@@ L@@ ')a[@@ 11@@ ]=a[@@ 11@@ ]+1; elseif(@@ shu[i].author[j]=='@@ M@@ ')a[@@ 12@@ ]=a[@@ 12@@ ]+1; elseif(@@ shu[i].author[j]=='@@ N@@ ')a[@@ 13@@ ]=a[@@ 13@@ ]+1; elseif(@@ shu[i].author[j]=='@@ O@@ ')a[@@ 14@@ ]=a[@@ 14@@ ]+1; elseif(@@ shu[i].author[j]=='@@ P@@ ')a[@@ 15@@ ]=a[@@ 15@@ ]+1; elseif(@@ shu[i].author[j]=='@@ Q@@ ')a[@@ 16@@ ]=a[@@ 16@@ ]+1; elseif(@@ shu[i].author[j]=='@@ R@@ ')a[@@ 17@@ ]=a[@@ 17@@ ]+1; elseif(@@ shu[i].author[j]=='@@ S@@ ')a[@@ 18@@ ]=a[@@ 18@@ ]+1; elseif(@@ shu[i].author[j]=='@@ T')@@ a[@@ 19@@ ]=a[@@ 19@@ ]+1; elseif(@@ shu[i].author[j]=='@@ U@@ ')a[@@ 20@@ ]=a[@@ 20@@ ]+1; elseif(@@ shu[i].author[j]=='@@ V@@ ')a[@@ 21@@ ]=a[@@ 21@@ ]+1; elseif(@@ shu[i].author[j]=='@@ W@@ ')a[@@ 22@@ ]=a[@@ 22@@ ]+1; elseif(@@ shu[i].author[j]=='@@ X@@ ')a[@@ 23@@ ]=a[@@ 23@@ ]+1; elseif(@@ shu[i].author[j]=='@@ Y@@ ')a[@@ 24@@ ]=a[@@ 24@@ ]+1; elseif(@@ shu[i].author[j]=='@@ Z@@ ')a[@@ 25@@ ]=a[@@ 25@@ ]+1; } } k=@@ a[@@ 0],@@ m=0; for(i=0;i<26;i++) { if(k@@ <@@ a[i]) { k=@@ a[i]; m=i; } } charb[@@ 26@@ ]={'A','B','C','D','E','F','G','H','I','J','K','L','M','N','O','P','@@ Q','R','S','T','U','V','W','X','Y','@@ Z'}; printf("%c\n",@@ b[m@@ ]); printf("%d\n",@@ k); for(i=0;i<n;i++) { for(j=0;j<26;j++) { if(@@ shu[i].author@@ [j]==@@ b[m@@ ]) { printf("%d\n",@@ shu[i].@@ num); break; } } } }  
c -1
h -1
intmain(){ intn,i,j,@@ c; scanf("%d",&n); intcount=0; intf@@ [1000][1000]; for(i=0;i<n;i++){ for(j=0;j<n;j++){ scanf("%d",&@@ f@@ [i][j]); if(f@@ [i][j]@@ ==0)@@ count=@@ count@@ +1;} scanf("\n@@ ");} c@@ =(@@ ((@@ count@@ +@@ 4)@@ /@@ 4)@@ -2)*(@@ ((@@ count@@ +@@ 4)@@ /@@ 4)@@ -2); printf("%d",@@ c); return0;}  
c -1
h -1
0

intmain() { intm; struct@@ bo {@@ inta; char@@ au@@ [@@ 36@@ ]; }; struct@@ bo@@ bo@@ [999]; inti,j; char@@ k,@@ K@@ ; int@@ sb@@ [26]={0},@@ sbt@@ ; int@@ len; intn; scanf("%d",&m); for(i=0;i<m;i++){ scanf("%d%s",&@@ bo[i].@@ a,@@ bo[i].@@ au); len=strlen(@@ bo[i].@@ au); for(j=0;j<len@@ ;j++){ for(k=@@ 65@@ ;k<@@ 91@@ ;k++){ if(@@ bo[i].@@ au@@ [j]==k){ sb@@ [k@@ -65]++; } } } } K@@ =0; sbt@@ =0; for(i=0;i<26;i++){ if(@@ sb@@ [i]>@@ sbt@@ ){ K@@ =i+65; sbt@@ =@@ sb@@ [i]; } } printf("%c\n%d\n",@@ K@@ ,@@ sbt@@ ); for(i=0;i<m;i++){ n=1; for(j=0;j<strlen(@@ bo[i].@@ au@@ )@@ ;j++){ if(@@ K@@ ==@@ bo[i].@@ au@@ [j]){ n=0; } } if(n@@ ==0){ printf("%d\n",@@ bo[i].@@ a); } } }  
c -1
h -1
voidmain() { intn,i,j,@@ age@@ [100],@@ dengji@@ [100],@@ p,@@ t; charid@@ [100][10],@@ c;@@ int@@ jishuqi@@ =0,@@ k; intl,@@ m; scanf("%d",&n); for(i=0;i<=n-1;i++) { scanf("%s%d",@@ id[i],&@@ age[i]); dengji@@ [i]=@@ i; } for(i=0;i<=@@ n-2;i++) for(j=0;j<=@@ n-2@@ -i;j++) { if(age@@ [j]<@@ age@@ [j+1]) { t=@@ age@@ [j]; age@@ [j]=@@ age@@ [j+1]; age@@ [j+1]=t; k=@@ dengji@@ [j]; dengji@@ [j]=@@ dengji@@ [j+1]; dengji@@ [j+1]=@@ k; for(p=0;p@@ <=@@ 9@@ ;p++) { c=@@ id@@ [j]@@ [p@@ ]; id@@ [j]@@ [p@@ ]=@@ id@@ [j+1@@ ][p@@ ]; id@@ [j+1@@ ][p@@ ]=@@ c; } } if(age@@ [j]==@@ age@@ [j+1]) { if(@@ dengji@@ [j]>@@ dengji@@ [j+1]) { k=@@ dengji@@ [j]; dengji@@ [j]=@@ dengji@@ [j+1]; dengji@@ [j+1]=@@ k; for(p=0;p@@ <=@@ 9@@ ;p++) { c=@@ id@@ [j]@@ [p@@ ]; id@@ [j]@@ [p@@ ]=@@ id@@ [j+1@@ ][p@@ ]; id@@ [j+1@@ ][p@@ ]=@@ c; } } } } for(i=0;i<=@@ n-2;i++) for(j=0;j<=@@ n-2@@ -i;j++) { if(age@@ [j]@@ <60) { if(@@ dengji@@ [j]>@@ dengji@@ [j+1]) { k=@@ dengji@@ [j]; dengji@@ [j]=@@ dengji@@ [j+1]; dengji@@ [j+1]=@@ k; t=@@ age@@ [j]; age@@ [j]=@@ age@@ [j+1]; age@@ [j+1]=t; for(p=0;p@@ <=@@ 9@@ ;p++) { c=@@ id@@ [j]@@ [p@@ ]; id@@ [j]@@ [p@@ ]=@@ id@@ [j+1@@ ][p@@ ]; id@@ [j+1@@ ][p@@ ]=@@ c; } } } } for(i=0;i<=n-1;i++) printf("%s\n",@@ id[i]); }  
c -1
h -1
0

intm,n,i,j,@@ temp; inta[100@@ ]={0},@@ b[100@@ ]={0},@@ c[@@ 200@@ ]={0}; void@@ Read@@ (void@@ ); void@@ Order@@ (void@@ ); void@@ Combine@@ (void@@ ); void@@ Write@@ (void@@ ); intmain() { Read@@ (); Order@@ (); Combine@@ (); Write@@ (); return0; } void@@ Read@@ (void) { scanf("%d%d",&m,&n); for(i=1;i<=m;i++) scanf("%d",&a[i]); for(i=1;i<=n;i++) scanf("%d",&b[i]); } void@@ Order@@ (void) { for(i=1;i<=m;i++) for(j=i+1;j<=@@ m;j++) { if(a[i]>a[j]) { temp=a[i]; a[i]=a[j]; a[j]=@@ temp; } } for(i=1;i<=n;i++) for(j=i+1;j<=n;j++) { if(b[i]>@@ b[j]) { temp=@@ b[i]; b[i]=@@ b[j]; b[j]=@@ temp; } } } void@@ Combine@@ (void) { for(i=1;i<=m;i++) c[i]=a[i]; for(i=1;i<=n;i++) c@@ [i@@ +m@@ ]=b[i]; } void@@ Write@@ (void) { printf("%d",c[@@ 1@@ ]); for(i=2;i<=@@ m+n;i++) printf("%d",c[i]); }  
c -1
h -1
intmain(intargc,char*argv[]) { inta[@@ 12]={31,28,31,30,31,30,31,31,30,31,30,31}; int@@ year@@ [5],@@ mon@@ [5],@@ day@@ [5],@@ sum=0,@@ i,j; for(j=0;j<@@ 5@@ ;j++) scanf("%d%d%d",&year@@ [j]@@ ,&@@ mon@@ [j]@@ ,&@@ day@@ [j]); for(j=0;j<@@ 5@@ ;j++) { if(@@ year@@ [j]@@ %@@ 400==0)@@ a[1]=29; elseif(@@ year@@ [j]@@ %@@ 4==0) { if(@@ year@@ [j]@@ %@@ 100==0) a[1]=@@ 28; else@@ a[1]=29; } for(i=0;i<=@@ (@@ mon@@ [j]@@ -2@@ );i++) sum=sum+@@ a[i]; sum=sum+@@ day@@ [j]; printf("%d\n",sum); sum=0; } return0; }  
c -1
h -1
0

intmain() { char@@ origin@@ [256],@@ sub[256],@@ replace@@ [256],@@ after@@ [256]; scanf("%s%s%s",@@ origin@@ ,@@ sub,@@ replace); inti,j,@@ k=0; for(i=0;@@ origin@@ [i]@@ ;i++){ int@@ shouldChange@@ =1; for(j=0;@@ sub@@ [j]@@ ;j++){ if(@@ origin@@ [i+j]!=@@ sub@@ [j]){ shouldChange@@ =0; } } if(@@ shouldChange@@ ==1){ strcpy(@@ after@@ ,@@ origin@@ ); after@@ [i]=0; strcat(@@ after@@ ,@@ replace); strcat(@@ after@@ ,&@@ origin@@ [i+@@ strlen(@@ sub)@@ ]); strcpy(@@ origin@@ ,@@ after@@ ); i@@ +=@@ strlen(@@ replace); break; } } printf("%s",@@ origin@@ ); return0; }  
c -1
h -1
voidmain() { intn,i,j,@@ m=0; inta[@@ 25],b[@@ 25@@ ]={@@ 1,1,1,1,1,1,1,1,@@ 1,1,1,1,1,1,1,1,@@ 1,1,1,1,@@ 1,1,@@ 1,@@ 1@@ }; scanf("%d",&n); for(i=0;i<n;i++)@@ scanf("%d",&a[i]); b[@@ n-1@@ ]=1; for(i=n-2;i>=0;i--) { for(j=i+1;j<n;j++) { if((@@ a[i]@@ >=@@ a[j]@@ )&&(@@ b[i]@@ <=@@ b[j]@@ ))@@ b[i]=b[j]+1; } } for(i=0;i<n;i++) { if(b[i]@@ >=@@ m)@@ m=@@ b[i]; } printf("%d\n",m); }  
c -1
h -1
0

intmain() { doublen,@@ c; inta,@@ i,@@ d@@ =1,@@ b=0; char@@ sz[@@ 1000@@ ]={'\0'},@@ u@@ [@@ 1000@@ ]={'\0'}; scanf("%lf",&n); scanf("\n@@ "); gets(@@ sz@@ ); gets(@@ u@@ ); a=strlen(@@ sz@@ ); for(i=0;i<a;i++){ if(sz@@ [i]!='A'&&@@ sz@@ [i]!='G'&&@@ sz@@ [i]!='T'&&@@ sz@@ [i]!='@@ C'){ printf("error"); d=0; break; } elseif(@@ u@@ [i]!='A'&&@@ u@@ [i]!='G'&&@@ u@@ [i]!='T'&&@@ u@@ [i]!='@@ C'){ printf("error"); d=0; break; } elseif(@@ sz@@ [i]==@@ u@@ [i]){ b++; } } c=@@ b@@ *1.0/@@ a; if(d@@ ==1){ if(c@@ >n){ printf("yes"); } else{ printf("no"); } } return0; }  
c -1
h -1
intm,n,@@ a[@@ 20@@ ],b[@@ 20]; void@@ duqu@@ () { inti; cin>>m>>n; for(i=1;i<=m;i++) cin>>a[i]; for(i=1;i<=n;i++) cin>>b[i]; } voidpaixu@@ () { inti,j,t; for(i=1;i<=@@ m-1;i++) for(j=1;j<=@@ m@@ -i;j++) if(a[j]>a[j+1]) {t=@@ a[j];a[j]=a[j+1];@@ a[j+1]=@@ t;} for(i=1;i<=n-1;i++) for(j=1;j<=@@ n@@ -i;j++) if(b[j]>b[j+1]) {t=@@ b[j]@@ ;@@ b[j]=b@@ [j+1];@@ b[j+1]=@@ t;} } voidshuchu@@ () { inti,j; cout<<@@ a[1]; for(i=2;i<=@@ m;i++) cout<<""<<a[i]; for(j=1;j<=n;j++) cout<<""<<@@ b[j]; cout<<endl; } intmain() { duqu@@ (); paixu@@ (); shuchu@@ (); return0; }  
c -1
h -1
0

intmain(){ doublen; scanf("%lf",&n); char@@ DNA@@ [2][@@ 500]; inti; int@@ len@@ [2]; for(i=0;i<2@@ ;i++){ scanf("%s",@@ DNA@@ [i]); len@@ [i]@@ =strlen(@@ DNA@@ [i]); } intj; int@@ p=0; for(j=0;j<len@@ [0]@@ ;j++){ if(@@ DNA@@ [0]@@ [j]==@@ DNA@@ [1]@@ [j]){ p++; } } intm=0; for(i=0;i<2@@ ;i++){ for(j=0;j<len@@ [i]@@ ;j++){ if(@@ DNA@@ [i][j]!='@@ A'&&@@ DNA@@ [i][j]!='@@ T'&&@@ DNA@@ [i][j]!='@@ C'&&@@ DNA@@ [i][j]!='@@ G'){ m++; } } } double@@ bi@@ ; bi@@ =(@@ (double)@@ p@@ )@@ /@@ ((@@ double)@@ len@@ [0]); if(@@ len@@ [0]@@ !=@@ len@@ [1]@@ ||@@ m@@ !=0){ printf("error"); }elseif(@@ bi@@ >n){ printf("yes"); }else{ printf("no"); } return0; }  
c -1
h -1
intmain() { doublea,@@ x; char@@ dna1@@ [500],@@ dna2@@ [500]; inti,j=0,@@ l1,l2,@@ c=0; cin>>a>>@@ dna1@@ >>@@ dna2@@ ; l1=strlen(@@ dna1); l2=strlen(@@ dna2); if(l1!=l2@@ ) { cout<<"@@ error@@ "; c=1; } else { for(i=0;i<l1;i++) { if(dna1@@ [i]!='A'&&@@ dna1@@ [i]!='T'&&@@ dna1@@ [i]!='G'&&@@ dna1@@ [i]!='@@ C') { cout<<"@@ error@@ "; c=1; break; } elseif(@@ dna2@@ [i]!='A'&&@@ dna2@@ [i]!='T'&&@@ dna2@@ [i]!='G'&&@@ dna2@@ [i]!='@@ C') { cout<<"@@ error@@ "; c=1; break; } } } if(c@@ ==0) { for(i=0;i<l1;i++) { if(dna1@@ [i]==@@ dna2@@ [i]) { j=j+1; } } x@@ =j@@ *1.0/@@ l1; if(x>@@ a) { cout<<"yes"; } else { cout<<"no"; } } return0; }  
c -1
h -1
1


voidmain() { inti,j,n,@@ k; structstudent { intnum; int@@ score1@@ ; int@@ score2; intt; }stu[@@ 100000],@@ m1,@@ m2@@ ,@@ m3@@ ; scanf("%d\n",&n); for(i=0;i<n;i++) { scanf("%d%d@@ %d@@ \n",&@@ stu[i].@@ num,&stu[i].@@ score1@@ ,&stu[i].@@ score2); stu[i].@@ t=@@ stu[i].@@ score1@@ +stu[i].@@ score2; } m1=@@ stu[@@ 0]; m2=@@ stu[@@ 0]; m3=@@ stu[@@ 0]; for(i=0;i<n;i++) { if(stu[i].@@ t@@ >@@ m1@@ .@@ t) { m3=@@ m2@@ ; m2=@@ m1@@ ; m1@@ =stu@@ [i]; } elseif(@@ stu[i].@@ t@@ >@@ m2@@ .@@ t@@ &&stu[i].@@ t@@ <=@@ m1@@ .@@ t) { m3=@@ m2@@ ; m2@@ =stu@@ [i]; } elseif(@@ stu[i].@@ t@@ >@@ m3@@ .@@ t@@ &&stu[i].@@ t@@ <=@@ m2@@ .@@ t) { m3@@ =stu@@ [i]; } } printf("%d%d\n%d%d\n%d@@ %d",@@ m1@@ .num,@@ m1@@ .@@ t,@@ m2@@ .num,@@ m2@@ .@@ t,@@ m3@@ .num,@@ m3@@ .@@ t); }  
c -1
h -1
struct { int@@ xuehao@@ ; intyuwen; intshuxue; }@@ student[@@ 1000000@@ ]; void@@ swap@@ (int*a,@@ int*@@ b); intmain(intargc,char*argv[]) { intn=0; scanf("%d",&n); inti=0,j=0,@@ total@@ [@@ 1000000@@ ]; for(i=0;i<n;i++) { scanf("%d%d%d",&@@ student[i].@@ xuehao@@ ,&@@ student[i].@@ yuwen@@ ,&@@ student[i].@@ shuxue); total@@ [i]=@@ student[i].@@ yuwen@@ +@@ student[i].@@ shuxue; } for(i=0;i<3;i++) { for(j=n-1@@ ;j>0@@ +i@@ ;j--) { if(@@ total@@ [j]>@@ total@@ [j-1]) { swap(@@ &@@ total@@ [j]@@ ,&@@ total@@ [j-1]); swap(@@ &@@ student@@ [j-1].@@ xuehao@@ ,&@@ student[j].@@ xuehao@@ ); swap(@@ &@@ student@@ [j-1].@@ yuwen@@ ,&@@ student[j].@@ yuwen@@ ); swap(@@ &@@ student@@ [j-1].@@ shuxue@@ ,&@@ student[j].@@ shuxue); } } } for(i=0;i<3;i++) { printf("%d%d\n",@@ student[i].@@ xuehao@@ ,@@ total@@ [i]); } return0; } void@@ swap@@ (int*a,@@ int*@@ b) { int@@ e; e@@ =*@@ a; *a@@ =*@@ b; *@@ b=@@ e; }  
c -1
h -1
1


intmain() { void@@ take@@ (intx@@ [@@ 1000@@ ],int@@ l); void@@ rank@@ (intx@@ [@@ 1000@@ ],int@@ l); void@@ com@@ (inta[@@ 1000@@ ],intb[@@ 1000@@ ],int@@ c[@@ 2000@@ ],int@@ al@@ ,int@@ bl@@ ); void@@ prin@@ (intc[@@ 2000@@ ],int@@ l); inta[1000]; intb[@@ 1000]; intc[@@ 2000]; int@@ al@@ ,@@ bl@@ ; scanf("%d%d",&@@ al@@ ,&@@ bl@@ ); take@@ (a,@@ al@@ ); take@@ (b,@@ bl@@ ); rank@@ (a,@@ al@@ ); rank@@ (b,@@ bl@@ ); com@@ (a,b,@@ c,@@ al@@ ,@@ bl@@ ); prin@@ (c,@@ al@@ +@@ bl@@ ); return0; } void@@ take@@ (intx@@ [@@ 1000@@ ],int@@ l) { inti; for(i=0;i<l;i++) { scanf("%d",&@@ x[i]); } } void@@ rank@@ (intx@@ [@@ 1000@@ ],int@@ l) { inti,j,temp; if(l@@ !=1) { for(i=@@ l@@ -2@@ ;i>=0;i--) { for(j=0;j<=i;j++) { if(x@@ [j]>@@ x@@ [j+1]) { temp=@@ x@@ [j]; x@@ [j]=@@ x@@ [j+1]; x@@ [j+1]=temp; } } } } } void@@ com@@ (inta[@@ 1000@@ ],intb[@@ 1000@@ ],int@@ c[@@ 2000@@ ],int@@ al@@ ,int@@ bl@@ ) { inti; for(i=0;i<@@ al@@ ;i++) { c[i]=a[i]; } for(i=@@ al@@ ;i<@@ al@@ +@@ bl@@ ;i++) { c[i]=b[i-@@ al@@ ]; } } void@@ prin@@ (intc[@@ 2000@@ ],int@@ l) { inti; printf("%d",c@@ [0]); for(i=1;i<@@ l@@ ;i++) { printf("%d",c[i]); } }  
c -1
h -1
inta[@@ 1001@@ ][@@ 1001]; intmain(){ intn; cin>>n; inti,j; for(i=0;i<n@@ ;++@@ i){ for(j=0;j<@@ n;++@@ j){ cin>>a[i][j]; } } int@@ sx@@ ,@@ sy@@ ,@@ ex@@ ,@@ ey@@ ,@@ flag=0; for(i=0;i<n@@ ;++@@ i){ for(j=0;j<@@ n;++@@ j){ if(a[i][j]==0&&@@ flag@@ ==0){ sx@@ =i; sy@@ =j; flag=1; } else@@ if(a[i][j]==0&&@@ flag@@ ==1){ ex@@ =i; ey@@ =j; } } } sx@@ +=@@ 1@@ ;@@ sy@@ +=@@ 1@@ ;@@ ex@@ -=@@ 1@@ ;@@ ey@@ -=@@ 1; intsum@@ =(@@ ex@@ -@@ sx@@ +1)*(@@ ey@@ -@@ sy@@ +1); cout<<sum<<endl; return0; }  
c -1
h -1
0

structpatient {@@ charid@@ [11]; intage; }; intmain() {@@ structpatient@@ pt@@ [100]; intn,i,j,@@ a=0,b=0,@@ tem; int@@ age_r@@ [100],@@ time_range@@ [100]; char@@ temid@@ [11]; scanf("%d",&n); for(i=0;i<n;i++){ scanf("%s%d",@@ pt@@ [i].id,&@@ pt@@ [i].age); if(@@ pt@@ [i].age>=60){ age_r@@ [a@@ ]=i; a++; } else{ time_range@@ [b@@ ]=i; b++; } } for(i=1;i<@@ a@@ -1;i++){ for(j=0;j<a@@ -i;j++){ if(@@ pt@@ [@@ age_r@@ [j]@@ ].age@@ <@@ pt@@ [@@ age_r@@ [j+1]@@ ].age){ strcpy(@@ temid@@ ,@@ pt@@ [@@ age_r@@ [j]@@ ].id); strcpy(@@ pt@@ [@@ age_r@@ [j]@@ ].id,@@ pt@@ [@@ age_r@@ [j+1]@@ ].id); strcpy(@@ pt@@ [@@ age_r@@ [j+1]@@ ].id,@@ temid@@ ); tem@@ =@@ pt@@ [@@ age_r@@ [j]@@ ].@@ age; pt@@ [@@ age_r@@ [j]@@ ].age=@@ pt@@ [@@ age_r@@ [j+1]@@ ].@@ age; pt@@ [@@ age_r@@ [j+1]@@ ].age=@@ tem; } } } for(i=0;i<a;i++){ printf("%s\n",@@ pt@@ [@@ age_r@@ [i]@@ ].id); } for(i=0;i<b;i++){ printf("%s\n",@@ pt@@ [@@ time_range@@ [i]@@ ].id); } return0; }  
c -1
h -1
intmain() { intn,i,@@ c; inta[@@ 101@@ ]={0}; cin>>n; cin>>@@ c; a[c@@ ]=1; cout<<@@ c; while(cin>>@@ c) { if(a[@@ c@@ ]==0) { cout<<""<<@@ c; a[c@@ ]=1; } } return0; }  
c -1
h -1
0

intmain() { inta[100][100],@@ n,@@ i,j,k; scanf("%d",&n); for(i=1;i<=n;i++) { inta[100][100],@@ r,@@ l,@@ sum=0; scanf("%d%d",&@@ r@@ ,&@@ l); for(j=0;j<=@@ r@@ -1;j++) for(k=0;k<=@@ l@@ -1;k++) scanf("%d",@@ *(a@@ +j)+@@ k); for(j=0;j<=@@ r@@ -1;j++) { for(k=0;k<=@@ l@@ -1;k++) { if(j==@@ r@@ -1@@ ||j@@ ==0||@@ k==@@ l@@ -1@@ ||@@ k@@ ==0) sum+=*(*(a@@ +j)+@@ k); } }@@ printf("%d\n",sum); } return0; }  
c -1
h -1
voidmain() { structpatient {@@ charid[10]; inta; }@@ all@@ [100],@@ old@@ [100],@@ temp; intn,@@ j=0,@@ k,@@ i; scanf("%d",&n); for(i=0;i<n;i++) { scanf("%s%d",@@ all@@ [i].id,&@@ all@@ [i].@@ a); if(@@ all@@ [i].@@ a@@ >=60) { old@@ [j]=@@ all@@ [i]; j=j+1; } } for(i=j@@ -1@@ ;i>0;i--) { for(k=0;k<i;k++) { if(old@@ [k].@@ a@@ <@@ old@@ [k+1@@ ].@@ a) { temp=@@ old@@ [k]; old@@ [k]=@@ old@@ [k+1]; old@@ [k+1]=@@ temp; } } } for(i=0;i<j;i++) { printf("%s\n",old@@ [i].id); } for(i=0;i<n;i++) { if(@@ all@@ [i].@@ a@@ <60) printf("%s\n",@@ all@@ [i].id); } }  
c -1
h -1
0

intmain(){ chars[256],@@ s1@@ [256],@@ s2@@ [256],@@ ss@@ [@@ 20],@@ re@@ [20]; inti,j,@@ x=0,@@ y=0,@@ a,@@ flag=0; gets(s); scanf("%s%s",@@ ss@@ ,@@ re); for(i=0;s[i]@@ !='\0';i++){ if(s@@ [i]!=@@ ss@@ [0]){ s1@@ [x@@ ]=@@ s[i]; x++; } elseif(@@ s@@ [i]==@@ ss@@ [0]){ a=i; flag=1; for(j=0;@@ ss@@ [j]@@ !='\0';j++){ if(@@ ss@@ [j]!=@@ s[@@ a@@ ]){ flag=0; } a++; } if(flag@@ ==0){ s1@@ [x@@ ]=@@ s[i]; x++; } } if(flag@@ ==1){ s1@@ [x@@ ]='\0'; break; } } if(flag@@ ==1){ for(i@@ +=@@ strlen(@@ ss@@ );@@ s[i]@@ !='\0';i++){ s2@@ [y@@ ]=@@ s[i]; y++; } } s2@@ [y@@ ]='\0'; if(flag@@ ==1){ printf("%s@@ %s%s",@@ s1,@@ re@@ ,@@ s2); } if(flag@@ ==0){ printf("%s",s); } return0; }  
c -1
h -1
intmain() { intyear,month,day; inti; int@@ a=0; int@@ b=0; scanf("%d%d%d",&year,&month,&day); int@@ N1@@ [13]={0,31,28,31,30,31,30,31,31,30,31,30,31}; int@@ N2@@ [@@ 13]={0,31,@@ 29,31,30,31,30,31,31,30,31,30,31}; if((year%4==0&&year%100!=0)||(year%400==0)) { if(@@ day@@ <@@ 1@@ ||@@ day@@ >@@ N2@@ [@@ month@@ ]) { printf("@@ wrong@@ \n"); return-1; } else { for(i=1;i<=@@ month;i++) { a@@ +=@@ N2@@ [i]; } b=@@ a@@ -@@ day; } } else { if(@@ day@@ <@@ 1@@ ||@@ day@@ >@@ N1@@ [@@ month@@ ]) { printf("@@ wrong@@ \n"); return-1; } else { for(i=1;i<=@@ month;i++) { a@@ +=@@ N1@@ [i]; } b=@@ a@@ -@@ day; } } printf("%d\n",@@ b); return0; }  
c -1
h -1
0

intmain() { intk,m,n,i,j,@@ sum,@@ matrix@@ [100][100]; scanf("%d",&k); while(k@@ >0){ k--; sum=0; scanf("%d%d",&@@ m,@@ &@@ n); for(i=0;i<m;i++){ for(j=0;j<n;j++) scanf("%d",@@ *(@@ matrix@@ +i)@@ +j); } if(m@@ ==1&&n@@ ==1) printf("%d\n",@@ **@@ matrix@@ ); elseif(m@@ ==1){ for(i=0;i<n;i++) sum+=*(@@ *@@ matrix@@ +i); printf("%d\n",sum); } elseif(n@@ ==1){ for(i=0;i<m;i++) sum+=@@ **@@ (@@ matrix@@ +i); printf("%d\n",sum); } else{ for(i=0;i<n;i++) sum+=*(@@ *@@ matrix@@ +i); for(i=0;i<n;i++) sum+=@@ *(*(@@ matrix@@ +m-1)@@ +i); for(i=1;i<m-1;i++) sum+=@@ (@@ **@@ (@@ matrix@@ +i)@@ +*(@@ *(@@ matrix@@ +i)@@ +@@ n-1@@ )); printf("%d\n",sum); } } return0; }  
c -1
h -1
voidinput@@ (intm,@@ inta[100@@ ]) { inti; for(i=0;i<m;i++) cin>>a[i]; } void@@ arrange@@ (intm,@@ inta[100@@ ]) { inti,j,@@ c; for(i=1;i<m;i++) for(j=0;j<m@@ -i;j++) { if(a[j]>a[j+1]) { c=@@ a[j]; a[j]=a[j+1]; a[j+1]=@@ c; } } } void@@ puttogether@@ (inta,int@@ b,int@@ m@@ [2@@ ][100@@ ]) { inti; for(i=0;i<b;i++) m[@@ 0][@@ a@@ +i]=@@ m@@ [1]@@ [i]; } voidoutput@@ (inta,int@@ m@@ [100@@ ]) { inti; cout<<@@ m@@ [0]; for(i=1;i<@@ a;i++) cout<<""<<@@ m[i]; } intmain() { inta,b; cin>>a>>@@ b; intnumber@@ [2@@ ][100]; input@@ (a,@@ number@@ [0]); input@@ (b,@@ number@@ [1]); arrange@@ (a,@@ number@@ [0]); arrange@@ (b,@@ number@@ [1]); puttogether@@ (a,b,@@ number); output@@ (@@ a+@@ b,@@ number@@ [0]); cin>>a; return0; }  
c -1
h -1
0

intmain() { intyear,month,@@ monthd@@ [@@ 12]={31,@@ 28,31,30,31,30,31,31,30,31,30,31@@ },@@ day,@@ di@@ =0,@@ i; scanf("%d%d%d",&year,&month,&day); for(i=1;i<month;i++) { di@@ =@@ di@@ +@@ monthd@@ [i-1]; } di@@ =@@ di@@ +day; if((@@ year%@@ 4)@@ !=0@@ ||(@@ year%@@ 400@@ )@@ !=0) { printf("%d\n",@@ di@@ ); } else printf("%d",@@ di@@ +1); return0; }  
c -1
h -1
intmain() { intn; inta[@@ 9000@@ ],@@ ans@@ [@@ 9000@@ ]; scanf("%d",&n); inti,j; intnum@@ =1,@@ t=0; scanf("%d",&a[0]); ans@@ [0]=@@ a[0]; printf("%d",a[0]); for(i=1;i<n;i++) { scanf("%d",&a[i]); intj=0; while(j<@@ num) { if(a[i]==@@ ans@@ [j]) { t=1; break; } j++; } if(t==0) { ans@@ [@@ num@@ ]=a[i]; printf("%d",@@ ans@@ [@@ num@@ ]); num++; } else@@ t=0; } getchar(); getchar(); getchar(); }  
c -1
h -1
0

structstudent { intID; intchi; intmath; inttotal; }stu[@@ 1000000@@ ]; voidmain() { int@@ STUDENT_NUM@@ ,i,j,@@ temp1@@ ,@@ temp2@@ ; scanf("%d",&@@ STUDENT_NUM@@ ); for(i=0;i<@@ STUDENT_NUM@@ ;i++) { scanf("%d%d%d",&stu[i].@@ ID@@ ,&stu[i].@@ chi@@ ,&stu[i].math); stu[i].@@ total=@@ stu[i].@@ chi@@ +stu[i].@@ math; } for(i=0;i<3;i++) { for(j=i+1;j<@@ STUDENT_NUM@@ ;j++) { if(stu[i].@@ total@@ <@@ stu[j].@@ total) { temp1@@ =stu[i].@@ ID; stu[i].@@ ID@@ =@@ stu[j].@@ ID; stu[j].@@ ID@@ =@@ temp1@@ ; temp2@@ =stu[i].@@ total; stu[i].@@ total=@@ stu[j].@@ total; stu[j].@@ total=@@ temp2@@ ; } } } printf("%d%d\n%d%d\n%d%d\n",@@ stu[0].@@ ID,@@ stu[0].@@ total@@ ,@@ stu[1].@@ ID,@@ stu[1].@@ total@@ ,@@ stu[2@@ ].ID,@@ stu[2@@ ].@@ total); }  
c -1
h -1
structstudent { int@@ xuehao@@ ; intshuxue; intyuwen; int@@ zongfen; }; intmain() { intn,i,@@ e@@ ,j; scanf("%d",&n); structstudent@@ stu[@@ 100001@@ ]; for(i=0;i<n;i++) { scanf("%d%d%d",&stu[i].@@ xuehao@@ ,&stu[i].@@ shuxue@@ ,&stu[i].@@ yuwen@@ ); stu[i].@@ zongfen@@ =stu[i].@@ shuxue@@ +stu[i].@@ yuwen; } for(i=1;i<@@ 4;i++) { for(j=0;j<n-i;j++) { if(stu[j].@@ zongfen@@ >=@@ stu[j+1].@@ zongfen@@ ) { stu[@@ 100000@@ ]=@@ stu@@ [j+1]; stu@@ [j+1]=@@ stu@@ [j]; stu@@ [j]=@@ stu[100000]; } } } for(i=n-1;i@@ >@@ n-@@ 4@@ ;i--) { printf("%d%d\n",stu[i].@@ xuehao@@ ,@@ stu[i].@@ zongfen@@ ); } return0; }  
c -1
h -1
1


int@@ v@@ [100][100]; intsum@@ (intm,int@@ n) { int@@ su@@ =0; if(n@@ >=@@ 2@@ &&m@@ >=@@ 2) { for(inti=0;i<n;i++) { su@@ +=@@ v@@ [0]@@ [i]; su@@ +=@@ v@@ [m@@ -1]@@ [i]; } for(inti=1;i<@@ m-1;i++) { su@@ +=@@ v@@ [i]@@ [0]; su@@ +=@@ v@@ [i]@@ [n-1]; } } elseif(n@@ >=@@ 2@@ &&m@@ ==1) { for(inti=0;i<n;i++) { su@@ +=@@ v@@ [0]@@ [i]; } } elseif(m@@ >=@@ 2@@ &&n@@ ==1) { for(inti=0;i<n;i++) { su@@ +=@@ v@@ [i]@@ [0]; } } else { su@@ =@@ v@@ [0][@@ 0]; } return@@ su@@ ; } intmain() { int@@ times@@ ; cin>>@@ times@@ ; for(intk=0;k<@@ times@@ ;k++) { inta,b; cin>>a>>@@ b; for(inti=0;i<@@ a;i++) for(intj=0;j<@@ b;j++) cin>>@@ v@@ [i][j]; cout<<sum@@ (a,@@ b@@ )<<endl; } }  
c -1
h -1
intcount@@ =0,@@ a[@@ 25],@@ n,@@ d=0,@@ h,@@ k=0; voidf@@ () { inti,@@ temp=@@ count,@@ temph@@ =@@ h; for(i=k@@ ;i<n;i++) { if(a[i]<=@@ h@@ ){ h=@@ a[i]; k@@ =i+1@@ ;@@ count++; d=@@ count@@ >@@ d@@ ?@@ count@@ :@@ d; f@@ (); count=@@ temp; h=@@ temph@@ ; } } } voidmain() { inti,j,k; scanf("%d",&n); for(i=0;i<n;i++)@@ scanf("%d",&a[i]); h=@@ a[0]@@ ;@@ for(i=1;i<@@ n;i++)@@ if(a[i]>@@ h@@ )@@ h=@@ a[i]; f@@ (); printf("%d",d); }  
c -1
h -1
0

structbook { intnum; charwriter@@ [20]; structbook*next; }; intmain() { intn,i,j,@@ m,@@ k,@@ c[@@ 26],@@ max; chara[@@ 26]; scanf("%d",&m); structbook*@@ p1,*p2,*head; for(i=0;i<m;i++) { p1=(structbook@@ *)malloc(@@ Len@@ ); if(i==0) { head=p1; } else { p2->next=p1; } p2=p1; scanf("%d%s",&p1->num,p1->@@ writer); } p2->next=NULL; p1=head; for(i=0;i<26;i++) { a[i]@@ =i+65; c[i]@@ =0; } for(j=0;j<m;j++) { for(i=0;i<26;i++) { n=strlen(@@ p1->@@ writer); for(k=0;k<n;k++) { if(a[i]==@@ p1->@@ writer@@ [k]) { c[i]@@ ++; } } } p1=p1->next; } max=0; for(i=0;i<26;i++) { if(c@@ [i]>@@ c[@@ max@@ ]) { max=i; } } printf("%c\n%d\n",@@ a[@@ max@@ ],c[@@ max@@ ]); p1=head; for(i=0;i<m;i++) { n=strlen(@@ p1->@@ writer); for(j=0;j<n;j++) { if(p1->@@ writer@@ [j]==@@ a[@@ max@@ ]) { printf("%d\n",@@ p1->num); } } p1=p1->next; } return0; }  
c -1
h -1
intmain() { inti,j,k; while(1) { inta[@@ 20@@ ]={0},@@ sum=0; for(i=0;;i++) { scanf("%d",&a[i]); if(a[i]@@ ==0){@@ k@@ =i;@@ break;} } if(a[0]==-1)break; for(i=0;i<k;i++) for(j=i;j<@@ k;j++) { if(a[j]==2*@@ a[i]@@ ||@@ 2*@@ a[j]==@@ a[i])@@ sum++; } printf("%d\n",sum); } }  
c -1
h -1
0

struct { charid@@ [11]; int@@ nianling@@ ; }@@ bing@@ [100]; intmain() { intn,i,j,@@ e; int@@ youxian@@ [100]={0}; int@@ zhengchang@@ [100]={0}; scanf("%d",&n); for(i=0;i<n;i++) { scanf("%s%d",@@ bing@@ [i].id,&@@ bing@@ [i].@@ nianling@@ ); if(@@ bing@@ [i].@@ nianling@@ >=60@@ )@@ youxian@@ [i]=@@ bing@@ [i].@@ nianling@@ ; else@@ zhengchang@@ [i]=@@ bing@@ [i].@@ nianling@@ ; } for(i=1;i<n;i++) { for(j=0;j<n-i;j++) { if(@@ youxian@@ [j]<@@ youxian@@ [j+1]) { e=@@ youxian@@ [j+1]; youxian@@ [j+1]=@@ youxian@@ [j]; youxian@@ [j]=@@ e; } } } for(i=0;i<n;i++) { for(j=0;j<n;j++) { if(@@ bing@@ [j].@@ nianling@@ ==@@ youxian@@ [i]) { printf("%s\n",@@ bing@@ [j].@@ id); bing@@ [j].@@ nianling@@ =-1; break; } } } for(i=0;i<n;i++) { for(j=0;j<n;j++) { if(@@ bing@@ [j].@@ nianling@@ ==@@ zhengchang@@ [i]) { printf("%s\n",@@ bing@@ [j].@@ id); bing@@ [j].@@ nianling@@ =-1; break; } } } return0; }  
c -1
h -1
intmain() { intn,i,j,@@ k=0,@@ t=0,@@ y@@ [100],@@ x,@@ a[100@@ ]={0},@@ b[100@@ ]; chars@@ [100][@@ 20],@@ temp@@ [@@ 20],@@ s1@@ [100][@@ 20],@@ s2@@ [100][@@ 20]; scanf("%d",&n); for(i=0;i<n;i++) { scanf("%s%d",@@ s[i]@@ ,&@@ y@@ [i]); } for(i=0;i<n;i++) { if(y@@ [i]@@ >=60) { strcpy(@@ s1@@ [k],@@ s[i]); a[k]=@@ y@@ [i]; k++; } } for(i=0;i<@@ k-1;i++) for(j=0;j<@@ k@@ -i-1;j++) if(a[j]@@ <@@ a[j+1@@ ]) { x=@@ a[j]; a[j]=a[j+1]; a[j+1]=@@ x; strcpy(@@ temp,@@ s1@@ [j]); strcpy(@@ s1@@ [j],@@ s1@@ [j+1]); strcpy(@@ s1@@ [j+1],@@ temp); } for(i=0;i<k;i++) printf("%s\n",@@ s1@@ [i],@@ a[i]); for(i=0;i<n;i++) { if(y@@ [i]@@ <60) { strcpy(@@ s2@@ [t@@ ],@@ s[i]); t++; } } for(i=0;i<t;i++) printf("%s\n",@@ s2@@ [i]); return0; }  
c -1
h -1
1


intmain() { int@@ row@@ =0,@@ col@@ =0,@@ num[@@ 110][110@@ ]={0},@@ (*p)@@ [@@ 110@@ ],i,j,@@ a@@ =1,@@ b=@@ col-1@@ ,@@ c,d; p=@@ num; cin>>row>>col; for(i=0;i<row;i++) { for(j=0;j<col;j++) { cin>>@@ *(*(p+i)+j); } } for(i=0;i<col;i++) { a=1; c=i; cout<<@@ *(*(p@@ )@@ +i)@@ <<endl; while(i@@ -1@@ >=0&&@@ a@@ <row) { cout<<@@ *(@@ *(p+@@ a)@@ +i@@ -1)@@ <<endl; a++; i--; } i=@@ c; } for(j=1;j<@@ row@@ ;j++) { b=@@ col-1; d=j; cout<<@@ *(*(p@@ +j)@@ +col@@ -1)@@ <<endl; while(j@@ +1@@ <row@@ &&@@ b@@ -1@@ >=0) { cout<<@@ *(*(p@@ +j+1)@@ +@@ b@@ -1)@@ <<endl; j++; b@@ --; } j=@@ d; } return0; }  
c -1
h -1
main() { chara[@@ 300]; char@@ b[100@@ ],@@ c[100]; gets(a); gets(b); gets(c); int@@ x1,@@ x2,@@ x3@@ ,@@ i,j,k; x1@@ =strlen(a); x2@@ =strlen(b); x3@@ =strlen(c); for(i=0;i<=@@ x1@@ -@@ x2@@ ;i++) { for(j=0;j<=@@ x2@@ -1;j++) { if(b[j]@@ !=@@ a[i+j@@ ]) { break; } } if(j==@@ x2@@ ) { for(k=0;k<=@@ x2@@ -1;k++) { a[i@@ +k@@ ]=@@ c@@ [k]; } break; } } puts(@@ a); getchar();getchar();getchar();getchar();@@ getchar();getchar();@@ getchar();@@ getchar(); }  
c -1
h -1
0

int@@ prime@@ (intn,int@@ m) { inti,@@ total@@ =1; if(n@@ <@@ m)@@ return0; for(i=m@@ ;i<=n;i++) { if(n%i==0) total+=@@ prime@@ (n/i,i); } return@@ total; } voidmain() { intn,@@ b[@@ 2000@@ ],@@ b0@@ ,i; scanf("%d",&n); for(i=0;i<=n-1;i++) { scanf("%d",&@@ b0@@ ); b[i]=@@ prime@@ (@@ b0@@ ,@@ 2); } for(i=0;i<=@@ n-2;i++) { printf("%d\n",@@ b[i]); } printf("%d",b[@@ n-1]); }  
c -1
h -1
intmain() { int@@ zong@@ ; intsz@@ [100][100],@@ m,n,@@ k,i,j,@@ sum1@@ =0,@@ sum2@@ =0,@@ sum3@@ =0,@@ sum4@@ =0,@@ sum=0; scanf("%d",&@@ zong@@ ); for(k=0;k<@@ zong@@ ;k++) { intsum=0; sum1@@ =0; sum2@@ =0; sum3@@ =0; sum4@@ =0; scanf("%d%d",&n,&m); for(i=0;i<m;i++) { scanf("%d",&sz@@ [0]@@ [i]); sum1@@ +=@@ sz[0]@@ [i]; } for(i=1;i<n-1;i++) { for(j=0;j<m;j++) { scanf("%d",&sz[i][j]); } } for(i=0;i<m;i++) { scanf("%d",&@@ sz[@@ n-1@@ ][i]); sum2@@ +=@@ sz[@@ n-1@@ ]@@ [i]; } for(i=1;i<n-1;i++) { sum3@@ +=@@ sz[i]@@ [0]; } for(i=1;i<n-1;i++) { sum4@@ +=@@ sz[i]@@ [@@ m-1@@ ]; } sum=@@ sum1@@ +@@ sum2@@ +@@ sum3@@ +@@ sum4@@ ; printf("%d\n",sum); sum=0; } return0; }  
c -1
h -1
0

inta[@@ 1000],b[1000]; intm,n; voidinput@@ (){ cin>>m>>n; for(inti=1;i<=@@ m@@ ;i++)@@ cin>>a[i]; for(inti=1;i<=@@ n;i++)@@ cin>>b[i]; } void@@ resort@@ (){ sort@@ (a@@ +1,@@ a+@@ m@@ +1); sort(@@ b@@ +1,@@ b+@@ n@@ +1); } voidoutput@@ (){ cout<<@@ a[1]; for(inti=2;i<=@@ m@@ ;i++)@@ cout<<''<<@@ a[i]; for(inti=1;i<=@@ n;i++)@@ cout<<''<<@@ b[i]; } intmain(){ input(); resort@@ (); output@@ (); }  
c -1
h -1
intmain() { intn,i,j,@@ ai@@ ,@@ aj@@ ,@@ bi@@ ,@@ bj@@ ,@@ ans@@ ,@@ x; scanf("%d",&n); ai@@ =@@ n;@@ aj@@ =@@ n; bi@@ =-@@ 1@@ ;@@ bj@@ =-1; for(i=0;i<n;i++) for(j=0;j<n;j++) { scanf("%d",&x); if(x@@ ==0) { if(i<@@ ai@@ )@@ ai@@ =i; if(i>@@ bi@@ )@@ bi@@ =i; if(j<@@ aj@@ )@@ aj@@ =j; if(j@@ >@@ bj@@ )@@ bj@@ =j; } } ans@@ =(@@ bi@@ -@@ ai@@ -1)*(@@ bj@@ -@@ aj@@ -1); printf("%d\n",@@ ans); return0; }  
c -1
h -1
0

structstudent { intnum; int@@ yu@@ ; int@@ shu; structstudent*next; }; voidmain() { structstudent*head,*p1,*p2; intn,i,j,k; scanf("%d",&n); head@@ =p1@@ =p2@@ =(structstudent*)malloc(LEN); scanf("%d%d%d",&p1->num,&p1->@@ yu@@ ,&p1->@@ shu); for(i=1;i<n;i++) { p1=(structstudent*)malloc(LEN); scanf("%d%d%d",&p1->num,&p1->@@ yu@@ ,&p1->@@ shu); p2->next=p1; p2=p1; } p2->next=NULL; for(i=1;i<=@@ 3;i++) {@@ p1=@@ p2=head; while(p1!=NULL) { if(p1->@@ yu@@ +p1->@@ shu@@ >@@ p2->@@ yu@@ +@@ p2->@@ shu@@ ) p2=p1; p1=p1->next; } printf("%d%d\n",@@ p2->@@ num,@@ p2->@@ yu@@ +@@ p2->@@ shu); p2->@@ yu@@ =0; p2->@@ shu@@ =0; } }  
c -1
h -1
int@@ cancer@@ [1000][1000]; voidmain() { inti,n,@@ j,@@ k1@@ ,@@ k2@@ ,@@ m1,@@ m2@@ ,@@ sum=0,@@ s; scanf("%d",&n); for(i=0;i<n;i++) { for(j=0;j<n;j++) scanf("%d",&@@ cancer@@ [i][j]); } for(i=0;i<n;i++) { for(j=0;j<n;j++) if(@@ cancer@@ [i][j]@@ ==0){@@ k1@@ =i;@@ m1@@ =j@@ ;s@@ =1;break;} if(s@@ ==1){@@ s=0;@@ break;} } for(i=n-1;i>=0;i--) { for(j=n-1;j>=0;j--) { if(@@ cancer@@ [i][j]@@ ==0){@@ k2@@ =i;@@ m2@@ =j@@ ;s@@ =1;break;} } if(s@@ ==1)break; } for(i=@@ k1@@ ;i<=@@ k2@@ ;i++) { for(j=@@ m1@@ ;j<=@@ m2@@ ;j++) if(@@ cancer@@ [i][j]==@@ 255@@ )@@ sum++; } printf("%d",sum); }  
c -1
h -1
0

int@@ prime@@ (intn,int@@ m) { inti,@@ total@@ =1; if(n@@ <@@ m)@@ return0; for(i=m@@ ;i<=n;i++) { if(n%i==0) total+=@@ prime@@ (n/i,i); } return@@ total; } voidmain() { intn,@@ b[@@ 2000@@ ],@@ b0@@ ,i; scanf("%d",&n); for(i=0;i<=n-1;i++) { scanf("%d",&@@ b0@@ ); b[i]=@@ prime@@ (@@ b0@@ ,@@ 2); } for(i=0;i<=@@ n-2;i++) { printf("%d\n",@@ b[i]); } printf("%d",b[@@ n-1]); }  
c -1
h -1
voidoutput@@ (intc[],int@@ m,intn) { inti; printf("%d",c[@@ 1@@ ]); for(i=2;i<=@@ n+m;i++) printf("%d",c[i]); } voidcombine@@ (inta[],intb[],int@@ m,intn) { int@@ c[100]; int@@ i,j@@ =1; for(i=1;i<=m;i++) { c[i]=a[i]; } for(i=m@@ +1;i<=@@ n+@@ m@@ ;i++,j++) { c[i]=@@ b[j]; } output@@ (c,@@ m,n); } voidorder@@ (inta[],intb[],int@@ m,intn) { inti,j,temp; for(i=1;i<m;i++) { for(j=1;j<=@@ m@@ -i;j++) { if(a[j]>a[j+1]) { temp=a[j]; a[j]=a[j+1]; a[j+1]=temp; } } } for(i=1;i<n;i++) { for(j=1;j<=@@ n@@ -i;j++) { if(b[j]>b[j+1]) { temp=@@ b[j]; b[j]=b[j+1]; b[j+1]=@@ temp; } } } combine@@ (a,b,m,n); } voidinput@@ (void) { inti,@@ a[100],b[100],@@ m,n; scanf("%d%d",&m,&n); for(i=1;i<=m;i++) scanf("%d",&a[i]); for(i=1;i<=n;i++) scanf("%d",&b[i]); order@@ (a,b,m,n); } intmain() { input(); return0; }  
c -1
h -1
0

intnum=0; voidf@@ (int@@ k,int@@ n) { inti,@@ flag=0; for(i=k@@ ;i<=n;i++) { if(n%i==0) { f(@@ i,@@ n@@ /i); flag=1; } } if((@@ flag@@ ==0&&@@ k@@ <=@@ n)@@ ||@@ n@@ ==1) num++; } intmain() { inti,n,@@ m; cin>>m; for(i=1;i<=m;i++) { cin>>n; f(@@ 2,@@ n); cout<<num<<endl; num=0; } return0; }  
c -1
h -1
intmain() { chara[501],b[501]; double@@ c,d; int@@ j=0,@@ n,@@ i,@@ e=0,@@ m; scanf("%lf%s%s",&@@ c,@@ a,b); n@@ =strlen(a); m@@ =strlen(b); if(n@@ !=@@ m) { e=1; } else{ for(i=0;i<n;i++) { if((a[i]!='@@ A'&&a[i]!='T'&&a[i]!='C'&&a[i]!='G')||(b[i]!='A'&&b[i]!='T'&&b[i]!='C'&&b[i]!='@@ G')) { e=1; } }} if(e@@ ==1) { printf("error"); } while(@@ e@@ ==0) { for(i=0;i<n;i++) { if(a[i]==b[i]) { j++; } } d@@ =1.0*@@ j@@ /n; if(d@@ >=@@ c) { printf("yes"); } else { printf("no"); } e=1; } return0; }  
c -1
h -1
0

intmain() { intn,i,j,k,@@ t; inta[20000]; scanf("%d",&n); for(i=0;i<n;i++){ scanf("%d",&a[i]); } printf("%d",a[0]); for(j=1;j<@@ n;j++){ for(k=0;k<j@@ ;k++){ if(a[j]==@@ a[k]) a[j]=0; } if(a[j]@@ ) printf("%d",@@ a[j]); } return0; }  
c -1
h -1
struct@@ person { intnum; intchinese; intmath; inttotal; }@@ student[@@ 110000@@ ]; intmain() { intn,i,@@ max1@@ =0,@@ count1@@ =0,@@ max2@@ =0,@@ count2@@ =0,@@ max3@@ =0,@@ count3@@ =0,@@ number@@ =0,@@ sum=0; scanf("%d",&n); for(i=0;i<n;i++) { scanf("%d",&@@ student[i].@@ num); scanf("%d",&@@ student[i].@@ chinese); scanf("%d",&@@ student[i].@@ math); } for(i=0;i<n;i++) { student[i].@@ total=@@ student[i].@@ chinese+@@ student[i].@@ math; } for(i=n-1;i>=0;i--) { if(@@ student[i].@@ total@@ >=@@ max1@@ ) { max1=@@ student[i].@@ total; count1@@ =i; } } number=@@ student@@ [0].@@ num; sum=@@ student@@ [0].@@ total; student@@ [0].@@ num=@@ student[@@ count1@@ ].@@ num; student@@ [0].@@ total=@@ student[@@ count1@@ ].@@ total; student[@@ count1@@ ].@@ num=@@ number; student[@@ count1@@ ].@@ total=@@ sum; number@@ =0; sum=0; for(i=n-1@@ ;i>=1;i--) { if(@@ student[i].@@ total@@ >=@@ max2@@ ) { max2=@@ student[i].@@ total; count2@@ =i; } } number=@@ student@@ [1].@@ num; sum=@@ student@@ [1].@@ total; student@@ [1].@@ num=@@ student[@@ count2@@ ].@@ num; student@@ [1].@@ total=@@ student[@@ count2@@ ].@@ total; student[@@ count2@@ ].@@ num=@@ number; student[@@ count2@@ ].@@ total=@@ sum; number@@ =0; sum=0; for(i=n-1;i@@ >=@@ 2@@ ;i--) { if(@@ student[i].@@ total@@ >=@@ max3@@ ) { max3=@@ student[i].@@ total; count3@@ =i; } } number=@@ student@@ [2].@@ num; sum=@@ student@@ [2].@@ total; student@@ [2].@@ num=@@ student[@@ count3@@ ].@@ num; student@@ [2].@@ total=@@ student[@@ count3@@ ].@@ total; student[@@ count3@@ ].@@ num=@@ number; student[@@ count3@@ ].@@ total=@@ sum; for(i=0;i<3;i++) { printf("%d%d\n",@@ student[i].@@ num,@@ student[i].@@ total); } return0; }  
c -1
h -1
0

structbook{ int@@ num1@@ ; char@@ au@@ [27]; }@@ bk@@ [1000]; struct@@ author@@ { charname@@ ; inta; int@@ num2@@ [1000]; }@@ aur@@ [27]; intmain() { intn,i,j; struct@@ author@@ max; max@@ .@@ a=0; for(j=0;j<26@@ ;j++){ aur@@ [j].@@ name@@ =@@ 65@@ +j@@ ; aur@@ [j].@@ a=0; } scanf("%d",&n); for(i=0;i<n;i++){ scanf("%d%s",&@@ bk[i].@@ num1,@@ bk[i].@@ au); } for(i=0;i<n;i++){ for(j=0;@@ bk[i].@@ au@@ [j]@@ !='\0';j++){ aur@@ [@@ bk[i].@@ au@@ [j]-65@@ ].@@ num2@@ [@@ aur@@ [@@ bk[i].@@ au@@ [j]-65@@ ].@@ a@@ ]=@@ bk[i].@@ num1@@ ; aur@@ [@@ bk[i].@@ au@@ [j]-65@@ ].@@ a++; } } for(i=0;i<26;i++){ if(@@ aur@@ [i].@@ a@@ >max@@ .@@ a)@@ max=@@ aur@@ [i]; } printf("%c\n%d\n",@@ max@@ .@@ name,@@ max@@ .@@ a); for(i=0;i<@@ max@@ .@@ a;i++){ printf("%d\n",@@ max@@ .@@ num2@@ [i]); } return0; }  
c -1
h -1
intmain(){ intn,k; int@@ flag=0; inti; scanf("%d",&n); int*@@ shuzu@@ =@@ (int*)malloc(sizeof(int)*n); for(i=0;i<n;i++){ scanf("%d",&@@ shuzu@@ [i]); } printf("%d",@@ shuzu@@ [0]); for(i=1;i<n;i++){ for(k=0;k<@@ i@@ ;k++){ if(shuzu@@ [i]==@@ shuzu@@ [k]@@ ){ flag=1; break; } } if(flag@@ ==0){ printf("%d",@@ shuzu@@ [i]); } flag=0; } free(@@ shuzu@@ ); return0; }  
c -1
h -1
0

intmain() { intn; scanf("%d",&n); inti,j,k; inta,b; ints@@ [100][100]; intsum; for(i=0;i<=n-1;i++) { scanf("%d%d",&a,&b); for(j=0;j<=@@ a@@ -1;j++) { for(k=0;k<=@@ b@@ -1;k++) { scanf("%d",&@@ s[j]@@ [k]); } } sum=0; for(k=0;k<=@@ b@@ -1;k++) { sum=sum+@@ s[@@ 0][@@ k@@ ]; } for(j=1;j<=@@ a@@ -1;j++) { sum=sum+@@ s[j]@@ [b@@ -1]; } for(k=0;k<=@@ b@@ -2@@ ;k++) { sum=sum+@@ s[@@ a@@ -1@@ ][k@@ ]; } for(j=1;j<=@@ a@@ -2@@ ;j++) { sum=sum+@@ s[j]@@ [0]; } printf("%d\n",sum); } return0; }  
c -1
h -1
intm,n; void@@ nem@@ (int@@ num1@@ [100],int@@ num2@@ [100@@ ]) { inti; scanf("%d%d",&m,&n); for(i=0;i<m;i++) scanf("%d",&@@ num1@@ [i]); for(i=0;i<n;i++) scanf("%d",&@@ num2@@ [i]); } void@@ pai@@ (int@@ num@@ [100],int@@ x) { inti,j,t; for(j=0;j<@@ x@@ -1;j++) for(i=0;i<x@@ -1-j;i++) if(num@@ [i]>@@ num@@ [i+1]) { t=@@ num[i]; num[i]=@@ num@@ [i+1]; num@@ [i+1]=@@ t; } } void@@ he@@ (int@@ num1@@ [100],int@@ num2@@ [100],int@@ num@@ [100@@ ]) { inti; for(i=0;i<m;i++) num[i]=@@ num1@@ [i]; for(i=m;i<@@ m+n;i++) num[i]=@@ num2@@ [i-@@ m]; } void@@ printnum@@ (int@@ num@@ [100@@ ]) { inti; printf("%d",@@ num@@ [0]); for(i=1;i<@@ m+n;i++) printf("%d",@@ num[i]); } intmain() { intnum@@ [100],@@ num1@@ [100],@@ num2@@ [100]; nem@@ (@@ num1,num2@@ ); pai@@ (@@ num1,@@ m); pai@@ (@@ num2@@ ,n); he@@ (@@ num1,num2@@ ,@@ num); printnum@@ (@@ num); return0; }  
c -1
h -1
0

struct@@ books@@ { intnum; charwriter@@ [26]; struct@@ books@@ *next; }; intm; struct@@ books@@ *creat@@ () { struct@@ books@@ *head,*p1,*p2; inti; p2@@ =p1@@ =(struct@@ books@@ *)malloc(sizeof(struct@@ books@@ )); for(i=1;i<=@@ m;i++){ if(i@@ ==1)head=p1; scanf("%d%s",&p1->num,p1->@@ writer); p2=p1; if(i!=@@ m){ p1=(struct@@ books@@ *)malloc(sizeof(struct@@ books@@ )); p2->next=p1; } else@@ p2->next=NULL; } returnhead; } voidmain() { int@@ character@@ [26]; struct@@ books@@ *head,*p; inti,@@ max=0,@@ imax@@ ; for(i=0;i<26@@ ;i++)@@ character@@ [i]=0; scanf("%d",&m); head=creat(); p=head; while(1){ i=0; while(@@ *(@@ p->@@ writer@@ +i)@@ ){ character@@ [@@ *(@@ p->@@ writer@@ +i)@@ -'A']++; i++; } p=p->next; if(p@@ ==NULL@@ )break; } for(i=0;i<26;i++){ if(@@ character@@ [i]@@ >max){ max=@@ character@@ [i]; imax@@ =i; } } printf("%c\n%d\n",@@ imax@@ +'A',@@ max); p=head; while(1){ i=0; while(@@ *(@@ p->@@ writer@@ +i)@@ ){ if(*(@@ p->@@ writer@@ +i)@@ ==@@ imax@@ +'A'@@ ){ printf("%d\n",p->num); break; } i++; } p=p->next; if(p@@ ==NULL@@ )break; } }  
c -1
h -1
intmain(){ charstr@@ [@@ 600@@ ],@@ subStr@@ [260],@@ rep@@ [260@@ ]; memset(@@ str,@@ 0,sizeof(@@ str@@ )); scanf("%s%s%s",@@ str,@@ subStr@@ ,@@ rep); char*@@ pos@@ =@@ strstr(@@ str,@@ subStr@@ ); if(@@ pos@@ !=NULL@@ ){ int@@ len=strlen(@@ rep); for(inti=0;i<@@ len@@ ;i++){ *@@ pos@@ ++@@ =@@ rep@@ [i]; } } printf("%s",str); }  
c -1
h -1
0

int@@ shuliang@@ (intm,int@@ n); main() { intn; scanf("%d",&n); for(inti=1;i<=n;i++) { int@@ x,@@ q,@@ answer@@ =1; scanf("%d",&x); q=@@ sqrt(@@ x)@@ +1; for(intj=@@ 2@@ ;j<@@ q@@ ;j++) { if(x@@ %j==0) answer@@ +=@@ shuliang@@ (@@ j,@@ x@@ /j@@ ); } printf("%d@@ \n@@ \n",@@ answer@@ ); } } int@@ shuliang@@ (intm,int@@ n) { int@@ q,@@ answer@@ =0,@@ y=0; q=@@ sqrt(n@@ )@@ +1; for(intj=@@ m@@ ;j<@@ q@@ ;j++) { if(n@@ %j==0) answer@@ +=@@ shuliang@@ (@@ j,@@ n@@ /j@@ ),@@ y=1; } if(y@@ ==1) return@@ answer@@ +1; else return1; }  
c -1
h -1
intmain() { intn,k,i,j,@@ a[1000],@@ m=0; scanf("%d%d",&n,&k); for(i=0;i<n;i++) { scanf("%d",&a[i]); } for(i=0;i<n;i++) { for(j=0;j<n;j++) { if(a[i]+a[j]==@@ k@@ &&i!=@@ j) { printf("yes"); m++; break; } if(i==@@ n-2@@ &&j@@ ==@@ n-1) { printf("no"); m++; break; } } if(m==1) { break; } } return0; }  
c -1
h -1
0

intmain() { intn,k,@@ i,j=0,@@ num,@@ sum=0; cin>>n>>k; inta[n]; for(i=0;i<n;i++) { cin>>a[i]; a[j]=@@ a[i]; j++; } for(i=0;i<n;i++) { for(j=i+1;j<n;j++) { if(a[i]+a[j]==k) num@@ =1; else@@ num=0; sum=sum+@@ num; } } if(sum@@ ==0) cout<<"no@@ "<<endl; else cout<<"yes@@ "<<endl; return0; }  
c -1
h -1
structstudent { intid; intchinese; intmath; }@@ student[@@ 100000]; voidmain() { intn,i,j,@@ sum[@@ 100000@@ ]={0},@@ h1@@ =0,@@ h2@@ =0,@@ h3@@ =0; scanf("%d",&n); for(i=0;i<n;i++){ scanf("%d%d%d",&@@ student[i].@@ id,&@@ student[i].@@ chinese@@ ,&@@ student[i].@@ math); } int@@ first@@ =0; int@@ sec@@ =0; int@@ thi@@ =0; for(j=0;j<n;j++){ if(@@ first@@ <@@ student[j].@@ chinese+@@ student[j].@@ math@@ ) { thi@@ =@@ sec@@ ; h3@@ =@@ h2@@ ; sec@@ =@@ first@@ ; h2@@ =@@ h1@@ ; first=@@ student[j].@@ chinese+@@ student[j].@@ math; h1@@ =@@ student[j].@@ id; } elseif((@@ first@@ >@@ student[j].@@ chinese+@@ student[j].@@ math@@ )&&(@@ sec@@ <@@ student[j].@@ chinese+@@ student[j].@@ math@@ )) { thi@@ =@@ sec@@ ; h3@@ =@@ h2@@ ; sec@@ =@@ student[j].@@ chinese+@@ student[j].@@ math; h2@@ =@@ student[j].@@ id; } elseif((@@ sec@@ >@@ student[j].@@ chinese+@@ student[j].@@ math@@ )&&(@@ thi@@ <@@ student[j].@@ chinese+@@ student[j].@@ math@@ )) { thi@@ =@@ student[j].@@ chinese+@@ student[j].@@ math; h3@@ =@@ student[j].@@ id; } elseif((@@ first@@ ==@@ student[j].@@ chinese+@@ student[j].@@ math@@ )&&(@@ sec@@ <@@ student[j].@@ chinese+@@ student[j].@@ math@@ )) { thi@@ =@@ sec@@ ; h3@@ =@@ h2@@ ; sec@@ =@@ student[j].@@ chinese+@@ student[j].@@ math; h2@@ =@@ student[j].@@ id; } elseif((@@ sec@@ ==@@ student[j].@@ chinese+@@ student[j].@@ math@@ )&&(@@ thi@@ <@@ student[j].@@ chinese+@@ student[j].@@ math@@ )) { thi@@ =@@ student[j].@@ chinese+@@ student[j].@@ math; h3@@ =@@ student[j].@@ id; } } printf("%d%d\n%d%d\n%d@@ %d",@@ h1@@ ,@@ first@@ ,@@ h2@@ ,@@ sec@@ ,@@ h3@@ ,@@ thi@@ ); }  
c -1
h -1
0

intmain() { introw,@@ line@@ ,@@ rownow@@ ,@@ linenow@@ ,@@ n,i,j,@@ a[@@ 10000]; scanf("%d%d",&row,&@@ line@@ ); for(j=0;j<=@@ row@@ *@@ line@@ -1;j++) { scanf("%d",&a[j]); } for(i=0;i<=@@ row@@ +@@ line@@ -1;i++) { rownow@@ =0;@@ linenow@@ =i@@ -@@ rownow@@ ; for(;@@ rownow@@ <=row-1@@ &&@@ linenow@@ >=0;@@ rownow@@ ++,@@ linenow@@ --) { if(@@ linenow@@ >=@@ line@@ )continue; n=@@ rownow@@ *@@ line@@ +@@ linenow@@ ; printf("%d\n",@@ a[n@@ ]); } } scanf("%d",&@@ j); return0; }  
c -1
h -1
inta[@@ 1000],b[1000]; intm,n; voidinput@@ (){ cin>>m>>n; for(inti=1;i<=@@ m@@ ;i++)@@ cin>>a[i]; for(inti=1;i<=@@ n;i++)@@ cin>>b[i]; } void@@ resort@@ (){ sort@@ (a@@ +1,@@ a+@@ m@@ +1); sort(@@ b@@ +1,@@ b+@@ n@@ +1); } voidoutput@@ (){ cout<<@@ a[1]; for(inti=2;i<=@@ m@@ ;i++)@@ cout<<''<<@@ a[i]; for(inti=1;i<=@@ n;i++)@@ cout<<''<<@@ b[i]; } intmain(){ input(); resort@@ (); output@@ (); }  
c -1
h -1
0

structpatient { charnum[10]; intage; }@@ pat@@ [100]; intmain() { intn,i,@@ m,@@ k,@@ f@@ ,j; char@@ e@@ [10]; m=0; scanf("%d",&n); for(i=0;i<n;i++){ scanf("%s%d",&@@ pat[i].@@ num,&@@ pat@@ [i].age); if(pat@@ [i].age>=60){ strcpy(@@ e,@@ pat[i].@@ num); f=@@ pat@@ [i].age; for(k=i@@ ;k@@ >@@ m@@ ;k@@ --){ strcpy(@@ pat@@ [k].@@ num,@@ pat@@ [k-1@@ ].@@ num); }@@ strcpy(@@ pat@@ [m@@ ].num,@@ e); pat@@ [m@@ ].age=@@ f; m++; } }@@ for(i=0;i<m;i++){ for(k=0;k<@@ i@@ ;k++){ if(pat@@ [i].age@@ >@@ pat@@ [k@@ ].age){ f=@@ pat@@ [i].age; strcpy(@@ e,@@ pat[i].@@ num); for(j=i@@ ;j>@@ k@@ ;j--){ pat@@ [j].age@@ =@@ pat@@ [j-1].@@ age; strcpy(@@ pat[j].@@ num,@@ pat@@ [j-1].@@ num); }@@ pat@@ [k@@ ].age=@@ f; strcpy(@@ pat@@ [k].@@ num,@@ e); } } } for(i=0;i<n;i++){ printf("%s\n",@@ pat[i].@@ num); } return0; }  
c -1
h -1
voidmain() { inti,j,k,@@ num[@@ 16],@@ f; scanf("%d",&@@ num@@ [1]); do { k=1; f=0; do { k++; scanf("%d",&@@ num@@ [k]); } while(@@ num@@ [k]@@ !=0); for(i=1;i<=@@ k-1;i++) for(j=1;j<=@@ k@@ -1;j++) if(num@@ [i]==@@ num[j]@@ *2) f@@ ++; printf("%d\n",@@ f); scanf("%d",&@@ num@@ [1]); } while(@@ num@@ [1]@@ !=-1); }  
c -1
h -1
0

intmain(){ doublea,@@ y=0,@@ m,n,@@ t; inti,@@ q=0; char@@ dna1@@ [501]; char@@ dna2@@ [501]; scanf("%lf",&a); scanf("%s",@@ dna1); scanf("%s",@@ dna2); m=strlen(@@ dna1); n=strlen(@@ dna2); if(m==@@ n){ for(i=0;i<m;i++){ if((@@ dna1@@ [i]=='A'||@@ dna1@@ [i]=='T'||@@ dna1@@ [i]=='C'||@@ dna1@@ [i]=='@@ G')&&(@@ dna2@@ [i]=='A'||@@ dna2@@ [i]=='T'||@@ dna2@@ [i]=='C'||@@ dna2@@ [i]=='@@ G')){ }else{ q=1; break; } } for(i=0;i<m;i++){ if(q@@ ==1){ break; }elseif(@@ dna1@@ [i]==@@ dna2@@ [i]){ y++; }elseif(@@ dna1@@ [i]!=@@ dna2@@ [i]){ } } t=@@ y@@ /@@ m; }@@ elseif(m@@ !=@@ n){ q=1; } if((@@ t@@ >=@@ a@@ &&@@ a@@ !=0&&@@ q@@ ==0)||(@@ q@@ ==0&&@@ t@@ >@@ a@@ &&@@ a@@ ==0)@@ ){ printf("yes"); }elseif(@@ (@@ t@@ <a@@ )&&(@@ a@@ !=0)&&(@@ q@@ ==0)||(@@ (@@ q@@ ==0)&&(@@ t@@ ==0)&&(@@ a@@ ==0)@@ )){ printf("no"); }elseif(@@ q@@ ==1){ printf("error"); } return0; }  
c -1
h -1
struct{ charID[10]; int@@ nian@@ ; }@@ patient@@ [100],@@ old@@ [100],@@ qita@@ [100],@@ temp; intmain() { intn,i,k,@@ e,@@ num,@@ j; scanf("%d",&n); for(i=0;i<n;i++){ scanf("%s%d",@@ patient@@ [i].@@ ID,&@@ patient@@ [i].@@ nian@@ ); } num=0; for(i=0;i<n;i++){ if(@@ patient@@ [i].@@ nian@@ >=60){ num=num@@ +1; } } k=0; for(i=0;i<n;i++){ if(@@ patient@@ [i].@@ nian@@ >=60){ old@@ [k]=@@ patient@@ [i]; k=k+1; } } k=0; for(i=0;i<n;i++){ if(@@ patient@@ [i].@@ nian@@ <60){ qita@@ [k]=@@ patient@@ [i]; k=k+1; } } for(j=1;j<@@ num@@ ;j++){ for(k=0;k<@@ num@@ -j@@ ;k++){ if(old@@ [k+1@@ ].@@ nian@@ >@@ old@@ [k].@@ nian@@ ){ temp=@@ old@@ [k+1]; old@@ [k+1]=@@ old@@ [k]; old@@ [k]=@@ temp; } } } for(k=0;k<@@ num@@ ;k++){ printf("%s\n",old@@ [k].@@ ID); } for(k=0;k<@@ n-@@ num@@ ;k++){ printf("%s\n",@@ qita@@ [k].@@ ID); } return0; }  
c -1
h -1
0

intmain(intargc,char*argv[]) { inta,@@ b@@ ,*@@ p,@@ i,j,k; p=@@ (int*)malloc(@@ 11000@@ *sizeof(int)); scanf("%d%d",&a,&b); for(i=0;i<@@ a*@@ b;i++) { scanf("%d",p@@ +i); } for(i=0;i<b;i++) { k=i; j=0; while(k@@ >=0@@ &&j@@ <@@ a) { printf("%d\n",*(p@@ +k@@ +j@@ *@@ b@@ )); k--; j++; } } for(i=1;i<=@@ a;i++) { k=i; j=0; while(k@@ <a@@ &&j@@ <@@ b) { printf("%d\n",@@ *(p+@@ b@@ -1-j@@ +k@@ *@@ b@@ )); j++; k++; } } }  
c -1
h -1
int@@ nian@@ (intm) { if((@@ m@@ %@@ 400==0)||(@@ (m@@ %100!=0@@ )&&(@@ m@@ %@@ 4@@ ==0)@@ )) return1; else return0; } intmain() { inti,@@ s=0,@@ n,@@ y,@@ r,@@ a[@@ 12@@ ]; scanf("%d%d%d",&@@ n,&@@ y,&@@ r); a[0]=@@ a[2@@ ]=a[@@ 4@@ ]=a[@@ 6@@ ]=a[@@ 7@@ ]=a[@@ 9@@ ]=a[@@ 11@@ ]=31; a[@@ 3@@ ]=a[@@ 5@@ ]=a[@@ 8@@ ]=a[@@ 10@@ ]=30; if(@@ nian@@ (n@@ )) a[1]=@@ 29@@ ;@@ else@@ a[1]=@@ 28; for(i=0;i<@@ y@@ -1;i++) s+=@@ a[i]; s+=@@ r; printf("%d",s); return0; }  
c -1
h -1
0

intmain() { inta,b; scanf("%d%d",&a,&b); int@@ c[100]; int@@ d@@ [100]; inti,@@ t,@@ r; i=0; do { scanf("%d",&@@ c[i]); i++; }@@ while(i<@@ a); i=0; do { scanf("%d",&@@ d[i]); i++; }@@ while(i<@@ b); t=0; do { i=0; while(i<@@ a@@ -1@@ -@@ t) { if(c@@ [i]>@@ c@@ [i+1]) { r=@@ c[i]; c[i]=@@ c@@ [i+1]; c@@ [i+1]=@@ r; } i++; } t++; }while(@@ t@@ <a@@ -1); t=0; do { i=0; while(i<@@ b@@ -1@@ -@@ t) { if(d@@ [i]>@@ d@@ [i+1]) { r=@@ d[i]; d[i]=@@ d@@ [i+1]; d@@ [i+1]=@@ r; } i++; } t++; }while(@@ t@@ <b@@ -1); printf("%d",c@@ [0]); i=1; do { printf("%d",c[i]); i++; }@@ while(i<@@ a); i=0; do { printf("%d",@@ d[i]); i++; }@@ while(i<@@ b); return0; }  
c -1
h -1
struct@@ RAT { int@@ weight@@ ; char@@ color@@ [10]; struct@@ RAT@@ *next; }; intN@@ ; intmain() { voidsort@@ (struct@@ RAT@@ *p@@ ); inti; scanf("%d",&N); struct@@ RAT@@ *head,*p1,*p2; p1=(struct@@ RAT@@ *)malloc(@@ Len@@ ); scanf("%s%d",p1->@@ color@@ ,&p1->@@ weight@@ ); p1->next=NULL; head=p1; p2=p1; for(i=1;i<@@ N;i++) { p1=(struct@@ RAT@@ *)malloc(@@ Len@@ ); scanf("%s%d",p1->@@ color@@ ,&p1->@@ weight@@ ); p1->next=NULL; p2->next=p1; p2=p1; } sort(@@ head); for(p1=@@ head;@@ p1@@ !=NULL;@@ p1=p1->next) printf("%s\n",@@ p1->@@ color@@ ); return0; } voidsort@@ (struct@@ RAT@@ *p@@ ) { intj,@@ i; struct@@ RAT@@ *@@ pt@@ ,@@ temp; for(j=0;j<@@ N@@ ;j++) for(@@ pt@@ =@@ p,@@ i@@ =0;i<@@ N@@ -j@@ -1;@@ pt@@ =@@ pt@@ ->next@@ ,i++) { if((@@ pt@@ ->@@ weight@@ <60&&@@ pt@@ ->next@@ ->@@ weight@@ >=60@@ )||(@@ pt@@ ->@@ weight@@ >=60&&@@ pt@@ ->next@@ ->@@ weight@@ >=60&&@@ pt@@ ->@@ weight@@ <@@ pt@@ ->next@@ ->@@ weight@@ )) { temp@@ =*@@ pt@@ ; pt@@ ->@@ weight@@ =@@ pt@@ ->next@@ ->@@ weight@@ ; strcpy(@@ pt@@ ->@@ color@@ ,@@ pt@@ ->next@@ ->@@ color@@ ); pt@@ ->next@@ ->@@ weight@@ =@@ temp.@@ weight@@ ; strcpy(@@ pt@@ ->next@@ ->@@ color@@ ,@@ temp.@@ color@@ ); } } }  
c -1
h -1
0

intmain(){ double@@ p; inti,@@ cnt@@ ; chars1@@ [@@ 505@@ ],@@ s2[@@ 505@@ ]; cin>>@@ p; cin>>@@ s1@@ >>@@ s2; if(strlen(@@ s1@@ )!=strlen(@@ s2@@ )){ puts(@@ "@@ error@@ "); return0; } for(i=@@ cnt@@ =0;@@ s1@@ [i]@@ ;i++){ if(s1@@ [i]!='A'&&@@ s1@@ [i]!='T'&&@@ s1@@ [i]!='G'&&@@ s1@@ [i]!='@@ C'){ puts(@@ "@@ error@@ "); return0; }@@ if(s2@@ [i]!='A'&&@@ s2@@ [i]!='T'&&@@ s2@@ [i]!='G'&&@@ s2@@ [i]!='@@ C'){ puts(@@ "@@ error@@ "); return0; } if(s1[i]==s2@@ [i]){ cnt@@ ++; } } if(@@ cnt@@ *1.0@@ /i@@ >@@ p@@ ){ puts(@@ "@@ yes@@ "); }else puts(@@ "@@ no@@ "); }  
c -1
h -1
intmain() { intn,k,i,j,@@ l; inta[100@@ ],@@ c[100],@@ d@@ [100]; char@@ b[100@@ ][@@ 11]; scanf("%d",&n); for(i=0;i<n;i++) { scanf("%s",@@ b[i]); scanf("%d",&a[i]); d[i]=@@ a[i]; c[i]=@@ i; } for(j=0;j<n;j++) { for(i=0;i<n-1;i++) { if(d@@ [i]<@@ d@@ [i+1]) { k=@@ d[i]; d[i]=@@ d@@ [i+1]; d@@ [i+1]=@@ k; k=@@ c[i]; c[i]=@@ c@@ [i+1]; c@@ [i+1]=@@ k; } } } for(j=0;j<n;j++) { if(d@@ [j]@@ <60) { l@@ =j; break; } } for(j=0;j<l;j++) { k=@@ c[j]; printf("%s\n",@@ b[k@@ ]); } for(i=0;i<n;i++) { if(a[i]@@ <60) { printf("%s\n",@@ b[i]); } } return0; }  
c -1
h -1
0

int@@ divide@@ (int,int); intmain(void) { intn,@@ a; cin>>n; while(n@@ !=0) { cin>>a; cout<<@@ divide@@ (a,@@ 2)<<endl; n--; } return0; } int@@ divide@@ (intx,int@@ t) { inti,@@ sum=0; if(x@@ ==1)@@ return1; for(i=@@ t@@ ;i<=@@ x;i++) { if(x@@ %i==0)@@ sum+=@@ divide@@ (x/i,i); } returnsum; }  
c -1
h -1
int@@ sort@@ (int@@ arr@@ [],int@@ n); int@@ bubblesort@@ (int@@ arr@@ [],int@@ n); int@@ bubblesort@@ (int@@ arr@@ [],int@@ n) { int@@ sorted@@ =0; while(@@ sorted@@ <@@ n-1) { int@@ changed@@ =0; inti; for(i=0;i<n-@@ sorted@@ -1;i++) { if(@@ arr@@ [i]>@@ arr@@ [i+1]) { int@@ t=@@ arr@@ [i+1]; arr@@ [i+1]=@@ arr@@ [i]; arr@@ [i]=@@ t; changed@@ =1; } } if(!@@ changed@@ ) break; sorted@@ ++; } return@@ arr@@ [n-1]; } intmain() { intn,@@ arr@@ [100000],@@ k,@@ i=0,@@ index@@ =0; scanf("%d%d",&n,&k); for(i=0;i<n;i++) { scanf("%d",&@@ arr@@ [i]); } bubblesort@@ (@@ arr@@ ,n); if(@@ arr@@ [0]+@@ arr@@ [1]@@ >@@ k@@ ||@@ arr@@ [n-1@@ ]+@@ arr@@ [@@ n-2@@ ]<@@ k) { printf("no"); return0; } int@@ flag=0; int@@ n1@@ =0,@@ n2@@ =@@ n-1; while(@@ n1@@ <@@ n2) { if(@@ arr@@ [@@ n1@@ ]+@@ arr@@ [@@ n2@@ ]==@@ k) { printf("yes"); return0; } if(@@ arr@@ [@@ n1@@ ]+@@ arr@@ [@@ n2@@ ]>@@ k) n2@@ --; else n1@@ ++; } printf("no"); return0; }  
c -1
h -1
0

intmain() {@@ intn,k,i,j,@@ a[@@ 1009@@ ],@@ t,@@ l; scanf("%d%d",&n,&@@ k@@ );@@ t@@ =0;@@ l=0; for(i=1;i<=n;i++) scanf("%d",&a[i]); for(i=1;i<=n;i++) { for(j=i+1;j<=n;j++) { if(k==@@ a[i]+@@ a[j]) { l=l@@ +1; } else t=t+1; } } if(t==@@ n@@ *(@@ n-1)@@ /@@ 2) printf("no"); elseif(@@ l@@ >=@@ 1) printf("yes"); }  
c -1
h -1
intmain() { inta,b,c,@@ d; intf@@ [12]={31,28,31,30,31,30,31,31,30,31,30,31}; scanf("%d%d%d",&a,&b,&c); intsum=0,@@ i; for(i=0;i<b@@ -1;i++) { sum=sum+@@ f[i]; } if(((@@ a%@@ 4==0)&&(@@ a%100!=0@@ )@@ )||(@@ a%400==0)) { if(b@@ <@@ 3) { d=@@ sum@@ +c; } else { d=@@ sum@@ +1@@ +c; } } else { d=@@ sum@@ +c; } printf("%d",d); return0; }  
c -1
h -1
0

intnum; int@@ fjys@@ (intn,@@ intm,@@ inti,@@ int@@ d@@ ,int@@ ji@@ [@@ 20@@ ]) { inta; for(a@@ =i;@@ a@@ <m;@@ a++) { if(n%@@ a@@ ==0) { ji@@ [d@@ ]=a; int@@ chenji@@ =1,@@ k; for(k=0;k<=@@ d@@ ;k++) chenji@@ =@@ chenji@@ *@@ ji@@ [k]; if(@@ chenji@@ ==@@ m) { num++; break; } else fjys@@ (n@@ /@@ a,@@ m,@@ a,@@ d@@ +1,@@ ji@@ ); } } returnnum; } intmain() { intm,n,@@ j,@@ result@@ =0,@@ ji@@ [@@ 20@@ ]={0}; cin>>m; for(j=1;j<=m;j++) { num=0; cin>>n; result=@@ fjys@@ (n,@@ n,@@ 2,@@ 0,@@ ji@@ ); cout<<@@ result@@ +1<<endl; } return0; }  
c -1
h -1
int@@ shirunnian@@ (int@@ d) { if(d@@ %@@ 4==0) { if(d@@ %@@ 100==0) { if(d@@ %@@ 400==0) return1; else@@ return0; } else@@ return1; } else@@ return0; } int@@ dijitian@@ (inta,int@@ b,int@@ c) { inti; intsum=0; intdays@@ =0; for(i=0;i<b;i++) { if(i==1||i==3||i==5||i==7||i==8||i==10@@ ||i==@@ 12) days@@ +=@@ 31; elseif(i==@@ 4||i==6||i==9||i==11) days@@ +=@@ 30; elseif(i==@@ 2) { if(@@ shirunnian@@ (@@ a)@@ ==1) { days@@ +=@@ 29; } elseif(@@ shirunnian@@ (@@ a)@@ ==0) { days@@ +=@@ 28; } } } sum=@@ days@@ +c; returnsum; } intmain() { intyear,month,day,@@ tianshu@@ =0; scanf("%d%d%d",&year,&month,&day); tianshu@@ =@@ dijitian@@ (@@ year,@@ month,@@ day); printf("%d",@@ tianshu@@ ); return0; }  
c -1
h -1
0

intmain(){ intn,k,i,@@ m,@@ sz1@@ [1000],@@ sz2@@ [1000]; intt=0; scanf("%d%d\n",&n,&@@ k); for(i=0;i<n;i++){ scanf("%d",&(@@ sz1@@ [i]@@ )); sz2@@ [i]=@@ sz1@@ [i]; }@@ for(m=0;m@@ <n;m++){ for(i=0;i<n;i++){ if(k==@@ sz1@@ [m@@ ]+@@ sz2@@ [i]@@ ){@@ t@@ ++;} } }@@ if(t@@ >0){ printf("yes"); }@@ else{printf("no");} return0; }  
c -1
h -1
intmain() { inty,m,@@ x,@@ i,@@ sum=0; scanf("%d%d%d",&y,&@@ m,&@@ x); if(y%@@ 4==0&&y%100!=0@@ ||@@ y%400==0) { int@@ d[@@ 13]={0,31,@@ 29,31,30,31,30,31,31,30,31,30,31}; for(i=0;i<m;i++) { sum=sum+@@ d[i]; } printf("%d",@@ sum@@ +@@ x); } else { int@@ d[@@ 13]={0,31,28,31,30,31,30,31,31,30,31,30,31}; for(i=0;i<m;i++) { sum=sum+@@ d[i]; } printf("%d",@@ sum@@ +@@ x); } return0; }  
c -1
h -1
0

int@@ dividemin@@ (inta,int@@ minyinzi@@ ){ intnum=0; if(a@@ ==1)@@ num++; else@@ for(inti=@@ minyinzi@@ ;i<=a;i++) { if(a@@ %i==0)@@ num=num+@@ dividemin@@ (a/i,i); } returnnum; } intmain(){ intn; cin>>n; inta[n]; for(inti=0;i<=@@ n-1;i++) cin>>a[i]; for(inti=0;i<=@@ n-1;i++) cout<<@@ dividemin@@ (a[i],@@ 2)<<endl; }  
c -1
h -1
intmain() {@@ struct@@ s {int@@ N; char@@ w@@ [26]; }; struct@@ s@@ s[@@ 999]; intn,i,j,@@ c,@@ a[@@ 26]; scanf("%d\n",&n); for(i=0;i<=@@ (n-1);i++) {scanf("%d",&@@ s[i].@@ N); gets(@@ s[i].@@ w); } for(i=0;i<=@@ (n-1);i++) {@@ for(j=0;j<=@@ 25@@ ;j++) {@@ c=@@ s[i].@@ w@@ [j]; a[c@@ -65]++; } } c=0; for(i=0;i<=25;i++) {@@ if(a[@@ c@@ ]<@@ a[i])@@ c=i; } printf("%c\n%d\n",@@ c@@ +65@@ ,@@ a[c@@ ]); for(i=0;i<=@@ (n-1);i++) {@@ for(j=0;j<=@@ 25@@ ;j++) if(s@@ [i].@@ w@@ [j]==@@ (@@ c@@ +65@@ ))@@ printf("%d\n",@@ s[i].@@ N); } }  
c -1
h -1
0

voidmain() { inta,b,c,@@ d; scanf("%d%d%d",&a,&b,&c); if(a%@@ 4!=0@@ ||(@@ a%@@ 4==0&&@@ a%@@ 100==0&&@@ a%@@ 400!=0)) { if(b==1) d=@@ c; if(b==@@ 2) d@@ =31+c; if(b==@@ 3) d=31+28@@ +c; if(b==@@ 4) d=31+28@@ +31+@@ c; if(b==@@ 5) d=31+28@@ +31+30@@ +c; if(b==@@ 6) d=31+28@@ +31+30+31+@@ c; if(b==@@ 7) d=31+28@@ +31+30+31+30@@ +c; if(b==@@ 8) d=31+28@@ +31+30+31+30+31+@@ c; if(b==@@ 9) d=31+28@@ +31+30+31+30+31+31+@@ c; if(b==@@ 10) d=31+28@@ +31+30+31+30+31+31+30@@ +c; if(b==@@ 11) d=31+28@@ +31+30+31+30+31+31+30+31+@@ c; if(b==@@ 12) d=31+28@@ +31+30+31+30+31+31+30+31+30@@ +c; } else { if(b==1) d=@@ c; if(b==@@ 2) d@@ =31+c; if(b==@@ 3) d=31+29@@ +c; if(b==@@ 4) d=31+29@@ +31+@@ c; if(b==@@ 5) d=31+29@@ +31+30@@ +c; if(b==@@ 6) d=31+29@@ +31+30+31+@@ c; if(b==@@ 7) d=31+29@@ +31+30+31+30@@ +c; if(b==@@ 8) d=31+29@@ +31+30+31+30+31+@@ c; if(b==@@ 9) d=31+29@@ +31+30+31+30+31+31+@@ c; if(b==@@ 10) d=31+29@@ +31+30+31+30+31+31+30@@ +c; if(b==@@ 11) d=31+29@@ +31+30+31+30+31+31+30+31+@@ c; if(b==@@ 12) d=31+29@@ +31+30+31+30+31+31+30+31+30@@ +c; } printf("%d\n",@@ d); }  
c -1
h -1
structstudent { intid; intc; intm; ints; structstudent*next; }; structstudent*creat@@ (void) { structstudent*head,*p1,*p2; intn,i; p1=p2=(structstudent*)malloc(LEN); scanf("%d",&n); head=NULL; for(i=0;i<n;i++) { scanf("%d%d%d",&@@ p1->id,&p1->@@ c@@ ,&p1->@@ m); p1->@@ s=@@ p1->@@ c+@@ p1->@@ m; if(i==0)@@ head=p1; elsep2->next=p1; p2=p1; p1=(structstudent*)malloc(LEN); } p2->next=NULL; return(head); } void@@ exchange@@ (@@ structstudent*@@ x,@@ structstudent*@@ y) { intt; t=@@ x@@ ->@@ id@@ ;x@@ ->@@ id@@ =@@ y@@ ->@@ id@@ ;y@@ ->@@ id@@ =t; t=@@ x@@ ->@@ c@@ ;x@@ ->@@ c=@@ y@@ ->@@ c@@ ;y@@ ->@@ c=@@ t; t=@@ x@@ ->@@ m;@@ x@@ ->@@ m=@@ y@@ ->@@ m;@@ y@@ ->@@ m=@@ t; t=@@ x@@ ->@@ s@@ ;x@@ ->@@ s=@@ y@@ ->@@ s@@ ;y@@ ->@@ s=@@ t; } voidmain() { structstudent@@ *p,*@@ q@@ ,*@@ head; int@@ temp,@@ i; head=@@ p=@@ creat@@ (); for(p=head@@ ,i@@ =0;p@@ ->next@@ !=NULL@@ ,i@@ <@@ 3@@ ;@@ p=p@@ ->next@@ ,i++) { temp=@@ p->@@ s; for(q=@@ p->next@@ ;q@@ !=NULL;@@ q=q@@ ->next) { if(p->@@ s@@ <@@ q->@@ s)@@ temp=@@ q->@@ s; if(p->@@ s@@ !=@@ temp@@ )@@ exchange@@ (p,@@ q); } } for(p=head@@ ,i@@ =0;i<@@ 3@@ ;@@ p=p@@ ->next@@ ,i++) printf("%d%d\n",@@ p->@@ id,@@ p->@@ s); }  
c -1
h -1
0

main() { inta[@@ 25],b[@@ 25@@ ],c[@@ 25@@ ],i,j,@@ n,@@ max=0,@@ q; scanf("%d",&n); for(i=0;i<n;i++) { a[i]=0; b[i]=0; } for(i=0;i<n;i++) { scanf("%d",&a[i]); } for(i=n-1;i>=0;i--) { for(j=i;j<@@ n;j++) { if(a[i]>=a[j]) { c@@ [j-i@@ ]=@@ b[j]@@ +1; } else { c@@ [j-i@@ ]=1; } } for(j=0;j<n-i;j++) { if(c@@ [j]>=@@ b[i]) b[i]=@@ c[j]; } } for(i=0;i<n;i++) { if(b[i]@@ >=@@ max) max=b[i]; } printf("%d",max); }  
c -1
h -1
intmain() { inta[@@ 20000],@@ t@@ ,j,@@ m,@@ i,@@ asd@@ ; scanf("%d",&m); for(i=0;i<m;i++) {@@ t=1; scanf("%d",&a[i]); if(i==0) {printf("%d",@@ a[i]);} elseif(@@ i@@ !=0) { for(j=0;j<i;j++) {@@ asd@@ =@@ a[i]@@ -@@ a[j]; if(@@ asd@@ ==0) {@@ t=0; break;} }@@ if(t@@ ==1) printf("%d",a[i]); } } printf("\n"); return0; }  
c -1
h -1
0

intnum; int@@ wrh@@ (intn,int@@ r@@ ,int@@ b[@@ 200@@ ],int@@ y,int@@ a) { inti; for(i=y@@ ;i<=@@ a@@ /2@@ ;i++) { if(r@@ %i==0) { b[@@ n@@ ]=i; int@@ now@@ =1@@ ,j; for(j=1;j<=n;j++) now@@ =@@ now@@ *@@ b[j]; if(@@ now@@ ==@@ a) { num++; break; } if(@@ now@@ >@@ a)@@ break; else wrh@@ (n@@ +1,@@ r@@ /i,@@ b,@@ i,@@ a); } } return0; } intmain() { int@@ s,@@ a,@@ b[@@ 200]; cin>>@@ s; while(@@ s@@ >0) { num=0; cin>>a; wrh@@ (@@ 1,@@ a,b,@@ 2,@@ a); cout<<num@@ +1<<endl; s@@ --; } return0; }  
c -1
h -1
intmain() { intn,k,@@ i,j; inta[@@ 1000]={0}; cin>>n>>k; for(i=1;i<=n;i++) { cin>>a[i]; } for(i=1;i<n;i++) { j=i; while(j@@ <=@@ n) { if(a[i]+a[j]==k) { cout<<"yes"; return0; } j++; } } cout<<"no"; return0; }  
c -1
h -1
0

main() { intyear,month,day,@@ leap@@ ,@@ sum=0; inta[@@ 12@@ ],@@ i,j; scanf("%d",&@@ year@@ ); scanf("%d",&@@ month@@ ); scanf("%d",&@@ day); if((year%4==0&&year%100!=0)||(year%400==0)) leap@@ =1; else leap@@ =0; a[0]=@@ 31@@ ;@@ a[2@@ ]=31;a[@@ 3@@ ]=30@@ ;a[@@ 4@@ ]=31;a[@@ 5@@ ]=30@@ ;a[@@ 6@@ ]=31;a[@@ 7@@ ]=31;a[@@ 8@@ ]=30@@ ;a[@@ 9@@ ]=31;a[@@ 10@@ ]=30@@ ;a[@@ 11@@ ]=31; if(leap@@ ==1) a[1]=29; else@@ a[1]=@@ 28; for(i=0;i<@@ 12@@ ;i++) { if(month==@@ i@@ +1) { for(j=0;j<i;j++) sum+=@@ a[j]; sum+=@@ day; break; } } printf("%d",sum); getchar(); getchar(); }  
c -1
h -1
intmain() { intn,i; int@@ sum[@@ 100000]; int@@ max1,@@ max2@@ ,max3@@ ; int@@ x=0; scanf("%d",&n); struct{ intnumber; int@@ chin@@ ; intmath; }@@ student[@@ 100000]; for(i=0;i<n;i++){ scanf("%d%d%d",&@@ student[i].@@ number@@ ,&@@ student[i].@@ chin@@ ,&@@ student[i].@@ math); sum[i]=@@ student[i].@@ chin@@ +@@ student[i].@@ math@@ ;} max1=@@ sum[@@ 0]; max2=@@ sum[@@ 0]; max3=@@ sum[@@ 0]; for(i=0;i<n;i++){ if(sum[i]>@@ max1@@ ) max1=@@ sum[i]@@ ;} for(i=0;i<n;i++){ if(sum@@ [i]==@@ max1@@ ){ printf("%d%d\n",@@ student[i].@@ number,@@ sum@@ [i]); x@@ ++;} if(x@@ >=@@ 3) break; } for(i=0;i<n;i++){ if((@@ sum@@ [i]>@@ max2@@ )&&(@@ sum@@ [i]!=@@ max1@@ )) max2=@@ sum[i]@@ ;} for(i=0;i<n;i++){ if(x@@ >=@@ 3) break; if(sum@@ [i]==@@ max2@@ ){ printf("%d%d\n",@@ student[i].@@ number,@@ sum@@ [i]); x@@ ++;} } for(i=0;i<n;i++){ if((@@ sum@@ [i]>@@ max3@@ )&&(@@ sum@@ [i]!=@@ max1@@ )&&(@@ sum@@ [i]!=@@ max2@@ )) max3=@@ sum[i]@@ ;} for(i=0;i<n;i++){ if(x@@ >=@@ 3) break; if(sum@@ [i]==@@ max3@@ ){ printf("%d%d",@@ student[i].@@ number,@@ sum@@ [i]); x@@ ++;} } return0; }  
c -1
h -1
0

intmain() { charstr@@ [256]; char@@ sub@@ [256]; char@@ rep@@ [256]; cin>>@@ str@@ >>@@ sub@@ >>@@ rep@@ ; int@@ len=strlen(@@ sub); inti=0; char@@ *p,@@ *@@ q,@@ *@@ r; p=strstr(@@ str,@@ sub); q=@@ rep@@ ; if(p@@ !=NULL) { for(@@ r=@@ p@@ ;r@@ <@@ p+@@ len@@ ;r++) *@@ r=@@ *@@ q++; } cout<<str@@ <<endl; return0; }  
c -1
h -1
long@@ intn; structstu { long@@ intnum,@@ chi@@ ,@@ mat@@ ,@@ tot@@ ; }; int@@ comp@@ (constvoid*a,constvoid*@@ b) { return(@@ (struct@@ stu@@ *)@@ b)@@ ->@@ tot@@ -(@@ (struct@@ stu@@ *)@@ a)@@ ->@@ tot@@ ; } structstu@@ a[@@ 100000],@@ b; intmain() { inti,j; scanf("%d",&n); for(i=0;i<n;i++) { scanf("%d%d%d",&a[i].@@ num,&@@ a[i].@@ chi@@ ,&a[i].@@ mat@@ ); a[i].@@ tot@@ =@@ a[i].@@ chi@@ +a[i].@@ mat@@ ; } qsort@@ (a,n,@@ sizeof(struct@@ stu@@ ),@@ comp@@ ); for(i=0;i<3;i++) printf("%d%d\n",@@ a[i].@@ num,@@ a[i].@@ tot@@ ); return0; }  
c -1
h -1
0

intk,m,n,@@ sum; intnum[@@ 101][101]; intmain() { inti,j,@@ l; cin>>k; for(i=0;i<@@ k;@@ ++@@ i) { memset(@@ num,@@ 0,sizeof(@@ num@@ )); sum=0; cin>>m>>n; for(j=0;j<@@ m;@@ ++@@ j) { for(l=0;l<n;@@ ++@@ l) { cin>>@@ num[j]@@ [l]; } } for(j=0;j<@@ n;++@@ j)@@ sum+=@@ num@@ [0]@@ [j]+@@ num[m@@ -1][j]; for(j=1;j<@@ m-1@@ ;++@@ j)@@ sum+=@@ num[j]@@ [0]+@@ num[j]@@ [n-1]; cout<<sum<<endl; } return0; }  
c -1
h -1
intmain() { intn,i,j,@@ t,@@ x; cin>>n; inta[n]; for(i=0;i<n;i++) { cin>>x; a[i]=@@ x; } for(i=0;i<n;i++) { for(j=i+1;j<n;j++) { if(a[i]==a[j]) { for(t@@ =j@@ ;t@@ <n;@@ t++) { a[t@@ ]=a[@@ t@@ +1]; } n--; j--; } } } for(i=0;i<n-1;i++) { cout<<a[i]<<""; } cout<<a[@@ n-1@@ ]<<endl; return0; }  
c -1
h -1
0

main() { int@@ dao@@ ,a[@@ 25@@ ]={0},b[@@ 25@@ ],i,j,@@ num; scanf("%d",&@@ dao@@ ); for(i=0;i<@@ dao@@ ;i++) { scanf("%d",&b[i]); } for(i=@@ dao@@ -1;i>=0;i--) { num=0; for(j=i;j<@@ dao@@ ;j++) { if(b[i]@@ >=@@ b[j]@@ &&@@ num@@ <=@@ a[j])@@ num=@@ a[j]; } a[i]=@@ num@@ +1; } num=@@ a[0]; for(i=1;i<@@ dao@@ ;i++) { if(a[i]>=@@ num@@ )@@ num=@@ a[i]; } printf("%d",@@ num); }  
c -1
h -1
struct@@ Top { intnum; float@@ score; }@@ Top@@ [4@@ ]={@@ {@@ 0,@@ 0@@ }@@ }; struct@@ Top@@ *p; void@@ maopao@@ (intn) { inti; for(i=1;i<n;i++) { for(p=@@ Top@@ ;p<@@ Top@@ +@@ n-i@@ ;p++) { if((@@ p->@@ score@@ )@@ <(@@ (p@@ +1)@@ ->score@@ )) { Top@@ [3@@ ]@@ =*@@ p; *p@@ =*(p@@ +1); *(p@@ +1)@@ =@@ Top@@ [3]; } } } } voidsort@@ (@@ float@@ a,int@@ n) { p=@@ Top@@ +@@ 2; if(a@@ >@@ (p->@@ score@@ )) { p->@@ score@@ =@@ a; p->@@ num=@@ n; } maopao@@ (@@ 3@@ ); } intmain() { inti,n,@@ num; float@@ yw@@ ,@@ sx@@ ,@@ score; scanf("%d\n",&n); for(i=0;i<n;i++) { scanf("%d@@ %@@ f@@ %@@ f",&@@ num,@@ &@@ yw@@ ,&@@ sx@@ ); float@@ score@@ =@@ yw@@ +@@ sx; sort(@@ score@@ ,@@ num); } for(p=@@ Top@@ ;p<@@ Top@@ +@@ 3@@ ;p++) { printf("%d@@ %@@ g@@ \n",@@ p->@@ num,@@ p->@@ score@@ ); } return0; }  
c -1
h -1
0

intmain() { inti,j,@@ row,col,@@ n=0; inta[100@@ +@@ 10@@ ][100@@ +@@ 10@@ ]={0}; cin>>row>>col; for(i=0;i<row;i++) for(j=0;j<col;j++) cin>>a[i][j]; i@@ =0;j@@ =0; for(int@@ begin@@ =0;@@ begin@@ <col@@ ;@@ begin@@ ++) { i@@ =0;j@@ =@@ begin@@ ; while(j@@ >=0&&i@@ <row@@ )@@ cout<<@@ a[i@@ ++@@ ]@@ [j@@ --@@ ]<<endl; } for(int@@ begin@@ =1;@@ begin@@ <row@@ ;@@ begin@@ ++) { i=@@ begin@@ ,j=@@ col-1; while(i@@ <row@@ &&j>=0@@ )@@ cout<<@@ a[i@@ ++@@ ]@@ [j@@ --@@ ]<<endl; } return0; }  
c -1
h -1
intmain() { intn,a[@@ 20000],@@ i=0,@@ t=0,@@ p=0; scanf("%d",&n); for(i=0;i<=n-1;i++) { scanf("%d",&a[i]); } for(i=0;i<=n-1;i++) { for(t=0;t@@ <=i@@ -1;@@ t++) { if(a[i]==@@ a[t@@ ]) p++; } if(p@@ !=0) a[i]=0; p=0; } for(i=0;i<=n-1;i++) { if(a[i]!=0) {@@ printf("%d",a[i]); break;} } for(t@@ =i+1@@ ;t@@ <=@@ n-1@@ ;t++) { if(a[@@ t@@ ]!=0) printf("%d",@@ a[t@@ ]); } }  
c -1
h -1
0

intmain() { intyear,@@ month1@@ ,@@ day; int@@ month@@ [13]={0,31,28,31,30,31,30,31,31,30,31,30,31}; cin>>year>>@@ month1@@ >>@@ day; inti; intsum=0; if(((@@ year%@@ 4==0)&&(@@ year%100!=0@@ )@@ )||(year%400==0)) { month@@ [2]=@@ month@@ [2@@ ]+1; for(i=1;i<@@ month1@@ ;i++) { sum=sum+@@ month@@ [i]; } sum=sum+day; } else { for(i=1;i<@@ month1@@ ;i++) { sum=sum+@@ month@@ [i]; } sum=sum+day; } cout<<@@ sum; return0; }  
c -1
h -1
intmain() { intsz[@@ 1000][1000]; intn,@@ a,b,c,d,@@ e,f,@@ g,@@ h,@@ m,@@ i,@@ t; scanf("%d",&n); for(i=0;i<n;i++){ for(t=0;t@@ <n;@@ t++){ scanf("%d",&@@ sz[i]@@ [t@@ ]@@ );}} for(a=0;a@@ <n;@@ a++){ for(b=0;b@@ <n;@@ b@@ ++@@ ){@@ if(@@ sz[a@@ ][b@@ ]@@ ==0){@@ d=@@ b@@ ;@@ break;@@ }}} for(a=0;a@@ <n;@@ a++){ for(@@ b=@@ n-1;@@ b@@ >=0;@@ b@@ --@@ ){@@ if(@@ sz[a@@ ][b@@ ]@@ ==0){@@ c=@@ b@@ ;@@ break;@@ }}} for(@@ e=@@ n-1;@@ e@@ >=0;@@ e@@ --){ for(@@ f=@@ n-1;@@ f@@ >=0;@@ f@@ --@@ ){@@ if(sz[@@ e@@ ][@@ f@@ ]@@ ==0){@@ g=@@ e@@ ;@@ break;@@ }}} for(e@@ =0;e@@ <n;@@ e@@ ++){ for(@@ f=@@ n-1;@@ f@@ >=0;@@ f@@ --@@ ){@@ if(sz[@@ e@@ ][@@ f@@ ]@@ ==0){@@ h=@@ e@@ ;@@ break;@@ }}} m@@ =(@@ h@@ -@@ g@@ -1)*(@@ c-@@ d@@ -1); printf("%d",m); return0; }  
c -1
h -1
0

voidmain() { inta[@@ 10@@ ],b[@@ 10@@ ],c[@@ 10],@@ n[@@ 10],@@ d,@@ i; for(i=0;i<@@ 5;i++) { scanf("%d%d%d",&@@ a[i],&@@ b[i]@@ ,&@@ c[i]); } for(i=0;i<@@ 5;i++) { if((@@ a[i]@@ %4==0&&@@ a[i]@@ %100!=0@@ )||@@ a[i]@@ %@@ 400==0) { switch(@@ b[i]) { case1:@@ d@@ =0;@@ break; case2:@@ d=@@ 31;break; case3:@@ d=@@ 60@@ ;break; case4:@@ d=@@ 91@@ ;break; case5:@@ d=@@ 121@@ ;break; case6:@@ d=@@ 152@@ ;break; case7:@@ d=@@ 182@@ ;break; case8:@@ d=@@ 213@@ ;break; case9:@@ d=@@ 244@@ ;break; case10:@@ d=@@ 274@@ ;break; case11:@@ d=@@ 305@@ ;break; case12:@@ d=@@ 335@@ ;break; } n[i]=@@ d+@@ c[i]; printf("%d\n",n@@ [i]); } else { switch(@@ b[i]) { case1:@@ d@@ =0;@@ break; case2:@@ d=@@ 31;break; case3:@@ d=@@ 59@@ ;break; case4:@@ d=@@ 90@@ ;break; case5:@@ d=@@ 120@@ ;break; case6:@@ d=@@ 151@@ ;break; case7:@@ d=@@ 181@@ ;break; case8:@@ d=@@ 212@@ ;break; case9:@@ d=@@ 243@@ ;break; case10:@@ d=@@ 273@@ ;break; case11:@@ d=@@ 304@@ ;break; case12:@@ d=@@ 334@@ ;break; } n[i]=@@ d+@@ c[i]; printf("%d\n",n@@ [i]); } } }  
c -1
h -1
intmain() { int@@ x,@@ i,j,@@ a[@@ 40@@ ][@@ 40@@ ]; scanf("%d",@@ i); for(i=1;i<@@ x;i++) { a[i]@@ [i]=1; a[i][1]@@ =1; } for(i=@@ 3@@ ;i<@@ x;i++) { for(j=2;j<=@@ i-1;j++) { a[i]@@ [j]=@@ a[i-1]@@ [j-1]@@ +@@ a[i-1]@@ [j]; } } for(i=1;i<@@ x;i++) { for(j=1;j<i;j++) { printf("%@@ 6d@@ ",@@ a[i]@@ [j]); } printf("\n"); } printf("\n"); return0; }  
c -1
h -1
0

intmain(){ intk,@@ i; scanf("%d",&k); intm,n,@@ j,@@ l; int@@ z@@ [100][100],@@ h@@ [100]; for(i=0;i<@@ 100@@ ;i++){ h@@ [i]=0; } for(l=0;l<@@ k;@@ l++){ scanf("%d%d",&m,&n); for(i=0;i<m;i++){ for(j=0;j<n;j++){ scanf("%d",&(@@ z@@ [i][j]@@ )); } } for(j=0;j<n;j++){ h@@ [l@@ ]+=@@ z@@ [0]@@ [j]; } i=@@ m-1@@ ; for(j=0;j<n;j++){ h@@ [l@@ ]+=@@ z@@ [i][j]; } for(i=1;i<@@ m-1@@ ;i++){ h@@ [l@@ ]+=@@ z@@ [i]@@ [0]; } j=@@ n-1; for(i=1;i<@@ m-1@@ ;i++){ h@@ [l@@ ]+=@@ z@@ [i][j]; } } for(l=0;l<@@ k;@@ l++){ if(l@@ ==0){ printf("%d",@@ h@@ [l]); }else{ printf("\n%d",@@ h@@ [l]); } } return0; }  
c -1
h -1
intmain() { inta[16],@@ k,@@ m,n,@@ j; do {@@ j=0; scanf("%d",&a[0]); if(a[0]@@ !=-1) { for(k=1;k<=@@ 15@@ ;k++) { scanf("%d",&@@ a[k]); if(!@@ a[k]@@ )break; } for(m=0;m<@@ k-1@@ ;m++) { for(n=@@ m@@ +1@@ ;n@@ <k;@@ n++) { if((@@ a[m]@@ -2*@@ a[n@@ ]@@ ==0)||(@@ a[n@@ ]@@ -2*@@ a[m]@@ ==0)) j++; } } printf("%d\n",@@ j); } } while(@@ a[0]@@ !=-1); return0; }  
c -1
h -1
0

intN@@ ,@@ A@@ ; int@@ acSearch@@ (intn,int@@ i){ int@@ ret@@ =0; if(n@@ ==1)@@ ret@@ =1; else@@ for(@@ ;i<=@@ n;++@@ i) if(n@@ %i==0)@@ ret@@ +=@@ acSearch@@ (n/i,i); return@@ ret@@ ; } intmain(){ scanf("%d",&N); for(;@@ N@@ --@@ ;@@ ){ scanf("%d",&@@ A@@ ); printf("%d\n",@@ acSearch@@ (@@ A@@ ,@@ 2)); } return0; }  
c -1
h -1
void@@ right@@ (@@ chara[@@ ],int@@ l@@ ,int@@ t) { inti; for(i=@@ l@@ ;i@@ >=@@ t@@ ;i--) a[i]=@@ a[i@@ -1]; a[l@@ +1@@ ]='\0'; } void@@ left@@ (@@ chara[@@ ],int@@ l@@ ,int@@ t) { inti; for(i=@@ t@@ ;i<=@@ l@@ ;i++) a[i@@ -2@@ ]=a[i@@ -1]; a[l@@ -1]@@ ='\0'; } intmain() { chara[@@ 256]; charb[@@ 256]; charc[@@ 256]; inti,j,@@ l1,l2,@@ l3@@ ,@@ d,@@ e,@@ s,@@ r; scanf("%s",a); scanf("%s",b); scanf("%s",c); l1@@ =strlen(a); l2@@ =strlen(b); l3@@ =strlen(c); if(@@ l2@@ >@@ l3@@ ) { s=1; r=@@ l2@@ -@@ l3@@ ; } elseif(@@ l2@@ ==@@ l3@@ ) s=@@ r=0; else { s@@ =-1; r=@@ l3@@ -@@ l2@@ ; } for(i=1;i<=@@ l1@@ ;i++) { e=@@ a[i-1]@@ -@@ b[0]; if(e@@ ==0) { d=0; for(j=1;j<=@@ l2@@ -1;j++) { e=@@ a[i+j@@ -1]@@ -@@ b[j]; if(e@@ !=0) d=1; } if(d@@ ==0) { for(j=1;j<=@@ r@@ ;j++) { if(s@@ >0) left@@ (a,@@ l1@@ ,i@@ +@@ l2@@ ); if(s@@ <0) right@@ (a,@@ l1,@@ i); } for(j=1;j<=@@ l3@@ ;j++) a[i+j@@ -2@@ ]=@@ c@@ [j-1]; break; } } } printf("%s",a); return0; }  
c -1
h -1
0

voidf1@@ (inta[],intb[],int@@ m,intn) { inti; for(i=0;i<m;i++) cin>>a[i]; for(i=0;i<n;i++) cin>>b[i]; } voidf2@@ (inta[],intb[],int@@ m,intn) { inti,j; intt; for(i=0;i<m;i++) {@@ for(j=0;j<m-1;j++) {@@ if(a@@ [j+1]@@ <@@ a[j]) {t=@@ a[j]; a[j]=a[j+1]; a[j+1]=t; } } } for(i=0;i<n;i++) {@@ for(j=0;j<n-1;j++) {@@ if(b@@ [j+1]@@ <@@ b[j]) {t=@@ b[j]; b[j]=b[j+1]; b[j+1]=@@ t; } } } } void@@ f3@@ (inta[],intb[],int@@ m,intn) {@@ inti,j; for(i=0;i<n;i++) {@@ a[m@@ +i]=@@ b[i]@@ ;} } void@@ f4@@ (inta[],int@@ m,intn) {inti; for(i=0;i<m+@@ n-1;i++) {@@ cout<<a[i]@@ <<"@@ "@@ ;} cout<<a[@@ m+@@ n-1]; } intmain() {@@ intm,n; cin>>m>>n; inta[1000]; intb[@@ 1000]; f1@@ (a,b,m,n); f2@@ (a,b,m,n); f3@@ (a,b,m,n); f4@@ (a,@@ m,n); return0; }  
c -1
h -1
struct@@ h@@ { charname@@ [11]; intage; }; voidmain(){ inti,k,@@ n; scanf("%d",&n); struct@@ h@@ p@@ [100]; for(i=0;i<n;i++){ scanf("%s%d",@@ p[i].@@ name@@ ,&@@ p[i].age); } for(k=@@ 100@@ ;k@@ >@@ 59@@ ;k@@ --){ for(i=0;i<n;i++){ if(k==@@ p@@ [i].age@@ ) printf("%s\n",@@ p[i].@@ name); } } for(i=0;i<n;i++){ if(p@@ [i].age<60) printf("%s\n",@@ p[i].@@ name); } }  
c -1
h -1
0

intmain(){ intn,i,j,k,@@ num=0,@@ len1,len2,@@ pos@@ =0,@@ lea@@ ; double@@ rate@@ ; chara[500],b[500]; scanf("%lf",&@@ rate@@ ); scanf("%s",a); scanf("%s",b); len1@@ =strlen(a); len2@@ =strlen(b); if(len1!=@@ len2) printf("error"); else{ for(k=0;@@ a[k]@@ !='\0'@@ ;k++){ if(a[k]@@ !='@@ A'&&@@ a[k]@@ !='@@ T'&&@@ a[k]@@ !='@@ C'&&@@ a[k]@@ !='@@ G'){ pos@@ =0; break; } elseif(@@ b[k@@ ]!='@@ A'&&@@ b[k@@ ]!='@@ T'&&@@ b[k@@ ]!='@@ C'&&@@ b[k@@ ]!='@@ G'){ pos@@ =0; break; } else{ pos@@ =1; if(a[k@@ ]==@@ b[k@@ ]){ num++; } } } if(@@ pos@@ ==1){ if(1.0*@@ num@@ /@@ len1@@ >@@ rate@@ ) printf("yes"); else printf("no"); } else{ printf("error"); } } return0; }  
c -1
h -1
intmain() { intn; inta[20000]; inti,j; intsum; cin>>n; sum=@@ n; for(i=0;i<n;i++) cin>>a[i]; for(i=0;i<n;i++) { if(a[i]==0) continue; for(j=i+1;j<n;j++) { if(a[j]==a[i]) { a[j]=0; sum@@ --; } } } j=0; for(i=0;i<n;i++) { if(a[i]==0) continue; cout<<a[i]; j++; if(j!=@@ sum) cout<<'@@ '; } return0; }  
c -1
h -1
0

intmain() { inti,j,@@ a@@ =1,@@ m,@@ k; chars1@@ [@@ 258@@ ],@@ s2[@@ 258@@ ],@@ s3@@ [@@ 258@@ ]; scanf("%s",@@ s1); scanf("%s",@@ s2); scanf("%s",@@ s3); for(i=0;@@ s1@@ [i]!='\0';i++) { if(a==1) { k=i; for(j=0;@@ s2@@ [j]!='\0';j++) { if(s2@@ [j]!=@@ s1@@ [k]) { a=1; break; } k++; a=0; } } else break; } if(a==0) { for(m@@ =0;@@ s3@@ [m]@@ !='\0'@@ ;m++) { s1@@ [i-1@@ ]=@@ s3@@ [m]; i++; } } printf("%s",@@ s1); return0; }  
c -1
h -1
intmain() { int@@ y=0,@@ m=0,@@ d=0,@@ sum=0,@@ i=0; inta[@@ 12]={31,28,31,30,31,30,31,31,30,31,30,31}; cin>>y>>m>>d; if(y%@@ 400==0||(@@ y%@@ 4==0&&y%100!=0@@ )) a[1]=29; for(i=0;i<=@@ m@@ -2;i++) { sum=sum+@@ a[i]; } sum=sum+@@ d; cout<<sum<<endl; return0; }  
c -1
h -1
0

intmain(){ intn=0,@@ i,@@ l; double@@ k; chara[500],b[500]; scanf("%lf",&@@ k); scanf("%s\n@@ %s",&@@ a,&b); if(strlen(a)!=strlen(b@@ )){@@ printf("error");} else{@@ l@@ =strlen(a); for(i=0;i<l;i++){ if(!@@ (@@ a[i]==@@ 65@@ ||@@ a[i]==@@ 67@@ ||@@ a[i]==@@ 71@@ ||@@ a[i]==@@ 84@@ )||@@ !@@ (@@ b[i]@@ ==@@ 65@@ ||@@ b[i]@@ ==@@ 67@@ ||@@ b[i]@@ ==@@ 71@@ ||@@ b[i]@@ ==@@ 84@@ )){ printf("error@@ "@@ );break; }else{ if(a[i]==b[i]@@ ){@@ n=@@ n@@ +1;} if(i==@@ l@@ -1){ if(1.0*@@ n/@@ l@@ >=@@ k){@@ printf("yes");@@ }@@ else{printf("no");} } } } } return0; }  
c -1
h -1
intmain(){ intk,m,n,@@ h,@@ i,j,@@ a,b; ints@@ [100][100],@@ r@@ [100]; scanf("%d",&k); for(intt@@ =0;t@@ <=@@ k@@ -1;@@ t++){ h=0; scanf("%d%d",&m,&n); for(i=0;i<=@@ m-1@@ ;i++){ for(j=0;j<=@@ n-1@@ ;j++){ scanf("%d",&s@@ [i][j]); } } for(a=0;a@@ <=@@ n-1;@@ a++){ h=@@ h@@ +@@ s[@@ 0][@@ a@@ ]+@@ s[@@ m-1][@@ a@@ ]; } for(b@@ =1;@@ b@@ <=@@ m@@ -2@@ ;@@ b++){ h=@@ h@@ +@@ s[@@ b@@ ][0]+@@ s[@@ b@@ ][n-1]; } r@@ [t@@ ]=@@ h; } for(int@@ x@@ =0;x@@ <=@@ k@@ -1;@@ x@@ ++){ printf("%d\n",@@ r@@ [x@@ ]); } return0;}  
c -1
h -1
0

intmain(){ intn,k; scanf("%d%d",&n,&k); inti; intsz[1000]; for(i=0;i<n;i++){ scanf("%d",&sz[i]); } int@@ he@@ [1000][1000]; intj; for(j=0;j<n;j++){ for(i=0;i<n;i++){ if(i!=@@ j){ he@@ [i][j]=@@ sz[i]@@ +sz@@ [j]; } } } intt=0; int@@ d=1; for(j=0;j<n@@ &&@@ d@@ ==1@@ ;j++){ for(i=0;i<n;i++){ if(i!=@@ j){ if(@@ he@@ [i][j]==@@ k){ printf("yes"); d=0; break; } } t++; } } if(t==@@ n*@@ n){ printf("no"); } return0; }  
c -1
h -1
intmain(intargc,char*argv[]) { inti,j,n,@@ k,@@ a[1000]; scanf("%d%d",&n,&k); for(i=0;i<n;i++) scanf("%d",&a[i]); for(i=0;i<n;i++) { if(a[i]>@@ k) continue; if(a[i]<=@@ k) for(j=i+1;j<n;j++) { if(a[j]>@@ k) continue; if(a[i]+a[j]==k) break; } if(j@@ <n) { printf("yes"); break; } } if(i==@@ n) printf("no"); return0; }  
c -1
h -1
1


struct@@ st { inta; chars[@@ 26]; struct@@ st@@ *@@ n; } ; struct@@ st@@ *creat@@ (intm) { inti; struct@@ st@@ *@@ p1,*p2,*head; for(i=0;i<m;i++) { p1=(struct@@ st@@ *)malloc(len); if(i==0)@@ head=p1; else@@ p2->@@ n@@ =p1; scanf("%d%s",&p1->@@ a,@@ p1->@@ s); p2=p1; } p1->@@ n=@@ NULL@@ ; return(head); } voidmain() { intm; struct@@ st@@ *creat@@ (int@@ m); scanf("%d",&m); struct@@ st@@ *p,*@@ q; p=@@ creat@@ (m); q=p; inti,j,k; inta[@@ 26]={0}; for(i=0;i<m;i++) { for(j=0;j<@@ (k@@ =strlen(@@ p->@@ s@@ ))@@ ;j++)@@ a[@@ p->@@ s[j]@@ -65]++; p=@@ p->@@ n; } p=@@ q; intmax=@@ a[0]; for(i=1;i<26;i++) { if(a[i]@@ >max)max=@@ a[i]; } charc; for(i=0;i<26;i++) { if(a[i]==@@ max) { c@@ =i+65; printf("%c\n%d\n",@@ c,@@ a[i]); break; } } char@@ cc@@ ; for(i=0;i<m;i++) { for(j=0;;j++) { cc@@ =@@ q->@@ s[j]; if(@@ cc@@ ==@@ '\0')@@ break; if(c==@@ cc@@ )@@ printf("%d\n",@@ q->@@ a); } q=@@ q->@@ n; } }  
c -1
h -1
inta[@@ 1000],@@ c,d; void@@ kg@@ (); void@@ m@@ (int@@ ); void@@ r@@ (); main() { r@@ (); m@@ (@@ c); kg@@ (); m@@ (@@ d); } void@@ r@@ () { scanf("%d%d",&@@ c@@ ,&@@ d); } void@@ m@@ (int@@ s) { inti,j,t; for(i=0;i<@@ s;i++) { scanf("%d",&a[i]); } for(i=0;i<@@ s;i++) { for(j=0;j<@@ s@@ -i-1;j++) { if(a[j]>a[j+1]) { t=a[j]; a[j]=a[j+1]; a[j+1]=t; } } } for(i=0;i<@@ s;i++) { printf("%d",a[i]); if(i<@@ s@@ -1) kg@@ (); } } void@@ kg@@ () { printf(""); }  
c -1
h -1
0

charname@@ [26@@ ]={'A','B','C','D','E','F','G','H','I','J','K','L','M','N','O','P','@@ Q','R','S','T','U','V','W','X','Y','@@ Z'}; intmain() { intn,@@ t,@@ i,j; intcount@@ [26],@@ max=0; for(i=0;i<26@@ ;i++)@@ count@@ [i]=0; structbook { intnum; char@@ man@@ [26]; }@@ book[999]; scanf("%d",&n); for(i=0;i<n;i++) { scanf("%d%s",&book[i].num,@@ book[i].@@ man@@ ); for(j=0;@@ book[i].@@ man@@ [j]@@ ;j++) { if(book[i].@@ man@@ [j]=='@@ A')@@ count@@ [0]@@ ++; elseif(book[i].@@ man@@ [j]=='@@ B@@ ')@@ count@@ [1@@ ]++; elseif(book[i].@@ man@@ [j]=='@@ C')@@ count@@ [2@@ ]++; elseif(book[i].@@ man@@ [j]=='@@ D@@ ')@@ count@@ [3@@ ]++; elseif(book[i].@@ man@@ [j]=='@@ E@@ ')count[@@ 4@@ ]++; elseif(book[i].@@ man@@ [j]=='@@ F@@ ')count[@@ 5@@ ]++; elseif(book[i].@@ man@@ [j]=='@@ G')@@ count[@@ 6@@ ]++; elseif(book[i].@@ man@@ [j]=='@@ H@@ ')count[@@ 7@@ ]++; elseif(book[i].@@ man@@ [j]=='@@ I@@ ')count[@@ 8@@ ]++; elseif(book[i].@@ man@@ [j]=='@@ J@@ ')count[@@ 9@@ ]++; elseif(book[i].@@ man@@ [j]=='@@ K@@ ')count[@@ 10@@ ]++; elseif(book[i].@@ man@@ [j]=='@@ L@@ ')@@ count@@ [11@@ ]++; elseif(book[i].@@ man@@ [j]=='@@ M@@ ')count[@@ 12@@ ]++; elseif(book[i].@@ man@@ [j]=='@@ N@@ ')count[@@ 13@@ ]++; elseif(book[i].@@ man@@ [j]=='@@ O@@ ')count[@@ 14@@ ]++; elseif(book[i].@@ man@@ [j]=='@@ P@@ ')count[@@ 15@@ ]++; elseif(book[i].@@ man@@ [j]=='@@ Q@@ ')count[@@ 16@@ ]++; elseif(book[i].@@ man@@ [j]=='@@ R@@ ')count[@@ 17@@ ]++; elseif(book[i].@@ man@@ [j]=='@@ S@@ ')count[@@ 18@@ ]++; elseif(book[i].@@ man@@ [j]=='@@ T')@@ count[@@ 19@@ ]++; elseif(book[i].@@ man@@ [j]=='@@ U@@ ')count[@@ 20@@ ]++; elseif(book[i].@@ man@@ [j]=='@@ V@@ ')count[@@ 21@@ ]++; elseif(book[i].@@ man@@ [j]=='@@ W@@ ')count[@@ 22@@ ]++; elseif(book[i].@@ man@@ [j]=='@@ X@@ ')count[@@ 23@@ ]++; elseif(book[i].@@ man@@ [j]=='@@ Y@@ ')count[@@ 24@@ ]++; elseif(book[i].@@ man@@ [j]=='@@ Z@@ ')@@ count@@ [25@@ ]++; } } for(i=0;i<26;i++) { if(count@@ [i]>max) { max=count@@ [i]; t=i; } } printf("%c\n%d\n",@@ name@@ [t@@ ],@@ max); for(i=0;i<n;i++) { for(j=0;@@ book[i].@@ man@@ [j]@@ ;j++) { if(book[i].@@ man@@ [j]==@@ name@@ [t@@ ])@@ printf("%d\n",book[i].@@ num); } } return0; }  
c -1
h -1
intmain() { intk,@@ size@@ [100][@@ 2@@ ],@@ m@@ [100][100@@ ][100],@@ i,j,@@ l,@@ sum@@ [100]; scanf("%d",&k); for(i=0;i<k;i++) { sum@@ [i]=0; scanf("%d%d",&@@ size@@ [i][0]@@ ,&@@ size@@ [i]@@ [1]); for(j=0;j<@@ size@@ [i][0]@@ ;j++) for(l=0;l<@@ size@@ [i]@@ [1]@@ ;l++) scanf("%d",&@@ m@@ [i][j]@@ [l]); if((@@ size@@ [i]@@ [1]@@ ==1@@ )&&(@@ size@@ [i][0]@@ ==1@@ )) sum[i]=@@ m[i]@@ [0][@@ 0]; else { for(l=0;l<@@ size@@ [i]@@ [1]@@ ;l++) { if(@@ size@@ [i]@@ [1]@@ ==1) sum[i]=@@ sum[i]@@ +m@@ [i]@@ [0][@@ l@@ ]; else sum[i]=@@ sum[i]@@ +m@@ [i]@@ [0][@@ l@@ ]+@@ m[i]@@ [@@ size@@ [i][0]@@ -1@@ ][l@@ ]; } for(j=1;j<=@@ size@@ [i][0]@@ -2@@ ;j++) { sum[i]=@@ sum[i]@@ +m@@ [i][j]@@ [0]@@ +m@@ [i][j]@@ [@@ size@@ [i]@@ [1]@@ -1]; } } } for(i=0;i<k;i++) printf("%d\n",sum@@ [i]); return0; }  
c -1
h -1
0

intmain() { intk=0,@@ m=0,@@ n=0; int@@ ans@@ =0,@@ a=0; cin>>k; for(inti=0;i<k;i++) { cin>>m>>n; for(intj=0;j<m;j++) for(intl@@ =0;@@ l@@ <n;@@ l++) { cin>>a; if(!@@ l@@ ||@@ l@@ ==@@ (n-1@@ )) ans@@ +=@@ a; elseif(@@ !@@ j@@ ||j==@@ (m@@ -1)) ans@@ +=@@ a; } cout<<ans@@ <<endl; ans=0; } return0; }  
c -1
h -1
intmain() { int@@ n[@@ 25@@ ],i,j,@@ count; while(@@ cin>>n@@ [1@@ ],@@ n@@ [1]@@ !=-1) { count=0; for(i=2@@ ;@@ cin>>n@@ [i],@@ n[i]@@ !=0;i++) { for(j=1;j<i;j++) { if(n@@ [i]==@@ 2*@@ n@@ [j]@@ ||@@ n[i]@@ *2==@@ n@@ [j]) { count++; } } } cout<<count<<endl; } return0; }  
c -1
h -1
0

intmain(){ intn,k,i,j,@@ a,@@ e,@@ m; intsz[1000]; scanf("%d",&n); scanf("%d",&k); for(i=0;i<n;i++){ scanf("%d",&(sz[i]@@ )); } a=0; for(i=0;i<n-1;i++){ e=@@ sz[i]; for(j=i+1;j<n;j++){ m=@@ sz@@ [j]+@@ e; if(m==@@ k){ a=1; } if(a==1) break; } } if(a@@ ==0){ printf("no"); } if(a@@ ==1){ printf("yes"); } return0; }  
c -1
h -1
intmain() { chara[@@ 256]; charb[@@ 256]; charc[@@ 256]; inti,n,@@ m,@@ d=0; int@@ e=0; gets(a); gets(b); gets(c); n@@ =strlen(a); for(i=0;i<n;i++){ if(a[i]==@@ b[0]@@ ){ if(a@@ [i+1@@ ]==@@ b[1@@ ]){ if(a@@ [i+@@ 2@@ ]==@@ b[2@@ ]){ d@@ =i; break;@@ }}} } m=strlen(@@ c); if(d@@ !=0){ for(i=@@ d@@ ;i<@@ d+@@ m;i++){ a[i]=@@ c[@@ e@@ ]; e++; } } puts(@@ a); return0; }  
c -1
h -1
0

voidmain(){ inta,b,c; intleap@@ =0; int@@ day@@ =0; scanf("%d%d%d",&a,&b,&c); if(a%@@ 400==0||(@@ a%4==0&&a%100!=0@@ ))@@ leap@@ =1; b@@ --; while(@@ b){ if(b@@ ==1||@@ b==@@ 3@@ ||@@ b==@@ 5@@ ||@@ b==@@ 7@@ ||@@ b==@@ 8@@ ||@@ b==@@ 10@@ ||@@ b==@@ 12@@ ){ b@@ --; day@@ +=@@ 31; } if(b==@@ 2@@ ){ b@@ --; day@@ +=@@ 28@@ +@@ leap@@ ; } if(b==@@ 4@@ ||@@ b==@@ 6@@ ||@@ b==@@ 9@@ ||@@ b==@@ 11@@ ){ b@@ --; day@@ +=@@ 30; } } day@@ +=@@ c; printf("%d",@@ day); }  
c -1
h -1
intmain() { intn,i,j,@@ a[100][100],@@ p,q,@@ r,@@ s,@@ mj@@ ; scanf("%d",&n); for(i=0;i<n;i++) for(j=0;j<n;j++) scanf("%d",&a[i][j]); for(i=0;i<n;i++) for(j=0;j<n;j++) { if(a[i][j]==0&&@@ a[i]@@ [j+1]@@ ==0&&@@ a[i+1@@ ][j]@@ ==0&&@@ a[i+1@@ ]@@ [j+1]@@ !=0) { p=@@ j; q@@ =i; } if(a[i][j]==0&&@@ a[i-1]@@ [j]@@ ==0&&@@ a[i][j-1]@@ ==0&&@@ a[i-1]@@ [j-1]@@ !=0) { r@@ =i; s@@ =j; } } mj@@ =(@@ r@@ -@@ p@@ -1)*(@@ s@@ -@@ q@@ -1); printf("%d",@@ mj@@ ); return0; }  
c -1
h -1
0

structbook { intid; char@@ p@@ [26]; }; voidmain() { intn,i,j,k,@@ a[@@ 150@@ ]={0},@@ flag@@ ,@@ max=0; structbook@@ t@@ ,*@@ s,@@ o@@ [1000],@@ y@@ [1000]; scanf("%d",&n); s@@ =(struct@@ book@@ *)malloc(@@ n*@@ sizeof(struct@@ book)); for(i=0;i<n;i++) {@@ scanf("%d%s",&@@ s[i].@@ id,@@ s[i].@@ p); for(j=0;@@ s[i].@@ p@@ [j]!='\0';j++) a[@@ s[i].@@ p@@ [j]@@ ]++; } for(i@@ ='A'@@ ;i<=@@ 'Z'@@ ;i++) if(max<@@ a[i]@@ ){max=@@ a[i]@@ ;j@@ =i;} printf("%c\n",@@ j); printf("%d\n",max); for(i=0;i<n;i++) { flag=0; for(k=0;@@ s[i].@@ p@@ [k]@@ !='\0'@@ ;k++) if(s@@ [i].@@ p@@ [k]==@@ j)@@ flag=1; if(flag@@ ==1)@@ printf("%d\n",@@ s[i].@@ id); } }  
c -1
h -1
intmain(){ inta[@@ 100000@@ ]={0},@@ n,k,@@ x,@@ i; int@@ ifind@@ =0; scanf("%d%d",&n,&k); for(i=0;i<n;i++){ scanf("%d",&x); if(x>@@ k) continue; if(a[x@@ ]@@ ==1){ ifind@@ =1; break; } a[k@@ -x@@ ]=1; } if(@@ ifind@@ ) printf("yes"); else printf("no"); return0; }  
c -1
h -1
0

int@@ shuzu@@ [@@ 20000]; intmain(){ intn,@@ x; scanf("%d",&n); for(intt@@ =0;t@@ <n;@@ t++){ scanf("%d",&@@ shuzu@@ [t@@ ]); } for(intj=0;j<n;j++){ for(inti@@ =j+1@@ ;i<@@ n;i++){ if(shuzu@@ [i]==@@ shuzu@@ [j]){ shuzu@@ [i]=0; } } } for(intm=0;m@@ <n;m++){ if(shuzu@@ [m]@@ !=0){ if(m@@ ==0){ printf("%d",@@ shuzu@@ [m]); } else{ printf("%d",@@ shuzu@@ [m]); } } } return0; }  
c -1
h -1
structstudent { int@@ No@@ ; intchinese; intmath; int@@ all@@ ; }stu[@@ STUDENT_NUM@@ ],@@ temp; voidmain() { intn; scanf("%d",&n); inti,@@ k; for(i=0;i<n;i++){ scanf("%d%d%d",&stu[i].@@ No@@ ,&stu[i].@@ chinese@@ ,&stu[i].math); stu[i].@@ all@@ =stu[i].@@ chinese+@@ stu[i].@@ math; } for(k=1;k<@@ 4@@ ;k++){ for(i=0;i<n-@@ k;i++){ if(stu[i].@@ all@@ >=@@ stu[i+1].@@ all@@ ){ temp=@@ stu@@ [i+1]; stu@@ [i+1]=@@ stu[i]; stu[i]=@@ temp; } } } for(i=n-1;i@@ >@@ n-@@ 4@@ ;i--){ printf("%d%d\n",stu[i].@@ No@@ ,@@ stu[i].@@ all@@ ); } }  
c -1
h -1
0

voidmain() { struct@@ ts { int@@ sl@@ ; char@@ zz@@ [30]; struct@@ ts@@ *next; }; struct@@ ts@@ *@@ p1,*p2,*head; inti,j,k,@@ m,n,@@ max,@@ zzzdnum@@ ,@@ num@@ [100]={0}; char@@ zzzd@@ ; scanf("%d",&n); p1=@@ p2=@@ head=(struct@@ ts@@ *)malloc(sizeof(struct@@ ts@@ )); scanf("%d%s",&p1->@@ sl@@ ,@@ p1->@@ zz@@ ); for(i=1;i<n;i++) { p1=(struct@@ ts@@ *)malloc(sizeof(struct@@ ts@@ )); scanf("%d%s",&p1->@@ sl@@ ,@@ p1->@@ zz@@ ); p2->next=p1; p2=p1; } p1->next@@ =0; for(i@@ ='A'@@ ;i<=@@ 'Z'@@ ;i++) { p1=head; for(k=0;k<n;k++) { for(j=0;@@ p1->@@ zz@@ [j]!='\0';j++) { if(p1->@@ zz@@ [j]==@@ i)@@ num[i]@@ ++; } p1=p1->next; } } max=0; for(i@@ ='A'@@ ;i<=@@ 'Z'@@ ;i++) { max=@@ max@@ >@@ num[i]@@ ?@@ max@@ :@@ num[i]; } for(i@@ ='A'@@ ;i<=@@ 'Z'@@ ;i++) { if(num@@ [i]==@@ max@@ )@@ zzzd@@ =i; } printf("%c\n%d\n",@@ zzzd@@ ,max); p1=head; for(i=0;i<n;i++) { for(j=0;@@ p1->@@ zz@@ [j]!='\0';j++) { if(p1->@@ zz@@ [j]==@@ zzzd@@ ) { printf("%d\n",@@ p1->@@ sl@@ ); } } p1=p1->next; } }  
c -1
h -1
intmain(){ intn,k,i,j,@@ s=0; scanf("%d%d",&n,&k); inta[n]; for(i=0;i<n;i++){ scanf("%d",&a[i]); } for(i=0;i<n;i++){ for(j=0;j<n;j++){ if(i==@@ j){ j++; } if(a[i]+a[j]==@@ k){ s++; } } } if(s@@ ==0){ printf("no"); }else{ printf("yes"); } return0; }  
c -1
h -1
0

intmain(){ intn,m,@@ i,j,@@ k=0; cin>>n>>m; inta[n@@ ][@@ m]; int(*p)@@ [m]; p=a; for(i=0;i<n;i++) { for(j=0;j<m;j++) { cin>>@@ *(*(p+i)+j); } } while(k@@ <=@@ m+@@ n-2@@ ) { for(i=0;i<n;i++) { for(j=0;j<m;j++) { if(k==@@ i@@ +j@@ ) cout<<@@ *(*(p+i)@@ +j)<<endl; } } k++; } return0; }  
c -1
h -1
struct@@ pat { charnum[10]; intage; int@@ turn@@ ; }@@ pa@@ [100],@@ temp,@@ temp2@@ ; intmain() { inti,j,@@ t,@@ s,@@ n,@@ m; scanf("%d",&n); for(i=1;i<=n;i++) { scanf("%s%d",&@@ pa@@ [i].num,&@@ pa@@ [i].age); pa@@ [i].@@ turn@@ =i; } for(i=1;i<=n;i++) { if(pa@@ [i].age>=60) { for(j=1;j<=@@ i;j++) { if(pa@@ [i].age@@ >@@ pa@@ [j].age@@ ) { temp=@@ pa@@ [j]; pa@@ [j]=@@ pa@@ [i]; for(t@@ =i@@ -1;@@ t@@ >@@ j@@ ;t@@ --) { pa@@ [t@@ +1]=@@ pa@@ [t@@ ]; } pa@@ [j+1]=temp; break; } } } } for(i=1;i<=n;i++) { puts(@@ pa@@ [i].num); } return0; }  
c -1
h -1
0

intmain(){ intt,@@ e,@@ i,@@ z; e=0; double@@ x,y,@@ k,@@ h; scanf("%lf",&@@ k); chara[@@ 510@@ ],b[@@ 510@@ ]; scanf("%s",a); scanf("%s",b); t@@ =strlen(a); if(strlen(a)!=strlen(b@@ )){ printf("error"); }else{ for(i=0;a[i]@@ !='\0';i++){ if(a[i]!='@@ A'&&a[i]!='T'&&a[i]!='G'&&a[i]!='@@ C'){ z@@ ++; }elseif(@@ b[i]!='A'&&b[i]!='T'&&b[i]!='G'&&b[i]!='@@ C'){ z@@ ++; }@@ else@@ if(a[i]==b[i]){ e++; } } if(z@@ !=0){ printf("error"); }else{ x=@@ e; y=@@ t; h=@@ x/@@ y; if(h@@ >@@ k){ printf("yes"); }else{ printf("no"); } } } return0; }  
c -1
h -1
void@@ programme@@ (){ int@@ n1,n2,@@ i,j,@@ temp; inta[@@ 101@@ ],b[@@ 101]; cin>>@@ n1@@ >>@@ n2; for(i=0;i<n1;i++) { cin>>a[i]; } for(i=0;i<n2;i++) { cin>>b[i]; } for(i=0;i<n1;i++) { for(j=0;j<@@ n1@@ -i-1;j++) { if(a[j]>a[j+1]) { temp=a[j]; a[j]=a[j+1]; a[j+1]=temp; } } } for(i=0;i<n2;i++) { for(j=0;j<@@ n2@@ -i-1;j++) { if(b[j]>b[j+1]) { temp=@@ b[j]; b[j]=b[j+1]; b[j+1]=@@ temp; } } } for(i=0;i<n1;i++) cout<<a[i]<<""; for(i=0;i<n2;i++) { if(i!=@@ n2@@ -1) cout<<b[i]<<""; else cout<<@@ b[i]; } return; } intmain(){ programme@@ (); return0; }  
c -1
h -1
0

char@@ zimu@@ [@@ 28@@ ]@@ ="@@ ABCDEFGJIJKLMNOPQRSTUVWXYZ@@ "; charwriter@@ [@@ 10000@@ ][@@ 10000]; int@@ times@@ [26],@@ id@@ [1000],@@ i,@@ len@@ [@@ 10000],@@ book@@ =0; intn,@@ j,k,@@ tmax@@ ,@@ max=0; intmain() { scanf("%d",&n); for(i=0;i<n;i++) { scanf("%d%s",&@@ id[i],&@@ writer@@ [i]); len@@ [i]@@ =strlen(@@ writer@@ [i]); } for(i=0;i<26;i++) { times@@ [i]=0; } for(i=0;i<n;i++) { for(j=0;j<len@@ [i];j++) { for(k=0;k<26;k++) { if(@@ writer@@ [i][j]==@@ zimu@@ [k]) {@@ times@@ [k]@@ ++;} } } } for(i=0;i<26;i++) { if(@@ times@@ [i]>max) {max=@@ times@@ [i]; tmax@@ =i; }} printf("%c\n",@@ zimu@@ [@@ tmax@@ ]); for(i=0;i<n;i++) { for(j=0;j<len@@ [i];j++) { if(@@ writer@@ [i][j]==@@ zimu@@ [@@ tmax@@ ]) {@@ book@@ ++;} } } printf("%d\n",@@ book@@ ); for(i=0;i<n;i++) { for(j=0;j<len@@ [i];j++) { if(@@ writer@@ [i][j]==@@ zimu@@ [@@ tmax@@ ]) {printf("%d\n",@@ id@@ [i]);} } } return0; }  
c -1
h -1
intmain() { doublen; scanf("%lf",&n); chara[@@ 502@@ ],b[@@ 502@@ ]; int@@ l1,l2@@ ; scanf("%s",&@@ a); scanf("%s",&@@ b); l1@@ =strlen(a); l2@@ =strlen(b); inti,@@ k=0,@@ flag; for(i=0;i<l1;i++) if(a[i]!='@@ A'&&a[i]!='@@ G'&&a[i]!='@@ C'&&a[i]!='@@ T@@ ') {@@ flag@@ =1;} for(i=0;i<l1;i++) if(@@ b[i]!='A'&&b[i]!='@@ G'&&b[i]!='@@ C'&&b[i]!='@@ T@@ ') {@@ flag@@ =1;} if(l1!=l2@@ ||@@ flag@@ ==1) { printf("error"); } else { for(i=0;i<l1;i++) { if(a[i]==b[i]) {@@ k@@ ++;} } if(1.0*@@ k/@@ l1@@ >=@@ n) { printf("yes"); } else printf("no"); } return0; }  
c -1
h -1
0

intmain() { intn,m,@@ i,j; cin>>n>>m; inta[n@@ ][@@ m]; for(i=0;i<n;i++) for(j=0;j<m;j++) cin>>a[i][j]; int*p=@@ NULL@@ ; for(i=0,j@@ =0;i<n;i++) { for(@@ ;j<@@ m;j++) { p=@@ &@@ a[0][0]@@ +m@@ *@@ i@@ +j@@ ; for(intk=0@@ ;k<=@@ j@@ &&k@@ <=@@ m@@ &&k@@ <=@@ n@@ &&k@@ <n@@ -i@@ ;k++) cout<<@@ *(p+@@ (m@@ -1)*@@ k@@ )<<endl; } j--; } return0; }  
c -1
h -1
int@@ judge@@ (int@@ ); intmain() { intyear,month,day,@@ i,j,@@ total=0; cin>>year>>@@ month>>@@ day; for(i=1;i<=@@ month-1;i++) { if(i==1||i==3||i==5||i==7||i==8||i==@@ 10) total=total@@ +31; elseif(i==@@ 4||i==6||i==9||i==11) total=total+@@ 30; elseif(@@ judge@@ (year@@ )@@ ==0&&@@ i==@@ 2) total=total+@@ 28; elseif(@@ judge@@ (year@@ )@@ ==1&&@@ i==@@ 2) total=total+@@ 29; } total=total@@ +day; cout<<@@ total@@ <<endl; return0; } int@@ judge@@ (intx) { int@@ y=0; if(x@@ %4==0&&@@ x@@ %100!=0@@ ||@@ x%@@ 400==0) y=1; else y=0; return@@ y; }  
c -1
h -1
0

intmain() { double@@ len,@@ len1@@ ,@@ h,@@ n1@@ ; inti,@@ f,@@ r; h=0; f=0; chars[@@ 500],@@ t@@ [500],@@ n@@ [2]; gets(@@ n); n1@@ =@@ atof@@ (n); gets(s); gets(@@ t); len@@ =strlen(s); len1=strlen(@@ t); if(@@ len@@ !=@@ len1@@ ) printf("error"); else { for(i=0;i<len;i++) { if((@@ s@@ [i]!='A'&&@@ s@@ [i]!='T@@ '&&@@ s@@ [i]!='C'&&@@ s@@ [i]!='G')@@ || (@@ t@@ [i]!='A'&&@@ t@@ [i]!='T@@ '&&@@ t@@ [i]!='C'&&@@ t@@ [i]!='G')@@ ) f=1; } if(f@@ ) printf("error"); else{ for(i=0;i<len;i++) { if(s[i]==@@ t@@ [i]) h@@ ++; } if(h@@ /@@ len@@ >@@ n1@@ ) printf("yes"); else printf("no"); } } return0; }  
c -1
h -1
intmain() { intn,@@ b[@@ 1000][1000],@@ i,k,@@ s; int@@ x1,@@ x2,@@ y1,@@ y2@@ ; scanf("%d",&n); for(i=0;i<n;i++) { for(k=0;k<n;k++) { scanf("%d",&(@@ b[i]@@ [k]@@ )); } } for(i=0;i<n;i++) { for(k=0;k<n;k++) { if(b[i]@@ [k]@@ ==0&&@@ b@@ [i+1@@ ][k@@ ]==@@ b[i]@@ [k]@@ &&@@ b[i]@@ [k+1@@ ]==@@ b[i]@@ [k]) { x1=i; y1@@ =k; } if(b[i]@@ [k]@@ ==0&&@@ b@@ [i-1@@ ][k@@ ]==@@ b[i]@@ [k]@@ &&@@ b[i]@@ [k-1@@ ]==@@ b[i]@@ [k]) { x2=i; y2@@ =k; } } } s=(@@ x2-x1-1)*(y2-y1-1); printf("%d",s); return0; }  
c -1
h -1
0

intmain() { intn,k,@@ a,@@ e@@ [@@ 10008@@ ],i,j,@@ m,@@ log@@ ; log@@ =0; scanf("%d%d",&n,&k); if(n==1) { if(n@@ ==k) { printf("yes"); }else{ printf("no"); } }else{ scanf("%d",&a); e@@ [1]=@@ a; for(i=2;i<=n;i++) { scanf("%d",&a); e@@ [i]=@@ a; } for(j=1;j<=n;j++) { for(m=@@ n;@@ m@@ >@@ j@@ ;m@@ --) { if((@@ e@@ [j]+@@ e@@ [m@@ ])@@ ==k) { printf("yes"); log@@ =1; break; } } if(@@ log@@ >0@@ .@@ 1) { break; } } if(@@ log@@ <0@@ .@@ 1) { printf("no"); } } return0; }  
c -1
h -1
intmain(){ doublen,@@ y; inta,b,@@ x=0,@@ k=1; char@@ sy@@ [501],@@ se@@ [501]; scanf("%lf%s%s",&@@ n,@@ sy@@ ,@@ se@@ ); a=strlen(@@ sy@@ ); b=strlen(@@ se@@ ); if(a!=@@ b){ printf("error"); } else{ for(inti=0;i<@@ a;i++){ if((@@ sy@@ [i]=='A'||@@ sy@@ [i]=='T'||@@ sy@@ [i]=='C'||@@ sy@@ [i]=='@@ G')&&(@@ se@@ [i]=='A'||@@ se@@ [i]=='T'||@@ se@@ [i]=='C'||@@ se@@ [i]=='@@ G')){ if(@@ sy@@ [i]==@@ se@@ [i]){ x@@ +=1; } } else{ k=0; break; } } if(k@@ ==0){ printf("error"); } else{ y@@ =1.0*@@ x/@@ a; if(y@@ >=@@ n){ printf("yes"); } else{ printf("no"); } } } return0; }  
c -1
h -1
0

intm,n; inta[100]; void@@ insert@@ (void) { inti=0; scanf("%d%d",&m,&n); for(i=0;i<m;i++) { scanf("%d",&a[i]); } printf("\n"); for(i=m;i<@@ m+n;i++) { scanf("%d",&a[i]); } } void@@ px@@ (int*p@@ ) { inti,j,@@ b=0; for(i=0;i<m;i++) { for(j=@@ m-1@@ ;j>i;j--) { if(@@ *(p+j)@@ <*@@ (p@@ +j@@ -1)) { b@@ =*(p@@ +j); *(p+j)@@ =*(p@@ +j@@ -1); *(p@@ +j@@ -1)@@ =@@ b; } } } for(i=m;i<@@ m+n;i++) { for(j=@@ m+@@ n-1@@ ;j>i;j--) { if(@@ *(p+j)@@ <*@@ (p@@ +j@@ -1)) { b@@ =*(p@@ +j); *(p+j)@@ =*(p@@ +j@@ -1); *(p@@ +j@@ -1)@@ =@@ b; } } } printf("%d",@@ *(p+@@ 0@@ )); for(i=1;i<@@ m+n;i++) { printf("%d",@@ *(p@@ +i)); } } voidmain() { insert@@ (); px@@ (a); }  
c -1
h -1
intmain() { intn,i,j,@@ a[100][100],@@ num=0,@@ v@@ ,@@ k; cin>>n; for(i=0;i<n;i++) { for(j=0;j<n;j++) { cin>>a[i][j]; } } for(i=0;i<n;i++) { for(j=0;j<n;j++) { if(a[i][j]==0) { for(k=j@@ ;@@ ;k++) { if(a[i]@@ [k]@@ !=0) { break; } } for(@@ v@@ =i;@@ ;@@ v@@ ++) { if(a[@@ v@@ ][j]@@ !=0) { break; } } num@@ =(@@ k@@ -j@@ -2)*(@@ v@@ -i@@ -2); break; } if(num@@ !=0) break; } } cout<<num<<endl; return0; }  
c -1
h -1
0

intmain() { intn,k,@@ a@@ =1,@@ i,j; intsz[1000]; scanf("%d%d",&n,&k); for(i=0;i<n;i++){ scanf("%d",&sz[i]); } for(i=0;i<n;i++){ for(j=i+1;j<n;j++){ if(sz[i]+sz@@ [j]==k){ a=0; } } } while(@@ a@@ ==0){ printf("yes"); break; } while(@@ a){ printf("no"); break; } return0; }  
c -1
h -1
intmain() { introw,col,@@ i,j,k,@@ sum; cin>>row>>col; intarray[@@ row][col]; for(i=0;i<row;i++) for(j=0;j<col;j++) cin>>array[i][j]; sum=@@ row@@ +@@ col; for(k=@@ 2@@ ;k<=@@ sum@@ ;k++) for(i=1;i<=@@ row;i++) for(j=@@ col@@ ;j>0;j--) if(i+j@@ ==k) {@@ cout<<array@@ [i-1]@@ [j-1]@@ <<endl@@ ;break;} return0; }  
c -1
h -1
0

intsum=0; intmain() {@@ void@@ shu@@ (inta,int@@ b); intn=0,@@ i=0,@@ a=0,@@ c=0,@@ j=0; scanf("%d",&n); for(i=1;i<=n;i++) {@@ scanf("%d",&a); for(j=2;j<=@@ sqrt(@@ (double)@@ a)@@ ;j++) {@@ if(a%@@ j@@ ==0) {@@ sum=sum+1; shu@@ (@@ j,@@ a/@@ j); } } printf("%d",@@ sum@@ +1); if(i<@@ n) printf("\n"); sum=0; } return(0); } void@@ shu@@ (inta,intb) {int@@ i=0; for(i=a@@ ;i<=sqrt(@@ (double)@@ b@@ );i++) {@@ if(b@@ %i==0) {@@ sum=sum+1; shu@@ (i,@@ b@@ /i); } } }  
c -1
h -1
intmain(void) { int@@ ye@@ ,@@ mo@@ ,@@ da@@ ,i,@@ sum=0; int@@ mon@@ [@@ ]={0,31,@@ 28,31,30,31,30,31,31,30,31,30,31}; scanf("%d%d%d",&@@ ye@@ ,&@@ mo@@ ,&@@ da@@ ); for(i=1;i<@@ mo@@ ;i++) { sum=sum+@@ mon@@ [i]; } if(((@@ ye@@ %@@ 400==0)@@ &&@@ mo@@ >2@@ )||((@@ ye@@ %@@ 4==0)&&(@@ ye@@ %100!=0@@ ))@@ &&@@ mo@@ >2) { sum=sum+@@ da@@ +1; } else { sum=sum+@@ da@@ ; } printf("%d",sum); return0; }  
c -1
h -1
0

structbook { intnum; char@@ edit@@ [26]; structbook*next; }; intm; structbook@@ *head,*p1,*p2; structbook*@@ creat@@ (void) { p1=(structbook@@ *)malloc(len); scanf("%d%s",&p1->num,p1->@@ edit@@ ); head=p1; p2=p1; m=@@ m-1@@ ; do { p1=(structbook@@ *)malloc(len); scanf("%d%s",&p1->num,p1->@@ edit@@ ); p1->next=NULL; p2->next=p1; p2=p1; m=@@ m-1@@ ; }while(@@ m); return(head); } voidmain() { intmax=0,@@ i=0,@@ j,@@ k@@ [26]={0}; structbook@@ *head,*p; scanf("%d",&m); head=creat(); for(p=head@@ ;p!=NULL;@@ ) { for(i=0;@@ p->@@ edit@@ [i]@@ !=0;i++) k@@ [@@ (p->@@ edit@@ [i])@@ -65@@ ]@@ +=1; p=p->next; } for(i=0;i<26;i++) if(k@@ [i]@@ >max){max=@@ k@@ [i]@@ ;j@@ =i;} printf("%c\n%d\n",@@ j@@ +65@@ ,max); for(p=head@@ ;p!=NULL;@@ ) { for(i=0;@@ p->@@ edit@@ [i]@@ !=0;i++) if(p->@@ edit@@ [i]==@@ j@@ +65@@ )@@ printf("%d\n",p->num); p=p->next; } }  
c -1
h -1
voidmain() { inti,j,k,@@ m,n,@@ max; structstu { int@@ xh@@ ; int@@ yw@@ ; int@@ sx; int@@ zf@@ ; structstu*next; }; structstu*@@ p1,*p2,*head; scanf("%d",&n); p2=@@ head@@ =p1@@ =(struct@@ stu*)malloc(sizeof(structstu)); scanf("%d%d%d",&p1->@@ xh@@ ,&p1->@@ yw@@ ,&p1->@@ sx@@ ); p1->@@ zf@@ =p1->@@ yw@@ +p1->@@ sx; for(i=1;i<n;i++) { p1=(struct@@ stu*)malloc(sizeof(structstu)); scanf("%d%d%d",&p1->@@ xh@@ ,&p1->@@ yw@@ ,&p1->@@ sx@@ ); p1->@@ zf@@ =p1->@@ yw@@ +p1->@@ sx; p2->next=p1; p2=p1; } for(j=0;j<3;j++) { p1=head; max=0; for(i=0;i<n;i++) { max=@@ max@@ >@@ p1->@@ zf@@ ?@@ max@@ :@@ p1->@@ zf@@ ; p1=p1->next; } p1=head; for(i=0;i<n;i++) { if(max@@ ==@@ p1->@@ zf@@ ) { printf("%d%d\n",@@ p1->@@ xh@@ ,@@ p1->@@ zf@@ ); p1->@@ zf@@ =0; break; } p1=p1->next; } } }  
c -1
h -1
0

intmain(intargc,char*argv[]) { intyear,month,day,@@ a; scanf("%d%d%d",&year,&month,&day); if(year%@@ 4==0&&year%100!=0@@ ||@@ year%@@ 400@@ ==0){ if(month==1) a=@@ day; if(month==2) a=@@ day+@@ 31; if(month==3) a=@@ day+@@ 60@@ ; if(month==@@ 4) a=@@ day+@@ 91@@ ; if(month==@@ 5) a=@@ day+@@ 121@@ ; if(month==@@ 6) a=@@ day+@@ 152@@ ; if(month==@@ 7) a=@@ day+@@ 182@@ ; if(month==8) a=@@ day+@@ 213@@ ; if(month==@@ 9) a=@@ day+@@ 244@@ ; if(month==@@ 10) a=@@ day+@@ 274@@ ; if(month==@@ 11) a=@@ day+@@ 305@@ ; if(month==@@ 12) a=@@ day+@@ 335@@ ;} else { if(month@@ ==1)@@ a=@@ day; if(month==@@ 2)@@ a=@@ day+@@ 31; if(month==@@ 3)@@ a=@@ day+@@ 59@@ ; if(month==@@ 4)@@ a=@@ day+@@ 90@@ ; if(month==@@ 5@@ )@@ a=@@ day+@@ 120@@ ; if(month==@@ 6@@ )@@ a=@@ day+@@ 151@@ ; if(month==@@ 7@@ )@@ a=@@ day+@@ 181@@ ; if(month==@@ 8@@ )@@ a=@@ day+@@ 212@@ ; if(month==@@ 9@@ )@@ a=@@ day+@@ 243@@ ; if(month==@@ 10@@ )@@ a=@@ day+@@ 273@@ ; if(month==@@ 11@@ )@@ a=@@ day+@@ 304@@ ; if(month==@@ 12@@ )@@ a=@@ day+@@ 334@@ ;@@ }; printf("%d\n",@@ a); return0; }  
c -1
h -1
intmain() { inta[16]; inti,j,k; int@@ count; end3@@ :@@ ; for(i=0;;i++) { count=0; cin>>a[i]; if(a[i]==-1) {@@ goto@@ end1@@ ;} if(a[i]==0) { for(j=0;j<i;j++) { for(k=0;k<i;k++) { if(a[j]==2*@@ a[k]) { count=@@ count@@ +1; break; } } } cout<<count<<endl; goto@@ end3@@ ; } } end1@@ :@@ ; return0; }  
c -1
h -1
0

structbook { intID; charauthor@@ [30]; structbook*next; }; intn,@@ max=0; charc; structbook*@@ create@@ () { structbook@@ *head,*p1,*p2; p1=(structbook@@ *)malloc(LEN); scanf("%d%s",&p1->@@ ID,@@ p1->@@ author); head=p1; p2=p1; p1->next=NULL; inti=1; do { if(i==@@ n@@ )break; p1=(structbook@@ *)malloc(LEN); scanf("%d%s",&p1->@@ ID,@@ p1->@@ author); p2->next=p1; p2=p1; p1->next=NULL; i++; }while(@@ 1); return(head); } intmain() { structbook*@@ head; inti; int*@@ num; num=@@ (int*)malloc(@@ 26@@ *sizeof(int)); for(i=0;i<26;i++) *(@@ num@@ +i)@@ =0; scanf("%d",&n); head=@@ create@@ (); structbook@@ *p; char*@@ s; p=head; while(p) { for(@@ s=@@ p->@@ author@@ ;*@@ s@@ !='\0'@@ ;s++) { inttemp; temp@@ =*@@ s@@ -'A'; (*(@@ num@@ +@@ temp@@ ))@@ ++; } p=p->next; } for(i=0;i<26;i++) { if(*(@@ num@@ +i)@@ >max@@ )@@ max@@ =*(@@ num@@ +i); } for(i=0;i<26;i++) { if(*(@@ num@@ +i)@@ ==@@ max@@ )break; } printf("%c\n%d\n",@@ 'A'+@@ i,@@ max); c@@ ='A'+i; p=head; while(p) { for(@@ s=@@ p->@@ author@@ ;*@@ s@@ !='\0'@@ ;s++) { if(*@@ s@@ ==@@ c@@ )break; } if(*@@ s@@ !=@@ '\0')@@ printf("%d\n",p->@@ ID); p=p->next; } }  
c -1
h -1
structstu { float@@ num; float@@ chi@@ ,@@ mat@@ ,@@ total; structstu*next; }; structstu*@@ creat@@ (intn) { inti; structstu@@ *head,*p1,*p2; for(i=0;i<n;i++) { p1=(struct@@ stu*)malloc(sizeof(structstu)); scanf("%@@ f@@ %@@ f@@ %@@ f",&@@ p1->num,&p1->@@ chi@@ ,&p1->@@ mat@@ ); p1->@@ total=@@ p1->@@ chi@@ +p1->@@ mat@@ ; if(i==0) {@@ head=@@ p2@@ =p1;} else {@@ p2->next@@ =p1;@@ p2@@ =p1;} } p2->next@@ =0; return(head); } voidmain() { intn,i,j; float@@ max; structstu@@ *head,*@@ maxi@@ ,*p; scanf("%d",&n); head=creat(n); for(i=0;i<3;i++) { p=@@ head;@@ maxi@@ =head; max=@@ head->@@ total; for(j=0;j<n-1;j++) { p=p->next; if(p->@@ total@@ >max) {max=@@ p->@@ total@@ ;@@ maxi@@ =p@@ ;} } printf("%@@ g@@ %@@ g@@ \n",@@ maxi@@ ->num,@@ maxi@@ ->@@ total); maxi@@ ->@@ total=0; } }  
c -1
h -1
0

intmain() { intb,@@ d=0,@@ s[@@ 15],@@ i,j; while(1) { scanf("%d",&s@@ [0]); if(s@@ [0]@@ ==-1)break; for(i=1;@@ s@@ [i-1]@@ !=0;i++) scanf("%d",&s[i]); for(i=0;s[i]@@ !=0;i++) for(j=0;@@ s[j]@@ !=0;j++) {if((@@ s@@ [i]==@@ s[j]@@ *2@@ )&&(@@ s[i]@@ !=0)&&(@@ s[j]@@ !=0)) d++; } printf("%d\n",@@ d); d=0; } return0; }  
c -1
h -1
structstudent { intnum; intchinese; intmath; structstudent*next; }; intm; structstudent*creat@@ (intn) { structstudent*head; structstudent*p1,*p2; m=0; p1=p2@@ =(structstudent*)malloc(sizeof(structstudent)); scanf("%d%d%d",&p1->num,&p1->@@ chinese@@ ,&p1->math); head=NULL; while(n--) { m=m+1; if(m==1) head=p1; else p2->next=p1; p2=p1; p1@@ =(structstudent*)malloc(sizeof(structstudent)); scanf("%d%d%d",&p1->num,&p1->@@ chinese@@ ,&p1->math); } p2->next=NULL; return(head); } structstudent*@@ del@@ (structstudent*head@@ ,int@@ num) { structstudent*p1,*p2; p1=head; while(@@ num@@ !=@@ p1->num@@ &&@@ p1->next@@ !=NULL) { p2=p1; p1=p1->next; } if(num@@ ==@@ p1->num@@ ) { if(@@ p1@@ ==@@ head@@ ) head=@@ p1->next; else p2->next=@@ p1->next; m=@@ m-1@@ ; } return(head); } intmain() { intmax=0; intn,@@ j; scanf("%d",&n); structstudent*head,*p1,*p2; head=creat(n); for(j=0;j<3;j++) { p1=head; p2=head; max=0; while(@@ p1->next@@ !=NULL) { if((@@ p1->@@ chinese+@@ p1->@@ math@@ )@@ >max) max=@@ p1->@@ chinese+@@ p1->@@ math@@ ,@@ p2=p1; p1=p1->next; } printf("%d%d\n",@@ p2->@@ num,@@ (@@ p2->@@ chinese+@@ p2->@@ math@@ )); head=@@ del@@ (head,@@ p2->@@ num); } }  
c -1
h -1
0

int@@ old@@ =0; struct@@ seqs { charid@@ [11]; intage; struct@@ seqs@@ *next; }; struct@@ seqs@@ *@@ build@@ (int@@ l) { inti; struct@@ seqs@@ *head,*@@ newnode@@ ,*p; head=(struct@@ seqs@@ *)malloc(len); scanf("%s%d",@@ head->@@ id,&@@ head@@ ->age@@ ); p=head; if(head@@ ->age@@ >=60) old@@ ++; for(i=1;i<@@ l@@ ;i++) { newnode@@ =(struct@@ seqs@@ *)malloc(len); scanf("%s%d",@@ newnode@@ ->@@ id,&@@ newnode@@ ->age@@ ); if(@@ newnode@@ ->age@@ <60) { p@@ ->next=@@ newnode@@ ; p=@@ newnode@@ ; } else { old@@ ++; newnode@@ ->next=@@ head; head=@@ newnode@@ ; } } p@@ ->next=NULL; returnhead; } struct@@ seqs@@ *@@ rebuild@@ (struct@@ seqs@@ *@@ headx@@ ) { inti; struct@@ seqs@@ *head,*@@ newnode@@ ,*@@ p,*@@ px@@ ; newnode@@ =(struct@@ seqs@@ *)malloc(@@ len@@ );@@ newnode@@ ->next=NULL; strcpy(@@ newnode@@ ->id,@@ headx@@ ->id); newnode@@ ->age=@@ headx@@ ->@@ age; p=@@ newnode@@ ; px@@ =@@ headx@@ ->next; for(i=1;i<@@ old@@ ;i++) { newnode@@ =(struct@@ seqs@@ *)malloc(len); strcpy(@@ newnode@@ ->id,@@ px@@ ->id); newnode@@ ->age=@@ px@@ ->@@ age; newnode@@ ->next=p; p=@@ newnode@@ ; px@@ =@@ px@@ ->next; } head=@@ p; returnhead; } void@@ bubble@@ (struct@@ seqs@@ *head@@ ,int@@ l) { struct@@ seqs@@ *p; inti,j,temp; char@@ t@@ [11@@ ]={0}; for(i=1;i<@@ l@@ ;i++) for(p=head@@ ,j@@ =0;j<@@ l@@ -i@@ ;j++,@@ p=p->next) if(p->@@ age@@ <p@@ ->next@@ ->age@@ ) { strcpy(@@ t,@@ p->@@ id); strcpy(@@ p->@@ id,@@ p->next@@ ->id); strcpy(@@ p->next@@ ->id,@@ t); temp=@@ p->@@ age; p->age@@ =p@@ ->next@@ ->@@ age; p->next@@ ->age=@@ temp; } } voidmain() { intn,i,j; struct@@ seqs@@ *p,*@@ px@@ ; scanf("%d",&n); p=@@ build@@ (n); px@@ =@@ rebuild@@ (p); bubble@@ (@@ px@@ ,@@ old@@ ); while(@@ px@@ !=NULL) { printf("%s\n",@@ px@@ ->id); px@@ =@@ px@@ ->next; } for(i=0;i<@@ old@@ ;i++) p=p->next; while(p!=NULL) { printf("%s\n",p->id); p=p->next; } }  
c -1
h -1
intmain() { intn,i,j; inta[100],b[100],@@ bm@@ =-1; cin>>n; for(i=0;i<@@ 100@@ ;i++)@@ b[i]=1; for(i=1;i<=n;i++) {@@ cin>>a[i]; for(j=1;j<@@ i@@ ;j++)@@ if(a[j]>=@@ a[i]@@ &&(@@ b[j]@@ +1)@@ >@@ b[i]@@ )@@ b[i]@@ =(@@ b[j]@@ +1); if(b[i]>@@ bm@@ )@@ bm@@ =@@ b[i]; } cout<<@@ bm@@ ; }  
c -1
h -1
0

intmain() { intn; cin>>n; inta[@@ 26],@@ max,@@ num[@@ n@@ ],i,j,@@ s; char@@ maxname@@ ,@@ name@@ [n@@ ][10]; memset(a,0,@@ sizeof(a)); for(i=0;i<n;i++) { cin>>@@ num[i]@@ >>@@ name@@ [i]; s@@ =strlen(@@ name@@ [i]); for(j=0;j<@@ s@@ ;j++) a[@@ name@@ [i][j]@@ -'A']++; } max=@@ a[@@ 0],@@ maxname@@ ='A'; for(i=1;i<26;i++) if(a[i]>max) { max=@@ a[i],@@ maxname@@ ='A'+i; } cout<<@@ maxname@@ <<endl@@ <<@@ max<<endl; for(i=0;i<n;i++) { s@@ =strlen(@@ name@@ [i]); for(j=0;j<@@ s@@ ;j++) if(name@@ [i][j]==@@ maxname@@ ) cout<<@@ num[i]@@ <<endl; } return0; }  
c -1
h -1
intmain() { inta[@@ 101][101]; intn,k,@@ row,col,@@ i,j,@@ sum=0; cin>>n; for(k=1;k<=n;k++) { cin>>row>>col; for(i=1;i<=@@ row;i++) { for(j=1;j<=col;j++) { cin>>a[i][j]; } } for(j=1;j<=@@ col@@ ;j++)@@ sum=sum+@@ a[1]@@ [j]; for(i=2;i<=@@ row@@ ;i++)@@ sum=sum+@@ a[i][@@ col@@ ]; for(j=1;j<=@@ col-1@@ ;j++)@@ sum=sum+@@ a[@@ row@@ ]@@ [j]; for(i=2;i<=@@ row-1@@ ;i++)@@ sum=sum+@@ a[i]@@ [1]; cout<<sum<<endl; sum=0; } return0; }  
c -1
h -1
0

intsum@@ (int@@ ); int@@ g_count@@ ,@@ g_j@@ ; intmain() { intn,a,@@ i; cin>>n; for(i=0;i<n;i++) { g_count@@ =0; g_j@@ =@@ 2; cin>>a; cout<<sum@@ (@@ a)@@ +1<<endl; } return0; } intsum@@ (int@@ a) { inti,@@ b; b=@@ (int)sqrt(@@ (double)@@ a); for(i=@@ g_j@@ ;i<=@@ b;i++) { if(a%i==0) { g_j@@ =i; g_count@@ ++; sum@@ (a@@ /i); } } return@@ g_count@@ ; }  
c -1
h -1
intmain() { intyear,month,day; intn; scanf("%d%d%d",&year,&month,&day); if((year%4==0&&year%100!=0@@ )||@@ year%400==0) { switch(month@@ ){ case1: n=@@ day; break; case2: n=31+@@ day; break; case3: n=@@ 60@@ +day; break; case4: n=@@ 91@@ +day; break; case5: n=@@ 121@@ +day; break; case6: n=@@ 152@@ +day; break; case7: n=@@ 182@@ +day; break; case8: n=@@ 213@@ +day; break; case9: n=@@ 244@@ +day; break; case10: n=@@ 274@@ +day; break; case11: n=@@ 305@@ +day; break; case12: n=@@ 335@@ +day; break; } } else { switch(month@@ ){ case1: n=@@ day; break; case2: n=@@ 30@@ +day; break; case3: n=@@ 59@@ +day; break; case4: n=@@ 90@@ +day; break; case5: n=@@ 120@@ +day; break; case6: n=@@ 151@@ +day; break; case7: n=@@ 181@@ +day; break; case8: n=@@ 212@@ +day; break; case9: n=@@ 243@@ +day; break; case10: n=@@ 273@@ +day; break; case11: n=@@ 304@@ +day; break; case12: n=@@ 334@@ +day; break; } } printf("%d",n); return0; }  
c -1
h -1
0

intmain(){ inti,@@ num=0,@@ l1,l2,@@ a=0; double@@ p; char@@ fir@@ [501],@@ sec@@ [501]; scanf("%lf",&@@ p); scanf("%s%s",@@ fir@@ ,@@ sec@@ ); l1=strlen(@@ fir@@ ); l2=strlen(@@ sec@@ ); if(l1!=l2@@ ){ printf("error\n"); a=1; } for(i=0;i<l1;i++){ if((@@ fir@@ [i]!=@@ 65@@ &&@@ fir@@ [i]!=@@ 67@@ &&@@ fir@@ [i]!=@@ 71@@ &&@@ fir@@ [i]!=@@ 84@@ )||(@@ sec@@ [i]!=@@ 65@@ &&@@ sec@@ [i]!=@@ 67@@ &&@@ sec@@ [i]!=@@ 71@@ &&@@ sec@@ [i]!=@@ 84@@ )){ if(a@@ ==0){ printf("error\n"); a=1; } break; } if(@@ fir@@ [i]==@@ sec@@ [i]){ num@@ +=1; } } if(num@@ *1.0/@@ l1@@ >=@@ p@@ &&@@ a@@ ==0){ printf("yes\n"); }elseif(@@ num@@ *1.0/@@ l1@@ <p@@ &&@@ a@@ ==0){ printf("no\n"); } return0; }  
c -1
h -1
intmain(){ intk,@@ i; intsz@@ [100][100],@@ sum,@@ s@@ [100]; inta,b,@@ m,n; scanf("%d",&k); for(i=1;i<=@@ k;i++){ sum=0; scanf("%d%d",&m,&n); for(a=0;a@@ <m;@@ a++){ for(b=0;b@@ <n;b++){ scanf("%d",&@@ sz[a@@ ][b@@ ]); } } for(b=0;b@@ <n;b++){ sum+=@@ sz[0][@@ b@@ ]; sum+=@@ sz[@@ m-1][@@ b@@ ]; } for(a@@ =1;@@ a@@ <m-1@@ ;a@@ ++){ sum+=@@ sz[a@@ ][0]; sum+=@@ sz[a@@ ][n-1]; } s[i]=@@ sum; } for(i=1;i<=@@ k;i++){ printf("%d\n",@@ s[i]); } return0; }  
c -1
h -1
0

intmain(intargc,char*argv[]) { intn; scanf("%d",&n); struct{ inta; chars[@@ 26]; }@@ zuozhe@@ [1000]; inti,@@ k; for(i=0;i<n;i++){ scanf("%d%s",&@@ zuozhe@@ [i].@@ a,@@ zuozhe@@ [i].@@ s); } intc[@@ 26]={0},@@ d; for(i=0;i<n;i++){ d@@ =strlen(@@ zuozhe@@ [i].@@ s); for(k=0;k<@@ d@@ ;k++){ c[@@ zuozhe@@ [i].@@ s[k]@@ -65]++; } } intf@@ ; for(i=1;i<@@ 26@@ ;i++){ if(c@@ [i]>@@ c@@ [0]){ f@@ =i; d=@@ c[i]; c[i]=@@ c[@@ 0]; c[@@ 0]=@@ d; } } printf("%c\n%d\n",@@ f@@ +65@@ ,@@ c@@ [0]); for(i=0;i<n;i++){ d@@ =strlen(@@ zuozhe@@ [i].@@ s); for(k=0;k<@@ d@@ ;k++){ if(@@ zuozhe@@ [i].@@ s@@ [k]==@@ f@@ +65) printf("%d\n",@@ zuozhe@@ [i].@@ a); } } return0; }  
c -1
h -1
main() { intyear,@@ mon@@ ,@@ day,@@ f,@@ i,@@ sum=0; inta[@@ 12]={31,28,31,30,31,30,31,31,30,31,30,31}; scanf("%d%d%d",&year,&@@ mon@@ ,&@@ day); if(year%@@ 4==0&&@@ year%@@ 100!=0) f=1; elseif(@@ year%400==0) f=1; else f=0; for(i=1;i<@@ mon@@ ;i++) { sum=sum+@@ a[i@@ -1]; } sum=sum+day; if(f@@ ==1&&@@ mon@@ >2) sum=sum+1; printf("%d",sum); getchar(); getchar(); }  
c -1
h -1
0

structpatient { charid[20]; intage; intnum; }; intmain() { intn; scanf("%d",&n); inti,j; structpatient@@ p@@ [100]; for(i=1;i<=@@ n;++@@ i) { scanf("%s%d",&@@ p[i].@@ id,&@@ p[i].age); p[i].@@ num@@ =i; } for(i=1;i<=@@ n-1;@@ ++@@ i) { for(j=i+1;j<=@@ n;++@@ j) { if(p@@ [j].age@@ >@@ p@@ [i].age@@ ) { structpatient@@ t; t=@@ p[i]; p[i]=@@ p@@ [j]; p@@ [j]=@@ t; } } } for(i=1@@ ;p@@ [i].age@@ >=60@@ ;++i) { for(j=i+1@@ ;p@@ [j].age@@ ==@@ p@@ [i].age@@ ;++@@ j) { if(p@@ [i].@@ num@@ >@@ p@@ [j].@@ num) { structpatient@@ t; t=@@ p[i]; p[i]=@@ p@@ [j]; p@@ [j]=@@ t; } } printf("%s\n",@@ p@@ [i].id); } for(j=i;j<=@@ n;++@@ j) { intk; for(k=j+1@@ ;k<=@@ n;++@@ k) { if(p@@ [j].@@ num@@ >@@ p@@ [k].@@ num) { structpatient@@ t; t=@@ p@@ [j]; p@@ [j]=@@ p@@ [k]; p@@ [k]=@@ t; } } printf("%s\n",@@ p@@ [j].@@ id); } return0; }  
c -1
h -1
voidmain() { intk,i,j,@@ n,@@ m; inta[@@ 15]; scanf("%d",&k); while(k@@ !=-1) { n=0; m=0; i=0; while(k@@ !=0) { n++; a[i]=@@ k; i++; scanf("%d",&k); } for(i=0;i<n;i++) for(j=i+1;j<n;j++) { if(a[i]==2*@@ a[j]||a[j]==2*@@ a[i]) { m++; } } printf("%d\n",m); scanf("%d",&k); } }  
c -1
h -1
0

intk; int@@ height@@ [26]; int@@ len@@ (int@@ num@@ ){ int@@ temp,@@ max,@@ i; if(num@@ ==k){ return(1); }else{ max=0; for(i=@@ num@@ +1;i<=@@ k;i++){ if(@@ height@@ [@@ num@@ ]>=@@ height@@ [i]){ temp=@@ len@@ (i); if(max<@@ temp@@ ){ max=@@ temp; } } } } return(@@ max@@ +1); } main(){ height@@ [0]=@@ 30001@@ ; scanf("%d",&k); inti; for(i=1;i<=@@ k;i++){ scanf("%d",&@@ height@@ [i]); } printf("%d",@@ len@@ (@@ 0)@@ -1); scanf("%d",&k); }  
c -1
h -1
intmain() { inta[@@ 20000@@ ]={0}; intb[@@ 20000@@ ]={0}; intn,i,j,@@ t,@@ m; cin>>n; for(m=0;m@@ <=@@ n-1@@ ;m++) { cin>>@@ a[m@@ ]; } for(i=0;i<=n-1;i++) { for(j=0;j<i;j++) { if(a[j]==a[i]) b[i]=1; } } cout<<a[0]; for(t@@ =1;t@@ <=@@ n-1@@ ;t++) { if(@@ b[t@@ ]==0) cout<<""<<@@ a[t@@ ]; } return0; }  
c -1
h -1
0

void@@ program@@ (void@@ ){ intm,n,@@ i,j; cin>>m>>n; const@@ int@@ M@@ =@@ n,@@ N@@ =@@ n; inta[@@ M@@ ],b[@@ N]; for(i=0;i<m@@ ;++@@ i)@@ cin>>a[i]; for(i=0;i<n@@ ;++@@ i)@@ cin>>b[i]; for(i=0;i<m@@ ;++@@ i)@@ for(j=i+1;j<@@ m;@@ ++@@ j)@@ if(a[i]>@@ a[j]@@ ){ a[i]=@@ a[i]+a[j]; a[j]=@@ a[i]@@ -@@ a[j]; a[i]=@@ a[i]@@ -@@ a[j]; } for(i=0;i<n@@ ;++@@ i)@@ for(j=i+1;j<@@ n;++@@ j)@@ if(b[i]>@@ b[j]@@ ){ b[i]=@@ b[i]@@ +@@ b[j]; b[j]=@@ b[i]@@ -@@ b[j]; b[i]=@@ b[i]@@ -@@ b[j]; } cout<<a[0]; for(i=1;i<@@ m;@@ ++@@ i)@@ cout<<''<<@@ a[i]; for(i=0;i<n@@ ;++@@ i)@@ cout<<''<<@@ b[i]; } intmain(){ program@@ (); return0; }  
c -1
h -1
intmain(intargc,char*argv[]) {@@ intyear,month,day; scanf("%d%d%d",&year,&month,&day); intsum=0; if(year%@@ 4==0&&year%100!=0@@ ||@@ year%400==0) {int@@ mon@@ [@@ 12]={31,29,31,30,31,30,31,31,30,31,30,31}; if(month==1) sum=@@ day; elseif(month==@@ 2) sum=@@ 31+@@ day; else {@@ for(inti=0;i<=@@ (@@ month@@ -2@@ );i++) {@@ sum+=@@ mon@@ [i]@@ ;} sum=sum+day; } printf("%d",sum); } elseif(@@ year%@@ 4!=0@@ ||@@ year%@@ 100==0&&@@ year%@@ 400@@ !=0) {if(@@ month@@ ==1) sum=@@ day; elseif(month==@@ 2) sum=@@ 31+@@ day; else {int@@ mon@@ [12]={31,28,31,30,31,30,31,31,30,31,30,31}; for(inti=0;i<=@@ (@@ month@@ -2@@ );i++) {@@ sum+=@@ mon@@ [i]@@ ;} sum=sum+day; }@@ printf("%d",sum); } return0; }  
c -1
h -1
0

intmain() { intn@@ =1,@@ h,@@ l,@@ i,j,@@ a[100][100],@@ lans@@ =0,@@ ans@@ [@@ 10000],@@ k; scanf("%d%d",&@@ h@@ ,&@@ l); for(i=0;i<@@ h@@ ;i++) for(j=0;j<l;j++) scanf("%d",&a[i][j]); for(n@@ =1;@@ n@@ <=@@ l@@ ;n++) for(j=0@@ ,@@ k=@@ n-1@@ ;k>=0@@ &&j@@ <=@@ h@@ -1@@ ;j++@@ ,k@@ --) ans@@ [@@ lans@@ ++]=@@ a[j]@@ [k]; for(n=@@ 2@@ ;n@@ <=@@ h@@ ;n++) for(j=n-1@@ ,@@ k=@@ l@@ -1@@ ;j<=@@ h@@ -1@@ &&k@@ >=0@@ ;j++@@ ,k@@ --) ans@@ [@@ lans@@ ++]=@@ a[j]@@ [k]; for(i=0;i<@@ lans@@ ;i++) printf("%d\n",@@ ans@@ [i]); return0; }  
c -1
h -1
const@@ int@@ MAXN@@ =@@ 25@@ +@@ 2; intn; inta[@@ MAXN@@ ],@@ f[@@ MAXN@@ ]; intmain() { cin>>n; for(inti=0;i<n;i++) cin>>a[i]; for(inti=0;i<n;i++) { f@@ [i]=0; for(intj=0;j<i;j++) if(a[j]>=a[i]&&@@ f@@ [j]>@@ f@@ [i]) f[i]=@@ f@@ [j]; f@@ [i]++; } intmax=0; for(inti=0;i<n;i++) if(f@@ [i]>max) max=@@ f[i]; cout<<max<<endl; return0; }  
c -1
h -1
0

voidmain() { chars[@@ 300],@@ d[@@ 300],@@ r@@ [300]; inti=0,@@ j,k,@@ ls@@ ,@@ lr@@ ,@@ ld@@ ; int@@ flag=0; int@@ cont@@ =0; gets(s); gets(@@ d); gets(@@ r); ls@@ =strlen(s); ld@@ =strlen(@@ d); lr@@ =strlen(@@ r); for(i=0;i<@@ ls@@ ;) { flag=0; for(j=0;j<@@ ld@@ ;j++) { if(s@@ [i+j]==@@ d@@ [j]) flag@@ ++; if(flag@@ ==@@ ld@@ ) cont@@ ++; } if(flag@@ ==@@ ld@@ &&@@ cont@@ ==1) { cont@@ ++; for(k=0;k<@@ lr@@ ;k++) { s@@ [i+k@@ ]=@@ r@@ [k]; } i@@ =i+@@ lr@@ ; continue; } else { i++; continue; } } puts(@@ s); }  
c -1
h -1
intmain() { intn@@ ,@@ i,j,k,@@ g,@@ p=0; cin>>n; inta[n@@ +1]; memset(a,0,@@ sizeof(a)); for(i=1;i<=n;i++) { cin>>a[i]; } for(j=1;j<=n;j++) { g=0; for(k=1;k<=@@ j@@ -1;k++) { if(a[j]==@@ a[k]) { g@@ =1; } } if(g@@ ==0) { if(p@@ !=0) { cout<<"@@ "; } cout<<@@ a[j]; p++; } } return0; }  
c -1
h -1
0

voidmain() { intn; scanf("%d",&n); inti; inta[20000]; for(i=0;i<=n-1;i++) scanf("%d",&a[i]); intj,@@ tag@@ =0; printf("%d",a[0]); for(i=1;i<=n-1;i++) {@@ tag@@ =0; for(j=0;j<=i-1;j++) {@@ if(a[j]==@@ a[i])@@ tag@@ ++;} if(tag@@ ==0)@@ printf("%d",a[i]); } }  
c -1
h -1
intmain(intargc,char*argv[]) { intsz@@ [100][100],@@ i,j,@@ a@@ =-1,@@ b@@ =-1,@@ c,d,@@ n; scanf("%d",&n); for(i=0;i<n;i++) { for(j=0;j<n;j++) { scanf("%d",&sz[i][j]); } } for(i=0;i<n;i++) { for(j=0;j<n;j++) { if(sz@@ [i][j]==0) { a=i; b=j; break; } } if(a@@ >=0&&@@ b@@ >=0) break; } for(i=0;i<n;i++) { for(j=0;j<n;j++) { if(sz@@ [i][j]==0) { c=i; d=j; } } } n@@ =(@@ c-a-1)*(d-b-1); printf("%d\n",n); return0; }  
c -1
h -1
0

intmain(intargc,char*argv[]) { char@@ w@@ [256],@@ s[@@ 256],@@ r@@ [256]; inti,j,@@ a,b,@@ t; scanf("%s%s%s",@@ w,@@ s,@@ r); b=strlen(@@ w); a@@ =strlen(s); for(i=0;i<b;i++) { if(s@@ [0]==@@ w@@ [i]) { for(j=0;j<a@@ ;j++) { if(s@@ [j]!=@@ w@@ [i+j@@ ]) break; } if(j==@@ a) { for(t=0;t@@ <a@@ ;t++) w@@ [i+@@ t@@ ]=@@ r@@ [t@@ ]; for(t=0;t@@ <b@@ ;t++) printf("%c",@@ w@@ [t@@ ]); break; } } } if(i==@@ b) { for(t=0;t@@ <b@@ ;t++) printf("%c",@@ w@@ [t@@ ]); } return0; }  
c -1
h -1
main() { int@@ k@@ [25],@@ a[@@ 25]; inti,j,n,@@ max; scanf("%d",&n); for(i=0;i<n;i++) a[i]@@ =1; for(i=0;i<=n-1;i++) scanf("%d",&@@ k@@ [i]); for(i=n-2;i>=0;i--) for(j=i+1;j<=@@ n-1;j++) if((@@ k@@ [j]<=@@ k@@ [i]@@ )&&(@@ a[i]@@ <=@@ a[j]@@ )) a[i]=@@ a[j]@@ +1; for(@@ max=0,@@ i@@ =0;i<n;i++) if(a[i]>=@@ max@@ )max=@@ a[i]; printf("%d",max); }  
c -1
h -1
0

intmain(){ int@@ q,@@ w,@@ e=0,@@ r@@ =1,i; double@@ a,b; char@@ A@@ [1000],@@ B@@ [1000]; scanf("%lf",&a); scanf("%s",@@ A@@ ); scanf("%s",@@ B@@ ); q@@ =strlen(@@ A@@ ); w@@ =strlen(@@ B@@ ); if(q@@ !=@@ w@@ ){ printf("error"); r@@ =-1; }else{ for(i=0;@@ A@@ [i]!='\0';i++){ if((@@ A@@ [i]!='T'&&@@ A@@ [i]!='C'&&@@ A@@ [i]!='A'&&@@ A@@ [i]!='G')||(@@ B@@ [i]!='T'&&@@ B@@ [i]!='C'&&@@ B@@ [i]!='A'&&@@ B@@ [i]!='G')){ r@@ =-1; printf("error"); break; }elseif(@@ A@@ [i]!=@@ B@@ [i]){ continue; }elseif(@@ A@@ [i]==@@ B@@ [i]){ e++; } } } if(r@@ ==1){ b@@ =(@@ e@@ *1.0@@ )@@ /@@ (@@ q@@ *1.0@@ ); if(b@@ >@@ a){ printf("yes"); }else{ printf("no"); } } return0; }  
c -1
h -1
intmain() { intk=0,@@ n=0,@@ m=0,@@ i=0,@@ w@@ =0,@@ j=0,@@ sum=0,@@ s[@@ 101][@@ 101@@ ]={0}; cin>>k; for(@@ w@@ =1;@@ w@@ <=k;@@ w@@ ++) { sum=0; cin>>n>>m; for(i=1;i<=n;i++) { for(j=1;j<=m;j++) { cin>>@@ *(@@ s[i]@@ +j); if((i@@ ==1)@@ ||(@@ i==@@ n@@ )||(@@ j@@ ==1)@@ ||(@@ j==@@ m@@ )) sum+=*(@@ s[i]@@ +j); } } cout<<sum<<endl; } return0; }  
c -1
h -1
0

intmain(){ intk,@@ n,@@ i,@@ m,@@ x,y,@@ z,@@ c; c=0; scanf("%d",&n); scanf("%d",&k); inta[n]; for(i=0;i<n;i++){ scanf("%d",&(@@ a[i]@@ )); } for(i=0;i<n;i++){ for(x=0;x@@ <n;@@ x@@ ++){ if(x==@@ i){ continue; } if(a[x@@ ]+@@ a[i]==@@ k){ c=1; } } } if(c@@ ==0) { printf("no"); } else { printf("yes"); } return0; }  
c -1
h -1
intmain() { chars@@ [100],@@ yuan@@ [100],@@ xin@@ [100]; inti=0,j=0,@@ len,@@ lenyuan@@ ,@@ lenxin@@ ; gets(s); gets(@@ yuan@@ ); gets(@@ xin@@ ); len@@ =strlen(s); lenyuan@@ =strlen(@@ yuan@@ ); lenxin@@ =strlen(@@ xin@@ ); for(i=0;i<len;i++) { if(s[i]==@@ yuan@@ [0]@@ &&@@ s[@@ lenyuan@@ +i@@ -1@@ ]==@@ yuan@@ [@@ lenyuan@@ -1@@ ]) { for(j=0;j<@@ lenxin@@ ;j++) { s[i+j@@ ]=@@ xin@@ [j]; } break; } } printf("%s\n",@@ s); return0; }  
c -1
h -1
0

intf(int@@ shu@@ ,int@@ min) { int@@ k=1; if(@@ shu@@ <@@ min) { k=0; return@@ k; } else { for(inti=@@ min@@ ;i<@@ shu@@ ;i++) { if(@@ shu@@ %i==0) { k=k@@ +@@ f(@@ shu@@ /i,i); } } return@@ k; } } main() { intn,i,@@ a; scanf("%d",&n); for(i=0;i<n;i++) { scanf("%d",&a); if(i!=@@ n-1) printf("%d\n",@@ f(a,@@ 2)); else printf("%d",@@ f(a,@@ 2)); } }  
c -1
h -1
voidmain() {@@ inta[16],@@ i,j,k,@@ m,n; for(m@@ =0;@@ ;m++) {@@ for(i=0;i<16;i++) {@@ scanf("%d",&a[i]); if(a[i]==@@ -1)@@ return; if(a[i]==0)break; } n=0; for(j=0;j<i;j++) for(k=0;k<i;k++) if(a[j]==2*@@ a[k]) n++; printf("%d\n",n); } }  
c -1
h -1
0

inth@@ [100],@@ s@@ [100]={0},@@ n; int@@ p@@ (int@@ i) { int@@ s1@@ =0,@@ s2@@ ,j; if(s@@ [i]==0) { for(j=i+1;j<n;j++) {@@ s2=@@ s1@@ ; if(h@@ [i]<@@ h@@ [j]) s1@@ =0; else s1@@ =p@@ (j@@ )@@ +1; if(s1@@ <@@ s2@@ )@@ s1@@ =@@ s2; } s[i]=@@ s1@@ ; } else s1@@ =@@ s[i]; return(@@ s1); } voidmain() { inti,@@ s1@@ =0,@@ s2; scanf("%d",&n); for(i=0;i<n;i++) scanf("%d",&h[i]); for(i=0;i<n;i++) { s2=@@ s1@@ ; s1@@ =p@@ (i); if(s1@@ <@@ s2@@ ) s1@@ =@@ s2; } printf("%d",@@ s1@@ +1); }  
c -1
h -1
main(){ intyear,month,day; scanf("%d%d%d",&year,&month,&day); inti; if(year%@@ 4@@ ==0||@@ year%@@ 100@@ ==0){ if(month@@ ==1){ i=@@ day; } elseif(month==@@ 2@@ ){ i@@ =(@@ month@@ -1)*@@ 31+@@ day; } else{ i@@ =(@@ month@@ -1)*@@ 31+@@ day@@ -@@ month@@ /2@@ -1; } } else{ if(month@@ ==1){ i=@@ day; } elseif(month==@@ 2@@ ){ i@@ =(@@ month@@ -1)*@@ 31+@@ day; } else{ i@@ =(@@ month@@ -1)*@@ 31+@@ day@@ -@@ month@@ /2@@ -1; } } printf("%d",@@ i); return0; }  
c -1
h -1
0

intmain(){ char@@ zf@@ [100]; char@@ zq@@ [100]; char@@ cu@@ [100]; char@@ dt@@ [100][100]; inti,@@ l,@@ lc@@ ,j,@@ lz@@ ,@@ k=0,@@ t,@@ m,@@ n=0,@@ len,@@ ci@@ ; gets(@@ zf@@ ); gets(@@ cu@@ ); gets(@@ zq@@ ); l=strlen(@@ zf@@ ); lc@@ =strlen(@@ cu@@ ); lz@@ =strlen(@@ zq@@ ); for(i=0;i<l;i++){ if(@@ zf@@ [i]==@@ cu@@ [0]){ ci@@ =1; for(j=0;j<@@ lc@@ ;j++@@ ,i@@ ++){ if(@@ zf@@ [i]!=@@ cu@@ [j]){ ci@@ =0; break; } } if(@@ ci@@ ==1){ t@@ =i@@ -@@ lc@@ ; for(j=0;j<@@ lc@@ ;j++,@@ t++){ zf@@ [t@@ ]=@@ zq@@ [j]; } break; } } } printf("%s",@@ zf@@ ); return0; }  
c -1
h -1
intmain() { intk,i,j,@@ n,m,@@ temp; inta[@@ 26],@@ g@@ [26]; scanf("%d\n",&@@ k); for(i=1;i<=k;i++) scanf("%d",&a[i]); for(m=1;m@@ <=@@ k@@ ;m++) g@@ [m@@ ]=1; for(n=@@ k@@ -1;@@ n@@ >0@@ ;n@@ --) for(j=@@ n+1@@ ;j<=@@ k;j++) { if(a[@@ n@@ ]>=@@ a[j]&&@@ g@@ [n@@ ]@@ -1@@ <@@ g@@ [j]) { g@@ [n@@ ]=@@ g@@ [j]+1; } } for(i=1;i<k;i++) {@@ for(j=i+1;j<=@@ k;j++) if(g@@ [i]<@@ g@@ [j]@@ ){@@ temp=@@ g@@ [i];@@ g@@ [i]=@@ g@@ [j];@@ g@@ [j]=@@ temp;} } printf("%d",@@ g@@ [1]); }  
c -1
h -1
0

intmain(){ charstr@@ [257],@@ sub@@ [257],@@ rep@@ [257]; int@@ result=0; inta,b,c,@@ i,@@ d,@@ e=0,@@ f,@@ g,@@ h@@ ,j,@@ k; int@@ len@@ [256]; gets(str); gets(sub); gets(@@ rep); a=strlen(@@ str); b=strlen(@@ sub); c=strlen(@@ rep); for(i=0;i<a;i++){ for(d@@ =0;d@@ <b@@ -1;@@ d@@ ++){ if((@@ str@@ [i@@ +d@@ ]==@@ sub@@ [d@@ ]@@ )&&(@@ str@@ [i@@ +d@@ +1@@ ]==@@ sub@@ [d@@ +1@@ ])@@ ){ result=1; len@@ [@@ e@@ ]=i; e++; } break; } } f=@@ len@@ [0]; if(result@@ ==1){ for(@@ g@@ =0;@@ g@@ <@@ f@@ ;@@ g@@ ++){ printf("%c",str@@ [@@ g@@ ]); } for(h=0;h@@ <@@ c;@@ h@@ ++){ printf("%c",@@ rep@@ [h@@ ]); } for(j=0;j<a@@ -@@ f@@ -b@@ ;j++){ printf("%c",str@@ [@@ f@@ +@@ b@@ +j@@ ]); } } elseif(@@ result@@ ==0){ puts(@@ str); } return0; }  
c -1
h -1
intmain() { inti,@@ year,@@ month,@@ day,@@ sum=0,@@ months@@ [50@@ ],@@ msum@@ =0; months@@ [1]=@@ 31; months@@ [2]; months@@ [3@@ ]=31; months@@ [4@@ ]=30; months@@ [5@@ ]=31; months@@ [@@ 6@@ ]=30; months@@ [@@ 7@@ ]=31; months@@ [@@ 8@@ ]=31; months@@ [@@ 9@@ ]=30; months@@ [10@@ ]=31; months@@ [11@@ ]=30; months@@ [12@@ ]=31; scanf("%d%d%d",&year,&month,&day); if(year%@@ 4==0) { if(year%@@ 100!=0) { if(year%@@ 400==0) { months@@ [2]=@@ 29; } else { months@@ [2]=@@ 28; } } else { if(year%@@ 400==0) { months@@ [2]=@@ 29; } else { months@@ [2]=@@ 28; } } } else { months@@ [2]=@@ 28; } for(i=1;i<month;i++) { msum@@ =@@ msum@@ +@@ months@@ [i]; } sum=@@ msum@@ +day; printf("%d",sum); return0; }  
c -1
h -1
0

intmain() { char*@@ p=@@ NULL@@ ,@@ *@@ q@@ =NULL; charstr@@ [100],@@ substr@@ [100],@@ restr@@ [100]; cin>>@@ str@@ >>@@ substr@@ >>@@ restr@@ ; p=strstr(@@ str,@@ substr@@ ); if(p@@ !=NULL) { q=@@ p+@@ strlen(@@ substr@@ ); strcat(@@ restr@@ ,@@ q); *@@ p=@@ '\0'@@ ; strcat(@@ str,@@ restr@@ ); } cout<<str@@ ; return0; }  
c -1
h -1
intmain(){ inta[100][100@@ ]={@@ 255@@ }; intn,@@ i=0,j=0,@@ x1,y1,x2,y2@@ ,@@ x,y,@@ s; scanf("%d",&n); for(x=0;x@@ <n;@@ x@@ ++){ for(y=0;y@@ <n;@@ y@@ ++){ scanf("%d",&@@ a[x@@ ][y@@ ]); } } for(x=0;x@@ <n;@@ x@@ ++){ for(y=0;y@@ <n;@@ y@@ ++){ if(a[x@@ ][y@@ ]==0){ x1@@ =@@ x; y1@@ =@@ y; i=1; break; } } if(i@@ ==1){ break; } else@@ ; } for(@@ x=@@ n-1;@@ x@@ >=0@@ ;x@@ --){ for(@@ y=@@ n-1;@@ y@@ >=0;@@ y@@ --){ if(a[x@@ ][y@@ ]==0){ x2@@ =@@ x; y2@@ =@@ y; j=1; break; } } if(j@@ ==1){ break; } else@@ ; } s=(@@ y2-y1@@ -1)*(@@ x2-x1@@ -1); printf("%d",s); return0; }  
c -1
h -1
0

intmain() { char@@ sz@@ [100]; scanf("%s",@@ sz@@ ); inti,j,@@ m,n,@@ len,@@ len1,len2@@ ; char@@ as@@ [100],@@ az@@ [100]; scanf("%s%s",@@ as@@ ,@@ az@@ ); len=strlen(@@ sz@@ ); len1=strlen(@@ as@@ ); len2=strlen(@@ as@@ ); for(i=0;i<len@@ ;i++){ for(j=0;j<len2@@ ;j++@@ ,i@@ ++){ if(sz[i]@@ !=@@ as@@ [j]@@ )break; if(j==@@ len2@@ -1){ for(m@@ =i@@ -len2@@ +1,@@ n@@ =0;n@@ <@@ len2@@ ;n@@ ++,@@ m@@ ++){ sz[m@@ ]=@@ az@@ [n]; } } if(j==@@ len2@@ -1){ i=@@ len; } } } printf("%s",@@ sz@@ ); return0; }  
c -1
h -1
voidmain() { intn,@@ t,@@ x,@@ i; intage@@ [100]; charc[@@ 10],@@ num@@ [100][10]; scanf("%d",&n); for(i=0;i<n;i++) scanf("%s%d",@@ num[i]@@ ,&@@ age[i]); for(i=0;i<n;i++) if(age[i]@@ >=60) for(x@@ =i;@@ x@@ >0@@ ;x@@ --) if(age@@ [x@@ ]>@@ age@@ [x@@ -1@@ ]) {t=@@ age@@ [x@@ ];@@ age@@ [x@@ ]=@@ age@@ [x@@ -1]@@ ;@@ age@@ [x@@ -1@@ ]=t; strcpy(@@ c,@@ num[@@ x@@ ]@@ );strcpy(@@ num[@@ x@@ ],@@ num[@@ x@@ -1]@@ );strcpy(@@ num[@@ x@@ -1@@ ],@@ c); } for(i=0;i<n;i++) printf("%s\n",@@ num[i]); }  
c -1
h -1
0

intfenjie@@ (inta,intb) { inti,@@ sign@@ =0,@@ k=0; if(a@@ <b@@ )return0; elseif(a@@ ==@@ b)@@ return1; else { for(i=2;i<=@@ a@@ -1;i++) { if(a%i==0) sign@@ =1; } if(@@ sign@@ !=1@@ )@@ return1; else { for(i=b@@ ;i<=a;i++) { if(a%i==0) k@@ +=@@ fenjie@@ (a/i,i); } k@@ +=1; return@@ k; } } } intmain() { intn,@@ a[100],@@ i,@@ k; scanf("%d",&n); for(i=1;i<=n;i++) { scanf("%d",&k); printf("%d\n",@@ fenjie@@ (@@ k,@@ 2)); } return0; }  
c -1
h -1
intmain() { intr,@@ i,j,@@ a[@@ 505@@ ][@@ 505@@ ],@@ m1,@@ m2@@ ,@@ n1,n2,@@ sum=0; scanf("%d",&@@ r); m1=@@ r; n1@@ =@@ r; m2@@ =0; n2@@ =0; for(i=0;i<@@ r@@ ;i++){ for(j=0;j<@@ r@@ ;j++){ scanf("%d",&a[i][j]); if(a[i][j]@@ ==0){ if(i@@ <=@@ m1@@ &&j@@ <=@@ n1@@ ){ m1@@ =i; n1@@ =j; } if(i>=@@ m2@@ &&j@@ >=@@ n2@@ ){ m2@@ =i; n2@@ =j; } } } } sum=(@@ m2@@ -@@ m1@@ -1)*(@@ n2@@ -@@ n1@@ -1); printf("%d",sum); return0; }  
c -1
h -1
0

intmain(){ intn,k,@@ j,@@ biaoji@@ =0,@@ m; inti,@@ a[@@ max@@ ]; scanf("%d%d",&n,&k); for(i=0;i<n;i++) { scanf("%d",&a[i]); } for(i=0;i<n;i++) { m=@@ k-@@ a[i]; for(j=i;j<@@ n;j++) { if(m==@@ a[j]) { biaoji@@ =1; break; } } } if(@@ biaoji@@ ) printf("yes"); else printf("no"); return0; }  
c -1
h -1
intmax@@ (inta[],intn) { int@@ z,@@ i,j,@@ t,@@ temp,@@ r; intb[@@ 25]; if(n@@ ==1)@@ z=1; elseif(n@@ ==0)@@ z=0; else { for(i=0,@@ r@@ =0;i<n;i++) { for(j=i+1@@ ,@@ t@@ =0;j<@@ n;j++) if(a[j]<=@@ a[i]) { b[t@@ ]=@@ a[j]; t++; } temp=@@ max@@ (b,@@ t)@@ +1; if(temp@@ >@@ r@@ )@@ r=@@ temp; } z=@@ r; } return@@ z; } intmain() { intk,@@ t,@@ i; int@@ bomb@@ [25]; scanf("%d\n",&@@ k); for(i=0;i<@@ k;i++)@@ scanf("%d",&@@ bomb@@ [i]); t=@@ max(@@ bomb@@ ,@@ k); printf("%d\n",t); }  
c -1
h -1
0

intmain() { intn,k,@@ x@@ [1000]; inti,j,@@ sign@@ =0; scanf("%d%d",&n,&k); for(i=0;i<n;i++) { scanf("%d",&@@ x[i]); } for(i=0;i<n;i++) { for(j=i+1;j<n;j++) { if((x@@ [i]+@@ x[j]@@ )==@@ k) { sign@@ =1; break; } } } if(@@ sign@@ ==1) printf("yes"); else printf("no"); scanf("%d%d",&n,&k); return0; }  
c -1
h -1
inta[@@ 25],@@ num; intb[@@ 25]; inti,j,k; intmain(){ cin>>num; for(i=0;i<@@ num@@ ;i++){ cin>>a[i]; b[i]=1; } intmax=0; b[0]@@ =1; for(i=1;i<@@ num@@ ;i++){ for(j=i-1@@ ;j>=0;j--){ if(a[j]>=@@ a[i]@@ ){ k=@@ b[j]@@ +1; if(k@@ >@@ b[i]@@ ){ b[i]=@@ k; if(k@@ >max){ max=@@ k; } } } } } cout<<max<<endl; return0; }  
c -1
h -1
0

intmain() { intb[@@ 26@@ ]={0@@ ,@@ 0,0,0,0,0,0,0,0,@@ 0,0,0,0,0,0,0,0,@@ 0,0,0,0,0,0,0,0,@@ 0@@ }; intm,@@ i,j,k,@@ num[@@ 10000],@@ max=0,@@ t=0; chara[@@ 10000@@ ][@@ 26]; charc[@@ 26@@ ]={'A','B','C','D','E','F','G','H','I','J','K','L','M','N','O','P','@@ Q','R','S','T','U','V','W','X','Y','@@ Z'}; scanf("%d",&m); for(i=0;i<m;i++) { scanf("%d",&@@ num[i]); scanf("%s",&@@ a[i]); } for(i=0;i<m;i++) { for(j=0;j<26;j++) { for(k=0;k<26;k++) { if(a[i][j]==@@ c@@ [k]) b[k@@ ]++; } } } for(i=0;i<26;i++) { if(b[i]>max) { max=b[i]; t=i; } } printf("%c\n",@@ c[@@ t@@ ]); printf("%d\n",max); for(i=0;i<m;i++) { for(j=0;j<26;j++) { if(a[i][j]==@@ c[@@ t@@ ]) { printf("%d\n",@@ num[i]); break; } } } getchar(); getchar(); return0; }  
c -1
h -1
structpatient{ charid[10]; intage; }; intmain(){ intj,@@ max,@@ t@@ =1,@@ n,@@ i; structpatient@@ p[@@ 101]; scanf("%d",&n); for(i=1;i<=n;i++) scanf("%s%d",@@ p[i].@@ id,&@@ p[i].age); for(@@ ;t@@ !=0@@ ;@@ ){ max=@@ 59@@ ;@@ t=0; for(i=1;i<=n;i++){ if(p@@ [i].age@@ >max){max=@@ p@@ [i].age@@ ;t@@ =i;} } if(t@@ !=0)@@ printf("%s\n",@@ p@@ [t@@ ].id); p@@ [t@@ ].age@@ =0; } for(i=1;i<=n;i++) if(p@@ [i].age@@ !=0)@@ printf("%s\n",@@ p@@ [i].id); }  
c -1
h -1
0

intt,@@ m,n,@@ i,j,k,@@ xx@@ ,@@ x1,@@ x2,@@ x,y,@@ s,@@ n0@@ ; void@@ init@@ (inta[],intb[]) {@@ freopen@@ (@@ "@@ tt@@ .@@ in@@ ",@@ "@@ r@@ ",@@ stdin@@ ); scanf("%d%d",&m,&n); for(i=1;i<=m;i++) scanf("%d",&a[i]); for(i=1;i<=n;i++) scanf("%d",&b[i]); } voidoutput@@ (inta[],int@@ k) { inti; freopen@@ (@@ "@@ tt@@ .@@ out@@ ",@@ "@@ w@@ ",@@ stdout@@ ); for(i=1;i<=@@ k;i++)@@ if(i@@ ==1)@@ printf("%d",@@ a[i]@@ );@@ else@@ printf("%d",a[i]); } void@@ proce@@ (intn,int@@ b) { inti; if(n@@ ==1)@@ s++; else for(i=b@@ ;i<=@@ n0@@ ;i++) if(!@@ (n@@ %i@@ ))@@ proce@@ (n/i,i); } intmain() { scanf("%d",&n); for(i=1;i<=n;i++) { scanf("%d",&x); s=0; n0@@ =@@ x; proce@@ (x,@@ 2); printf("%d\n",s); } return0; }  
c -1
h -1
intmain() { inti,@@ l1,l2,@@ n=0; double@@ e; chara[500],b[500]; scanf("%lf%s%s",&@@ e,@@ a,b); l1@@ =strlen(a); l2@@ =strlen(b); if(l1!=l2@@ ) { printf("error"); return0; } for(i=0;i<l1;i++) { if(a[i]!='A'&&a[i]!='T'&&a[i]!='C'&&a[i]!='@@ G'||@@ b[i]!='A'&&b[i]!='T'&&b[i]!='C'&&b[i]!='@@ G') { printf("error"); return0; }else { if(a[i]==b[i]) { n++; } } } if(1.0*@@ n/@@ l1@@ >@@ e@@ ) { printf("yes"); }else{ printf("no"); } return0; }  
c -1
h -1
0

intmain() { introw,col; cin>>row>>col; int@@ data@@ [@@ row@@ *col@@ ]; for(inti=0;i<@@ row@@ *col@@ ;++i) cin>>@@ data@@ [i]; int*@@ head=@@ data@@ ; for(inti=0;i<@@ col@@ ;++i) { int*@@ p=head; for(intj=0;j<=@@ min@@ (i,@@ row-1)@@ ;++@@ j) { cout<<*p<<endl; p@@ +=@@ col-1; } ++@@ head; } --@@ head; for(inti=1;i<@@ row@@ ;++i) { head@@ +=@@ col; int*@@ p=head; for(intj=0;j<=@@ min@@ (@@ col-1@@ ,@@ row@@ -i@@ -1)@@ ;++@@ j) { cout<<*p<<endl; p@@ +=@@ col-1; } } return0; }  
c -1
h -1
structstudent { charnum[@@ 6@@ ]; int@@ score@@ [2]; intsum; }stu[100000]; voidmain() { long@@ n,i,j,@@ maxi1@@ ,@@ maxi2@@ ,@@ maxi3@@ ; int@@ max1@@ =0,@@ max2@@ =0,@@ max3@@ =0; scanf("%ld",&n); for(i=0;i<n;i++) { scanf("%s",@@ stu[i].@@ num); for(j=0;j<@@ 2@@ ;j++) scanf("%d",&@@ stu[i].@@ score@@ [j]); } for(i=0;i<n;i++) stu[i].sum=stu[i].@@ score@@ [0]@@ +stu[i].@@ score@@ [1]; for(i=0;i<n;i++) if(stu[i].@@ sum>@@ max1@@ ) {@@ max1@@ =stu[i].@@ sum; maxi1@@ =i; } stu[@@ maxi1@@ ].@@ sum=0; for(i=0;i<n;i++) if(stu[i].@@ sum>@@ max2@@ ) {@@ max2=@@ stu[i].@@ sum; maxi2@@ =i; } stu[@@ maxi2@@ ].@@ sum=0; for(i=0;i<n;i++) if(stu[i].@@ sum>@@ max3@@ ) {@@ max3=@@ stu[i].@@ sum; maxi3@@ =i; } printf("%s@@ %d\n@@ %s@@ %d\n@@ %s@@ %d",@@ stu[@@ maxi1@@ ].num,@@ max1,@@ stu[@@ maxi2@@ ].num,@@ max2@@ ,@@ stu[@@ maxi3@@ ].num,@@ max3@@ ); }  
c -1
h -1
0

intmain() { intm,@@ a,@@ i,j,k,@@ n,@@ s[@@ 26@@ ][@@ 999@@ ]={0},@@ p@@ [26]={0}; charb[@@ 26],@@ c; cin>>m; for(i=0;i<m;i++) { cin>>@@ j; cin>>@@ b; n@@ =strlen(b); for(k=0;k<n;k++) { a=@@ b[k@@ ]-@@ 'A'@@ ; s[@@ a@@ ][p@@ [a]@@ ]=@@ j; p@@ [a@@ ]++; } } j=0; for(i=1;i<26;i++) { if(p@@ [j]<@@ p@@ [i]) j=i; } c=@@ 'A'@@ +j@@ ; cout<<@@ c@@ <<endl@@ <<@@ p@@ [j]<<endl; for(i=0;;i++) { if(s@@ [j]@@ [i]!=0) cout<<@@ s[j]@@ [i]<<endl; elsebreak; } return0; }  
c -1
h -1
structStudent { intnumber; inta; intb; intc; }; intmain() { intn,i; intx,y,@@ z; structStudent@@ stu@@ ; structStudent@@ maxStu@@ ,@@ smaxStu@@ ,@@ tmaxStu@@ ; scanf("%d",&n); scanf("%d%d%d",&@@ x,&@@ y,&@@ z); stu.@@ number=@@ x; stu.@@ a=@@ y; stu.@@ b=@@ z; stu.@@ c=@@ stu.@@ a+@@ stu.@@ b; maxStu@@ =stu@@ ; smaxStu@@ =stu@@ ; tmaxStu@@ =stu@@ ; for(i=0;i<n-1;i++){ scanf("%d%d%d",&@@ x,&@@ y,&@@ z); stu.@@ number=@@ x; stu.@@ a=@@ y; stu.@@ b=@@ z; stu.@@ c=@@ stu.@@ a+@@ stu.@@ b; if(@@ stu.@@ c@@ >@@ maxStu@@ .@@ c){ if(@@ maxStu@@ .@@ c@@ >@@ smaxStu@@ .@@ c){ if(@@ smaxStu@@ .@@ c@@ >@@ tmaxStu@@ .@@ c){ tmaxStu@@ =@@ smaxStu@@ ; } smaxStu@@ =@@ maxStu@@ ; } elseif(@@ maxStu@@ .@@ c@@ >@@ tmaxStu@@ .@@ c){ tmaxStu@@ =@@ maxStu@@ ; } maxStu@@ =stu@@ ; } elseif(@@ stu.@@ c@@ >@@ smaxStu@@ .@@ c){ if(@@ smaxStu@@ .@@ c@@ >@@ tmaxStu@@ .@@ c){ tmaxStu@@ =@@ smaxStu@@ ; } smaxStu@@ =stu@@ ; } elseif(@@ stu.@@ c@@ >@@ tmaxStu@@ .@@ c){ tmaxStu@@ =stu@@ ; } } printf("%d%d\n%d%d\n%d@@ %d",@@ maxStu@@ .@@ number,@@ maxStu@@ .@@ c,@@ smaxStu@@ .@@ number,@@ smaxStu@@ .@@ c,@@ tmaxStu@@ .@@ number,@@ tmaxStu@@ .@@ c); return0; }  
c -1
h -1
0

intmain() { int@@ cout@@ =0,@@ len@@ =0,@@ flag=0,@@ b=0; double@@ lv@@ ,@@ a; char@@ slv@@ [@@ 10],@@ s[@@ 500],@@ z@@ [500]; gets(@@ slv@@ ); lv@@ =@@ atoi@@ (@@ slv@@ ); gets(s); gets(@@ z); len@@ =strlen(s); if(strlen(@@ s@@ )==@@ strlen(@@ z@@ )){ for(inti@@ =0;@@ s[i]@@ !='\0';i++){ if(s[i]==@@ z@@ [i]) cout@@ ++; if(s@@ [i]!='A'&&@@ s@@ [i]!='T'&&@@ s@@ [i]!='C'&&@@ s@@ [i]!='G') b=1; if(z@@ [i]!='A'&&@@ z@@ [i]!='T'&&@@ z@@ [i]!='C'&&@@ z@@ [i]!='G') b=1; } a=@@ cout@@ *1.0/@@ len; flag@@ ++; } if(flag@@ ==0||@@ b@@ ==1) printf("error"); else{ if(a@@ >@@ lv@@ ){ printf("yes");} else printf("no");} return0; }  
c -1
h -1
intmain(intargc,char*argv[]) { inta[16@@ ]={0@@ ,@@ 0,0,0,0,0,0,0,0,@@ 0,0,0,0,@@ 0,0,@@ 0@@ }; inti,j,@@ m,n; while(1){ for(i=0;i<16;i++) { scanf("%d",&a[i]); if(a[i]==@@ -1@@ ){@@ return0;} if(a[i]@@ ==0){@@ n@@ =i;@@ break;} } m=0; for(i=0;i<n;i++) { for(j=0;j<n;j++) { if(a[j]==@@ (@@ a[i]+@@ a[i]@@ ))@@ m++; } } {printf("%d\n",@@ m@@ );} } return0; }  
c -1
h -1
0

intmain() { intN@@ ,@@ I@@ ,@@ J@@ ,@@ Count@@ ,@@ Arr@@ [@@ 15]; while(1) { N@@ =0; while(1) { cin>>@@ Arr@@ [N]; if(@@ Arr@@ [N@@ ]==@@ -1)@@ return0; if(@@ Arr@@ [N@@ ]@@ ==0)break; N@@ ++; } Count@@ =0; for(@@ I@@ =0;@@ I@@ <@@ N@@ -1;@@ I@@ ++) for(@@ J@@ =@@ I@@ +1;@@ J@@ <@@ N@@ ;@@ J@@ ++) if(@@ Arr@@ [@@ I@@ ]==2*@@ Arr@@ [@@ J@@ ]@@ ||@@ Arr@@ [@@ J@@ ]==2*@@ Arr@@ [@@ I@@ ]) Count@@ ++; cout<<@@ Count@@ <<endl; } return0; }  
c -1
h -1
intmain() { inta[100][100],@@ i,j,@@ n,@@ q,@@ w,@@ e,@@ r,@@ C@@ ,@@ K@@ ,@@ T@@ ; scanf("%d",&n); for(i=0;i<n;i++) for(j=0;j<n;j++) scanf("%d",&a[i][j]); for(i=0,j@@ =0;j<@@ n,@@ i@@ <n@@ ;j++@@ ,i++) {@@ if(a[i][j]==0) break;} q@@ =i; w@@ =j; for(i=@@ q@@ ,j=@@ w@@ ;j<n;j++) {@@ if(a[i][j]==@@ 255) break;} e@@ =j; for(i=@@ q@@ ,j=@@ w@@ ;i<n;i++) {@@ if(a[i][j]==@@ 255) break;} r@@ =i; C@@ =@@ e@@ -@@ w; K@@ =@@ r@@ -@@ q; T@@ =(@@ C@@ -2)*(@@ K@@ -2); printf("%d\n",@@ T@@ ); return0; }  
c -1
h -1
0

voidinput@@ (intm,@@ intn,@@ inta[@@ 300@@ ],intb[@@ 300@@ ]) { inti=0,j=0; scanf("%d%d",&m,&n); for(i=0;i<m;i++) {@@ scanf("%d",&a[i]); } for(j=0;j<n;j++) { scanf("%d",&@@ b[j]); } } void@@ row@@ (inta[@@ 300@@ ]) { inti,j,t; for(i=0;i<@@ 300@@ ;i++) { for(j=i+1;j<@@ 300@@ ;j++) { if((a[j]@@ <@@ a[i]@@ )&&(@@ a[j]@@ !=0)) { t=a[j]; a[j]=@@ a[i]; a[i]=@@ t; } } } } void@@ com@@ (inta[@@ 300@@ ],intb[@@ 300@@ ]) { inti=0,j=0,@@ k; for(i=0;i<@@ 300@@ ;i++) { if(a[i]==0) {@@ k@@ =i;@@ break;} } for(j=0;j<@@ 300@@ ;j++) {@@ if(b[j]@@ !=0) a[k]=@@ b[j]@@ ;k@@ ++; } } voidoutput@@ (inta[@@ 300@@ ]) { inti; for(i=0;i<@@ 300@@ ;i++) { if(a[i]!=0) {@@ printf("%d",a[i]); break;} } i++; for(i@@ ;i<@@ 300@@ ;i++) { if(a[i]!=0) {printf("%d",@@ a[i]);} } } voidmain() { intx,y,@@ a[@@ 300@@ ]={0},b[@@ 300@@ ]={0}; input@@ (@@ x,y,@@ a,b); row@@ (a@@ );@@ row@@ (@@ b); com@@ (a,b); output@@ (a); }  
c -1
h -1
intmain() { inth@@ [25@@ ],b[@@ 25],@@ k,i,j,@@ m,n; scanf("%d",&k); for(i=0;i<k;i++) { scanf("%d",&h[i]); b[i]=1; } for(j=@@ k-1@@ ;j>=0;j--) for(m@@ =j+1@@ ;m@@ <k@@ ;m++) { if(h@@ [j]>=@@ h@@ [m]@@ &&@@ b[j]@@ <(@@ b[m@@ ]+1@@ )) b[j]=@@ b[m@@ ]+1; } for(i=0;i<@@ k-1;i++) b[i+1]=@@ (@@ b[i]@@ >b@@ [i+1@@ ])@@ ?@@ b[i]@@ :@@ b@@ [i+1]; n=@@ b[k@@ -1]; printf("%d",n); }  
c -1
h -1
0

intmain() { inta[@@ 10000@@ ],b[@@ 10000@@ ],c[@@ 10000],@@ i,@@ l,@@ n,@@ sum[@@ 10000@@ ]={0}; cin>>n; for(i=0;i<n;i++) { cin>>@@ a[i]@@ >>@@ b[i]; for(l=0;l<@@ a[i]@@ *@@ b[i]@@ ;l++) { cin>>@@ c[@@ l@@ ]; if(l@@ <=@@ b[i]@@ ||@@ l@@ >=@@ (@@ b[i]@@ *@@ a[i]@@ -@@ b[i]@@ +1)@@ ||@@ l@@ %@@ b[i]@@ ==0@@ ||(@@ l@@ +1)@@ %@@ b[i]@@ ==0) sum[i]@@ +=@@ c[@@ l@@ ]; } } for(i=0;i<n;i++) cout<<sum@@ [i]<<endl; return0; }  
c -1
h -1
main() { intk,m,n,i,j,@@ sum,@@ a[100][100]; scanf("%d",&k); for(@@ ;k@@ >0@@ ;k--) { sum=0; scanf("%d%d",&m,&n); for(i=0;i<m;i++) { for(j=0;j<n;j++) scanf("%d",&a[i][j]); } for(i=0,j@@ =0;j<@@ n;j++) sum=sum+@@ a[i][j]; for(i=@@ m-1@@ ,j@@ =0;j<@@ n;j++) sum=sum+@@ a[i][j]; for(i=0,j@@ =0;i<@@ m;i++) sum=sum+@@ a[i][j]; for(i=0,j@@ =@@ n-1@@ ;i<@@ m;i++) sum=sum+@@ a[i][j]; sum=sum-@@ a[0][0]@@ -@@ a[@@ m-1][0]-@@ a[0][@@ n-1]-@@ a[m-1][@@ n-1]; printf("%d\n",sum); } }  
c -1
h -1
1


intmain() { inta[100][100],@@ times@@ ,@@ x,y,@@ i,j,k,@@ sum=0; int*@@ pointer@@ =NULL; cin>>@@ times@@ ; for(i=1;i<=@@ times@@ ;i++) { sum=0; cin>>x@@ >>@@ y; for(k=0;k<@@ x@@ ;k++) { for(j=0;j<@@ y;j++) { cin>>@@ a[k]@@ [j]; pointer@@ =&@@ a[k]@@ [j]; if(k@@ ==0||@@ j@@ ==0||@@ k==@@ x@@ -1@@ ||j==@@ y@@ -1) sum=sum+*@@ pointer@@ ; } } cout<<sum<<endl; } return0; }  
c -1
h -1
structpatient { charid[10]; intage; }@@ pat@@ [100],@@ p@@ [100]; voidmain() { intn,@@ m=0,@@ i,j=0,@@ k,@@ temp,@@ a[@@ 40@@ ]={0},@@ sum=1; scanf("%d\n",&n); for(i=0;i<n;i++) scanf("%s%d",@@ pat[i].@@ id,&@@ pat@@ [i].age); for(i=0;i<n;i++) { if(pat@@ [i].age>=60) {@@ p@@ [j@@ ++]=@@ pat@@ [i]@@ ;m@@ ++;} } a[0]=@@ p@@ [0].@@ age; for(j=1;j<@@ m;j++) {@@ for(i=0;a[i]@@ !=0;i++) if(a[i]==@@ p@@ [j].age@@ )break; if(a[i]==0) {@@ a[i]=@@ p@@ [j].age@@ ;@@ sum@@ ++;} } for(j=0;j<@@ sum@@ -1;j++) { k=j; { for(i=j@@ +1;i<@@ sum@@ ;i++) if(a[i]>a[j]) {@@ k=i; temp=@@ a[k]@@ ;@@ a[k]=@@ a[j];a[j]=@@ temp;} } } for(k=0;k<@@ sum@@ ;k++) {@@ for(j=0;j<m;j++) { if(p@@ [j].age@@ ==@@ a[k]@@ )@@ printf("%s\n",@@ p@@ [j].@@ id); } } for(i=0;i<n;i++) { if(pat@@ [i].age<60) printf("%s\n",@@ pat@@ [i].id); } }  
c -1
h -1
0

intmain() { intk; cin>>k; for(inti=0;i<k;i++) { intm,n; cin>>m>>n; inta[@@ m@@ ][n]; for(inti=0;i<m;i++) { for(intj=0;j<n;j++) { cin>>a[i][j]; } } ints=0; for(inti=0;i<n;i++) { s+=@@ *(*(a@@ )@@ +i); } if(m@@ >1) for(inti=0;i<n;i++) { s+=@@ *(*(a@@ +m-1)@@ +i); } for(inti=1;i<@@ m-1;i++) { s+=@@ *(*(a+i)@@ +@@ 0); } for(inti=1;i<@@ m-1;i++) { s+=@@ *(*(a+i)@@ +n-1); } cout<<@@ s; if(i!=@@ k@@ -1) cout<<endl; } return0; }  
c -1
h -1
structStudent {intnum; int@@ ch; intmath; intsum; }; intmain() { structStudent@@ stu[@@ 4@@ ],@@ temp; inti,j,k,@@ n; scanf("%d",&n); for(i=0;i<3;i++) { scanf("%d%d%d",&stu[i].num,&stu[i].@@ ch@@ ,&stu[i].math); stu[i].sum=stu[i].@@ ch@@ +stu[i].@@ math; } for(i=0;i<2@@ ;i++) { k=i; for(j=i+1;j<@@ 3;j++) if(stu[j].@@ sum>@@ stu[i].@@ sum) {@@ k=j; temp=@@ stu@@ [k]; stu@@ [j]=@@ stu[i]; stu[i]=@@ temp;} } for(i=@@ 3@@ ;i<n;i++) { scanf("%d%d%d",&@@ stu[3].@@ num,&@@ stu[3].@@ ch@@ ,&@@ stu[3].@@ math); stu[3].@@ sum=@@ stu[3].@@ ch@@ +@@ stu[3].@@ math; if(@@ stu[3].@@ sum>@@ stu[0].@@ sum) { stu[2@@ ]=@@ stu@@ [1]; stu@@ [1]=@@ stu[@@ 0]; stu[@@ 0]=@@ stu[@@ 3@@ ]; } elseif(@@ stu[3].@@ sum>@@ stu[1].@@ sum) { stu[2@@ ]=@@ stu@@ [1]; stu@@ [1]=@@ stu[@@ 3@@ ]; } elseif(@@ stu[3].@@ sum>@@ stu[2@@ ].@@ sum) stu[2@@ ]=@@ stu[@@ 3@@ ]; } for(i=0;i<3;i++) printf("%d%d\n",stu[i].@@ num,@@ stu[i].@@ sum); return0; }  
c -1
h -1
0

voidmain(){ intn,k,i,j,@@ ib@@ =1; inta[1000]; scanf("%d%d",&n,&k); for(i=0;i<n;i++) scanf("%d",&a[i]); for(i=0;i<n-1;i++) if(@@ ib@@ ){ for(j=i+1;j<n;j++) { if(a[i]+a[j]==k) {@@ printf("yes"); ib@@ =0; break;} if((@@ i==@@ n-2@@ )&&(@@ a[i]+@@ a[j]@@ !=@@ k@@ )) printf("no"); }} }  
c -1
h -1
struct@@ f@@ { charid[10]; int@@ old@@ ; }@@ st@@ [1000],@@ stu[@@ 1000],@@ temp; intmain() { intn,i,j,@@ a,b,@@ c; char@@ cc@@ ,@@ aa@@ ,@@ x[@@ 1000],@@ y@@ [1000]; scanf("%d",&n); for(i=1;i<=n;i++){ scanf("%s@@ %c@@ %d@@ %c@@ ",@@ st[i].@@ id,&@@ aa@@ ,&@@ st[i].@@ old@@ ,&@@ cc@@ );} a=0; for(j=1;j<=n;j++){ if(@@ st@@ [j].@@ old@@ >=60){ a++; stu[@@ a@@ ]=@@ st@@ [j]; }} for(i=a@@ -1@@ ;i>=0;i--){ for(j=1;j<=@@ i;j++){ if(stu[j].@@ old@@ <@@ stu[j+1].@@ old@@ ){ temp=@@ stu@@ [j]; stu@@ [j]=@@ stu@@ [j+1]; stu@@ [j+1]=@@ temp@@ ;@@ }}} for(i=1;i<=@@ a;i++){ puts(@@ stu[i].@@ id@@ );} for(i=1;i<=n;i++){ if(@@ st[i].@@ old@@ <60@@ )@@ puts(@@ st[i].@@ id@@ );} }  
c -1
h -1
0

intmain() { double@@ m,@@ aver@@ ; intn,i,j,@@ k=0,@@ l=0; chara[500],b[500]; scanf("%lf",&@@ m); scanf("%s",a); scanf("%s",b); if(strlen(a)!=strlen(b@@ )) { k++; } for(i=0;i<@@ strlen(a)@@ ;i++) { if(a[i]!='A'&&a[i]!='T'&&a[i]!='C'&&a[i]!='@@ G'&&@@ b[i]!='A'&&b[i]!='@@ C'&&b[i]!='@@ T'&&b[i]!='@@ G') { k++; } } for(i=0;i<@@ strlen(a)@@ ;i++) { if(a[i]==b[i]) { l++; } } aver@@ =1.0*@@ l@@ /@@ strlen(@@ a); if(k@@ !=0) { printf("error"); } if(k==0) { if(@@ aver@@ >@@ m) { printf("yes"); } else { printf("no"); } } return0; }  
c -1
h -1
intmain() { chars@@ [100][10]; intn,@@ z@@ [100]; scanf("%d",&n); for(inti=0;i<n;i++) { scanf("%s%d",@@ s[i]@@ ,&@@ z@@ [i]); } for(intj=@@ 120@@ ;j@@ >=60@@ ;j--) { for(intt@@ =0;t@@ <n;@@ t++) { if(z@@ [t@@ ]==@@ j) { printf("%s\n",@@ s[@@ t@@ ]); z@@ [t@@ ]=0; } } } for(intm=0;m@@ <n;m++) { if(z@@ [m]@@ !=0) printf("%s\n",@@ s[m@@ ]); } return0; }  
c -1
h -1
0

intmain() { intn; scanf("%d",&n); structbook{ int@@ booknumber@@ ; charwriter@@ [27]; }@@ book[999]; inti; for(i=0;i<n;i++) { scanf("%d%s",&book[i].@@ booknumber@@ ,@@ book[i].@@ writer); } int@@ writerbookquantity@@ [26]; for(i=0;i<26@@ ;i++)@@ writerbookquantity@@ [i]=0; intj,@@ len,@@ x; for(i=0;i<n;i++) { len=strlen(@@ book[i].@@ writer); for(j=0;j<len;j++) { x=@@ book[i].@@ writer@@ [j]@@ -'A'; writerbookquantity@@ [x@@ ]++; } } int@@ maxwriter@@ =0,@@ maxquantity@@ =0; for(i=0;i<26;i++) { if(@@ writerbookquantity@@ [i]>@@ maxquantity@@ ) { maxquantity@@ =@@ writerbookquantity@@ [i]; maxwriter@@ =i; } } printf("%c\n%d\n",@@ (char)(@@ maxwriter@@ +'@@ A')@@ ,@@ writerbookquantity@@ [@@ maxwriter@@ ]); for(i=0;i<n;i++) { len=strlen(@@ book[i].@@ writer); for(j=0;j<len;j++) { if(@@ (int)@@ book[i].@@ writer@@ [j]==@@ maxwriter@@ +'A'@@ ) printf("%d\n",book[i].@@ booknumber@@ ); } } return0; }  
c -1
h -1
intmain(){ inti,@@ num=0,@@ a1,@@ b1,@@ t=1; chara[500],b[500]; doublen; scanf("%lf",&n); scanf("%s%s",a,b); a1@@ =strlen(a); b1@@ =strlen(b); if(@@ a1@@ !=@@ b1@@ ){ printf("error"); t@@ =0;} else{ for(i=0;i<@@ a1@@ ;i++){ if(a[i]!='A'&&a[i]!='T'&&a[i]!='C'&&a[i]!='@@ G'){ printf("error");@@ t=0; break; } if(@@ b[i]!='A'&&b[i]!='T'&&b[i]!='C'&&b[i]!='@@ G'){ printf("error");@@ t=0; break; } } } if(t@@ ==1){ for(i=0;i<@@ a1@@ ;i++){ if(a[i]==b[i]){ num++; } } if(1.0*@@ num@@ /@@ a1@@ >n){ printf("yes"); } else{ printf("no"); } } return0; }  
c -1
h -1
0

intmain() { intn,i,@@ k; inta[@@ 1000]={0}; intb[@@ 10000@@ ]={0}; scanf("%d%d",&n,&k); for(i=1;i<=n;i++) {@@ scanf("%d",&a[i]); b[@@ a[i]@@ ]=1; } for(i=1;i<=n;i++) if(@@ b[k@@ -@@ a[i]@@ ]@@ ==1&&@@ k-@@ a[i]@@ >0@@ ){@@ printf("yes");@@ return0;} printf("no"); return0; }  
c -1
h -1
int@@ compare@@ (constvoid*a,constvoid*@@ b) { return@@ *(int*)@@ a@@ -*@@ (int*)@@ b; } void@@ Do@@ (intm,int@@ n) { inta[@@ m@@ ],b[@@ n]; inti; for(i=0;i<m;i++) scanf("%d",&a[i]); for(i=0;i<n;i++) scanf("%d",&b[i]); qsort@@ (a,@@ m,@@ 4@@ ,@@ compare@@ ); qsort@@ (b,@@ n,@@ 4@@ ,@@ compare@@ ); for(i=0;i<m;i++) printf("%d",a[i]); for(i=0;i<n-1;i++) printf("%d",b[i]); printf("%d\n",@@ b[@@ n-1]); } main() { intm,n; scanf("%d%d",&m,&n); Do@@ (@@ m,n); }  
c -1
h -1
0

intmain(){ intk,@@ m,n; inti,j,t; intsum; int@@ z; scanf("%d",&k); for(t=0;t@@ <k;@@ t++){ scanf("%d%d",&m,&n); sum=0; for(i=0;i<m;i++){ for(j=0;j<n;j++){ scanf("%d",&@@ z); if(i==0||i==@@ m-1)@@ sum+=@@ z; else{ if(j@@ ==0||j==@@ n-1)@@ sum+=@@ z; } } } printf("%d\n",sum); } return0; }  
c -1
h -1
intmain() { structstu { inta,b,c; structstu*next; structstu*@@ back@@ ; }; structstu@@ *head,*@@ p1,*p2,*@@ p,*@@ pmax1@@ ,*@@ pmax2@@ ,*@@ pmax3@@ ; intn,i,j,@@ max1,@@ max2@@ ,max3@@ ; scanf("%d",&n); p1=p2=(struct@@ stu*)malloc(sizeof(structstu)); scanf("%d%d%d",&p1->@@ a@@ ,&p1->@@ b@@ ,&p1->@@ c); head=p1; for(i=1;i<n;i++) { p1=(struct@@ stu*)malloc(sizeof(structstu)); p2->next=p1; p1->@@ back@@ =p2; p2=p1; scanf("%d%d%d",&p1->@@ a@@ ,&p1->@@ b@@ ,&p1->@@ c); } p=head; max1@@ =0; for(i=0;i<n;i++) { if(@@ max1@@ <(@@ p->@@ b+@@ p->@@ c@@ )) { max1@@ =p->@@ b+@@ p->@@ c; pmax1@@ =p; } p=p->next; } p=head; max2@@ =0; for(i=0;i<n;i++) { if(@@ max2@@ <(@@ p->@@ b+@@ p->@@ c@@ )&&(@@ p@@ !=@@ pmax1@@ )) { max2=@@ p->@@ b+@@ p->@@ c; pmax2@@ =p; } p=p->next; } p=head; max3@@ =0; for(i=0;i<n;i++) { if(@@ max3@@ <(@@ p->@@ b+@@ p->@@ c@@ )&&(@@ p@@ !=@@ pmax1@@ )&&(@@ p@@ !=@@ pmax2@@ )) { max3=@@ p->@@ b+@@ p->@@ c; pmax3@@ =p; } p=p->next; } printf("%ld%d\n",@@ pmax1@@ ->@@ a,@@ (@@ pmax1@@ ->@@ b+@@ pmax1@@ ->@@ c@@ )); printf("%ld%d\n",@@ pmax2@@ ->@@ a,@@ (@@ pmax2@@ ->@@ b+@@ pmax2@@ ->@@ c@@ )); printf("%ld%d\n",@@ pmax3@@ ->@@ a,@@ (@@ pmax3@@ ->@@ b+@@ pmax3@@ ->@@ c@@ )); return0; }  
c -1
h -1
0

struct@@ info { intnum; charauthor[26]; }a[@@ 1000]; intmain() { inti,@@ m,@@ j,@@ b[@@ 26]={0}; char@@ out@@ ; scanf("%d\n",&@@ m); for(i=0;i<m;i++) scanf("%d@@ %s@@ \n",&@@ a[i].@@ num,@@ a[i].@@ author); for(i=0;i<m;i++) for(j=0;j<26;j++) b[@@ a[i].@@ author@@ [j]@@ -'A']++; intmax=@@ b[0]; for(i=0;i<26;i++) max=@@ max@@ >@@ b[i]@@ ?@@ max@@ :@@ b[i]; for(i=0;i<26;i++) if(b[i]==@@ max) { out@@ ='A'+i; printf("%c\n",@@ 'A'+@@ i); printf("%d\n",@@ b[i]); break; } for(i=0;i<m;i++) for(j=0;j<26;j++) if(a[i].@@ author@@ [j]==@@ out@@ ) { printf("%d\n",@@ a[i].@@ num); break; } }  
c -1
h -1
intmain() { int@@ jud@@ [@@ 200],@@ num[@@ 30000@@ ],@@ n,i,j,@@ sum,@@ res@@ [@@ 200]; scanf("%d",&n); sum=0; for(i=1;i<=@@ 100;i++) jud@@ [i]=0; for(i=1;i<=n;i++) { scanf("%d",&@@ num[i]); if(@@ jud@@ [@@ num[i]@@ ]==0) { sum++; res@@ [@@ sum@@ ]=@@ num[i]; jud@@ [@@ num[i]@@ ]=1; } } for(i=1;i<@@ sum@@ ;i++) printf("%d",@@ res@@ [i]); printf("%d",@@ res@@ [@@ sum@@ ]); return0; }  
c -1
h -1
0

intmain() { intn,k,i,j,@@ z,@@ sum=0,@@ x=0; intsz[1000]; scanf("%d%d",&n,&k); for(i=0;i<n;i++){ scanf("%d",&@@ sz[i]@@ );} for(j=0;j<n-1;j++) for(z@@ =j+1@@ ;@@ z@@ <n;@@ z++) { sum=@@ sz@@ [j]+@@ sz[@@ z@@ ]; if(sum@@ ==k) {@@ x@@ ++;@@ }} if(x@@ ==0)@@ printf("no"); elseif(x@@ !=0)@@ printf("yes"); return0; }  
c -1
h -1
intmain() { intb,@@ d=0,@@ s[@@ 15],@@ i,j; while(1) { scanf("%d",&s@@ [0]); if(s@@ [0]@@ ==-1)break; for(i=1;@@ s@@ [i-1]@@ !=0;i++) scanf("%d",&s[i]); for(i=0;s[i]@@ !=0;i++) for(j=0;@@ s[j]@@ !=0;j++) {if((@@ s@@ [i]==@@ s[j]@@ *2@@ )&&(@@ s[i]@@ !=0)&&(@@ s[j]@@ !=0)) d++; } printf("%d\n",@@ d); d=0; } return0; }  
c -1
h -1
0

intmain() { intsz[@@ 1001]; intn,i,j,k,@@ m; m=0; scanf("%d",&n); scanf("%d",&k); for(i=0;i<n;i++) { scanf("%d",&(sz[i]@@ )); } for(i=0;i<n;i++) { for(j=0;j<n;j++) { if(sz[i]+sz@@ [j]==k) { m=1; printf("yes"); break; } } if(m==1) break; } if(m==0) printf("no"); return0; }  
c -1
h -1
intmain() { intl,@@ m,n,@@ i,j,@@ s,@@ k; charstring@@ [256],@@ substring@@ [256],@@ replacement@@ [256]; char@@ t; scanf("%s",@@ string); scanf("%s",@@ substring); scanf("%s",@@ replacement); l=strlen(@@ string); m=strlen(@@ substring); t=@@ substring@@ [0]; for(i=0;i<=@@ l@@ -@@ m;i++) { s=0; if(string@@ [i]==@@ t) { for(j=i;j<=@@ i+@@ m-1;j++) { if(string@@ [j]==@@ substring@@ [j-i@@ ]){@@ s@@ ++;} } if(s@@ ==@@ m) { for(k=0;k<=@@ m-1@@ ;k++) {@@ string@@ [i+k@@ ]=@@ replacement@@ [k]@@ ;} i=@@ l@@ -@@ m; } else {@@ i@@ ++;} } } printf("%s\n",@@ string); return0; }  
c -1
h -1
0

intmain(){ intlen1,len2,@@ i,@@ same@@ =0; double@@ rate@@ ,@@ z; char@@ DNA@@ [2][@@ 600]; scanf("%lf",&@@ rate@@ ); scanf("%s%s",@@ DNA@@ [0],@@ DNA@@ [1]); len1=strlen(@@ DNA@@ [0]); len2=strlen(@@ DNA@@ [1]); if(len1!=@@ len2){ printf("error"); return0; } else{ for(i=0;i<len1;i++){ if(((@@ DNA@@ [0]@@ [i]!='A')&&(@@ DNA@@ [0]@@ [i]!='G')@@ &&(@@ DNA@@ [0]@@ [i]!='C')&&(@@ DNA@@ [0]@@ [i]!='T')@@ )||((@@ DNA@@ [1]@@ [i]!='A')&&(@@ DNA@@ [1]@@ [i]!='G')@@ &&(@@ DNA@@ [1]@@ [i]!='C')&&(@@ DNA@@ [1]@@ [i]!='T')@@ )){ printf("error"); return0; } else{ if(@@ DNA@@ [0]@@ [i]==@@ DNA@@ [1]@@ [i]) same@@ ++; } } z@@ =(@@ 1.0*@@ same@@ )@@ /@@ len1; if(z@@ >=@@ rate@@ ) printf("yes"); elseprintf("no"); } return0; }  
c -1
h -1
inta[100],b[100]; int@@ c,d; voidread@@ (int,int); void@@ rank@@ (int,int); voidprint@@ (int,int); intmain() { cin>>@@ c@@ >>@@ d; read@@ (c,@@ d); rank@@ (c,@@ d); print(@@ c,@@ d); } voidread@@ (intn,int@@ m) { for(inti=0;i<n;i++) cin>>a[i]; for(inti=0;i<m;i++) cin>>b[i]; } void@@ rank@@ (intn,int@@ m) { inttemp; for(inti=0;i<@@ n-1;i++) for(intj=0;j<@@ n-1@@ -i;j++) if(a[j]>a[j+1]) { temp=@@ a[j];a[j]=a[j+1];@@ a[j+1]=temp; } for(inti=0;i<@@ m-1;i++) for(intj=0;j<@@ m-1@@ -i;j++) if(b[j]>b[j+1]) { temp=@@ b[j]@@ ;@@ b[j]=b@@ [j+1];@@ b[j+1]=@@ temp; } } voidprint@@ (intn,int@@ m) { for(inti=0;i<n;i++) cout<<a[i]<<""; for(inti=0;i<m;i++) { cout<<@@ b[i]; if(i!=@@ m-1) cout<<"@@ "; } }  
c -1
h -1
0

voidmain() {int@@ sum@@ (int*p,int@@ h@@ ,int@@ l); intN@@ ,@@ m,n,@@ i,j,@@ q,@@ a[@@ 110][110@@ ]={0@@ }@@ ;@@ scanf("%d",&@@ N@@ );@@ for(q@@ =1;@@ q@@ <=@@ N@@ ;q++) {@@ scanf("%d%d",&@@ m,&@@ n);@@ for(i=0;i<=@@ m-1@@ ;i++)@@ for(j=0;j<=@@ n-1@@ ;j++)@@ scanf("%d",&a[i][j]); printf("%d\n",sum@@ (@@ a[@@ 0],@@ m,@@ n@@ )); }} intsum@@ (int*p,int@@ h@@ ,int@@ l) {int@@ r=0,@@ i,j@@ ;@@ for(i=0;i<=@@ h@@ -1;i++) {@@ if(i==0||i==@@ (@@ h@@ -1)@@ )@@ for(j=0;j<=@@ l@@ -1@@ ;j++)@@ r=r@@ +*@@ (p@@ +i@@ *@@ 110@@ +j); else@@ r=r@@ +*@@ (p@@ +i@@ *@@ 110@@ )@@ +*@@ (p@@ +i@@ *@@ 110@@ +l@@ -1)@@ ;} return@@ r; }  
c -1
h -1
intmain() { intk,m,n,i,j,@@ l,@@ b[@@ 101][@@ 101],@@ sum[@@ 1000]; cin>>k; for(l=1;l@@ <=k;@@ l++) { cin>>m>>n; for(i=1;i<=m;i++) { for(j=1;j<=n;j++) { cin>>@@ b[i]@@ [j]; } } sum[@@ l@@ ]=0; for(j=1;j<=n;j++) sum[@@ l@@ ]+=@@ b[1@@ ]@@ [j]; for(j=1;j<=n;j++) sum[@@ l@@ ]+=@@ b[m@@ ]@@ [j]; for(i=2@@ ;i<@@ m;i++) sum[@@ l@@ ]+=@@ b[i]@@ [1]; for(i=2@@ ;i<@@ m;i++) sum[@@ l@@ ]+=@@ b[i]@@ [n]; } if(k@@ ==1)@@ cout<<sum@@ [1]; else { cout<<sum@@ [1]; for(l@@ =@@ 2;@@ l@@ <=k;@@ l++) { cout<<endl; cout<<@@ sum[@@ l@@ ]; } } return0; }  
c -1
h -1
1


main() { intn,i,j; scanf("%d",&n); inta[@@ 25],@@ len@@ [25]; for(i=0;i<n;i++) scanf("%d",&a[i]); for(i=0;i<n;i++) len@@ [i]=1; int@@ lenmax@@ =1; for(i=n-2;i>=0;i--) { intmax=0; for(j=n-1;j>i;j--) { if((a[j]@@ <=@@ a[i]@@ )&&(@@ len@@ [j]@@ >max@@ )) max=@@ len@@ [j]; } len@@ [i]=@@ max+1; lenmax@@ =@@ lenmax@@ >@@ len@@ [i]@@ ?@@ lenmax@@ :@@ len@@ [i]; } printf("%d\n",@@ lenmax@@ ); return0; }  
c -1
h -1
main() { inta[16@@ ][@@ 16],@@ i,j,k,@@ m[@@ 16@@ ]={0},@@ n,@@ len,@@ sum; i=0; do{ i=i+1; j=0; do{ j=j+1; scanf("%d",&a[i][j]); m@@ [i]=@@ m[i]@@ +1;@@ }while(@@ (@@ a[i][j]@@ !=0)&&(@@ a[i][j]@@ !=@@ -1)); }while(@@ a[i][1]@@ !=-1); len@@ =i; for(i=1;i<@@ len@@ ;i++) { sum=0; for(j=2;j<=@@ m@@ [i];j++) { for(k=1;k<@@ j@@ ;k++) {if((@@ a[i]@@ [j]==2*@@ a[i][k]@@ )||(@@ a[i][j]@@ *2==@@ a[i][k]@@ ))@@ sum=sum+1; } } printf("%d\n",sum); } }  
c -1
h -1
0

intmain(){ intn,i,j,@@ temp; cin>>n; structstu@@ { int@@ xuehao@@ [100000]; int@@ yuwen@@ [100000]; int@@ shuxue@@ [100000]; int@@ zongfen@@ [100000]; }@@ a; for(i=0;i<n;i++) { cin>>a@@ .@@ xuehao@@ [i]; cin>>a@@ .@@ yuwen@@ [i]; cin>>a@@ .@@ shuxue@@ [i]; a.@@ zongfen@@ [i]=@@ a.@@ shuxue@@ [i]+@@ a.@@ yuwen@@ [i]; } for(i=n-1;i@@ >=@@ n-@@ 3@@ ;i--) for(j=i@@ ;j@@ >=1@@ ;j--) if(a@@ .@@ zongfen@@ [j]>@@ a.@@ zongfen@@ [j-1]) { temp=@@ a.@@ zongfen@@ [j-1]; a.@@ zongfen@@ [j-1]=@@ a.@@ zongfen@@ [j]; a.@@ zongfen@@ [j]=temp; temp=@@ a.@@ xuehao@@ [j-1]; a.@@ xuehao@@ [j-1]=@@ a.@@ xuehao@@ [j]; a.@@ xuehao@@ [j]=temp; } for(i=0;i<=@@ 2@@ ;i++) cout<<@@ a.@@ xuehao@@ [i]@@ <<""<<@@ a.@@ zongfen@@ [i]<<endl; return0; }  
c -1
h -1
intmain() { structstu@@ { intchi; int@@ ma; intsum; inti; }; structstu@@ m[@@ 100000],@@ temp; intj,@@ n; scanf("%d",&n); structstu*@@ p=@@ m; structstu*@@ q; for(@@ ;p<@@ m+@@ n;@@ p@@ +=@@ 1) { scanf("%d%d%d",&@@ (*p).@@ i@@ ,&@@ (*p).@@ chi@@ ,&@@ (*p).@@ ma@@ ); (*p).@@ sum=(@@ *p@@ ).@@ chi@@ +@@ (*p).@@ ma; } for(p=@@ m@@ ;p<@@ m+@@ n-1@@ ;p++) { for(q=@@ p@@ +1@@ ;q@@ <@@ m+@@ n;@@ q++) { if((@@ *p@@ ).@@ sum<@@ (*@@ q@@ ).@@ sum) { temp@@ =*@@ p; *p@@ =*@@ q; *@@ q=@@ temp; } } if(p==@@ m+@@ 2) break; } for(p=@@ m@@ ;p<@@ m+@@ 3@@ ;p++) { printf("%d%d\n",@@ (*p).@@ i,@@ (*p).@@ sum); } return0; }  
c -1
h -1
1


intmain() { intk,@@ m,n; scanf("%d",&k); for(intl@@ =1;@@ l@@ <=k;@@ l++){ scanf("%d%d",&m,&n); intsz[@@ m@@ ][n]; for(intj=0;j<@@ m@@ ;j++){ for(inti=0;i<n;i++){ scanf("%d",&(@@ sz[j]@@ [i]@@ )); } } int@@ a=0; for(intj=0;j<@@ m@@ ;j++){ for(inti=0;i<n;i++){ a@@ +=@@ sz[j]@@ [i]; } } for(intj=1;j<@@ m-1@@ ;j++){ for(inti=1;i<@@ n-1;i++){ a@@ -=@@ sz[j]@@ [i]; } } printf("%d\n",@@ a); } return0; }  
c -1
h -1
intmain() { intn,@@ sz@@ [100][100]; introw,col,@@ a=0,b=0,@@ c=0,@@ d=0,@@ s=0,@@ p=0; inti,j,k,@@ l; scanf("%d",&n); for(row=0;row<n;@@ row++) { for(col=0;col<n;col@@ ++) { scanf("%d",&@@ sz[row][col@@ ]); } } for(i=0;i<n;i++) { if(p@@ !=1) { for(j=0;j<n;j++) { if(sz@@ [j]@@ [i]==0) { a@@ =j; b=i; p=1; break; } } } else { break; } } for(k=@@ n-1@@ ;k>=0@@ ;k--) { if(p@@ !=0) { for(l@@ =@@ n-1;@@ l@@ >=0;@@ l@@ --) { if(sz[@@ l@@ ][k@@ ]==0) { c=@@ l; d=@@ k; p=0; break; } } } else { break; } } s=(@@ c-a-1)*(d-b-1); printf("%d",s); return0; }  
c -1
h -1
0

intmain(){ intm,@@ e,@@ n,@@ i,j,k,@@ a[@@ 101@@ ],b[@@ 101@@ ],c[@@ 101]; char@@ ex@@ [11@@ ],@@ s[@@ 101][@@ 11@@ ],@@ s1@@ [@@ 101][@@ 11@@ ],@@ s2[@@ 101][@@ 11]; scanf("%d",&n); for(i=0,j@@ =0,@@ k@@ =0;i<@@ n;i++){ scanf("%s%d",@@ s[i]@@ ,&@@ a[i]); if(a[i]@@ >=60){ strcpy(@@ s1@@ [j],@@ s[i]); b[j]=@@ a[i]; j++; } else{ strcpy(@@ s2@@ [k],@@ s[i]); c@@ [k]=@@ a[i]; k++; } } for(m=1;m@@ <=j@@ ;m++){ for(i=0;i<j@@ -@@ m;i++){ if(b[i]@@ <b@@ [i+1@@ ]){ strcpy(@@ ex@@ ,@@ s1[i]); strcpy(@@ s1@@ [i],@@ s1@@ [i+1]); strcpy(@@ s1@@ [i+1],@@ ex@@ ); e=@@ b[i]; b[i]=b[i+1]; b[i+1]=@@ e; } } } for(i=0;i<j@@ ;i++){ printf("%s\n",@@ s1[i]); } for(i=0;i<k;i++){ printf("%s\n",@@ s2@@ [i]); } return0; }  
c -1
h -1
voidmain() { intc[@@ 15],@@ i,@@ m=0; for(i=0;i<@@ 15;i++) { scanf("%d",&@@ c[i]); if(c@@ [i]==0) { break; } } intk,@@ j,@@ n=0; for(k=0;@@ c@@ [k]@@ !=0@@ ;k++) { for(j=0;@@ c[j]@@ !=0;j++) { if(c@@ [k]==2*@@ c@@ [j]) { n++; } } } printf("%d",n); }  
c -1
h -1
0

voidmain() { inta[@@ 200][@@ 200]; intm,n,i,j,@@ x; scanf("%d%d",&m,&n); for(i=0;i<m;i++) for(j=0;j<n;j++) scanf("%d",&a[i][j]); i=0; j=0; for(x=0;x@@ <=@@ m+@@ n-2@@ ;x@@ ++) { for(i=0;i<m;i++) for(j=0;j<n;j++) { if(i+j@@ ==@@ x) printf("%d\n",a[i][j]); } } }  
c -1
h -1
main() {@@ char@@ temp_0@@ [@@ 10],@@ id@@ [100][10]; inti,j,n,@@ max,@@ age@@ [100],@@ num@@ [100],@@ yes@@ [100],@@ ncount@@ =1,@@ temp,@@ num_1@@ ; scanf("%d",&n); for(i=0;i<n;i++) {@@ num[i]=@@ i; scanf("%s%d",@@ id[i],&@@ age[i]); } for(j=0;j<n;j++) { for(i=0;i<n@@ -j@@ -1;i++) {if(@@ age@@ [i]<@@ age@@ [i+1]) {@@ strcpy(@@ temp_0@@ ,@@ id[i]); temp=@@ age[i]; num_1@@ =@@ num[i]; strcpy(id@@ [i],@@ id@@ [i+1]); age@@ [i]=@@ age@@ [i+1]; num[i]=@@ num@@ [i+1]; age@@ [i+1]=@@ temp; strcpy(id@@ [i+1],@@ temp_0@@ ); num@@ [i+1]=@@ num_1@@ ;} }} for(i=0;i<n;i++) {if(@@ age@@ [i]@@ >=60) printf("%s\n",@@ id[i]); } for(j=0;j<n;j++) {@@ for(i=0;i<n@@ -j@@ -1;i++) {@@ if(num@@ [i]>@@ num@@ [i+1]) {@@ strcpy(@@ temp_0@@ ,@@ id[i]); temp=@@ age[i]; num_1@@ =@@ num[i]; strcpy(id@@ [i],@@ id@@ [i+1]); age@@ [i]=@@ age@@ [i+1]; num[i]=@@ num@@ [i+1]; age@@ [i+1]=@@ temp; strcpy(id@@ [i+1],@@ temp_0@@ ); num@@ [i+1]=@@ num_1@@ ; }} } for(i=0;i<n;i++) {if(@@ age@@ [i]@@ <60) printf("%s\n",@@ id@@ [i]);} }  
c -1
h -1
0

intsum=0,@@ t; void@@ dg@@ (int@@ s) { for(inti=@@ s@@ ;i<=@@ t;i++) { if(t@@ %i==0) { t=t@@ /@@ i; if(t@@ ==1)@@ sum++; else@@ dg@@ (i); t=t@@ *@@ i; } } } intmain() { intn; cin>>n; while(n--) { cin>>t; dg@@ (@@ 2); cout<<sum<<endl; sum=0; } return0; }  
c -1
h -1
int@@ factors@@ (int@@ ,int@@ ,int); intmain() { intnum,@@ n,i,j,@@ b[@@ 10000]; cin>>n; for(i=0;i<n;i++) { cin>>num; int@@ part@@ =0; int@@ t=@@ num; for(j=2;j<=@@ num@@ ;j++) { while(t@@ %j==0) { t@@ /=@@ j; part@@ ++; } } b[i]=@@ factors@@ (@@ 1,@@ part@@ ,@@ num); } for(i=0;i<n;i++) { cout<<b[i]@@ <<endl; } return0; } int@@ factors@@ (int@@ factor1@@ ,int@@ part@@ ,int@@ num) { intsum=0; if(num@@ <@@ factor1@@ ) return0; if(@@ part@@ ==1) return1; for(inti=@@ factor1@@ ;i<=@@ num;i++) if(num@@ %i==0) sum=sum+@@ factors@@ (i,@@ part@@ -1,@@ num@@ /i); returnsum; }  
c -1
h -1
1


intmain() {@@ intn,k,i,@@ b=0,@@ a,@@ j,@@ array[@@ SIZE@@ ]; cin>>n>>k; for(i=0;i<n;i++) scanf("%d",&array@@ [i]); for(i=0;i<n;i++) {@@ a=@@ k-@@ array@@ [i]; for(j=1;j<n;j++) {@@ if(a==@@ array@@ [j]) {@@ b@@ =1;break;} else@@ continue;} if(b@@ ==1)break; } if(b@@ ==1)@@ printf("yes"); else printf("no"); return0; }  
c -1
h -1
intmain() { inta[100][100],@@ i,j,@@ s,@@ n,@@ b[2@@ ],c[@@ 2@@ ],@@ q=0,@@ p=0; scanf("%d",&n); for(i=0;i<=n-1;i++) { for(j=0;j<=n-1;j++) scanf("%d",&a[i][j]); } for(i=0;i<=n-1;i++) { s=0; for(j=0;j<=n-1;j++) { if(a[i][j]==0) s@@ +=1; } if(s@@ >2) { b[p@@ ]=i; p@@ +=1; } } for(i=0;i<=n-1;i++) { s=0; for(j=0;j<=n-1;j++) { if(a[j]@@ [i]==0) s@@ +=1; } if(s@@ >2) { c[@@ q@@ ]=i; q@@ +=1; } } printf("%d",(@@ b[1@@ ]-@@ b[0]@@ -1)*(@@ c[@@ 1@@ ]-@@ c@@ [0]@@ -1)); return0; }  
c -1
h -1
0

struct@@ j { int@@ bianhao@@ ; char@@ zuozhe@@ [100]; }; main() { intm,@@ i,@@ l,@@ k,@@ z,@@ max=0; int@@ shumu@@ [26]; scanf("%d",&m); struct@@ j@@ *@@ a; a@@ =(struct@@ j@@ *)malloc(@@ m*@@ sizeof(@@ j@@ )); for(i=0;i<m;i++) { scanf("%d%s",&@@ a[i].@@ bianhao@@ ,@@ a[i].@@ zuozhe@@ ); } for(z@@ =0;z@@ <26@@ ;@@ z++) { shumu@@ [@@ z@@ ]=0; for(i=0;i<m;i++) { char*@@ p; p=@@ a[i].@@ zuozhe@@ ; l=strlen(@@ a[i].@@ zuozhe@@ ); for(k=0;k<@@ l@@ ;k++) { if(p@@ [k]@@ =='@@ A'+@@ z) shumu@@ [@@ z@@ ]++; } } } for(z@@ =0;z@@ <26@@ ;@@ z++) { if(@@ shumu@@ [@@ z@@ ]@@ >max) max=@@ shumu@@ [@@ z@@ ]; } for(z@@ =0;z@@ <26@@ ;@@ z++) { if(@@ shumu@@ [@@ z@@ ]==@@ max) { printf("%c\n%d\n",@@ z@@ +'A',@@ max); for(i=0;i<m;i++) { char*@@ p; p=@@ a[i].@@ zuozhe@@ ; l=strlen(@@ a[i].@@ zuozhe@@ ); for(k=0;k<@@ l@@ ;k++) { if(p@@ [k]@@ =='@@ A'+@@ z) printf("%d\n",@@ a[i].@@ bianhao@@ ); } } break; } } }  
c -1
h -1
structbook { intid; charwriter@@ [30]; }@@ book[@@ 1200@@ ]; intmain() { intn,@@ l,@@ t,@@ a[@@ 30]; char@@ m; cin>>n; for(inti=0;i<@@ 30@@ ;i++)@@ a[i]=0; for(inti=0;i<n;i++) { cin>>@@ book[i].@@ id@@ >>@@ book[i].@@ writer@@ ; l=strlen(@@ book[i].@@ writer); for(intj=0;j<@@ l@@ ;j++) { t=@@ book[i].@@ writer@@ [j]-65@@ ; a[t@@ ]++; } } t=@@ a[0]@@ ;@@ l=0; for(inti=0;i<@@ 26;i++) { if(a[i]>@@ t) { l@@ =i; t=a[i]; } } m=@@ l@@ +65; cout<<@@ m@@ <<endl; cout<<t@@ <<endl; for(inti=0;i<@@ 30@@ ;i++)@@ a[i]=0; for(inti=0;i<n;i++) { l=strlen(@@ book[i].@@ writer); for(intj=0;j<@@ l@@ ;j++) { if(book[i].@@ writer@@ [j]==@@ m) cout<<@@ book[i].@@ id@@ <<endl; } } return0; }  
c -1
h -1
1


intmain() { intN@@ ,@@ m,@@ i,j,@@ a[@@ 10000],@@ t,@@ b[@@ 10000@@ ]={0},@@ n[@@ 10000@@ ]={0},@@ k,@@ p=0,@@ x,@@ q; scanf("%d",&m); for(j=0;j<m;j++) scanf("%d",&a[j]); b[0]=@@ a[0]; for(j=0;j<m;j++) { p=0; for(k=0;@@ b[k@@ ]@@ !=0@@ ;k++) { if(a[j]==@@ b[k@@ ]){@@ n@@ [k]@@ ++@@ ;p@@ =1;break;} } if(p@@ ==0){@@ b[k]=@@ a[j]@@ ;n@@ [k]@@ ++;} } x@@ =0;q@@ =0; if(n@@ [0]@@ ==1)@@ printf("%d",@@ b[0]@@ ); elseif(n@@ [0]@@ >=@@ 2) { printf("%d",@@ b[0]@@ ); n@@ [0]@@ =0; } for(j=1@@ ;@@ b[j]@@ !=0;j++) { if(n@@ [j]@@ ==1)@@ printf("%d",@@ b[j]); elseif(n@@ [j]>=@@ 2) { printf("%d",@@ b[j]); n@@ [j]@@ =0; } } return0; }  
c -1
h -1
inta[1000][1000]; intmain() { intn,i,j,@@ i1@@ ,@@ j1@@ ,@@ i2@@ ,@@ j2@@ ,@@ flag=1; cin>>n; for(i=0;i<n;i++) { for(j=0;j<n;j++) { cin>>*(*(a+i)+j); if(flag@@ &&@@ *(*(a+i)@@ +j)@@ ==0){@@ i1@@ =i;@@ j1@@ =j@@ ;@@ flag@@ =0;} } } for(i=@@ i1@@ ;i<n;i++) { if(@@ *(*(a+i)@@ +@@ j1@@ )@@ !=0@@ ){@@ i2@@ =i@@ -1;@@ break;} } if(i==@@ n)@@ i2@@ =i-1; for(j=@@ j1@@ ;j<n;j++) { if(@@ *(*(a@@ +@@ i2@@ )@@ +j)@@ !=0@@ ){@@ j2@@ =j@@ -1;@@ break;} } if(j==@@ n)@@ j2@@ =j@@ -1; cout<<(@@ i2@@ -@@ i1@@ -1)*(@@ j2@@ -@@ j1@@ -1)@@ <<endl; return0; }  
c -1
h -1
0

struct@@ Book { intnumber; charauthor@@ [30]; }; voidmain() { intmax=0,@@ len; int@@ sum[@@ 30]={0}; intm,@@ i,j; struct@@ Book@@ book[999]; scanf("%d",&m); for(i=0;i<m;i++) { scanf("%d%s",&book[i].@@ number,@@ book[i].author); len=strlen(@@ book[i].author); for(j=0;j<len;j++) sum[@@ book[i].author@@ [j]@@ -65]++; } for(i=0;i<26;i++) { if(sum[i]>@@ sum[@@ max@@ ]) max=i; } printf("%c\n%d\n",@@ max@@ +65@@ ,@@ sum[@@ max@@ ]); for(i=0;i<m;i++) { len=strlen(@@ book[i].author); for(j=0;j<len;j++) { if(book[i].author@@ [j]==@@ max@@ +65) { printf("%d\n",book[i].@@ number); break; } } } }  
c -1
h -1
intmain() { intn,@@ i,j@@ ,*@@ b,@@ max,@@ maxn@@ =0@@ ,*@@ a; scanf("%d",&n); a=@@ (int*)malloc(sizeof(int)*n); b=@@ (int*)malloc(sizeof(int)*n); for(i=0;i<n;i++) { scanf("%d",a@@ +i); b[i]=0; } for(i=n-1;i@@ >-@@ 1@@ ;i--) { max=0; for(j=n-1;j>i;j--) if(a[j]<=@@ a[i]&&@@ b[j]@@ >=@@ max) max=@@ b[j]; b[i]=@@ max+1; if(b[i]>@@ maxn@@ ) maxn=@@ b[i]; } printf("%d\n",@@ maxn@@ ); }  
c -1
h -1
0

intmain(){ chars1@@ [501],@@ s2[@@ 502@@ ]; int@@ l1,l2@@ ,i; double@@ std@@ ,@@ aa@@ ; scanf("%lf\n",&@@ std@@ ); scanf("%s@@ \n",@@ s1); scanf("%s",@@ s2); l1=strlen(@@ s1); l2=strlen(@@ s2); aa@@ =-1; if(l1@@ ==@@ l2@@ ){ aa@@ =0; for(i=0;i<l1;i++){ if(s1[i]==s2@@ [i])@@ aa@@ ++; if(s1@@ [i]!='A'&&@@ s1@@ [i]!='C'&&@@ s1@@ [i]!='T'&&@@ s1@@ [i]!='G')@@ {@@ aa@@ =-@@ 1@@ ;break;} if(s2@@ [i]!='A'&&@@ s2@@ [i]!='C'&&@@ s2@@ [i]!='T'&&@@ s2@@ [i]!='G')@@ {@@ aa@@ =-@@ 1@@ ;break;} } } if(@@ aa@@ ==@@ -1)@@ printf("error"); else{ aa@@ =@@ aa@@ /@@ l1; if(@@ aa@@ >@@ std@@ )@@ printf("yes"); elseprintf("no"); } return0; }  
c -1
h -1
main() { intn,i,j; scanf("%d",&n); inta[@@ 25],@@ len@@ [25]; for(i=0;i<n;i++) scanf("%d",&a[i]); for(i=0;i<n;i++) len@@ [i]=1; int@@ lenmax@@ =1; for(i=n-2;i>=0;i--) { intmax=0; for(j=n-1;j>i;j--) { if((a[j]@@ <=@@ a[i]@@ )&&(@@ len@@ [j]@@ >max@@ )) max=@@ len@@ [j]; } len@@ [i]=@@ max+1; lenmax@@ =@@ lenmax@@ >@@ len@@ [i]@@ ?@@ lenmax@@ :@@ len@@ [i]; } printf("%d\n",@@ lenmax@@ ); return0; }  
c -1
h -1
0

voidmain() {@@ intn,i,j,@@ t; scanf("%d",&n); structpatient {@@ charid[10]; intage; structpatient*next; }@@ *@@ p1,*p2,*@@ head,*@@ p@@ [100@@ ],*@@ temp; p1=@@ p2=@@ head=(struct@@ patient*)malloc(sizeof(structpatient)); scanf("%s%d",@@ p1->id,&p1->age); for(i=2;i<=n;i++) {@@ p1=(struct@@ patient*)malloc(sizeof(structpatient)); scanf("%s%d",@@ p1->id,&p1->age); p2->next=p1; p2=p1; } p2->next=NULL; for(t@@ =0,@@ p1=@@ head;@@ p1@@ !=NULL;@@ p1=p1->next) if(p1->age@@ >=60) {@@ p@@ [t@@ ]=@@ p1; t++; } for(j=0;j<@@ t@@ -1;j++) for(i=0;i<@@ t@@ -j@@ -1;i++) if(p@@ [i]@@ ->age@@ <p@@ [i+1]@@ ->age@@ ) {@@ temp=@@ p[i]; p[i]=@@ p@@ [i+1]; p@@ [i+1]=@@ temp; } for(i=0;i<=@@ t@@ -1;i++) printf("%s\n",@@ p[i]@@ ->id); for(p1=@@ head;@@ p1@@ !=NULL;@@ p1=p1->next) if(p1->age@@ <60) printf("%s\n",@@ p1->@@ id); }  
c -1
h -1
intmain() { inti,j,@@ a[@@ 20],@@ sum=0; while(1) { cin>>a[0]; if(a[0]==-1)break; for(i=1;@@ a[i-1]@@ !=0;i++) { cin>>a[i]; } for(i=0;a[i]@@ !=0;i++) { for(j=0;@@ a[j]@@ !=0;j++) { if(a[i]==2*@@ a[j]) sum++; } } cout<<sum<<endl; sum=0; } return0; }  
c -1
h -1
0

intf(inta,int@@ c); intj,@@ b; intmain() { inti,n,@@ m; scanf("%d",&n); for(i=1;i<=n;i++) { scanf("%d",&m); printf("%d\n",@@ f(@@ m,@@ 2)); } return0; } intf(inta,int@@ c) { intj,@@ b=0; for(j=@@ c@@ ;j<=@@ sqrt(@@ a)@@ ;j++) { if(a%@@ j@@ ==0) { b=@@ b+@@ f(@@ a/@@ j@@ ,j); } } return@@ b@@ +1; }  
c -1
h -1
struct@@ author { intnum; char@@ aut@@ [27]; }a[@@ 999]; voidmain() { void@@ search@@ (struct@@ author@@ b[@@ ],intn,@@ char@@ marker@@ ); intm,@@ i,@@ times@@ [@@ 30]={0}; int@@ length@@ =0,@@ j; intmax=0,@@ flag@@ =@@ 9@@ ; char@@ chac@@ ; scanf("%d",&m); for(i=0;i<m;i++) { scanf("%d%s",&@@ a[i].@@ num,&@@ a[i].@@ aut@@ ); length@@ =strlen(@@ a[i].@@ aut@@ ); for(j=0;j<@@ length@@ ;j++) { chac@@ =@@ a[i].@@ aut@@ [j]; times@@ [@@ chac@@ -'A']++; } } for(i=0;i<26;i++) { if(max<@@ times@@ [i]) { max=@@ times@@ [i]; flag@@ =i; } } printf("%c\n%d\n",@@ (char)(@@ flag@@ +'@@ A')@@ ,max); search@@ (a,@@ m,@@ (char)(@@ flag@@ +'@@ A')@@ ); } void@@ search@@ (struct@@ author@@ b[@@ ],intn,@@ char@@ marker@@ ) { inti,j; for(i=0;i<n;i++) { for(j=0;j<strlen(@@ b[i].@@ aut@@ );j++) { if(b[i].@@ aut@@ [j]==@@ marker@@ ) printf("%d\n",b[i].@@ num); } } }  
c -1
h -1
0

intmain(){ intn,i,k,@@ a[@@ 10000],@@ b,@@ j,@@ d=0; for(i=0;i<@@ 10000@@ ;i++){ a[i]=0; } scanf("%d%d",&n,&k); for(i=0;i<n;i++) scanf("%d",&a[i]); for(i=0;i<n;i++){ if(d@@ !=0) break; for(j=i+1;j<n;j++){ b=0; b=@@ a[i]+a[j]; if(k==@@ b){ printf("yes\n"); d++; break; } } } if(d@@ ==0){ printf("no\n"); } return0; }  
c -1
h -1
intmain(){ doublen; intnum@@ =0,@@ pan@@ =1; char@@ s; chars1@@ [@@ 600@@ ],@@ a1@@ [@@ 600]; gets(@@ &@@ s); n=@@ atof@@ (@@ &@@ s); gets(@@ s1); gets(@@ a1@@ ); for(inti=0;i<@@ strlen(@@ s1@@ );i++){ if(s1@@ [i]!='A'&&@@ s1@@ [i]!='C'&&@@ s1@@ [i]!='G'&&@@ s1@@ [i]!='T'){ pan@@ =0; } } for(inti=0;i<@@ strlen(@@ a1@@ );i++){ if(@@ a1@@ [i]!='A'&&@@ a1@@ [i]!='C'&&@@ a1@@ [i]!='G'&&@@ a1@@ [i]!='T'){ pan@@ =0; } } if(strlen(@@ s1@@ )!=strlen(@@ a1@@ )) pan@@ =0; elseif(@@ strlen(@@ s1@@ )==@@ strlen(@@ a1@@ )&&@@ pan@@ !=0){ for(inti=0;i<@@ strlen(@@ s1@@ );i++){ if(@@ a1@@ [i]==@@ s1@@ [i]) num++; } if(1.0*@@ num@@ /@@ strlen(@@ s1@@ )@@ <n) printf("no"); else@@ printf("yes"); } if(@@ pan@@ ==0) printf("error"); return0; }  
c -1
h -1
0

voidmain() { intn,i,j,k,@@ sum=0; inta[20000]; scanf("%d",&n); for(i=0;i<n;i++) { scanf("%d",&a[i]); } for(i=0;i<n-@@ sum@@ ;i++) for(j=i+1;j<@@ n-@@ sum@@ ;j++) { if(a[j]==a[i]) { for(k=j@@ ;k<@@ n-@@ sum@@ -1;k++) a[k]=a[k@@ +1]; sum++; j--; } } for(i=0;i<n-@@ sum@@ -1;i++) { printf("%d",a[i]); } printf("%d",a[@@ n-@@ sum@@ -1]); }  
c -1
h -1
intmain(){ intn; inti,j; int@@ x1,y1,x2,y2@@ ; ints=0; inta,@@ t; scanf("%d",&n); for(i=0;i<n;i++){ for(j=0;j<n;j++){ scanf("%d",&t); if(t@@ ==0){ if(s@@ ==0){ x1=i; y1=j; s=1; } x2=i; y2=j; } } } a@@ =(@@ x2-x1-1)*(y2-y1-1); if(a@@ <0) a@@ =-@@ a; printf("%d",@@ a); return0; }  
c -1
h -1
0

ints@@ (inta,intb) {int@@ sum=0,@@ z=0; if(a@@ !=1@@ &&@@ b@@ <=@@ a) { for(inti=@@ b@@ ;i<=@@ a@@ ;++i) { if(a%i==0) { sum+=@@ s@@ (a@@ /i,@@ i@@ );@@ z=1; } } } elseif(a@@ ==1) return1; returnsum; } intmain() { intn,@@ a; cin>>n; for(inti=0;i<@@ n;++@@ i) { cin>>a; cout<<s@@ (a,@@ 2)<<endl; } return0; }  
c -1
h -1
intmain(){ intn; scanf("%d",&n); int*@@ SZ@@ =@@ (int*)malloc(sizeof(int)*n); for(inti=0;i<n;i++){ scanf("%d",&@@ SZ@@ [i]); } for(intj=0;j<n;j++){ if(j@@ ==0){ printf("%d",@@ SZ@@ [j]); } for(intk=0;k<@@ j@@ ;k++){ if(@@ SZ@@ [j]==@@ SZ@@ [k]@@ ){ break; }elseif(@@ k==@@ j@@ -1){ printf("%d",@@ SZ@@ [j]); } } } return0; }  
c -1
h -1
0

intmain() { introw,col,@@ a[100][100]; cin>>row>>col; intnum=0; for(inti=1;i<=@@ row;i++) { for(intj=1;j<=@@ col;j++) { cin>>@@ a[i-1]@@ [j-1]; } } for(intk=0@@ ;k<=@@ row+col-2@@ ;k++) { for(intl@@ =0;@@ l@@ <=row@@ -1;@@ l++) { if(k@@ -l@@ <=@@ col-1@@ &&k@@ >=@@ l) { cout<<@@ a[l@@ ][@@ k-@@ l@@ ]<<endl; } } } return0; }  
c -1
h -1
intmain() { intt,@@ m,n,@@ count; inta[100][100]; cin>>t; for(int@@ temp@@ =0;@@ temp@@ <@@ t;@@ temp@@ ++) { count=0; cin>>m>>n; for(inti=0;i<m;i++) for(intj=0;j<n;j++) cin>>a[i][j]; for(inti=1;i<@@ m-1;i++) { count+=@@ a[i][0]; count+=@@ a[i][n-1]; } for(intj=0;j<n;j++) { count+=@@ a[0][j]; count+=@@ a[m-1][j]; } cout<<count<<endl; } return0; }  
c -1
h -1
0

intmain(){ double@@ a; inti=0,@@ b,@@ c=0,@@ e=0,@@ f; char@@ x[@@ 600@@ ],@@ y[@@ 600]; scanf("%lf",&a); scanf("%s%s",@@ x,@@ y); b=strlen(@@ x); f@@ =strlen(@@ y); if(b==@@ f@@ ){ for(i=0;i<b;i++){ if((x@@ [i]!='A'&&@@ x@@ [i]!='T'&&@@ x@@ [i]!='G'&&@@ x@@ [i]!='@@ C')||(@@ y@@ [i]!='A'&&@@ y@@ [i]!='T'&&@@ y@@ [i]!='G'&&@@ y@@ [i]!='@@ C')){ printf("error"); e=1; break; } if(x@@ [i]==@@ y@@ [i]){ c++; } } if(e@@ ==0){ if(c@@ *@@ 1@@ .@@ 000@@ /@@ b@@ >=@@ a) printf("yes"); else printf("no"); } } else{ printf("error"); } return0; }  
c -1
h -1
intmain() { inta[100][100],@@ b,@@ c,d,@@ e,f,@@ g,@@ h; scanf("%d",&b); g=0; for(c=0;c@@ <b@@ ;c@@ ++) { for(d@@ =0;d@@ <b@@ ;@@ d++) { scanf("%d",&@@ a[c@@ ][@@ d@@ ]); } } for(e@@ =0;e@@ <b@@ ;@@ e++) { for(@@ f@@ =0;@@ f@@ <b@@ ;@@ f@@ ++) { if(a[@@ e@@ ][@@ f@@ ]@@ ==0)@@ g=@@ g@@ +1; } } h@@ =(@@ g@@ /@@ 4@@ -1)*(@@ g@@ /@@ 4@@ -1); printf("%d",@@ h); }  
c -1
h -1
0

voidmain() { intn,i,j,@@ t@@ [26]={0},@@ k=0,@@ max,@@ h; scanf("%d",&n); structbook { inta; charb[@@ 26]; }@@ book@@ [100@@ ]={0@@ ,"@@ "@@ }; for(i=0;i<n;i++) { scanf("%d%s",&book[i].@@ a,@@ book[i].@@ b); } for(i=0;i<n;i++) { k=strlen(@@ book[i].@@ b); for(j=0;j<k;j++) { t[@@ book[i].@@ b[j]@@ -65]++; } } max=0; for(i=0;i<26;i++) { if(t@@ [i]>max) {max=@@ t@@ [i]; h@@ =i; } } printf("%c\n%d\n",@@ h@@ +65@@ ,max); for(i=0;i<n;i++) { k=strlen(@@ book[i].@@ b); for(j=0;j<k;j++) { if(book[i].@@ b[j]@@ ==@@ h@@ +65) printf("%d\n",book[i].@@ a); } } }  
c -1
h -1
void@@ duqu@@ (intn,@@ intm,@@ inta[@@ ],intb[@@ ]) { inti; for(i=0;i<n;i++) scanf("%d",&a[i]); for(i=0;i<m;i++) scanf("%d",&b[i]); } voidsort@@ (inta[@@ ],intn,@@ intb[@@ ],int@@ m) { inti,j,t; for(j=0;j<n-1;j++) { for(i=0;i<n@@ -1-j;i++) if(a[i]>a[i+1]) { t=@@ a[i];@@ a[i]=a[i+1@@ ];@@ a[i+1]=@@ t; } } for(j=0;j<m-1;j++) { for(i=0;i<m@@ -1-j;i++) if(b[i]>b[i+1]) { t=@@ b[i]@@ ;@@ b[i]=b@@ [i+1@@ ];@@ b[i+1]=@@ t; } } } voidhebing@@ (int@@ array1@@ [],int@@ array2@@ [@@ ],intn,int@@ m) { inti; for(i=n@@ ;i<@@ (@@ n+@@ m@@ );i++) array1@@ [i]=@@ array2@@ [i-@@ n]; } void@@ xian@@ (int@@ array[@@ ],intn,int@@ m) { inti; for(i=0;i<(@@ n+@@ m-1)@@ ;i++) printf("%d",@@ array@@ [i]); printf("%d",@@ array[@@ n+@@ m-1@@ ]); } voidmain() { void@@ duqu@@ (intn,@@ intm,@@ inta[@@ ],intb[@@ ]); voidsort@@ (int*@@ p1,@@ intn,@@ int*@@ p2@@ ,int@@ m); voidhebing@@ (int@@ array1@@ [],int@@ array2@@ [@@ ],intn,int@@ m); void@@ xian@@ (int@@ array[@@ ],intn,int@@ m); intn,m,@@ a[@@ 1000],b[1000]; scanf("%d%d",&n,&m); duqu@@ (n,@@ m,@@ a,b); sort@@ (a,n,@@ b,@@ m); hebing@@ (a,b,@@ n,@@ m); xian@@ (a,n,@@ m); }  
c -1
h -1
0

intmain() { introw,col,@@ i,j,@@ x,@@ sum,@@ y,@@ z; inta[100][100]; scanf("%d%d",&row,&col); for(i=0;i<row;i++) { for(j=0;j<col;j++) { scanf("%d",&a[i][j]); } } i=0; sum=0; j=0; x=0; y=1; z=0; if(col@@ >=@@ row@@ ){ while(1) { printf("%d\n",a[i][j]); i++; j--; sum++; if(i>=@@ row) { if(j@@ +row@@ +1@@ <col) { j=j@@ +row@@ +1; i=0; } elseif(@@ j@@ +row@@ +1@@ >=@@ col) { j=j@@ +row@@ -@@ x; i=1@@ +@@ x; x++; } } elseif(@@ j@@ <0@@ &&i@@ <row) { j@@ =j+1@@ +@@ y; i=0; y++; } if(sum@@ ==@@ col@@ *@@ row) break; } } elseif(@@ col@@ <row) { while(1) { printf("%d\n",a[i][j]); i++; j--; sum++; if(i>=@@ row) { j=col-1; i@@ =i@@ -col@@ +1@@ +@@ x; x++; } elseif(@@ i@@ <row@@ &&j@@ <0) { if(j@@ +1@@ +@@ y@@ <col) { j@@ =j+1@@ +@@ y; i=0; y++; } elseif(@@ j@@ +1@@ +@@ y@@ >=@@ col) { j=col-1; i=@@ z@@ +1; z@@ ++; } } if(sum@@ ==@@ col@@ *@@ row) break; } } return0; }  
c -1
h -1
intk,m,n,@@ sum; intnum[@@ 101][101]; intmain() { inti,j,@@ l; cin>>k; for(i=0;i<@@ k;@@ ++@@ i) { memset(@@ num,@@ 0,sizeof(@@ num@@ )); sum=0; cin>>m>>n; for(j=0;j<@@ m;@@ ++@@ j) { for(l=0;l<n;@@ ++@@ l) { cin>>@@ num[j]@@ [l]; } } for(j=0;j<@@ n;++@@ j)@@ sum+=@@ num@@ [0]@@ [j]+@@ num[m@@ -1][j]; for(j=1;j<@@ m-1@@ ;++@@ j)@@ sum+=@@ num[j]@@ [0]+@@ num[j]@@ [n-1]; cout<<sum<<endl; } return0; }  
c -1
h -1
0

structbook{ intnum; charauthor@@ [27]; }; intmain() { intn,m,@@ i,j; int@@ author_num@@ [26]={0}; scanf("%d",&n); structbook@@ shu@@ [999]; for(i=0;i<n;i++){ scanf("%d%s",&@@ shu[i].@@ num,@@ shu[i].@@ author); } for(i=0;i<n;i++){ for(j=0;j<26@@ ;j++){ m=@@ shu[i].author@@ [j]@@ -'A'; author_num@@ [m@@ ]++; } } intmax=@@ author_num@@ [0],@@ author@@ ='A'; for(i=1;i<@@ 26@@ ;i++){ if(@@ author_num@@ [i]@@ >max){ max=@@ author_num@@ [i]; author@@ =i@@ +'A'@@ ; } } printf("%c\n%d\n",@@ author@@ ,max); for(i=0;i<n;i++){ for(j=0;j<26@@ ;j++){ if(@@ shu[i].author@@ [j]==@@ author@@ ){ printf("%d\n",@@ shu[i].@@ num); } } } return0; }  
c -1
h -1
voidmain() { inti,j,n,@@ c[@@ 1000][1000],@@ count=0,@@ mark@@ ; scanf("%d",&n); for(i=0;i<n;i++) { for(j=0;j<n;j++) scanf("%d",&@@ c@@ [i][j]); } for(i=0;i<n;i++) { mark@@ =0; for(j=0;j<n;j++) { if(c@@ [i][j]==0&&@@ c[i]@@ [j+1@@ ]==0) break; else { if(c@@ [i][j]==0) mark@@ ++; } if(c@@ [i][j]@@ &&@@ mark@@ %@@ 2) count++; } } printf("%d\n",@@ count); }  
c -1
h -1
0

intmain() { chars[256],@@ sub[256],@@ re@@ [256]; gets(s); gets(sub); gets(@@ re); inti,@@ length@@ ,@@ lensub@@ ,j,@@ k,@@ ans=0; length@@ =strlen(s); lensub@@ =strlen(@@ sub); for(i=0;i<@@ length@@ ;i++) if(s[i]==@@ sub@@ [0]) { for(j=0;j<@@ lensub@@ ;j++) if(s@@ [i+j]!=@@ sub@@ [j]@@ )break; if(j==@@ lensub@@ ) { ans@@ =1; for(k=0;k<i;k++) printf("%c",s@@ [k]); printf("%s",@@ re); for(k=i+@@ lensub@@ ;k<@@ length@@ ;k++) printf("%c",s@@ [k]); break; } } if(@@ ans@@ !=1@@ )@@ printf("%s",s); return0; }  
c -1
h -1
int@@ isrunnian@@ (intyear@@ ) { if(year%@@ 400==0) return1; elseif(@@ year%@@ 4==0&&@@ year%@@ 100!=0) return1; else return0; } intmain() { inty,m,@@ d; scanf("%d%d%d",&y,&m,&d); if(m==1) printf("%d\n",@@ d); elseif(m==@@ 2) printf("%d\n",@@ 31+@@ d); elseif(m==@@ 3) { if(@@ isrunnian@@ (y@@ )) printf("%d\n",@@ 31+29@@ +@@ d); else printf("%d\n",@@ 31+28@@ +@@ d); } elseif(m==@@ 4) { if(@@ isrunnian@@ (y@@ )) printf("%d\n",@@ 31+29@@ +31+@@ d); else printf("%d\n",@@ 31+28@@ +31+@@ d); } elseif(m==@@ 5) { if(@@ isrunnian@@ (y@@ )) printf("%d\n",@@ 31+29@@ +31+30@@ +@@ d); else printf("%d\n",@@ 31+28@@ +31+30@@ +@@ d); } elseif(m==@@ 6) { if(@@ isrunnian@@ (y@@ )) printf("%d\n",@@ 31+29@@ +31+30+31+@@ d); else printf("%d\n",@@ 31+28@@ +30@@ +31+@@ 31+@@ d); } elseif(m==@@ 7) { if(@@ isrunnian@@ (y@@ )) printf("%d\n",@@ 31+29@@ +31+30+31+30@@ +@@ d); else printf("%d\n",@@ 31+28@@ +31+30+31+30@@ +@@ d); } elseif(m==@@ 8) { if(@@ isrunnian@@ (y@@ )) printf("%d\n",@@ 31+29@@ +31+30+31+30+31+@@ d); else printf("%d\n",@@ 31+28@@ +31+30+31+30+31+@@ d); } elseif(m==@@ 9) { if(@@ isrunnian@@ (y@@ )) printf("%d\n",@@ 31+29@@ +31+30+31+30+31+31+@@ d); else printf("%d\n",@@ 31+28@@ +31+30+31+30+31+31+@@ d); } elseif(m==@@ 10) { if(@@ isrunnian@@ (y@@ )) printf("%d\n",@@ 31+29@@ +31+30+31+30+31+31+30@@ +@@ d); else printf("%d\n",@@ 31+28@@ +31+30+31+30+31+31+30@@ +@@ d); } elseif(m==@@ 11) { if(@@ isrunnian@@ (y@@ )) printf("%d\n",@@ 31+29@@ +31+30+31+30+31+31+30+31+@@ d); else printf("%d\n",@@ 31+28@@ +31+30+31+30+31+31+30+31+@@ d); } elseif(m==@@ 12) { if(@@ isrunnian@@ (y@@ )) printf("%d\n",@@ 31+29@@ +31+30+31+30+31+31+30+31+30@@ +@@ d); else printf("%d\n",@@ 31+28@@ +31+30+31+30+31+31+30+31+30@@ +@@ d); } return0; }  
c -1
h -1
0

structstu@@ { intid; charauthor[26]; int@@ length@@ ; }a[@@ 1000]; intmain(){ intn,i,k,@@ num=0,@@ max=0; char@@ b,@@ c; scanf("%d",&n); for(i=0;i<n;i++){ scanf("%d%s",&@@ a[i].@@ id,@@ a[i].@@ author); a[i].@@ length@@ =strlen(@@ a[i].@@ author); } for(b@@ ='A'@@ ;@@ b@@ <=@@ 'Z'@@ ;@@ b++){ num=0; for(i=0;i<n;i++){ for(k=0;k<@@ a[i].@@ length@@ ;k++){ if(a[i].@@ author@@ [k]==@@ b){ num++; break; } } } if(num@@ >max){ max=@@ num; c=@@ b; } } printf("%c\n%d\n",@@ c,@@ max); for(i=0;i<n;i++){ for(k=0;k<@@ a[i].@@ length@@ ;k++){ if(a[i].@@ author@@ [k]==@@ c){ printf("%d\n",@@ a[i].@@ id); break; } } } return0; }  
c -1
h -1
int@@ scan@@ () { intm; scanf("%d",&m); return@@ m; } int@@ fuzhi@@ (inta[],intn) { inti,@@ k; for(i=0;i<n;i++) { scanf("%d",&k); a[i]=@@ k; } return0; } int@@ paixu@@ (int@@ b[],int@@ n) { inti,j,temp; for(i=1;i<n;i++) { for(j=0;j<n-i;j++) { if(b[j]>b[j+1]) { temp=@@ b[j]; b[j]=b[j+1]; b[j+1]=@@ temp; } } } return0; } int@@ print@@ (intc[],int@@ d@@ [],int@@ m3@@ ,int@@ m4@@ ) { inti=0; for(i=0;i<@@ m3@@ ;i++) { printf("%d",c[i]); } for(i=0;i<@@ m4@@ ;i++) { printf("%d",@@ d[i]); if(i!=@@ m4@@ -1) { printf(""); } } return0; } intmain() { int@@ m1@@ ; int@@ m2@@ ; intx@@ [100]; int@@ y@@ [100]; m1=@@ scan@@ (); m2=@@ scan@@ (); fuzhi@@ (x,@@ m1@@ ); fuzhi@@ (@@ y,@@ m2@@ ); paixu@@ (x,@@ m1@@ ); paixu(@@ y,@@ m2@@ ); print(@@ x,y,@@ m1,@@ m2@@ ); return0; }  
c -1
h -1
0

intmain() { chara[500],b[500]; int@@ len,@@ lmn@@ ,@@ sum=0,@@ i,@@ flag=1; doublen; scanf("%lf",&n); scanf("%s%s",a,b); len@@ =strlen(a); lmn@@ =strlen(b); if(@@ len@@ !=@@ lmn@@ ) { printf("error"); } else for(i=0;i<len;i++) { if((a[i]!='@@ A'&&a[i]!='T'&&a[i]!='C'&&a[i]!='G')||(b[i]!='A'&&b[i]!='T'&&b[i]!='C'&&b[i]!='@@ G')) {@@ flag=0; printf("error"); break; } } if(@@ len@@ ==@@ lmn@@ &&@@ flag@@ ==1) { for(i=0;i<len;i++) { if(a[i]==b[i]) sum+=@@ 1; } if((@@ double)@@ sum/@@ len@@ >n) printf("yes"); else printf("no"); } return0; }  
c -1
h -1
intmain() { intyear,month,day,@@ n,@@ i,@@ t=0; scanf("%d%d%d",&year,&month,&day); inta[@@ 13]={0,31,28,31,30,31,30,31,31,30,31,30,31}; for(i=0;i<@@ month;i++) { t=t+@@ a[i]; } if(month@@ >=@@ 3) if(year%@@ 4==0) if(year%@@ 100==0) if(year%@@ 400==0) n=@@ t@@ +1@@ +day; else n=@@ t@@ +day; else n=@@ t@@ +1@@ +day; else n=@@ t@@ +day; else n=@@ t@@ +day; printf("%d",n); return0; }  
c -1
h -1
0

intmain() { inta[@@ 101][@@ 101],@@ row,col,@@ i,j,k,@@ sum; cin>>row>>col; sum=@@ row@@ +@@ col; for(i=1;i<=@@ row;i++) for(j=1;j<=col;j++) cin>>a[i][j]; for(k=@@ 2@@ ;k<=@@ sum@@ ;k++) { if(k@@ <=col@@ +1) { i=1; j=@@ k@@ -1; do { cout<<a[i]@@ [j]@@ <<endl@@ ;@@ ; i@@ +=1; j@@ -=@@ 1; } while(i@@ <=row@@ &&j@@ >=1@@ ); } else { i=@@ k-@@ col; j=@@ k-@@ i; do { cout<<a[i][j]<<endl; i@@ +=1; j@@ -=@@ 1; } while(i@@ <=row@@ &&j@@ >=1@@ ); } } return0; }  
c -1
h -1
intmain() { intn,@@ i,j@@ ,*@@ b,@@ max,@@ maxn@@ =0@@ ,*@@ a; scanf("%d",&n); a=@@ (int*)malloc(sizeof(int)*n); b=@@ (int*)malloc(sizeof(int)*n); for(i=0;i<n;i++) { scanf("%d",a@@ +i); b[i]=0; } for(i=n-1;i@@ >-@@ 1@@ ;i--) { max=0; for(j=n-1;j>i;j--) if(a[j]<=@@ a[i]&&@@ b[j]@@ >=@@ max) max=@@ b[j]; b[i]=@@ max+1; if(b[i]>@@ maxn@@ ) maxn=@@ b[i]; } printf("%d\n",@@ maxn@@ ); }  
c -1
h -1
0

intmain(){ double@@ x; intm,n,@@ i; int@@ p=0; ints=0; intc[@@ 1000]; scanf("%lf",&x); chara[500],b[500]; scanf("%s",a); scanf("%s",b); m=strlen(a); n@@ =strlen(b); if(m!=@@ n){ printf("error"); return0; } for(i=0;i<m@@ -1;i++){ if((a[i]!='@@ A')&&(@@ a[i]!='@@ T')&&(@@ a[i]!='@@ G')&&(@@ a[i]!='@@ C')){ printf("error"); s=1; break; return0; } } for(i=0;i<n-1;i++){ if((@@ b[i]!='@@ A')&&(@@ b[i]!='@@ T')&&(@@ b[i]!='@@ G')&&(@@ b[i]!='@@ C')){ printf("error"); s=1; break; return0; } } if(s@@ ==0){ for(i=0;i<n;i++){ c[i]=@@ a[i]@@ /@@ b[i]; } for(i=0;i<m;i++){ if(c@@ [i]<@@ x){ p++; } } if(p@@ ==0){ printf("yes"); }else{ printf("no"); } } return0; }  
c -1
h -1
intmain() { intN@@ ,@@ i,j,k; cin>>@@ N; struct@@ Student_Num { intnum; int@@ Chinese@@ ; int@@ Math@@ ; }; struct@@ Student_Num@@ student@@ [N]; struct@@ Student_Num@@ temp; for(i=0;i<N;i++) { cin>>@@ student[i].@@ num@@ >>@@ student[i].@@ Chinese@@ >>@@ student[i].@@ Math@@ ; } int@@ total@@ [N@@ ],@@ totalNum@@ [3@@ ],@@ p@@ [3]; for(i=0;i<N;i++) { total@@ [i]=@@ student[i].@@ Chinese@@ +@@ student[i].@@ Math@@ ; } for(i=0;i<3;i++) { totalNum@@ [i]=0; } for(i=0;i<3;i++) { for(j=0;j<@@ N@@ ;j++) { if(@@ totalNum@@ [i]<@@ total@@ [j]) { totalNum@@ [i]=@@ total@@ [j]; p[i]=@@ j; } } total@@ [p@@ [i]@@ ]=0; } for(i=0;i<3;i++) { cout<<@@ student@@ [p@@ [i]@@ ].num@@ <<''<<@@ totalNum@@ [i]<<endl; } return0; }  
c -1
h -1
0

intmain() { int@@ col,@@ row,@@ array@@ [100][100],@@ a,b,c,d,@@ e; scanf("%d%d",&row,&col); for(a=0;a@@ <row@@ ;a@@ ++) { for(b=0;b@@ <col@@ ;@@ b++) { scanf("%d",&array@@ [a@@ ][b@@ ]); } } for(c=0;c@@ <col@@ ;c@@ ++) { e=@@ c; for(d@@ =0;c@@ >=0&&@@ d@@ <row@@ ;@@ d@@ ++,@@ c@@ --) { printf("%d\n",@@ array[@@ d@@ ][c@@ ]); } c=@@ e; } for(d@@ =1;@@ d@@ <row@@ ;@@ d++) { e=@@ d; for(@@ c=@@ col@@ -1;@@ d@@ <row@@ &&@@ c@@ >=0@@ ;c@@ --@@ ,@@ d++) { printf("%d\n",@@ array[@@ d@@ ][c@@ ]); } d=@@ e; } return0; }  
c -1
h -1
intmain() { int@@ zong@@ ; intsz@@ [100][100],@@ m,n,@@ k,i,j,@@ sum1@@ =0,@@ sum2@@ =0,@@ sum3@@ =0,@@ sum4@@ =0,@@ sum=0; scanf("%d",&@@ zong@@ ); for(k=0;k<@@ zong@@ ;k++) { intsum=0; sum1@@ =0; sum2@@ =0; sum3@@ =0; sum4@@ =0; scanf("%d%d",&n,&m); for(i=0;i<m;i++) { scanf("%d",&sz@@ [0]@@ [i]); sum1@@ +=@@ sz[0]@@ [i]; } for(i=1;i<n-1;i++) { for(j=0;j<m;j++) { scanf("%d",&sz[i][j]); } } for(i=0;i<m;i++) { scanf("%d",&@@ sz[@@ n-1@@ ][i]); sum2@@ +=@@ sz[@@ n-1@@ ]@@ [i]; } for(i=1;i<n-1;i++) { sum3@@ +=@@ sz[i]@@ [0]; } for(i=1;i<n-1;i++) { sum4@@ +=@@ sz[i]@@ [@@ m-1@@ ]; } sum=@@ sum1@@ +@@ sum2@@ +@@ sum3@@ +@@ sum4@@ ; printf("%d\n",sum); sum=0; } return0; }  
c -1
h -1
0

intmain() { intn,a[@@ 1000],@@ c[@@ 26]={0},@@ max1@@ =0,@@ temp; char@@ m[@@ 1000][@@ 26],@@ max2; cin>>n; for(inti=1;i<=n;i++) { cin>>@@ a[i@@ -1]; getchar(); cin.getline@@ (m@@ [i-1@@ ],@@ 26@@ ); } for(inti=0;i<n;i++) for(intj=0;j<@@ 26@@ ;j++) { c[m@@ [i][j]@@ -'A']++; } for(int@@ s=0;s@@ <26@@ ;s++) { if(@@ max1@@ <=@@ c[@@ s@@ ]) { max1=@@ c[@@ s@@ ]; temp=@@ s@@ +'A'@@ ; max2=@@ temp; } } cout<<@@ max2@@ <<endl; cout<<@@ max1@@ <<endl; for(inti=0;i<n;i++) for(intj=0;j<@@ 26@@ ;j++) if(m@@ [i][j]==@@ max2@@ ) { cout<<a[i]@@ <<endl; break; } return0; }  
c -1
h -1
intmain() { long@@ intn,a[@@ 100000@@ ][2@@ ]; inti,j,@@ t,@@ s; structStudent {intnum; int@@ yu@@ ; int@@ shu; }; scanf("%d",&n); for(i=0;i<n;i++) { structStudent@@ studenti@@ ; scanf("%d%d%d",&@@ studenti@@ .@@ num,&@@ studenti@@ .@@ yu@@ ,&@@ studenti@@ .@@ shu); a[i][@@ 0]=@@ studenti@@ .@@ num; a[i]@@ [1]=@@ studenti@@ .@@ yu@@ +@@ studenti@@ .@@ shu; } for(i=0;i<3;i++) {@@ for(j=0;j<n-1-i;j++) {@@ if(a[j]@@ [1]@@ >=@@ a[j+1@@ ][1@@ ]) {t=@@ a[j]@@ [1]@@ ;@@ a[j]@@ [1]=@@ a[j+1@@ ][1@@ ];@@ a[j+1@@ ][1@@ ]=t; s=@@ a[j]@@ [0]@@ ;@@ a[j]@@ [0]=@@ a[j+1@@ ][0]@@ ;@@ a[j+1@@ ][@@ 0]=@@ s; } } } for(i=1;i<=@@ 3;i++) printf("%d%d\n",@@ a[n@@ -i@@ ][@@ 0],@@ a[n@@ -i@@ ][1@@ ]); return0; }  
c -1
h -1
0

int@@ sum[@@ 50]; inti; intmain() { void@@ digui@@ (intx,int@@ y); intn; int@@ j@@ [50@@ ],@@ m[@@ 50]; scanf("%d",&n); for(i=0;i<n;i++) { scanf("%d",&@@ m[i]); sum@@ [i]=0; for(j@@ [i]=@@ 2@@ ;j@@ [i]@@ *@@ j@@ [i]<=@@ m[i]@@ ;j@@ [i]@@ ++) { if(m@@ [i]@@ %j@@ [i]==0) { sum[i]@@ ++; digui@@ (j@@ [i],@@ m[i]@@ /j@@ [i]); } } printf("%d\n",@@ sum[i]@@ +1); } return0; } void@@ digui@@ (intx,inty) { ints; for(@@ s=@@ x@@ ;s@@ *@@ s@@ <=@@ y@@ ;s++) { if(y@@ %s@@ ==0) { sum[i]@@ ++; digui@@ (@@ s,@@ y@@ /@@ s); } } }  
c -1
h -1
intmain(){ chars[@@ 257@@ ],@@ a[@@ 257@@ ],b[@@ 257@@ ]; intn,m; inti,j,@@ k=0; gets(s); scanf("%s%s",a,b); n@@ =strlen(s); m=strlen(a); for(i=0;i<n;i++) { if(s[i]==@@ a[0]@@ &&@@ s@@ [i+@@ m-1@@ ]==@@ a[m-1]@@ ){ for(j=i;j<i+@@ m;j++) { if(s@@ [j]==@@ a@@ [j-i@@ ]) { k++; } } if(k==@@ m) { printf("%s",@@ b); i@@ +=@@ m-1@@ ; }else { printf("%c",s[i]); } }else { printf("%c",s[i]); } } printf("\n"); return0; }  
c -1
h -1
0

intnum@@ =1,@@ flag@@ =@@ 2; void@@ way@@ (int@@ ); intmain() { inta,@@ n; cin>>n; while(n--) { cin>>a; way@@ (a); cout<<num<<endl; num@@ =1; flag@@ =@@ 2; } return0; } void@@ way@@ (int@@ a) { inti,@@ max; max=@@ sqrt(@@ a); for(i=@@ flag@@ ;i<=@@ max@@ ;i++) { if(a%i==0) { flag@@ =i; num++; way@@ (a@@ /i); } } }  
c -1
h -1
main() { inti,j,@@ dmax@@ ,@@ n,@@ array[@@ 32@@ ],@@ d[@@ 32@@ ]={@@ 1,1,1,1,1,1,1,1,@@ 1,1,1,1,1,1,1,1,@@ 1,1,1,1,1,1,1,1,@@ 1,1,1,1,@@ 1,1,@@ 1,@@ 1@@ }; scanf("%d",&n); for(i=0;i<n;i++) { scanf("%d",&array@@ [i]); } d[@@ n-1@@ ]=1; for(i=n-2;i>=0;i--) { for(j=i+1;j<n;j++) { if((@@ array@@ [j]<=@@ array@@ [i]@@ )&&(@@ d@@ [i]<@@ d@@ [j]@@ +1@@ )) { d[i]=@@ d@@ [j]+1; } } } dmax@@ =0; for(i=0;i<n;i++) { if(d@@ [i]>@@ dmax@@ ) { dmax@@ =@@ d[i]; } } printf("%d",@@ dmax@@ ); return0; }  
c -1
h -1
0

intmax@@ (inta,intb) { return@@ a@@ >b@@ ?@@ a@@ :@@ b; } int@@ min@@ (inta,intb) { return@@ a@@ <b@@ ?@@ a@@ :@@ b; } main() {@@ inti,j,@@ t,@@ col,@@ row,@@ a[100][100]; scanf("%d%d",&row,&col); for(i=0;i<row;i++) for(j=0;j<col;j++) scanf("%d",&a[i][j]); for(t=0;t@@ <=col@@ -1;@@ t++) { j=@@ t; for(i=0;i<=@@ min@@ (@@ t,@@ row-1)@@ ;i++) { printf("%d\n",a[i][j]); j--; } } for(t@@ =1;t@@ <=row@@ -1;@@ t++) { i=@@ t; for(j=col-1@@ ;j@@ >=@@ max(@@ col@@ -@@ row@@ +@@ t,@@ 0)@@ ;j--) { printf("%d\n",a[i][j]); i++; } } }  
c -1
h -1
intmain() { inta[100][100]; inti,j,k,@@ m,n; cin>>k; for(intp@@ =0;p@@ <k@@ ;p++) { intsum=0,@@ sum1@@ =0,@@ sum2@@ =0,@@ sum3@@ =0,@@ sum4@@ =0; cin>>m>>n; for(i=0;i<m;i++) { for(j=0;j<n;j++) { cin>>a[i][j]; } } if(n@@ ==1&&@@ m@@ !=1) { for(i=0;i<m;i++) { sum=sum+@@ a[i][0]; } cout<<sum<<endl; } elseif(m@@ ==1&&n@@ !=1) { for(i=0;i<n;i++) { sum=sum+@@ a[0][i]; } cout<<sum<<endl; } elseif(m@@ ==1&&n@@ ==1) { cout<<@@ a[0][0]@@ <<endl; } else { for(i=0;i<n;i++) { sum1@@ =@@ sum1@@ +@@ a[0][i]; sum2@@ =@@ sum2@@ +@@ a[m-1]@@ [i]; } for(i=0;i<m;i++) { sum3@@ =@@ sum3@@ +@@ a[i][0]; sum4@@ =@@ sum4@@ +@@ a[i][n-1]; } sum=@@ sum1@@ +@@ sum2@@ +@@ sum3@@ +@@ sum4@@ -(@@ a[0][0]@@ +@@ a[0][@@ n-1@@ ]+@@ a[@@ m-1@@ ][0]+@@ a[m-1][@@ n-1]); cout<<sum<<endl; } } return0; }  
c -1
h -1
0

main() { charc; intsz[100][100]; introw,col,@@ ROW@@ ,@@ COL@@ ; scanf("%d%d",&@@ ROW@@ ,&@@ COL@@ ); for(row=0;row@@ <ROW@@ ;@@ row++){ for(col=0;col@@ <@@ COL@@ ;col@@ ++){ scanf("%d",&@@ sz[row][col@@ ]); }} printf("%d\n",@@ sz[0][@@ 0]@@ ); inti=0,@@ j,@@ k; for(j=1;j<@@ COL@@ ;j++){ for(k=j@@ ;k>=0@@ ;k@@ --){ if(j@@ -k@@ <ROW@@ ){ printf("%d\n",sz@@ [j@@ -k@@ ][k@@ ]@@ );}} } for(j=@@ COL@@ ;j<=@@ COL@@ +@@ ROW@@ ;j++){ for(k=@@ COL@@ -1@@ ;k>=0@@ ;k@@ --){ if(j@@ -k@@ <ROW@@ ){ printf("%d\n",sz@@ [j@@ -k@@ ][k@@ ]@@ );}} } scanf("%s",c); return0; }  
c -1
h -1
intmain() { intk=0,@@ count=0; int@@ count1@@ =0,@@ count2@@ =0; intmax=0; intnum[@@ 25@@ ][2@@ ]; scanf("%d",&k); for(@@ count@@ =0;@@ count@@ <k;@@ ++@@ count@@ ) { scanf("%d",&@@ num[@@ count@@ ][0]@@ ); num[@@ count@@ ][1@@ ]=0; } for(@@ count1@@ =0;@@ count1@@ <k;@@ ++@@ count1@@ ) { max=0; for(@@ count2@@ =0;@@ count2@@ <@@ count1@@ ;++@@ count2@@ ) { if(@@ num[@@ count2@@ ][1@@ ]>=@@ max@@ &&@@ num[@@ count2@@ ][0]@@ >=@@ num[@@ count1@@ ][0]@@ ) { max=@@ num[@@ count2@@ ][1@@ ]; num[@@ count1@@ ][1@@ ]=@@ max+1; } } } max=0; for(@@ count@@ =0;@@ count@@ <k;@@ ++@@ count@@ ) { if(@@ num[@@ count@@ ][1@@ ]>=@@ max) { max=@@ num[@@ count@@ ][1@@ ]; } } printf("%d",@@ max@@ +1); }  
c -1
h -1
0

intmain() { inty,m,d,@@ i; scanf("%d%d%d",&y,&m,&d); int@@ n[@@ 12]={31,28,31,30,31,30,31,31,30,31,30,31}; if(y%@@ 100==0&&@@ y%400==0) n@@ [1]=@@ 29; if(y%@@ 100!=0@@ &&@@ y@@ &@@ 4==0) n@@ [1]=@@ 29; intsum=0; for(i=0;i<m-1;i++) sum=sum+@@ n[i]; printf("%d\n",sum@@ +@@ d); getchar(); getchar(); }  
c -1
h -1
intmain() { intyear,month,day; scanf("%d%d%d",&year,&month,&day); intsum=0,@@ i; for(i=1;i<month;i++) { if(i==1||i==3||i==5||i==7||i==8||i==10@@ ||i==@@ 12) sum+=@@ 31; elseif(i==@@ 4||i==6||i==9||i==11) sum+=@@ 30; elseif(i==@@ 2) { if(year%@@ 400==0||(@@ year%4==0&&year%100!=0@@ )) sum+=@@ 29; else sum+=@@ 28; } } sum+=@@ day; printf("%d\n",sum); return0; }  
c -1
h -1
1


voidmain() { intn,k,@@ m=0; inta[1000]; inti,j; scanf("%d%d",&n,&k); for(i=0;i<n;i++) scanf("%d",&a[i]); for(i=0;i<n;i++) for(j=1;j<@@ n@@ -i;j++) if(a[i]+@@ a[i+j@@ ]==@@ k) m++; if(m@@ ) printf("yes"); else printf("no"); }  
c -1
h -1
intmain() { inti,n,@@ f@@ =0,@@ m=0,@@ j; struct { charid[10]; intage; }@@ bingren@@ [100],@@ t@@ [100],@@ l@@ [100],@@ c; scanf("%d",&n); for(i=0;i<n;i++) { scanf("%s%d",&@@ bingren@@ [i].id,&@@ bingren@@ [i].age); } for(i=0;i<n;i++) { if(@@ bingren@@ [i].age>=60) t[@@ f@@ ++]=@@ bingren@@ [i]; elseif(@@ bingren@@ [i].age<60) l@@ [m@@ ++]=@@ bingren@@ [i]; } for(i=1;i<@@ f@@ ;i++) { for(j=i@@ ;j>0;j--) { if(t@@ [j].age@@ >@@ t@@ [j-1@@ ].age) { c=@@ t@@ [j]; t@@ [j]=@@ t@@ [j-1]; t@@ [j-1]=@@ c; } } } for(i=0;i<@@ f@@ ;i++) { printf("%s\n",@@ t@@ [i].id); } for(i=0;i<m;i++) { printf("%s\n",@@ l@@ [i].id); } return0; }  
c -1
h -1
0

voidmain() { intn,k; ints=0; inti,j; inta[1000]; scanf("%d%d",&n,&k); for(i=0;i<n;i++) { scanf("%d",&a[i]); } for(i=0;i<n;i++) { j=0; while(j@@ <n) { if(i==@@ j) { j++; continue; } else { s=@@ a[i]+a[j]; j++; if(k==@@ s) { printf("yes"); goto@@ label@@ ; } }; }; if((@@ i==@@ n-1@@ )&&(@@ s@@ !=@@ k@@ )) printf("no"); } label@@ : return(0); }  
c -1
h -1
intmain() { inti,n,@@ m,@@ a[100],b[100],@@ t@@ ,j; scanf("%d%d",&@@ n,@@ &@@ m); for(i=1;i<=n@@ ;i++){@@ scanf("%d",&a[i]);} for(i=1;i<=@@ m@@ ;i++){@@ scanf("%d",&@@ b[i]@@ );} for(i=1;i<=n;i++){ for(j=2;j<=@@ n;j++){ if(a[j]@@ <a@@ [j-1]@@ ){ t=a[j]; a[j]=@@ a@@ [j-1]; a@@ [j-1]=@@ t; } } } for(i=1;i<=@@ m;i++){ for(j=2;j<=@@ m@@ ;j++){ if(b[j]@@ <b@@ [j-1]@@ ){ t=@@ b[j]; b[j]=b@@ [j-1]; b@@ [j-1]=@@ t; } } } for(i=1;i<=n@@ ;i++){@@ printf("%d",@@ a[i]);} for(i=1;i<=@@ m@@ ;i++){@@ printf("%d",b[i]); if(i<@@ m@@ ){@@ printf("@@ ");@@ }} return0; }  
c -1
h -1
0

intmain() { inti,k,@@ e1@@ ,@@ e2@@ ,@@ t; t=1; k=0; double@@ bl1@@ ,@@ bl2@@ ; char@@ jy1@@ [501],@@ jy2@@ [501]; scanf("%lf",&@@ bl1@@ ); scanf("%s@@ %s",&@@ jy1@@ ,&@@ jy2@@ ); e1@@ =strlen(@@ jy1@@ ); e2@@ =strlen(@@ jy2@@ ); if(@@ e1@@ !=@@ e2@@ ) { t=0; }else { for(i=0;i<@@ e1@@ ;i++) { if((@@ jy1@@ [i]!='A'&&@@ jy1@@ [i]!='T'&&@@ jy1@@ [i]!='C'&&@@ jy1@@ [i]!='G')||(@@ jy2@@ [i]!='A'&&@@ jy2@@ [i]!='T'&&@@ jy2@@ [i]!='C'&&@@ jy2@@ [i]!='G')@@ ) { t=0; break; }else { if(@@ jy1@@ [i]==@@ jy2@@ [i]) { k=k+1; } } } } bl2@@ =1.0*@@ k/@@ e1@@ ; if(t==0) { printf("error"); }else { if(@@ bl2@@ >@@ bl1@@ ) { printf("yes"); }else { printf("no"); } } return0; }  
c -1
h -1
intmain() { intn,i,j,k,@@ h,@@ b; scanf("%d",&n); struct@@ sb { intID; intm; intc; intsum; }a[@@ n]; for(i=0;i<n;i++) { scanf("%d%d%d",&a[i].@@ ID,&@@ a[i].@@ m,&@@ a[i].@@ c); a[i].@@ sum=@@ a[i].@@ m+@@ a[i].@@ c; } for(i=0,@@ b@@ =0;i<n;i++) { if(a[i].@@ sum>@@ b) { b=@@ a[i].@@ sum; h@@ =i; } } printf("%d%d\n",@@ a[h@@ ].ID,@@ a[h@@ ].sum); a[h@@ ].@@ sum@@ =-1; for(i=0,@@ b@@ =0;i<n;i++) { if(a[i].@@ sum>@@ b) { b=@@ a[i].@@ sum; h@@ =i; } } printf("%d%d\n",@@ a[h@@ ].ID,@@ a[h@@ ].sum); a[h@@ ].@@ sum@@ =-1; for(i=0,@@ b@@ =0;i<n;i++) { if(a[i].@@ sum>@@ b) { b=@@ a[i].@@ sum; h@@ =i; } } printf("%d%d\n",@@ a[h@@ ].ID,@@ a[h@@ ].sum); getchar(); getchar(); }  
c -1
h -1
0

intmain(){ double@@ k,@@ m,n,@@ s=0; inti; chara[501],b[501]; scanf("%lf",&@@ k); scanf("%s",a); scanf("%s",b); m=strlen(a); n@@ =strlen(b); if(m!=@@ n){ printf("error"); }else{ for(i=0;i<m;i++){ if(((@@ a[i]=='@@ A')||(@@ a[i]=='@@ G')||(@@ a[i]=='@@ C')||(@@ a[i]=='@@ T')@@ )&&(@@ (@@ b[i]=='@@ A')||(@@ b[i]=='@@ G')||(@@ b[i]=='@@ C')||(@@ b[i]=='@@ T')@@ )){ if(a[i]==b[i]){ s++; }else{ s=@@ s; } }else{ s@@ =-1; break; } } s=s@@ /@@ m; if(s@@ <0@@ ){ printf("error"); }elseif(@@ s@@ >=0&&@@ s@@ <=@@ k){ printf("no"); }else{ printf("yes"); } } return0; }  
c -1
h -1
intmain() { intn,i,j,a[@@ 1001@@ ][@@ 1001@@ ],@@ s=0; int(*p)@@ [@@ 1001@@ ],@@ x1@@ =0,@@ y1@@ =0,@@ x2@@ =0,@@ y2@@ =0; cin>>n; p=a; for(i=0;i<n;i++) { for(j=0;j<n;j++) { cin>>@@ *(*(p+i)+j); } } for(i=0;i<n;i++) { for(j=0;j<n;j++) { if(@@ *(*(p+i)@@ +j)@@ ==0) { if((@@ *(*(p+i)@@ +j+1)@@ ==0)&&(@@ *(*(p@@ +i@@ +1)@@ +j)@@ ==0)) { x1@@ =i;@@ y1=j; } if((@@ *(*(p+i)@@ +j@@ -1)@@ ==0)&&(@@ *(*(p@@ +i@@ -1)@@ +j)@@ ==0)) { x2@@ =i;@@ y2=j; } } } } s=(@@ x2-x1-1)*(y2-y1-1); cout<<s<<endl; return0; }  
c -1
h -1
0

voidmain() { struct@@ person { charid[10]; intage; }@@ m@@ [100@@ ],b[100]; intn,@@ t,@@ i,j; char@@ temp@@ [10]; scanf("%d",&n); for(i=0;i<n;i++) { scanf("%s",@@ m@@ [i].id); strcpy(@@ b[i].@@ id,@@ m@@ [i].id); scanf("%d",&@@ m@@ [i].age); b@@ [i].age@@ =@@ m@@ [i].age; } for(i=0;i<n-1;i++) for(j=0;j<n-1-i;j++) { if(m@@ [j].age@@ <m@@ [j+1@@ ].age) { t=@@ m@@ [j].@@ age; m@@ [j].age@@ =@@ m@@ [j+1].@@ age; m@@ [j+1@@ ].age=@@ t; strcpy(@@ temp,@@ m@@ [j].@@ id); strcpy(@@ m@@ [j].@@ id,@@ m@@ [j+1].@@ id); strcpy(@@ m@@ [j+1].@@ id,@@ temp); } } for(i=0;i<n;i++) if(m@@ [i].age@@ >=60@@ )@@ printf("%s\n",@@ m@@ [i].id); for(i=0;i<n;i++) if(b@@ [i].age@@ <60@@ )@@ printf("%s\n",@@ b[i].@@ id); }  
c -1
h -1
intmain() { intN@@ ,@@ A@@ ,@@ B@@ ,@@ a; scanf("%d%d%d",&@@ N@@ ,&@@ A@@ ,&@@ B@@ ); if(N@@ %100!=0@@ &&@@ N@@ %@@ 4@@ ==0||@@ N@@ %@@ 400==0) { for(a@@ =0,@@ A@@ =@@ A@@ -1;@@ A@@ !=0@@ ;@@ A@@ --) { switch(@@ A@@ ) { case1: case3: case5: case7: case8: case10: case12:@@ a@@ +=@@ 31; break; case2:@@ a@@ +=@@ 29; break; case4: case6: case9: case11:@@ a@@ +=@@ 30; break; } } } else { for(a@@ =0,@@ A@@ =@@ A@@ -1;@@ A@@ !=0@@ ;@@ A@@ --) { switch(@@ A@@ ) { case1: case3: case5: case7: case8: case10: case12:@@ a@@ +=@@ 31; break; case2:@@ a@@ +=@@ 28; break; case4: case6: case9: case11:@@ a@@ +=@@ 30; break; } } a@@ +=@@ B@@ ; } printf("%d",@@ a); }  
c -1
h -1
0

int@@ cal@@ ; int@@ fac@@ (inta,int@@ x){ if(x@@ ==1){@@ cal@@ ++;@@ return@@ 1@@ ;} for(inti=2;i<=@@ x;i++) if(x@@ %i==0&&@@ i>=@@ a) fac@@ (i,@@ x@@ /i@@ );} intmain(){ intn,@@ b; cin>>n; while(n@@ >0){ cal@@ =0; cin>>@@ b; fac@@ (@@ 1,@@ b); cout<<@@ cal@@ <<endl; n--; }}  
c -1
h -1
ints=0; void@@ devide@@ (int,int); intmain() { intn,m; cin>>n; while(n--) { cin>>m; s=0; devide@@ (2,@@ m); cout<<s@@ +1<<endl; } return0; } void@@ devide@@ (inta,intb) { inti; for(i=a@@ ;i<=sqrt(@@ b@@ );i++) { if(b@@ %i==0) { s++; devide@@ (i,@@ b@@ /i); } } }  
c -1
h -1
1


intmain() { double@@ m,n; intlen1,len2,@@ count=0,@@ i; chars1@@ [100],@@ s2@@ [100]; scanf("%lf",&@@ m); scanf("%s",@@ s1); scanf("%s",@@ s2); len1=strlen(@@ s1); len2=strlen(@@ s2); if(len1@@ ==@@ len2) { for(i=0;i<len1;i++) { if(s1@@ [i]!='A'&&@@ s1@@ [i]!='T'&&@@ s1@@ [i]!='C'&&@@ s1@@ [i]!='G@@ '||@@ s2@@ [i]!='A'&&@@ s2@@ [i]!='T'&&@@ s2@@ [i]!='C'&&@@ s2@@ [i]!='G') { count=@@ len1@@ +1; break; } if(s1[i]==s2@@ [i]) count++; } n@@ =1.0*@@ count@@ /@@ len1; if(count@@ >=@@ len1@@ +1) printf("error\n"); if(n@@ >@@ m@@ &&n@@ <=@@ 1) printf("yes\n"); elseif(n@@ <=@@ m) printf("no\n"); } else printf("error\n"); return0; }  
c -1
h -1
intmain(){ inti; doublea,@@ b=0,@@ l,@@ m,@@ c=0; char@@ x[@@ 1000],@@ y@@ [1000]; scanf("%lf%s%s",&@@ a,&@@ x,&@@ y); l=strlen(@@ x); m=strlen(@@ y); for(i=0;i<l;i++){ if(x@@ [i]=='A'||@@ x@@ [i]=='T'||@@ x@@ [i]=='G'||@@ x@@ [i]=='@@ C'){ c=@@ c; } else{ c++; } } for(i=0;i<m;i++){ if(y@@ [i]=='A'||@@ y@@ [i]=='T'||@@ y@@ [i]=='G'||@@ y@@ [i]=='@@ C'){ c=@@ c; } else{ c++; } } if(l@@ ==@@ m@@ &&@@ c@@ ==0){ for(i=0;i<l;i++){ if(x@@ [i]==@@ y@@ [i]){ b++; } } if(a@@ <(@@ b@@ /@@ l@@ )){ printf("yes"); } else{ printf("no"); } } else{ printf("error"); } return0; }  
c -1
h -1
1


intmain() { intn,@@ y,@@ r,@@ d,@@ i; for(i=1;i<=@@ 5;i++) { scanf("%d%d@@ %d@@ \n",&@@ n,&@@ y,&@@ r); d=0; if((@@ y@@ >2@@ )&&(@@ n@@ %@@ 400==0)@@ )@@ d=1; if((@@ y@@ >2@@ )&&(@@ n@@ %100!=0@@ )&&(@@ n@@ %@@ 4@@ ==0)@@ )@@ d=1; d=d+@@ r; y@@ --; switch(@@ y) { case11:@@ d=d+@@ 30; case10:@@ d=d+@@ 31; case9:@@ d=d+@@ 30; case8:@@ d=d+@@ 31; case7:@@ d=d+@@ 31; case6:@@ d=d+@@ 30; case5:@@ d=d+@@ 31; case4:@@ d=d+@@ 30; case3:@@ d=d+@@ 31; case2:@@ d=d+@@ 28; case1:@@ d=d+@@ 31; } printf("%d\n",@@ d); } return0; }  
c -1
h -1
main() { intn,i,j,@@ count; scanf("%d",&n); inta[@@ 100000]; for(i=0;i<n;i++) { scanf("%d",&a[i]); } for(i=0;i<n;i++) { for(j=i+1;j<n;j++) { if(a[j]==a[i]) a[j]=0; } } count=0; for(i=0;i<n;i++) { if(a[i]!=0) if(count@@ ==0) { printf("%d",a[i]); count@@ =1; } else printf("%d",a[i]); } getchar(); getchar(); }  
c -1
h -1
0

intmain(){ double@@ e,@@ s; chara[@@ N@@ ],b[@@ N]; int@@ l1,l2@@ ,i,j,@@ t; scanf("%lf",&@@ e); scanf("%s@@ %s",&@@ a,&b); l1@@ =strlen(a); l2@@ =strlen(b); for(i=0;i<l1;i++){ if(a[i]!='A'&&a[i]!='T'&&a[i]!='C'&&a[i]!='@@ G'){ printf("error\n"); return0; } } for(j=0;j<@@ l2@@ ;j++){ if(b[j]@@ !='@@ A'&&@@ b[j]@@ !='@@ T'&&@@ b[j]@@ !='@@ C'&&@@ b[j]@@ !='@@ G'){ printf("error\n"); return0; } } if(l1!=l2@@ ){ printf("error\n"); } elseif(@@ l1@@ ==@@ l2@@ ){ t=0; for(i=0;i<l1;i++){ if(a[i]==b[i]){ t++; } } s@@ =1.0*@@ t@@ /@@ l1; if(s@@ >@@ e@@ ){ printf("yes\n"); }else{ printf("no\n"); } } return0; }  
c -1
h -1
intmain() { intn,i,j,@@ q,@@ x=1; int@@ shuzu@@ [N@@ ],@@ panduan@@ [N]; scanf("%d",&n); for(i=0;i<n;i++) { scanf("%d",&(@@ shuzu@@ [i]@@ )); } panduan@@ [0]@@ =0; for(i=1;i<n;i++) { for(q@@ =0,@@ j@@ =0;j<@@ i;j++) { if(shuzu@@ [j]==@@ shuzu@@ [i]) { q=1; break; } } panduan@@ [i]=@@ q; } for(i=0,@@ x@@ =0;i<n;i++) { if(@@ panduan@@ [i]==0) { x=x@@ +1; } } for(i=0;i<n;i++) { if(@@ panduan@@ [i]@@ ==0@@ &&(@@ x@@ !=1@@ )) { printf("%d",@@ shuzu@@ [i]); x@@ --; } elseif(@@ panduan@@ [i]@@ ==0@@ &&(@@ x@@ ==1@@ )) { printf("%d",@@ shuzu@@ [i]); x@@ --; } } return0; }  
c -1
h -1
0

intmain(){ inti,j,n,@@ k; scanf("%d%d",&n,&k); intnum[@@ 1500@@ ],@@ sz[@@ 1500@@ ]; for(i=0;i<n;i++){ scanf("%d",&(@@ num[i]@@ )); sz@@ [i]=@@ num[i]; } for(i=0;i<n;i++){ for(j=i;j<@@ n;j++){ if(num@@ [i]+@@ sz@@ [j]==k){ printf("yes"); break; } if((@@ i==@@ n-1@@ )&&(@@ j==@@ n-1@@ )){ printf("no"); } } if(num@@ [i]+@@ sz@@ [j]==k){ break; } } return0; }  
c -1
h -1
unsigned@@ inth@@ [26],@@ n; int@@ go@@ (int@@ maxh@@ ,int@@ cp@@ ) { intx,y,@@ max; while(@@ h@@ [@@ cp@@ ]>@@ maxh@@ )@@ cp@@ =@@ cp@@ +1; if(h@@ [@@ cp@@ ]@@ ==0)@@ return0; x=@@ go@@ (@@ maxh@@ ,@@ cp@@ +1); maxh@@ =@@ h@@ [@@ cp@@ ]; y@@ =1@@ +@@ go@@ (@@ maxh@@ ,@@ cp@@ +1); max@@ =(@@ x@@ >@@ y)@@ ?@@ x@@ :@@ y; return@@ max; } intmain() { unsigned@@ inti,@@ c,@@ t; scanf("%d",&n); for(i=0;i<n;i++)@@ scanf("%d",&h[i]); h@@ [n@@ ]=0; t=@@ go@@ (@@ 65535@@ ,@@ 0); printf("%d",t); return0; }  
c -1
h -1
0

intmain() {@@ chara[500],b[500]; inti,n; float@@ m,@@ j=0; scanf("%f",&@@ m); scanf("%s",a); scanf("%s",b); n@@ =strlen(a); if((@@ strlen(a)@@ )!=@@ (@@ strlen(b@@ )@@ )) {@@ printf("error"); return0; } for(i=0;i<n;i++) {@@ if((a[i]!='@@ A')&&(@@ a[i]!='@@ T')&&(@@ a[i]!='@@ C')&&(@@ a[i]!='@@ G')||(@@ (@@ b[i]!='@@ A')&&(@@ b[i]!='@@ T')&&(@@ b[i]!='@@ C')&&(@@ b[i]!='@@ G')@@ )) {@@ printf("error"); return0; } else {@@ if(a[i]==b[i]) j++; } } if(j@@ /@@ n@@ >=@@ m) printf("yes"); else printf("no"); return0; }  
c -1
h -1
voidmain() { inty,m,d,@@ a,@@ i,@@ ans; for(i=1;i<=@@ 5;i++) { scanf("%d%d%d",&y,&m,&d); if(y%@@ 4@@ !=0) a=1; elseif(@@ y%@@ 100!=0) a=0; elseif(@@ y%@@ 400@@ !=0) a=1; else a=0; if(a@@ ) { switch(m) { case1:@@ ans=@@ d;break; case2:@@ ans@@ =31+@@ d;break; case3:@@ ans=@@ 59@@ +d;break; case4:@@ ans=@@ 90@@ +d;break; case5:@@ ans=@@ 120@@ +d;break; case6:@@ ans=@@ 151@@ +d;break; case7:@@ ans=@@ 181@@ +d;break; case8:@@ ans=@@ 212@@ +d;break; case9:@@ ans=@@ 243@@ +d;break; case10:@@ ans=@@ 273@@ +d;break; case11:@@ ans=@@ 304@@ +d;break; case12:@@ ans=@@ 334@@ +d;break; } } else { switch(m) { case1:@@ ans=@@ d;break; case2:@@ ans@@ =31+@@ d;break; case3:@@ ans=@@ 60@@ +d;break; case4:@@ ans=@@ 91@@ +d;break; case5:@@ ans=@@ 121@@ +d;break; case6:@@ ans=@@ 152@@ +d;break; case7:@@ ans=@@ 182@@ +d;break; case8:@@ ans=@@ 213@@ +d;break; case9:@@ ans=@@ 244@@ +d;break; case10:@@ ans=@@ 274@@ +d;break; case11:@@ ans=@@ 305@@ +d;break; case12:@@ ans=@@ 335@@ +d;break; } } printf("%d\n",@@ ans); } }  
c -1
h -1
0

intmain() { int@@ bookno@@ [100]; charauthor@@ [100][@@ 26]; int@@ numOfauthor@@ [26]={0}; int@@ nbook@@ ,@@ max=0,@@ maxno@@ ; char@@ maxauthor@@ ; cin>>@@ nbook@@ ; inti,j; for(i=0;i<@@ nbook@@ ;i++) { cin>>@@ bookno@@ [i]; cin.get(); cin.getline@@ (*(@@ author@@ +i)@@ ,@@ 26@@ ); } for(i=0;i<@@ nbook@@ ;i++) for(j=0;@@ author@@ [i][j]@@ !='\0';j++) { numOfauthor@@ [@@ author@@ [i][j]@@ -'A']++; } for(i=0;i<26;i++) { if(@@ numOfauthor@@ [i]>max) { max=@@ numOfauthor@@ [i]; maxno@@ =i; } } maxauthor@@ =@@ maxno@@ +@@ 'A'@@ ; cout<<@@ maxauthor@@ <<endl; cout<<@@ numOfauthor@@ [@@ maxno@@ ]<<endl; for(i=0;i<@@ nbook@@ ;i++) for(j=0;@@ author@@ [i][j]@@ !='\0';j++) { if(@@ author@@ [i][j]==@@ maxauthor@@ ) cout<<@@ bookno@@ [i]<<endl; } return0; }  
c -1
h -1
main() { intn; scanf("%d",&n); int@@ d[@@ n]; for(inti=0;i<n;i++) { scanf("%d",@@ d@@ +i); } int@@ opt@@ [n]; for(inti=0;i<n;i++) { opt@@ [i]=0; } for(inti=@@ n@@ ;i>=0;i--) for(intj=i@@ ;j<n;j++) { if((@@ d@@ [i]>=@@ d@@ [j]@@ )&&(@@ opt@@ [i]<=@@ opt@@ [j]@@ +1@@ )) opt@@ [i]=@@ opt@@ [j]+1; } intmax@@ =1; for(inti=0;i<n;i++) { if(@@ opt@@ [i]>max) max=@@ opt@@ [i]; } printf("%d",max); }  
c -1
h -1
0

intmain() { charstr[256],@@ sub[256],@@ rep@@ [256]; cin.getline(@@ str,@@ 256); cin.getline(@@ sub,@@ 256); cin.getline(@@ rep@@ ,@@ 256); inti,j,@@ len1,len2@@ ; len1=strlen(@@ str); len2=strlen(@@ sub); for(i=0;i<=@@ len1@@ -len2@@ ;i++) { j=0; while(@@ str@@ [i+j]==@@ sub@@ [j]@@ &&j@@ <@@ len2) j++; if(j==@@ len2) { while(j@@ >0) { j--; str@@ [i+j@@ ]=@@ rep@@ [j]; } break; } } cout<<str@@ <<endl; return0; }  
c -1
h -1
intmain() { int@@ sz1@@ [@@ 20000],@@ sz2@@ [@@ 20000@@ ],i,j,@@ n,@@ k; scanf("%d",&n); j=1; for(i=0;i<=n-1;i++) { scanf("%d",&@@ sz1@@ [i]); } sz2@@ [0]=@@ sz1@@ [0]; for(i=1;i<=n-1;i++) { for(k=i@@ -1@@ ;k>=0@@ ;k--) { if(@@ sz1@@ [i]==@@ sz2@@ [k]) { break; } if(k==0) { sz2@@ [j]=@@ sz1@@ [i]; j=j+1; } } } for(i=0;i<=@@ j@@ -1;i++) { if(i==@@ j@@ -1) { printf("%d",@@ sz2@@ [i]); } else { printf("%d",@@ sz2@@ [i]); } } return0; }  
c -1
h -1
0

intmain() {@@ inta[100][100@@ ];@@ inti,j,@@ q,@@ s=0; intm,n,@@ k; scanf("%d",&k); for(q=0;q@@ <k;@@ q++) {@@ s=0;@@ scanf("%d%d",&m,&n); for(i=0;i<m;i++) {@@ for(j=0;j<n;j++) {@@ scanf("%d",@@ *(a+i)@@ +j@@ );}} for(i=0;i<n;i++) s=s@@ +*(@@ *(a+@@ 0)@@ +i); for(i=1;i<m;i++) s=s@@ +*(@@ *(a+i)@@ +n-1); for(i=1;i<m;i++) s=s@@ +*(@@ *(a+i)@@ +@@ 0); for(i=1;i<n-1;i++) s=s@@ +*(@@ *(a@@ +m-1)@@ +i); printf("%d\n",s@@ );}}  
c -1
h -1
int@@ array_a@@ [100],@@ array_b@@ [100],@@ n_a@@ ,@@ n_b@@ ; voidinput() { inti; scanf("%d%d",&@@ n_a@@ ,&@@ n_b@@ ); for(i=0;i<@@ n_a@@ ;i++) scanf("%d",&@@ array_a@@ [i]); for(i=0;i<@@ n_b@@ ;i++) scanf("%d",&@@ array_b@@ [i]); } voidorder@@ () { inti,j,temp; for(i=1;i<@@ n_a@@ ;i++) for(j=1;j<@@ n_a@@ +1@@ -i;j++) if(@@ array_a@@ [j]<@@ array_a@@ [j-1]) { temp=@@ array_a@@ [j]; array_a@@ [j]=@@ array_a@@ [j-1]; array_a@@ [j-1]=@@ temp; } for(i=1;i<@@ n_b@@ ;i++) for(j=1;j<@@ n_b@@ -i@@ +1@@ ;j++) if(@@ array_b@@ [j]<@@ array_b@@ [j-1]) { temp=@@ array_b@@ [j]; array_b@@ [j]=@@ array_b@@ [j-1]; array_b@@ [j-1]=@@ temp; } } void@@ catenate@@ () { inti; for(i=0;i<@@ n_b@@ ;i++) array_a@@ [@@ n_a@@ +i]=@@ array_b@@ [i]; } voidprint() { inti; for(i=0;i<@@ n_a@@ +@@ n_b@@ ;i++) printf("%d@@ %c@@ ",@@ array_a@@ [i],@@ (@@ i==@@ n_a@@ +@@ n_b@@ -1)@@ ?'@@ \n@@ ':@@ '@@ '@@ ); } intmain() { input(); order@@ (); catenate@@ (); print(); return0; }  
c -1
h -1
0

int@@ ispr@@ (int@@ t) { int@@ v@@ =@@ sqrt(@@ t@@ *1.0@@ )@@ +1; for(inti=2@@ ;i<@@ v@@ ;i++) if(t@@ %i==0) return0; return1; } intsum=0; void@@ fun@@ (intn,int@@ i){ if(n==1) sum++; while(i<=@@ n){ if(n%i==0) fun@@ (n/i,i); i++; } return; } intmain(){ intn; scanf("%d",&n); while(n@@ --){ inta; scanf("%d",&a); if(@@ ispr@@ (@@ a)@@ ){ printf("@@ 1@@ \n"); continue; } int@@ i=@@ 2,@@ res@@ =1; while(i<=@@ a@@ /2@@ ){ if(a@@ %i==0){ sum=0; fun@@ (a/i,i); res@@ +=@@ sum; } i++; } printf("%d\n",@@ res@@ ); } }  
c -1
h -1
intmain() { chara[256],b[256],c[256]; gets(a); gets(b); gets(c); char*@@ t; t=@@ strstr@@ (a,b); if(t@@ ==NULL) { printf("%s",a); return0; } else { char@@ f=@@ t@@ -@@ a; int@@ d@@ =strlen(@@ a)@@ ,@@ e@@ =strlen(c); int@@ i=@@ f@@ ,j; for(j=0;j<@@ e@@ ;j++) { a[i]=@@ c[j]; i++; if(i==@@ t@@ -@@ a+@@ e@@ ) break; } } printf("%s",a); }  
c -1
h -1
0

structbook { intid; charwriter@@ [30]; }@@ book[@@ 1200@@ ]; intmain() { intn,@@ l,@@ t,@@ a[@@ 30]; char@@ m; cin>>n; for(inti=0;i<@@ 30@@ ;i++)@@ a[i]=0; for(inti=0;i<n;i++) { cin>>@@ book[i].@@ id@@ >>@@ book[i].@@ writer@@ ; l=strlen(@@ book[i].@@ writer); for(intj=0;j<@@ l@@ ;j++) { t=@@ book[i].@@ writer@@ [j]-65@@ ; a[t@@ ]++; } } t=@@ a[0]@@ ;@@ l=0; for(inti=0;i<@@ 26;i++) { if(a[i]>@@ t) { l@@ =i; t=a[i]; } } m=@@ l@@ +65; cout<<@@ m@@ <<endl; cout<<t@@ <<endl; for(inti=0;i<@@ 30@@ ;i++)@@ a[i]=0; for(inti=0;i<n;i++) { l=strlen(@@ book[i].@@ writer); for(intj=0;j<@@ l@@ ;j++) { if(book[i].@@ writer@@ [j]==@@ m) cout<<@@ book[i].@@ id@@ <<endl; } } return0; }  
c -1
h -1
intmain(intargc,char*argv[]) { intx,y,@@ z,@@ s; scanf("%d%d%d",&@@ x,&@@ y,&@@ z); inta; if(x%@@ 4==0) if(x%@@ 100==0) if(x%@@ 400==0) a=@@ 29; else a=@@ 28; else a=@@ 29; else a=@@ 28; if(y@@ ==1||@@ y@@ ==@@ 2) { s=(@@ y@@ -1)*@@ 31+@@ z; } elseif(@@ y@@ ==@@ 3@@ ||@@ y@@ ==@@ 7@@ ||@@ y@@ ==@@ 5) { s=(@@ y@@ -1)@@ /@@ 2*@@ 31+@@ (y@@ -@@ 3)@@ /@@ 2*@@ 30@@ +a+@@ z; } elseif(@@ y@@ ==@@ 4@@ ||@@ y@@ ==@@ 6) { s=@@ y@@ /@@ 2*@@ 31+@@ (y@@ -@@ 4)@@ /@@ 2*@@ 30@@ +a+@@ z; } elseif(@@ y@@ ==@@ 9@@ ||@@ y@@ ==@@ 11) { s=(@@ y@@ +1)@@ /@@ 2*@@ 31+@@ (y@@ -@@ 5@@ )@@ /@@ 2*@@ 30@@ +a+@@ z; } elseif(@@ y@@ ==@@ 8@@ ||@@ y@@ ==@@ 10@@ ||@@ y@@ ==@@ 12) { s=@@ y@@ /@@ 2*@@ 31+@@ (y@@ -@@ 4)@@ /@@ 2*@@ 30@@ +a+@@ z; } printf("%d\n",s); return0; }  
c -1
h -1
0

intk=0; inty; int@@ a@@ (intx,int@@ i); void@@ b@@ (intx,int@@ i); intmain() { intn,i,@@ x,@@ z; scanf("%d",&n); for(i=1;i<=n;i++) { scanf("%d",&x); y=@@ x; printf("%d\n",@@ a@@ (x,@@ 2)); } return0; } int@@ a@@ (intx,int@@ i) { k=0; b@@ (x,@@ i); return@@ k; } void@@ b@@ (intx,int@@ i) { for(i@@ =i@@ ;i<=@@ x;i++) { if(x@@ %i==0)@@ b@@ (x/i,i); } if(x@@ ==1)@@ k=k+1; }  
c -1
h -1
intmain() { intn,@@ m@@ [25@@ ]={0},@@ i,@@ d[@@ 25@@ ]={@@ 1@@ },@@ dm@@ =0,@@ mm@@ ,j; scanf("%d",&n); for(i=0;i<n;i++) scanf("%d",&@@ m[i]); for(i=0;i<n;i++) d@@ [i]=1; for(i=n-1;i>=0;i--) for(j=i+1;j<n;j++) if(m@@ [i]>=@@ m@@ [j]&&@@ d@@ [i]<=@@ d@@ [j]) d[i]=@@ d@@ [j]+1; dm@@ =@@ d@@ [0]; for(i=0;i<n;i++) if(d@@ [i]>@@ dm@@ ) dm@@ =@@ d[i]; printf("%d",@@ dm@@ ); scanf("%d",&@@ i); return0; }  
c -1
h -1
0

chars@@ [100][@@ 255@@ ]; intmain(){ intn,k,i,j,@@ b=0,@@ c=0,@@ d=0,@@ e=0,@@ flag=0; intnum[@@ 1000]; scanf("%d%d",&n,&k); for(i=0;i<n;i++){ scanf("%d",&@@ num[i]); } for(i=0;i<n@@ -1@@ &&@@ !@@ flag@@ ;i++){ for(j=i+1;j<n;j++){ if(num@@ [i]+@@ num@@ [j]==k){ flag=1; } } } if(flag@@ ==1){ printf("yes"); }else{ printf("no"); } return0; }  
c -1
h -1
intmain() { intt; cin>>t; for(int@@ time@@ =0;@@ time@@ <@@ t;@@ time@@ ++) { intm,n,@@ sum=0; cin>>m>>n; inta[@@ m@@ ][n]; for(inti=0;i<m;i++) for(intj=0;j<n;j++) cin>>*(*(a+i)+j); for(inti=0;i<n;i++) sum+=*(@@ *a@@ +i)@@ +@@ (n@@ >1@@ )@@ **@@ (@@ *(a@@ +m-1)@@ +i); for(inti=1;i<@@ m-1;i++) sum+=@@ *(*(a+i)@@ )+@@ (m@@ >1@@ )@@ **@@ (@@ *(a+i)@@ +n-1); cout<<sum<<endl; } return0; }  
c -1
h -1
0

voidmain() { intn,i,j,@@ age@@ [100],@@ dengji@@ [100],@@ p,@@ t; charid@@ [100][10],@@ c;@@ int@@ jishuqi@@ =0,@@ k; intl,@@ m; scanf("%d",&n); for(i=0;i<=n-1;i++) { scanf("%s%d",@@ id[i],&@@ age[i]); dengji@@ [i]=@@ i; } for(i=0;i<=@@ n-2;i++) for(j=0;j<=@@ n-2@@ -i;j++) { if(age@@ [j]<@@ age@@ [j+1]) { t=@@ age@@ [j]; age@@ [j]=@@ age@@ [j+1]; age@@ [j+1]=t; k=@@ dengji@@ [j]; dengji@@ [j]=@@ dengji@@ [j+1]; dengji@@ [j+1]=@@ k; for(p=0;p@@ <=@@ 9@@ ;p++) { c=@@ id@@ [j]@@ [p@@ ]; id@@ [j]@@ [p@@ ]=@@ id@@ [j+1@@ ][p@@ ]; id@@ [j+1@@ ][p@@ ]=@@ c; } } if(age@@ [j]==@@ age@@ [j+1]) { if(@@ dengji@@ [j]>@@ dengji@@ [j+1]) { k=@@ dengji@@ [j]; dengji@@ [j]=@@ dengji@@ [j+1]; dengji@@ [j+1]=@@ k; for(p=0;p@@ <=@@ 9@@ ;p++) { c=@@ id@@ [j]@@ [p@@ ]; id@@ [j]@@ [p@@ ]=@@ id@@ [j+1@@ ][p@@ ]; id@@ [j+1@@ ][p@@ ]=@@ c; } } } } for(i=0;i<=@@ n-2;i++) for(j=0;j<=@@ n-2@@ -i;j++) { if(age@@ [j]@@ <60) { if(@@ dengji@@ [j]>@@ dengji@@ [j+1]) { k=@@ dengji@@ [j]; dengji@@ [j]=@@ dengji@@ [j+1]; dengji@@ [j+1]=@@ k; t=@@ age@@ [j]; age@@ [j]=@@ age@@ [j+1]; age@@ [j+1]=t; for(p=0;p@@ <=@@ 9@@ ;p++) { c=@@ id@@ [j]@@ [p@@ ]; id@@ [j]@@ [p@@ ]=@@ id@@ [j+1@@ ][p@@ ]; id@@ [j+1@@ ][p@@ ]=@@ c; } } } } for(i=0;i<=n-1;i++) printf("%s\n",@@ id[i]); }  
c -1
h -1
intmain(){ intn; cin>>n; inta[@@ 20001]; inti; for(i=1;i<=n;i++) cin>>a[i]; int@@ j=1; for(i=2;i<=@@ n;i++){ for(j=1;j<@@ i;j++){ if(a[i]==a[j]@@ ){ int@@ u@@ =i; if(a[i]==@@ a[i+1]) j--; while(i<@@ n){ a[i]=a[i+1]; i++; } i=@@ u@@ ; n--; i--; } } } for(i=1;i<n;i++) cout<<a[i]<<""; cout<<@@ a[n@@ ]<<endl; return0; }  
c -1
h -1
0

intmain() { chara[@@ 260@@ ],b[@@ 260@@ ],c[@@ 260@@ ]; scanf("%s%s%s",a,b,c); inti,j,@@ t,@@ l,@@ k=0,@@ m=0; l=@@ (int)@@ strlen(@@ a); t=@@ (int)@@ strlen(@@ b); for(i=0;i<l@@ -@@ t@@ +1;i++) { for(j=0;j<@@ t;j++) { if(a@@ [i+j]!=@@ b[j]) k=0; if(a@@ [i+j]==@@ b[j]) k=k+1; if(t@@ ==k) { m=i; i=@@ l; } } } if(m==0) printf("%s",a); if(m@@ !=0) { for(i=0;i<m;i++) printf("%c",a[i]); printf("%s",@@ c); for(i=@@ m+@@ t@@ ;i<@@ l@@ ;i++) printf("%c",a[i]); } return0; }  
c -1
h -1
intmain() { int@@ str@@ [@@ 20],@@ doubl@@ ,@@ num=0,@@ a,b,@@ c; while(1) { num=0; scanf("%d",&@@ str@@ [0]); if(str@@ [0]@@ ==-1) break; else for(a@@ =1;@@ str@@ [a@@ -1]@@ !=0@@ ;a@@ ++) { scanf("%d",&@@ str@@ [a@@ ]); } for(b=0;b@@ <a@@ -1;@@ b++) { doubl@@ =@@ 2*@@ str@@ [b@@ ]; for(c=0;c@@ <a@@ -1;@@ c++) { if(str@@ [c@@ ]==@@ doubl@@ ) num++; else num=@@ num; } } printf("%d\n",num); } return1; }  
c -1
h -1
0

intnum=0; voidf@@ (intx,inty) { num++; for(intj=@@ y@@ ;j@@ *@@ j@@ <=@@ x;j++) { if(x@@ %j==0) f(@@ x@@ /j,j); } } intmain() { intn; cin>>n; inta[@@ 1100@@ ]; for(inti=1;i<=n;i++) { num=0; cin>>a[i]; f(@@ a[i],@@ 2); cout<<num<<endl; } return0; }  
c -1
h -1
voidmain() { chara[@@ 300@@ ],b[100],@@ e@@ [100],@@ c@@ [100]={0},@@ g@@ [100]={0},@@ s[@@ 300@@ ]={0}; intj,@@ i,k,@@ f,@@ l,@@ d,@@ h@@ =1; gets(a); gets(b); gets(@@ e); k@@ =strlen(a); d@@ =strlen(b); for(i=0;i<@@ k@@ &&@@ h@@ <@@ 2@@ ;i++) { if(a[i]==@@ b[0]) { j=i; strncpy@@ (@@ g,@@ a,@@ j); for(@@ f@@ =0;@@ f@@ <@@ d@@ ;@@ f@@ ++@@ ,j@@ ++) { c[@@ f@@ ]=@@ a[j]; } j=i; for(@@ f@@ =0,@@ l@@ =j@@ +d@@ ;@@ f@@ <k@@ -j@@ -@@ d@@ &&@@ a[l@@ ];@@ f@@ ++,@@ l++) { s[@@ f@@ ]=a[@@ l@@ ]; } s@@ [k@@ -@@ d@@ -j@@ ]=0; if(@@ strcmp@@ (b,@@ c)@@ ==0) { h=@@ h@@ +1; printf("%s",@@ g@@ ); printf("%s",@@ e); printf("%s",s); } } } if(h@@ ==1) printf("%s",a); }  
c -1
h -1
0

intm=0; structpatient { charid@@ [@@ 32@@ ]; intage; structpatient*next; }; structpatient*@@ find@@ (structpatient@@ *head) { structpatient@@ *p,*@@ ppre@@ ; p=head; while(p@@ &&@@ p->age@@ >=60) { ppre@@ =p; p=p->next; } return@@ ppre@@ ; } structpatient*@@ create@@ (intn) { structpatient@@ *head@@ =NULL@@ ,*@@ p1,*p2,*@@ p0@@ ,*@@ q; inti; p1=@@ p2=@@ p0@@ =(struct@@ patient@@ *)malloc(@@ Len@@ ); scanf("%s%d",@@ p1->id,&p1->age); if(p1->age@@ >=60@@ )@@ m++; p1->next=NULL; head@@ =p1@@ =@@ p0; p2=p1; for(i=1;i<n;i++) { p1=(struct@@ patient@@ *)malloc(@@ Len@@ ); scanf("%s%d",@@ p1->id,&p1->age); if(p1->age@@ <60) { p1->next=NULL; p2->next=p1; p2=p1; } elseif(@@ p1->age@@ >=60) { m++; if(head@@ ->age@@ <60) { head=p1; p1->next=@@ p0; } if(head@@ ->age@@ >=60) { p0@@ =@@ find@@ (head); q=@@ p0@@ ->next; p0->next@@ =p1; p1->next=@@ q; } if((@@ p0@@ =@@ find@@ (@@ head@@ ))@@ ->next@@ ==NULL) { p1->next=NULL; p2->next=p1; p2=p1; } } } returnhead; } structpatient*@@ arrange@@ (structpatient@@ *head) { structpatient*@@ p1,*p2; int@@ t1@@ ,@@ i,j; char@@ t2@@ [@@ 32@@ ]; for(j=0;j<m;j++) { p1=head; for(i=1;i<@@ m@@ -j;i++) { p2=p1; p1=p1->next; if(@@ p2->age@@ <@@ p1->age@@ ) { t1@@ =p1->@@ age; strcpy(@@ t2@@ ,@@ p1->@@ id); p1->age@@ =@@ p2->@@ age; strcpy(@@ p1->@@ id,@@ p2->@@ id); p2->age@@ =@@ t1@@ ; strcpy(@@ p2->@@ id,@@ t2@@ ); } } } } voidprint@@ (structpatient@@ *head) { structpatient@@ *p; p=head; while(p) { printf("%s\n",p->id); p=p->next; } } intmain() { structpatient@@ *head,*@@ p,*@@ q@@ ,*@@ p0; intn,@@ m=0,@@ age; charid@@ [@@ 32@@ ]; scanf("%d",&n); head=@@ create@@ (n); arrange@@ (head); print(head); }  
c -1
h -1
intmain(){ intn; scanf("%d",&n); intnumber@@ [@@ NUMBER@@ ]; inti; i=0; while(i<n) { scanf("%d",&@@ number@@ [i]); i++; } i=1; intj=0; printf("%d",@@ number@@ [0]); while(i<n) { while(j<@@ i) { if(@@ number@@ [i]==@@ number@@ [j]) { break; } else { j++; } if(j==i) { printf("%d",@@ number@@ [i]); } } j=0; i++; } return0; }  
c -1
h -1
0

int@@ factoring@@ (inta,intb) { inti,@@ kind@@ =0; if(a==1) { kind@@ =1; } else { for(i=b@@ ;i<=a;i++) { if(a%i==0) { kind@@ =@@ factoring@@ (a@@ /i,@@ i@@ )+@@ kind@@ ; } } } return@@ kind@@ ; } intmain() { intn,i,j,a[@@ 30000@@ ]={0},b[@@ 30000@@ ]={0}; scanf("%d",&n); for(i=0;i<n;i++) { scanf("%d",&a[i]); b[i]=@@ factoring@@ (a[i],@@ 2); } for(i=0;i<n;i++) { printf("%d\n",@@ b[i]); } return0; }  
c -1
h -1
intmain(){ intb[@@ 1000],@@ n,k,@@ i,j; scanf("%d%d",&n,&k); for(i=0;i<n;i++)@@ scanf("%d",&b[i]); for(i=0;i<n-1;i++){ for(j=i+1;j<n;j++){ if(b[i]@@ +@@ b[j]@@ ==@@ k){@@ printf("yes");@@ break;} if(i==@@ n-2@@ &&j@@ ==@@ n-1@@ ){@@ printf("no");} } if(b[i]@@ +@@ b[j]@@ ==@@ k){@@ break;} } return0; }  
c -1
h -1
0

intm,n,@@ a[@@ 800@@ ],b[@@ 800@@ ]; voidmain() { voidf1@@ (); voidf2@@ (); void@@ f3@@ (); void@@ f4@@ (); f1@@ (); f2@@ (); f3@@ (); f4@@ (); } voidf1@@ () { scanf("%d%d",&m,&n); } voidf2@@ () { inti; for(i=0;i<m;i++) scanf("%d",&a[i]); for(i=0;i<n;i++) scanf("%d",&b[i]); } void@@ f3@@ () { inti,j,temp; for(i=0;i<m;i++) {@@ for(j=i+1;j<@@ m;j++) if(a[j]@@ <@@ a[i]) {@@ temp=@@ a[i];a[i]=@@ a[j];a[j]=@@ temp;} } for(i=0;i<n;i++) {@@ for(j=i+1;j<n;j++) if(b[j]@@ <@@ b[i]) {@@ temp=@@ b[i]@@ ;@@ b[i]=b[j]@@ ;@@ b[j]=@@ temp;} } } void@@ f4@@ () { inti,j; for(i=0;i<m;i++) printf("%d",a[i]); for(j=0;j<n-1;j++) printf("%d",@@ b[j]); printf("%d",b[@@ n-1]); }  
c -1
h -1
structstudent { charnum[@@ 30]; intsum; structstudent*next; }; voidmain() { intn,i; structstudent*@@ p1,*p2,*@@ p3@@ ,*@@ head; scanf("%d",&n); for(i=0;i<n;i++) { p1@@ =(structstudent*)malloc(sizeof(structstudent)); if(i==0) head=p1; scanf("%s%d",@@ p1->num,&p1->@@ sum); p1->next=NULL; if(i@@ !=0) { p3@@ =head; if(p1->@@ sum@@ >=60){ while((@@ p1->@@ sum<=@@ p3->@@ sum@@ )&&@@ p3@@ ->next@@ !=NULL) { p2=@@ p3; p3=@@ p3@@ ->next; } if(p1->@@ sum>@@ p3->@@ sum) { if(head@@ ==@@ p3@@ ) { head=p1; p1->next=@@ p3; } else { p2->next=p1; p1->next=@@ p3; } } else { p3@@ ->next@@ =p1; p1->next=NULL; } } else{@@ for(@@ p2=@@ head;@@ ;@@ p2=@@ p2->next@@ ){@@ if(@@ p2->next@@ ==NULL@@ )@@ break;} p2->next=p1; p1->next@@ =NULL@@ ;} } } p1=head; for(i=0;@@ (i@@ <n@@ &&@@ p1@@ !=NULL@@ );i++) { printf("%s\n",@@ p1->num); p1=p1->next; } }  
c -1
h -1
0

intmain() { intk,@@ n,m,@@ i,j,@@ x,@@ sum; cin>>k; while(k@@ --) { cin>>m>>n; sum=0; for(i=1;i<=m;i++) { for(j=1;j<=n;j++) { cin>>x; if((i@@ ==1)@@ ||(@@ i==@@ m@@ )||(@@ j@@ ==1)@@ ||(@@ j==@@ n@@ )) sum=sum+@@ x; } } cout<<sum<<endl; } return0; }  
c -1
h -1
void@@ juzhen@@ (intm,int@@ n) { inta[100][100]; inti,j,@@ sum=0; for(i=0;i<m;i++) { for(j=0;j<n;j++) { scanf("%d",@@ *(a+i)@@ +j); } } for(j=0;j<n;j++) { sum=sum+*(@@ *(a@@ )@@ +j)@@ +*(@@ *(a@@ +m-1)@@ +j); } for(i=1;i<m-1;i++) { sum=sum+*(@@ *(a+i)@@ +@@ 0)@@ +*(@@ *(a+i)@@ +n-1); } if(m==1) { sum=0; for(i=0;i<n;i++) sum=sum+*(@@ *a@@ +i); } if(n==1) { sum=0; for(i=0;i<m;i++) sum=sum+*(@@ *(a+i)@@ +@@ 0); } printf("%d\n",sum); } intmain() { intk,i,@@ m,n; scanf("%d",&k); for(i=0;i<k;i++) { scanf("%d%d",&m,&n); juzhen@@ (@@ m,n); } }  
c -1
h -1
1


intmain() { intm,@@ i,@@ a[@@ 1000]={0},@@ count[@@ 30@@ ]={0},@@ temp@@ ,j,@@ max@@ =-@@ 999@@ ,@@ flag; chars[@@ 1000][@@ 30@@ ]={0},@@ cha@@ ; scanf("%d",&m); for(i=1;i<=m;i++) { scanf("%d",&a[i]); for(j=1;j<@@ 30@@ ;j++) { scanf("%@@ c@@ ",&@@ s@@ [i][j]); if(s@@ [i][j]=='@@ ') { s@@ [i][j]@@ =0; continue; } if(s@@ [i][j]==@@ '\n@@ ') { s@@ [i][j]@@ =0; break; } temp=@@ s@@ [i][j]@@ -'@@ A'+@@ 1; count[@@ temp@@ ]@@ +=1; } } for(i=1;i<=@@ 26;i++) { if(count@@ [i]>=@@ max) { flag@@ =i; max=count@@ [i]; } } printf("%c\n%d\n",@@ flag@@ +@@ 64@@ ,max); cha@@ ='A'+@@ flag@@ -1; for(i=1;i<=m;i++) { for(j=1;j<@@ 30@@ ;j++) { if(s@@ [i][j]==@@ cha@@ ) { printf("%d\n",a[i]); } } } return0; }  
c -1
h -1
intmain() { inti,n,@@ sum@@ ,j,@@ k,@@ a[@@ 1000@@ ]={0},b[@@ 1000]={0}; scanf("%d%d",&n,&@@ sum); for(i=0;i<n;i++) { scanf("%d",&a[i]); b[i]=@@ a[i]; } for(j=0;j<n;j++) { for(k=j@@ ;k<@@ n;k++) { if((a[j]@@ +@@ b[k@@ ])@@ ==@@ sum) {@@ printf("yes");@@ return0;} } } printf("no"); return0; }  
c -1
h -1
0

intmain(){ intn,i,k,@@ a[@@ 10000],@@ b,@@ j,@@ d=0; for(i=0;i<@@ 10000@@ ;i++){ a[i]=0; } scanf("%d%d",&n,&k); for(i=0;i<n;i++) scanf("%d",&a[i]); for(i=0;i<n;i++){ if(d@@ !=0) break; for(j=i+1;j<n;j++){ b=0; b=@@ a[i]+a[j]; if(k==@@ b){ printf("yes\n"); d++; break; } } } if(d@@ ==0){ printf("no\n"); } return0; }  
c -1
h -1
intmain() { inti,j; int@@ point@@ [@@ number@@ ][@@ number@@ ]; intn,@@ s,@@ sum,@@ result; inta,b; scanf("%d",&n); for(i=0;i<n;i++){ for(j=0;j<n;j++){ scanf("%d",&@@ point@@ [i][j]); } } for(i=0;i<n@@ ;@@ ){ for(j=0;j<n;j++){ if(@@ point@@ [i][j]==0){ a=@@ a@@ +1; } } if(a@@ !=0@@ )break; else@@ i++; } for(j=0;j<@@ n;@@ ){ for(i=0;i<n;i++){ if(@@ point@@ [i][j]==0){ b=b@@ +1; } } if(b@@ !=0@@ )break; else@@ j++; } sum=@@ 2@@ *(a+@@ b@@ -2); s=@@ a*@@ b; result=@@ s@@ -@@ sum; printf("%d\n",@@ result); return0; }  
c -1
h -1
0

structbook { charnum[@@ 500]; chars[@@ 50]; structbook*next; }; voidmain() { structbook*@@ head; structbook*@@ p1,*p2; intm,@@ mi@@ ,@@ i,j,k,@@ max,@@ found@@ ; int@@ aut@@ [26]={0}; scanf("%d",&m); p1=(structbook@@ *)malloc(LEN); scanf("%s%s",@@ p1->@@ num,p1->@@ s); for(i=0;i<strlen(@@ p1->@@ s@@ );i++) aut@@ [@@ (@@ p1->@@ s)@@ [i]@@ -'A']++; p1->next=NULL; head=@@ p2=p1; for(@@ mi@@ =@@ 2;@@ mi@@ <=@@ m;@@ mi@@ ++) { p1=(structbook@@ *)malloc(LEN); scanf("%s%s",@@ p1->@@ num,p1->@@ s); for(i=0;i<strlen(@@ p1->@@ s@@ );i++) aut@@ [@@ (@@ p1->@@ s)@@ [i]@@ -'A']++; p2->next=p1; p2=p1; } p2->next=NULL; max=0; for(i=0;i<26;i++) if(@@ aut@@ [i]>max) { k=i; max=@@ aut@@ [i]; } printf("%c\n",@@ k@@ +65); printf("%d\n",@@ aut@@ [k]); p1=head; for(i=1;i<=m;i++) { found@@ =0; for(j=0;j<strlen(@@ p1->@@ s@@ );j++) if((@@ p1->@@ s)@@ [j]==@@ k@@ +65) { found@@ =1; break; } if(@@ found@@ ==1)@@ printf("%s\n",@@ p1->num); p1=p1->next; } }  
c -1
h -1
intmain(){ intn,i,j; struct{ inty,@@ a; charid[10]; }@@ p@@ [100],@@ t; scanf("%d",&n); for(i=0;i<n;i++){ scanf("%s%d",@@ p[i].@@ id,&@@ p[i].@@ y); p[i].@@ a@@ =i+1; } for(i=0;i<n;i++){ for(j=i+1;j<n;j++){ if(p@@ [i].y@@ >=60@@ ||@@ p@@ [j].@@ y@@ >=60) { if(p@@ [j].@@ y@@ >@@ p[i].@@ y) { t=@@ p[i]; p[i]=@@ p@@ [j]; p@@ [j]=@@ t; } elseif(@@ p[i].@@ y@@ ==@@ p@@ [j].@@ y) { if(p@@ [j].@@ a@@ <@@ p[i].@@ a){ t=@@ p[i]; p[i]=@@ p@@ [j]; p@@ [j]=@@ t; } } } else{ if(p@@ [j].@@ a@@ <@@ p[i].@@ a){ t=@@ p[i]; p[i]=@@ p@@ [j]; p@@ [j]=@@ t; } } } } for(i=0;i<n;i++){ printf("%s\n",@@ p@@ [i].id); } return0; }  
c -1
h -1
0

structpatient {@@ charnum[@@ 20]; intage@@ ;@@ }; intmain() {@@ structpatient@@ a[100],b[100],@@ c[100],@@ temp; intn,i; scanf("%d",&n); for(i=0;i<n;i++) {@@ scanf("%s%d",@@ a[i].@@ num,&@@ a[i].@@ age@@ );} int@@ j=0,@@ k=0,@@ m; for(i=0;i<n;i++) {@@ if(a[i].age@@ >=60@@ ){@@ b[j]=@@ a[i]@@ ;j++@@ ;} else{@@ c@@ [k]=@@ a[i]@@ ;k@@ ++;} } for(i=0;i<j;i++) {@@ for(m=0;m<@@ j@@ -i@@ ;m++) {if(@@ b[m@@ ].age@@ <@@ b[m@@ +1@@ ].age) {@@ temp=@@ b[m@@ ];@@ b[m@@ ]=@@ b[m@@ +1@@ ];@@ b[m@@ +1]=@@ temp@@ ;@@ }}} for(i=0;i<j;i++) {@@ printf("%s\n",@@ b[i].@@ num@@ );} for(i=0;i<k;i++) {@@ printf("%s\n",@@ c@@ [i].@@ num@@ );} }  
c -1
h -1
intmain(){ intn,@@ b,@@ c,d; int@@ e@@ =-1,@@ f@@ =-1; intm@@ [1000]; scanf("%d",&n); for(intk@@ =1@@ ;k<=@@ n;k++){ for(inti=1;i<=@@ n;i++){ scanf("%d",&@@ m[i]); if(e@@ >0@@ &&@@ f@@ >0@@ &&m@@ [i]@@ ==0){ d=@@ k; c=i; } if(e@@ <0@@ &&@@ f@@ <0@@ &&m@@ [i]@@ ==0){ e=@@ k; f@@ =i; } } } b@@ =(@@ c-@@ f@@ +1)*(@@ d@@ -@@ e@@ +1)@@ -2@@ *(@@ c-@@ f@@ +1)@@ -2@@ *(@@ d@@ -@@ e@@ -1); printf("%d",@@ b); return0; }  
c -1
h -1
0

voidmain() { intm,n,@@ a[100][100],@@ i,j,@@ sum,@@ t; scanf("%d",&t); while(t@@ --){ sum=0; scanf("%d%d",&m,&n); for(i=0;i<m;i++) for(j=0;j<n@@ ;j++)@@ scanf("%d",&a[i][j]); if(m@@ >1@@ )@@ for(i=0;i<m;i++)@@ sum+=@@ a[i][0]+@@ a[i][n-1]; else@@ for(i=0;i<m;i++)@@ sum+=@@ a[i][0]; if(n@@ >1@@ )@@ for(i=1;i<@@ n-1@@ ;i++)@@ sum+=@@ a[0]@@ [i]+@@ a[m-1]@@ [i]; else@@ for(i=1;i<@@ n-1@@ ;i++)@@ sum+=@@ a[0][i]; printf("%d\n",sum); } }  
c -1
h -1
intmain() { long@@ i,j,@@ n,m,@@ x,@@ p=0; inta[@@ 100001@@ ]={0}; scanf("%d%d",&n,&m); for(i=1;i<=n;i++) {scanf("%d",&@@ x@@ );@@ a[x@@ ]@@ ++;} for(i=0;i<=@@ 100000@@ ;i++) { for(j=1;j<=@@ a[i]@@ ;j++) if(p@@ ==0){@@ printf("%d",@@ i@@ );@@ p@@ =1;} else@@ printf("%d",@@ i); a[i]=0; } for(i=1;i<=m;i++) {scanf("%d",&@@ x@@ );@@ a[x@@ ]@@ =1;} for(i=0;i<=@@ 100000@@ ;i++) { for(j=1;j<=@@ a[i]@@ ;j++) printf("%d",@@ i); a[i]=0; } return0; }  
c -1
h -1
0

intmain() { inti,n,@@ k,@@ j,@@ a[1000],@@ tempx@@ ,@@ tempy@@ ,@@ temp=0; scanf("%d%d",&n,&k); for(i=0;i<n;i++) { scanf("%d",&a[i]); } for(i=0;i<n;i++) { tempx@@ =@@ a[i]; for(j=i+1;j<n;j++) { tempy@@ =@@ a[j]; if(@@ tempx@@ +@@ tempy@@ ==k) { temp@@ ++; } } } if(temp@@ >=@@ 1) printf("yes"); if(temp@@ ==0) printf("no"); return0; }  
c -1
h -1
intmain() { int@@ m1,@@ n1@@ ; cin>>@@ m1@@ >>@@ n1@@ ; int@@ m=@@ m1,@@ n=@@ n1@@ ; inta[@@ m]; intb[@@ n]; inti,j,k; for(i=0;i<m;i++) { cin>>a[i]; } for(i=0;i<n;i++) { cin>>b[i]; } for(i=0;i<m-1;i++) { for(j=0;j<@@ m-1@@ -i;j++) { if(a[j]>a[j+1]) { k=@@ a[j];a[j]=a[j+1];@@ a[j+1]=@@ k; } } } for(i=0;i<n-1;i++) { for(j=0;j<n-1-i;j++) { if(b[j]>b[j+1]) { k=@@ b[j]@@ ;@@ b[j]=b@@ [j+1];@@ b[j+1]=@@ k; } } } for(i=0;i<m;i++) { cout<<a[i]<<""; } for(i=0;i<n-1;i++) { cout<<b[i]<<""; } cout<<b[@@ n-1@@ ]<<endl; cin.get@@ ();@@ cin.get@@ ();@@ cin.get(); return0; }  
c -1
h -1
0

structpatient { charID@@ [11]; intage; }@@ p@@ [1000]; intmain() { intn,i,k,@@ j,@@ l,@@ a=0,b=0,@@ e; int@@ sz1@@ [1000],@@ sz2@@ [1000]; char@@ zfc1@@ [1000][@@ 11@@ ],@@ zfc2@@ [1000][@@ 11@@ ],@@ f@@ [11]; scanf("%d",&n); for(i=0;i<n;i++) { scanf("%s",&@@ p[i].@@ ID); scanf("%d",&@@ p[i].age); } for(i=0,j@@ =0,@@ l@@ =0;i<n;i++) { if(p@@ [i].age>=60) { a++; sz1@@ [j]=@@ p@@ [i].age; strcpy(@@ zfc1@@ [j],@@ p[i].@@ ID); j++; } else { b++; sz2@@ [l@@ ]=@@ p@@ [i].age; strcpy(@@ zfc2@@ [l@@ ],@@ p[i].@@ ID); l++; } } for(k=0;k<n;k++) { for(j=n-1@@ ;j@@ >=@@ k@@ ;j--) { if(@@ sz1@@ [j+1@@ ]>@@ sz1@@ [j]) { e=@@ sz1@@ [j]; sz1@@ [j]=@@ sz1@@ [j+1]; sz1@@ [j+1]=@@ e; strcpy(@@ f,@@ zfc1@@ [j]); strcpy(@@ zfc1@@ [j],@@ zfc1@@ [j+1]); strcpy(@@ zfc1@@ [j+1],@@ f); } } } for(j=0;j<a@@ ;j++) { printf("%s\n",@@ zfc1@@ [j]); } for(l=0;l<@@ b@@ ;l++) { printf("%s\n",@@ zfc2@@ [l]); } return0; }  
c -1
h -1
intmain() { intn,@@ j,@@ m; scanf("%d",&n); inti,@@ h@@ [26]; for(i=1;i<=n@@ ;i++){@@ scanf("%d",&@@ h@@ [i]@@ );@@ }; int@@ q@@ [26]; for(i=1;i<=n@@ ;i++){@@ q@@ [i]@@ =1;@@ }; for(i=n-1@@ ;i>=1;i--) {@@ m=0; for(j=i+1;j<=@@ n;j++){ if(h@@ [j]<=@@ h@@ [i]){ if(m@@ <@@ q@@ [j]@@ ){@@ m=@@ q@@ [j];@@ }@@ ;@@ }@@ ;@@ }; q@@ [i]=@@ q@@ [i]+@@ m; } m=0; for(i=1;i<=n@@ ;i++){@@ if(m@@ <@@ q@@ [i]@@ ){@@ m=@@ q@@ [i];@@ }@@ ;@@ }; printf("%d",m); }  
c -1
h -1
0

voidmain() { intn,i,@@ age@@ [100],@@ a[100],@@ j=0,@@ k,@@ l,@@ temp,@@ ord@@ [100],@@ o@@ [100]; char@@ num@@ [100][10],@@ old@@ [100][10],@@ t@@ [10]; scanf("%d",&n); for(i=0;i<n;i++)@@ scanf("%s%d",@@ num[i]@@ ,&@@ age[i]); for(i=0;i<n;i++)@@ ord@@ [i]=@@ i; for(i=0;i<n;i++) { if(age[i]@@ >=60) { a[j]=@@ age[i]; o@@ [j]=@@ ord@@ [j]; strcpy(old@@ [j],@@ num[i]); j++; } } for(k=0;k<j@@ ;k++) { for(l@@ =k@@ +1;@@ l<@@ j@@ ;l++) { if(a[k]@@ <@@ a[l@@ ]) { temp=@@ a[k]; a[k@@ ]=a[@@ l@@ ]; a[l@@ ]=temp; temp=@@ o@@ [k]; o@@ [k]=@@ o@@ [l]; o@@ [l@@ ]=temp; strcpy(@@ t,@@ old@@ [k]); strcpy(old@@ [k],@@ old@@ [l]); strcpy(old@@ [l@@ ],@@ t); } } } for(k=0;k<j@@ ;k++) { for(l@@ =k@@ +1;@@ l<@@ j@@ ;l++) { if(a[k@@ ]==@@ a[l@@ ]) { if(@@ o@@ [k]@@ >@@ o@@ [l@@ ]) { temp=@@ a[k]; a[k@@ ]=a[@@ l@@ ]; a[l@@ ]=temp; temp=@@ o@@ [k]; o@@ [k]=@@ o@@ [l]; o@@ [l@@ ]=temp; strcpy(@@ t,@@ old@@ [k]); strcpy(old@@ [k],@@ old@@ [l]); strcpy(old@@ [l@@ ],@@ t); } } } } for(i=0;i<j@@ ;i++)@@ printf("%s\n",old@@ [i]); for(i=0;i<n;i++) { if(age[i]@@ <60@@ )@@ printf("%s\n",@@ num[i]); } }  
c -1
h -1
intmain() { int@@ year@@ [2@@ ]={@@ 365@@ ,@@ 366@@ }; int@@ month@@ [2][@@ 12]={31,@@ 28,31,30,31,30,31,31,30,31,30,31@@ ,31,@@ 29,31,30,31,30,31,31,30,31,30,31}; inty,m,@@ d; cin>>y>>m>>d; int@@ type@@ ; if((y%@@ 4==0&&y%100!=0@@ )||@@ y%@@ 400@@ ==0){ type@@ =1; } else{ type@@ =0; } inti; intsum=0; for(i=0;i<m@@ -1;i++){ sum+=@@ month@@ [@@ type@@ ]@@ [i]; } sum+=@@ d; cout<<sum<<endl; return0; }  
c -1
h -1
0

intmain() { char@@ first@@ [@@ 1024@@ ]; char@@ second@@ [@@ 1024@@ ]; float@@ rate@@ =0@@ .@@ 0f@@ ; scanf("%f",&@@ rate@@ ); scanf("%s",@@ first@@ ); scanf("%s",@@ second@@ ); int@@ n1@@ =strlen(@@ first@@ ); int@@ n2@@ =strlen(@@ second@@ ); if(@@ n1@@ !=@@ n2) { printf("error"); return0; } for(inti=0;i<@@ n1@@ ;++i) { if(@@ first@@ [i]!='@@ A'@@ && first@@ [i]!='T@@ '@@ && first@@ [i]!='@@ C@@ '@@ && first@@ [i]!='G@@ '@@ && second@@ [i]!='@@ A'@@ && second@@ [i]!='T@@ '@@ && second@@ [i]!='@@ C@@ '@@ && second@@ [i]!='G') { printf("error"); return0; } } int@@ same@@ =0; for(inti=0;i<@@ n1@@ ;++i) { if(@@ first@@ [i]==@@ second@@ [i]) same@@ ++; } float@@ actual@@ =(@@ float)@@ same@@ /@@ (@@ float)@@ n1@@ ; if(@@ actual@@ >=@@ rate@@ ) printf("yes"); else printf("no"); return0; }  
c -1
h -1
main() { inta[16],@@ n,@@ i,j,k; while(1) { n=0; for(i=0;i<16;i++) a[i]=0; scanf("%d",&a[0]); if(a[0]==-1) break; else { for(i=1;i<@@ 16@@ ;i++) { scanf("%d",&a[i]); if(a[i]==0) break; } j=i; for(i=0;i<j@@ -1;i++) { for(k@@ =i+1@@ ;k<@@ j@@ ;k++) { if(a[k@@ ]==2*@@ a[i]@@ ||@@ a[i]==@@ 2*@@ a[k]) n++; } } printf("%d\n",n); } } }  
c -1
h -1
0

intmain() { int@@ A@@ ,@@ B@@ ,@@ C@@ ,@@ d,@@ z,@@ leap@@ ,i; i=1; while(i<=@@ 5) { scanf("%d%d@@ %d@@ \n",&@@ A@@ ,&@@ B@@ ,&@@ C@@ ); if(A@@ %@@ 4==0) { if(A@@ %@@ 100==0) { if(A@@ %@@ 400==0) leap@@ =1; else leap@@ =0; } else leap@@ =1; } else leap@@ =0; if(leap@@ ) { switch(@@ B@@ ) { case1:@@ d@@ =0;@@ break; case2:@@ d=@@ 31;break; case3:@@ d=@@ 60@@ ;break; case4:@@ d=@@ 91@@ ;break; case5:@@ d=@@ 121@@ ;break; case6:@@ d=@@ 152@@ ;break; case7:@@ d=@@ 182@@ ;break; case8:@@ d=@@ 213@@ ;break; case9:@@ d=@@ 244@@ ;break; case10:@@ d=@@ 274@@ ;break; case11:@@ d=@@ 305@@ ;break; case12:@@ d=@@ 335@@ ;break; } z=@@ d+@@ C@@ ;} else { switch(@@ B@@ ) { case1:@@ d@@ =0;@@ break; case2:@@ d=@@ 31;break; case3:@@ d=@@ 59@@ ;break; case4:@@ d=@@ 90@@ ;break; case5:@@ d=@@ 120@@ ;break; case6:@@ d=@@ 151@@ ;break; case7:@@ d=@@ 181@@ ;break; case8:@@ d=@@ 212@@ ;break; case9:@@ d=@@ 243@@ ;break; case10:@@ d=@@ 273@@ ;break; case11:@@ d=@@ 304@@ ;break; case12:@@ d=@@ 334@@ ;break; } z=@@ d+@@ C@@ ;} printf("%d\n",@@ z); i=i+1; } return0; }  
c -1
h -1
intmain() { int@@ a=0,b=0,@@ n,@@ l,@@ w,@@ s; inti,j; intf@@ [1000][1000]; scanf("%d",&n); for(i=0;i<n;i++) { a=0; for(j=0;j<n;j++) { scanf("%d",&@@ f@@ [i][j]); if(f@@ [i][j]@@ ==0)@@ a=@@ a@@ +1; } if(a@@ >@@ 2)@@ l=@@ a; } for(j=0;j<n;j++) { b=0; for(i=0;i<n;i++) { if(f@@ [i][j]@@ ==0)@@ b=b@@ +1; } if(b@@ >@@ 2)@@ w=@@ b; } s=(@@ l@@ -2)*(@@ w@@ -2); printf("%d\n",s); return0; }  
c -1
h -1
0

void@@ m@@ (int,int); main() { inta,b,c,@@ i; scanf("%d",&a); for(i=0;i<a;i++) { scanf("%d%d",&@@ b,&c); m@@ (b,@@ c); } } void@@ m@@ (int@@ q@@ ,int@@ w@@ ) { inta,@@ i,j; long@@ sum; sum=0; for(i=1;i<=@@ q@@ ;i++) { for(j=1;j<=@@ w@@ ;j++) { scanf("%d",&a); if(i@@ ==1||@@ j@@ ==1||i==@@ q@@ ||j==@@ w@@ ) { sum+=@@ a; } } } printf("%ld@@ \n",@@ sum); }  
c -1
h -1
intmain() { int@@ check@@ (int@@ a); intcount@@ (intx[],int@@ w@@ ,int@@ y); intyear,month,day; scanf("%d%d%d",&@@ year,@@ &@@ month,@@ &@@ day); intk; intsum; k=@@ check@@ (year@@ ); if(k==1) { int@@ days1@@ [13]={0,31,28,31,30,31,30,31,31,30,31,30,31}; sum=@@ count@@ (@@ days1@@ ,@@ month,@@ day); printf("%d",sum); } else { int@@ days2@@ [@@ 13]={0,31,@@ 29,31,30,31,30,31,31,30,31,30,31}; sum=@@ count@@ (@@ days2@@ ,@@ month,@@ day); printf("%d",sum); } return0; } int@@ check@@ (int@@ a) { intb,@@ c,d; b=@@ a%@@ 4@@ ; c=@@ a%@@ 100; d=@@ a%@@ 400@@ ; if(b@@ !=0) { return1; } elseif(@@ c@@ ==0&&@@ d@@ !=0) { return1; } else@@ return0; } intcount@@ (intx[],int@@ w@@ ,int@@ y) { intsum=0; inti; for(i=1;i<@@ w@@ ;i++) { sum=sum+@@ x[i]; } sum=sum+@@ y; returnsum; }  
c -1
h -1
0

int@@ cnt@@ =0; void@@ slv@@ (int@@ nm@@ ,int@@ pr@@ ) { inti; if(@@ nm@@ >=@@ pr@@ ) { cnt@@ ++; if(@@ pr@@ ==1) pr@@ ++; for(i=@@ pr@@ ;i<=@@ nm@@ ;i++) { if(@@ nm@@ %i==0) { slv@@ (@@ nm@@ /i,i); } } } } intmain() { intn,i,@@ num; cin>>n; for(i=1;i<=n;i++) { cnt@@ =0; cin>>num; slv@@ (num,@@ 1); cout<<@@ cnt@@ <<endl; } }  
c -1
h -1
int@@ de@@ (int@@ s@@ ,int@@ a){ intsum=0; if(a@@ ==1)@@ return1; elseif(@@ s@@ >@@ a)@@ return0; for(inti=@@ s@@ ;i<=a;i++) if(a@@ %i==0)@@ sum=sum+@@ de@@ (i,@@ a/@@ i); returnsum; } intmain(){ intn; cin>>n; while(n@@ >0){ inta; cin>>a; cout<<@@ de@@ (2,@@ a)@@ <<endl; n--; } return0; }  
c -1
h -1
1


intmain(){ double@@ rate@@ ,@@ realrate@@ ; chara[500],b[500]; int@@ len,@@ lenb@@ ,@@ yes@@ =0; scanf("%lf",&@@ rate@@ ); scanf("%s",a); scanf("%s",b); len@@ =strlen(a); lenb@@ =strlen(b); if(@@ len@@ !=@@ lenb@@ ){ printf("error"); return0; } for(inti@@ =0;@@ a[i]@@ !='\0';i++){ if(a[i]!='@@ A'&&a[i]!='T'&&a[i]!='G'&&a[i]!='@@ C'){ printf("error"); return0; } if(@@ b[i]!='A'&&b[i]!='T'&&b[i]!='G'&&b[i]!='@@ C'){ printf("error"); return0; } if(a[i]==b[i]){ yes@@ ++; } } realrate@@ =1.0*@@ yes@@ /@@ len; if(@@ realrate@@ >=@@ rate@@ ) printf("yes"); elseprintf("no"); return0; }  
c -1
h -1
intmain() { ints@@ [100][100]; intn; scanf("%d",&n); inti,j,@@ a=0,@@ b=0; for(i=0;i<n;i++) { for(j=0;j<n;j++) { scanf("%d",&s@@ [i][j]); } } for(i=0;i<n;i++) { for(j=0;j<n;j++) { if(s@@ [i][j]==0) { a@@ +=1; break; } } } for(j=0;j<n;j++) { for(i=0;i<n;i++) { if(s@@ [i][j]==0) { b@@ +=1; break; } } } intx; x@@ =(@@ a@@ -2)*(@@ b@@ -2); printf("%d",x); return0; }  
c -1
h -1
0

intmain() { intm,@@ t@@ ,j,@@ i; scanf("%d",&m); int*@@ a,*@@ b; a=@@ (int*)malloc(sizeof(int)@@ *@@ m); b=@@ (int*)malloc(sizeof(int)@@ *@@ m); for(i=0;i<m;i++)@@ scanf("%d",&a[i]); for(i=0;i<m;i++) { b[i]=0; for(j=0;j<i;j++) { if(a[j]>=@@ a[i]) if(b[j]@@ >@@ b[i]@@ )@@ b[i]=@@ b[j]; } b[i]=@@ b[i]@@ +1; } t=0; for(i=0;i<m;i++) if(b[i]>@@ t)@@ t=b[i]; printf("%d\n",t); }  
c -1
h -1
struct@@ marks { long@@ ID; int@@ Chinese@@ ; int@@ Maths@@ ; inttotal; }@@ student[@@ 100000],@@ first@@ ,@@ second@@ ,@@ third@@ ; voidmain() { first@@ .@@ total=0; second@@ .@@ total=0; third@@ .@@ total=0; int@@ student_num@@ ,i,@@ count=0; scanf("%ld",&@@ student_num@@ ); for(i=0;i<@@ student_num@@ ;i++) { scanf("%ld%d%d",&@@ student[i].@@ ID,&@@ student[i].@@ Chinese@@ ,&@@ student[i].@@ Maths@@ ); } for(i=0;i<@@ student_num@@ ;i++) { student[i].@@ total@@ =(@@ student[i].@@ Chinese@@ +@@ student[i].@@ Maths@@ ); } for(i=0;i<@@ student_num@@ ;i++) { if(@@ student[i].@@ total>@@ first@@ .@@ total) { first=@@ student@@ [i]; } } for(i=0;i<@@ student_num@@ ;i++) { if(@@ student[i].@@ total@@ ==@@ first@@ .@@ total) {@@ count@@ ++;@@ printf("%ld%d\n",@@ student[i].@@ ID,@@ student[i].@@ total@@ );} if(count@@ >@@ 3@@ )break; } for(i=0;i<@@ student_num@@ ;i++) { if(@@ student[i].@@ total>@@ second@@ .@@ total@@ &&@@ student[i].@@ total@@ <@@ first@@ .@@ total) { second=@@ student@@ [i]; } } for(i=0;i<@@ student_num@@ ;i++) { if(count@@ >=@@ 3@@ )break; if(@@ student[i].@@ total@@ ==@@ second@@ .@@ total) {@@ count@@ ++;@@ printf("%ld%d\n",@@ student[i].@@ ID,@@ student[i].@@ total@@ );} } for(i=0;i<@@ student_num@@ ;i++) { if(@@ student[i].@@ total>@@ third@@ .@@ total@@ &&@@ student[i].@@ total@@ <@@ second@@ .@@ total) { third=@@ student@@ [i]; } } for(i=0;i<@@ student_num@@ ;i++) { if(count@@ >=@@ 3@@ )break; if(@@ student[i].@@ total@@ ==@@ third@@ .@@ total) {@@ count@@ ++;@@ printf("%ld%d\n",@@ student[i].@@ ID,@@ student[i].@@ total@@ );} } }  
c -1
h -1
0

int@@ k@@ [26@@ ][2@@ ]; intmain(){ inti,j,n,@@ m=0; scanf("%d",&n); for(i=1;i<=n;i++){ scanf("%d",&@@ k@@ [i]@@ [1]); k@@ [i]@@ [0]=1; for(j=0;j<i;j++){ if(k@@ [j]@@ [1]@@ >=@@ k@@ [i]@@ [1]@@ &&k@@ [j]@@ [0]@@ +1>@@ k@@ [i][0]@@ )@@ k@@ [i]@@ [0]=@@ k@@ [j]@@ [0]@@ +1; } if(k@@ [i][0]@@ >@@ m)@@ m=@@ k@@ [i]@@ [0]; } printf("%d",m); return0; }  
c -1
h -1
structstudent { intID; intyuwen; intshuxue; int@@ zongfen; }; intmain() { intn,i,j,@@ e; scanf("%d",&n); structstudent*@@ stu@@ =(structstudent*)malloc(sizeof(@@ structstudent@@ )*n); for(i=0;i<n;i++) { scanf("%d%d%d",&stu[i].@@ ID@@ ,&stu[i].@@ yuwen@@ ,&stu[i].@@ shuxue); stu[i].@@ zongfen@@ =stu[i].@@ yuwen+stu[i].@@ shuxue; } for(i=1;i<@@ 4;i++) { for(j=0;j<n-i;j++) { if(stu[j].@@ zongfen@@ >=@@ stu[j+1].@@ zongfen@@ ) { e=@@ stu[j].@@ zongfen; stu[j].@@ zongfen@@ =stu@@ [j+1].@@ zongfen; stu[j+1].@@ zongfen@@ =@@ e; e=@@ stu[j].@@ ID; stu[j].@@ ID@@ =stu@@ [j+1].@@ ID; stu[j+1].@@ ID@@ =@@ e; } } } printf("%d%d\n%d%d\n%d%d\n",@@ stu[@@ n-1@@ ].ID,@@ stu[@@ n-1@@ ].@@ zongfen@@ ,@@ stu[@@ n-2@@ ].ID,@@ stu[@@ n-2@@ ].@@ zongfen@@ ,@@ stu[@@ n-@@ 3].@@ ID,@@ stu[@@ n-@@ 3].@@ zongfen@@ ); return0; }  
c -1
h -1
0

intmain() { charstr@@ [300],@@ subString@@ [300],@@ replacement@@ [300]; char@@ *p,@@ *@@ q; int@@ strLen@@ ,@@ subLen@@ ,@@ repLen@@ ,@@ move@@ ,i; cin>>@@ str@@ >>@@ subString@@ >>@@ replacement@@ ; strLen@@ =strlen(@@ str); subLen@@ =strlen(@@ subString@@ ); repLen@@ =strlen(@@ replacement); p=strstr(@@ str,@@ subString@@ ); if(p@@ ==NULL) { cout<<str@@ ; return0; } q=@@ replacement@@ ; if(@@ repLen@@ >@@ subLen@@ ) { move@@ =@@ repLen@@ -@@ subLen@@ ; for(q=@@ str@@ +@@ strLen@@ +@@ move@@ ;q@@ >=@@ p+@@ repLen@@ ;q@@ --) { *@@ q=@@ *(q@@ -@@ move@@ ); } i=0; q=@@ replacement@@ ; while(i<@@ repLen@@ ) { *p@@ ++@@ =@@ *@@ q++; i++; } } elseif(@@ repLen@@ ==@@ subLen@@ ) { i=0; while(i<@@ repLen@@ ) { *p@@ ++@@ =@@ *@@ q++; i++; } } else { i=0; while(i<@@ repLen@@ ) { *p@@ ++@@ =@@ *@@ q++; i++; } move@@ =@@ subLen@@ -@@ repLen@@ ; while(@@ *(p+@@ move@@ )@@ !='\0') { *p@@ ++@@ =@@ *(p+@@ move@@ ); } *@@ p=@@ '\0'@@ ; } cout<<str@@ <<endl; return0; }  
c -1
h -1
intmain() { inti,j,k,@@ a[@@ 16],@@ m; for(i=0;@@ a[0]@@ !=@@ -1;i++) { ints=0; cin>>a[0]; if(a[0]==-1)break; for(j=1;j<@@ 16@@ ;j++) {@@ cin>>@@ a[j]; if(a[j]@@ ==0)@@ break;} for(k=0;@@ a[k]@@ !=0@@ ;k++) { m=@@ 2*@@ a[k]; for(j=0;@@ a[j]@@ !=0;j++) { if(a[j]==@@ m) s++; } } cout<<s<<endl; } return0; }  
c -1
h -1
0

intmain() { inta[100][100]; introw,col,@@ t,@@ i,j; scanf("%d%d",&row,&col); for(i=0;i<row;i++) { for(j=0;j<col;j++) {@@ scanf("%d",&a[i]@@ [j]@@ );}} row@@ -=@@ 1; col@@ -=@@ 1; t=@@ row@@ +@@ col; for(i=0;i<=@@ t;i++) {@@ for(j=0;j<=i;j++) {@@ if(j@@ >@@ row@@ ||(@@ i@@ -j@@ )>@@ col) continue; printf("%d\n",@@ a[j][i-j@@ ]@@ );}} return0; }  
c -1
h -1
intmain() { int@@ u@@ [100][100],@@ i,j,k,@@ row,col,@@ m,@@ Col@@ ; scanf("%d%d",&row,&col); for(i=0;i<row;i++){ for(j=0;j<col;j++){ scanf("%d",&@@ u@@ [i][j]); } } printf("%d\n",@@ u@@ [0][@@ 0]@@ ); for(k=1;k<@@ col@@ ;k++){ for(j=k@@ ;j>=0;j--){ if(k@@ >@@ col-1@@ ){ break;} if(k@@ -j@@ >@@ row@@ -1){ break; } printf("%d\n",@@ u@@ [k@@ -j@@ ][j]); } } for(k=@@ col@@ ;k<@@ col@@ +row@@ -2@@ ;k++){ for(j=col-1@@ ;j>=0;j--){ if(k@@ -j@@ >@@ row@@ -1){ break; } printf("%d\n",@@ u@@ [k@@ -j@@ ][j]); } } if(row@@ ==1@@ ); else{ printf("%d\n",@@ u@@ [@@ row-1@@ ][col@@ -1]); } return0; }  
c -1
h -1
1


intmain(){ inti,j,n,@@ h1@@ [100],@@ h2@@ [100],@@ c1@@ =0,@@ c2@@ =0,@@ t; char@@ d1@@ [100][10],@@ d2@@ [100][10],@@ d@@ [10]; scanf("%d",&n); for(i=0;i<n;i++){ scanf("%s",@@ d); scanf("%d",&t); if(t@@ >=60){ h1@@ [@@ c1@@ ]=t; strcpy(@@ d1@@ [@@ c1@@ ],@@ d); c1@@ ++; } else{ h2@@ [@@ c2@@ ]=t; strcpy(@@ d2@@ [@@ c2@@ ],@@ d); c2@@ ++; } } for(i=1;i<=@@ c1@@ ;i++){ for(j=0;j<@@ c1@@ -i;j++){ if(@@ h1@@ [j]<@@ h1@@ [j+1@@ ]){ t=@@ h1@@ [j]; h1@@ [j]=@@ h1@@ [j+1]; h1@@ [j+1]=t; strcpy(@@ d,@@ d1@@ [j]); strcpy(@@ d1@@ [j],@@ d1@@ [j+1]); strcpy(@@ d1@@ [j+1],@@ d); } } } for(i=0;i<@@ c1@@ ;i++){ puts(@@ d1@@ [i]); } for(i=0;i<@@ c2@@ ;i++){ puts(@@ d2@@ [i]); } return0; }  
c -1
h -1
structstudent { intnum; intyuwen; intmath; inttotal; structstudent*next; }; long@@ m,n; structstudent*creat@@ (void) { structstudent*head; structstudent*p1,*p2; m@@ =0;@@ head@@ =0; while(m@@ <n) { m=m+1; p1@@ =(structstudent*)malloc(sizeof(structstudent)); scanf("%d%d%d",&p1->num,&p1->@@ yuwen@@ ,&p1->math); p1->@@ total=@@ p1->@@ yuwen@@ +p1->@@ math; if(m@@ ==1){@@ head@@ =p1;@@ p2@@ =p1;} elsep2->next=p1; p2=p1; } p2->next@@ =0; return(head); } voidmain() { structstudent*head,*@@ p,*@@ px@@ ; inta[@@ 3@@ ][2@@ ],@@ t1@@ ,@@ t2@@ ; scanf("%ld",&n); head=creat(); p=head; a[0][@@ 1@@ ]=@@ a[1@@ ][1@@ ]=a[@@ 2@@ ][1@@ ]=0; if(head@@ !=0) do { if(p->@@ total>@@ a[2@@ ][1@@ ]) {@@ a[2@@ ][1@@ ]=@@ p->@@ total@@ ;@@ a[2@@ ][@@ 0]=@@ p->@@ num@@ ;} if(a[@@ 2@@ ][1@@ ]>@@ a[1@@ ][1@@ ]) {@@ t1@@ =@@ a[1@@ ][1@@ ];@@ a[1@@ ][1@@ ]=a[@@ 2@@ ][1@@ ];@@ a[2@@ ][1@@ ]=@@ t1@@ ;@@ t2@@ =@@ a[1@@ ][0]@@ ;@@ a[1@@ ][@@ 0]=@@ a[2@@ ][0]@@ ;@@ a[2@@ ][@@ 0]=@@ t2@@ ;} if(a[1@@ ][1@@ ]>@@ a[0][@@ 1@@ ]) {@@ t1@@ =@@ a[0][@@ 1@@ ];@@ a[0][@@ 1@@ ]=@@ a[1@@ ][1@@ ];@@ a[1@@ ][1@@ ]=@@ t1@@ ;@@ t2@@ =@@ a[0][0]@@ ;@@ a[0][@@ 0]=@@ a[1@@ ][0]@@ ;@@ a[1@@ ][@@ 0]=@@ t2@@ ;} p=p->next; } while(p@@ !=0); for(@@ t1@@ =0;@@ t1@@ <=@@ 2;@@ t1@@ ++) { printf("%d%d\n",@@ a[@@ t1@@ ][@@ 0],@@ a[@@ t1@@ ][1@@ ]); } }  
c -1
h -1
0

intnum=0; int@@ solution@@ (inta,int@@ b){ for(inti=@@ b@@ ;i<=@@ a;i++){ if(a@@ %i==0){ a=@@ a/@@ i; if(a@@ ==1)@@ num++; else@@ num=@@ solution@@ (a,@@ i); a=@@ a*@@ i; } } returnnum; } intmain(){ intn; cin>>n; for(inti=0;i<n;i++){ inta; cin>>a; num=0; cout<<@@ solution@@ (a,@@ 2)<<endl; } return0; }  
c -1
h -1
intmain() { intn,i,@@ k; inta[@@ 1000]={0}; intb[@@ 10000@@ ]={0}; scanf("%d%d",&n,&k); for(i=1;i<=n;i++) {@@ scanf("%d",&a[i]); b[@@ a[i]@@ ]=1; } for(i=1;i<=n;i++) if(@@ b[k@@ -@@ a[i]@@ ]@@ ==1&&@@ k-@@ a[i]@@ >0@@ ){@@ printf("yes");@@ return0;} printf("no"); return0; }  
c -1
h -1
0

int@@ iFind@@ (int*p,int@@ findnum@@ ) { intk,@@ sum=0; for(k=0;k<@@ 15@@ ;k++) { if(@@ *(p@@ +k@@ )==@@ findnum@@ ) sum++; } returnsum; } intmain() { inta[@@ 15],@@ temp,@@ i=0,@@ j,k,@@ *p,@@ sum=0; p=a; for(j=0;j<@@ 15@@ ;j++) a[j]=@@ -1; while(cin>>@@ temp,@@ temp@@ !=-1) { if(temp@@ !=0) { a[i]=@@ temp; i++; } else { for(k=0;k<@@ 15@@ ;k++) { sum+=@@ iFind@@ (p,@@ a[k]@@ *2@@ ); } cout<<sum<<endl; sum=0; i=0; for(j=0;j<@@ 15@@ ;j++) a[j]=@@ -1; } } return0; }  
c -1
h -1
intmain() { intn,i,@@ num[@@ 100000],@@ j,@@ grade1@@ [100000],@@ grade2@@ [100000],@@ grade@@ [100000],@@ t1@@ ,@@ t2@@ ; scanf("%d",&n); for(i=0;i<n;i++) { scanf("%d%d%d",&@@ num[i]@@ ,&@@ grade1@@ [i],&@@ grade2@@ [i]); grade@@ [i]=@@ grade1@@ [i]+@@ grade2@@ [i]; } for(j=1;j<@@ 4@@ ;j++) { for(i=0;i<n@@ -j;i++) { if(@@ grade@@ [i]>=@@ grade@@ [i+1]) { t1@@ =@@ grade@@ [i]; grade@@ [i]=@@ grade@@ [i+1]; grade@@ [i+1]=@@ t1@@ ; t2@@ =@@ num[i]; num[i]=@@ num@@ [i+1]; num@@ [i+1]=@@ t2@@ ; } } } printf("%d%d\n%d%d\n%d@@ %d",@@ num[@@ n-1@@ ],@@ grade@@ [n-1@@ ],@@ num[@@ n-2@@ ],@@ grade@@ [@@ n-2@@ ],@@ num[@@ n-@@ 3@@ ],@@ grade@@ [@@ n-@@ 3@@ ]); }  
c -1
h -1
0

intmain() { int@@ nian@@ ,@@ yue@@ ,@@ ri@@ ,@@ leap@@ ,sum; scanf("%d%d%d",&@@ nian@@ ,&@@ yue@@ ,&@@ ri@@ ); switch(@@ yue@@ ) { case1:@@ sum=0; break; case2:@@ sum=@@ 31; break; case3:@@ sum=@@ 59@@ ; break; case4:@@ sum=@@ 90@@ ; break; case5:@@ sum=@@ 120@@ ; break; case6:@@ sum=@@ 151@@ ; break; case7:@@ sum=@@ 181@@ ; break; case8:@@ sum=@@ 212@@ ; break; case9:@@ sum=@@ 243@@ ; break; case10:@@ sum=@@ 273@@ ; break; case11:@@ sum=@@ 304@@ ; break; case12:@@ sum=@@ 334@@ ; break; } sum=sum+@@ ri@@ ; if((@@ nian@@ %@@ 400==0)||(@@ nian@@ %4==0&&@@ nian@@ %100!=0@@ )) leap@@ =1; else leap@@ =0; if(leap@@ ==1&&@@ nian@@ >@@ 3@@ &&@@ yue@@ >2) sum++; cout<<sum<<endl; return0; }  
c -1
h -1
intmain() { inta[16],@@ k,@@ i,j; for(k=0;@@ ;k++) { intn@@ =-1,@@ num=0; for(i=0;i<16;i++) { cin>>a[i]; n++; if(a[i]==0) break; } if(a[0]==-1) break; for(i=0;i<n;i++) for(j=i+1;j<n;j++) { if(a[i]==2*@@ a[j]||a[j]==2*@@ a[i]) num++; } cout<<num<<endl; } return0; }  
c -1
h -1
0

intmain() { intn,k,@@ s,@@ x; scanf("%d%d",&n,&k); x=0; inta[1000]; for(inti=0;i<n;i++){ scanf("%d",&a[i]); } for(intj=0;j<@@ n-1@@ ;j++){ for(intl@@ =j+1@@ ;@@ l@@ <n;@@ l++){ s=@@ a[j]@@ +@@ a[l@@ ]; if(s@@ ==k){ x=x@@ +1;} } } if(x@@ ==0){ printf("no");} if(x@@ !=0){ printf("yes");} return0; }  
c -1
h -1
intmain() { inth@@ [25@@ ],b[@@ 25],@@ k,i,j,@@ m,n; scanf("%d",&k); for(i=0;i<k;i++) { scanf("%d",&h[i]); b[i]=1; } for(j=@@ k-1@@ ;j>=0;j--) for(m@@ =j+1@@ ;m@@ <k@@ ;m++) { if(h@@ [j]>=@@ h@@ [m]@@ &&@@ b[j]@@ <(@@ b[m@@ ]+1@@ )) b[j]=@@ b[m@@ ]+1; } for(i=0;i<@@ k-1;i++) b[i+1]=@@ (@@ b[i]@@ >b@@ [i+1@@ ])@@ ?@@ b[i]@@ :@@ b@@ [i+1]; n=@@ b[k@@ -1]; printf("%d",n); }  
c -1
h -1
0

intcount@@ (inta,int@@ n){ if(a@@ >@@ n)@@ return0; if(a==@@ n)@@ return1; int@@ p=1; inti; for(i=a@@ ;i<=@@ n;i++){ if(n@@ %i==0&&@@ i<=@@ n@@ /i@@ ){ p=p+@@ count@@ (i,@@ n@@ /i); } } return@@ p; } int@@ geshu@@ (int@@ N@@ ){ inti; int@@ s=1; for(i=2;i<=@@ sqrt(@@ N@@ );i++){ if(N@@ %i==0){ s=s+@@ count@@ (i,@@ N@@ /i); } } return@@ s; } intmain(){ intN@@ ; cin>>@@ N; intc[@@ N]; intj; for(j=0;j<@@ N@@ ;j++){ cin>>@@ c[j]; } for(j=0;j<@@ N@@ ;j++){ cout<<@@ geshu@@ (@@ c[j]@@ )<<endl; } return0; }  
c -1
h -1
intmain(){ intarray[@@ 120@@ ][@@ 120@@ ]; introw,col,@@ i,j,@@ sum; cin>>row>>col; for(i=0;i<row;i++) for(j=0;j<col;j++) cin>>array[i][j]; i=0; j=0; while(i@@ <row@@ &&j@@ <col@@ ){ cout<<array@@ [i][j]<<endl; sum@@ =i@@ +j@@ ; i++; j--; if(i==@@ row@@ ||j==@@ -1){ sum=sum+1; if(i@@ =@@ row@@ ){ i=0; j=@@ sum@@ -@@ i; if(j@@ >=@@ col@@ ){ j=col-1; i=@@ sum@@ -j@@ ; } }else{ j=col-1; i=@@ sum@@ -j@@ ; if(i<@@ 0@@ ){ i=0; j=@@ sum@@ -@@ i; } } } } return0; }  
c -1
h -1
0

intmain() { intn,k,@@ i,j; inta[@@ 1000]={0}; cin>>n>>k; for(i=1;i<=n;i++) { cin>>a[i]; } for(i=1;i<n;i++) { j=i; while(j@@ <=@@ n) { if(a[i]+a[j]==k) { cout<<"yes"; return0; } j++; } } cout<<"no"; return0; }  
c -1
h -1
intmain() { inti,n,@@ k,@@ j,@@ r=0,@@ m=0; int@@ lens@@ ,@@ lena@@ ; chars[256],@@ a[100],b[100],@@ c[100],@@ d@@ [100]; scanf("%s%s%s",@@ s,@@ a,b); lens@@ =strlen(s); lena@@ =strlen(a); for(i=0;i<@@ lens@@ ;i++) { m=0; for(k=i@@ ;k<@@ i+@@ lena@@ ;k++) { if(a[k@@ -i@@ ]!=@@ s[k]@@ )@@ m=1; } if(m==0) { for(n=0;n@@ <i@@ ;n++) c[@@ n@@ ]=@@ s[@@ n]; c[@@ n@@ ]='\0'; for(j=i@@ +@@ lena@@ ;j<@@ lens@@ ;j++) d@@ [j-i@@ -@@ lena@@ ]=@@ s[j]; d@@ [j-i@@ -@@ lena@@ ]='\0'; r@@ =1; printf("%s@@ %s%s",@@ c,@@ b,@@ d); break; } } if(r@@ ==0)@@ printf("%s",s); return0; }  
c -1
h -1
0

intmain() {@@ inta[20000]; intn,i,j,@@ l,@@ k; cin>>n; l=@@ n; for(i=0;i<n;i++) cin>>a[i]; for(i=0;i<l@@ -1;i++) { for(j=i+1;j<@@ l@@ ;j++) { if(a[i]==a[j]) {@@ for(k=j@@ ;k<@@ l@@ -1;k++) a[k]=a[k@@ +1]; j--; l@@ --; } } } cout<<a[0]; for(i=1;i<@@ l@@ ;i++) cout<<''<<@@ a[i]; return0; }  
c -1
h -1
intmain() { inta[@@ 20000],@@ i,j,k,@@ n,@@ count=0; cin>>n; for(i=0;i<n;i++) { cin>>a[i]; } for(i=1@@ ,k@@ =1@@ ;i<n;i++) { for(j=0;j<i;j++) { if(a[j]==@@ a[i]@@ )break; } if(j==i) { a[k]=@@ a[i]; k++; count++; } } cout<<a[0]; for(k=1;k<=@@ count@@ ;k++) cout<<""<<@@ a[k]; return0; }  
c -1
h -1
1


intmain() { intn,k,i,j,@@ z,@@ sum=0,@@ x=0; intsz[1000]; scanf("%d%d",&n,&k); for(i=0;i<n;i++){ scanf("%d",&@@ sz[i]@@ );} for(j=0;j<n-1;j++) for(z@@ =j+1@@ ;@@ z@@ <n;@@ z++) { sum=@@ sz@@ [j]+@@ sz[@@ z@@ ]; if(sum@@ ==k) {@@ x@@ ++;@@ }} if(x@@ ==0)@@ printf("no"); elseif(x@@ !=0)@@ printf("yes"); return0; }  
c -1
h -1
intmain() { intn,@@ num[@@ 90@@ ]={0},@@ a[@@ 20001@@ ]={0},@@ i; cin>>n; cin>>@@ a[1]; num[@@ a[1]@@ -@@ 10@@ ]++; cout<<@@ a[1]; for(i=2;i<=n;i++) { cin>>a[i]; num[@@ a[i]@@ -@@ 10@@ ]++; if(@@ num[@@ a[i]@@ -@@ 10@@ ]@@ ==1)@@ cout<<""<<a[i]; } return0; }  
c -1
h -1
0

voidmain() { intm,n,@@ i,j,k,@@ l,@@ a[100][100]; scanf("%d%d",&m,&n); for(i=0;i<m;i++) for(j=0;j<n;j++) scanf("%d",&a[i][j]); for(j=0;j<n;j++) for(l=0;@@ (@@ l<@@ m@@ )&&(@@ l@@ <=j@@ );@@ l++) printf("%d\n",@@ a[l@@ ]@@ [j@@ -l@@ ]); for(i=1;i<m;i++) for(k=0;@@ (k@@ <m@@ -i@@ )&&(@@ k@@ <@@ n)@@ ;k++) printf("%d\n",@@ a[i@@ +k@@ ][@@ n-@@ k@@ -1]); }  
c -1
h -1
main() { intn,i,@@ a,@@ x,y; scanf("%d",&n); for(i=1;i<=@@ n*@@ n@@ ;i++){@@ scanf("%d",&@@ a);@@ if(a@@ ==0){@@ x@@ =i;@@ break;} } for(i=x@@ +1;i<=@@ n*@@ n;i++) {scanf("%d",&@@ a);@@ if(a@@ ==0)@@ y@@ =i;} printf("%d",(@@ y@@ /@@ n-@@ x/@@ n-1)@@ *(@@ y%@@ n-@@ x%@@ n-1@@ )); return0; }  
c -1
h -1
0

intmain() { inti,j,n,@@ k,@@ l=0,@@ s[@@ 1000],@@ h@@ [1000][1000]; scanf("%d%d",&n,&k); for(i=0;i<n;i++) { scanf("%d",&s[i]); } for(i=0;i<n;i++) { for(j=0;j<n;j++) { h@@ [i][j]=@@ s[i]@@ +@@ s[j]; } } for(i=0;i<n;i++) { for(j=0;j<n;j++) { if(h@@ [i][j]==@@ k) { l=l@@ +1; } } } if(l@@ >0) { printf("yes"); } else { printf("no"); } return0; }  
c -1
h -1
intmain() { intn,k,i,j,@@ c,@@ a[@@ 1000],b[1000]; scanf("%d%d",&n,&k); j=0; c=0; for(i=0;i<n;i++){ scanf("%d",&a[i]); b[j]=@@ k-@@ a[i]; j++; } for(j=0;j<n;j++){ for(i=0;i<n;i++){ if(b[j]@@ ==@@ a[i]@@ ){ c++; } } } if(c@@ !=0){ printf("yes"); } else{ printf("no"); } return0; }  
c -1
h -1
1


intmain() { float@@ n; chara[501@@ ]={'\0'},@@ b[@@ 501@@ ]={'\0'}; inti,@@ sum=0,@@ m=0; scanf("%f",&@@ n); getchar(); gets(a); gets(b); if(strlen(a)!=strlen(b@@ )) printf("error\n"); else { for(i=0;a[i]!='\0';i++) { if(a[i]@@ =='@@ A'||a[i]=='T'||a[i]=='@@ C'||@@ a[i]=='@@ G') { if(b[i]@@ =='@@ A'||@@ b[i]=='@@ T'||@@ b[i]=='@@ C'||@@ b[i]=='@@ G') { if(a[i]==b[i]) sum++; } } else { printf("error\n"); m=1; break; } } if(m==0) { if(((@@ float)@@ sum/@@ strlen(a)@@ )>@@ n) printf("yes\n"); else printf("no\n"); } } return0; }  
c -1
h -1
intmain() { inti,j,@@ a[100][100],@@ n,@@ s=0,@@ S@@ ,@@ h1@@ =0,@@ h2@@ =0,@@ l1@@ =0,@@ l2@@ =0; scanf("%d",&n); for(i=0;i<n;i++) for(j=0;j<n;j++) { scanf("%d",&a[i][j]); if(a[i][j]==0&&@@ s@@ ==0) { l1@@ =i+1; h1@@ =j+1; s=1; } } for(i=n-1;i>=0;i--) for(j=n-1;j>=0;j--) if(a[i][j]==0&&@@ s) { l2@@ =i; h2@@ =j; s=0; } S@@ =(@@ l2@@ -@@ l1@@ )*(@@ h2@@ -@@ h1@@ ); printf("%d\n",@@ S@@ ); return0; }  
c -1
h -1
0

intmain() { doublen; int@@ w@@ =0,@@ g=0; char@@ v@@ [100],@@ c[100]; scanf("%lf",&n); scanf("%s",@@ v@@ ); scanf("%s",c); char@@ A@@ ,@@ T@@ ,@@ G@@ ,@@ C@@ ; if(strlen(@@ v@@ )!=strlen(@@ c@@ )) { printf("error"); } else { for(inti=0;i<=@@ strlen(@@ v@@ )@@ -1;i++) { if(((@@ v@@ [i]!='A')&&(@@ v@@ [i]!='G')@@ &&(@@ v@@ [i]!='C')&&(@@ v@@ [i]!='T')@@ )||((@@ c@@ [i]!='A')&&(@@ c@@ [i]!='G')@@ &&(@@ c@@ [i]!='C')&&(@@ c@@ [i]!='T')@@ )) {@@ g@@ =1; printf("error"); break; } elseif(@@ v@@ [i]==@@ c@@ [i]) { w@@ ++; } } double@@ l@@ =1.0*@@ w@@ /@@ strlen(@@ v@@ ); if((@@ l>@@ n@@ )&&(@@ g@@ ==0)@@ ){printf("yes");} elseif((@@ l@@ <=@@ n@@ )&&(@@ g@@ ==0)@@ ){@@ printf("no");} } return0; }  
c -1
h -1
structstudent { inta; intb; intc; int@@ d; structstudent*next; }; intn; structstudent*creat@@ (int@@ i) { structstudent*head,*p1,*p2; n=0; p1=p2@@ =(structstudent*)malloc(sizeof(structstudent)); scanf("%d%d%d",&p1->@@ a@@ ,&p1->@@ b@@ ,&p1->@@ c); p1->@@ d=@@ p1->@@ c+@@ p1->@@ b; head=NULL; while(n@@ <i@@ -1) { n=n+1; if(n@@ ==1)head=p1; elsep2->next=p1; p2=p1; p1@@ =(structstudent*)malloc(sizeof(structstudent)); scanf("%d%d%d",&p1->@@ a@@ ,&p1->@@ b@@ ,&p1->@@ c); p1->@@ d=@@ p1->@@ c+@@ p1->@@ b; } p2->next=NULL; return(head); } void@@ del@@ (@@ structstudent*@@ ahead@@ ,int@@ num) {@@ structstudent*p1,*p2; p1=@@ ahead@@ ; while(@@ num@@ !=@@ p1->@@ d@@ &&@@ p1->next@@ !=NULL) {@@ p2@@ =p1;@@ p1=p1->next@@ ;} if(num@@ ==@@ p1->@@ d) { if(@@ p1@@ ==@@ ahead@@ ){@@ printf("%d%d\n",@@ p1->@@ a,@@ p1->@@ d@@ );@@ ahead@@ =@@ p1->next@@ ;} else{@@ printf("%d%d\n",@@ p1->@@ a,@@ p1->@@ d@@ );@@ p2->next=@@ p1->next@@ ;} } } voidprint@@ (structstudent*head@@ ) { inti; structstudent*@@ p; for(i=0;i<3;i++) { p=head; intmax=@@ p->@@ d; while(p@@ ->next@@ !=NULL) { p=p->next; if(max<@@ p->@@ d) max=@@ p->@@ d; } del@@ (@@ head@@ ,max); } } voidmain() { inti; scanf("%d",&@@ i); structstudent*@@ ahead@@ ; ahead@@ =@@ creat@@ (i); print(@@ ahead@@ ); }  
c -1
h -1
0

intmain(void) { intn,k,i,j,@@ s[@@ 1000]; scanf("%d%d",&n,&k); for(i=0;i<n;i++) scanf("%d",&s[i]); for(i=0;i<n;i++) for(j=i+1;j<n;j++) if((@@ s[i]@@ +@@ s[j]@@ )==@@ k) { printf("yes\n"); return0; } printf("no\n"); return0; }  
c -1
h -1
intmain() { struct@@ br { charid[10]; intage; }@@ *@@ patients@@ ,@@ t; intn,i,j; scanf("%d",&n); patients@@ =(struct@@ br@@ *)malloc(sizeof(struct@@ br@@ )*n); for(i=0;i<n;i++){ scanf("%s%d",@@ patients@@ [i].@@ id,@@ &@@ patients@@ [i].age); } for(i=0;i<n;i++){ for(j=n-1@@ ;j>i@@ ;j--){ if(@@ patients@@ [j].age@@ >=60@@ && patients@@ [j].age@@ >@@ patients@@ [j-1@@ ].age){ t=@@ patients@@ [j]; patients@@ [j]=@@ patients@@ [j-1]; patients@@ [j-1]=@@ t; } } } for(i=0;i<n;i++){ printf("%s\n",@@ patients@@ [i].id); } return0; }  
c -1
h -1
0

intmain() { intfenjie@@ (intx,int@@ y); inta,@@ n,@@ i; cin>>n; for(i=1;i<=n;i++) { cin>>a; cout<<@@ fenjie@@ (a,@@ 2)<<endl; } return0; } intfenjie@@ (intx,inty) { intb,@@ i,@@ count@@ =1; if(x==1) return0; if(x==@@ 2) return1; b=@@ sqrt(@@ (double)@@ x); for(i=y@@ ;i<=@@ b;i++) { if(x%i==0) { count+=@@ fenjie@@ (x/i,i); } } returncount; }  
c -1
h -1
structStudent { intnumber; intmath; intchinese; inttotal; structStudent@@ *next; }; voidmain() { inti=0,@@ n,@@ max; structStudent@@ *@@ linkHead@@ ,@@ *@@ linkTail@@ ,@@ *@@ student@@ ,*@@ ppre@@ ,*@@ pmax@@ ,*@@ premax@@ ; scanf("%d",&n); linkHead@@ =@@ linkTail@@ =NULL; while(i<n) { student@@ =(struct@@ Student@@ *)malloc(@@ Len@@ ); scanf("%d%d%d",&@@ student@@ ->@@ number,@@ &@@ student@@ ->@@ math@@ ,&@@ student@@ ->@@ chinese); student@@ ->@@ total=@@ student@@ ->@@ math+@@ student@@ ->@@ chinese; student@@ ->next=NULL; if(@@ linkTail@@ ==NULL) linkHead@@ =@@ linkTail@@ =@@ student@@ ; else { linkTail@@ ->next=@@ student@@ ; linkTail@@ =@@ student@@ ; } i++; } i=0; while(i<@@ 3) { student@@ =@@ linkHead@@ ; ppre@@ =@@ student@@ ; max=0; pmax@@ =@@ linkHead@@ ; premax@@ =@@ linkHead@@ ; while(@@ student@@ !=NULL) { if(@@ student@@ ->@@ total@@ >max) { max=@@ student@@ ->@@ total; pmax@@ =@@ student@@ ; premax@@ =@@ ppre@@ ; } ppre@@ =@@ student@@ ; student@@ =@@ student@@ ->next; } printf("%d%d\n",@@ pmax@@ ->@@ number,@@ pmax@@ ->@@ total); if(@@ pmax@@ ==@@ linkHead@@ ) linkHead@@ =@@ student@@ ->next; else@@ premax@@ ->next=@@ pmax@@ ->next; i++; } }  
c -1
h -1
0

structstu { inta; intb; intc; int@@ d; structstu*next; }; intn; structstu*@@ creat@@ (void) { structstu@@ *head,*p1,*p2; inti=1; head=NULL; p2@@ =p1@@ =(struct@@ stu@@ *)malloc(LEN); scanf("%d%d%d",&p1->@@ a@@ ,&p1->@@ b@@ ,&p1->@@ c); p1->@@ d=@@ p1->@@ b+@@ p1->@@ c; while(1) { if(i==1) head=p1; else p2->next=p1; p2=p1; if(i>=@@ n@@ )break; p1=(struct@@ stu@@ *)malloc(LEN); scanf("%d%d%d",&p1->@@ a@@ ,&p1->@@ b@@ ,&p1->@@ c); p1->@@ d=@@ p1->@@ b+@@ p1->@@ c; i++; } p2->next=NULL; return(head); } voidmain() { structstu*@@ z@@ ,*@@ p3@@ ,*@@ p[@@ 100007@@ ],*@@ q; inti=0,@@ j,@@ m; scanf("%d",&n); z=@@ creat@@ (); p3@@ =p@@ [i]=@@ z; while(@@ p3@@ !=NULL) { i++; p[i]=@@ p3@@ ->next; p3@@ =p@@ [i]; } m=i; q=@@ p@@ [0]; for(i=0;i<@@ 4;i++) { for(j=0;j<@@ m-1@@ -i;j++) { if(p@@ [j]@@ ->@@ d@@ >=@@ p@@ [j+1]@@ ->@@ d) { q=@@ p@@ [j]; p@@ [j]=@@ p@@ [j+1]; p@@ [j+1]=@@ q; } } } for(i=1;i<@@ 4;i++) { printf("%d%d\n",@@ p@@ [m@@ -i@@ ]@@ ->@@ a,@@ p@@ [m@@ -i@@ ]@@ ->@@ d); } }  
c -1
h -1
intmain() { inti,j,@@ a,b,@@ n,@@ x=0,@@ y=0,@@ l1,l2,@@ q1@@ ,@@ q2@@ ,@@ s; scanf("%d",&n); for(i=1;i<=@@ n*@@ n;i++) { scanf("%d",&a); if(a==0) { x@@ =i; break;} } for(j=1;j<=@@ n*@@ n-@@ x;j++) { scanf("%d",&b); if(b@@ ==0) y=@@ x@@ +j@@ ; } l1@@ =@@ x/@@ n+1; if(x@@ %n@@ !=0) { l1@@ =@@ x/@@ n+1; q1=@@ x%@@ n; } else { l1@@ =@@ x/@@ n; q1=@@ n; } if(y%@@ n@@ !=0) { l2@@ =@@ y@@ /@@ n+1; q2@@ =@@ y%@@ n; } else {@@ l2@@ =@@ y@@ /n; q2@@ =@@ n; } s=(@@ l2@@ -@@ l1@@ -1)*(@@ q2@@ -@@ q1@@ -1); printf("%d",s); return0; }  
c -1
h -1
0

intmain() { inta[100@@ ]={0}; intb,@@ d,@@ e,f,@@ g,@@ i,j,k,@@ l,@@ m,n,@@ p; scanf("%d",&n); scanf("%d",&@@ p); printf("%d",@@ p); a[p@@ ]++; for(i=2;i<=n;i++) {scanf("%d",&@@ p); if(a[@@ p@@ ]@@ ==0){@@ printf("%d",@@ p@@ );@@ a[p@@ ]@@ ++;} } return@@ 7@@ ; }  
c -1
h -1
struct@@ inf { int@@ nu@@ ; intb; intc; intsum; }a[@@ 100010@@ ],@@ tmp; intmain() { intn,i,j,k,@@ tmp1@@ ,@@ tmp2@@ ; charc; scanf("%d",&n); for(i=1;i<=n;i++) { a[i-1@@ ].@@ sum=0; scanf("%d%d%d",&@@ a[i-1@@ ].@@ nu@@ ,&@@ a[i-1@@ ].@@ b@@ ,&@@ a[i-1@@ ].@@ c); a[i-1@@ ].@@ sum=@@ a[i-1@@ ].@@ b+@@ a[i-1@@ ].@@ c; } for(i=0;i<3;i++) { tmp1@@ =i;@@ tmp2@@ =@@ a[i].@@ sum; for(j=i+1;j<n;j++) { if(a[j]@@ .@@ sum>@@ tmp2@@ ) { tmp2@@ =@@ a[j].@@ sum; tmp1@@ =j; } } tmp=@@ a[i]; a[i]=@@ a[@@ tmp1@@ ]; a[@@ tmp1@@ ]=@@ tmp; } for(i=0;i<3;i++) printf("%d%d\n",@@ a[i].@@ nu@@ ,@@ a[i].@@ sum); return0; }  
c -1
h -1
0

intmain() { intn,i,j,@@ s=0,@@ e,@@ z=0; inta[100@@ ],@@ c[100],@@ x@@ [100]; char@@ b[100@@ ][@@ 10],@@ d@@ [100][10],@@ y@@ [100][10]; char@@ f@@ [100][10]; scanf("%d",&n); for(i=0;i<n;i++){ scanf("%s%d",@@ b[i]@@ ,&@@ a[i]); } for(i=0;i<n;i++){ if(a[i]@@ >=60){ c[@@ s@@ ]=a[i]; strcpy(@@ d[@@ s@@ ],@@ b[i]); s++; }else{ x[@@ z@@ ]=a[i]; strcpy(@@ y[@@ z@@ ],@@ b[i]); z@@ ++; } } for(i=0;i<@@ s@@ ;i++){ for(j=1;j<@@ s@@ -i;j++){ if(c@@ [j-1]@@ <@@ c@@ [j]){ e=@@ c[j]; c[j]=@@ c@@ [j-1]; c@@ [j-1]=@@ e; strcpy(@@ f@@ [j],@@ d@@ [j]); strcpy(@@ d@@ [j],@@ d@@ [j-1]); strcpy(@@ d@@ [j-1@@ ],@@ f@@ [j]); } } } for(i=0;i<@@ s@@ ;i++){ printf("%s\n",@@ d[i]); } for(i=0;i<@@ z@@ ;i++){ printf("%s\n",@@ y@@ [i]); } return0; }  
c -1
h -1
intmain() { intn,@@ u@@ [@@ 1000][1000],@@ i,j,@@ chang@@ =0,@@ bian@@ =0,@@ sum; scanf("%d",&n); for(i=0;i<n;i++){ for(j=0;j<n;j++){ scanf("%d",&@@ u@@ [i][j]); } } for(i=0;i<n;i++){ for(j=0;j<n;j++){ if(@@ u@@ [i][j]==0){ chang@@ =@@ chang@@ +1; } } if(@@ chang@@ !=0){ break; } } for(j=0;j<n;j++){ for(i=0;i<n;i++){ if(@@ u@@ [i][j]==0){ bian@@ =@@ bian@@ +1; } } if(@@ bian@@ !=0){ break; } } sum=(@@ chang@@ -2)*(@@ bian@@ -2); printf("%d",sum); return0; }  
c -1
h -1
0

intmain() { int@@ height@@ [25],@@ amount@@ [25@@ ]={0}; intn,i,j,@@ max; scanf("%d",&n); for(i=0;i<n-1;i++) { scanf("%d",&@@ height@@ [i]); } scanf("%d",&@@ height@@ [@@ n-1]); amount@@ [n-1@@ ]=1; for(i=n-2;i>=0;i--) { max=0; for(j=i;j<@@ n;j++) { if(@@ amount@@ [j]@@ >max@@ &&@@ height@@ [j]<=@@ height@@ [i]) { max=@@ amount@@ [j]; } } amount@@ [i]=@@ max+1; } for(i=0;i<n;i++) { if(@@ amount@@ [i]>max) { max=@@ amount@@ [i]; } } printf("%d\n",max); return0; }  
c -1
h -1
intmain() { intn,@@ b[@@ 1000][1000],@@ i,k,@@ s; int@@ x1,@@ x2,@@ y1,@@ y2@@ ; scanf("%d",&n); for(i=0;i<n;i++) { for(k=0;k<n;k++) { scanf("%d",&(@@ b[i]@@ [k]@@ )); } } for(i=0;i<n;i++) { for(k=0;k<n;k++) { if(b[i]@@ [k]@@ ==0&&@@ b@@ [i+1@@ ][k@@ ]==@@ b[i]@@ [k]@@ &&@@ b[i]@@ [k+1@@ ]==@@ b[i]@@ [k]) { x1=i; y1@@ =k; } if(b[i]@@ [k]@@ ==0&&@@ b@@ [i-1@@ ][k@@ ]==@@ b[i]@@ [k]@@ &&@@ b[i]@@ [k-1@@ ]==@@ b[i]@@ [k]) { x2=i; y2@@ =k; } } } s=(@@ x2-x1-1)*(y2-y1-1); printf("%d",s); return0; }  
c -1
h -1
0

intmain() { inta[100][100]; introw,col; cin>>row>>col; for(inti=0;i<row;i++) for(intj=0;j<col;j++) cin>>a[i][j]; for(intp@@ =0;p@@ <=@@ row+col-2@@ ;p++) { for(inti=0;i<=@@ p@@ ;i++) { int@@ j=@@ p@@ -@@ i; if(i>@@ row-1@@ ||j@@ >@@ col-1@@ ||j@@ <0) continue; cout<<a[i][j]<<endl; } } return0; }  
c -1
h -1
intmain() { intsz[100][100]; intn,i,j,@@ l,@@ k; intsum=0; scanf("%d",&n); for(i=1;i<=n;i++){ for(j=1;j<=n;j++){ scanf("%d",&(@@ sz@@ [i][j]@@ )); } } for(i=1;i<=n;i++){ l=0; k=0; sz[i]@@ [0]=@@ 255@@ ; sz[i]@@ [n@@ +1]=@@ 255@@ ; for(j=1;j<=n;j++){ if((@@ sz@@ [i][j]@@ -@@ sz[i]@@ [j-1]@@ )*(@@ sz@@ [i][j]@@ -@@ sz[i]@@ [j+1@@ ])@@ >0){ l@@ =j@@ -@@ l; k++; } } if(k==@@ 2@@ ){ sum+=@@ (@@ l@@ -1); } } printf("%d",sum); return0; }  
c -1
h -1
0

intmain(){ intk,@@ n,@@ i,@@ m,@@ x,y,@@ z,@@ c; c=0; scanf("%d",&n); scanf("%d",&k); inta[n]; for(i=0;i<n;i++){ scanf("%d",&(@@ a[i]@@ )); } for(i=0;i<n;i++){ for(x=0;x@@ <n;@@ x@@ ++){ if(x==@@ i){ continue; } if(a[x@@ ]+@@ a[i]==@@ k){ c=1; } } } if(c@@ ==0) { printf("no"); } else { printf("yes"); } return0; }  
c -1
h -1
intmain() { while(1) { intnum[@@ 16@@ ]={0}; cin>>@@ num[@@ 0]; if(num@@ [0]@@ ==-1) break; intsum@@ =1; for(;@@ ;@@ sum@@ ++) { cin>>@@ num[@@ sum@@ ]; if(@@ num[@@ sum@@ ]==0) { sum@@ --; break; } } int@@ twice@@ =0; for(inti=0;i<@@ sum@@ ;i++) { for(intj=i+1@@ ;j<=@@ sum@@ ;j++) { if((@@ num@@ [j]==2*@@ num[i]@@ )||(@@ num@@ [i]==@@ 2*@@ num[j]@@ )) twice@@ ++; } } cout<<@@ twice@@ <<endl; } cin.get(); cin.get(); return0; }  
c -1
h -1
0

struct@@ Books { intnum; charauthor[26]; }a[@@ 1000]; intmain() { intn; inti,j; intx; intmax=0; char@@ letter@@ ='A'; intb[@@ 26]={0}; scanf("%d",&n); for(i=0;i<n;i++) { scanf("%d%s",&@@ a[i].@@ num,@@ a[i].@@ author); } for(i=0;i<n;i++) { for(j=0;;j++) { if(a[i].@@ author@@ [j]>=@@ 65@@ &&@@ a[i].@@ author@@ [j]<=@@ 90@@ ) { x=@@ a[i].@@ author@@ [j]; b[@@ x@@ -65]++; }else{ break; } } } for(i=0;i<26;i++) { if(b[i]>max) { max=b[i]; letter@@ =i+65; } } printf("%c\n%d\n",@@ letter@@ ,max); for(i=0;i<n;i++) { for(j=0;j<26;j++) { if(a[i].@@ author@@ [j]==@@ letter@@ ) { printf("%d\n",@@ a[i].@@ num); } } } return0; }  
c -1
h -1
intmain() { intn; scanf("%d",&n); intnum[@@ 20001]; memset(@@ num,@@ 0,@@ 20001@@ ); inti,j; intcount@@ =1; intnumber; for(i=1;i<=n;i++) { scanf("%d",&@@ number); if(i==1) { num[@@ 0]=@@ number; } else { for(j=1;j<=@@ count@@ ;j++) { if(@@ number@@ ==@@ num@@ [j-1]) { break; } else {@@ } if(j==@@ count@@ ) { count++; num[@@ count@@ -1@@ ]=@@ number; } else {@@ } } } } for(i=1;i<@@ count@@ ;i++) { printf("%d",@@ num@@ [i@@ -1]); } printf("%d",@@ num[@@ count@@ -1]); return0; }  
c -1
h -1
0

structbook { intnum; charauthor@@ [27]; }@@ book[1000]; intmain() { intn,i,@@ a,@@ max=0,@@ alp@@ [26]={0}; char*@@ j; scanf("%d",&n); for(i=0;i<n;i++) { scanf("%d%s",&book[i].num,@@ book[i].author); int@@ len=strlen(@@ book[i].author); for(j=@@ book[i].author@@ ;j<@@ (@@ book[i].author@@ +@@ len@@ );j++) { intx@@ =*@@ j; ++@@ *(@@ alp@@ +@@ x@@ -65@@ ); if(*(@@ alp@@ +@@ x@@ -65@@ )@@ >max) { max@@ =*(@@ alp@@ +@@ x@@ -65@@ ); a=@@ x; } } } printf("%c\n%d\n",@@ a,@@ max); for(i=0;i<n;i++) { int@@ len=strlen(@@ book[i].author); for(j=@@ book[i].author@@ ;j<@@ (@@ book[i].author@@ +@@ len@@ );j++) { if(@@ (int)@@ *@@ j==@@ a) printf("%d\n",book[i].@@ num); } } return0; }  
c -1
h -1
intm,n,@@ i,@@ a[100@@ ],b[100],c[@@ 200]; void@@ in@@ () { cin>>m>>n; for(i=0;i<m@@ ;++i) cin>>a[i]; for(i=0;i<n@@ ;++i) cin>>b[i]; } voidsort@@ () { sort(@@ &@@ a[0]@@ ,&@@ a[0]@@ +@@ m); sort(@@ &@@ b[0]@@ ,&@@ b[0]@@ +@@ n); } void@@ add@@ () { for(i=0;i<m@@ ;++i) c[i]=a[i]; for(i=m;i<@@ m+@@ n;++@@ i) c[i]=b[i-@@ m]; } voidout@@ () { cout<<c[@@ 0]; for(i=1;i<@@ m+@@ n;++@@ i) cout<<""<<@@ c[i]; } intmain() { in@@ (); sort@@ (); add@@ (); out@@ (); return0; }  
c -1
h -1
0

intmain(){ char@@ m[@@ 600@@ ],@@ z@@ [256],@@ t@@ [256]; scanf("%s%s%s",@@ m,@@ z,@@ t); int@@ len1=strlen(@@ m); int@@ len2=strlen(@@ z); inti,j,@@ c@@ =1,@@ flag=0; for(i=0;i<len1;i++){ intk=0; if(m@@ [i]==@@ z@@ [k]@@ ){ j=i; for(k=1;k<@@ len2@@ ;k++){ if(m@@ [i+1@@ ]==@@ z@@ [k]@@ ){ i++; c++; } else{ break; } } } if(c==@@ len2){ break; } } if(c==@@ len2){ for(i=0;i<j@@ ;i++){ printf("%c",@@ m[i]); } printf("%s",@@ t); for(i=j@@ +len2@@ ;i<@@ len1@@ ;i++){ printf("%c",@@ m[i]); } } else{ printf("%s\n",@@ m); } return0; }  
c -1
h -1
intmain() { intn,i,j,@@ x1,y1,x2,y2@@ ; cin>>n; ints@@ [100][100@@ ]={0}; for(i=1;i<=n;i++) for(j=1;j<=n;j++) cin>>@@ s[i]@@ [j]; for(i=1;i<=n;i++) { s[i]@@ [0]=@@ 255@@ ; s[i]@@ [n@@ +1]=@@ 255@@ ; } for(j=1;j<=n;j++) { s[0]@@ [j]=@@ 255@@ ; s[@@ n+1@@ ]@@ [j]=@@ 255@@ ; } for(i=1;i<=n;i++) for(j=1;j<=n;j++) { if(s@@ [i][j]==0&&@@ s[i]@@ [j+1]@@ ==0&&@@ s@@ [i+1][j]@@ ==0) { x1=i; y1=j; } if(s@@ [i][j]==0&&@@ s[i]@@ [j-1]@@ ==0&&@@ s@@ [i-1][j]@@ ==0) { x2=i; y2=j; } } cout<<(@@ x2-x1-1)*(y2-y1-1); return0; }  
c -1
h -1
0

voidmain() { int@@ *p,@@ i,k,@@ m,n,@@ t,@@ sum@@ [100]={0},@@ j,@@ q,@@ x; scanf("%d@@ \n@@ %"@@ ,&@@ k); p=@@ (int*)malloc(@@ 10000@@ *sizeof(int)); for(x=0;x@@ <k;@@ x++) { scanf("%d%d",&m,&n); for(i=0;i<m@@ *@@ n;i++) scanf("%d",p@@ +i); for(j=0;j<n;j++) sum[@@ x@@ ]=sum[@@ x@@ ]+@@ (@@ *(p+j)@@ )+@@ (@@ *(p+@@ n@@ *(@@ m-1)@@ +j)); for(q@@ =1;@@ q@@ <m-1@@ ;q++) sum[@@ x@@ ]=sum[@@ x@@ ]+@@ (@@ *(p+@@ q@@ *@@ n@@ ))@@ +(@@ *(p+@@ q@@ *@@ n+@@ n-1@@ )); } for(x=0;x@@ <k;@@ x++) printf("%d\n",@@ sum[@@ x@@ ]); }  
c -1
h -1
void@@ main(@@ void) { intk,@@ a[@@ 25@@ ],i,j,@@ max,@@ b[@@ 25@@ ]={@@ 1@@ }; scanf("%d",&k); for(i=0;i<k;i++) { scanf("%d",&a[i]); } for(i=1;i<k;i++) { max=1; for(j=0;j<i;j++) { if(a[j]>=a[i]&&@@ b[j]@@ +1@@ >=@@ max) max=@@ b[j]@@ +1; } b[i]=@@ max; } max=0; for(i=0;i<k;i++) { if(b[i]>max) max=b[i]; } printf("%d",max); }  
c -1
h -1
0

intmain(){ intn,i,@@ m,@@ k,@@ b,@@ g; scanf("%d%d",&n,&k); inta[n]; for(i=0;i<n;i++){ scanf("%d",&a[i]); } for(i=1;i<n;i++){ for(m=0;m<@@ i@@ ;m++){ if(a[i]+@@ a[m@@ ]==k){ b=@@ k; printf("yes"); return0; } } if(i==@@ n-1@@ &&@@ b@@ !=@@ k){ printf("no"); } } return0; }  
c -1
h -1
inta[1000][1000]; voidmain() { intn; scanf("%d",&n); inti,j; for(i=0;i<n;i++){ for(j=0;j<n;j++){ scanf("%d",&a[i][j]); } } int@@ a1@@ =-1,@@ a2@@ =-1,@@ b1@@ =-1,@@ b2@@ =-1; for(i=0;i<n;i++){ for(j=0;j<n;j++){ if((i@@ ==0&&@@ j@@ ==0&&@@ a[i][j]@@ ==0)||(@@ a[i][j]@@ ==0&&@@ a[i+1@@ ][j]@@ ==0&&@@ a[i]@@ [j+1]@@ ==0&&@@ a[i-1]@@ [j]@@ !=0&&@@ a[i][j-1]@@ !=0@@ )){ a1@@ =i;@@ b1@@ =j; break; } } } for(i=n-1;i>=0;i--){ for(j=n-1@@ ;j>=0;j--){ if((@@ i==@@ n-1@@ &&j@@ ==@@ n-1@@ &&@@ a[i][j]@@ ==0)||(@@ a[i][j]@@ ==0&&@@ a[i+1@@ ][j]@@ !=0&&@@ a[i]@@ [j+1]@@ !=0&&@@ a[i-1]@@ [j]@@ ==0&&@@ a[i][j-1]@@ ==0)@@ ){ a2@@ =i;@@ b2@@ =j; break; } } } intsum=0; for(i=@@ a1@@ +1;i<@@ a2@@ ;i++){ for(j=@@ b1@@ +1@@ ;j<@@ b2@@ ;j++){ if(a[i][j]@@ !=0)@@ sum+=@@ 1; } } printf("%d\n",sum); }  
c -1
h -1
0

intnum@@ =1,@@ i,@@ factor@@ ; voidf@@ (int@@ factor@@ ,int@@ x) { for(;@@ factor@@ *@@ factor@@ <=@@ x@@ ;@@ factor@@ ++) { if(x%@@ factor@@ ==0) { num++; f(@@ factor@@ ,@@ x/@@ factor@@ ); } } } intmain() { inta,@@ n; cin>>n; while(n--) { cin>>a; f(@@ 2,@@ a); cout<<num<<endl; num@@ =1; } return0; }  
c -1
h -1
structbook { charnum[@@ 500]; chars[@@ 50]; structbook*next; }; voidmain() { structbook*@@ head; structbook*@@ p1,*p2; intm,@@ mi@@ ,@@ i,j,k,@@ max,@@ found@@ ; int@@ aut@@ [26]={0}; scanf("%d",&m); p1=(structbook@@ *)malloc(LEN); scanf("%s%s",@@ p1->@@ num,p1->@@ s); for(i=0;i<strlen(@@ p1->@@ s@@ );i++) aut@@ [@@ (@@ p1->@@ s)@@ [i]@@ -'A']++; p1->next=NULL; head=@@ p2=p1; for(@@ mi@@ =@@ 2;@@ mi@@ <=@@ m;@@ mi@@ ++) { p1=(structbook@@ *)malloc(LEN); scanf("%s%s",@@ p1->@@ num,p1->@@ s); for(i=0;i<strlen(@@ p1->@@ s@@ );i++) aut@@ [@@ (@@ p1->@@ s)@@ [i]@@ -'A']++; p2->next=p1; p2=p1; } p2->next=NULL; max=0; for(i=0;i<26;i++) if(@@ aut@@ [i]>max) { k=i; max=@@ aut@@ [i]; } printf("%c\n",@@ k@@ +65); printf("%d\n",@@ aut@@ [k]); p1=head; for(i=1;i<=m;i++) { found@@ =0; for(j=0;j<strlen(@@ p1->@@ s@@ );j++) if((@@ p1->@@ s)@@ [j]==@@ k@@ +65) { found@@ =1; break; } if(@@ found@@ ==1)@@ printf("%s\n",@@ p1->num); p1=p1->next; } }  
c -1
h -1
0

intmain() { intn; scanf("%d",&n); inti,j,k; inta,b; ints@@ [100][100]; intsum; for(i=0;i<=n-1;i++) { scanf("%d%d",&a,&b); for(j=0;j<=@@ a@@ -1;j++) { for(k=0;k<=@@ b@@ -1;k++) { scanf("%d",&@@ s[j]@@ [k]); } } sum=0; for(k=0;k<=@@ b@@ -1;k++) { sum=sum+@@ s[@@ 0][@@ k@@ ]; } for(j=1;j<=@@ a@@ -1;j++) { sum=sum+@@ s[j]@@ [b@@ -1]; } for(k=0;k<=@@ b@@ -2@@ ;k++) { sum=sum+@@ s[@@ a@@ -1@@ ][k@@ ]; } for(j=1;j<=@@ a@@ -2@@ ;j++) { sum=sum+@@ s[j]@@ [0]; } printf("%d\n",sum); } return0; }  
c -1
h -1
int@@ p@@ (intn,int@@ heightLimit@@ ,int*@@ missileHeight@@ ,int@@ missileNum@@ ) { inta; intb; if(n==@@ missileNum@@ -1) if(@@ missileHeight@@ [n@@ ]<=@@ heightLimit@@ ) return1; else return0; else if(@@ missileHeight@@ [n@@ ]<=@@ heightLimit@@ ) { a@@ =1@@ +p@@ (n@@ +1,@@ missileHeight@@ [n@@ ],@@ missileHeight@@ ,@@ missileNum@@ ); b=@@ p@@ (n@@ +1,@@ heightLimit@@ ,@@ missileHeight@@ ,@@ missileNum@@ ); return@@ a@@ >b@@ ?@@ a@@ :@@ b; } else return@@ p@@ (n@@ +1,@@ heightLimit@@ ,@@ missileHeight@@ ,@@ missileNum@@ ); } voidmain() { intn,i,j; int*@@ missileHeight@@ ; int@@ highest@@ =-1; scanf("%d",&n); missileHeight@@ =@@ (int*)malloc(sizeof(int)*n); for(i=0;i<n;i++) { scanf("%d",&(@@ missileHeight@@ [i]@@ )); if(@@ missileHeight@@ [i]>@@ highest@@ )@@ highest@@ =@@ missileHeight@@ [i]; } printf("%d",@@ p@@ (@@ 0,@@ highest@@ ,@@ missileHeight@@ ,@@ n@@ )); }  
c -1
h -1
0

intmain() { intn,k,i,j,@@ sz[@@ 1000],@@ m; scanf("%d%d",&n,&k); for(i=0;i<n;i++){ scanf("%d",@@ (@@ &@@ sz[i]@@ )); } for(i=0;i<n@@ -2@@ ;i++){ for(j=i+1;j<@@ n-1@@ ;j++){ for(m@@ =j+1@@ ;m@@ <n;m++){ if(sz[i]+sz@@ [j]+@@ sz[m@@ ]==k){ printf("yes"); return0; } } } } printf("no"); return0; }  
c -1
h -1
intmain() { intn,i,j; cin>>n; for(i=1;i<=n;i++) { introw,@@ line@@ ,@@ a,b,@@ A[@@ 101][101]; intsum=0; cin>>row@@ >>@@ line@@ ; for(a@@ =1;@@ a@@ <=row@@ ;a@@ ++) for(b@@ =1;@@ b@@ <=@@ line@@ ;@@ b++) cin>>@@ A@@ [a@@ ][b@@ ]; for(a@@ =1;@@ a@@ <=row@@ ;a@@ ++) sum+=@@ A@@ [a@@ ][1@@ ]; for(@@ b=@@ 2;@@ b@@ <=@@ line@@ ;@@ b++) sum+=@@ A[@@ row@@ ][b@@ ]; for(@@ a=@@ row@@ -1;@@ a@@ >=1@@ ;a@@ --) sum+=@@ A@@ [a@@ ][@@ line@@ ]; for(@@ b=@@ line@@ -1;@@ b@@ >=@@ 2;@@ b@@ --) sum+=@@ A@@ [1@@ ][b@@ ]; cout<<sum<<endl; } }  
c -1
h -1
0

intmain() { int@@ bookno@@ [100]; charauthor@@ [100][@@ 26]; int@@ numOfauthor@@ [26]={0}; int@@ nbook@@ ,@@ max=0,@@ maxno@@ ; char@@ maxauthor@@ ; cin>>@@ nbook@@ ; inti,j; for(i=0;i<@@ nbook@@ ;i++) { cin>>@@ bookno@@ [i]; cin.get(); cin.getline@@ (*(@@ author@@ +i)@@ ,@@ 26@@ ); } for(i=0;i<@@ nbook@@ ;i++) for(j=0;@@ author@@ [i][j]@@ !='\0';j++) { numOfauthor@@ [@@ author@@ [i][j]@@ -'A']++; } for(i=0;i<26;i++) { if(@@ numOfauthor@@ [i]>max) { max=@@ numOfauthor@@ [i]; maxno@@ =i; } } maxauthor@@ =@@ maxno@@ +@@ 'A'@@ ; cout<<@@ maxauthor@@ <<endl; cout<<@@ numOfauthor@@ [@@ maxno@@ ]<<endl; for(i=0;i<@@ nbook@@ ;i++) for(j=0;@@ author@@ [i][j]@@ !='\0';j++) { if(@@ author@@ [i][j]==@@ maxauthor@@ ) cout<<@@ bookno@@ [i]<<endl; } return0; }  
c -1
h -1
intmain(){ doublen,@@ w; inti,@@ m,@@ z@@ =0,@@ e=0; chara[@@ 600@@ ],b[@@ 600]; scanf("%lf",&n); scanf("%s%s",a,b); m=strlen(a); for(i=0;i<m;i++){ if(a[i]==b[i]@@ )@@ z@@ ++; if((a[i]!='@@ A'&&a[i]!='T'&&a[i]!='C'&&a[i]!='G')||(b[i]!='A'&&b[i]!='T'&&b[i]!='C'&&b[i]!='@@ G')){ printf("error"); e=1; break; } } w@@ =1.0*@@ z@@ /@@ m; if(e@@ ==0){ if(w@@ >=@@ n)@@ printf("yes"); elseprintf("no"); } return0; }  
c -1
h -1
0

voidmain() { inti,n,@@ j,@@ max; scanf("%d",&n); structstudent { intnum; intyuwen; intshuxue; structstudent*next; }; structstudent*head,*@@ ppre@@ ,*@@ p0@@ ,*@@ p3; structstudent*p1,*p2; head@@ =p1@@ =p2@@ =(structstudent*)malloc(sizeof(structstudent)); for(i=0;i<n;i++) { scanf("%d%d%d",&p1->num,&p1->@@ yuwen@@ ,&p1->@@ shuxue); p1@@ =(structstudent*)malloc(sizeof(structstudent)); p2->next=p1; p2=p1; } p2->next=NULL; for(j=0;j<3;j++) { ppre@@ =p1@@ =head; max=@@ p1->@@ yuwen@@ +p1->@@ shuxue; p1=p1->next; for(i=0;i<n@@ -j;i++) { if((@@ p1->@@ yuwen@@ +p1->@@ shuxue@@ )@@ >max) { max=@@ p1->@@ yuwen@@ +p1->@@ shuxue; p0@@ =p1; p3=@@ ppre@@ ; } ppre@@ =p1; p1=p1->next; } printf("%d%d\n",@@ p0->@@ num,@@ max); p3@@ ->next=@@ p0@@ ->next; } }  
c -1
h -1
intmain() { int@@ state@@ =0; intn,@@ t,@@ i,j,@@ m,@@ m1,@@ m2@@ ; int@@ leftx@@ ,@@ lefty@@ ,@@ rightx@@ ,@@ righty@@ ; scanf("%d",&n); for(i=0;i<n;i++){ for(j=0;j<n;j++){ scanf("%d",&t); if(t@@ ==0){ if(@@ state@@ ==0){ leftx@@ =i; lefty@@ =j; state@@ =1; }else{ rightx@@ =i; righty@@ =j; } } } } m1@@ =(@@ rightx@@ -@@ leftx@@ -1); m2@@ =(@@ righty@@ -@@ lefty@@ -1); m=@@ m1@@ *@@ m2@@ ; printf("%d",m); return0; }  
c -1
h -1
0

intnum@@ =1; int@@ sushu@@ (intn) { inti,@@ sum=0; for(i=1;i<=@@ sqrt(n@@ *1.0@@ );i++) if(n%i==0) sum++; if(sum@@ ==1) return1; else return0; } void@@ fenjie@@ (inti,int@@ k) { int@@ mid@@ ,j; mid@@ =@@ sqrt(@@ k@@ *1.0@@ ); for(j=i;j<=@@ mid@@ ;j++) { if(@@ sushu@@ (k@@ )) break; else { if(k@@ %j==0) { num++; fenjie@@ (@@ j,@@ k@@ /j@@ ); } } } } intmain() { intn,i; inta[100]; cin>>n; for(i=0;i<n;i++) cin>>a[i]; for(i=0;i<n;i++) { fenjie@@ (2,@@ a[i]); cout<<num<<endl; num@@ =1; } return0; }  
c -1
h -1
inta[@@ 20010@@ ]; voidmain() { intn,i,@@ tmp@@ ,@@ k,@@ ii@@ =0; scanf("%d",&n); for(i=0;i<n;i++) { scanf("%d",&@@ tmp@@ ); intj; int@@ flag=0; for(j=0;j<i;j++) { if(a[j]==@@ tmp@@ ) { flag=1; } } if(flag==0) { a[@@ ii@@ ]=@@ tmp; ii@@ ++; } } for(k=0;k<@@ ii@@ -1;k++) { printf("%d",@@ a[k]); } printf("%d",a[@@ ii@@ -1]); }  
c -1
h -1
0

intmain() { introw,col; cin>>row>>col; intarray[@@ row][col]; for(inti=0;i<row;i++) for(intj=0;j<col;j++) cin>>@@ *(*(@@ array@@ +i)@@ +j); for(inti=0;i<=@@ row+col-2@@ ;i++) for(intj=0;j<=@@ i;j++) if(j@@ <row@@ &&i@@ -j@@ <col@@ )@@ cout<<@@ *(*(@@ array@@ +j)@@ +i-j@@ )<<endl; return0; }  
c -1
h -1
struct@@ Patient { charid[10]; intage; intnum; }@@ patient@@ [100]; intmain() { intn; inta,b,c; scanf("%d",&n); inti,j,@@ k=0; for(i=0;i<=n-1;i++) { scanf("%s%d",&@@ patient@@ [i].@@ id,@@ &@@ patient@@ [i].age); patient@@ [i].@@ num@@ =i; } ints@@ [100]; for(i=0;i<=@@ 99@@ ;i++) { s[i]=@@ i; } for(i=0;i<=@@ n-2;i++) { for(j=0;j<=@@ n-2@@ ;j++) { if(@@ patient@@ [@@ s[j]@@ ].age@@ <@@ patient@@ [s@@ [j+1]@@ ].age) { a=@@ s[j]; s[j]=@@ s@@ [j+1]; s@@ [j+1]=@@ a; } } } for(i=0;i<=n-1;i++) { if(@@ patient@@ [i].age>=60) k=k+1; } for(i=0;i<=@@ k@@ -2;i++) { for(j=0;j<=@@ k@@ -2@@ ;j++) { if(s@@ [j]>@@ s@@ [j+1]@@ &&@@ patient@@ [@@ s[j]@@ ].age@@ ==@@ patient@@ [s@@ [j+1]@@ ].age) { a=@@ s[j]; s[j]=@@ s@@ [j+1]; s@@ [j+1]=@@ a; } } } for(i=k@@ ;i<=@@ n-2;i++) { for(j=k@@ ;j<=@@ n-2@@ ;j++) { if(s@@ [j]>@@ s@@ [j+1]) { a=@@ s[j]; s[j]=@@ s@@ [j+1]; s@@ [j+1]=@@ a; } } } for(i=0;i<=n-1;i++) { printf("%s\n",@@ patient@@ [@@ s[i]@@ ].id); } return0; }  
c -1
h -1
0

intmain(){ chars[@@ 257@@ ],@@ ss@@ [257],@@ r@@ [257]; scanf("%s",s); scanf("%s",@@ ss@@ ); scanf("%s",@@ r); char@@ left@@ [257]; inti,@@ t,@@ k,@@ j; int@@ ls@@ =strlen(s); int@@ lss@@ =strlen(@@ ss@@ ); for(i=0;i<@@ ls@@ ;i++){ t=0; for(j=0;j<@@ lss@@ ;j++){ if(@@ ss@@ [j]==@@ s[i+j@@ ]){ t++; } } if(t==@@ lss@@ ){ for(k=0;k<@@ ls@@ -i@@ -@@ lss@@ ;k++){ left@@ [k]=@@ s@@ [k@@ +i@@ +@@ t@@ ]; } left@@ [k]@@ ='\0'; s[i]@@ ='\0'; break; } } printf("%s",s); if(t==@@ lss@@ ){ printf("%s",@@ r); printf("%s",@@ left@@ ); } return0; }  
c -1
h -1
intmain() { structpatient{ charID@@ [10@@ ];@@ inta; }@@ p@@ [100],@@ pr@@ ; int@@ np@@ ,i,@@ k; scanf("%d",&@@ np@@ ); for(i=0;i<@@ np@@ ;i++){ scanf("%s%d",@@ p[i].@@ ID,&@@ p[i].@@ a); } for(i=0;i<@@ np@@ ;i++){ for(k=@@ np@@ -1@@ ;k@@ >@@ i@@ ;k@@ --){ if(p@@ [k].@@ a@@ >@@ p@@ [k-1@@ ].@@ a@@ &&p@@ [k].@@ a@@ >=60){ pr@@ =p@@ [k]@@ ;p@@ [k]=@@ p@@ [k-1]@@ ;p@@ [k-1@@ ]=@@ pr@@ ; } } printf("%s\n",@@ p[i].@@ ID); } return0; }  
c -1
h -1
0

intmain() { intn,k,i,j,@@ p=1; intsz[1000]; scanf("%d%d\n",&n,&@@ k); scanf("%d",&sz@@ [0]); for(i=1;i<n;i++){ scanf("%d",&sz[i]); } for(i=0;i<n;i++){ for(j=i;j<@@ n;j++){ if(sz[i]+sz@@ [j]==k){ printf("yes"); return0; } } } printf("no"); return0; }  
c -1
h -1
intmain() { intn,i; scanf("%d",&n); structpatient { charID[10]; intage; structpatient*next; structpatient*@@ pre@@ ; }; structpatient@@ *p,*@@ head,*@@ q@@ ,*@@ m@@ ,*@@ temp; p=@@ (structpatient@@ *)malloc(sizeof(structpatient@@ )); head=@@ p; temp@@ =(struct@@ patient*)malloc(sizeof(structpatient)); for(i=0;i<n;i++) { scanf("%s%d",@@ p->@@ ID,&@@ p->@@ age); if(i!=@@ n-1) { p->next@@ =(struct@@ patient*)malloc(sizeof(structpatient)); p->next@@ ->@@ pre@@ =p; p->next@@ ->next=NULL; p=p->next; } } for(p=head@@ ;p!=NULL;p=p->next) { for(q=@@ p->next@@ ;q@@ !=NULL;@@ q=q@@ ->next) { if((@@ p->age@@ <@@ q@@ ->age@@ )&&(@@ q@@ ->age@@ >=60@@ )) { for(m=@@ q@@ ;m@@ !=@@ p@@ ;@@ m=m@@ ->@@ pre@@ ) { temp@@ ->age=@@ m@@ ->@@ age; m@@ ->age=@@ m@@ ->@@ pre@@ ->@@ age; m@@ ->@@ pre@@ ->age=@@ temp->@@ age; strcpy(@@ temp->@@ ID,@@ m@@ ->@@ ID); strcpy(@@ m@@ ->@@ ID,@@ m@@ ->@@ pre@@ ->@@ ID); strcpy(@@ m@@ ->@@ pre@@ ->@@ ID,@@ temp->@@ ID); } } } } for(p=head@@ ;p!=NULL;p=p->next) printf("%s\n",p->@@ ID); return0; }  
c -1
h -1
0

intmain() { intk; scanf("%d",&k); while(k@@ --) { intm,n; scanf("%d%d",&m,&n); inta[@@ 101][101]; for(inti=0;i<m;i++) for(intj=0;j<n;j++) scanf("%d",&a[i][j]); intsum=0; for(inti=0;i<m;i++) sum=sum+@@ a[i][0]+@@ a[i][n-1]; for(inti=1;i<@@ n-1;i++) sum=sum+@@ a[0]@@ [i]+@@ a[m-1]@@ [i]; printf("%d\n",sum); } return0; }  
c -1
h -1
intmain() { chara[@@ 300],b[@@ 300@@ ],c[@@ 300]; inti,j; gets(a); gets(b); gets(c); for(i=1;@@ a[i-1]@@ !='\0';i++) { if(a@@ [i-1@@ ]==@@ b[0]) { for(j=1@@ ;@@ b@@ [j-1]@@ !='\0';j++) { if(a@@ [i-1@@ +j@@ -1]@@ !=@@ b@@ [j-1]) break; } if(b@@ [j-1]@@ !='\0') continue; else { for(j=i@@ ;@@ b@@ [j-i@@ ]@@ !='\0';j++) a@@ [j-1]=@@ c@@ [j-i@@ ]; } break; } else continue; } puts(@@ a); return0; }  
c -1
h -1
0

intfenjie@@ (intx,int@@ y){ inti,@@ s=0; if(x==@@ y)@@ return1; for(i=y@@ ;i<@@ x;i++) if(x@@ %i==0)@@ s+=@@ fenjie@@ (x/i,i); if(i==@@ x)@@ s++; return@@ s; } intmain(){ intn,i; cin>>n; for(@@ ;n@@ >0@@ ;n@@ --){ cin>>@@ i; cout<<@@ fenjie@@ (i,@@ 2)<<endl; } return0; }  
c -1
h -1
intmain() { intn,i,j,@@ q=0,@@ a[@@ 20000]; cin>>n; for(i=0;i<n-@@ q@@ ;i++) { cin>>a[i]; for(j=0;j<i;j++) { if(a[i]==a[j]) { q++; i--; } } } for(i=0;i<n-@@ q@@ -1;i++) cout<<a[i]<<""; cout<<a[@@ n-@@ q@@ -1]; return0; }  
c -1
h -1
0

struct@@ jisuan@@ { intnum; charname[26]; }@@ book[1000]; intmain() { inti,j,@@ m,n,@@ k,@@ e; intcount@@ [26]={0},@@ author@@ [26]; scanf("%d",&m); for(i=0;i<26;i++) author@@ [i]=@@ 65@@ +@@ i; for(i=0;i<m;i++){ scanf("%d",&@@ book[i].@@ num); gets(@@ book[i].name); } for(i@@ ='A'@@ ;i<=@@ 'Z'@@ ;i++){ for(j=0;j<m;j++){ n=strlen(@@ book[j].@@ name); for(k=0;k<n;k++){ if(i==@@ book[j].@@ name@@ [k]) count@@ [i-@@ 65@@ ]++; } } } for(i=0;i<@@ 25@@ ;i++){ if(count@@ [i]>@@ count@@ [i+1@@ ]){ e=@@ count@@ [i]; count@@ [i]=@@ count@@ [i+1]; count@@ [i+1]=@@ e; e=@@ author@@ [i]; author@@ [i]=@@ author@@ [i+1]; author@@ [i+1]=@@ e; } } printf("%c\n%d\n",@@ author@@ [25],@@ count@@ [25@@ ]); for(i=0;i<m;i++){ n=strlen(@@ book[i].name); for(k=0;k<n;k++){ if(book[i].@@ name@@ [k]==@@ author@@ [25@@ ]) printf("%d\n",book[i].@@ num); } } return0; }  
c -1
h -1
voidmain() { inta,@@ b[100@@ ][100@@ ]={@@ 1@@ }; scanf("%d\n",&@@ a); inti,j; for(i=0;i<=@@ a@@ -1;i++) { for(j=0;j<=@@ a@@ -1;j++) { scanf("%d",&@@ b[i]@@ [j]); }; } int@@ s=0,@@ l=0; for(i=0;i<=@@ a@@ -1;i++) { for(j=0;j<=@@ a@@ -1;j++) { s=s+@@ b[i]@@ [j]; } if(s@@ ==@@ 255@@ *(a@@ -2@@ )) { l=l@@ +1; } s=0; } int@@ t=0,@@ k=0; for(j=0;j<=@@ a@@ -1;j++) { for(i=0;i<=@@ a@@ -1;i++) { t=t+@@ b[i]@@ [j]; } if(t==@@ 255@@ *(a@@ -2@@ )) { k=k+1; } t=0; } int@@ sum=@@ l@@ *@@ k; printf("%d",sum); }  
c -1
h -1
0

intmain() { inti,@@ a,b,@@ c,@@ sum=0; scanf("%d%d%d",&a,&b,&c); if(b==1) sum=0; elseif(b==@@ 2) sum=@@ 31; else { sum=@@ 31; if((@@ a%@@ 400==0)||(@@ a%4==0&&a%100!=0@@ )) sum=sum+@@ 29; else@@ sum=sum+@@ 28; for(i=@@ 3@@ ;i<@@ b;i++) { if(i==@@ 3||i==5||i==7||i==8||i==@@ 10) sum=sum+@@ 31; if(i==@@ 4||i==6||i==9||i==11) sum=sum+@@ 30; } } sum=sum@@ +c; printf("%d",sum); return0; }  
c -1
h -1
intmain() { intsz[@@ ROW@@ ][@@ COL@@ ]; inti,j,n,@@ a=0,@@ s1,@@ s2,@@ e1@@ ,@@ e2@@ ,sum; scanf("%d",&n); for(i=0;i<n;i++){ for(j=0;j<n;j++){ scanf("%d",&sz[i][j]); if(sz@@ [i][j]==0&&@@ a@@ ==0){ s1@@ =i; s2@@ =j; a=1; } if(sz@@ [i][j]==0){ e1@@ =i; e2@@ =j; } } } sum=(@@ e1@@ -@@ s1@@ -1)*(@@ e2@@ -@@ s2@@ -1); printf("%d",sum); return0; }  
c -1
h -1
0

intmain(){ inti,@@ m=0; float@@ k=0,@@ n; chara[@@ 502@@ ],b[@@ 502@@ ]; scanf("%f",&@@ n); scanf("%s",a); scanf("%s",b); for(i=0;i<(@@ strlen(a)@@ );i++){ if(strlen(a)!=strlen(b@@ )){ m=0; break; } if(a[i]@@ =='@@ A'||a[i]=='T'||a[i]=='@@ C'||@@ a[i]=='@@ G'){ m++; if(a[i]==b[i]){ k++; } }else{ m=0; break; } } if(m@@ ==0){ printf("error"); }else{ if((@@ k/@@ (@@ strlen(a)@@ *@@ 1@@ .@@ 00@@ ))@@ >n){ printf("yes"); }else{ printf("no"); } } return0; }  
c -1
h -1
structstudent { charid[10]; int@@ ch; int@@ ma; }; intmain(intargc,char*argv[]) { intn,i,@@ max,@@ sec@@ ,@@ min@@ ,@@ total@@ [100000]; scanf("%d",&n); structstudentstu[100000]; for(i=0;i<n;i++) { scanf("%s%d%d",@@ stu[i].@@ id,@@ &@@ stu[i].@@ ch@@ ,&stu[i].@@ ma@@ ); total@@ [i]=@@ stu[i].@@ ch@@ +stu[i].@@ ma; } max=0; for(i=0;i<n;i++) { if(@@ total@@ [i]>@@ total@@ [max@@ ]) max=i; } printf("%s%d\n",@@ stu[@@ max@@ ].id,@@ total@@ [max@@ ]); for(i=0;i<n;i++) { if(@@ total@@ [i]==@@ total@@ [max@@ ]) { total@@ [i]=0; break; } } sec@@ =0; for(i=0;i<n;i++) { if(@@ total@@ [i]>@@ total@@ [@@ sec@@ ]) sec@@ =i; } printf("%s%d\n",@@ stu[@@ sec@@ ].id,@@ total@@ [@@ sec@@ ]); for(i=0;i<n;i++) { if(@@ total@@ [i]==@@ total@@ [@@ sec@@ ]) { total@@ [i]=0; break; } } min@@ =0; for(i=0;i<n;i++) { if(@@ total@@ [i]>@@ total@@ [@@ min@@ ]) min@@ =i; } printf("%s%d\n",@@ stu[@@ min@@ ].id,@@ total@@ [@@ min@@ ]); return0; }  
c -1
h -1
0

intmain() { intyear,month,day,@@ days@@ =0,@@ i=1; int@@ month_str1@@ [@@ 12]={31,@@ 28,31,30,31,30,31,31,30,31,30,31@@ },@@ month_str2@@ [@@ 12]={31,29,31,30,31,30,31,31,30,31,30,31}; cin>>year>>@@ month>>@@ day; if((year%4==0&&year%100!=0@@ )||@@ year%400==0) while(i@@ !=@@ month@@ ) { days@@ +=@@ month_str2@@ [i-1]; i++; } else while(i@@ !=@@ month@@ ) { days@@ +=@@ month_str1@@ [i-1]; i++; } cout<<@@ days@@ +day; return0; }  
c -1
h -1
intmain() { inta[@@ 100000],@@ i,j,k,@@ l,@@ m,n; scanf("%d",&n); l=0; for(i=1;i<=n;i++) { scanf("%d",&a[i]); } for(i=1;i<=n;i++) { m=0; for(k=1;k<@@ i;k++) { if(a[k]@@ !=@@ a[i]) m=m+1; } if(m==@@ i@@ -1) {@@ l=l@@ +1; if(l@@ ==1) printf("%d",@@ a[i]@@ );@@ else@@ printf("%d",@@ a[i]);} } return0; }  
c -1
h -1
0

intarray[@@ N@@ ][@@ N]; intn,m; intsum@@ (inta[@@ N@@ ][@@ N@@ ]) { intsum=0; for(inti=0;i<n;i++) sum+=*(@@ a[0]@@ +i); for(inti=1;i<@@ m;i++) sum+=*(@@ a[i]+@@ (n-1@@ )); for(inti=@@ n-2;i>=0;i--) sum+=*(@@ a[m-1]@@ +i); for(inti=@@ m@@ -2@@ ;i>=1;i--) sum+=*(@@ a[i]+@@ 0); returnsum; } intmain() { intk; cin>>k; for(inti=0;i<k;i++) { cin>>m>>n; for(intj=0;j<m;j++) for(intk=0;k<@@ n;k++) cin>>array@@ [j]@@ [k]; cout<<sum@@ (@@ array@@ )<<endl; } return0; }  
c -1
h -1
intmain() { intyear,month,day,@@ i,@@ n; scanf("%d%d%d",&year,&month,&day); for(i=1@@ ,@@ n@@ =0;i<@@ month;i++) { if(i==1||i==3||i==5||i==7||i==8||i==@@ 10) { n=n+31; } elseif(i==@@ 2) { if((year%4==0&&year%100!=0)||(year%400==0)) { n=n+@@ 29; } else { n=n+@@ 28; } } else { n=n+@@ 30; } } n=n+@@ day; printf("%d\n",n); return0; }  
c -1
h -1
0

intmain() { intn,i,j; scanf("%d",&n); struct@@ point { charid[10]; intage; } points@@ [100],@@ news@@ [100],@@ tmp; for(i=0;i<n;i++) { scanf("%s%d",&@@ points@@ [i].id,&@@ points@@ [i].age); } for(i=n-1;i>=0;i--) { for(j=0;j<i;j++) { if(@@ points@@ [j+1@@ ].age@@ >=60&&@@ points@@ [j+1@@ ].age@@ >@@ points@@ [j].age@@ ) { tmp=@@ points@@ [j+1]; points@@ [j+1]=@@ points@@ [j]; points@@ [j]=@@ tmp; } } } for(i=0;i<n;i++) { printf("%s\n",@@ points@@ [i].id); } return0; }  
c -1
h -1
intmain() { ints[@@ 25@@ ],i,j,@@ a[@@ 25],@@ n,@@ max; cin>>n; for(i=0;i<n;i++) { cin>>a[i]; s[i]@@ =1; max=0; for(j=0;j<i;j++) if(a[j]>=a[i]&&@@ s[j]@@ >max)max=@@ s[j]; s[i]@@ +=@@ max; } max=0; for(i=0;i<n;i++) if(max<@@ s[i]@@ )max=@@ s[i]; cout<<@@ max; return0; }  
c -1
h -1
0

intmain(){ intn,k; scanf("%d%d",&n,&k); inta[1000]; intb[@@ 1000]; intsz[@@ 1000][1000]; inti,j; for(i=0;i<n;i++){ scanf("%d",&a[i]); b[i]=@@ a[i]; } intm=0; for(i=0;i<n;i++){ for(j=0;j<n;j++){ sz@@ [i][j]=@@ a[i]+@@ b[j]; if(sz@@ [i][j]==@@ k){ m=1; } } } if(m@@ ==1){ printf("yes"); } if(m@@ ==0){ printf("no"); } return0; }  
c -1
h -1
intmain() { inta[1000][1000]; inti,j,@@ star1@@ ,@@ star2@@ ,@@ end1@@ ,@@ end2@@ ,@@ b,@@ n; intf@@ =0; scanf("%d",&n); for(i=0;i<n;i++){ for(j=0;j<n;j++){ scanf("%d",&a[i][j]); if(a[i][j]==0&&@@ f@@ ==0){ star1@@ =i+1; star2@@ =j+1; f=1; } if(a[i][j]@@ ==0){ end1@@ =i-1; end2@@ =j@@ -1; } } } b@@ =(@@ end1@@ -@@ star1@@ +1)*(@@ end2@@ -@@ star2@@ +1); printf("%d",@@ b); return0; }  
c -1
h -1
0

intmain() { intn,k,@@ i,j; scanf("%d%d",&n,&k); int*@@ num=@@ (int*)malloc(n*sizeof(int)); for(i=0;i<n;i++)@@ scanf("%d",@@ num@@ +i); for(i=0;i<=@@ n@@ /2@@ ;i++) for(j=0;j<n;j++) {if(@@ *(@@ num@@ +i)@@ +*(@@ num@@ +j)@@ ==@@ k){@@ printf("yes@@ \n@@ ");@@ return0;} else@@ continue;} printf("no\n"); return0; }  
c -1
h -1
intnum@@ (int@@ m@@ [],int@@ i,@@ int@@ k); voidmain() { intk,i,@@ t,@@ ans=0; intm@@ [25]; scanf("%d",&k); for(i=0;i<k;i++) scanf("%d",&@@ m[i]); for(i=0;i<=@@ k;i++){ t=@@ num@@ (m,@@ i,@@ k); if(t@@ >@@ ans@@ )@@ ans=@@ t; } printf("%d",@@ ans); } intnum@@ (int@@ m@@ [],int@@ i,@@ int@@ k) { int@@ re@@ =0,@@ j,@@ t; if(i==@@ k)@@ return(0); for(j=i+1;j<=@@ k;j++) if(m@@ [j]<=@@ m@@ [i]) { t=@@ num@@ (m,@@ j,@@ k); if(t@@ >@@ re@@ )@@ re@@ =t; } re@@ ++; return(@@ re); }  
c -1
h -1
0

intmain() { inta,b; cin>>a>>@@ b; voidf@@ (int@@ x); f(@@ a); cout<<"@@ "; f(@@ b); cout<<endl; } voidf@@ (intx) { inti,@@ t@@ ,j,@@ str@@ [100]={0}; for(i=1;i<=@@ x;i++) cin>>@@ str@@ [i]; for(i=1;i<=@@ x@@ -1;i++) { for(j=1;j<=@@ x@@ -i;j++) if(str@@ [j]>@@ str@@ [j+1]) t=@@ str@@ [j],@@ str@@ [j]=@@ str@@ [j+1],@@ str@@ [j+1]=t; } for(i=1;i<=@@ x@@ -1;i++) cout<<str@@ [i]@@ <<""; cout<<str@@ [x@@ ]; return; }  
c -1
h -1
intmain() { intdays@@ [13]={0,31,28,31,30,31,30,31,31,30,31,30,31}; inta,b,c,@@ d@@ ,j; scanf("%d%d%d",&a,&b,&c); if ((@@ a%@@ 4==0)&&(@@ a%100!=0@@ )||(@@ a%400==0)) days@@ [2@@ ]++; d=@@ c; for(j=1;j<@@ b;j++) d@@ +=@@ days@@ [j]; printf("%d\n",@@ d); if ((@@ a%@@ 4==0)&&(@@ a%100!=0@@ )||(@@ a%400==0)) return0; }  
c -1
h -1
0

intmain() { inta[16@@ ],i,j,@@ k; while(1) { intn=0,@@ sum=0; for(i=0;;i++) { cin>>a[i]; if(a[i]==-1) break; else { if(a[i]!=0) n++; else break; } } if(a[0]==-1) break; for(j=0;j<n;j++) { for(k=0;k<n;k++) { if(a[j]==2*@@ a[k]) sum++; } } cout<<sum<<endl; } return0; }  
c -1
h -1
main() { inti,n,@@ t@@ [3@@ ]={0},@@ u@@ [3@@ ]={0}; structstudent { long@@ intID; intmath; intchinese; inta; }stu[100000]; scanf("%d",&n); for(i=0;i<n;i++) { scanf("%d%d%d",&stu[i].@@ ID@@ ,&stu[i].@@ math@@ ,&stu[i].@@ chinese); stu[i].@@ a=@@ stu[i].@@ math@@ +stu[i].@@ chinese; } for(i=0;i<n;i++) { if(stu[i].@@ a@@ >@@ t@@ [0]) {@@ t@@ [0]=@@ stu[i].@@ a;@@ u@@ [0]=@@ i@@ ;} } for(i=0;i<n;i++) { if(i==@@ u@@ [0]@@ )continue; if(stu[i].@@ a@@ >@@ t@@ [1@@ ]) {@@ t@@ [1]=@@ stu[i].@@ a;@@ u@@ [1]=@@ i@@ ;} } for(i=0;i<n;i++) { if(i==@@ u@@ [0]@@ ||i==@@ u@@ [1]@@ )continue; if(stu[i].@@ a@@ >@@ t@@ [2@@ ]) {@@ t@@ [2]=@@ stu[i].@@ a;@@ u@@ [2]=@@ i@@ ;} } printf("%d%d\n%d%d\n%d%d\n",@@ stu[@@ u@@ [0]@@ ].ID,@@ t[@@ 0],@@ stu[@@ u@@ [1]@@ ].ID,@@ t@@ [1@@ ],@@ stu[@@ u@@ [2]@@ ].ID,@@ t@@ [2@@ ]); }  
c -1
h -1
0

intmain(){ int@@ pd@@ =1,@@ i=0; double@@ x,@@ xg@@ =0,@@ c,@@ f; char@@ m[@@ 501],@@ z@@ [501]; scanf("%lf%s%s",&@@ x,&@@ m,&@@ z); c=strlen(@@ m@@ );@@ f@@ =strlen(@@ z); if(c@@ !=@@ f@@ ){@@ pd@@ =0;} for(i=0;i<c@@ ;i++){ if((@@ m@@ [i]!='A'&&@@ m@@ [i]!='G'&&@@ m@@ [i]!='C'&&@@ m@@ [i]!='T')@@ ||(@@ z@@ [i]!='A'&&@@ z@@ [i]!='G'&&@@ z@@ [i]!='C'&&@@ z@@ [i]!='T')@@ )@@ pd@@ =0; if(m@@ [i]==@@ z@@ [i])@@ xg@@ ++; } if(@@ pd@@ ==0)@@ printf("error"); elseif((@@ xg@@ /@@ c)@@ >=@@ x)@@ printf("yes"); elseprintf("no"); return0; }  
c -1
h -1
int@@ sort@@ (inta[],int@@ k); intmain() { intn; scanf("%d",&n); inti,j; inta[@@ 25]; for(i=0;i<n;i++) { scanf("%d",&a[i]); } int@@ d[@@ 25]; for(i=n-1;i>=0;i--) { d@@ [i]=1; for(j=i+1;j<n;j++) { if(a[i]>=@@ a[j]&&@@ d@@ [i]<@@ d@@ [j]@@ +1) d[i]=@@ d@@ [j]+1; } } intmax=0; for(i=0;i<n;i++) if(d@@ [i]>max) max=@@ d[i]; printf("%d",max); }  
c -1
h -1
0

intmain() { intn,k,i,j,@@ flag; inta[1000]; cin>>n>>k; flag=0; for(i=0;i<n;i++) { cin>>a[i]; for(j=0;j<i;j++) if(a[j]@@ +@@ a[i]==@@ k)@@ flag=1; } if(flag@@ ==1)@@ cout<<"yes@@ "<<endl; else@@ cout<<"no@@ "<<endl; return0; }  
c -1
h -1
intmain(){ intn,@@ sum; inti,j,@@ starti@@ ,@@ startj@@ ,@@ endi@@ ,@@ endj@@ ; inta[@@ 10@@ ][10]; scanf("%d",&n); for(i=0;i<n;i++) for(j=0;j<n;j++) scanf("%d",&a[i][j]); starti@@ =@@ -1; startj@@ =@@ -1; for(i=0;i<n;i++) { for(j=0;j<n;j++) if(a[i][j]==0) { starti@@ =i; startj@@ =j; break; } if(@@ starti@@ >=0@@ )break; } endi@@ =@@ starti@@ ; endj@@ =@@ startj@@ ; while(@@ a[@@ starti@@ ][@@ endj@@ +1@@ ]@@ ==0)@@ endj@@ ++; while(@@ a[@@ endi@@ +1@@ ][@@ startj@@ ]@@ ==0)@@ endi@@ ++; printf("%d",(@@ endi@@ -@@ starti@@ -1)*(@@ endj@@ -@@ startj@@ -1)); return0; }  
c -1
h -1
0

intmain(){ intn; intk; inti; intm; int@@ zzd@@ [@@ 1001]; int@@ hzy@@ [@@ 1001]; scanf("%d%d",&n,&k); for(i=0;i<n;i++){ scanf("%d",&@@ zzd@@ [i]); } for(i=0;i<n;i++){ hzy@@ [i]=@@ zzd@@ [i]; } for(m=0;m@@ <n;m++){ for(i=0;i<n;i++){ if(@@ zzd@@ [m@@ ]+@@ hzy@@ [i]==@@ k){ printf("yes"); break; } } if(m==@@ n-1){ printf("no"); break; } if(@@ zzd@@ [m@@ ]+@@ hzy@@ [i]==@@ k){ break; } } return0; }  
c -1
h -1
intmain() { structstu { charid@@ [@@ 9@@ ]; int@@ chn@@ ; intmath; int@@ both@@ ; structstu*next; }; intn,i; scanf("%d",&n); structstu@@ *head,*p1,*p2; for(i=0;i<n;i++) { if(i==0) { head=(struct@@ stu*)malloc(sizeof(structstu)); p1=head; } else { p1->next@@ =(struct@@ stu*)malloc(sizeof(structstu)); p1=p1->next; } scanf("%s%d%d",@@ p1->id,&p1->@@ chn@@ ,&p1->math); p1->@@ both@@ =p1->@@ chn@@ +p1->@@ math; } p1->next=NULL; int@@ max; for(i=0;i<3;i++) { max=@@ head->@@ both@@ ; p1=head; do { p1=p1->next; if(max<@@ p1->@@ both@@ ) { max=@@ p1->@@ both@@ ; p2=p1; } }while(@@ p1->next@@ !=NULL); printf("%s%d\n",@@ p2->@@ id,@@ p2->@@ both@@ ); p2->@@ both@@ =0; } return0; }  
c -1
h -1
0

intmain(intargc,char*argv[]) { inti,j,k,@@ sz[@@ 17@@ ],@@ n=0; for(i=0;i<@@ 17@@ ;i++){ scanf("%d",&sz[i]); if(sz@@ [i]==@@ -1) break; else{ if(i@@ >0){ if(sz[i]@@ >0){ for(j=0;j<i;j++){ if(@@ 2*@@ sz@@ [j]==@@ sz[i]@@ ||@@ 2*@@ sz@@ [i]==@@ sz@@ [j]){ n++; } } } else{ printf("%d\n",n); n=0; i=0; j=0; for(k=0;k<@@ 16@@ ;k++) sz@@ [k]@@ =-@@ 2; } } } } return0; }  
c -1
h -1
intmain() { intn,m,@@ o@@ ,@@ p,q,@@ A@@ [100][100],@@ i,j,@@ s; scanf("%d",&n); for(i=0;i<n;i++) { A@@ [0]@@ [i]=@@ 255@@ ; A@@ [i]@@ [0]=@@ 255@@ ; } for(i=1;i<=n;i++) { for(j=1;j<=n;j++) { scanf("%d",&@@ A@@ [i][j]); } } for(i=0;i<=@@ n@@ +1;i++) { A@@ [n@@ +1@@ ]@@ [i]=@@ 255@@ ; A@@ [i]@@ [n@@ +1]=@@ 255@@ ; } for(i=1;i<=n;i++) { for(j=1;j<=n;j++) { if(A@@ [i-1]@@ [j]==@@ 255@@ &&@@ A@@ [i]@@ [j-1@@ ]==255&&@@ A@@ [i+1][j]@@ ==0&&@@ A@@ [i]@@ [j+1]@@ ==0&&@@ A@@ [i][j]==0) { m=i; o@@ =j; } if(A@@ [i-1][j]@@ ==0&&@@ A@@ [i]@@ [j-1]@@ ==0&&@@ A@@ [i+1]@@ [j]==@@ 255@@ &&@@ A@@ [i]@@ [j+1@@ ]==255&&@@ A@@ [i][j]==0) { p=i; q@@ =j; } } } s=(@@ p@@ -m@@ -1)*(@@ q@@ -@@ o@@ -1); printf("%d",s); return0; }  
c -1
h -1
0

intmain() { inta,@@ n,@@ m; cin>>a; for(inti=0;i<@@ a;i++) { intsum=0; cin>>m>>n; int@@ A@@ [100][100@@ ]={0}; for(intj=0;j<m;j++) { for(intk=0;k<@@ n;k++) { cin>>@@ A@@ [j]@@ [k]; } } if(m@@ ==1&&n@@ ==1) cout<<@@ A@@ [0][@@ 0]@@ <<endl; else { for(intj=0;j<m;j++) sum=sum+@@ A@@ [j]@@ [0]+@@ A@@ [j]@@ [n-1]; for(intj=0;j<n;j++) sum=sum+@@ A@@ [0]@@ [j]+@@ A@@ [m@@ -1][j]; sum=sum-@@ A@@ [0][@@ 0]-@@ A@@ [0][@@ n-1]-@@ A[@@ m-1][@@ n-1]-@@ A[@@ m-1][@@ 0]; cout<<sum<<endl; } } return0; }  
c -1
h -1
intn; int@@ run@@ () { inti,j,@@ a[@@ 33@@ ],b[@@ 33@@ ]; for(i=1;i<=n;i++) scanf("%d",&a[i]); for(i=1;i<=n;i++) b[i]=1; for(i=1;i<=n;i++) for(j=i+1;j<=n;j++) if(a[i]>=a[j]) if(b[j]@@ <@@ b[i]@@ +1) b[j]=@@ b[i]@@ +1; j=0; for(i=1;i<=n;i++) if(b[i]>@@ j) j=@@ b[i]; printf("%d\n",@@ j); } intmain() { scanf("%d",&n); while(n@@ !=0) { run@@ (); n=0; scanf("%d",&n); } return0; }  
c -1
h -1
0

structbook { intnum; char@@ w@@ [26]; structbook*next; }; intc[@@ 26],@@ m,@@ i,j=0,@@ max; structbook*@@ creat@@ (intm) { structbook@@ *head,*p1,*p2; p1=(structbook@@ *)malloc(len); scanf("%d%s",&p1->num,p1->@@ w); p1->next=NULL; p2=p1; head=p1; for(i=1;i<m;i++) { p1=(structbook@@ *)malloc(len); scanf("%d%s",&p1->num,p1->@@ w); p1->next=NULL; p2->next=p1; p2=p1; } returnhead; } void@@ a@@ (struct@@ book@@ *head) { structbook@@ *p; char*@@ x; intl,@@ ch; p=head; for(i=0;i<m;i++) { for(@@ x=@@ p->@@ w@@ ;x@@ <@@ p->@@ w@@ +@@ 26@@ ;x@@ ++) { l=@@ (int)@@ *@@ x; ch@@ =@@ l@@ -65@@ ; if(@@ ch@@ >=0@@ )@@ c[@@ ch@@ ]=@@ c[@@ ch@@ ]+1; } p=p->next; } } voidmain() { structbook@@ *head,*p; structbook*@@ creat@@ (int@@ m); void@@ a@@ (struct@@ book@@ *head@@ ); charwriter@@ ,*@@ x; int@@ wri@@ ,@@ b[@@ 200]; for(i=0;i<26@@ ;i++)@@ c[i]@@ =0; for(i=0;i<@@ 200@@ ;i++)@@ b[i]=0; scanf("%d",&m); head=creat@@ (m); a@@ (head); max=0; j=0; for(i=0;i<26;i++) { if(c@@ [i]>max) { wri@@ =i+65; max=@@ c[i]; } } printf("%c\n",@@ wri@@ ); p=head; for(i=0;i<m;i++) { for(@@ x=@@ p->@@ w@@ ;x@@ <@@ p->@@ w@@ +@@ 26@@ ;x@@ ++) { if(*@@ x@@ ==@@ (char)@@ wri@@ ) { b[j]=@@ p->@@ num; j=j+1; break; } } p=p->next; } printf("%d\n",@@ j); for(j=0;@@ b[j]@@ >0@@ ;j++)@@ printf("%d\n",@@ b[j]); }  
c -1
h -1
intmain() { intn,i,j,@@ k=0,@@ m=0,@@ t,@@ x; char@@ w@@ [10]; scanf("%d",&n); structpatient {@@ charid[10]; intage; }@@ a[100]; for(i=0;i<n;i++) scanf("%s%d",@@ a[i].@@ id,&@@ a[i].@@ age); struct@@ patient1 {@@ charid[10]; intage; }@@ b[100@@ ]; struct@@ patient2 {@@ charid[10]; intage; }@@ c[100]; for(i=0;i<n;i++) { if(a[i].age@@ >=60) { b[k@@ ].age=@@ a[i].@@ age; for(j=0;j<@@ 10@@ ;j++) { b[k@@ ].@@ id@@ [j]=@@ a[i].@@ id@@ [j]; } k++; } else { c[m@@ ].age=@@ a[i].@@ age; for(j=0;j<@@ 10@@ ;j++) { c[m@@ ].@@ id@@ [j]=@@ a[i].@@ id@@ [j]; } m++; } } for(j=0;j<@@ k@@ -1;j++) { for(i=0;i<@@ k-1@@ -j;i++) { if(b@@ [i].age@@ <b@@ [i+1@@ ].age) { t=@@ b@@ [i].age; b@@ [i].age@@ =@@ b@@ [i+1].@@ age; b@@ [i+1@@ ].age=@@ t; for(x=0;x@@ <@@ 10@@ ;x@@ ++) { w@@ [x@@ ]=@@ b[i].@@ id@@ [x@@ ]; b[i].@@ id@@ [x@@ ]=@@ b@@ [i+1].@@ id@@ [x@@ ]; b@@ [i+1].@@ id@@ [x@@ ]=@@ w@@ [x@@ ]; } } } } for(i=0;i<k;i++) printf("%s\n",@@ b[i].@@ id); for(i=0;i<m;i++) printf("%s\n",@@ c@@ [i].id); return0; }  
c -1
h -1
0

voidmain() { intn,k; inta[1000]; inti,j; intnum=0; scanf("%d%d",&n,&k); for(i=0;i<n;i++) scanf("%d",&a[i]); for(i=0;i<n-1;i++) for(j=i+1;j<n;j++) if(a[i]+a[j]==k) num=num@@ +1; if(num@@ ==0) printf("no\n"); else printf("yes\n"); }  
c -1
h -1
intmain(){ intsum=0,@@ lena@@ ,@@ lenb@@ ,i,@@ c; char@@ yi@@ [501],@@ er@@ [501]; double@@ rate@@ ,@@ a; scanf("%lf",&a); scanf("%s%s",@@ yi@@ ,@@ er@@ ); lena@@ =strlen(@@ yi@@ ); lenb@@ =strlen(@@ er@@ ); if(@@ lenb@@ !=@@ lena@@ ){ printf("error"); }else{ for(i=0;i<@@ lena@@ ;i++){ if(@@ yi@@ [i]@@ ==0){ break; }elseif(@@ yi@@ [i]>=@@ '@@ A'&&@@ yi@@ [i]<=@@ '@@ Z@@ '&&@@ er@@ [i]>=@@ '@@ A'&&@@ er@@ [i@@ <=@@ 'Z'@@ ]){ if(@@ yi@@ [i]==@@ er@@ [i]){ sum++; }else{ continue; } }else{ c=1; printf("error"); break; } } rate@@ =@@ sum@@ *1.0/@@ lena@@ ; if(c@@ !=1@@ ){ if(@@ rate@@ >@@ a){ printf("yes"); }elseif(@@ rate@@ <=@@ a){ printf("no"); } } } return0; }  
c -1
h -1
0

intmain() { introw,col; int@@ time@@ =0; cin>>row>>col; intarray[@@ 110][110@@ ]={0@@ }@@ ,*@@ p=@@ NULL@@ ; inti,j,k; for(i=0;i<row;i++) for(p@@ =*(@@ array@@ +i@@ );@@ p@@ <*@@ (@@ array@@ +i)@@ +col@@ ;p++) cin>>@@ *p; for(k=0;k<=@@ col@@ +row@@ ;k++) { for(i=0;i<row;i++) for(j=0@@ ,@@ p@@ =*(@@ array@@ +i@@ );@@ p@@ <*@@ (@@ array@@ +i)@@ +col@@ ;j++,@@ p++) { if(i+j@@ ==@@ k@@ &&@@ *p@@ !=0) cout<<*p<<endl; } } return0; }  
c -1
h -1
voidmain() { inti,j,n,@@ c[100],@@ max; double@@ a[100]; memset(@@ c,@@ 0,sizeof(@@ c@@ )); scanf("%d",&n); for(i=0;i<n;i++) scanf("%lf",&@@ a[i]); c[@@ n-1@@ ]=1; for(i=n-1;i>=0;i--) { max=0; for(j=i+1;j<n;j++) if(a[j]<=@@ a[i]&&@@ c[j]@@ >max) max=@@ c[j]; c[i]=@@ max+1; } max=0; for(i=0;i<n;i++) if(c@@ [i]>max) max=@@ c[i]; printf("%d",max); }  
c -1
h -1
0

intmain() { chara[@@ 257@@ ],b[@@ 257@@ ],c[@@ 256]; cin.getline@@ (a,@@ 257@@ ); cin.getline@@ (b,@@ 257@@ ); cin.getline@@ (c,@@ 257@@ ); int@@ len1=strlen(@@ a)@@ ,len2@@ =strlen(@@ b@@ ),@@ len3@@ =strlen(c); inti,j,@@ count,@@ flag@@ =@@ -1,@@ m; for(i=0;i<=@@ len1@@ -1;i++) { m=0; if(a[i]==@@ b[m@@ ]) { count=0; for(j=i;j<=@@ i+@@ len2@@ -1;j++) { if(a[j]==@@ b[m@@ ++@@ ]) count++; } if(count==@@ len2) { flag@@ =i; break; } } } if(flag@@ ==-1) cout<<@@ a; else { for(i=@@ flag@@ ;i<=@@ flag@@ +len2@@ -1;i++) a[i]=@@ c@@ [i-@@ flag@@ ]; for(i=0;i<=@@ len1@@ -1;i++) cout<<a[i]; } return0; }  
c -1
h -1
intmain() { intn,@@ t,@@ i,j; int@@ x1,y1,x2,y2@@ ; scanf("%d",&n); x1@@ =-@@ 1@@ ;@@ y1@@ =-@@ 1@@ ;@@ x2@@ =-@@ 1@@ ;@@ y2@@ =-1; for(i=0;i<n;i++) { for(j=0;j<n;j++) { scanf("%d",&t); if(t==0) { if(@@ x1@@ ==@@ -1@@ &&@@ y1@@ ==-1) { x1@@ =j; y1@@ =i; } x2@@ =j; y2@@ =i; } } } if(@@ x1@@ ==@@ x2@@ ||@@ y1@@ ==@@ y2@@ ) printf("@@ 0@@ "); else printf("%d",(@@ x2-x1-1)*(y2-y1@@ -1)); return0; }  
c -1
h -1
0

intmain(){ struct@@ book1@@ { intnum; charauthor@@ [20]; }@@ book[999]; int@@ time@@ [26]={0}; intn,i,j,k,@@ maxi@@ ,@@ sign@@ =0; scanf("%d",&n); for(i=0;i<n;i++){ scanf("%d%s",&book[i].num,@@ book[i].author); } for(i=0;i<n;i++){ for(j=0;@@ book[i].author@@ [j]@@ !='\0';j++){ for(k=0;k<26@@ ;k++){ if(book[i].author[j]=='@@ A'+@@ k){ time@@ [k]@@ +=1; break; } } } } maxi@@ =0; for(i=0;i<26;i++){ if(@@ time@@ [@@ maxi@@ ]<@@ time@@ [i]){ maxi@@ =i; } } printf("%c\n%d\n",@@ 'A'+@@ maxi@@ ,@@ time@@ [@@ maxi@@ ]); for(i=0;i<n@@ &&@@ sign@@ ==0@@ ;i++){ for(j=0;@@ book[i].author@@ [j]@@ !='\0';j++){ if(book[i].author[j]=='@@ A'+@@ maxi@@ ){ printf("\n%d",@@ book[i].@@ num); sign@@ =1; break; } } } for(@@ ;i<@@ n;i++){ for(j=0;@@ book[i].author@@ [j]@@ !='\0';j++){ if(book[i].author[j]=='@@ A'+@@ maxi@@ ){ printf("\n%d",@@ book[i].@@ num); break; } } } return0; }  
c -1
h -1
intmain() { intn,i,j,k,@@ t; inta[20000]; scanf("%d",&n); for(i=0;i<n;i++){ scanf("%d",&a[i]); } printf("%d",a[0]); for(j=1;j<@@ n;j++){ for(k=0;k<j@@ ;k++){ if(a[j]==@@ a[k]) a[j]=0; } if(a[j]@@ ) printf("%d",@@ a[j]); } return0; }  
c -1
h -1
0

intmain(){ intn; intk; inta[@@ 1010@@ ]; cin>>n>>k; for(inti=0;i<n;i++){ cin>>a[i]; } for(inti=0;i<n;i++){ for(intj=i+1@@ ;j<@@ n;j++){ if(a[i]+a[j]==@@ k){ cout<<"yes@@ "<<endl; return0; } } } cout<<"no@@ "<<endl; return0; }  
c -1
h -1
struct@@ bing { charid[20]; intage; }; intmain() { struct@@ bing@@ b[100@@ ],@@ sixup@@ [100],@@ sixdown@@ [100]; struct@@ bing@@ temp; intm; intn,@@ l; inti,j; scanf("%d",&m); for(i=0;i<=@@ m-1;i++) { scanf("%s%d",@@ b[i].@@ id,&@@ b@@ [i].age); } n@@ =0;@@ l=0; for(i=0;i<=@@ m-1;i++) { if(b@@ [i].age>=60) { sixup@@ [n@@ ]=b[i]; n++; } else {@@ sixdown@@ [l@@ ]=b[i]; l++; } } for(i=1;i<=n-1;i++) { temp=@@ sixup@@ [i]; for(j=i-1;j>=0;j--) { if(@@ temp.@@ age@@ >@@ sixup@@ [j].age@@ ) { sixup@@ [j+1]=@@ sixup@@ [j]; sixup@@ [j]=temp; } else { break; } } } for(i=0;i<=n-1;i++) { puts(@@ sixup@@ [i].id); } for(i=0;i<=@@ l@@ -1;i++) { puts(@@ sixdown@@ [i].id); } return0; }  
c -1
h -1
0

intmain() { intn,k,i,j,@@ a[@@ 10000],@@ flag; scanf("%d%d",&n,&k); for(i=0;i<n;i++) scanf("%d",&a[i]); for(i=0,@@ flag@@ =0;i<n;i++) for(j=i;j<@@ n;j++) { if(a[i]+a[j]==k) flag=1; } if(flag==1) printf("yes"); else printf("no"); return0; }  
c -1
h -1
voidmain() { voidshuru@@ (int*p,int@@ m); voidpaixu@@ (int*p,int@@ m); voidhebing@@ (int*@@ p1@@ ,int@@ m,@@ int*@@ p2@@ ,int@@ n); voidshuchu@@ (int*p@@ ,int); intm,n,@@ i; int*@@ p1,*p2; inta[@@ 200@@ ],b[100]; p1=@@ a; p2=@@ b; scanf("%d%d",&m,&n); shuru@@ (@@ p1,@@ m); shuru@@ (@@ p2@@ ,n); paixu(@@ p1,@@ m); paixu(@@ p2@@ ,n); hebing@@ (@@ p1,@@ m,@@ p2@@ ,n); shuchu@@ (@@ p1,@@ m+@@ n); } voidshuru@@ (int*p,int@@ m) { inti; for(i=0;i<m;i++) scanf("%d",p@@ +i); } voidpaixu@@ (int*p,int@@ m) { inti,j,temp; for(i=0;i<m-1;i++) for(j=i+1;j<@@ m;j++) if(@@ *(p+i)@@ >*@@ (p@@ +j@@ )) { temp@@ =*(p@@ +i); *(p+i)@@ =*(p@@ +j); *(p+j)@@ =temp; } } voidhebing@@ (int*@@ p1@@ ,int@@ m,@@ int*@@ p2@@ ,intn) { inti; for(i=0;i<n;i++) *(@@ p1@@ +m@@ +i)@@ =*(@@ p2@@ +i); } voidshuchu@@ (int*p,int@@ x) { inti; for(i=0;i<x;i++) printf("%d@@ %c@@ ",@@ *(p+i)@@ ,i@@ !=@@ (x@@ -1)@@ ?'@@ ':@@ '\n@@ '@@ ); }  
c -1
h -1
0

intmain() { inta[16]; while(@@ true@@ ) { cin>>a[0]; if(a[0]==-1) break; intn=0,@@ count=0; while(@@ a[n@@ ]!=0) cin>>@@ a[@@ ++@@ n]; for(inti=0;i<n;i++) { for(intj=0;j<n;j++) if(a[i]==2*@@ a[j]) count++; } cout<<count<<endl; } return0; }  
c -1
h -1
intmain() { register@@ inti,j,@@ flag; intn; flag=0; char@@ str1@@ [@@ 20000]; scanf("%d",&n); for(i=1;i<=n;i++) { scanf("%d",&@@ str1@@ [i@@ -1]); if(i>=@@ 2) { flag=0; for(j=1;j<=@@ i-1;j++) { if(@@ str1@@ [i-1@@ ]==@@ str1@@ [j-1]) { flag=1; break; } } if(flag==0) { printf("%d",@@ str1@@ [i@@ -1]); } } else { printf("%d",@@ str1@@ [0]); } } return0; }  
c -1
h -1
0

intmain() { intn,i,@@ a[100],@@ k,@@ b[100@@ ],@@ j; scanf("%d",&n); for(i=1;i<=@@ 100;i++) a[i]=0; j=1; for(i=1;i<=n;i++) { scanf("%d",&k); if(a[k]@@ ==0){ b[j]=@@ k; j++; } a[k]@@ =1; } for(i=1;i<@@ (j@@ -1);i++) printf("%d",b[i]); printf("%d",@@ b@@ [j-1]); return0; }  
c -1
h -1
structstudent { intnum; int@@ score1@@ ; int@@ score2; intsum; structstudent*next; structstudent*@@ before@@ ; }; main() { inti,n,@@ n1@@ =0,@@ n2@@ =0,@@ n3@@ =0,@@ m1@@ =0,@@ m2@@ =0,@@ m3@@ =0; structstudent*head; structstudent*p1,*p2; scanf("%d",&n); p1=p2=(structstudent*)malloc(LEN); scanf("%d%d%d",&p1->num,&p1->@@ score1@@ ,&p1->@@ score1@@ ); p1->sum=p1->@@ score1@@ +p1->@@ score2; m1@@ =p1->@@ sum; n1@@ =p1->@@ num; head@@ =0; i=0; while(i<=@@ n-2@@ ) { i++; if(i==1) head=p1; else { p1->@@ before@@ =p2; p2->next=p1; } p2=p1; p1=(structstudent*)malloc(LEN); scanf("%d%d%d",&p1->num,&p1->@@ score1@@ ,&p1->@@ score2); p1->sum=p1->@@ score1@@ +p1->@@ score2; if(p1->@@ sum>@@ m3@@ &&@@ p1->@@ sum<=@@ m2@@ ) { m3@@ =p1->@@ sum; n3@@ =p1->@@ num; } if(p1->@@ sum>@@ m2@@ &&@@ p1->@@ sum<=@@ m1@@ ) { m3=@@ m2@@ ; n3@@ =@@ n2; m2@@ =p1->@@ sum; n2@@ =p1->@@ num; } if(p1->@@ sum>@@ m1@@ ) { m3=@@ m2@@ ; n3@@ =@@ n2; m2=@@ m1@@ ; n2@@ =@@ n1@@ ; m1@@ =p1->@@ sum; n1@@ =p1->@@ num; } } printf("%d%d\n",@@ n1,@@ m1@@ ); printf("%d%d\n",@@ n2,@@ m2@@ ); printf("%d%d\n",@@ n3@@ ,@@ m3@@ ); }  
c -1
h -1
0

int@@ trans@@ (char@@ k) { inti; chara[@@ 26@@ ]={'A','B','C','D','E','F','G','H','I','J','K','L','M','N','O','P','@@ Q','R','S','T','U','V','W','X','Y','@@ Z'}; for(i=0;i<26;i++) { if(k==@@ a[i]) return@@ i; } } intmain() { struct@@ books { intn; char@@ w@@ [27]; }@@ *@@ m; intnum,@@ i,j; scanf("%d",&num); m@@ =(struct@@ books@@ *)malloc(sizeof(struct@@ books@@ )*@@ num); for(i=0;i<num;i++) { intN@@ ; char@@ W@@ [27]; scanf("%d%s",&@@ N@@ ,@@ W@@ ); m@@ [i].@@ n=@@ N; strcpy(@@ m@@ [i].@@ w,@@ W@@ ); } intb[@@ 26@@ ]={0@@ ,@@ 0,0,0,0,0,0,0,0,@@ 0,0,0,0,0,0,0,0,@@ 0,0,0,0,0,0,0,0,@@ 0},@@ c; for(i=0;i<num;i++) { for(j=0@@ ;m@@ [i].@@ w@@ [j]!='\0';j++) { c=@@ trans@@ (m@@ [i].@@ w@@ [j]); b[@@ c@@ ]++; } } intmax=0; char@@ most@@ ; for(i=0;i<26;i++) { if(b[i]>max) { max=b[i]; most@@ ='A'+i; } } printf("%c\n%d\n",@@ most@@ ,max); for(i=0;i<num;i++) { for(j=0@@ ;m@@ [i].@@ w@@ [j]!='\0';j++) { if(m@@ [i].@@ w@@ [j]==@@ most@@ ) printf("%d\n",@@ m@@ [i].@@ n); } } return0; }  
c -1
h -1
voidmain() { inty,m,d,@@ a,@@ i,@@ ans; for(i=1;i<=@@ 5;i++) { scanf("%d%d%d",&y,&m,&d); if(y%@@ 4@@ !=0) a=1; elseif(@@ y%@@ 100!=0) a=0; elseif(@@ y%@@ 400@@ !=0) a=1; else a=0; if(a@@ ) { switch(m) { case1:@@ ans=@@ d;break; case2:@@ ans@@ =31+@@ d;break; case3:@@ ans=@@ 59@@ +d;break; case4:@@ ans=@@ 90@@ +d;break; case5:@@ ans=@@ 120@@ +d;break; case6:@@ ans=@@ 151@@ +d;break; case7:@@ ans=@@ 181@@ +d;break; case8:@@ ans=@@ 212@@ +d;break; case9:@@ ans=@@ 243@@ +d;break; case10:@@ ans=@@ 273@@ +d;break; case11:@@ ans=@@ 304@@ +d;break; case12:@@ ans=@@ 334@@ +d;break; } } else { switch(m) { case1:@@ ans=@@ d;break; case2:@@ ans@@ =31+@@ d;break; case3:@@ ans=@@ 60@@ +d;break; case4:@@ ans=@@ 91@@ +d;break; case5:@@ ans=@@ 121@@ +d;break; case6:@@ ans=@@ 152@@ +d;break; case7:@@ ans=@@ 182@@ +d;break; case8:@@ ans=@@ 213@@ +d;break; case9:@@ ans=@@ 244@@ +d;break; case10:@@ ans=@@ 274@@ +d;break; case11:@@ ans=@@ 305@@ +d;break; case12:@@ ans=@@ 335@@ +d;break; } } printf("%d\n",@@ ans); } }  
c -1
h -1
0

intmain() { intk; cin>>k; while(k@@ >=@@ 1) { intm,n,@@ i,j@@ ,*@@ p=@@ NULL@@ ,@@ sum=0; cin>>m>>n; inta[100][100]; for(i=0;i<m;i++) for(j=0;j<n;j++) cin>>a[i][j]; for(p=@@ a[0]@@ ;p<@@ a[0]@@ +n;@@ p++) sum=sum+@@ *p; for(p=@@ a[0]@@ ;p<=@@ a[m-1]@@ ;p@@ +=@@ 100@@ ) sum=sum+@@ *p; for(p=@@ a[m-1]@@ ;p<@@ a[m-1]@@ +n;@@ p++) sum=sum+@@ *p; for(p=@@ a[0]@@ +@@ n-1@@ ;p<=@@ a[m-1]@@ +@@ n-1@@ ;p@@ +=@@ 100@@ ) sum=sum+@@ *p; cout<<sum@@ -@@ a[0][0]@@ -@@ a[0][@@ n-1]-@@ a[@@ m-1][0]-@@ a[m-1][@@ n-1@@ ]<<endl; k--; } return0; }  
c -1
h -1
intmain(intargc,char*argv[]) { intyear,month,@@ d; int@@ result=0; inti; inta[@@ 12]={31,@@ 28@@ ,31,30,31,30,31@@ ,31@@ ,31@@ ,31,30@@ ,31@@ }; scanf("%d%d%d",&year,&month,&@@ d); if((year%4==0&&year%100!=0@@ )||@@ year%@@ 400@@ ==0){ a[2@@ ]=a[@@ 2@@ ]+1; for(i=1;i<@@ month@@ ;i++){ result+=@@ a[i]; } result+=@@ d; } else for(i=1;i<@@ month@@ ;i++){ result+=@@ a[i]; } result+=@@ d; printf("%d\n",@@ result); return0; }  
c -1
h -1
0

intmain(){ inta[@@ 110][110@@ ]; intnum,@@ sum=0; intk,m,n,i,j,@@ l; cin>>k; for(l=0;l<@@ k;@@ l++) { sum=0; cin>>m>>n; for(i=0;i<m;i++) { for(j=0;j<n;j++) { cin>>num; a[i]@@ [j]=@@ num; } } for(i=0;i<n;i++) { sum=sum+@@ a[0][i]; } for(i=1;i<m;i++) { sum=sum+@@ a[i][n-1]; } for(i=1;i<m;i++) { sum=sum+@@ a[i][0]; } for(i=1;i<n-1;i++) { sum=sum+@@ a[m-1]@@ [i]; } cout<<sum<<endl; } return0; }  
c -1
h -1
main() { intn,i,j,a[@@ 30@@ ],b[@@ 30],@@ max=1; scanf("%d",&n); for(i=1;i<=n;i++) { scanf("%d",&@@ a[i@@ -1]); } for(i=1;i<=n;i++) { b@@ [i-1]@@ =1; } for(i=2;i<=n;i++) { for(j=1;j<=@@ i-1;j++) { if(a[@@ n-i@@ ]>=@@ a[n@@ -i@@ +j@@ ]@@ &&@@ b[@@ n-i@@ ]<=@@ b[@@ n-i@@ +j@@ ]) { b[@@ n-i@@ ]@@ =1@@ +@@ b[@@ n-i@@ +j@@ ]; } } } for(i=1;i<=n;i++) { if(b@@ [i-1]@@ >max) max=@@ b@@ [i-1]; } printf("%d",max); }  
c -1
h -1
0

intf(inta,int@@ x) { intcount@@ =1,i; for(i=x@@ ;i<@@ a;i++) if(a%i==0) count+=@@ f(a@@ /i,i); if(i==@@ a) returncount; else return0; } voidmain() { intn,@@ a; scanf("%d",&n); for(@@ ;n@@ >0@@ ;n@@ --) { scanf("%d",&a); if(a@@ ==1||@@ a@@ ==@@ 2) printf("@@ 1@@ \n"); else printf("%d\n",@@ f(a,@@ 2)); } }  
c -1
h -1
int@@ Runnian@@ (int@@ y); intmain(){ inty,m,d,@@ count=0; inti; scanf("%d%d%d",&y,&m,&d); for(i=1;i<@@ m;i++){ if(i==1||i==3||i==5||i==7||i==8||i==10@@ ||i==@@ 12) count+=@@ 31; elseif(i==@@ 4||i==6||i==9||i==11) count+=@@ 30; elseif(i==@@ 2@@ ){ if(@@ Runnian@@ (y@@ )) count+=@@ 29; else count+=@@ 28; } } count+=@@ d; printf("%d\n",@@ count); return0; } int@@ Runnian@@ (int@@ y){ int@@ result; if(y%@@ 400==0||(@@ y%@@ 4==0&&y%100!=0@@ )) result=1; else result=0; returnresult; }  
c -1
h -1
0

voidmain() { intn,a[@@ 1000],@@ i,@@ l@@ ,j,@@ max,@@ s[@@ 26]={0}; charc[@@ 1000][@@ 27@@ ],@@ w; scanf("%d",&n); for(i=0;i<n;i++) { scanf("%d%s",&a[i],@@ c[i]); l=strlen(@@ c[i]); for(j=0;j<l;j++) { s[@@ c@@ [i][j]@@ -65]++; } } max=@@ s[@@ 0]; w@@ ='A'; for(i=1;i<26;i++) { if(s@@ [i]>max) { max=@@ s[i]; w@@ =i+65; } } printf("%c\n%d\n",@@ w@@ ,max); for(i=0;i<n;i++) { for(j=0;@@ c@@ [i][j]@@ !='\0';j++) { if(c@@ [i][j]==@@ w@@ ) { printf("%d\n",a[i]); break; } } } }  
c -1
h -1
intmain() { inti,j,@@ t,@@ k; chars[256],@@ w@@ [256@@ ],c[@@ 256],@@ x@@ [256]; scanf("%s",@@ w); scanf("%s",s); scanf("%s",c); t@@ =strlen(s); for(i=0;@@ w@@ [i]!='\0';i++) { for(j=0;j<@@ t;j++) { x@@ [j]=@@ w@@ [i+j@@ ]; } x[j]@@ ='\0'; if(strcmp(@@ s,@@ x)@@ ==0) { for(k=0;k<@@ t@@ ;k++) { w@@ [i+k@@ ]=@@ c@@ [k]; } break; } } printf("%s",@@ w); return0; }  
c -1
h -1
0

int@@ g@@ (int@@ y) { inti; for(i=0;;i++) { if(i@@ *@@ i@@ >@@ y) break; } return@@ i@@ -1; } intf@@ (intx,int@@ b) { int@@ p,@@ a[100],@@ t=0,@@ k=0; p=@@ g@@ (@@ x); if(x==@@ 2) return0; else { for(inti=@@ b@@ ;i<=@@ p@@ ;i++) { if(x%i==0) { a[t@@ ]=i; t++; } } if(t==0) return0; else for(inti=0;i<@@ t;i++) k=k@@ +@@ f(@@ x/@@ a[i],@@ a[i])@@ +1; return@@ k; } } intmain() { intn,@@ a; cin>>n; for(inti=0;i<n;i++) { cin>>a; cout<<@@ f(a,@@ 2)@@ +1<<endl; } return0; }  
c -1
h -1
intmain() { introw,col,@@ i,j; inta[@@ 101][101]; scanf("%d%d",&row,&col); for(i=0;i<row;i++){ for(j=0;j<col;j++){ scanf("%d",&(@@ a[i][j]@@ )); } } for(i=0;i<@@ row+col@@ ;i++){ if(i@@ <col) j=0; else j@@ =i@@ -col@@ +1; for(@@ ;j<=@@ i@@ &&j@@ <row@@ ;j++){ printf("%d\n",@@ a[j][i-j@@ ]); } } return0; }  
c -1
h -1
0

voidmain() { int@@ t=0,@@ m,@@ i,j,@@ n,k,@@ a[@@ 999@@ ],c[@@ 26]={0}; charb[@@ 999@@ ][@@ 999]; scanf("%d\n",&@@ m); for(i=0;i<m;i++) scanf("%d%s",&a[i],@@ b[i]); for(i=0;i<m;i++) { k=strlen(@@ b[i]); for(j=0;j<k;j++) c[@@ b[i]@@ [j]@@ -'A']++; } for(j=0;j<26;j++) { if(t@@ <@@ c@@ [j]) t=@@ c[j]; } for(i=0;i<26;i++) { if(c@@ [i]==@@ t) {@@ printf("%c\n",@@ i@@ +'A'@@ ); break; } } printf("%d\n",t); for(j=0;j<m;j++) { k=strlen(@@ b[j]); for(n=0;n@@ <k;@@ n++) {if((@@ b[j]@@ [n@@ ]@@ -'@@ A')@@ ==@@ i) printf("%d\n",@@ a[j]); } } }  
c -1
h -1
intmain() { intnum[@@ 16@@ ]={0},@@ sum=0; inti=0; while(1) { i=0; sum=0; while(1) { cin>>num[i]; if(num@@ [i]==@@ -1) return0; if(num@@ [i]==0) break; i++; } for(intj=0;j<@@ i-1;j++) { for(intk@@ =j+1@@ ;k<@@ i;k++) { if(num@@ [j]==2*@@ num@@ [k]@@ ||@@ num@@ [k]==2*@@ num@@ [j]) sum++; } } cout<<sum<<endl; } return0; }  
c -1
h -1
0

structstu { inta; intb; intc; structstu*next; }; voidmain() { inti,j,n,@@ t,@@ sum[@@ 100000]; structstu@@ *head,*p1,*p2; scanf("%d",&n); p1=(struct@@ stu*)malloc(sizeof(structstu)); scanf("%d%d%d",&@@ (@@ p1->@@ a)@@ ,&@@ (@@ p1->@@ b)@@ ,&@@ (@@ p1->@@ c@@ )); sum[@@ 0]=@@ p1->@@ b+@@ p1->@@ c; head=p1; p2=p1; for(i=1;i<n;i++) { p1=(struct@@ stu*)malloc(sizeof(structstu)); p2->next=p1; scanf("%d%d%d",&@@ (@@ p1->@@ a)@@ ,&@@ (@@ p1->@@ b)@@ ,&@@ (@@ p1->@@ c@@ )); sum[i]=@@ p1->@@ b+@@ p1->@@ c; p2=p1; } p2->next=NULL; for(i=0;i<3;i++) for(j=i+1;j<n;j++) if(sum@@ [i]<@@ sum@@ [j]) { t=@@ sum[i]; sum[i]=sum@@ [j]; sum@@ [j]=@@ t; } for(i=0;i<3;i++) { p1=head; while(@@ p1->@@ b+@@ p1->@@ c@@ !=@@ sum[i]@@ &&@@ p1@@ ) { p1=p1->next; } if(@@ p1@@ ) { printf("%d%d\n",@@ p1->@@ a,@@ sum@@ [i]); p1->@@ b=0; p1->@@ c=0; } } }  
c -1
h -1
voidmain() { structstudent { intnum,@@ sum; }stu[100000]; intn,i,j,@@ t,@@ chi@@ ,@@ math; scanf("%d",&n); for(i=0;i<n;i++) { scanf("%d%d%d",&stu[i].@@ num,&@@ chi@@ ,&@@ math); stu[i].sum=@@ chi@@ +@@ math; } for(i=0;i<3;i++) { for(j=n-1;j>i;j--) { if(stu[j].@@ sum>@@ stu[j-1].@@ sum) { t=@@ stu[j].@@ sum; stu[j].@@ sum=@@ stu[j-1].@@ sum; stu[j-1].@@ sum=@@ t; t=@@ stu[j].@@ num; stu[j].@@ num=@@ stu[j-1].@@ num; stu[j-1].@@ num=@@ t; } } } printf("%d%d\n",@@ stu[0].@@ num,@@ stu[0].@@ sum); printf("%d%d\n",@@ stu[1].@@ num,@@ stu[1].@@ sum); printf("%d%d",@@ stu[2@@ ].num,@@ stu[2@@ ].sum); }  
c -1
h -1
1


intmain() { intn,i,j,k,@@ a[@@ 1000],b[1000],@@ c[@@ 1000000@@ ]; int@@ e=0; scanf("%d%d",&n,&k); for(i=0;i<n;i++) { scanf("%d",&a[i]); b[i]=@@ a[i]; } for(i=0;i<n;i++) { for(j=0;j<n;j++) { if(i!=@@ j) { c[@@ e@@ ]=@@ a[i]+@@ b[j]; e++; } } } for(i=0;i<=@@ e@@ ;i++) { if(i<@@ e@@ &&@@ c@@ [i]==@@ k) { printf("yes\n"); break; } if(i==@@ e@@ &&@@ c[@@ e@@ ]==@@ k) { printf("yes\n"); } elseif(i==@@ e@@ ) { printf("no\n"); } } return0; }  
c -1
h -1
intmain() { intN@@ ,@@ m,n,@@ i,@@ M@@ ,j,@@ JU@@ [100][100],@@ h,@@ l; scanf("%d",&N); for(i=0;i<N;i++) { M@@ =0; scanf("%d%d",&m,&n); for(h=0;h@@ <m;@@ h++) { for(l=0;l<n;l++) {scanf("%d",&@@ JU@@ [h@@ ][l@@ ]@@ );} } if(n@@ ==1){@@ for(j=0;j<m@@ ;j++)@@ M@@ =@@ M@@ +@@ JU@@ [j]@@ [0]@@ ;} elseif(m@@ ==1){@@ for(j=0;j<n@@ ;j++)@@ M@@ =@@ M@@ +@@ JU@@ [0]@@ [j]@@ ;} else { for(h=0;h@@ <m;@@ h++) { if(h@@ >0@@ &&@@ h@@ <m-1@@ ){@@ M@@ =@@ M@@ +@@ JU@@ [h@@ ][0]+@@ JU@@ [h@@ ][@@ n-1@@ ];} else{@@ for(j=0;j<n@@ ;j++)@@ M@@ =@@ M@@ +@@ JU@@ [h@@ ][j]@@ ;} } } printf("%d\n",@@ M@@ ); } return0; }  
c -1
h -1
0

intmain(){ int@@ col,@@ row,@@ i,k,@@ l,@@ max; cin>>row>>col; if(row@@ >@@ col) max=@@ row; else@@ max=@@ col; inta[@@ max@@ ][@@ max@@ ]; memset(a,0,@@ sizeof(a)); for(i=0;i<row;i++) for(k=0;k<col@@ ;k++) cin>>@@ a[i]@@ [k]; for(i=0;i<@@ max@@ *2@@ -1;i++){ if(i<@@ max@@ ){ for(k@@ =0,@@ l@@ =i@@ -k@@ ;k<@@ max@@ &&@@ l@@ >=0@@ ;k@@ ++,@@ l@@ --) if(a[k@@ ][l@@ ]!=0) cout<<@@ a[k@@ ][l@@ ]@@ <<endl;} else for(k=@@ max@@ -1,@@ l@@ =i@@ -k@@ ;k@@ >0@@ &&@@ l<@@ max@@ ;k@@ --@@ ,@@ l++) if(a[@@ l@@ ][k@@ ]!=0) cout<<@@ a[l@@ ][k@@ ]<<endl; } return0; }  
c -1
h -1
intmain() { inty,m,@@ md@@ =0,@@ d,@@ day,@@ i; scanf("%d%d%d",&y,&m,&d); int@@ month@@ [12]={31,28,31,30,31,30,31,31,30,31,30,31}; for(i=0;i<m-1;i++) { md@@ =@@ md@@ +@@ month@@ [i]; } day=@@ md@@ +d; printf("%d",@@ day); return0; }  
c -1
h -1
0

voidmain() { introw,col,@@ i,j; scanf("%d%d",&row,&col); int@@ **@@ a; a=@@ (int@@ **@@ )@@ malloc(@@ row@@ *sizeof(int@@ *@@ )); for(i=0;i<row;i++) a[i]=@@ (int*)malloc(@@ col@@ *sizeof(int)); for(i=0;i<row;i++) { for(j=0;j<col;j++) scanf("%d",@@ *(a+i)@@ +j); } int@@ len; for(@@ len@@ =0;@@ len@@ <row@@ +col@@ -1;@@ len@@ ++) { for(i=0;i<row;i++) { j=@@ len@@ -@@ i; if((@@ j@@ <col@@ )&&(@@ j@@ >=0@@ )) printf("%d\n",@@ *(*(a+i)@@ +@@ len@@ -i@@ )); } } return0; }  
c -1
h -1
char@@ word@@ [256],@@ substring@@ [256],@@ replacement@@ [256]; int@@ l1,l2,@@ l3@@ ; int@@ the_same@@ (@@ char*@@ ch@@ ) { inti; for(i=0;i<@@ l2@@ ;i++) { if(*(@@ ch@@ +i)@@ !=@@ substring@@ [i]) return0; } return1; } intmain() { char*@@ p=@@ NULL@@ ,@@ *@@ q@@ =NULL; inti,@@ t; cin.getline(@@ word@@ ,@@ 256); l1=strlen(@@ word@@ ); cin.getline(@@ substring@@ ,@@ 256); l2=strlen(@@ substring); cin.getline(@@ replacement@@ ,@@ 256); l3@@ =strlen(@@ replacement); for(i=0;i<l1;i++) { t=@@ the_same@@ (@@ &@@ word@@ [i]); if(t@@ ==1) { p=@@ word@@ +@@ i; break; } } if(p@@ ==NULL) { for(i=0;i<l1;i++) cout<<@@ word@@ [i]; } else { for(q=@@ word@@ ;q@@ <p@@ ;q++) cout<<@@ *@@ q; for(i=0;i<@@ l3@@ ;i++) cout<<@@ replacement@@ [i]; for(q=@@ p+@@ l2@@ ;q@@ <@@ word@@ +@@ l1@@ ;q++) cout<<@@ *@@ q; } return0; }  
c -1
h -1
0

voidmain() { int@@ start@@ ,@@ end@@ ,@@ ok@@ ,i,j,@@ n,m,@@ s; chara[@@ 300],b[@@ 300@@ ],c[@@ 300]; gets(a); gets(b); gets(c); n@@ =strlen(a); m@@ =strlen(b); s@@ =strlen(c); for(i=0;i<n;i++) if(a[i]==@@ b[0]) { ok@@ =1; for(j=1;j<@@ m;j++) if(a@@ [j+i@@ ]!=@@ b[j]) ok@@ =0; if(@@ ok@@ ) {@@ start@@ =i;@@ end@@ =j@@ +i@@ ;break;} } if(@@ ok@@ ==1) { for(i=0;i<@@ start@@ ;i++) printf("%c",a[i]); for(i=0;i<@@ s;i++) printf("%c",@@ c[i]); for(i=@@ end@@ ;i<n;i++) printf("%c",a[i]); printf("\n"); } else puts(@@ a); }  
c -1
h -1
intmain() { intn=0,@@ t=0,@@ i,j,@@ x; intsz[@@ 16]; for(;@@ ;@@ ){ for(i=0;i<16@@ ;i++){ scanf("%d",&sz[i]); if(sz[i]@@ ==0||@@ sz[0]@@ ==-1)break; n=n+1; } for(i=0;i<n;i++){ for(j=0;j<n;j++){ if(sz[i]@@ -2*@@ sz[j]@@ ==0) t=t+1; else@@ ; } } if(sz@@ [0]@@ ==-1)break; printf("%d\n",t); t=0; n=0; } return0; }  
c -1
h -1
0

intmain() { char*@@ p=@@ NULL@@ ; charstr@@ [100],@@ substr@@ [100],@@ restr@@ [100]; cin>>@@ str@@ >>@@ substr@@ >>@@ restr@@ ; p=strstr(@@ str,@@ substr@@ ); if(p@@ !=NULL) { strcat(@@ restr@@ ,@@ p+@@ strlen(@@ substr@@ )); *@@ p=@@ '\0'@@ ; strcat(@@ str,@@ restr@@ ); } cout<<str@@ ; return0; }  
c -1
h -1
intmain() { intn,m,@@ i,j; inta[@@ 30]={0}; intf@@ [@@ 30]={0}; intmax@@ (int,int); cin>>n; for(i=1;i<=n;i++) cin>>a[i]; for(i=1;i<=n;i++) f@@ [i]=1; for(i=2;i<=n;i++) { for(j=1;j<i;j++) if(a[j]>=@@ a[i]) f[i]=@@ max(@@ f@@ [j]@@ +1,@@ f@@ [i]); } m=@@ f@@ [1]; for(i=2;i<=n;i++) m=@@ max(@@ m,@@ f@@ [i]); cout<<@@ m@@ <<endl; return0; } intmax@@ (inta,intb) { if(a@@ >b@@ )@@ b=@@ a; return@@ b; }  
c -1
h -1
0

charname@@ ; intnum,@@ k=0,@@ t=0; int@@ nametimes@@ [100]={0}; structbook { unsigned@@ int@@ No@@ ; char@@ Name@@ [26]; }@@ *p; void@@ operate@@ () { inti; for(i=@@ 65@@ ;i<@@ 91@@ ;i++) if(@@ nametimes@@ [i]>@@ t) { t=@@ nametimes@@ [i]; name@@ =i; } } voidprint() { structbook*@@ pi@@ ; inti; printf("%c\n%d\n",@@ name,@@ t); for(@@ pi@@ =p@@ ;@@ pi@@ <@@ p+@@ num;@@ pi@@ ++) for(i=0;@@ pi@@ ->@@ Name@@ [i]!='\0';i++) if(@@ pi@@ ->@@ Name@@ [i]==@@ name@@ ) { if(k==0) { printf("%d",@@ pi@@ ->@@ No@@ ); k++; } else printf("\n%d",@@ pi@@ ->@@ No@@ ); break; } } main() { scanf("%d",&num); structbook*@@ pi@@ ; inti; p=(struct@@ book@@ *)malloc(@@ num@@ *@@ sizeof(struct@@ book)); for(@@ pi@@ =p@@ ;@@ pi@@ <@@ p+@@ num;@@ pi@@ ++) { scanf("%d%s",&@@ pi@@ ->@@ No@@ ,@@ pi@@ ->@@ Name@@ ); for(i=0;@@ pi@@ ->@@ Name@@ [i]!='\0';i++) nametimes@@ [@@ (int)@@ pi@@ ->@@ Name@@ [i]@@ ]++; } operate@@ (); print(); }  
c -1
h -1
int@@ a1@@ [100],@@ a2@@ [100]; void@@ get@@ (int@@ n1,int@@ n2) { for(inti=0;i<@@ n1@@ ;i++) { cin>>@@ a1@@ [i]; } for(inti=0;i<@@ n2;i++) { cin>>@@ a2@@ [i]; } } void@@ arrange@@ (int@@ n1,int@@ n2) { inttemp; for(intj=1;j<=@@ n1@@ -1;j++) { for(inti=0;i<=@@ n1@@ -j@@ -1;i++) { if(@@ a1@@ [i]>@@ a1@@ [i+1]) { temp=@@ a1@@ [i]; a1@@ [i]=@@ a1@@ [i+1]; a1@@ [i+1]=@@ temp; } } } for(intj=1;j<=@@ n2@@ -1;j++) { for(inti=0;i<=@@ n2@@ -j@@ -1;i++) { if(@@ a2@@ [i]>@@ a2@@ [i+1]) { temp=@@ a2@@ [i]; a2@@ [i]=@@ a2@@ [i+1]; a2@@ [i+1]=@@ temp; } } } } int@@ combine@@ (int@@ n1,int@@ n2) { int@@ out@@ [100]; for(inti=0;i<@@ n1@@ ;i++) { out@@ [i]=@@ a1@@ [i]; } for(inti=0;i<@@ n2;i++) { out@@ [@@ n1@@ +i]=@@ a2@@ [i]; } for(inti=0;i<@@ n1+n2@@ -1;i++) { cout<<@@ out@@ [i]@@ <<""; } cout<<@@ out@@ [@@ n1+n2@@ -1]; } intmain() { inta,b; cin>>a>>@@ b; get@@ (a,b); arrange@@ (a,b); combine@@ (a,b); return0; }  
c -1
h -1
0

voidmain() { charstr@@ [@@ 600]; char@@ sub@@ [300],@@ rep@@ [300]; inti,j,k,@@ sun00@@ =0,@@ se@@ =0; gets(str); gets(sub); gets(@@ rep); for(i=0;@@ str@@ [i]@@ !=0;i++) { if(str[i]==@@ sub@@ [0]) { for(k@@ =i+1@@ ,j@@ =1;@@ str@@ [k]@@ !=0&&@@ sub@@ [j]@@ !=0@@ ;k++@@ ,j@@ ++) { if(str@@ [k]@@ !=@@ sub@@ [j]) { break; } } if(@@ sub@@ [j]@@ ==0) { sun00@@ =i; se@@ =k; break; } } } if(@@ sun00@@ <@@ se@@ ){ if(strlen(@@ sub)@@ <=@@ strlen(@@ rep@@ )) { for(i=@@ sun00@@ ,j@@ =0;@@ rep@@ [j]@@ !=0@@ ;i++,j++) { str[i]=@@ rep@@ [j]; } for(k=@@ se@@ ;@@ str@@ [k]@@ !=0@@ ;k++@@ ,i++) { str[i]=@@ str@@ [k]; } str@@ [i]=0; } else{ i@@ =strlen(@@ str@@ )+@@ strlen(@@ rep@@ )@@ -strlen(@@ sub); for(k@@ =strlen(@@ str@@ )@@ ;k@@ >=@@ se@@ ;k@@ --@@ ,i@@ --) { str[i]=@@ str@@ [k]; } for(i=@@ sun00@@ ,j@@ =0;@@ rep@@ [j]@@ !=0@@ ;i++,j++) { str[i]=@@ rep@@ [j]; } } } printf(@@ str); }  
c -1
h -1
intmain(){ inta[100][100],@@ n,@@ b,@@ c,@@ d=0,@@ x1,@@ x2,@@ y1,@@ y2@@ ,@@ m; scanf("%d",&n); for(b=0;b@@ <n;b++){ for(c=0;c@@ <n;@@ c@@ ++){ scanf("%d",&a[@@ b@@ ][c@@ ]); if(a[@@ b@@ ][c@@ ]@@ ==0&&@@ d@@ ==0){ x1@@ =@@ b; y1@@ =@@ c; d=1; } elseif(@@ a[@@ b@@ ][c@@ ]@@ ==0&&@@ d@@ ==1){ x2@@ =@@ b; y2@@ =@@ c; } } } m@@ =(@@ x2-x1-1)*(y2-y1-1); printf("%d",(@@ x2-x1-1)*(y2-y1@@ -1)); return0; }  
c -1
h -1
0

intmain() { inti,j,n,@@ x[@@ 1000],@@ a[@@ 26],@@ b,@@ c,@@ num=0; chars[@@ 1000][@@ 26]; for(i=0;i<@@ 25;i++) a[i]=0; cin>>n; for(i=0;i<n;i++) { cin>>@@ x[i]@@ >>@@ s[i]; for(j=0;@@ s@@ [i][j]@@ !='\0';j++) a[@@ (int)@@ s@@ [i][j]@@ -65]++; } b=@@ a[0]; c=0; for(i=1;i<26;i++) if(b@@ <@@ a[i]) { b=@@ a[i]; c=i; } cout<<@@ (char)(@@ c@@ +65@@ )<<endl; for(i=0;i<n;i++) for(j=0;@@ s@@ [i][j]@@ !='\0';j++) if(s@@ [i][j]==@@ (char)@@ c@@ +65) num++; cout<<num<<endl; for(i=0;i<n;i++) for(j=0;@@ s@@ [i][j]@@ !='\0';j++) if(s@@ [i][j]==@@ (char)@@ c@@ +65) { cout<<@@ x@@ [i]<<endl; break; } return0; }  
c -1
h -1
voidmain() { structbook { intx; char@@ z@@ [10]; }a[@@ 400@@ ]; inti,n,@@ max=0,@@ j,k,@@ l,@@ y[@@ 400@@ ],@@ p@@ ;@@ char@@ u@@ ;@@ scanf("%d",&n); for(i=0;i<n;i++) { scanf("%d%s",&@@ a[i].@@ x,@@ a[i].@@ z@@ );@@ y@@ [i]@@ =strlen(@@ a[i].@@ z); } for(i=0;i<n-1;i++) { for(j=0;j<@@ y@@ [i];j++) { p=1; for(k@@ =i+1@@ ;k<@@ n;k++) { for(l=0;l<@@ y@@ [k]@@ ;l++) if(a[i].@@ z@@ [j]==@@ a[k@@ ].@@ z@@ [l@@ ])@@ p++; } if(p@@ >max){max=@@ p@@ ;@@ u@@ =@@ a[i].@@ z@@ [j]@@ ;} } } printf("%c\n%d\n",@@ u@@ ,max); for(i=0;i<n;i++) { for(j=0;j<@@ y@@ [i];j++) if(@@ u@@ ==@@ a[i].@@ z@@ [j]@@ ){@@ printf("%d\n",@@ a[i].@@ x@@ );break;} } }  
c -1
h -1
1


structstudent { intnum; charname@@ [20]; structstudent*next; }; structstudent*creat@@ (intn) { structstudent*@@ p1,*p2,*head; inti; p1=p2@@ =(structstudent*)malloc(len); head=NULL; i=0; while(i<n) { scanf("%d%s",&p1->num,p1->name); i=i+1; if(i@@ ==1)head=p1; elsep2->next=p1; p2=p1; p1@@ =(structstudent*)malloc(len); } p2->next=NULL; returnhead; } voidmain() { inti; structstudent*head,*@@ p; intn; scanf("%d",&n); head=creat(n); p=head; inta[@@ 26]; for(i=0;i<26;i++) { a[i]=0; } while(p!=NULL) { for(i=0;i<@@ 20@@ ;i++) { a[@@ (int)@@ p->@@ name@@ [i]@@ -'A']++; } p=p->next; } int@@ number,@@ max=0; for(i=0;i<26;i++) { if(a[i]>max) { max=a[i]; number@@ =i; } } printf("%c\n",@@ 'A'+@@ number); printf("%d\n",max); p=head; while(p!=NULL) { for(i=0;i<@@ 20@@ ;i++) { if(p->@@ name@@ [i]=='@@ A'+@@ number@@ ) break; } if(p->@@ name@@ [i]=='@@ A'+@@ number@@ ) printf("%d\n",p->num); p=p->next; } }  
c -1
h -1
intmain() { intx[@@ 15],@@ sum=0,@@ n; while(1) { for(n@@ =0;@@ ;n++) { cin>>@@ x[@@ n]; if(x@@ [n@@ ]<=@@ 0@@ )break; } if(x@@ [n@@ ]==@@ -1)break; for(inti=0;i<n;i++) { for(intj=0;j<n;j++) { if(x@@ [j]==@@ x[i]@@ *2@@ )@@ sum=sum+1; } } cout<<sum<<endl; sum=0; } return0; }  
c -1
h -1
0

intmain(){ intsz[100][100]; inti,k,@@ n,@@ j; int@@ ROW@@ ,@@ COL@@ ,@@ row,col; scanf("%d%d",&@@ ROW@@ ,&@@ COL@@ ); if(@@ ROW@@ >@@ COL@@ ){ j=@@ COL@@ -1; } else{ j=@@ ROW@@ -1; } for(i=0;i<@@ ROW@@ ;i++){ for(k=0;k<@@ COL@@ ;k++){ scanf("%d",&(sz[i]@@ [k]@@ )); } } for(n=0;n@@ <=j@@ ;n++){ for(row=0;row@@ <=n;@@ row++){ printf("%d\n",@@ sz[@@ row@@ ][@@ n-@@ row@@ ]); } } if(@@ COL@@ >@@ ROW@@ ){ for(n@@ =j+1@@ ;n@@ <@@ COL@@ ;n++){ for(row=0;row@@ <ROW@@ ;@@ row++){ printf("%d\n",@@ sz[@@ row@@ ][@@ n-@@ row@@ ]); } } for(n=@@ COL@@ ;n@@ <=@@ COL@@ +@@ ROW@@ -2@@ ;n++){ for(col@@ =@@ COL@@ -1;@@ col@@ >=@@ n-@@ ROW@@ +1;@@ col@@ --){ printf("%d\n",@@ sz[@@ n-@@ col@@ ][col@@ ]); } } } if(@@ ROW@@ >@@ COL@@ ){ for(n@@ =j+1@@ ;n@@ <ROW@@ ;n++){ for(col@@ =@@ COL@@ -1;@@ col@@ >=0;@@ col@@ --){ printf("%d\n",@@ sz[@@ n-@@ col@@ ][col@@ ]); } } for(n=@@ ROW@@ ;n@@ <=@@ COL@@ +@@ ROW@@ -2@@ ;n++){ for(col@@ =@@ COL@@ -1;@@ col@@ >=@@ n-@@ ROW@@ +1;@@ col@@ --){ printf("%d\n",@@ sz[@@ n-@@ col@@ ][col@@ ]); } } } if(@@ ROW@@ ==@@ COL@@ ){ for(n@@ =j+1@@ ;n@@ <=@@ COL@@ +@@ ROW@@ -2@@ ;n++){ for(col@@ =@@ COL@@ -1;@@ col@@ >=@@ n-@@ ROW@@ +1;@@ col@@ --){ printf("%d\n",@@ sz[@@ n-@@ col@@ ][col@@ ]); } } } return0; }  
c -1
h -1
voidmain() { introw,col,@@ a[100@@ ][100@@ ]={0},@@ i,j,k; scanf("%d%d",&row,&col); for(i=0;i<row;i++) for(j=0;j<col;j++) scanf("%d",&a[i][j]); for(k=0;k<col@@ ;k++) { for(i=0@@ ;k@@ -i@@ >=0&&i@@ <=row@@ -1;i++) printf("%d\n",a[@@ 0@@ +i@@ ][k@@ -i]); } for(k=1;k<@@ row@@ ;k++) { for(i=0@@ ;k@@ +i@@ <=row-1@@ &&@@ col-1@@ -i@@ >=0@@ ;i++) printf("%d\n",@@ a[k@@ +i@@ ][col@@ -1@@ -i]); } }  
c -1
h -1
1


structbook { intnum; charwriter@@ [20]; structbook*next; }; intmain() { intn,i,j,@@ m,@@ k,@@ c[@@ 26],@@ max; chara[@@ 26]; scanf("%d",&m); structbook*@@ p1,*p2,*head; for(i=0;i<m;i++) { p1=(structbook@@ *)malloc(@@ Len@@ ); if(i==0) { head=p1; } else { p2->next=p1; } p2=p1; scanf("%d%s",&p1->num,p1->@@ writer); } p2->next=NULL; p1=head; for(i=0;i<26;i++) { a[i]@@ =i+65; c[i]@@ =0; } for(j=0;j<m;j++) { for(i=0;i<26;i++) { n=strlen(@@ p1->@@ writer); for(k=0;k<n;k++) { if(a[i]==@@ p1->@@ writer@@ [k]) { c[i]@@ ++; } } } p1=p1->next; } max=0; for(i=0;i<26;i++) { if(c@@ [i]>@@ c[@@ max@@ ]) { max=i; } } printf("%c\n%d\n",@@ a[@@ max@@ ],c[@@ max@@ ]); p1=head; for(i=0;i<m;i++) { n=strlen(@@ p1->@@ writer); for(j=0;j<n;j++) { if(p1->@@ writer@@ [j]==@@ a[@@ max@@ ]) { printf("%d\n",@@ p1->num); } } p1=p1->next; } return0; }  
c -1
h -1
intmain() { inta,b,c,@@ n; scanf("%d%d%d",&a,&b,&c); if(a%@@ 400==0||(@@ a%4==0&&a%100!=0@@ )) { switch(@@ b){ case1: { n=@@ c; break; } case2: { n=31+@@ c; break; } case3: { n=@@ 60@@ +c; break; } case4: { n=@@ 91@@ +c; break; } case5: { n=@@ 121@@ +c; break; } case6: { n=@@ 152@@ +c; break; } case7: { n=@@ 182@@ +c; break; } case8: { n=@@ 213@@ +c; break; } case9: { n=@@ 244@@ +c; break; } case10: { n=@@ 274@@ +c; break; } case11: { n=@@ 305@@ +c; break; } case12: { n=@@ 335@@ +c; break; } } } else { switch(@@ b){ case1: { n=@@ c; break; } case2: { n=31+@@ c; break; } case3: { n=@@ 59@@ +c; break; } case4: { n=@@ 90@@ +c; break; } case5: { n=@@ 120@@ +c; break; } case6: { n=@@ 151@@ +c; break; } case7: { n=@@ 181@@ +c; break; } case8: { n=@@ 212@@ +c; break; } case9: { n=@@ 243@@ +c; break; } case10: { n=@@ 273@@ +c; break; } case11: { n=@@ 304@@ +c; break; } case12: { n=@@ 334@@ +c; break; } } } printf("%d",n); return0; }  
c -1
h -1
0

voidmain() { int@@ N1@@ [100],@@ N2@@ [100],@@ N@@ [@@ 200],@@ n1,n2; void@@ scan@@ (int@@ N1@@ [],int@@ N2@@ [],int@@ *@@ p1,int*p2@@ ); voidorder@@ (int@@ N1@@ [],int@@ n1,int@@ N2@@ [],int@@ n2); void@@ join@@ (int@@ N1@@ [],int@@ N2@@ [],int@@ N@@ [],int@@ n1,int@@ n2); voidprint@@ (int@@ N@@ [],int@@ n); scan@@ (@@ N1@@ ,@@ N2@@ ,&@@ n1,&n2); order@@ (@@ N1@@ ,@@ n1,@@ N2@@ ,@@ n2); join@@ (@@ N1@@ ,@@ N2@@ ,@@ N@@ ,@@ n1,n2@@ ); print(@@ N@@ ,@@ n1+@@ n2); } void@@ scan@@ (int@@ N1@@ [],int@@ N2@@ [],int@@ *@@ p1,int*p2@@ ) { inti; scanf("%d@@ %d",@@ p1,@@ p2@@ ); for(i=0;i<*@@ p1@@ ;i++)@@ scanf("%d",&@@ N1@@ [i]); for(i=0;i<*@@ p2@@ ;i++)@@ scanf("%d",&@@ N2@@ [i]); } voidorder@@ (int@@ N1@@ [],int@@ n1,int@@ N2@@ [],int@@ n2) { inti,j,@@ imin@@ ,@@ Nmin@@ ,@@ Nm@@ ; for(i=0;i<n1;i++) { imin@@ =i; Nmin@@ =@@ N1@@ [i]; for(j=i;j<@@ n1@@ ;j++) { if(@@ N1@@ [j]<@@ Nmin@@ ) { imin@@ =j; Nmin@@ =@@ N1@@ [j]; } } Nm@@ =@@ N1@@ [i]; N1@@ [i]=@@ N1@@ [@@ imin@@ ]; N1@@ [@@ imin@@ ]=@@ Nm@@ ; } for(i=0;i<n2;i++) { imin@@ =i; Nmin@@ =@@ N2@@ [i]; for(j=i;j<@@ n2@@ ;j++) { if(@@ N2@@ [j]<@@ Nmin@@ ) { imin@@ =j; Nmin@@ =@@ N2@@ [j]; } } Nm@@ =@@ N2@@ [i]; N2@@ [i]=@@ N2@@ [@@ imin@@ ]; N2@@ [@@ imin@@ ]=@@ Nm@@ ; } } void@@ join@@ (int@@ N1@@ [],int@@ N2@@ [],int@@ N@@ [],int@@ n1,int@@ n2) { inti; for(i=0;i<n1@@ ;i++)@@ N@@ [i]=@@ N1@@ [i]; for(i=@@ n1@@ ;i<@@ n1+n2@@ ;i++)@@ N@@ [i]=@@ N2@@ [i-@@ n1@@ ]; } voidprint@@ (int@@ N@@ [],int@@ n) { inti; printf("%d",@@ N@@ [0]); for(i=1;i<@@ n;i++)@@ printf("%d",@@ N@@ [i]); }  
c -1
h -1
intmain(){ intn; cin>>n; inta[@@ 20000],@@ i,@@ t,@@ k=0,@@ h; for(i=0;i<n;i++) cin>>a[i]; for(i=0;i<n;i++) for(t@@ =i+1@@ ;t@@ <@@ n-@@ k;@@ t++) if(a[i]==@@ a[t@@ ]){ for(@@ h=@@ t;@@ h@@ <@@ n-@@ k@@ -1;@@ h++) a[h@@ ]=a[@@ h@@ +1]; k++; t@@ --@@ ;} for(i=0;i<n@@ -k@@ -1;i++) cout<<a[i]@@ <<''; cout<<a[@@ n-@@ k@@ -1]; return0;}  
c -1
h -1
0

intmax@@ (inta[],int@@ m); ints[@@ 30]; voidmain() { inta[100@@ ],@@ k,@@ i,@@ n; for(i=0;i<@@ 30@@ ;i++) s[i]@@ =1; scanf("%d",&k); for(i=k@@ ;i>0;i--) scanf("%d",&a[i]); a[k@@ +1]=@@ 100000@@ ; n=@@ max@@ (a,@@ k@@ +1); printf("%d\n",@@ n-1); } intmax@@ (inta[],int@@ m) { int@@ x,@@ i,@@ t=0; x=@@ a[m@@ ]; if(m==1) return(1); else { for(i=@@ m-1@@ ;i>0;i--) { if(x@@ >=@@ a[i]&&@@ t@@ <@@ max@@ (a,@@ i@@ )) t=@@ max@@ (a,@@ i); } return(@@ t@@ +1); } }  
c -1
h -1
intmain() { structstudent{ intnumber; intchinese; intmath; intsum; }@@ students@@ [100000]; intn,i; int@@ a1,@@ b1,@@ a2,@@ b2@@ ,@@ a3@@ ,@@ b3@@ ; int@@ c1@@ ,@@ c2@@ ; intmax=0; scanf("%d",&n); for(i=0;i<n;i++) { scanf("%d%d%d",&@@ students[i].@@ number@@ ,&@@ students[i].@@ chinese@@ ,&@@ students[i].@@ math); students[i].@@ sum=@@ students[i].@@ chinese+@@ students[i].@@ math; } max=0; for(i=0;i<n;i++) { if(@@ students[i].@@ sum@@ >max) { max=@@ students[i].@@ sum; a1@@ =@@ students[i].@@ number; b1@@ =@@ students[i].@@ sum; c1@@ =i; } } max=0; for(i=0;i<n;i++) { if(@@ students[i].@@ sum@@ >max@@ &&i!=@@ c1@@ ) { max=@@ students[i].@@ sum; a2@@ =@@ students[i].@@ number; b2@@ =@@ students[i].@@ sum; c2@@ =i; } } max=0; for(i=0;i<n;i++) { if(@@ students[i].@@ sum@@ >max@@ &&i!=@@ c2@@ &&i!=@@ c1@@ ) { max=@@ students[i].@@ sum; a3@@ =@@ students[i].@@ number; b3@@ =@@ students[i].@@ sum; } } printf("%d%d\n",@@ a1,@@ b1@@ ); printf("%d%d\n",@@ a2,@@ b2@@ ); printf("%d%d\n",@@ a3@@ ,@@ b3@@ ); return0; }  
c -1
h -1
0

int@@ count; voidf@@ (inta,intb) { intj; if(a==1) count@@ +=1; else { for(j=@@ b@@ ;j<=@@ a@@ ;j++) { if(a%@@ j@@ ==0) f(@@ a/@@ j@@ ,j); } } } intmain() { intn,i,@@ number; scanf("%d",&n); for(i=0;i<n;i++) { count=0; scanf("%d",&@@ number); f(@@ number,@@ 2); printf("%d\n",@@ count); } return0; }  
c -1
h -1
struct@@ author { intnum; char@@ aut@@ [27]; }a[@@ 999]; voidmain() { void@@ search@@ (struct@@ author@@ b[@@ ],intn,@@ char@@ marker@@ ); intm,@@ i,@@ times@@ [@@ 30]={0}; int@@ length@@ =0,@@ j; intmax=0,@@ flag@@ =@@ 9@@ ; char@@ chac@@ ; scanf("%d",&m); for(i=0;i<m;i++) { scanf("%d%s",&@@ a[i].@@ num,&@@ a[i].@@ aut@@ ); length@@ =strlen(@@ a[i].@@ aut@@ ); for(j=0;j<@@ length@@ ;j++) { chac@@ =@@ a[i].@@ aut@@ [j]; times@@ [@@ chac@@ -'A']++; } } for(i=0;i<26;i++) { if(max<@@ times@@ [i]) { max=@@ times@@ [i]; flag@@ =i; } } printf("%c\n%d\n",@@ (char)(@@ flag@@ +'@@ A')@@ ,max); search@@ (a,@@ m,@@ (char)(@@ flag@@ +'@@ A')@@ ); } void@@ search@@ (struct@@ author@@ b[@@ ],intn,@@ char@@ marker@@ ) { inti,j; for(i=0;i<n;i++) { for(j=0;j<strlen(@@ b[i].@@ aut@@ );j++) { if(b[i].@@ aut@@ [j]==@@ marker@@ ) printf("%d\n",b[i].@@ num); } } }  
c -1
h -1
0

intmain() { charstr@@ [100][100]; int@@ s1@@ [100],@@ sz@@ [100],@@ t@@ [100]; intn,i,@@ p,@@ k; scanf("%d",&n); intj=0; for(i=0;i<n;i++) { scanf("%s%d",@@ str@@ [i],&@@ sz@@ [i]); if(sz[i]@@ >=60) { t@@ [j]@@ =i; s1@@ [j]=@@ sz[i]; j++; } } for(k=1;k<=@@ j@@ ;k++) { for(p=0;p@@ <j@@ -k@@ ;p++) { if(s1@@ [p@@ ]<@@ s1@@ [p@@ +1]) { int@@ e,@@ f; e=@@ s1@@ [p@@ +1]; s1@@ [p@@ +1]=@@ s1@@ [p@@ ]; s1@@ [p@@ ]=@@ e; f=@@ t@@ [p@@ +1]; t@@ [p@@ +1]=@@ t@@ [p@@ ]; t@@ [p@@ ]=@@ f; } } } for(p=0;p@@ <j@@ ;p++) { printf("%s\n",@@ str@@ [t@@ [p@@ ]@@ ]); } for(i=0;i<n;i++) { if(sz[i]@@ <60) printf("%s\n",@@ str[i]); } return0; }  
c -1
h -1
intmain() { intcount@@ ,@@ n,@@ j,@@ i=1; inta[20000]; scanf("%d",&n); for(i@@ ;i<=n;i++) { scanf("%d",&a[i]); for(@@ count=0,@@ j@@ =1@@ ;j<@@ i;j++) { if(a[i]==a[j]) count++; } if(i@@ ==1&&@@ count@@ ==0) printf("%d",a[i]); elseif(@@ i@@ !=1@@ &&@@ count@@ ==0) printf("%d",a[i]); } return0; }  
c -1
h -1
0

intmain(){ inti,j,@@ len1,len2,@@ num=0,@@ t=1; double@@ rate@@ ; chara[500],b[500]; scanf("%lf",&@@ rate@@ ); scanf("%s",a); scanf("%s",b); len1@@ =strlen(a); len2@@ =strlen(b); if(len1!=@@ len2){ printf("error"); } if(len1@@ ==@@ len2){ for(i=0;i<len1;i++){ if(a[i]==b[i]@@ &&(@@ a[i]=='@@ A'||a[i]=='T'||a[i]=='@@ C'||@@ a[i]=='@@ G')&&(@@ b[i]=='@@ A'||@@ b[i]=='@@ T@@ '|@@ | b[i]=='@@ C'||@@ b[i]=='@@ G')) num++; elseif((@@ a[i]!='@@ A'&&a[i]!='T'&&a[i]!='C'&&a[i]!='G')||(@@ b[i]!='A'&&b[i]!='@@ T@@ '&@@ & b[i]!='@@ C'&&b[i]!='@@ G')){ t=0; break; } } if(t==0) printf("error"); else{ if(num@@ *1.0/@@ len1@@ >@@ rate@@ ) printf("yes"); else printf("no"); } } return0; }  
c -1
h -1
chars1@@ [@@ 10000],@@ s2[@@ 10000],@@ s[@@ 10000]; int@@ Len@@ (@@ char*@@ s) { inti; for(i=0;s[i]@@ ;i++@@ ); return@@ i; } int@@ Match@@ (@@ char*@@ s1@@ ,char*@@ s2@@ ) { inti,@@ l=@@ Len@@ (@@ s2); for(i=0;i<l;i++) if(s1@@ [i]!=@@ s2@@ [i]) return0; return1; } int@@ Find@@ (@@ char*@@ s,@@ char*@@ s1@@ ) { inti,@@ l=@@ Len@@ (@@ s); for(i=0;i<l;i++) if(@@ Match@@ (@@ s@@ +@@ i,@@ s1@@ )) return@@ i; return@@ l; } intmain() { intl,@@ i,@@ t; scanf("%s%s%s",@@ s,@@ s1,@@ s2); l=@@ Len@@ (@@ s); t=@@ Find@@ (@@ s,@@ s1); if(t==@@ l) printf("%s\n",@@ s); else { for(i=0;i<t;i++) printf("%@@ 1c@@ ",@@ s[i]); printf("%s",@@ s2); for(i=@@ Len@@ (@@ s1@@ )+@@ t@@ ;i<@@ l@@ ;i++) printf("%@@ 1c@@ ",@@ s[i]); printf("\n"); } return0;}  
c -1
h -1
0

int@@ answer@@ =0; int@@ a=@@ 2; voidf@@ (int,int); intmain() { intn=0; inti=0; int@@ data@@ [100]={0}; cin>>n; for(i=0;i<n;i++) { cin>>@@ data@@ [i]; } for(i=0;i<n;i++) { f(@@ data@@ [i],@@ a); cout<<@@ answer@@ <<endl; answer@@ =0; } } voidf@@ (intm,int@@ n) { inti=0; if(m==1) { answer@@ =@@ answer@@ +1; } for(i=n@@ ;i<=@@ m;i++) { if(m@@ %i==0) { f(@@ m@@ /i,i); } } }  
c -1
h -1
intmain() {@@ intn,@@ v@@ [@@ 20000],@@ m=0,@@ s[@@ 20000],@@ p=0; scanf("%d",&n); for(inti=0;i<=@@ n-1;i++) { scanf("%d",&@@ v@@ [i]); } for(intj=1;j<=@@ n-1;j++) { for(intk=0@@ ;k<=@@ j@@ -1;k++) { if(@@ v@@ [j]!=@@ v@@ [k]) {@@ p@@ ++;} } if(p==@@ j@@ ){@@ s[m@@ ]=@@ v@@ [j]@@ ;m@@ ++;} p=0; } if(m==0) {printf("%d",@@ v@@ [0]@@ );} else {printf("%d",@@ v@@ [0]@@ );} for(intk=0@@ ;k<=@@ m-1@@ ;k++) { if(k==@@ m-1@@ ){@@ printf("%d",@@ s[k]@@ );} else{@@ printf("%d",@@ s[k]@@ );} } }  
c -1
h -1
0

intmain() { void@@ pre@@ (int@@ *,@@ int@@ ); void@@ bubble_sort@@ (int@@ *,@@ int@@ ); void@@ merge@@ (int@@ *,@@ int@@ ,int@@ *,@@ int@@ ,int*@@ ); voidprint@@ (int@@ *,@@ int@@ ); inta[@@ 1000],b[1000],@@ c[@@ 1000],@@ A@@ ,@@ B@@ ; scanf("%d%d",&@@ A@@ ,&@@ B@@ ); pre@@ (a,@@ A@@ );@@ bubble_sort@@ (a,@@ A@@ ); pre@@ (b,@@ B@@ );@@ bubble_sort@@ (b,@@ B@@ ); merge@@ (a,@@ A@@ ,@@ b,@@ B@@ ,@@ c); print(@@ c,@@ A@@ +@@ B@@ ); } void@@ pre@@ (int*@@ a,int@@ A@@ ) { inti; for(i=0;i<@@ A@@ ;i++) scanf("%d",a@@ +i); } void@@ bubble_sort@@ (int*@@ a,int@@ A@@ ) { inti,j,temp; for(j=@@ A@@ -1@@ ;j>0;j--) { for(i=0;i<j;i++) if(a[i]>a[i+1]) { temp=a[i]; a[i]=a[i+1]; a[i+1]=@@ temp; } } } void@@ merge@@ (int*@@ a,int@@ A@@ ,int*@@ b,int@@ B@@ ,int*@@ c) { inti; for(i=0;i<@@ A@@ ;i++) c[i]=a[i]; for(i=0;i<@@ B@@ ;i++) c@@ [i+@@ A@@ ]=b[i]; } voidprint@@ (int*@@ c@@ ,int@@ C@@ ) { inti; printf("%d",c@@ [0]); for(i=1;i<@@ C@@ ;i++) printf("%d",c[i]); }  
c -1
h -1
intmain() { intn,@@ y,@@ r,@@ s=0,@@ i; scanf("%d%d%d",&@@ n,&@@ y,&@@ r); inta[@@ 12@@ ]; a[0]=@@ 31,@@ a[1]=@@ 28@@ ,@@ a[2]=@@ 31,@@ a[@@ 3@@ ]=30@@ ,a[@@ 4@@ ]=@@ 31,@@ a[@@ 5@@ ]=30@@ ,a[@@ 6@@ ]=@@ 31,@@ a[@@ 7@@ ]=@@ 31,@@ a[@@ 8@@ ]=30@@ ,a[@@ 9@@ ]=@@ 31,@@ a[@@ 10@@ ]=30@@ ,a[@@ 11@@ ]=31; if((@@ n@@ %4==0&&@@ n@@ %100!=0@@ )||(@@ n@@ %@@ 400==0)) a[1]=29; for(i=0;i<@@ y@@ -1;i++) s=s+@@ a[i]; s=s+@@ r; printf("%d\n",s); getchar(); getchar(); }  
c -1
h -1
0

structbook { intnum; char@@ edt@@ [27]; }; struct@@ total { charname@@ ; int@@ amount@@ ; }; intmain() { intm,@@ i,j,k; structbook@@ bk@@ [1000]; struct@@ total@@ to@@ [27]; scanf("%d",&m); for(i=0;i<m;i++) scanf("%d%s",&@@ bk[i].@@ num,@@ bk[i].@@ edt@@ ); for(i=0;i<26;i++) { to@@ [i].name@@ ='A'+i; to@@ [i].@@ amount@@ =0; } for(i=0;i<m;i++) { for(j=0;j<strlen(@@ bk[i].@@ edt@@ );j++) { for(k=0;k<26;k++) { if(@@ bk[i].@@ edt@@ [j]==@@ to@@ [k].@@ name@@ ) to@@ [k].@@ amount@@ ++; } } } for(i=k@@ =0;i<@@ 26;i++) { if(@@ to@@ [i].@@ amount@@ >@@ to@@ [k].@@ amount@@ ) k=i; } printf("%c\n%d\n",@@ to@@ [k].@@ name,@@ to@@ [k].@@ amount@@ ); for(i=0;i<m;i++) { for(j=0;j<strlen(@@ bk[i].@@ edt@@ );j++) if(@@ bk[i].@@ edt@@ [j]==@@ to@@ [k].@@ name@@ ) printf("%d\n",@@ bk[i].@@ num); } return0; }  
c -1
h -1
intmain(){ inta[@@ 101][101]; intr,@@ c@@ ,j,@@ k,@@ l,@@ m,@@ sum,@@ n,@@ p; cin>>n; for(p=1@@ ;p@@ <=n;@@ p++) {@@ sum=0; cin>>@@ r; cin>>@@ c; for(inti=0;i<@@ r;i++) for(intj=0;j<@@ c;j++) cin>>a[i][j]; for(j=0;j<@@ r@@ ;j++) { sum=sum+*@@ *(a@@ +j); } for(k=1;k<@@ c@@ ;k++) { sum=sum+*(@@ *(a+@@ r@@ -1)@@ +@@ k); } for(l@@ =@@ r@@ -2@@ ;@@ l@@ >=0;@@ l@@ --) { sum=sum+*(@@ *(a+@@ l@@ )+@@ c@@ -1); } for(m=1;m@@ <@@ c@@ -1@@ ;m++) { sum=sum+*(@@ *(a+@@ 0@@ )+@@ m); } cout<<sum<<endl; } return0; }  
c -1
h -1
0

intmain(){ inti; doublen,@@ p=0,@@ a,b,@@ m=0; chars1@@ [500],@@ s2@@ [500]; scanf("%lf",&n); scanf("%s",@@ s1); scanf("%s",@@ s2); a=strlen(@@ s1); for(i=0;i<a;i++){ if((@@ s1@@ [i]!='A'&&@@ s1@@ [i]!='T'&&@@ s1@@ [i]!='C'&&@@ s1@@ [i]!='G')||(@@ s2@@ [i]!='A'&&@@ s2@@ [i]!='T'&&@@ s2@@ [i]!='C'&&@@ s2@@ [i]!='G')){ m=1; break; } if(s1[i]==s2@@ [i]){ p++; } } if(m@@ ==1){ printf("error"); }else{ b=@@ p@@ /@@ a; if(b@@ >n){ printf("yes"); }else{ printf("no"); } } return0; }  
c -1
h -1
intmain() { inta,b,c,@@ d; intf@@ [12]={31,28,31,30,31,30,31,31,30,31,30,31}; scanf("%d%d%d",&a,&b,&c); intsum=0,@@ i; for(i=0;i<b@@ -1;i++) { sum=sum+@@ f[i]; } if(((@@ a%@@ 4==0)&&(@@ a%100!=0@@ )@@ )||(@@ a%400==0)) { if(b@@ <@@ 3) { d=@@ sum@@ +c; } else { d=@@ sum@@ +1@@ +c; } } else { d=@@ sum@@ +c; } printf("%d",d); return0; }  
c -1
h -1
0

intmain() { intn,i,@@ l@@ ,j,@@ t,@@ k@@ [@@ 30@@ ][@@ 99@@ ],@@ a[@@ 30],@@ o@@ ,@@ q,@@ max=0,@@ maxman@@ ; for(i=0;i<@@ 30@@ ;i++) a[i]=0; chars[@@ 40@@ ]; scanf("%d",&n); for(j=0;j<n;j++) { scanf("%d%s",&@@ o@@ ,@@ s); l@@ =strlen(s); for(i=0;i<l;i++) { q=@@ s[i]@@ -'A'; a[q@@ ]++; t=@@ a[q@@ ]; k@@ [q@@ ][@@ t@@ ]=@@ o@@ ; } } for(i@@ ='@@ A@@ '-@@ 'A'@@ ;i<=@@ '@@ Z@@ '-@@ 'A'@@ ;i++) { if(a[i]>max) { max=a[i]; maxman@@ =i; } } printf("%c\n%d\n",@@ maxman@@ +'A',@@ max); for(i=1;i<=@@ max@@ ;i++) printf("%d\n",@@ k@@ [@@ maxman@@ ][i]); return0; }  
c -1
h -1
intmain(){ inti,j,@@ row,col,@@ p@@ [100][100]; cin>>row>>col; for(i=0;i<row;i++){ for(j=0;j<col;j++){ cin>>@@ p@@ [i][j]; } } for(i=0;i<@@ row+col@@ -1;i++){ for(j=0;j<@@ i@@ +1@@ &&j@@ <row@@ ;j++){ if(i@@ -j@@ >=@@ col@@ )continue; cout<<@@ *(*(p@@ +j)@@ +i-j@@ )<<endl; } } return0; }  
c -1
h -1
0

intmain() { int@@ juzhen@@ [@@ 101][101]; intm,n,i,j,@@ sum; intk; cin>>k; while(k@@ >0) {@@ sum=0; cin>>m>>n; for(i=0;i<m;i++){ for(j=0;j<n;j++){ cin>>@@ juzhen@@ [i][j]; if(i==0)@@ sum+=@@ juzhen@@ [i][j]; if(i==@@ m-1)@@ sum+=@@ juzhen@@ [i][j]; if(j@@ ==0&&@@ i@@ !=0@@ &&i!=@@ m-1)@@ sum+=@@ juzhen@@ [i][j]; if(j==@@ n-1@@ &&i@@ !=0@@ &&i!=@@ m-1)@@ sum+=@@ juzhen@@ [i][j]; } } cout<<sum<<endl; k--; } return0; }  
c -1
h -1
intmain() { intb,@@ d=0,@@ s[@@ 15],@@ i,j; while(1) { scanf("%d",&s@@ [0]); if(s@@ [0]@@ ==-1)break; for(i=1;@@ s@@ [i-1]@@ !=0;i++) scanf("%d",&s[i]); for(i=0;s[i]@@ !=0;i++) for(j=0;@@ s[j]@@ !=0;j++) {if((@@ s@@ [i]==@@ s[j]@@ *2@@ )&&(@@ s[i]@@ !=0)&&(@@ s[j]@@ !=0)) d++; } printf("%d\n",@@ d); d=0; } return0; }  
c -1
h -1
0

intf(int@@ c@@ ,int@@ t); voidmain() { intn,@@ c; scanf("%d",&n); for(@@ ;n@@ >0@@ ;n@@ --) { scanf("%d",&@@ c); if(c@@ ==1||@@ c@@ ==@@ 2) printf("@@ 1@@ \n"); else printf("%d\n",@@ f(@@ c,@@ 2)); } } intf(int@@ c@@ ,int@@ t) { intcount@@ =1,i; for(i=@@ t@@ ;i<@@ c@@ ;i++) { if(c@@ %i==0) count+=@@ f(@@ c@@ /i,i); } if(i==@@ c)@@ returncount; elsereturn@@ 0@@ ; }  
c -1
h -1
intmain() { inta[@@ 1001]; intn,k,i,@@ sum; int@@ p,q; int@@ control@@ =0; cin>>n>>k; for(i=1;i<=n;i++) {@@ cin>>@@ a[i];} for(p=1@@ ;p@@ <=n;@@ p++) {@@ for(q=@@ n;@@ q@@ >@@ p@@ ;q@@ --) {@@ sum=@@ a[p@@ ]+@@ a[q@@ ]; if(sum@@ ==k) {@@ control@@ =1; break;} } } if(@@ control@@ ==0) cout<<"no"; else@@ cout<<"yes"; return0; }  
c -1
h -1
0

intmain() { introw,col; scanf("%d%d",&row,&col); inta[100][100@@ ]={0}; inti,j; for(i=0;i<row;i++) {@@ for(j=0;j<col@@ ;j++)@@ scanf("%d",&a[i]@@ [j]@@ );} int@@ step@@ =0; i=0; j=0; intt; if(row@@ *col@@ >0@@ ){@@ printf("%d",@@ a[0][0]@@ );@@ step@@ ++;} while(@@ step@@ <row@@ *@@ col) { if(i@@ +1@@ <0@@ ||j@@ -1@@ <0) { t=i; i@@ =j; j=@@ t@@ +1; if(i@@ <row@@ &&j@@ <col) {@@ printf("\n%d",@@ a[i]@@ [j]); step@@ ++;} } else { i=i+1; j=j-1; if(i@@ <row@@ &&j@@ <col) {@@ printf("\n%d",@@ a[i]@@ [j]); step@@ ++;} } } return0; }  
c -1
h -1
main() { intn,i; scanf("%d",&n); charID@@ [n@@ ][10]; intage@@ [n]; for(i=0;i<=n-1;i++) { scanf("%s%d",@@ ID@@ [i],&@@ age[i]); } char@@ ID2@@ [n@@ ][10]; intb[@@ n]; int@@ j=0,@@ t,@@ k; for(i=0;i<=n-1;i++) { if(age[i]@@ >=60) { b[j]=@@ age[i]; strcpy(@@ ID2@@ [j],@@ ID@@ [i]); j++; } } charc[@@ 10]; for(k=0;k<j@@ -1;k++) { for(i=0;i<j@@ -1@@ -@@ k;i++) { if(b[i]@@ <b@@ [i+1]) { t=b[i]; b[i]=b[i+1]; b[i+1]=@@ t; strcpy(@@ c,@@ ID2@@ [i]); strcpy(@@ ID2@@ [i],@@ ID2@@ [i+1]); strcpy(@@ ID2@@ [i+1],@@ c); } } } for(i=0;i<j;i++) printf("%s\n",@@ ID2@@ [i]); char@@ ID3@@ [n@@ ][10]; intm=0; for(i=0;i<n;i++) { if(age[i]@@ <60) { strcpy(@@ ID3@@ [m@@ ],@@ ID@@ [i]); m++; } } for(i=0;i<m;i++) printf("%s\n",@@ ID3@@ [i]); getchar(); getchar(); getchar(); }  
c -1
h -1
0

intmain(intargc,char*argv[]) { intn,i,j,@@ m,@@ b=0,@@ max; int@@ let@@ [26]={0}; char@@ a; structstudent{ intnum; charname[26]; }@@ book[999]; scanf("%d",&n); for(i=0;i<n;i++){ scanf("%d%s",&book[i].@@ num,&@@ book[i].name); } for(i=0;i<n;i++){ m=strlen(@@ book[i].name); for(j=0;j<m;j++){ let@@ [@@ book[i].@@ name@@ [j]@@ -'A']++; } } max=@@ let@@ [0]; for(i=0;i<@@ 25@@ ;i++){ if(@@ let@@ [i]@@ >max){ max=@@ let@@ [i]; b=i; } } a=@@ b@@ +'A'@@ ; printf("%c\n%d\n",@@ a,@@ max); for(i=0;i<n;i++){ m=strlen(@@ book[i].name); for(j=0;j<m;j++){ if(book[i].@@ name[j]==@@ a){ printf("%d\n",book[i].@@ num); } } } return0; }  
c -1
h -1
main() { char*@@ s=(@@ char@@ *)malloc(@@ 256@@ )@@ ,*@@ s1@@ =(char*)malloc(@@ 256@@ )@@ ,*@@ s2@@ =(char*)malloc(@@ 256); inti,j,k,@@ m=0; gets(s); gets(@@ s1); gets(@@ s2); for(i=0;@@ *(@@ s@@ +i)@@ !='\0';i++) { for(j=i,@@ k@@ =0;@@ (*(@@ s@@ +j)@@ !=@@ '\0@@ ')&&(@@ *(@@ s1@@ +k@@ )!=@@ '\0@@ ')&&(@@ *(@@ s@@ +j)@@ ==@@ *(@@ s1@@ +k@@ ))@@ ;j++@@ ,k@@ ++@@ ); if(k==@@ strlen(@@ s1@@ )) { for(j=i,@@ k@@ =j@@ +@@ strlen(@@ s1@@ )@@ ;k<@@ strlen(@@ s)@@ ;k++@@ ,j@@ ++) *(@@ s@@ +j)@@ =*(@@ s@@ +@@ k); *(@@ s@@ +j@@ +@@ strlen(@@ s2@@ ))@@ ='\0'; for(j@@ =-@@ -j@@ +@@ strlen(@@ s2@@ ),@@ k@@ =j@@ -strlen(@@ s2@@ )@@ ;k@@ >=i@@ ;j--@@ ,k@@ --) *(@@ s@@ +j)@@ =*(@@ s@@ +@@ k); for(j=i,@@ k@@ =0;@@ *(@@ s2@@ +k)@@ !='\0'@@ ;j++@@ ,k++) *(@@ s@@ +j)@@ =*(@@ s2@@ +@@ k); m=m+1; } if(m@@ !=0) break; } puts(@@ s); }  
c -1
h -1
0

structstudent { intnum; intchinese; intmath; }; structstudentstu[100000]; int@@ sum[@@ 100000]; intmain(intargc,char*argv[]) { inta,b,c,@@ num1,num2@@ ,@@ num3@@ ; inti,n; scanf("%d",&n); for(i=0;i<n;i++) { scanf("%d%d%d",&stu[i].num,&stu[i].@@ chinese@@ ,&stu[i].math); } for(i=0;i<n;i++) { sum[i]=@@ stu[i].@@ chinese+@@ stu[i].@@ math; } a=@@ sum[@@ 0]; num1@@ =1; if(a<@@ sum@@ [1@@ ]) { b=@@ a; num2@@ =@@ num1@@ ; a=@@ sum@@ [1]; num1@@ =@@ 2; } else { b=@@ sum@@ [1]; num2@@ =@@ 2; } c=0; for(i=2@@ ;i<n;i++) { if(a<@@ sum@@ [i]) { c=@@ b; num3@@ =@@ num2@@ ; b=@@ a; num2@@ =@@ num1@@ ; a=@@ sum[i]; num1@@ =i+1; } else if(b@@ <@@ sum@@ [i]) { c=@@ b; num3@@ =@@ num2@@ ; b=@@ sum[i]; num2@@ =i+1; } else if(c@@ <@@ sum@@ [i]) { c=@@ sum[i]; num3@@ =i+1; } } printf("%d%d\n",@@ num1,@@ a); printf("%d%d\n",@@ num2@@ ,@@ b); printf("%d%d\n",@@ num3@@ ,@@ c); return0; }  
c -1
h -1
inta[@@ 1001@@ ][@@ 1001]; intmain(){ intn; cin>>n; inti,j; for(i=0;i<n@@ ;++@@ i){ for(j=0;j<@@ n;++@@ j){ cin>>a[i][j]; } } int@@ sx@@ ,@@ sy@@ ,@@ ex@@ ,@@ ey@@ ,@@ flag=0; for(i=0;i<n@@ ;++@@ i){ for(j=0;j<@@ n;++@@ j){ if(a[i][j]==0&&@@ flag@@ ==0){ sx@@ =i; sy@@ =j; flag=1; } else@@ if(a[i][j]==0&&@@ flag@@ ==1){ ex@@ =i; ey@@ =j; } } } sx@@ +=@@ 1@@ ;@@ sy@@ +=@@ 1@@ ;@@ ex@@ -=@@ 1@@ ;@@ ey@@ -=@@ 1; intsum@@ =(@@ ex@@ -@@ sx@@ +1)*(@@ ey@@ -@@ sy@@ +1); cout<<sum<<endl; return0; }  
c -1
h -1
0

int@@ f(@@ char@@ x,@@ char@@ y) { if(x==@@ y)@@ return1; else@@ return0; } intmain() { double@@ r,@@ x; scanf("%lf",&@@ r); char@@ str1@@ [1000],@@ str2@@ [1000]; scanf("%s@@ \n",@@ str1); scanf("%s",@@ str2); int@@ len1,len2@@ ; inti,@@ count=0; len1=strlen(@@ str1); len2=strlen(@@ str2); if(len1!=@@ len2){ printf("error"); return0; } for(i=0;@@ str1@@ [i]@@ !=0@@ ;i++){ if((@@ str1@@ [i]!='A'&&@@ str1@@ [i]!='C'&&@@ str1@@ [i]!='G@@ '&&@@ str1@@ [i]!='T')@@ ||(@@ str2@@ [i]!='A'&&@@ str2@@ [i]!='C'&&@@ str2@@ [i]!='G@@ '&&@@ str2@@ [i]!='T')@@ ){ printf("error"); return0; } } for(i=0;@@ str1@@ [i]@@ !=0@@ ;i++){ if(@@ f(@@ str1@@ [i],@@ str2@@ [i])@@ ==1){ count++; } } x@@ =1.0*@@ count@@ /@@ len1; if(x>@@ r@@ ){ printf("yes"); } else{ printf("no"); } return0; }  
c -1
h -1
intm,n,@@ a[@@ 20@@ ]={0},b[@@ 20@@ ]={0},@@ c[@@ 40@@ ]={0},@@ i,j,k; intmain() { void@@ qushu@@ (); voidpaixu@@ (); voidhebing@@ (); void@@ xianshi@@ (); qushu@@ (); paixu@@ (); hebing@@ (); xianshi@@ (); } void@@ qushu@@ () { scanf("%d%d",&m,&n); for(i=0;i<m;i++) scanf("%d",&a[i]); for(i=0;i<n;i++) scanf("%d",&b[i]); } voidpaixu@@ () { for(i=0;i<m-1;i++) for(j=0;j<m-1;j++) { if(a[j]>a[j+1]) { k=@@ a[j]; a[j]=a[j+1]; a[j+1]=@@ k; } } for(i=0;i<n-1;i++) for(j=0;j<n-1;j++) { if(b[j]>b[j+1]) { k=@@ b[j]; b[j]=b[j+1]; b[j+1]=@@ k; } } } voidhebing@@ () { for(i=0;i<m;i++) c[i]=a[i]; for(i=m;i<@@ m+n;i++) c[i]=b[i-@@ m]; } void@@ xianshi@@ () { printf("%d",c@@ [0]); for(i=1;i<@@ m+n;i++) printf("%d",c[i]); printf("\n"); }  
c -1
h -1
0

intsz[@@ 1010@@ ]; intmain() { intn,i,@@ a,b,@@ c,@@ h@@ =0,@@ k=0,@@ j=0; scanf("%d%d\n",&n,&@@ k); scanf("%d",&sz@@ [0]); for(i=1;i<n;i++) { scanf("%d",&sz[i]); } for(i=0;i<n;i++) { for(j=n-1;j>i;j--) { if(sz[i]+sz@@ [j]==k) { printf("yes"); h@@ =1; break; } } if(h@@ ==1) { break; } } if(h@@ ==0) { printf("no"); } return0; }  
c -1
h -1
void@@ rank@@ (intn,int@@ c) { intnum[@@ 10],@@ i,j; for(i=0;i<n;i++) { scanf("%d",&@@ num[i]); } for(i=0;i<n-1;i++) { for(j=0;j<n@@ -i-1;j++) { inta; if(num@@ [j]>@@ num@@ [j+1]) { a=@@ num@@ [j]; num@@ [j]=@@ num@@ [j+1]; num@@ [j+1]=@@ a; } } } for(i=0;i<n;i++) { printf("%d",@@ num[i]); if(i!=@@ n-1) { printf(""); } } if(c@@ !=@@ 2) { printf(""); } } void@@ count@@ () { intb[@@ 2@@ ],@@ i; scanf("%d%d",&@@ b[0]@@ ,&@@ b[1@@ ]); for(i=1;i<=@@ 2@@ ;i++) { rank@@ (@@ b@@ [i-1@@ ],@@ i); } } intmain() { void@@ rank@@ (intn,int@@ c); void@@ count@@ (); count@@ (); return0; }  
c -1
h -1
0

intleap@@ (intyear@@ ){ if((year%4==0&&year%100!=0@@ )||@@ year%400==0) return1; else{ return0; } } voidmain(){ intyear,month,day; intdays@@ ,i; days@@ =0; scanf("%d%d%d",&year,&month,&day); for(i=1;i<@@ month@@ ;i++){ if(i==1||i==3||i==5||i==7||i==8||i==10@@ ||i==@@ 12) days@@ +=@@ 31; if(i==@@ 4||i==6||i==9||i==11) days@@ +=@@ 30; if(i==@@ 2@@ ){ if(leap@@ (year@@ )) days@@ +=@@ 29; else{ days@@ +=@@ 28; } } } days@@ +=@@ day; printf("%d\n",@@ days@@ ); }  
c -1
h -1
voidmain() { structstudent { intnum,@@ sum; }stu[100000]; intn,i,j,@@ t,@@ chi@@ ,@@ math; scanf("%d",&n); for(i=0;i<n;i++) { scanf("%d%d%d",&stu[i].@@ num,&@@ chi@@ ,&@@ math); stu[i].sum=@@ chi@@ +@@ math; } for(i=0;i<3;i++) { for(j=n-1;j>i;j--) { if(stu[j].@@ sum>@@ stu[j-1].@@ sum) { t=@@ stu[j].@@ sum; stu[j].@@ sum=@@ stu[j-1].@@ sum; stu[j-1].@@ sum=@@ t; t=@@ stu[j].@@ num; stu[j].@@ num=@@ stu[j-1].@@ num; stu[j-1].@@ num=@@ t; } } } printf("%d%d\n",@@ stu[0].@@ num,@@ stu[0].@@ sum); printf("%d%d\n",@@ stu[1].@@ num,@@ stu[1].@@ sum); printf("%d%d",@@ stu[2@@ ].num,@@ stu[2@@ ].sum); }  
c -1
h -1
0

intmain() { int@@ ys@@ (int@@ s@@ ,int@@ p); intn,m,@@ i,@@ t; scanf("%d",&n); for(i=1;i<=n;i++) { scanf("%d",&m); t=@@ ys@@ (m,@@ 2); printf("%d\n",t); } return0; } int@@ ys@@ (int@@ s@@ ,int@@ p) { intj,@@ a@@ =1,@@ b; for(j=@@ p@@ ;j@@ *@@ j@@ <=@@ s@@ ;j++) { if(s@@ %j==0) { b=@@ s/@@ j; a=@@ a+@@ ys@@ (b,@@ j); } } return(@@ a); }  
c -1
h -1
intnum@@ (intn,int@@ *p@@ ) { int@@ i@@ =1,@@ max=0; int*@@ q=@@ p@@ +1; if(n==@@ 2) { if(@@ *p@@ >=@@ *@@ q) return@@ 2; else return1; } else { while(i<=@@ n) { for(;@@ *p@@ <*@@ q@@ &&i@@ <=@@ n@@ ;i++,@@ q@@ ++@@ ); i++; if(num@@ (n@@ -i@@ +1,@@ q@@ )@@ +1@@ >max) max=@@ num@@ (n@@ -i@@ +1,@@ q@@ )@@ +1; q++; } } return@@ max; } intmain() { intk,i,@@ a[@@ 25],@@ max=0; scanf("%d",&k); for(i=0;i<k;i++) scanf("%d",&a[i]); for(i=k@@ ;i@@ >=@@ 2@@ ;i--) { if(num@@ (i,@@ a+@@ k@@ -i@@ )@@ >max) max=@@ num@@ (i,@@ a+@@ k@@ -i@@ ); } printf("%d\n",max); return0; }  
c -1
h -1
0

intf@@ (intx,int@@ y); intmain() { intn,i,j,@@ a,@@ sum; cin>>n; for(i=1;i<=n;i++) { cin>>a; sum=0; for(j=1;j<=@@ a@@ ;j++) sum+=@@ f(a,@@ j); cout<<sum<<endl; } return0; } intf@@ (intx,inty) { inti,@@ num=0; if(y@@ ==1) return0; else { if(x%@@ y@@ !=0) return0; elseif(x@@ ==@@ y) return1; else { for(i=y@@ ;i>=1;i--) num+=@@ f(@@ x/@@ y,@@ i); returnnum; } } }  
c -1
h -1
structstu { intnum; charc[@@ 26]; structstu*next; }; structstu*@@ create@@ (void) { structstu*@@ p1,*p2,*head; intm; scanf("%d",&m); p1=(struct@@ stu@@ *)malloc(LEN); scanf("%d%s",&p1->num,p1->@@ c); p2=p1; head=p1; while(m@@ -1) { m@@ --; p1=(struct@@ stu@@ *)malloc(LEN); scanf("%d%s",&p1->num,p1->@@ c); p2->next=p1; p2=p1; } p2->next=NULL; returnhead; } voidprint(struct@@ stu@@ *head@@ ,int@@ z) { structstu*@@ q; inti,@@ k; chars[@@ 20],@@ s0@@ [@@ 20@@ ]={'\0'}; q=@@ head; while(@@ q) { strcpy(s,@@ q->@@ c); k@@ =strlen(s); for(i=0;i<k;i++) if(s[i]==@@ z@@ +65) { printf("%d\n",@@ q->@@ num); break; } strcpy(s,@@ s0@@ ); q=q@@ ->next; } } voidmain() { int@@ index@@ ; inta[@@ 26],@@ k,@@ t,@@ i,@@ max=0; chars[@@ 20],@@ s0@@ [@@ 20@@ ]={'\0'}; structstu@@ *p,*@@ head; memset(a,0,@@ sizeof(a)); head=@@ create@@ (); p=head; while(p) { strcpy(s,@@ p->@@ c); k@@ =strlen(s); for(i=0;i<k;i++) { t=@@ s[i]@@ -65@@ ; a[t@@ ]++; } strcpy(s,@@ s0@@ ); p=p->next; } for(i=0;i<26;i++) if(a[i]>max) { max=a[i]; index@@ =i; } printf("%c\n%d\n",@@ index@@ +65@@ ,max); print(@@ head,@@ index@@ ); }  
c -1
h -1
0

intmain(){ inty,m,@@ d; scanf("%d%d%d",&y,&m,&d); int@@ month@@ [12@@ ]={0,31,@@ 28@@ ,31,30,31,30,31@@ ,31,30,31,30@@ }; inti,@@ ans; if(y%@@ 400==0||(@@ y%@@ 100@@ &&@@ y%@@ 4@@ ==0)@@ )@@ month@@ [2]=@@ 29; ans=0; for(i=1;i<@@ m@@ ;i++)@@ ans@@ +=@@ month@@ [i]; ans@@ +=@@ d; printf("%d\n",@@ ans); return0; }  
c -1
h -1
intmain() { inta[@@ 15],@@ i; while(1) { intn@@ =1,@@ sum=0,@@ j; cin>>a[0]; if(a[0]==-1) break; while(cin>>@@ a[n@@ ]) { if(a[@@ n@@ ]==0) break; n++; } for(i=0;i<n-1;i++) { for(j=i+1;j<n;j++) { if(a[i]==a[j]@@ *2@@ ||@@ a[j]==@@ a[i]@@ *2) sum++; } } cout<<sum<<endl; } return0; }  
c -1
h -1
0

intmain() {int@@ sum@@ (intx,int@@ y); intk,i,@@ m,n; scanf("%d",&k); for(i=1;i<=k;i++) {@@ scanf("%d%d",&m,&n); printf("%d\n",sum@@ (m,@@ n@@ )); } return0; } intsum@@ (intx,inty) {@@ intb[100@@ ][100]; intsum=0,@@ i,j; for(i=0;i<x;i++) for(j=0;j<@@ y;j++) scanf("%d",&@@ b[i]@@ [j]); for(i=0;i<x;i++) for(j=0;j<@@ y;j++) if(i==0||i==@@ (x@@ -1)@@ ||j@@ ==0||j==@@ (y@@ -1)) sum=sum+@@ b[i]@@ [j]; return(@@ sum); }  
c -1
h -1
intmain() { inti,j,k; chara[256],b[256],c[256]; scanf("%s",a); scanf("%s",b); scanf("%s",c); for(i=0;i<@@ 256@@ ;i++) {@@ k=0; for(j=0;j<strlen(@@ b@@ );j++) { if(a@@ [j+i@@ ]!=@@ b[j]) { k@@ =1;break;} } if(k==0) {@@ for(j=0;j<i;j++) printf("%c",@@ a[j]); for(j=0;j<strlen(@@ c@@ );j++) printf("%c",@@ c@@ [j]); for(j=i@@ +@@ strlen(b@@ )@@ ;j<@@ strlen(a)@@ ;j++) printf("%c",@@ a[j]); break; } }@@ if(k==1) { for(j=0;j<@@ strlen(a)@@ ;j++) printf("%c",@@ a[j]); } return0; }  
c -1
h -1
0

const@@ int@@ maxn=@@ 100; intmain() { int@@ line@@ ,@@ row; intnum[@@ maxn@@ ][@@ maxn@@ ]; cin>>@@ line@@ >>@@ row; int@@ nowline@@ ,@@ nowrow@@ ; int@@ step@@ ; inti,j; for(i=0@@ ;i@@ !=@@ line@@ ;i++) for(j=0@@ ;j@@ !=@@ row@@ ;j++)@@ cin>>@@ num[i]@@ [j]; for(@@ step@@ =0;@@ step@@ !=@@ line@@ +row@@ -1;@@ step@@ ++) { nowline@@ =(@@ step@@ >=@@ row@@ ?@@ step@@ -@@ row@@ +1@@ :@@ 0); nowrow@@ =(@@ step@@ >=@@ row@@ ?@@ row-1@@ :@@ step@@ ); while(@@ nowline@@ !=@@ line@@ &&@@ nowrow@@ !=-1) { cout<<@@ num[@@ nowline@@ ][@@ nowrow@@ ]<<endl; nowline@@ ++;@@ nowrow@@ --; } } return0; }  
c -1
h -1
intmain() { intn,a[@@ 20000],@@ l=0; cin>>n; for(inti=0;i<n;i++) { cin>>a[i]; } cout<<a[0]; for(intj=1@@ ;j<n;j++) { l=0; for(intk@@ =j@@ -1@@ ;k>=0@@ ;k--) { if(a[j]!=@@ a[k]) l=@@ l; else@@ l=l@@ +1; } if(l@@ ==0) cout<<""<<@@ a[j]; } cout<<endl; return0; }  
c -1
h -1
0

intmain() { int@@ yn@@ ,@@ mn@@ ,@@ dn@@ ; int@@ result=0; scanf("%d%d@@ %d@@ "@@ ,&@@ yn@@ ,&@@ mn@@ ,&@@ dn@@ ); if(@@ yn@@ %4==0&&@@ yn@@ %100!=0@@ ||@@ yn@@ %@@ 400==0) { int@@ day_of_month@@ [@@ 13]={0,31,@@ 29@@ ,31,30,31,30@@ ,31,30@@ ,31@@ ,31,30@@ ,31@@ }; inti=1; while(i<@@ mn@@ ) { result=result+@@ day_of_month@@ [i]; i++; } result=result+@@ dn@@ ; } else { int@@ day_of_month@@ [@@ 13]={0,31,@@ 28@@ ,31,30,31,30@@ ,31,30@@ ,31@@ ,31,30@@ ,31@@ }; inti=1; while(i<@@ mn@@ ) { result=result+@@ day_of_month@@ [i]; i++; } result=result+@@ dn@@ ; } printf("%d@@ "@@ ,@@ result); return0; }  
c -1
h -1
intmain() { intn,i,j,a[@@ 100000@@ ],b[@@ 100000@@ ]={0},@@ k; scanf("%d",&n); j=1; for(i=1;i<=n;i++) { scanf("%d",&k); if(@@ b[k@@ ]==0) { a[j]=@@ k; j++; b[k@@ ]=1; } } for(i=1;i<@@ j@@ ;i++) { if(i@@ ==1)@@ printf("%d",a[i]); else@@ printf("%d",a[i]); } }  
c -1
h -1
0

voidmain() { inti,@@ m,n,@@ sum,@@ a[@@ 10001@@ ]@@ ,*p; scanf("%d",&@@ i); while(i@@ --){ scanf("%d%d",&m,&n); for(p=@@ a@@ ;p<@@ a+@@ m*@@ n;@@ p++) scanf("%d",@@ p); sum=0; for(p=@@ a@@ ;p<@@ a+@@ n;@@ p++) sum+=@@ *p; if(m@@ !=1) for(p=@@ a+@@ (m@@ -1)*@@ n;@@ p@@ <@@ a+@@ m*@@ n;@@ p++) sum+=@@ *p; for(p=@@ a+@@ n;@@ p@@ <@@ a+@@ (m@@ -1)*@@ n;@@ p@@ +=@@ n) sum+=@@ *p; for(p=@@ a+@@ n@@ *2@@ -1@@ ;p<@@ a+@@ m*@@ n-1@@ ;p@@ +=@@ n) sum+=@@ *p; printf("%d\n",sum); } }  
c -1
h -1
intmain() { intn,i,j,k,@@ m; chara[@@ 50000@@ ]; intb[@@ 20001]; scanf("%d\n",&n); gets(a); k@@ =strlen(a); i=0; j=1; while(i<=@@ k@@ -1) { b[j]@@ =(@@ a[i]@@ -@@ 48@@ )*@@ 10@@ +(@@ a[i+1@@ ]-@@ 48@@ ); i@@ =i+@@ 3@@ ; j=j+1; } j=j-1; printf("%d",@@ b[1@@ ]); i=@@ 2; while(i<=@@ j) { m=1; while(m@@ <@@ i) { if(b[i]==@@ b[m@@ ]@@ )break; m=m+1; } if(m==@@ i)@@ printf("%d",b[i]); i=i+1; } return0; }  
c -1
h -1
0

intmain() { intk,@@ n,i,j,@@ t; intsz[1000]; scanf("%d%d",&n,&k); for(i=0;i<n;i++) { scanf("%d",&sz[i]); } for(i=0,@@ t@@ =1@@ ;i<n;i++) { for(j=i+1;j<n;j++) { if(sz[i]+sz@@ [j]==k) { t=0; break; } } } if(t==0) { printf("yes"); } else { printf("no"); } return0; }  
c -1
h -1
struct@@ score@@ { intid; intchinese; int@@ maths; intsum; }; intmain(){ score@@ *p@@ [100000],@@ *@@ temp,@@ stu[100000]; inti,j,n; cin>>n; for(i=0;i<n;i++){ p[i]=@@ &@@ stu[i]; cin>>@@ p[i]@@ ->@@ id@@ >>@@ p[i]@@ ->@@ chinese@@ >>@@ p[i]@@ ->@@ maths; p[i]@@ ->@@ sum=@@ p[i]@@ ->@@ chinese+@@ p[i]@@ ->@@ maths; } for(i=0;i<3;i++) for(j=n-1;j>i;j--) if(p@@ [j]@@ ->@@ sum>@@ p@@ [j-1]@@ ->@@ sum){ temp=@@ p@@ [j]; p@@ [j]=@@ p@@ [j-1]; p@@ [j-1]=@@ temp; } for(i=0;i<3;i++) cout<<@@ p[i]@@ ->@@ id@@ <<'@@ '@@ <<@@ p[i]@@ ->@@ sum@@ <<endl; return0; }  
c -1
h -1
0

int@@ com@@ (constvoid*a,constvoid*@@ b) { return(@@ *(int*)@@ a@@ -*@@ (int*)@@ b); } intmain() { intn,i; inta[@@ 30]; ints[@@ 30@@ ]={@@ 1@@ }; scanf("%d",&n); for(inti=0;i<n;i++) scanf("%d",&a[i]); for(inti=@@ n-2;i>=0;i--) { for(intj=@@ n-1@@ ;j>i;j--) { if(a[i]>=a[j]) { s[i]=@@ max(@@ s[j]@@ +1,@@ s[i]); } } } qsort(@@ s,@@ 30@@ ,@@ sizeof(int),@@ com@@ ); printf("%d",@@ s[@@ 29@@ ]@@ +1); getchar(); getchar(); }  
c -1
h -1
intmain() { int@@ bian@@ ,@@ row,col; int@@ shuzu@@ [@@ 500@@ ][@@ 500]; inti,j,@@ m=0,@@ n=0; intsum; scanf("%d",&@@ bian@@ ); row@@ =@@ bian@@ ; col@@ =@@ bian@@ ; for(i=0;i<row;i++) { for(j=0;j<col;j++) { scanf("%d",&@@ shuzu@@ [i][j]); } } for(i=0;i<row;i++) { for(j=0;j<col;j++) { if(shuzu@@ [i][j]==0) { m@@ +=1; break; } } } for(j=0;j<col;j++) { for(i=0;i<row;i++) { if(shuzu@@ [i][j]==0) { n@@ +=1; break; } } } sum=(@@ m@@ -2)*(@@ n-2@@ ); printf("%d",sum); return0; }  
c -1
h -1
0

intmain(intargc,char*argv[]) { structbook{ intnum; charauthor@@ [27]; }@@ B@@ [1000]; char@@ A@@ ; intm,i,j,@@ a[@@ 26]={0},@@ max; scanf("%d",&m); for(i=0;i<m;i++){ scanf("%d%s",&@@ B@@ [i].@@ num,@@ B@@ [i].@@ author); } for(i=0;i<m;i++){ for(j=0;@@ ;j++){ if(@@ B@@ [i].@@ author@@ [j]@@ ==0) break; else a[@@ B@@ [i].@@ author@@ [j]@@ -65]++; } } max=@@ a[0]; A@@ =@@ 65@@ ; for(i=0;i<26;i++){ if(a[i]@@ >max){ max=a[i]; A@@ =i+65; } } printf("%c@@ \n@@ %d",@@ A@@ ,max); for(i=0;i<m;i++){ for(j=0;@@ ;j++){ if(@@ B@@ [i].@@ author@@ [j]@@ ==0) break; if(@@ B@@ [i].@@ author@@ [j]==@@ A@@ ) printf("\n%d",@@ B@@ [i].num); } } return0; }  
c -1
h -1
intmain(intargc,char*argv[]) { int@@ d[@@ 12]={31,28,31,30,31,30,31,31,30,31,30,31}; intyear,month,day,@@ i,@@ days@@ =0; scanf("%d%d%d",&year,&month,&day); for(i=1;i<month;i++) { days=@@ days@@ +d@@ [i-1]; } days=@@ days@@ +day; if((@@ year%@@ 4@@ ==0||@@ year%@@ 400==0)@@ &&@@ month@@ >2) days=@@ days@@ ++; printf("%d",@@ days@@ ); }  
c -1
h -1
0

intmain(){ intk,@@ i; scanf("%d",&k); intm,n,@@ j,@@ l; int@@ z@@ [100][100],@@ h@@ [100]; for(i=0;i<@@ 100@@ ;i++){ h@@ [i]=0; } for(l=0;l<@@ k;@@ l++){ scanf("%d%d",&m,&n); for(i=0;i<m;i++){ for(j=0;j<n;j++){ scanf("%d",&(@@ z@@ [i][j]@@ )); } } for(j=0;j<n;j++){ h@@ [l@@ ]+=@@ z@@ [0]@@ [j]; } i=@@ m-1@@ ; for(j=0;j<n;j++){ h@@ [l@@ ]+=@@ z@@ [i][j]; } for(i=1;i<@@ m-1@@ ;i++){ h@@ [l@@ ]+=@@ z@@ [i]@@ [0]; } j=@@ n-1; for(i=1;i<@@ m-1@@ ;i++){ h@@ [l@@ ]+=@@ z@@ [i][j]; } } for(l=0;l<@@ k;@@ l++){ if(l@@ ==0){ printf("%d",@@ h@@ [l]); }else{ printf("\n%d",@@ h@@ [l]); } } return0; }  
c -1
h -1
intmain() { intk,@@ most@@ ; inta[@@ 25],@@ f@@ [25]; cin>>k; for(inti=0;i<k;i++) { cin>>a[i]; } f@@ [0]=1; for(inti=1;i<@@ k;i++) { most@@ =0; for(intj=0;j<i;j++) { if(a[j]>=@@ a[i]) { if(f@@ [j]>@@ most@@ ) { most@@ =@@ f@@ [j]; } } } f[i]=@@ most@@ +1; } most@@ =0; for(inti=0;i<k;i++) { if(f@@ [i]>@@ most@@ ) most@@ =@@ f[i]; } cout<<@@ most@@ <<endl; return0; }  
c -1
h -1
0

intmain(){ intarray[@@ 120@@ ][@@ 120@@ ]; introw,col,@@ i,j,@@ sum; cin>>row>>col; for(i=0;i<row;i++) for(j=0;j<col;j++) cin>>array[i][j]; i=0; j=0; while(i@@ <row@@ &&j@@ <col@@ ){ cout<<array@@ [i][j]<<endl; sum@@ =i@@ +j@@ ; i++; j--; if(i==@@ row@@ ||j==@@ -1){ sum=sum+1; if(i@@ =@@ row@@ ){ i=0; j=@@ sum@@ -@@ i; if(j@@ >=@@ col@@ ){ j=col-1; i=@@ sum@@ -j@@ ; } }else{ j=col-1; i=@@ sum@@ -j@@ ; if(i<@@ 0@@ ){ i=0; j=@@ sum@@ -@@ i; } } } } return0; }  
c -1
h -1
intn; structstudent { intnum; intchinese; intmath; inttotal; structstudent*next; }; structstudent*creat@@ (intn) { structstudent*head; structstudent*p1,*p2; inti; if(n@@ ==0) { head=NULL; return(head); } else { p1=(structstudent*)malloc(LEN); scanf("%d%d%d",&p1->num,&p1->@@ chinese@@ ,&p1->math); p1->next=NULL; head=p1; p2=p1; for(i=1;i<n;i++) { p1=(structstudent*)malloc(LEN); scanf("%d%d%d",&p1->num,&p1->@@ chinese@@ ,&p1->math); p1->next=NULL; p2->next=p1; p2=p1; } return(head); } } void@@ top3@@ (structstudent*head@@ ) { structstudent@@ *p,*@@ p1; intmax=0; p=head; do { p->@@ total@@ =(@@ p->@@ chinese@@ )+@@ (p->@@ math); if((@@ p->@@ total@@ )@@ >max) { max=@@ p->@@ total; p1=@@ p; } p=p->next; }while(p@@ !=NULL); printf("%d%d\n",@@ p1->@@ num,p1->@@ total); p1->@@ total=0; p=head; max=0; do { if((@@ p->@@ total@@ )@@ >max) { max=@@ p->@@ total; p1=@@ p; } p=p->next; }while(p@@ !=NULL); printf("%d%d\n",@@ p1->@@ num,p1->@@ total); p1->@@ total=0; p=head; max=0; do { if((@@ p->@@ total@@ )@@ >max) { max=@@ p->@@ total; p1=@@ p; } p=p->next; }while(p@@ !=NULL); printf("%d%d\n",@@ p1->@@ num,p1->@@ total); p1->@@ total=0; max=0; } voidmain() { structstudent*head; scanf("%d",&n); head=creat(n); top3@@ (head); }  
c -1
h -1
0

intmain() { charstring@@ [256]; char@@ substring@@ [256]; char@@ replacement@@ [256]; intx; gets(@@ string); gets(@@ substring); gets(@@ replacement); x=@@ strstr(@@ string,@@ substring@@ )@@ -&@@ string@@ [0]; if(@@ strchr(@@ string,@@ substring@@ [0]@@ )@@ !=0)@@ memmove@@ (@@ string@@ +@@ x,@@ replacement@@ ,@@ strlen(@@ replacement@@ )); printf("%s",@@ string); return0; }  
c -1
h -1
struct@@ s { int@@ d; charc[@@ 20]; struct@@ s@@ *next; }; voidsort@@ (struct@@ s@@ *head) { struct@@ s@@ *@@ pre@@ =@@ head,*@@ p=@@ pre@@ ->next@@ ,*@@ s; s@@ =(struct@@ s@@ *)malloc(sizeof(struct@@ s@@ )); scanf("%s%d",@@ s@@ ->@@ c@@ ,&@@ s@@ ->@@ d); s@@ ->next=NULL; if(s@@ ->@@ d@@ >=60) { while(p@@ !=NULL@@ &&@@ p->@@ d@@ >=@@ s@@ ->@@ d) { pre@@ =p; p=p->next; } pre@@ ->next=@@ s; s@@ ->next=p; } if(s@@ ->@@ d@@ <60) { while(p!=NULL) { pre@@ =p; p=p->next; } pre@@ ->next=@@ s; s@@ ->next=p; } } intmain() { struct@@ s@@ *head,*p; intn,i; head=(struct@@ s@@ *)malloc(sizeof(struct@@ s@@ )); scanf("%d",&n); head@@ ->next=NULL; for(i=0;i<n;i++) { sort(@@ head); } p=head->next; while(p!=NULL) { printf("%s\n",p->@@ c); p=p->next; } return0; }  
c -1
h -1
0

voidmain() { intn,m,@@ i,j,@@ max,@@ l,@@ sign@@ =0; scanf("%d",&n); struct@@ tt { char@@ pp@@ [10]; intage; struct@@ tt@@ *next; }; struct@@ tt@@ *head,*@@ p1,*p2,*@@ p3; head=(struct@@ tt@@ *)malloc(LEN); p1=@@ head;@@ p2=head; scanf("%s",@@ head->@@ pp@@ ); scanf("%d",&@@ head@@ ->age@@ ); for(i=1;i<n;i++) { p1=(struct@@ tt@@ *)malloc(LEN@@ );@@ ; p2->next=p1; scanf("%s",@@ p1->@@ pp@@ ); scanf("%d",&@@ p1->@@ age); p2=p1; } p2->next=NULL; for(i=1;i<=n;i++) { if(@@ sign@@ ==1) { printf("%s\n",@@ head->@@ pp@@ ); head=@@ head->next; } elseif(@@ sign@@ ==0) { max@@ =(@@ -1); for(@@ p2@@ =NULL@@ ,@@ p1=@@ head;@@ p1@@ !=NULL;@@ p1=p1->next) { if(p1->age@@ >max){max=@@ p1->age@@ ;@@ p3@@ =p2@@ ;} p2=p1; } if(max@@ <60@@ ){@@ sign@@ =1@@ ;i@@ --@@ ;@@ continue;} elseif(@@ max@@ >=60) { if(@@ p3@@ ==NULL) { printf("%s\n",@@ head->@@ pp@@ ); head=@@ head->next; } else { p1=@@ p3@@ ->next; printf("%s\n",@@ p1->@@ pp@@ ); p3@@ ->next=@@ p1->next; } } } } }  
c -1
h -1
intmain() { inti,j,k; while(1) { inta[@@ 20@@ ]={0},@@ sum=0; for(i=0;;i++) { scanf("%d",&a[i]); if(a[i]@@ ==0){@@ k@@ =i;@@ break;} } if(a[0]==-1)break; for(i=0;i<k;i++) for(j=i;j<@@ k;j++) { if(a[j]==2*@@ a[i]@@ ||@@ 2*@@ a[j]==@@ a[i])@@ sum++; } printf("%d\n",sum); } }  
c -1
h -1
0

voidmain() { float@@ x,@@ fenzi@@ =0; int@@ lena@@ ,@@ lenb@@ ,@@ i,j@@ =0; chara[@@ 505@@ ],b[@@ 505@@ ],@@ ch; scanf("%f",&@@ x); scanf("%@@ c@@ ",&@@ ch@@ ); gets(a); gets(b); lena@@ =strlen(a); lenb@@ =strlen(b); if(@@ lena@@ !=@@ lenb@@ ) printf("error\n"); else { for(i=0;i<@@ lena@@ ;i++) { if((@@ a[i]=='@@ A'||a[i]=='T'||a[i]=='@@ G'||@@ a[i]=='@@ C')@@ && (@@ b[i]=='@@ A'||@@ b[i]=='@@ T'||@@ b[i]=='@@ G'||@@ b[i]=='@@ C')@@ ) { if(a[i]==b[i]@@ )@@ fenzi@@ ++; } else{@@ j@@ =1;@@ printf("error@@ \n@@ ");@@ break;} } if(j@@ ==0&&@@ fenzi@@ >=@@ x@@ *@@ lena@@ )@@ printf("yes\n"); elseif(@@ j@@ ==0)@@ printf("no\n"); } }  
c -1
h -1
intmain() { charstr@@ [256]; char@@ sub@@ [256]; char@@ rep@@ [256]; gets(str); gets(sub); gets(@@ rep); char*@@ p=strstr(@@ str,@@ sub); if(p@@ ==NULL) { printf("%s\n",@@ str); } else { int@@ len=strlen(@@ rep); inti; for(i=0;i<len;i++) {@@ *@@ p=@@ rep@@ [i]; p++; } printf("%s\n",@@ str); } return0; }  
c -1
h -1
0

intmain() { introw,col; int@@ jz@@ [100][100]; inti=0; intj=0; intm=0; intn=0; scanf("%d%d",&@@ row,@@ &@@ col); for(i=0;i<row;i++){ for(j=0;j<col;j++) scanf("%d",&@@ jz@@ [i][j]); } printf("%d\n",@@ jz@@ [0][@@ 0]@@ ); if(row@@ <=col@@ ){ for(m@@ =0,@@ n@@ =1;@@ n@@ <col@@ ;n++){ for(i=@@ m,@@ j=@@ n@@ ;j>=0@@ &&i@@ <row@@ ;i++,j@@ --){ printf("%d\n",@@ jz@@ [i][j]); } } for(m@@ =1,@@ n=@@ col-1@@ ;m@@ <row@@ -1@@ ;m++){ for(i=@@ m,@@ j=@@ n@@ ;i<@@ row@@ ;i++,j@@ --){ printf("%d\n",@@ jz@@ [i][j]); } } } elseif(@@ row@@ >@@ col@@ ){ for(m@@ =0,@@ n@@ =1;@@ n@@ <col@@ ;n++){ for(i=@@ m,@@ j=@@ n@@ ;j>=0@@ &&i@@ <row@@ ;i++,j@@ --){ printf("%d\n",@@ jz@@ [i][j]); } } for(m@@ =1,@@ n=@@ col-1@@ ;m@@ <row@@ -1@@ ;m++){ for(i=@@ m,@@ j=@@ n@@ ;i<@@ row@@ &&j>=0@@ ;i++,j@@ --){ printf("%d\n",@@ jz@@ [i][j]); } } } if(row@@ !=1) printf("%d",@@ jz@@ [@@ row-1@@ ][col@@ -1]); return0; }  
c -1
h -1
int@@ xiangsu@@ [1000][1000]; intmain(){ intn; int@@ head1@@ ; int@@ head2@@ ; int@@ end1@@ ; int@@ end2@@ ; scanf("%d",&n); intsum; intj; inti; for(i=0;i<n;i++) for(j=0;j<n;j++) scanf("%d",&(@@ xiangsu@@ [i][j]@@ )); intf@@ =1; for(i=0;i<n;i++){ for(j=0;j<n;j++){ if((@@ xiangsu@@ [i][j]@@ ==0)&&(@@ f@@ ==1)@@ ){ head1@@ =i+1; head2@@ =j+1; f=0; } if(@@ xiangsu@@ [i][j]==0){ end1@@ =i-1; end2@@ =j@@ -1; } } } sum=(@@ end1@@ -@@ head1@@ +1)*(@@ end2@@ -@@ head2@@ +1); printf("%d",sum); getchar(); getchar(); return0; }  
c -1
h -1
0

char*@@ str_replace@@ (@@ const@@ char*@@ src@@ ,@@ const@@ char*@@ oldstr@@ ,@@ const@@ char*@@ newstr@@ ); intmain() { int@@ aa@@ =0,@@ i; char@@ str1@@ [100],@@ str2@@ [100],@@ str3@@ [100],@@ sub@@ [100]={0},@@ sub1@@ [100]={0},@@ sub2@@ [100]={0}; gets(@@ str1); gets(@@ str2); gets(@@ str3@@ ); if(strlen(@@ str1@@ )@@ <@@ strlen(@@ str2@@ ))@@ cout<<@@ str1@@ ; else { for(i=0;i<=@@ strlen(@@ str1@@ )@@ -strlen(@@ str2@@ );i++) { strncpy@@ (@@ sub,@@ str1@@ +@@ i,@@ strlen(@@ str2@@ )); if(strcmp(@@ sub,@@ str2@@ )@@ ==0) {@@ strncpy@@ (@@ sub1@@ ,@@ str1@@ ,@@ i); strncpy@@ (@@ sub2@@ ,@@ str1@@ +i@@ +@@ strlen(@@ str2@@ ),@@ strlen(@@ str1@@ )@@ -i@@ -strlen(@@ str2@@ )); strcat(@@ sub1@@ ,@@ str3@@ ); strcat(@@ sub1@@ ,@@ sub2@@ ); cout<<@@ sub1@@ ;@@ aa@@ =1@@ ;break; } }@@ if(@@ aa@@ ==0)@@ cout<<@@ str1@@ ; } return0; } char*@@ str_replace@@ (@@ const@@ char*@@ src@@ ,@@ const@@ char*@@ oldstr@@ ,@@ const@@ char*@@ newstr@@ ) { if(@@ NULL@@ ==@@ src@@ ||@@ NULL@@ ==@@ oldstr@@ ||@@ NULL@@ ==@@ newstr@@ ) { return@@ NULL@@ ; } char*@@ dest@@ =@@ strdup@@ (@@ src@@ ); if(strcmp(@@ oldstr@@ ,@@ newstr@@ )@@ ==0) { return@@ dest@@ ; } char*@@ needle@@ ; char*@@ tmp@@ ,*@@ dest_tmp@@ =@@ dest@@ ; while(@@ needle@@ =@@ strstr(@@ dest@@ ,@@ oldstr@@ )) { tmp@@ =(char*)malloc(@@ strlen(@@ dest@@ )+@@ strlen(@@ newstr@@ )@@ -strlen(@@ oldstr@@ )@@ +1); strncpy@@ (@@ tmp@@ ,@@ dest@@ ,@@ needle@@ -@@ dest@@ ); tmp@@ [@@ needle@@ -@@ dest@@ ]='\0'; strcat(@@ tmp@@ ,@@ newstr@@ ); strcat(@@ tmp@@ ,@@ needle@@ +@@ strlen(@@ oldstr@@ )); dest@@ =@@ strdup@@ (@@ tmp@@ ); free(@@ dest_tmp@@ ); free(@@ tmp@@ ); dest_tmp@@ =@@ dest@@ ; } return@@ dest@@ ; }  
c -1
h -1
intmain() { inta[@@ 15@@ ]={0},@@ num@@ =1,@@ num1@@ =1,@@ i@@ =1,@@ k,@@ j,@@ c=0; while(@@ num1@@ !=-1) { cin>>@@ num1@@ ; a[0]=@@ num1@@ ; while(@@ num@@ !=0) { cin>>num; a[i]=@@ num; i++; } for(k=0;k<=@@ i@@ -2@@ ;k++) for(j=k@@ +1@@ ;j<=@@ i@@ -2@@ ;j++) if(a[k@@ ]==2*@@ a[j]||a[j]==2*@@ a[k]) c++; cout<<@@ c@@ <<endl; inta[@@ 15@@ ]={0}; c=0; i=1; num@@ =1; } return0; }  
c -1
h -1
0

struct@@ bingren@@ { charid@@ [1000]; intage; }@@ bin@@ [@@ 101]; intmain(intargc,char*argv[]) {@@ intn; scanf("%d",&n); inti,j,@@ k=0,@@ l=0,@@ e,@@ a[100]; char@@ xiao@@ [@@ 101][@@ 1000],@@ da@@ [@@ 101][@@ 1000],@@ c[@@ 1000]; for(i=0;i<n;i++){ scanf("%s%d",&@@ bin@@ [i].id,&@@ bin@@ [i].age); } for(i=0;i<n;i++){ if(@@ bin@@ [i].age@@ <60){ strcpy(@@ xiao@@ [k],@@ bin@@ [i].id); k@@ ++;} else{ strcpy(@@ da@@ [l@@ ],@@ bin@@ [i].id); a[l@@ ]=@@ bin@@ [i].age; l@@ ++;} } for(i=0;i<l;i++){ for(j=0;j<l@@ -i;j++){ if(a[j]@@ <@@ a[j+1@@ ]){ strcpy(@@ c,@@ da@@ [j+1]); strcpy(@@ da@@ [j+1],@@ da@@ [j]); strcpy(@@ da@@ [j],@@ c); e=@@ a[j+1@@ ];@@ a[j+1]=@@ a[j];a[j]=@@ e; } } } for(i=0;i<l;i++){ printf("%s\n",@@ da@@ [i]); } for(i=0;i<k;i++){ printf("%s\n",@@ xiao@@ [i]); } return0; }  
c -1
h -1
intmain(intargc,char*argv[]) { intn=0; intyear,month,day; scanf("%d%d%d",&year,&month,&day); if(month@@ ==1)@@ n=n+@@ day; elseif(month==@@ 2)@@ n=@@ n@@ +31+@@ day; elseif(month==@@ 3)@@ n=n+@@ 59@@ +day; elseif(month==@@ 4)@@ n=n+@@ 90@@ +day; elseif(month==@@ 5@@ )@@ n=n+@@ 120@@ +day; elseif(month==@@ 6@@ )@@ n=n+@@ 151@@ +day; elseif(month==@@ 7@@ )@@ n=n+@@ 181@@ +day; elseif(month==@@ 8@@ )@@ n=n+@@ 212@@ +day; elseif(month==@@ 9@@ )@@ n=n+@@ 243@@ +day; elseif(month==@@ 10@@ )@@ n=n+@@ 273@@ +day; elseif(month==@@ 11@@ )@@ n=n+@@ 304@@ +day; else{@@ n=n+@@ 334@@ +day@@ ;} if(((@@ (@@ year%@@ 4==0)&&(@@ year%100!=0@@ )@@ )||(@@ year%@@ 400==0)@@ )&&(@@ month@@ >2@@ ))@@ n=n+1; printf("%d",n); return0; }  
c -1
h -1
0

structbook { intnum; char@@ zz@@ [@@ 32@@ ]; structbook*next; }; structbook*@@ creat@@ (intn) { structbook@@ *head,*p1,*p2; inti; p1=p2=(struct@@ book@@ *)malloc(LEN); scanf("%d%s",&p1->num,p1->@@ zz@@ ); head=NULL; for(i=0;i<n-1;i++) { if(i==0)@@ head=p1; elsep2->next=p1; p2=p1; p1=(structbook@@ *)malloc(LEN); scanf("%d%s",&p1->num,p1->@@ zz@@ ); } p2->next=p1; p1->next=NULL; return(head); } void@@ search@@ (struct@@ book@@ *head@@ ,intn) { int@@ *p@@ [26],@@ i,j; structbook*@@ q=@@ head; for(i=0;i<26;i++) { p[i]=@@ (int@@ *)malloc(sizeof@@ (int@@ )); *p@@ [i]=0; } for(i=0;i<n;i++) { for(j=0;@@ (@@ q->@@ zz@@ )@@ [j]!='\0';j++) { (*p@@ [@@ (@@ q->@@ zz@@ )@@ [j]@@ -'A'@@ ])@@ ++; } q=q@@ ->next; } q=@@ head; intmax@@ =*@@ p[@@ 0],@@ k=0; for(i=1;i<26;i++) {if(@@ *p@@ [i]@@ >max@@ ){@@ max@@ =*@@ p[i]@@ ;k@@ =i;@@ }} printf("%c@@ \n@@ %d",@@ 'A'+@@ k,@@ max); for(i=0;i<n;i++) { for(j=0;@@ (@@ q->@@ zz@@ )@@ [j]!='\0';j++) { if((@@ q->@@ zz@@ )@@ [j]=='@@ A'+@@ k) printf("\n%d",@@ q->@@ num); } q=q@@ ->next; } } voidmain() { intn; scanf("%d",&n); structbook*@@ head; head=creat(n); search@@ (head,@@ n); }  
c -1
h -1
intmain() { inta[@@ 101][101]; introw,col; inti,j; intx; scanf("%d%d",&row,&col); for(i=0;i<row;i++) { for(j=0;j<col;j++) { scanf("%d",&a[i][j]); } } if(row@@ <col) { for(i=0;i<row;i++) { for(j=0;j<=i;j++) { printf("%d\n",a[@@ 0@@ +j@@ ]@@ [i-j@@ ]); } } for(i=0;i<@@ col@@ -@@ row-1;i++) { for(j=0;j<row@@ ;j++) { printf("%d\n",@@ a[j]@@ [@@ row@@ +i-j@@ ]); } } for(i=0;i<row;i++) { for(j=0;j<row@@ -i;j++) { printf("%d\n",@@ a[i+j@@ ][col@@ -1-j@@ ]); } } } else { for(i=0;i<col;i++) { for(j=0;j<=i;j++) { printf("%d\n",a[@@ 0@@ +j@@ ]@@ [i-j@@ ]); } } for(i=0;i<@@ row@@ -col@@ -1;i++) { for(j=0;j<col;j++) { printf("%d\n",@@ a[i+j@@ +1@@ ][col@@ -j@@ -1]); } } if(row@@ ==@@ col) { x=1; } else { x=0; } for(i=x@@ ;i<@@ col;i++) { for(j=0;j<col@@ -i;j++) { printf("%d\n",a[@@ row@@ -col@@ +i@@ +j@@ ][col@@ -j@@ -1]); } } } return0; }  
c -1
h -1
0

intmain() { inta[@@ 101][@@ 101@@ ]@@ ,*p; intm,n; cin>>m>>n; for(p@@ =*@@ a@@ ;p@@ <*@@ a+@@ m*@@ n;@@ p@@ ++)@@ cin>>@@ *p; p@@ =*@@ a; for(inti=0;i<n;i++) { int@@ a=0,@@ b=i; while(@@ (a@@ <m@@ )&&(@@ b@@ >=0@@ )) { cout<<@@ *(p+@@ a*@@ n+@@ b@@ )<<endl; a++; b@@ --; } } for(inti=1;i<@@ m;i++) { int@@ a=@@ i,@@ b=@@ n-1; while(@@ (a@@ <m@@ )&&(@@ b@@ >=0@@ )) { cout<<@@ *(p+@@ a*@@ n+@@ b@@ )<<endl; a++; b@@ --; } } return0; }  
c -1
h -1
inta[@@ 30],@@ dp@@ [@@ 30@@ ]={@@ 1@@ }; intn; int@@ ans@@ =-1; intmain() { inti,j; scanf("%d",&n); for(i=0;i<n;i++) { scanf("%d",&a[i]); } for(i=1;i<n;i++) { dp@@ [i]=1; for(j=0;j<i;j++) { if(a[j]>=a[i]&&@@ dp@@ [j]+1>@@ dp@@ [i]) { dp@@ [i]=@@ dp@@ [j]+1; } } } for(i=0;i<n;i++) { if(@@ dp@@ [i]>@@ ans@@ ) { ans=@@ dp@@ [i]; } } printf("%d\n",@@ ans); return0; }  
c -1
h -1
0

voidmain() { intn,k; ints=0; inti,j; inta[1000]; scanf("%d%d",&n,&k); for(i=0;i<n;i++) { scanf("%d",&a[i]); } for(i=0;i<n;i++) { j=0; while(j@@ <n) { if(i==@@ j) { j++; continue; } else { s=@@ a[i]+a[j]; j++; if(k==@@ s) { printf("yes"); goto@@ label@@ ; } }; }; if((@@ i==@@ n-1@@ )&&(@@ s@@ !=@@ k@@ )) printf("no"); } label@@ : return(0); }  
c -1
h -1
intmain() { chara[@@ 256@@ ]={0},b[@@ 256@@ ]={0},@@ c[@@ 256@@ ]={0}; cin>>a>>@@ b@@ >>@@ c; inti,j,@@ m,@@ k=0,@@ la@@ =strlen(@@ a)@@ ,lb@@ =strlen(b); for(i=0;i<@@ la;i++) { if(a[i]==@@ b[0]) { m=i; for(j=1;j<@@ lb@@ ;j++) { m++; if(a[m@@ ]!=@@ b[j]) break; } if(j==@@ lb@@ ) { m=i; k=1; break; } } } if(k==0) cout<<@@ a; else { for(i=0;i<m;i++) cout<<a[i]; cout<<@@ c; for(i=@@ m+@@ lb@@ ;i<@@ la;i++) cout<<a[i]; } return0; }  
c -1
h -1
0

intmain(){ intk,@@ a[1000],@@ i,j,@@ n,@@ t; scanf("%d%d",&n,&k); for(i=0;i<n;i++){ scanf("%d",&a[i]);} for(i=0,@@ t@@ =0;i<@@ n;i++){ for(j=0;j<n;j++){ if(a[i]+a[j]==k) {@@ break;}} if(j!=@@ n@@ &&i!=@@ j) t++; } if(t@@ >0) printf("yes"); else printf("no"); return0; }  
c -1
h -1
structstudent{ intnum; intchinese; intmath; }; intmain() { intn,i; scanf("%d",&n); structstudent@@ a[@@ 100000],@@ e; for(i=0;i<n;i++){ scanf("%d%d%d",&a[i].@@ num,&@@ a[i].@@ chinese@@ ,&a[i].@@ math); } for(i=0;i<n-1;i++){ if(a[i].@@ chinese+@@ a[i].@@ math@@ >=@@ a[i+1@@ ].@@ chinese+@@ a[i+1@@ ].@@ math@@ ){ e=@@ a[i]; a[i]=a[i+1]; a[i+1]=@@ e; } } for(i=0;i<n@@ -2@@ ;i++){ if(a[i].@@ chinese+@@ a[i].@@ math@@ >=@@ a[i+1@@ ].@@ chinese+@@ a[i+1@@ ].@@ math@@ ){ e=@@ a[i]; a[i]=a[i+1]; a[i+1]=@@ e; } } for(i=0;i<n-@@ 3;i++){ if(a[i].@@ chinese+@@ a[i].@@ math@@ >=@@ a[i+1@@ ].@@ chinese+@@ a[i+1@@ ].@@ math@@ ){ e=@@ a[i]; a[i]=a[i+1]; a[i+1]=@@ e; } } for(i=n-1;i@@ >@@ n-@@ 4@@ ;i--){ printf("%d%d\n",@@ a[i].@@ num,@@ a[i].@@ chinese+@@ a[i].@@ math); } return0; }  
c -1
h -1
0

intmain() { intn,@@ a[100@@ ][2@@ ],@@ num@@ [100]; cin>>n; for(inti=0;i<n;i++) { cin>>@@ a[i][0]@@ >>@@ a[i]@@ [1]; num@@ [i]=0; intb[100@@ ][100]; for(intj=0;j<@@ a[i][0]@@ ;j++) { for(intk=0;k<@@ a[i][1]@@ ;k++) { cin>>@@ b[j]@@ [k]; } } for(intj=0;j<@@ a[i][1]@@ ;j++) { num[i]=@@ num@@ [i]+@@ b[0]@@ [j]; } for(intj=0;j<@@ a[i][1]@@ ;j++) { num[i]=@@ num@@ [i]+@@ b[@@ a[i][0]@@ -1][j]; } for(intj=1;j<@@ a[i][0]@@ -1;j++) { num[i]=@@ num@@ [i]+@@ b[j]@@ [0]; } for(intj=1;j<@@ a[i][0]@@ -1;j++) { num[i]=@@ num@@ [i]+@@ b[j]@@ [@@ a[i][1]@@ -1]; } } for(inti=0;i<n;i++) { cout<<@@ num[i]@@ <<endl; } return0; }  
c -1
h -1
intmain() { intn,i,j; intsz[@@ 1000][1000]; int@@ a1,a2,@@ b1,@@ b2@@ ,@@ a,b,@@ c; scanf("%d",&n); for(i=0;i<n;i++) { for(j=0;j<n;j++) { scanf("%d",&sz[i][j]); } } for(i=0;i<n;i++) { for(j=0;j<n;j++) { if(sz@@ [i][j]==0&&@@ sz@@ [i-1][j]@@ !=0&&@@ sz[i]@@ [j-1]@@ !=0) { a1@@ =@@ i,@@ b1@@ =j; } if(sz@@ [i][j]==0&&@@ sz@@ [i+1][j]@@ !=0&&@@ sz[i]@@ [j+1]@@ !=0) { a2@@ =@@ i,@@ b2@@ =j; } } } a=@@ a2-a1@@ -1; b=@@ b2-b1@@ -1; c=@@ a*@@ b; printf("%d\n",@@ c); return0; }  
c -1
h -1
0

intmain() { ints[@@ 1000@@ ][100]; inti=0,j=0,@@ h@@ =0,@@ a,@@ m=0,@@ sum=0; scanf("%d",&a); while(@@ a@@ !=-1) { if(a@@ !=0) s[i]@@ [j@@ ++]=@@ a; else {@@ s@@ [i][j]=@@ a; i++; j@@ =0;} scanf("%d",&a); } for(h=0;h@@ <i@@ ;@@ h++) {@@ while(@@ s[@@ h@@ ][j]@@ !=0) {@@ m=0; while(@@ s[@@ h@@ ][m@@ ]!=0) { if(((@@ float)@@ s[@@ h@@ ][j]@@ /2@@ )==@@ (@@ float)@@ s[@@ h@@ ][m@@ ]) sum++; m++; } j++; } printf("%d\n",sum); sum=0; j=0; } return0; }  
c -1
h -1
voidmain() { intn,i; int@@ diyi@@ ,@@ dier@@ ,@@ disan@@ ; diyi@@ =0; dier@@ =0; disan@@ =0; structstudent { intnum; intyuwen; intshuxue; intsum; }stu[@@ 99999@@ ]; scanf("%d",&n); for(i=0;i<n;i++) { scanf("%d%d%d",&stu[i].num,&stu[i].@@ yuwen@@ ,&stu[i].@@ shuxue); stu[i].sum=stu[i].@@ yuwen+stu[i].@@ shuxue; } for(i=0;i<n;i++) { if(stu[i].@@ sum>@@ stu[@@ diyi@@ ].@@ sum@@ ){@@ diyi@@ =i;} } for(i=0;i<n;i++) { while(i@@ !=@@ diyi@@ ) { dier@@ =i; break; } break; } for(i=0;i<n;i++) { if(i!=@@ diyi@@ ) { if(stu[i].@@ sum>@@ stu[@@ dier@@ ].@@ sum@@ ){@@ dier@@ =i;} } } for(i=0;i<n;i++) { while(i@@ !=@@ diyi@@ &&i!=@@ dier@@ ) { disan@@ =i; break; } break; } for(i=0;i<n;i++) { if(i!=@@ diyi@@ &&i!=@@ dier@@ ) { if(stu[i].@@ sum>@@ stu[@@ disan@@ ].@@ sum@@ ){@@ disan@@ =i;} } } printf("%d%d\n",@@ diyi@@ +1,@@ stu[@@ diyi@@ ].sum); printf("%d%d\n",@@ dier@@ +1,@@ stu[@@ dier@@ ].sum); printf("%d%d\n",@@ disan@@ +1,@@ stu[@@ disan@@ ].sum); }  
c -1
h -1
0

intmain(intargc,char*argv[]) { intn,k,@@ t=0; scanf("%d%d",&n,&k); inta[@@ 1001]; for(inti=1;i<=@@ n;i++){ scanf("%d",&a[i]);} for(int@@ q@@ =1;@@ q@@ <=@@ n-1@@ ;q@@ ++){ for(int@@ r=@@ q@@ +1;@@ r@@ <=n;@@ r@@ ++){ if(a[@@ q@@ ]+@@ a[r@@ ]==k){ printf("yes"); t++; break;} } if(t@@ ==1){ break;} } if(t@@ ==0){ printf("no");} return0; }  
c -1
h -1
intmain() { intlen1,len2,@@ len3@@ ,i,j,@@ m,@@ p,@@ flag=0; char@@ str1@@ [300],@@ str2@@ [50@@ ],@@ str3@@ [50@@ ]; cin.getline(@@ str1@@ ,@@ 300@@ ); cin.getline(@@ str2@@ ,@@ 50@@ ); cin.getline(@@ str3@@ ,@@ 50@@ ); len1=strlen(@@ str1); len2=strlen(@@ str2); len3@@ =strlen(@@ str3@@ ); for(i=0;i<=@@ len1@@ -len2@@ ;i++) { flag=0; m=i; for(j=0;j<len2@@ ;j++) { if(@@ str1@@ [m@@ ++@@ ]!=@@ str2@@ [j]) break; } if(j==@@ len2) { for(p=0;p@@ <i@@ ;p++) cout<<@@ str1@@ [p@@ ]; cout<<@@ str3@@ ; cout<<@@ str1@@ +i@@ +len2@@ <<endl; flag=1; break; } } if(flag==0) { cout<<@@ str1@@ <<endl; } return0; }  
c -1
h -1
0

intmain(){ inti; char@@ d[@@ 3@@ ][@@ 501]; double@@ n,m,@@ a,b,@@ c,@@ x; x=0; scanf("%lf",&a); scanf("%s",&@@ d@@ [1]); scanf("%s",&@@ d@@ [2@@ ]); n=strlen(@@ d@@ [1]); m=strlen(@@ d@@ [2@@ ]); for(i=0;i<n;i++){ if((@@ d@@ [1]@@ [i]!='A'&&@@ d@@ [1]@@ [i]!='G'&&@@ d@@ [1]@@ [i]!='C'&&@@ d@@ [1]@@ [i]!='T')@@ ||(@@ d@@ [2]@@ [i]!='A'&&@@ d@@ [2]@@ [i]!='G'&&@@ d@@ [2]@@ [i]!='C'&&@@ d@@ [2]@@ [i]!='T')@@ ){ x++; } } if(m!=@@ n@@ ||@@ x@@ >0){ printf("error"); }else{ for(i=0;i<n;i++){ if(d@@ [1]@@ [i]==@@ d@@ [2]@@ [i]){ b++; } } c=@@ b@@ /n; if(c@@ >@@ a){ printf("yes"); }else{ printf("no"); } } return0; }  
c -1
h -1
intmain() { intt,@@ N@@ [@@ 1000][1000],@@ i,j,@@ n,m,@@ a=0,b=0,@@ s; scanf("%d",&t); for(i=0;i<t;i++) { for(j=0;j<@@ t;j++) { scanf("%d",&@@ N@@ [i][j]); } } for(i=0;i<t;i++) { for(j=0;j<@@ t;j++) { if(N@@ [i][j]==0) { n@@ =i@@ ;m@@ =j; } } } for(i=@@ n,@@ j=@@ m@@ ;j<@@ t@@ ;j--) { if(N@@ [i][j]==0) a++; elsebreak; } for(j=@@ m,@@ i=@@ n@@ ;i<@@ t@@ ;i--) { if(N@@ [i][j]==0) b++; elsebreak; } s=(@@ a@@ -2)*(@@ b@@ -2); printf("%d",s); return0; }  
c -1
h -1
0

main() {@@ intb[@@ 26],@@ h@@ [26],@@ k,i,j,@@ t=0; scanf("%d",&k); for(i=1;i<=k;i++) scanf("%d",&h[i]); for(i=1;i<=k;i++) { for(j=1@@ ,@@ t@@ =0;j<@@ i;j++) { if(h@@ [j]>=@@ h@@ [i]) {@@ if(b[j]@@ >@@ t) t=@@ b[j]@@ ;} } if(t@@ ==0)@@ b[i]=1; else@@ b[i]=@@ t@@ +1;} for(i=1@@ ,@@ t@@ =0;i<=@@ k;i++) { if(b[i]>@@ t) t=b[i]; } printf("%d",t); getchar(); getchar(); }  
c -1
h -1
voidmain() { intn,a[@@ 100000@@ ],i,j,@@ b[@@ 100000]; scanf("%d",&n); for(i=0;i<n;i++) { scanf("%d",&a[i]); } for(i=0;i<n;i++) { for(j=i+1;j<n;j++) { if(a[i]==@@ a[j])@@ b[j]=@@ a[j]; } } printf("%d",a[0]); for(i=1;i<n;i++) { if(b[i]@@ !=@@ a[i])@@ printf("%d",a[i]); }}  
c -1
h -1
0

voidf@@ (intp@@ ,intn) { inti,j; inta[100]; for(i=0;i<n;i++) scanf("%d",&a[i]); for(i=1;i<n;i++){ for(j=1;j<@@ n-i@@ +1@@ ;j++){ if(a[j]@@ <a@@ [j-1]@@ ){ a@@ [j-1]=@@ a[j]@@ +@@ a@@ [j-1]; a[j]=@@ a@@ [j-1]@@ -@@ a[j]; a@@ [j-1]=@@ a@@ [j-1]@@ -@@ a[j]; } } } for(i=0;i<n-1;i++) printf("%d",a[i]); printf("%d",a[@@ n-1]); if(p@@ >0) printf(""); } intmain() { inti,@@ n1,n2; scanf("%d%d",&@@ n1,@@ &@@ n2); f(@@ 1,@@ n1); f(@@ 0,@@ n2); return0; }  
c -1
h -1
main() { intc[@@ 16],@@ n,i,j,@@ m,@@ num; n=0; m=1; do { i=0; n=0; do { scanf("%d",&@@ c[i]); i++; }while(@@ c@@ [i-1]@@ !=0&&@@ c@@ [0]@@ !=@@ -1@@ &&i@@ <@@ 16@@ ); num@@ =i-1; if(c@@ [0]@@ !=-1) { for(i=0;i<num;i++) { for(j=i+1;j<@@ num@@ +1@@ ;j++) { if(c@@ [i]@@ >0@@ &&@@ c[j]@@ >0) if(c@@ [i]==@@ c[j]@@ *2@@ ||@@ c@@ [j]==@@ c[i]@@ *2@@ )@@ n++; } } printf("%d\n",n); } else@@ m=0; }while(@@ m@@ ==1@@ ); return(0); }  
c -1
h -1
0

intmain() { intn,k,@@ s[@@ 1000],@@ i,j; scanf("%d%d",&n,&k); for(i=0;i<n;i++) { scanf("%d",&s[i]); } for(i=0;i<n;i++) { for(j=0;j<i;j++) { if(s@@ [i]+@@ s@@ [j]==k) { printf("yes"); return0; } } for(j=i+1;j<n;j++) { if(s@@ [i]+@@ s@@ [j]==k) { printf("yes"); return0; } } } printf("no"); return0; }  
c -1
h -1
intmain() { inti,j,n,@@ k; inta[@@ 10000]; scanf("%d\n",&n); for(i=0;i<n;i++) { scanf("%d",&a[i]); if(i==0) printf("%d",a[i]); else { k=0; for(j=0;j<i;j++) { if(a[i]==a[j]) { k=1; } } if(k==0) printf("%d",a[i]); } } return0; }  
c -1
h -1
0

main() { intn,a[@@ 20000],b[@@ 20000],@@ i,j; scanf("%d",&n); for(i=0;i<n;i++) scanf("%d",&a[i]); for(i=0;i<n;i++) b[i]=0; printf("%d",a[0]); for(i=1;i<n;i++) for(j=0;j<i;j++) if(a[i]==a[j]) { b[i]@@ ++; break; } for(i=1;i<n;i++) if(b[i]@@ ==0) printf("%d",a[i]); getchar(); getchar(); getchar(); getchar(); }  
c -1
h -1
intmain() { intn,i,j,k,@@ t=0; cin>>n; inta[n]; for(i=0;i<n;i++){ cin>>a[i]; } for(i=0;i<n;i++) if(a[i]@@ >=0) for(j=i+1;j<n;j++) if(a[i]==@@ a[j])@@ a[j]@@ =-1; for(i=0;i<n;i++) if(a[i]@@ >=0) { if(i@@ >0@@ )@@ cout<<'@@ '; cout<<a[i]; } return0; }  
c -1
h -1
1


intmain(){ intk,@@ sz@@ [100][100],@@ m,n,@@ p,@@ i,j,@@ s@@ [100]={0}; scanf("%d",&k); for(p=0;p@@ <k@@ ;p++){ scanf("%d%d",&m,&n); for(i=0;i<m;i++){ for(j=0;j<n;j++){ scanf("%d",&(@@ sz@@ [i][j]@@ )); } } if(m@@ ==1&&n@@ ==1){ s[p@@ ]=@@ sz[0][@@ 0]; } else{ for(j=0;j<n;j++){ s[p@@ ]=@@ s[p@@ ]+@@ sz[0]@@ [j]+@@ sz[m@@ -1][j]; } for(i=0;i<m;i++){ s[p@@ ]=@@ s[p@@ ]+@@ sz[i]@@ [0]+@@ sz[i]@@ [n-1]; } s[p@@ ]=@@ s[p@@ ]-@@ sz[0][@@ 0]-@@ sz[0][@@ n-1]-@@ sz[@@ m-1][0]-@@ sz[@@ m-1][@@ n-1]; } } for(p=0;p@@ <k@@ ;p++){ printf("%d\n",@@ s[p@@ ]); } return0; }  
c -1
h -1
intmain() { intyear,month,day,@@ b,@@ i; for(i=1;i<=@@ 5@@ ;++i) { intcount@@ (int@@ month@@ ,int@@ year@@ ,int@@ day); scanf("%d%d%d",&year,&month,&day); b=@@ count@@ (@@ month,@@ year,@@ day); printf("%d\n",@@ b); } scanf("%d",&b); return0; } intcount@@ (int@@ month@@ ,int@@ year@@ ,int@@ day@@ ) { inta; if((year%4==0&&year%100!=0@@ )||@@ year%400==0) { switch(month) { case(@@ 1@@ ): a=@@ day;break; case(@@ 2)@@ : a@@ =31+@@ day;break; case(@@ 3@@ ): a=@@ 60@@ +day;break; case(@@ 4)@@ : a=@@ 91@@ +day;break; case(@@ 5@@ ): a=@@ 121@@ +day;break; case(@@ 6@@ ): a=@@ 152@@ +day;break; case(@@ 7@@ ): a=@@ 182@@ +day;break; case(@@ 8@@ ): a=@@ 213@@ +day;break; case(@@ 9@@ ): a=@@ 244@@ +day;break; case(@@ 10@@ ): a=@@ 274@@ +day;break; case(@@ 11@@ ): a=@@ 305@@ +day;break; case(@@ 12@@ ): a=@@ 335@@ +day;break; } } else { switch(month) { case(@@ 1@@ ): a=@@ day;break; case(@@ 2)@@ : a@@ =31+@@ day;break; case(@@ 3@@ ): a=@@ 59@@ +day;break; case(@@ 4)@@ : a=@@ 90@@ +day;break; case(@@ 5@@ ): a=@@ 120@@ +day;break; case(@@ 6@@ ): a=@@ 151@@ +day;break; case(@@ 7@@ ): a=@@ 181@@ +day;break; case(@@ 8@@ ): a=@@ 212@@ +day;break; case(@@ 9@@ ): a=@@ 243@@ +day;break; case(@@ 10@@ ): a=@@ 273@@ +day;break; case(@@ 11@@ ): a=@@ 304@@ +day;break; case(@@ 12@@ ): a=@@ 334@@ +day;break; } } return(@@ a); }  
c -1
h -1
0

int@@ function@@ (intn,int@@ a) { int@@ kind@@ =0; inti; if(n==1) return1; for(i=a@@ ;i<=n;i++) { if(n%i==0) { if(n@@ /i@@ <i@@ &&i!=@@ n); else { kind@@ =@@ kind@@ +@@ function@@ (n/i,i); } } } return@@ kind@@ ; } intmain() { intm,n,@@ i,@@ sum; cin>>m; for(i=1;i<=m;i++) { cin>>n; sum=@@ function@@ (n,@@ 2); cout<<sum<<endl; } return0; }  
c -1
h -1
intmain() { chara[256],b[256],c[256]; scanf("%s%s%s",@@ b,@@ a,@@ c); int@@ alen@@ ,@@ blen@@ ,@@ clen@@ ,@@ i,j; alen@@ =strlen(@@ a);@@ blen@@ =strlen(@@ b@@ );@@ clen@@ =strlen(c); intn=0; for(i=0;i<@@ blen@@ ;i++) { if(b[i]==@@ a[0]) { n=1; for(j=0;j<@@ alen@@ ;j++) if(a[j]!=@@ b@@ [i+j@@ ]){@@ n=@@ 2@@ ;break;} } if(n@@ ==1)break; } int@@ t=i; if(n==1) { for(i=0;i<@@ t@@ ;i++)@@ printf("%c",@@ b[i]); printf("%s",@@ c); for(i=@@ t@@ +@@ clen@@ ;i<@@ blen@@ ;i++)@@ printf("%c",@@ b[i]); } else@@ printf("%s",@@ b); return0; }  
c -1
h -1
0

intmain() { intk,@@ a[100@@ ][2@@ ],@@ c@@ [100][100@@ ][100],@@ i,j,@@ p,@@ s@@ [100]; scanf("%d",&k); for(i=0;i<k;i++) { scanf("%d%d",&@@ a[i][0]@@ ,&@@ a[i]@@ [1]); for(j=0;j<@@ a[i][0]@@ ;j++) for(p=0;p@@ <@@ a[i][1]@@ ;p++) scanf("%d",&@@ c@@ [i][j]@@ [p@@ ]); } for(i=0;i<k;i++) { s[i]@@ =0; for(j=0;j<@@ a[i][1]@@ ;j++) s[i]@@ +=@@ c[i]@@ [0]@@ [j]; for(j=0;j<@@ a[i][1]@@ ;j++) s[i]@@ +=@@ c[i]@@ [@@ a[i][0]@@ -1][j]; for(j=1;j<@@ a[i][0]@@ -1;j++) s[i]@@ +=@@ c@@ [i][j]@@ [0]; for(j=1;j<@@ a[i][0]@@ -1;j++) s[i]@@ +=@@ c@@ [i][j]@@ [@@ a[i][1]@@ -1]; printf("%d\n",@@ s[i]); } return0; }  
c -1
h -1
voidmain() { intc[@@ 20000@@ ]={0},@@ a,@@ i=0,@@ n,@@ p=0,@@ j,@@ k; scanf("%d",&n); while(i<n) { scanf("%d",&a); for(j=0@@ ,k@@ =0;j<@@ i;j++) { if(c@@ [j]==@@ a) { k=1; break; } } if(k==0) { c[@@ p@@ ]=a; p++; } i++; } for(j=0;j<@@ p@@ ;j++) { printf("%d",c@@ [j]); if(j@@ <p@@ -1)@@ printf(""); } }  
c -1
h -1
0

intmain() { char@@ mname@@ [@@ 999@@ ][@@ 26],@@ name@@ ; inti,j,@@ m,@@ len,@@ max=0; intnum[@@ 999@@ ],@@ count@@ [26]={0}; cin>>m; for(i=0;i<m;i++) { cin>>@@ num[i]@@ >>@@ mname@@ [i]; len=strlen(@@ mname@@ [i]); for(j=0;j<len;j++) { count[@@ mname@@ [i][j]@@ -'A']++; } } for(i=0;i<26;i++) { if(count@@ [i]>max) { max=count@@ [i]; name@@ =i+@@ 'A'@@ ; } } cout<<@@ name@@ <<endl@@ <<@@ max<<endl; for(i=0;i<m;i++) { len=strlen(@@ mname@@ [i]); for(j=0;j<len;j++) { if(@@ mname@@ [i][j]==@@ name@@ ) { cout<<@@ num[i]@@ <<endl; break; } } } return0; }  
c -1
h -1
intmain() { intn,i,j,k,@@ m=0; cin>>n; inta[n]; for(i=0;i<n;i++) cin>>a[i]; for(i=0;i<=@@ n-@@ m;i++) { for(j=i+1;j<=@@ n-@@ m;j++) { if(a[j]==a[i]) { m=m+1; for(k=j@@ ;k<=@@ n-@@ m;k++) a[k]=a[k@@ +1]; j=j-1; } } } for(i=0;i<n-@@ m-1;i++) cout<<a[i]<<""; cout<<a[@@ n-@@ m@@ -1]@@ <<endl; return0; }  
c -1
h -1
0

intmain() { intn,@@ a; scanf("%d%d\n",&n,&@@ a); intsz[@@ n]; for(inti=0;i<@@ n-1@@ ;i++){@@ scanf("%d",&@@ sz[i]@@ );} scanf(@@ "&@@ d@@ ",&@@ sz[@@ n-1]); for(inti=0;i<@@ n-1;i++) { for(intk@@ =i+1@@ ;k<@@ n;k++) {if(@@ sz[i]@@ +sz@@ [k]==@@ a) {@@ printf("yes");@@ return0;} if(i==@@ n-2@@ &&k@@ ==@@ n-1@@ &&@@ sz[i]@@ +sz@@ [k]@@ !=@@ a@@ ){@@ printf("no@@ ");@@ return0;} } } return0; }  
c -1
h -1
intmain() { inta,b,@@ c=0; inti=0; intsum=0; scanf("%d%d%d",&a,&b,&c); for(i=1;i<@@ b;i++) { sum=sum+@@ 30; if(i==1||i==3||i==5||i==7||i==8||i==@@ 10) { sum=sum+1; } elseif(i==@@ 2@@ &&(@@ (@@ a%100!=0@@ &&@@ a%@@ 4@@ ==0)@@ ||a%@@ 400==0)) { sum=sum@@ -1; } elseif(i==@@ 2@@ &&(@@ a%@@ 4!=0@@ ||a%@@ 100==0&&@@ a%@@ 400!=0)) { sum=sum@@ -2@@ ; } } printf("%d",@@ sum@@ +c); return0; }  
c -1
h -1
0

intmain() { inta[100][100],@@ r,@@ c,@@ i,j; cin>>@@ r@@ >>@@ c; for(i=0;i<=@@ r@@ -1;i++) { for(j=0;j<=@@ c@@ -1;j++) { cin>>a[i][j]; } } for(j=0;j<=@@ c@@ -1;j++) { for(i=0;@@ (i@@ <=j@@ )&&(i@@ <=@@ r@@ -1);i++) { cout<<a[i]@@ [j-i@@ ]<<endl; } } for(i=1;i<=@@ r@@ -1;i++) { for(j=0;@@ (j@@ <=@@ r@@ -i@@ -1)@@ &&(@@ j@@ +1@@ <=@@ c@@ );j++) { cout<<@@ a[i+j@@ ][c@@ -1-j@@ ]<<endl; } } return0; }  
c -1
h -1
struct@@ bing { charid[10]; intage; }; voidmain() { struct@@ bing@@ peo@@ [@@ 120@@ ],@@ old@@ [@@ 120@@ ],@@ young@@ [@@ 120@@ ],@@ temp; inti,j,n,@@ num1@@ =0,@@ num2@@ =0; scanf("%d",&n); for(i=0;i<n;i++) scanf("%s%d",@@ peo@@ [i].id,&@@ peo@@ [i].age); for(i=0;i<n;i++) { if(@@ peo@@ [i].age>=60) { old@@ [@@ num1@@ ]=@@ peo@@ [i]; num1@@ =@@ num1@@ +1; } else { young@@ [@@ num2@@ ]=@@ peo@@ [i]; num2@@ =@@ num2@@ +1; } } for(i=0;i<@@ num1@@ -1;i++) for(j=0;j<@@ num1@@ -i-1;j++) { if(old@@ [j].age@@ <@@ old@@ [j+1@@ ].age) { temp=@@ old@@ [j]; old@@ [j]=@@ old@@ [j+1]; old@@ [j+1]=temp; } } for(i=0;i<@@ num1@@ ;i++) printf("%s\n",old@@ [i].id); for(i=0;i<@@ num2@@ ;i++) printf("%s\n",@@ young@@ [i].id); }  
c -1
h -1
0

intmain(){ intn,k,i,@@ a,b; intsz[@@ 1001]; scanf("%d%d",&n,&k); for(i=1;i<=n;i++){ scanf("%d",&sz[i]); } for(a@@ =1;@@ a@@ <n;@@ a++){ for(@@ b=@@ a@@ +1;@@ b@@ <=n;@@ b++){ if(@@ sz[a@@ ]+sz[@@ b@@ ]==k){ printf("yes"); break; } } if(@@ sz[a@@ ]+sz[@@ b@@ ]==k){ break; } if(a==@@ n-1){ printf("no"); } } return0; }  
c -1
h -1
intmain(intargc,char*argv[]) { intn; scanf("%d",&n); structstudent{ inta,b,c; }@@ student_1@@ ; int@@ x,@@ i=0; int@@ a1@@ =0,@@ a2@@ =0,@@ b1@@ =0,@@ b2@@ =0,@@ c1@@ =0,@@ c2@@ =0; while(i<@@ n){ scanf("%d%d%d",&@@ student_1@@ .@@ a,&@@ student_1@@ .@@ b@@ ,&@@ student_1@@ .@@ c); x=@@ student_1@@ .@@ b+@@ student_1@@ .@@ c; if(x>@@ a2@@ ){ c1@@ =@@ b1@@ ; c2@@ =@@ b2@@ ; b1@@ =@@ a1@@ ; b2@@ =@@ a2@@ ; a1@@ =@@ student_1@@ .@@ a; a2@@ =@@ x; } elseif(x@@ ==@@ a2@@ ){ if(x>@@ b2@@ ) { c1@@ =@@ b1@@ ; c2@@ =@@ b2@@ ; b1@@ =@@ student_1@@ .@@ a; b2@@ =@@ x; } elseif(x@@ >@@ c2@@ ) { c1@@ =@@ student_1@@ .@@ a; c2@@ =@@ x; } } elseif(x@@ >@@ b2@@ ){ c1@@ =@@ b1@@ ; c2@@ =@@ b2@@ ; b1@@ =@@ student_1@@ .@@ a; b2@@ =@@ x; } elseif(x@@ ==@@ b2@@ ){ if(x>@@ c2@@ ) { c1@@ =@@ student_1@@ .@@ a; c2@@ =@@ x; } } elseif(x@@ >@@ c2@@ ){ c1@@ =@@ student_1@@ .@@ a; c2@@ =@@ x; } i++; } printf("%d%d\n",@@ a1,@@ a2@@ ); printf("%d%d\n",@@ b1,@@ b2@@ ); printf("%d%d\n",@@ c1@@ ,@@ c2@@ ); return0; }  
c -1
h -1
0

intmain() { intn,k,@@ a,@@ e@@ [@@ 10008@@ ],i,j,@@ m,@@ log@@ ; log@@ =0; scanf("%d%d",&n,&k); if(n==1) { if(n@@ ==k) { printf("yes"); }else{ printf("no"); } }else{ scanf("%d",&a); e@@ [1]=@@ a; for(i=2;i<=n;i++) { scanf("%d",&a); e@@ [i]=@@ a; } for(j=1;j<=n;j++) { for(m=@@ n;@@ m@@ >@@ j@@ ;m@@ --) { if((@@ e@@ [j]+@@ e@@ [m@@ ])@@ ==k) { printf("yes"); log@@ =1; break; } } if(@@ log@@ >0@@ .@@ 1) { break; } } if(@@ log@@ <0@@ .@@ 1) { printf("no"); } } return0; }  
c -1
h -1
intmain() { int@@ ro@@ ,@@ co@@ ,@@ sz@@ [100][@@ 1000],@@ i,j,@@ m,@@ k,@@ c=0,@@ b=1; scanf("%d%d",&@@ ro@@ ,&@@ co@@ ); for(i=0;i<@@ ro@@ ;i++){ for(j=0;j<@@ co@@ ;j++){ scanf("%d",&sz[i][j]); } } m=@@ ro@@ *@@ co@@ ; i=0; j=0; for(k=0;k<@@ m@@ ;k++){ printf("%d\n",sz@@ [i][j]); if(@@ ro@@ >=@@ co@@ ){ if(j@@ ==0&&@@ i@@ <@@ co@@ -1){ j@@ =i+@@ 2; i@@ =-1; } j--; i++; if((@@ j@@ <0@@ &&i@@ >@@ co@@ -1)@@ ||@@ i@@ >@@ ro@@ -1){ j=@@ co@@ -1; i=@@ c@@ +1; c++; } } if(@@ ro@@ <@@ co@@ ){ if(j@@ ==0&&@@ i<=@@ ro@@ -1){ j@@ =i+@@ 2; i@@ =-1; } j--; i++; if(i>@@ ro@@ -1){ i=0; j=@@ ro@@ +c@@ +1; c++; } if(j@@ >@@ co@@ -1){ j=@@ co@@ -1; i=@@ b; b++; } } } return0; }  
c -1
h -1
0

intmain(){ inta[100][100],@@ sum@@ [100]; intk,m,n,i,j,@@ t; scanf("%d",&k); for(t=0;t@@ <k;@@ t++){ scanf("%d%d",&m,&n); sum[@@ t@@ ]=0; for(i=0;i<m;i++){ for(j=0;j<n;j++){ scanf("%d",&a[i][j]); } } for(i=0;i<m;i++){ sum[@@ t@@ ]+=@@ a[i][0]+@@ a[i][n-1]; } for(j=0;j<n;j++){ sum[@@ t@@ ]+=@@ a[0]@@ [j]+@@ a[m-1][j]; } sum[@@ t@@ ]@@ -=@@ a[0][0]@@ +@@ a[0][@@ n-1@@ ]+@@ a[@@ m-1@@ ][0]+@@ a[m-1][@@ n-1]; } for(t=0;t@@ <k;@@ t++){ if(t@@ !=@@ k@@ -1){ printf("%d\n",@@ sum[@@ t@@ ]); } else{ printf("%d",@@ sum[@@ t@@ ]); } } return0; }  
c -1
h -1
int@@ s1,@@ s2; int@@ reads@@ () { inta; cin>>a; return@@ a; } void@@ reada@@ (inta[@@ ]) { for(inti=1;i<=@@ s1@@ ;i++) { cin>>a[i]; } } void@@ readb@@ (int@@ b[@@ ]) { for(inti=1;i<=@@ s2@@ ;i++) { cin>>b[i]; } } void@@ reordera@@ (inta[@@ ]) { for(inti=1;i<=@@ s1@@ -1;i++) for(intj=1;j<=@@ s1@@ -i;j++) { if(a[j]>a[j+1]) { int@@ m=@@ a[j]; a[j]=a[j+1]; a[j+1]=@@ m; } } } void@@ reorderb@@ (int@@ b[@@ ]) { for(inti=1;i<=@@ s2@@ -1;i++) for(intj=1;j<=@@ s2@@ -i;j++) { if(b[j]>b[j+1]) { int@@ m=@@ b[j]; b[j]=b[j+1]; b[j+1]=@@ m; } } } voidhebing@@ (inta[],intb[],int@@ c[@@ ]) { for(inti=1;i<=@@ s1@@ ;i++) c[i]=a[i]; for(inti=@@ s1@@ +1;i<=@@ s1@@ +@@ s2@@ ;i++) c[i]=b[i-@@ s1@@ ]; } voidoutput@@ (intc[@@ ]) { for(inti=1;i<=@@ s1@@ +@@ s2@@ -1;i++) cout<<@@ c[i]@@ <<""; cout<<c[@@ s1@@ +@@ s2@@ ]; } intmain() { inta[@@ 500],b[@@ 500@@ ],c[@@ 1000]; s1@@ =@@ reads@@ (); s2=@@ reads@@ (); reada@@ (a); readb@@ (@@ b); reordera@@ (a); reorderb@@ (@@ b); hebing@@ (a,b,@@ c); output@@ (@@ c); return0; }  
c -1
h -1
0

intmain(){ inti,j,@@ count=0; double@@ bl@@ ; chara[@@ 508@@ ],b[@@ 508@@ ]; scanf("%lf",&@@ bl@@ ); scanf("%s%s",a,b); if(strlen(a)!=strlen(b@@ )){ printf("error");@@ return0; } for(i=0;a[i]@@ !=0@@ ;i++){ if(a[i]!='A'&&a[i]!='T'&&a[i]!='C'&&a[i]!='@@ G'){ printf("error");@@ return0; } } for(i=0;@@ b[i]@@ !=0@@ ;i++){ if(@@ b[i]!='A'&&b[i]!='T'&&b[i]!='C'&&b[i]!='@@ G'){ printf("error");@@ return0; } } for(i=0;a[i]@@ ;i++){ if(a[i]==b[i]){ count++; } } if((@@ 1.0*@@ count@@ /@@ (@@ strlen(a)@@ ))@@ >@@ bl@@ ){ printf("yes"); }else{ printf("no"); } return0; }  
c -1
h -1
intmain() { inta,b; scanf("%d%d",&a,&b); int@@ c[100]; int@@ d@@ [100]; inti,@@ t,@@ r; i=0; do { scanf("%d",&@@ c[i]); i++; }@@ while(i<@@ a); i=0; do { scanf("%d",&@@ d[i]); i++; }@@ while(i<@@ b); t=0; do { i=0; while(i<@@ a@@ -1@@ -@@ t) { if(c@@ [i]>@@ c@@ [i+1]) { r=@@ c[i]; c[i]=@@ c@@ [i+1]; c@@ [i+1]=@@ r; } i++; } t++; }while(@@ t@@ <a@@ -1); t=0; do { i=0; while(i<@@ b@@ -1@@ -@@ t) { if(d@@ [i]>@@ d@@ [i+1]) { r=@@ d[i]; d[i]=@@ d@@ [i+1]; d@@ [i+1]=@@ r; } i++; } t++; }while(@@ t@@ <b@@ -1); printf("%d",c@@ [0]); i=1; do { printf("%d",c[i]); i++; }@@ while(i<@@ a); i=0; do { printf("%d",@@ d[i]); i++; }@@ while(i<@@ b); return0; }  
c -1
h -1
0

main() { int@@ s,@@ y,@@ i,j,k,@@ n,m,@@ t,@@ q; scanf("%d",&t); for(q=0;q@@ <@@ t@@ ;q++) {@@ s=0; y=0; scanf("%d%d",&m,&n); inta[@@ m@@ ][n]; for(i=0;i<m;i++) { for(j=0;j<n;j++) { scanf("%d",&a[i][j]); } } for(i=0;i<n;i++) { s=@@ a[0]@@ [i]+@@ a[m-1]@@ [i]+@@ s; } for(i=1;i<m-1;i++) { y=@@ a[i][0]+@@ a[i][@@ n-1@@ ]+@@ y; } printf("%d\n",@@ (@@ s@@ +@@ y@@ )); } getchar(); getchar(); getchar(); getchar(); getchar(); getchar(); }  
c -1
h -1
int@@ isrn@@ (intn) { if(n%@@ 400==0) return1; else { if(n%@@ 100==0) return0; else { if(n%@@ 4==0) return1; else return0; } } } voidmain() { inty,m,d,@@ sum=0,@@ i; scanf("%d%d%d",&y,&m,&d); for(i=1;i<m;i++) { if(i==1||i==3||i==5||i==7||i==8||i==@@ 10) { sum+=@@ 31; } if(i==@@ 4||i==6||i==9||i==11) { sum+=@@ 30; } if(i==@@ 2) { if(@@ isrn@@ (y@@ )) sum+=@@ 29; else sum+=@@ 28; } } sum+=@@ d; printf("%d\n",sum); }  
c -1
h -1
0

int@@ p=0,@@ q=@@ 2; int@@ jizu@@ (intx) { for(inti=@@ q@@ ;i<=@@ x@@ -1;i++) { if((x@@ %i@@ ==0)&&(@@ x@@ /i@@ >@@ i@@ )) { p++; q@@ =i; jizu@@ (x@@ /i); } elseif((@@ x@@ %i@@ ==0)&&(@@ x/@@ i==@@ i@@ )) { p++; } } return@@ p; } intmain() { intn; scanf("%d",&n); inta[100]; for(inti=0;i<=@@ n-1;i++) { scanf("%d",&a[i]); } for(inti=0;i<=@@ n-1;i++) { printf("%d\n",@@ jizu@@ (@@ a[i])@@ +1); p=0,@@ q=@@ 2; } inty; scanf("%d",&@@ y); }  
c -1
h -1
intmain() { intn,i,@@ s,@@ a,@@ c@@ =1,@@ k,@@ t; scanf("%d",&n); for(i=0;i<n@@ *@@ n;i++) { scanf("%d",&a); if(a==0) { if(c@@ ) { t=i; c=0; } k=i; } } s=(@@ k@@ %@@ n-@@ t@@ %@@ n-1)@@ *(@@ k/@@ n-@@ t@@ /@@ n-1); printf("%d",s); return0; }  
c -1
h -1
0

void@@ main(@@ intargc@@ ,char*argv[]) { int@@ loc@@ [1000][1000]; intm,n,@@ p,q; inta; scanf("%d",&a); inti,j; for(i=0;i<a;i++) { for(j=0;j<a@@ ;j++) { scanf("%d",&@@ loc@@ [i][j]); } } for(i=0;i<a;i++) { for(j=0;j<a@@ ;j++) { if(@@ loc@@ [i][j]==0) { m=i; n@@ =j; break; } } if(@@ loc@@ [m@@ ][n@@ ]==0) { break; } } for(i=a@@ -1;i>=0;i--) { for(j=@@ a@@ -1@@ ;j>=0;j--) { if(@@ loc@@ [i][j]==0) { p=i; q@@ =j; break; } } if(@@ loc@@ [p@@ ][q@@ ]==0) { break; } } ints; s=(@@ p@@ -m@@ -1)*(@@ q@@ -@@ n-1); printf("%d\n",s); }  
c -1
h -1
intmain(intargc,char*argv[]) { int@@ points@@ [100][100]; intn,@@ row,col; intsum=0,@@ i=0; int@@ SUM@@ =0,@@ j=0; scanf("%d",&n); for(row=0;row<n;@@ row++) { for(col=0;col<n;col@@ ++) { scanf("%d",&@@ points@@ [@@ row][col@@ ]); } } for(row=0;row<n;@@ row++) { sum=0; for(col=0;col<n;col@@ ++) { sum+=@@ points@@ [@@ row][col]; } if(sum@@ <@@ n*@@ 255) i++; } for(col=0;col<n;col@@ ++) { SUM@@ =0; for(row=0;row<n;@@ row++) { SUM@@ +=@@ points@@ [@@ row][col]; } if(@@ SUM@@ <@@ n*@@ 255) j++; } printf("%d",@@ (i@@ -2)*(@@ j@@ -2@@ )); return0; }  
c -1
h -1
1


intmain() { intf@@ (intp@@ ,int@@ q@@ ,int@@ t); intn,i; int@@ g@@ [100]; scanf("%d",&n); for(i=0;i<n;i++) scanf("%d",&@@ g@@ [i]); for(i=0;i<n;i++) { printf("%d\n",@@ f(@@ 2,@@ g@@ [i],@@ 1@@ )); } return0; } intf@@ (intp@@ ,int@@ q@@ ,int@@ t) { inth@@ [100][100]; inti,@@ k=0; for(i=@@ p@@ ;i@@ *@@ i<=@@ q@@ ;i++) { k=0; if(q@@ %i==0) { h@@ [k@@ ][@@ 0]=@@ i; h@@ [k@@ ][1@@ ]=@@ q@@ /@@ i; k++; if(k@@ !=0) { t=@@ f(@@ h@@ [k-1@@ ][@@ 0],@@ h@@ [k-1@@ ][1@@ ],@@ t); } } t=t+@@ k; } return@@ t; }  
c -1
h -1
inti,j,@@ n1,n2,@@ a1@@ [100],@@ a2@@ [100]; void@@ scan@@ () { cin>>@@ n1@@ >>@@ n2; for(i=0;i<n1;i++) cin>>@@ a1@@ [i]; for(j=0;j<@@ n2@@ ;j++) cin>>@@ a2@@ [j]; } void@@ adjust@@ () { intp; for(i=0;i<n1;i++) { for(j=i+1;j<@@ n1@@ ;j++) { if(@@ a1@@ [i]>@@ a1@@ [j]) { p=@@ a1@@ [i]; a1@@ [i]=@@ a1@@ [j]; a1@@ [j]=@@ p; } } } for(i=0;i<n2;i++) { for(j=i+1;j<@@ n2@@ ;j++) { if(@@ a2@@ [i]>@@ a2@@ [j]) { p=@@ a2@@ [i]; a2@@ [i]=@@ a2@@ [j]; a2@@ [j]=@@ p; } } } } voidcombine@@ () { for(i=@@ n1@@ ;i<@@ n1+@@ n2;i++) { a1@@ [i]=@@ a2@@ [i-@@ n1@@ ]; } } voidprint() { for(i=0;i<n1@@ +@@ n2@@ -1;i++) cout<<@@ a1@@ [i]@@ <<""; cout<<@@ a1@@ [@@ n1+n2@@ -1]@@ <<endl; } intmain() { scan@@ (); adjust@@ (); combine@@ (); print(); return0; }  
c -1
h -1
0

intmain(){ inti,@@ a,b,@@ c,d; doublen; char@@ xl1@@ [500],@@ xl2@@ [500]; c=0; scanf("%lf",&n); scanf("%s%s",@@ xl1@@ ,@@ xl2@@ ); a=strlen(@@ xl1@@ ); b=strlen(@@ xl2@@ ); if(a!=@@ b){ printf("error"); }else{ for(i=0;i<a;i++){ if((@@ xl1@@ [i]!='A'&&@@ xl1@@ [i]!='T'&&@@ xl1@@ [i]!='G'&&@@ xl1@@ [i]!='@@ C')||(@@ xl2@@ [i]!='A'&&@@ xl2@@ [i]!='T'&&@@ xl2@@ [i]!='G'&&@@ xl2@@ [i]!='@@ C')){ printf("error"); d=0; break; }else{ if(@@ xl1@@ [i]==@@ xl2@@ [i]){ c++; } } } if(1.0*@@ c@@ /@@ a@@ >@@ n@@ &&@@ d@@ !=0){ printf("yes"); }elseif(@@ 1.0*@@ c@@ /@@ a@@ <=@@ n@@ &&@@ d@@ !=0){ printf("no"); } } return0; }  
c -1
h -1
intmain() { intk; scanf("%d",&k); int*@@ a=@@ (int*)malloc(sizeof(int)@@ *@@ k); inti,j; for(i=0;i<k;i++) scanf("%d",&a[i]); int@@ count[@@ 30]={0}; int@@ max; max=0; for(i=k-2;i>=0;i--) { for(j=i+1;j<k;j++) { if(a[j]<=@@ a[i]&&@@ count@@ [i]<@@ count@@ [j]@@ +1) count@@ [i]=@@ count@@ [j]+1; } } for(i=0;i<k;i++) { if(max<@@ count@@ [i]) max=count@@ [i]; } printf("%d",@@ max@@ +1); free(@@ a); return0; }  
c -1
h -1
0

intmain(){ float@@ a,@@ rate@@ ; inti,@@ lena@@ ,@@ lenb@@ ,@@ sum=0; scanf("%f",&@@ a); char@@ an@@ [501],@@ bn@@ [501]; scanf("%s",@@ an@@ ); scanf("%s",@@ bn@@ ); lena@@ =strlen(@@ an@@ ); lenb@@ =strlen(@@ bn@@ ); if(@@ lena@@ !=@@ lenb@@ ){ printf("error"); return0; } for(i=0;i<@@ lena@@ ;i++){ if((@@ an@@ [i]!='A'&&@@ an@@ [i]!='T'&&@@ an@@ [i]!='C'&&@@ an@@ [i]!='G')||(@@ bn@@ [i]!='A'&&@@ bn@@ [i]!='T'&&@@ bn@@ [i]!='C'&&@@ bn@@ [i]!='G')){ printf("error"); return0; } } for(i=0;i<@@ lena@@ ;i++){ if(@@ an@@ [i]==@@ bn@@ [i]) sum+=@@ 1; } rate@@ =1.0*@@ sum/@@ lena@@ ; if(@@ rate@@ >@@ a) printf("yes"); else printf("no"); return0; }  
c -1
h -1
voidmain() { chars[@@ 512@@ ],@@ w@@ [257],@@ r@@ [257]; intm,n; inti,j,k; intt; scanf("%s%s%s",@@ s,@@ w,@@ r); m@@ =strlen(s); n=strlen(@@ w); for(i=0;i<=@@ m@@ -@@ n;i++) { t=0; for(j=0;j<n;j++) { if(w@@ [j]!=@@ s[i+j@@ ]) t=1; } if(t==0) break; } if(t==0) { for(k=i@@ ;k<=@@ i+@@ n-1;k++) { s@@ [k]=@@ r@@ [k-i@@ ]; } printf("%s",s); } else { printf("%s",s); } }  
c -1
h -1
0

intmain() { charstr[256],@@ sub[256],@@ rep@@ [256],@@ temp@@ [256]; char*@@ p; gets(str); gets(sub); gets(@@ rep); p=strstr(@@ str,@@ sub); if(p@@ !=NULL@@ ){ *p@@ =0; strcpy(@@ temp,@@ str); strcat(@@ temp,@@ rep); strcat(@@ temp,@@ p+@@ strlen(@@ sub@@ )); strcpy(@@ str,@@ temp); } printf("%s\n",@@ str); return0; }  
c -1
h -1
voidmain() { inti,j=0,@@ s,@@ t,@@ k=0,@@ n; structpatient{ charID[10]; intage; }; structpatient@@ p@@ [100],@@ d@@ [100],@@ c[100],@@ temp; scanf("%d",&n); for(i=0;i<n;i++) { scanf("%s%d",@@ p[i].@@ ID,&@@ p[i].age); } for(i=0;i<n;i++) { if(p@@ [i].age>=60) d@@ [j@@ ++]=@@ p[i]; else@@ c@@ [k@@ ++]=@@ p[i]; } s@@ =j; t=@@ k; for(i=1;i<@@ s;i++) { for(j=0;j<@@ s@@ -i;j++) { if(d@@ [j].age@@ <@@ d@@ [j+1@@ ].age) { temp=@@ d@@ [j]; d@@ [j]=@@ d@@ [j+1]; d@@ [j+1]=temp; } } } for(i=0;i<@@ s;i++) { printf("%s\n",@@ d@@ [i].ID); } for(i=0;i<t;i++) printf("%s\n",@@ c@@ [i].ID); }  
c -1
h -1
0

intmain() { inti=0,j=0,@@ s=0; int@@ lena@@ ,@@ lenb@@ ,@@ x,y; inta[16@@ ]={0}; intb[@@ 20@@ ]={0}; while(1) { while(@@ scanf("%d",&a[i]@@ )) { if((@@ a[i]@@ ==0)||(@@ a[i]==@@ -1)) break; else { i++; continue; } } if(a[0]==-1) break; else { lena@@ =i; for(x=0;x@@ <@@ lena@@ ;x@@ ++) { for(@@ y=@@ x@@ +1;@@ y@@ <=@@ lena@@ ;y@@ ++) { if((@@ a[x@@ ]==2*@@ a[@@ y@@ ]@@ )||(@@ a[@@ y@@ ]==2*@@ a[x@@ ]@@ )) s++; } } b[j]=@@ s; s=0; } j++; for(i=0;i<16;i++) a[i]=0; i=0; } for(i=0;i<j;i++) printf("%d\n",@@ b[i]); return0; }  
c -1
h -1
intmain() { intk=0,@@ i,j,@@ n,@@ a[@@ 20000]; scanf("%d",&n); for(i=0;i<n;i++)@@ scanf("%d",&a[i]); for(i=0;i<n;i++) { for(j=i+1;j<n;j++) { if(a[j]==a[i]) a[j]=0; } } for(j=n-1@@ ;@@ a[j]@@ ==0@@ ;j--@@ )@@ k=0; for(i=0;i<j;i++) if(a[i]!=0) printf("%d",a[i]); printf("%d",@@ a[j]); return0; }  
c -1
h -1
0

intmain(){ inti,j,@@ l1,@@ l0@@ ,@@ js@@ =0; double@@ jg@@ ,@@ bl@@ ; chara[@@ 2][@@ 501]; scanf("%lf",&@@ bl@@ ); for(i=0;i<2@@ ;i++){ scanf("%s",@@ a[i]); } l0@@ =strlen(@@ a[0]); l1=strlen(@@ a[1]); if(l1@@ !=@@ l0@@ ){ printf("error"); return0; } for(j=0;j<@@ 2@@ ;j++){ for(i=0;i<l1;i++){ if((a[j]@@ [i]!='A')&&(@@ a[j]@@ [i]!='T')&&(@@ a[j]@@ [i]!='C')&&(@@ a[j]@@ [i]!='G')){ printf("error"); return0; } } } for(i=0;i<l1;i++){ if(a[0]@@ [i]==@@ a[1]@@ [i]){ js@@ ++; } } jg@@ =1.0*@@ js@@ /@@ l1; if(@@ jg@@ >@@ bl@@ ){ printf("yes"); }else{ printf("no"); } return0; }  
c -1
h -1
intmain() { inta[@@ 100000]; inti,j,k; intm; intn; for(i=0;i<@@ 100000@@ ;i++) { cin>>a[i]; if(a[i]==-1) break; if(a[i]==0) { n=0; for(j=0;j<i;j++) { for(k=0;k<i;k++) { if(a[k]@@ ==0) continue; if(a[j]==2*@@ a[k]) n=n+1; } } cout<<n<<endl; a[0]@@ =0; i=0; } } return0; }  
c -1
h -1
0

intmain() { intx[@@ 16],@@ i,j,k,@@ a; while(1){ for(i=0;i<16@@ ;i++)@@ x@@ [i]=0; for(i=0;@@ scanf("%d",&@@ x@@ [i])@@ ,~@@ x[i]@@ ;i++)@@ if(!@@ x[i]@@ )break; if(x@@ [0]==@@ -1)@@ break;@@ else for(a@@ =0,@@ j@@ =1@@ ;j<@@ i;j++) for(k=0;k<j@@ ;k++) if(x@@ [k]==2*@@ x[j]@@ ||@@ x@@ [j]==2*@@ x@@ [k]@@ )@@ a++; printf("%d\n",@@ a); } return0; }  
c -1
h -1
intmain() { intn,i,j,k,@@ cn@@ ; cin>>n; inta[n]; cn@@ =0; for(i=0;i<n;i++) { cin>>k; for(j=0;j<=@@ cn@@ ;j++) if(a[j]==@@ k) break; if(j==@@ cn@@ +1) { a[@@ cn@@ ]=@@ k; cn@@ ++; } } for(i=0;i<@@ cn@@ -1;i++) cout<<a[i]<<""; cout<<a[@@ cn@@ -1]; return0; }  
c -1
h -1
0

voidmain() { inti,j,@@ m,n,@@ a=0; int(*p)@@ [@@ 10000]; scanf("%d%d",&m,&n); p=@@ (int@@ (@@ *)@@ [@@ 10000@@ ])@@ calloc@@ (@@ 10000@@ ,@@ 10000@@ ); for(i=0;i<=@@ m-1;i++) { for(j=0;j<=n-1;j++) { scanf("%d",*(p+i)+j); } } i=0; j=0; while(@@ a@@ <@@ n+@@ m-1) { while(i@@ !=@@ m@@ &&j@@ !=-1) { printf("%d\n",@@ *(*(p+i)@@ +j)); i++; j--; } a++; if(a@@ >@@ n-1) { j=@@ n-1; i=@@ a@@ -(@@ n-1); } elseif(a@@ <=@@ n-1) { j=@@ a; i=0; } } }  
c -1
h -1
voidf@@ (inta[],intn) { inti,j,t; for(i=0;i<n;i++) { for(j=0;j<n@@ -i-1;j++) { if(a[j]>a[j+1]) { t=a[j]; a[j]=a[j+1]; a[j+1]=t; } } } } voidmain() { intm,n,@@ a[100],b[100],@@ i; scanf("%d%d",&m,&n); for(i=0;i<m;i++) scanf("%d",&a[i]); for(i=0;i<n;i++) scanf("%d",&b[i]); f(a,@@ m); f(@@ b,@@ n); for(i=m;i<@@ m+n;i++) a[i]=b[i-@@ m]; for(i=0;i<m+@@ n-1;i++) printf("%d",a[i]); printf("%d",a[@@ m+@@ n-1]); }  
c -1
h -1
0

struct@@ bingren { charid[20]; int@@ nian@@ ; struct@@ bingren@@ *next; }; intmain() { intn,i; struct@@ bingren@@ *@@ p1,*@@ head; struct@@ bingren@@ temp; chara[@@ 20@@ ]={'\0'}; int@@ b=0; scanf("%d",&n); head=(struct@@ bingren@@ *)malloc(sizeof(struct@@ bingren@@ )); head@@ ->next=NULL; scanf("%s%d",@@ head->@@ id,&@@ head->@@ nian@@ ); p1=head; for(i=1;i<n;i++) { p1->next@@ =(struct@@ bingren@@ *)malloc(sizeof(struct@@ bingren@@ )); scanf("%s%d",@@ p1->next@@ ->@@ id,&@@ p1->next@@ ->@@ nian@@ ); p1->next@@ ->next=NULL; p1=p1->next; } p1=head; for(i=1;i<n;i++) { for(;@@ p1->next@@ !=NULL;@@ ) { if(@@ p1->next@@ ->@@ nian@@ >=60&&@@ p1->next@@ ->@@ nian@@ >@@ p1->@@ nian@@ ) { b=@@ p1->@@ nian@@ ; p1->@@ nian@@ =@@ p1->next@@ ->@@ nian@@ ; p1->next@@ ->@@ nian@@ =@@ b; strcpy(@@ a,@@ p1->@@ id); strcpy(@@ p1->@@ id,@@ p1->next@@ ->id); strcpy(@@ p1->next@@ ->id,@@ a); } p1=p1->next; } p1=head; } p1=head; for(;@@ p1@@ !=NULL;@@ ) { printf("%s\n",@@ p1->@@ id); p1=p1->next; } }  
c -1
h -1
inta[1000][1000]; intmain() { intn,i,j,@@ num; int@@ x1,y1,x2,y2@@ ; scanf("%d",&n); for(i=0;i<n;i++) { for(j=0;j<n;j++) scanf("%d",&a[i][j]); } for(i=1;i<n-1;i++) { for(j=1;j<@@ n-1;j++) { if(a@@ [i-1]@@ [j-1]@@ ==0&&@@ a[i-1]@@ [j]@@ ==0&&@@ a[i][j-1]@@ ==0) { x1=i; y1=j; } if(a@@ [i+1]@@ [j+1]@@ ==0&&@@ a[i+1@@ ][j]@@ ==0&&@@ a[i]@@ [j+1@@ ]==0) { x2=i; y2=j; } } num@@ =(@@ x2-x1@@ +1)*(@@ y2-y1@@ +1); } printf("%d",@@ num); return0; }  
c -1
h -1
0

intmain() { intn,k,@@ x[@@ 1000]={0},@@ i,j; scanf("%d%d",&n,&k); for(i=0;i<n;i++) { scanf("%d",&@@ x[i]); } for(i=0;i<n;i++) { for(j=i+1;j<n;j++) { if((x@@ [i]+@@ x[j]@@ )==@@ k) { printf("yes"); break; } } if((x@@ [i]+@@ x[j]@@ )==@@ k) break; } if((x@@ [i]+@@ x[j]@@ )!=@@ k) printf("no"); return0; }  
c -1
h -1
intmain() { chara[@@ 300],b[@@ 300@@ ],c[@@ 300]; inti,j; gets(a); gets(b); gets(c); for(i=1;@@ a[i-1]@@ !='\0';i++) { if(a@@ [i-1@@ ]==@@ b[0]) { for(j=1@@ ;@@ b@@ [j-1]@@ !='\0';j++) { if(a@@ [i-1@@ +j@@ -1]@@ !=@@ b@@ [j-1]) break; } if(b@@ [j-1]@@ !='\0') continue; else { for(j=i@@ ;@@ b@@ [j-i@@ ]@@ !='\0';j++) a@@ [j-1]=@@ c@@ [j-i@@ ]; } break; } else continue; } puts(@@ a); return0; }  
c -1
h -1
0

intmain() { intk,@@ x,@@ a[100@@ ][100@@ ]={@@ {@@ 0,@@ 0@@ }@@ },@@ m,n,@@ i,j,@@ sum=0; cin>>k; for(x@@ =1;@@ x@@ <=k;@@ x++) { cin>>m>>n; for(i=0;i<=@@ m-1;i++) { for(j=0;j<=n-1;j++) { cin>>a[i][j]; if(i@@ ==0||@@ j@@ ==0||i==@@ (m@@ -1)@@ ||j==@@ (n-1@@ )) { sum=sum+@@ a[i][j]; } } } cout<<sum<<endl; sum=0; } return0; }  
c -1
h -1
structstudent { intnum; int@@ yu@@ ; int@@ shu; intsum; }stu[100000]; intmain() { intn,i; scanf("%d",&n); for(i=0;i<n;i++){ scanf("%d%d%d",&stu[i].@@ num,@@ &@@ stu[i].@@ yu@@ ,&stu[i].@@ shu); stu[i].sum=stu[i].@@ shu@@ +stu[i].@@ yu@@ ; } intk,@@ e; for(k=0;k<@@ 3@@ ;k++){ for(i=@@ n-2@@ ;i@@ >=@@ k@@ ;i--){ if(stu[i].@@ sum<@@ stu[i+1].@@ sum){ e=@@ stu[i].@@ sum; stu[i].sum=@@ stu[i+1].@@ sum; stu[i+1].@@ sum=@@ e; e=@@ stu[i].@@ num; stu[i].@@ num=@@ stu[i+1].@@ num; stu[i+1].@@ num=@@ e; } } } for(i=0;i<@@ 3;i++){ printf("%d%d\n",stu[i].@@ num,@@ stu[i].@@ sum); } return0; }  
c -1
h -1
0

intmain() { intyear,month,day,@@ number; scanf("%d%d%d",&year,&month,&day); if(month==1) number=@@ day; elseif(month==@@ 2) number@@ =31+@@ day; else { if((year%4==0&&year%100!=0@@ )||@@ year%400==0) { if(month==3) number=@@ 60@@ +day; elseif(month==@@ 4) number=@@ 91@@ +day; elseif(month==@@ 5) number=@@ day+@@ 121@@ ; elseif(month==@@ 6) number=@@ day+@@ 152@@ ; elseif(month==@@ 7) number=@@ day+@@ 182@@ ; elseif(month==@@ 8) number=@@ day+@@ 213@@ ; elseif(month==@@ 9) number=@@ day+@@ 244@@ ; elseif(month==@@ 10) number=@@ day+@@ 274@@ ; elseif(month==@@ 11) number=@@ day+@@ 305@@ ; elseif(month==@@ 12) number=@@ day+@@ 335@@ ; } else { if(month==3) number=@@ 59@@ +day; elseif(month==@@ 4) number=@@ 90@@ +day; elseif(month==@@ 5) number=@@ day+@@ 120@@ ; elseif(month==@@ 6) number=@@ day+@@ 151@@ ; elseif(month==@@ 7) number=@@ day+@@ 181@@ ; elseif(month==@@ 8) number=@@ day+@@ 212@@ ; elseif(month==@@ 9) number=@@ day+@@ 243@@ ; elseif(month==@@ 10) number=@@ day+@@ 273@@ ; elseif(month==@@ 11) number=@@ day+@@ 304@@ ; elseif(month==@@ 12) number=@@ day+@@ 334@@ ; } } printf("%d\n",@@ number); return0; }  
c -1
h -1
voidmain() { inta[@@ 20000],b[@@ 20000],@@ i,j,k,@@ n,@@ x,@@ sum; scanf("%d",&n); k=0; sum=0; scanf("%d",&a[0]); for(i=1;i<n;i++) { k=0; scanf("%d",&x); for(j=0;j<@@ i@@ ;j++)@@ if(x==@@ a[j]@@ ){@@ k@@ =1;break;} if(k@@ ==0)@@ a[i@@ -@@ sum@@ ]=@@ x; else@@ sum++; } for(i=0;i<n-@@ sum@@ -1;i++)@@ printf("%d",a[i]); printf("%d",a[@@ n-@@ sum@@ -1]); }  
c -1
h -1
0

int@@ ROW@@ ,@@ COL@@ ,@@ ARRAY@@ [@@ MAXN@@ ][@@ MAXN@@ ]; intmain(){ cin>>@@ ROW@@ >>@@ COL@@ ; for(inti=0;i<@@ ROW@@ ;i++){ for(intj=0;j<@@ COL@@ ;j++)@@ cin>>@@ ARRAY@@ [i][j]; } int@@ iterx@@ =0,@@ itery@@ =0; for(int@@ iter@@ =1;@@ iter@@ <=@@ (@@ ROW@@ +@@ COL@@ -1)@@ ;@@ iter@@ ++){ if(@@ iter@@ <=@@ COL@@ ){ iterx@@ =0; itery@@ =@@ iter@@ -1; } else{ iterx@@ =@@ iter@@ -@@ COL@@ ; itery@@ =@@ COL@@ -1; } while(@@ iterx@@ <ROW@@ &&@@ itery@@ >=0@@ ){ cout<<@@ ARRAY@@ [@@ iterx@@ ][@@ itery@@ ]<<endl; iterx@@ ++; itery@@ --; } } return0; }  
c -1
h -1
main() { intk,i,j,@@ h@@ [@@ MAX@@ ],@@ a[@@ MAX@@ ],@@ n=1; scanf("%d",&k); for(i=0;i<k;i++) scanf("%d",&h[i]); a[k@@ -1]@@ =1; for(i=k-2;i>=0;i--) {@@ a[i]@@ =1; for(j=i+1;j<k;j++) { if(h@@ [j]<@@ h@@ [i]@@ ||@@ h@@ [j]==@@ h@@ [i]) {if((@@ a[j]@@ +1)@@ >@@ a[i]) a[i]=@@ a[j]@@ +1; } } } for(i=0;i<k;i++) if(a[i]>@@ n) n=@@ a[i]; printf("%d",n); }  
c -1
h -1
0

intmain() { ints@@ [100][100],@@ l,@@ h,@@ i,j,@@ hang@@ ,@@ lie@@ ; scanf("%d%d",&@@ lie@@ ,&@@ hang@@ ); for(l=0;l<@@ lie@@ ;l++) { for(h=0;h@@ <@@ hang@@ ;@@ h++) { scanf("%d",&@@ s[@@ h@@ ][l@@ ]); } } for(i=0;i<@@ hang@@ +@@ lie@@ -1;i++) { for(j=i@@ ;j>=0;j--) { if(j@@ >@@ hang@@ -1) { j=@@ hang@@ -1; } h@@ =j; l@@ =i@@ -@@ h; if(l@@ >@@ lie@@ -1) { break; } printf("%d\n",@@ s[@@ h@@ ][l@@ ]); } } return0; }  
c -1
h -1
intmain(){ intn,i,k,@@ l,@@ b[100@@ ],@@ n1@@ =0,@@ n2@@ =0,@@ ha@@ [100],@@ pp@@ [100],@@ x; chara[100@@ ][@@ 11@@ ],@@ yi@@ [100][10],@@ er@@ [100][10],@@ y@@ [11]; scanf("%d",&n); for(i=0;i<n;i++) { scanf("%s",@@ a[i]); scanf("%d",&b[i]); } for(i=0;i<n;i++) { if(b[i]@@ >=60) { n1@@ ++; } else { n2@@ ++; } } for(i=0,@@ k=0,@@ l@@ =0;i<n;i++) { if(b[i]@@ >=60) { ha@@ [k]=@@ b[i]; strcpy(@@ yi@@ [k],@@ a[i]); k++; } else { pp@@ [l@@ ]=b[i]; strcpy(@@ er@@ [l@@ ],@@ a[i]); l++; } } for(i=1;i<@@ n1@@ ;i++) { for(k=0;k<@@ n1@@ -i@@ ;k++) { if(@@ ha@@ [k]@@ <@@ ha@@ [k+1@@ ]) { x=@@ ha@@ [k]; ha@@ [k]=@@ ha@@ [k+1]; ha@@ [k+1]=@@ x; strcpy(@@ y,@@ yi@@ [k]); strcpy(@@ yi@@ [k],@@ yi@@ [k+1@@ ]); strcpy(@@ yi@@ [k+1@@ ],@@ y); } } } for(i=0;i<n1@@ ;i++){ printf("%s\n",@@ yi@@ [i]); } for(i=0;i<n2@@ ;i++){ printf("%s\n",@@ er@@ [i]); } return0; }  
c -1
h -1
0

structbook{ int@@ name@@ ; charwriter@@ [100]; structbook*next; }; inta[@@ 26]; structbook*@@ creat@@ (intn) { structbook*@@ p1,*p2,*@@ xhead@@ ; p1=(structbook@@ *)malloc(len); scanf("%d%s",&p1->@@ name,@@ p1->@@ writer); p2=p1; xhead@@ =p1; while(@@ n-1) { n--; p1=(structbook@@ *)malloc(len); scanf("%d%s",&p1->@@ name,@@ p1->@@ writer); p2->next=p1; p2=p1; } p2->next=NULL; return@@ xhead@@ ; } void@@ find@@ (struct@@ book@@ *head) { structbook@@ *p; inti; chars@@ [100]; p=head; while(p) { i=0; strcpy(s,@@ p->@@ writer); while(@@ s[i]@@ !='\0') {@@ a[@@ s[i]@@ -'A']++; i++; } p=p->next; } } voidprint(struct@@ book@@ *head@@ ,int@@ max) { structbook@@ *p; p=head; while(p) { if(@@ strchr@@ (p->@@ writer@@ ,@@ max@@ +'@@ A')@@ )@@ printf("%d\n",p->@@ name); p=p->next; } } voidmain() { inti,@@ max=0,@@ n; structbook*@@ head; memset(a,0,@@ sizeof(a)); scanf("%d",&n); head=creat(n); find@@ (head); for(i=0;i<26;i++) if(a[i]>@@ a[@@ max@@ ])@@ max=i; printf("%c\n",@@ max@@ +'A'@@ ); printf("%d\n",a[@@ max@@ ]); print(@@ head@@ ,max); }  
c -1
h -1
intmax@@ (inta[],intn) { int@@ z,@@ i,j,@@ t,@@ temp,@@ r; intb[@@ 25]; if(n@@ ==1)@@ z=1; elseif(n@@ ==0)@@ z=0; else { for(i=0,@@ r@@ =0;i<n;i++) { for(j=i+1@@ ,@@ t@@ =0;j<@@ n;j++) if(a[j]<=@@ a[i]) { b[t@@ ]=@@ a[j]; t++; } temp=@@ max@@ (b,@@ t)@@ +1; if(temp@@ >@@ r@@ )@@ r=@@ temp; } z=@@ r; } return@@ z; } intmain() { intk,@@ t,@@ i; int@@ bomb@@ [25]; scanf("%d\n",&@@ k); for(i=0;i<@@ k;i++)@@ scanf("%d",&@@ bomb@@ [i]); t=@@ max(@@ bomb@@ ,@@ k); printf("%d\n",t); }  
c -1
h -1
0

intmain() { charstr[256],@@ sub[256],@@ rep@@ [256]; scanf("%s%s%s",@@ str,@@ sub,@@ rep); intm,n,i,j,@@ e,@@ k; n=strlen(@@ str); m=strlen(@@ sub); for(i=0;i<n;i++) { e=0; for(j=0;j<m;j++) { if(str@@ [i+j]==@@ sub@@ [j]@@ )@@ e++; } if(e@@ ==@@ m@@ )break; } if(e@@ ==@@ m) { for(k=0;k<@@ i@@ ;k++)@@ printf("%c",str@@ [k]); printf("%s",@@ rep); for(k=i@@ +m@@ ;k<@@ n@@ ;k++)@@ printf("%c",str@@ [k]); }else{@@ printf("%s",@@ str@@ );} return0; }  
c -1
h -1
intmain(){ inta[@@ 20],@@ temp,@@ n=0,@@ i=1@@ ,j,@@ k; do{ do{ scanf("%d",&@@ temp); a[i]=@@ temp; i++; }while(@@ temp@@ !=0&&@@ temp@@ !=-1); for(j=1;j<@@ i@@ -2@@ ;j++){ for(k=j+1@@ ;k<=@@ i@@ -2@@ ;k++){ if((a[j]@@ /@@ a[k]==@@ 2@@ &&@@ a[j]@@ %@@ a[k]@@ ==0)||(@@ a[k]@@ /@@ a[j]==@@ 2@@ &&@@ a[k]@@ %@@ a[j]@@ ==0)@@ ){ n++; } } } if(temp@@ !=@@ -1){ printf("%d\n",n); } i=1; n=0; }while(@@ temp@@ !=-1); return0; }  
c -1
h -1
0

int@@ fun@@ (intn,int@@ m); intmain() { intn,@@ num; cin>>n; for(inti=0;i<n;i++) { cin>>num; cout<<@@ fun@@ (num,@@ 2)<<endl; } return0; } int@@ fun@@ (intn,int@@ m) { intsum@@ =1; double@@ t=@@ sqrt(@@ n); for(inti=@@ m@@ ;i<=@@ t;i++) if(n%i==0) sum+=@@ fun@@ (n/i,i); returnsum; }  
c -1
h -1
intmain() { inti,j,k,n,@@ p,@@ m,@@ c,@@ a[@@ 50@@ ],b[@@ 50]; scanf("%d",&n); p=0; for(i=0;i<n;i++)@@ scanf("%d",&a[i]); for(i=0;i<n;i++)@@ b[i]=1; for(i=1;i<n;i++) { for(j=0;j<i;j++) if(a[i]<=@@ a[j]) if(b[i]@@ <@@ b[j]@@ +1)@@ b[i]=b[j]+1; } for(i=0;i<n;i++) if(p@@ <@@ b[i]@@ )@@ p=@@ b[i]; printf("%d",@@ p); }  
c -1
h -1
0

intmain() { inta,@@ m,@@ day,@@ i,@@ x; cin>>a>>@@ m>>@@ day; switch(m) { case1:@@ i@@ =0;@@ break; case2:@@ i=@@ 31;break; case3:@@ i@@ =31+28@@ ;break; case4:@@ i@@ =31+28@@ +31;break; case5:@@ i@@ =31+28@@ +31+30@@ ;break; case6:@@ i@@ =31+28@@ +31+30@@ +31;break; case7:@@ i@@ =31+28@@ +31+30+31+30@@ ;break; case8:@@ i@@ =31+28@@ +31+30+31+30@@ +31;break; case9:@@ i@@ =31+28@@ +31+30+31+30+31+@@ 31;break; case10:@@ i@@ =31+28@@ +31+30+31+30+31+31+30@@ ;break; case11:@@ i@@ =31+28@@ +31+30+31+30+31+31+30@@ +31;break; case12:@@ i@@ =31+28@@ +31+30+31+30+31+31+30+31+30@@ ;break; default@@ :@@ cout<<"@@ error@@ "@@ <<endl; } if((@@ a%4==0&&a%100!=0@@ )||(@@ a%400==0)) { if((@@ m@@ !=1@@ )&&(@@ m@@ !=@@ 2@@ )) x@@ =i+@@ day@@ +1; else x@@ =i@@ +day; } else x@@ =i@@ +day; cout<<@@ x@@ <<endl; return0; }  
c -1
h -1
structstu { int@@ no; intchi; intmath; intsum; structstu*next; }; voidmain() { structstu@@ a,*@@ head,*@@ p,*@@ tail@@ ,*@@ q; intk,i,@@ m1,@@ m2@@ ,@@ m3@@ ,@@ n1,n2,@@ n3@@ ,@@ temp1@@ ,@@ temp2@@ ; head=NULL; scanf("%d",&k); for(i=0;i<k;i++) { p=(struct@@ stu@@ *)malloc(LEN); scanf("%d%d%d",&@@ p->@@ no@@ ,&p->@@ chi@@ ,&p->@@ math); p->@@ sum=(@@ p->@@ chi@@ +p->@@ math); if(head@@ ==NULL) head=@@ tail@@ =p; else { tail@@ ->next=p; tail@@ =p; tail@@ ->next@@ =&@@ a; } } a.@@ next@@ =NULL; p=head; for(q=@@ p->next@@ ;q@@ ->next@@ !=NULL;@@ q=q@@ ->next) { if(p->@@ sum<@@ q->@@ sum) { temp1@@ =@@ q->@@ sum; q->@@ sum=@@ p->@@ sum; p->@@ sum=@@ temp1@@ ; temp2@@ =@@ q->@@ no; q->@@ no@@ =p->@@ no; p->@@ no=@@ temp2@@ ; } } m1@@ =p->@@ no; n1@@ =p->@@ sum; head=@@ p@@ ->next; p=head; for(q=@@ p->next@@ ;q@@ ->next@@ !=NULL;@@ q=q@@ ->next) { if(p->@@ sum<@@ q->@@ sum) { temp1@@ =@@ q->@@ sum; q->@@ sum=@@ p->@@ sum; p->@@ sum=@@ temp1@@ ; temp2@@ =@@ q->@@ no; q->@@ no@@ =p->@@ no; p->@@ no=@@ temp2@@ ; } } m2@@ =p->@@ no; n2@@ =p->@@ sum; head=@@ p@@ ->next; p=head; for(q=@@ p->next@@ ;q@@ ->next@@ !=NULL;@@ q=q@@ ->next) { if(p->@@ sum<@@ q->@@ sum) { temp1@@ =@@ q->@@ sum; q->@@ sum=@@ p->@@ sum; p->@@ sum=@@ temp1@@ ; temp2@@ =@@ q->@@ no; q->@@ no@@ =p->@@ no; p->@@ no=@@ temp2@@ ; } } m3@@ =p->@@ no; n3@@ =p->@@ sum; printf("%d%d\n%d%d\n%d%d\n",@@ m1,@@ n1,@@ m2@@ ,@@ n2,@@ m3@@ ,@@ n3@@ ); }  
c -1
h -1
0

intmain() { introw,col; cin>>row>>col; intm@@ =1,@@ n=1; int@@ h,@@ g; inta[100][100]; for(inti=1;i<=@@ row;i++) for(intj=1;j<=@@ col;j++) cin>>a[i][j]; while(m@@ <=row@@ ) { h=@@ m;@@ g=@@ n; while(@@ h@@ <=row@@ &&@@ g@@ >=@@ 1) { cout<<a[@@ h@@ ][@@ g@@ ]<<endl; h@@ ++;@@ g@@ --; } if(n@@ <col@@ )@@ n++; else@@ m++; } return0; }  
c -1
h -1
intmain(intargc,char*argv[]) { int@@ a@@ =1,@@ i=0,@@ j,k,@@ n=0,@@ zs@@ =0; intnum[@@ 15]; while(@@ a@@ !=@@ -1){ scanf("%d",&a); if(a@@ !=0){ num[i]=@@ a; n++; i++; } else{ for(j=0;j<n;j++){ for(k=0;k<n;k++){ if(num@@ [j]==2*@@ num@@ [k]@@ ){ zs@@ ++;@@ }}} printf("%d\n",@@ zs@@ ); i=0; n=0; zs@@ =0;} } return0; }  
c -1
h -1
0

void@@ get@@ (intm,int@@ n); void@@ swap@@ (intm,int@@ n); void@@ put@@ (intm,int@@ n); inta[@@ 1001@@ ],b[@@ 1001]; voidmain() { intm,n; scanf("%d%d",&m,&n); get@@ (@@ m,n); swap(@@ m,n); put@@ (@@ m,n); } void@@ get@@ (intm,int@@ n) { inti; for(i=0;i<m;i++) scanf("%d",&a[i]); for(i=0;i<n;i++) scanf("%d",&b[i]); } void@@ swap@@ (intm,int@@ n) { intj,@@ k,@@ c; for(j=0;j<m-1;j++) for(k=0;k<@@ m-1@@ -j@@ ;k++) if(a[k]@@ >@@ a[k@@ +1@@ ]){ c=@@ a[k]; a[k]=a[k@@ +1]; a[k@@ +1]=@@ c; } for(j=0;j<n-1;j++) for(k=0;k<@@ n-1@@ -j@@ ;k++) if(@@ b[k@@ ]>@@ b[k@@ +1@@ ]){ c=@@ b[k@@ ]; b[k]=@@ b[k@@ +1]; b[k@@ +1]=@@ c; } } void@@ put@@ (intm,int@@ n) { int@@ l; for(l=0;l<@@ m;@@ l++) printf("%d",@@ a[l@@ ]); for(l=0;l<n;@@ l++){ if(l@@ ==@@ n-1) printf("%d",@@ b[l@@ ]); else printf("%d",@@ b[l@@ ]); } }  
c -1
h -1
intmain(intargc,char*argv[]) { inta,b,c,@@ n; scanf("%d%d%d",&a,&b,&c); if(a%@@ 4!=0@@ ||(@@ a%@@ 100==0&&@@ a%@@ 400!=0)) { if(b@@ <@@ 2) n=@@ c; elseif(@@ b<@@ 3) n=31+@@ c; elseif(@@ b<@@ 4) n=@@ 59@@ +c; elseif(@@ b<@@ 5) n=@@ 90@@ +c; elseif(@@ b<@@ 6) n=@@ 120@@ +c; elseif(@@ b<@@ 7) n=@@ 151@@ +c; elseif(@@ b<@@ 8) n=@@ 181@@ +c; elseif(@@ b<@@ 9) n=@@ 212@@ +c; elseif(@@ b<@@ 10) n=@@ 243@@ +c; elseif(@@ b<@@ 11) n=@@ 273@@ +c; elseif(@@ b<@@ 12) n=@@ 304@@ +c; else n=@@ 334@@ +c; } else { if(b@@ <@@ 2) n=@@ c; elseif(@@ b<@@ 3) n=31+@@ c; elseif(@@ b<@@ 4) n=@@ 60@@ +c; elseif(@@ b<@@ 5) n=@@ 91@@ +c; elseif(@@ b<@@ 6) n=@@ 121@@ +c; elseif(@@ b<@@ 7) n=@@ 152@@ +c; elseif(@@ b<@@ 8) n=@@ 182@@ +c; elseif(@@ b<@@ 9) n=@@ 213@@ +c; elseif(@@ b<@@ 10) n=@@ 244@@ +c; elseif(@@ b<@@ 11) n=@@ 274@@ +c; elseif(@@ b<@@ 12) n=@@ 305@@ +c; else n=@@ 335@@ +c; } printf("%d\n",n); return0; }  
c -1
h -1
0

int@@ reek@@ (inti,int@@ j) { intk,@@ g=0; for(k=j@@ ;k<@@ i;k++) { if((i@@ %@@ k@@ ==0)&&(@@ k@@ !=1@@ )) { g@@ =1; break; } elsecontinue; } if(g@@ ==0)@@ return1; else { intnum@@ =1; for(k=j@@ ;k<=@@ sqrt@@ (i@@ )@@ ;k++) { if((i@@ %@@ k@@ ==0)&&(@@ k@@ !=1@@ )) num+=@@ reek@@ (i@@ /@@ k,@@ k); elsecontinue; } returnnum; } } intmain() { intn,i,@@ a[1000]; cin>>n; for(i=0;i<n;i++) { cin>>@@ a[@@ n]; cout<<@@ reek@@ (@@ a[n@@ ],@@ 1@@ )<<endl; } return0; }  
c -1
h -1
intmain() { intm,n; cin>>m>>n; inta[@@ m@@ ][n]; for(inti=0;i<m;i++) for(intj=0;j<n;j++) cin>>a[i][j]; intsum=0; while(1) { if(sum@@ ==@@ m+@@ n-1@@ )break; elseif(@@ sum<=@@ n-1) { for(inti=0;i<=@@ sum@@ ;i++) { if(i>@@ m@@ -1)break; cout<<a[i]@@ [@@ sum@@ -i@@ ]<<endl; } sum++; } else { for(inti=@@ sum@@ +1@@ -n@@ ;i<=@@ sum@@ ;i++) { if(i>@@ m@@ -1)break; cout<<a[i]@@ [@@ sum@@ -i@@ ]<<endl; } sum++; } } return0; }  
c -1
h -1
0

intmain(intargc,char*argv[]) { intn; intp; int@@ q; inti,j,k; scanf("%d@@ "@@ ,&@@ n); for(i=0;i<n;i++) { intsum=0; intnum; scanf("%d@@ "@@ ,&@@ p); scanf("%d@@ "@@ ,&@@ q); if(p@@ ==1&&@@ q@@ ==1) { scanf("%d@@ "@@ ,&@@ num); printf("%d@@ "@@ ,@@ num); break; } for(j=0;j<@@ q@@ ;j++) { scanf("%d@@ "@@ ,&@@ num); sum+=@@ num; } for(j=1;j<@@ p@@ -1;j++) { for(k=0;k<@@ q@@ ;k++) { scanf("%d@@ "@@ ,&@@ num); if(k@@ ==0||@@ k==@@ q@@ -1) { sum+=@@ num; } } } for(j=0;j<@@ q@@ ;j++) { scanf("%d@@ "@@ ,&@@ num); sum+=@@ num; } printf("%d@@ \n@@ "@@ ,@@ sum); } return0; }  
c -1
h -1
intmain(){ inta[100][100]; intn; scanf("%d",&n); inti,k,@@ s; s=0; int@@ e,@@ b,@@ c,d; for(i=0;i<n;i++){ for(k=0;k<n;k++){ scanf("%d",&(@@ a[i][k]@@ )); if(a[i]@@ [k]@@ ==0){ s=s+1; } } } for(i=0;i<n;i++){ for(k=0;k<n;k++){ if(a[i]@@ [k]@@ ==0){ e@@ =i; b=@@ k; break; } } } for(k=@@ b@@ ;k<@@ n;k++){ if(a[@@ e@@ ][k@@ ]==255@@ ){ break; } } c=@@ k@@ -1; d@@ =(@@ s@@ -2@@ *(@@ c@@ -b@@ +1)@@ )@@ /2; int@@ S@@ ; S@@ =@@ d@@ *(@@ c@@ -b@@ -1); printf("%d",@@ S@@ ); return0; }  
c -1
h -1
0

intmain() { inti,@@ m,n,@@ x=0; double@@ p,@@ y; chara[500],b[500]; scanf("%lf\n",&@@ p); gets(a); gets(b); m=strlen(a); n@@ =strlen(b); if(m!=@@ n) { printf("error"); return0; } else { for(i=0;i<m;i++) { if(a[i]!='@@ A'&&a[i]!='T'&&a[i]!='G'&&a[i]!='@@ C'||@@ b[i]!='A'&&b[i]!='T'&&b[i]!='G'&&b[i]!='@@ C') { printf("error"); return0; } else { if(a[i]==b[i]) { x++; } } } y@@ =(double)@@ x/@@ m; if(y@@ >@@ p) { printf("yes"); } else { printf("no"); } return0; } }  
c -1
h -1
int@@ xxx@@ (int@@ high@@ ,int@@ j); intmax(int@@ b,int@@ c) { if(b@@ >=@@ c)@@ return@@ b; else@@ return@@ c; } intn; intx@@ [26]; intmain() { inti; intm,@@ k; scanf("%d",&n); inth@@ [n]; for(i=0;i<n;i++) { scanf("%d",&h[i]); x@@ [i]=@@ h@@ [i]; } for(i=n@@ ;i<@@ 26@@ ;i++)@@ x@@ [i]=@@ 999999@@ ; int@@ fly@@ ; fly@@ =@@ xxx@@ (@@ 999999@@ ,@@ 0); printf("%d",@@ fly@@ ); } int@@ xxx@@ (int@@ high@@ ,int@@ j) { if(j==@@ n-1) { if(@@ high@@ >=@@ x[j]@@ )@@ return1; else@@ return0; } else { if(@@ high@@ <@@ x[j]@@ )@@ return@@ xxx@@ (@@ high@@ ,j@@ +1); else@@ return@@ max(@@ 1@@ +@@ xxx@@ (x@@ [j]@@ ,j@@ +1)@@ ,@@ xxx@@ (@@ high@@ ,j@@ +1@@ )); } }  
c -1
h -1
0

intmain(){ introw,col,@@ i,j,@@ temp_i@@ ,@@ a[100][100]; scanf("%d%d",&@@ row,@@ &@@ col); for(i=0;i<row;i++) for(j=0;j<col;j++) scanf("%d",&a[i][j]); for(j=0;j<col;j++){ for(i=0;i<=@@ j@@ &&i@@ <@@ row;i++) printf("%d\n",a[i]@@ [j-i@@ ]); } for(i=1;i<@@ row;i++){ temp_i@@ =i; for(j=col-1@@ ;j>=0@@ &&@@ temp_i@@ <row@@ ;j--){ printf("%d\n",a[@@ temp_i@@ ][j]); temp_i@@ ++; } } return0; }  
c -1
h -1
int@@ x1@@ =0,@@ x2@@ =0; int@@ y1@@ =0,@@ y2@@ =0; int@@ tag@@ =0; intsum=0; intmain() { intn,i,j; inta[100][100]; cin>>n; for(i=0;i<n;i++) for(j=0;j<n;j++) cin>>a[i][j]; for(i=0;i<n;i++) { for(j=0;j<n;j++) { if(a[i][j]==0) { x1@@ =j@@ ;@@ y1@@ =i; while(@@ !@@ a[@@ y1@@ ]@@ [j]) j++; x2@@ =j@@ -1; while(@@ !@@ a[i][@@ x1@@ ]) i++; y2@@ =i-1; tag@@ =1; break; } } if(tag@@ )break; } if(!@@ tag@@ ) { cout<<@@ 0@@ <<endl; return0; } sum=(@@ x2-x1-1)*(y2-y1-1); cout<<sum<<endl; return0; }  
c -1
h -1
0

voidout@@ (int,int); int@@ t=1; intmain() { intn=0; inti=0; double@@ sum=0; cin>>n; for(i=1;i<=n;i++) { cin>>@@ sum; out@@ (@@ sum,@@ 2@@ .0@@ ); cout<<t@@ <<endl; t=1; } cin>>@@ i; return0; } voidout@@ (int@@ sum@@ ,int@@ q) { intnum=0; double@@ m=@@ sum; num=@@ sqrt(@@ m); if(sum@@ %@@ q@@ ==0&&@@ q@@ <=@@ num) { t++; out@@ (@@ sum/@@ q,@@ q); out@@ (@@ sum,@@ q@@ +1); } if(sum@@ %@@ q@@ !=0&&@@ q@@ <=@@ num) out@@ (@@ sum,@@ q@@ +1); }  
c -1
h -1
intmain() { chars[256],@@ a[@@ 256],b[@@ 256]; int@@ l1,@@ i,j,@@ n; int@@ flag; scanf("%s",s); scanf("%s",a); scanf("%s",b); l1@@ =strlen(a); for(i=0;s[i]@@ !='\0';i++) { if(s[i]==@@ a[0]) { flag=1; for(j=i+1;j<@@ (i@@ +@@ l1@@ );j++) { if(s@@ [j]!=@@ a@@ [j-i@@ ]) flag=0; else flag=1; } if(flag==1) { for(n=0;n@@ <i@@ ;n++) printf("%c",@@ s[@@ n@@ ]); printf("%s",@@ b); for(n@@ =i+@@ l1@@ ;@@ s[@@ n@@ ]!='\0'@@ ;n++) printf("%c",@@ s[@@ n@@ ]); return0; } } } printf("%s",s); return0; }  
c -1
h -1
0

intb,@@ j,@@ f[@@ 1010@@ ]; void@@ factorization@@ (intx) { int@@ now@@ ,i; for(i=2;i<=@@ x;i++) { if(x@@ %i==0&&@@ i>=@@ f@@ [j]) { f[@@ ++@@ j@@ ]=i; now@@ =@@ x/@@ i; if(@@ now@@ ==1) { b++; } else { factorization@@ (@@ now@@ ); } j--; } } return; } intmain() { intn,i,@@ num; cin>>n; for(i=0;i<n;i++) { b=0; j=0; memset(@@ f,@@ 0,sizeof(@@ f@@ )); cin>>num; factorization@@ (@@ num); cout<<@@ b@@ <<endl; } return0; }  
c -1
h -1
intnum; voidf@@ (intn,int@@ i); main() { inti,j,k,n,@@ order@@ ,@@ top@@ ; for(@@ scanf("%d",&@@ order@@ );@@ order@@ >=1@@ ;@@ order@@ --) { scanf("%d",&n); num=0; top@@ =@@ (int)sqrt(@@ n); for(i=1;i<=@@ top@@ ;i++) { if(n%i==0) { num++; f(@@ n@@ /i,i); } } printf("%d\n",num); } } voidf@@ (intn,int@@ btm@@ ) { if(@@ btm@@ ==1)@@ return; int@@ top@@ ,i; top@@ =@@ (int)sqrt(@@ n); if(@@ top@@ >=@@ btm@@ ) { for(i=@@ btm@@ ;i<=@@ top@@ ;i++) { if(n%i==0) { num++; f(@@ n@@ /i,i); } } } }  
c -1
h -1
1


intmain() { inta[@@ 20000@@ ]={0}; intb[@@ 20000@@ ]={0}; intn,i,j,@@ t,@@ m; cin>>n; for(m=0;m@@ <=@@ n-1@@ ;m++) { cin>>@@ a[m@@ ]; } for(i=0;i<=n-1;i++) { for(j=0;j<i;j++) { if(a[j]==a[i]) b[i]=1; } } cout<<a[0]; for(t@@ =1;t@@ <=@@ n-1@@ ;t++) { if(@@ b[t@@ ]==0) cout<<""<<@@ a[t@@ ]; } return0; }  
c -1
h -1
structstudent { intn; inta; intb; int@@ aver@@ ; }stu[100000]; voidmain() { intm,i,j,@@ f,@@ t; scanf("%d",&m); for(i=0;i<m;i++) { scanf("%d%d%d",&stu[i].@@ n,&@@ stu[i].@@ a@@ ,&stu[i].@@ b); } for(i=0;i<m;i++) { stu[i].@@ aver@@ =stu[i].@@ a+@@ stu[i].@@ b; } for(i=0;i<3;i++) for(j=@@ m-1@@ -i@@ ;j>=0;j--) { if(stu[j].@@ aver@@ <@@ stu[j+1].@@ aver@@ ) { f=@@ stu[j].@@ aver@@ ; stu[j].@@ aver@@ =stu@@ [j+1].@@ aver@@ ; stu[j+1].@@ aver@@ =@@ f; t=@@ stu[j].@@ n; stu[j].@@ n=@@ stu[j+1].@@ n; stu[j+1].@@ n=@@ t; } } for(i=0;i<3;i++) { printf("%d%d\n",stu[i].@@ n,@@ stu[i].@@ aver@@ ); } }  
c -1
h -1
0

intf@@ (intm,int@@ n) { inti,@@ count=0,@@ flag=0; if(m==1) return1; for(i=n@@ ;i@@ >1@@ ;i--) { if(m@@ %i==0) { count+=@@ f(@@ m@@ /i,i); flag=1; } } if(flag) returncount; else return0; } intmain() { intn,k,@@ m,@@ temp; cin>>n; for(k=0;k<n;k++) { cin>>m; cout<<@@ f(@@ m,@@ m@@ )<<endl; } return0; }  
c -1
h -1
intmain() { inta[@@ 101][@@ 16@@ ],b[100@@ ]={0},@@ c[@@ 101],@@ k,i,j,@@ l,@@ m; for(i=1;@@ 1@@ ;i++) { scanf("%d",&a[i]@@ [1]); if(a[i]@@ [1@@ ]==@@ (@@ -1)) { i--; break; } else for(j=2@@ ;@@ 1@@ ;j++) { scanf("%d",&a[i][j]); if(a[i][j]==0) { j=j-1; break; } } c[i]=@@ j; } for(k=1;k<=@@ i;k++) { for(l=1;l@@ <=@@ c@@ [k]@@ ;l++) { for(m=1;m@@ <=@@ c@@ [k]@@ ;m++) { if(a[k@@ ][m@@ ]@@ /@@ a[k@@ ][l@@ ]==@@ 2@@ &&@@ a[k@@ ][m@@ ]@@ %@@ a[k@@ ][l@@ ]==0) b[k]=@@ b[k@@ ]+1; else b[k]=@@ b[k@@ ]; } } printf("%d\n",@@ b[k@@ ]); } return0; }  
c -1
h -1
0

intf@@ (intn,int@@ min@@ ){ inti,@@ result=1; if(@@ min@@ >n) return0; for(i=min@@ ;i<@@ n;i++){ if(n@@ %i==0){ result+=@@ f(@@ n@@ /i,i); } } returnresult; } intmain(){ intn,a,@@ i,@@ t; scanf("%d",&n); for(i=0;i<n;i++){ scanf("%d",&a); t=@@ f(a,@@ 2); if(i<@@ n-1) printf("%d\n",t); else printf("%d",t); } return0; }  
c -1
h -1
intmain() { inti,j,@@ k=0,@@ l,@@ m,n; double@@ s,@@ z; chara[500],b[500]; scanf("%lf",&@@ s); scanf("%s",a); scanf("%s",b); l@@ =strlen(a); j@@ =strlen(b); if(l@@ !=@@ j) { printf("error\n"); return0; } for(i=0;i<l;i++) { if((a[i]!='@@ A'&&a[i]!='T'&&a[i]!='C'&&a[i]!='G')||(b[i]!='A'&&b[i]!='T'&&b[i]!='C'&&b[i]!='@@ G')) { printf("error\n"); return0; } if(a[i]==b[i]) { k++; } } z@@ =(double)@@ k/@@ l; if(z@@ >=@@ s) { printf("yes\n"); } else { printf("no\n"); } return0; }  
c -1
h -1
0

int@@ yinshu@@ (int@@ be@@ ,int@@ by@@ ) { inti,@@ sum=0; for(i=@@ by@@ ;i@@ *@@ i<=@@ be@@ ;i++) { if(@@ be@@ %i==0) { sum=sum@@ +1@@ +@@ yinshu@@ (@@ be@@ /i,i); } } returnsum; } intmain() { intn; cin>>n; while(n--) { intnum,@@ sign@@ ; cin>>num; for(intj=@@ num@@ ;j>@@ 1@@ ;j--) { if(num@@ %j==0) sign@@ =j; } cout<<@@ yinshu@@ (num,@@ sign@@ )@@ +1<<endl; } return0; }  
c -1
h -1
intk; inth@@ [30]; int@@ r@@ [30]; intmain() { cin>>k; inti,j; for(i=0;i<k;i++) cin>>@@ h@@ [i]; r@@ [k-1]@@ =1; for(i=k-2;i>=0;i--) { if(r@@ [i]>=@@ r@@ [i+1@@ ]){ cout<<"@@ first@@ way@@ taken@@ "<<endl; r@@ [i]=@@ r@@ [i+1@@ ]+1; } else { intmax=0; for(j=i+1;j<k;j++) { if(h@@ [j]<=@@ h@@ [i]@@ &&@@ r@@ [j]@@ >max) max=@@ r@@ [j]; } r@@ [i]=@@ max+1; } } int@@ ans=0; for(i=0;i<k;i++) { if(r@@ [i]>@@ ans@@ )@@ ans=@@ r@@ [i]; } cout<<@@ ans; }  
c -1
h -1
0

voidmain() { voidf@@ (intx,int@@ y); intm,n; scanf("%d%d",&m,&n); f(@@ m,n); } voidf@@ (intx,inty) { void@@ h@@ (intarray[],int@@ n); inti,@@ c; inta[@@ 20@@ ],b[@@ 20]; for(i=0;i<x;i++) scanf("%d",&a[i]); for(i=0;i<y;i++) scanf("%d",&b[i]); h@@ (a,@@ x); printf(""); h@@ (b,@@ y); printf("\n"); } void@@ h@@ (intarray[],int@@ n) { inti,j,t; for(i=0;i<n-1;i++) for(j=0;j<n@@ -i-1;j++) if(array@@ [j]>@@ array@@ [j+1]) { t=@@ array@@ [j]; array@@ [j]=@@ array@@ [j+1]; array@@ [j+1]=t; } printf("%d",@@ array@@ [0]); for(i=1;i<n;i++) printf("%d",@@ array@@ [i]); }  
c -1
h -1
int@@ cal@@ (int*p,int@@ N@@ ,int@@ M@@ ){ inti,@@ max,@@ sub@@ ; max=0; if(M@@ ==0){ return1; } for(i=@@ N@@ +1;i<=@@ N@@ +@@ M@@ ;i++){ if(@@ *(p+@@ N@@ )@@ >=@@ *(p+i)@@ ){ sub@@ =@@ cal@@ (p,@@ i,@@ N@@ +@@ M@@ -i@@ ); if(@@ sub@@ >=@@ max@@ ){ max=@@ sub@@ ; } } } return@@ max+1; } intmain() { intk,@@ i; scanf("%d\n",&@@ k); int@@ height@@ [26]; height@@ [0]=@@ 10000000@@ ; scanf("%d",&@@ height@@ [1]); for(i=1;i<=@@ k@@ -1;i++){ scanf("%d",&@@ height@@ [i+1]); } printf("%d",@@ cal@@ (@@ height@@ ,@@ 0,@@ k@@ +1)@@ -2); return0; }  
c -1
h -1
0

struct@@ sick {@@ charname@@ [10]; intage; }; intmain() { intn,i,@@ count=0,@@ j; struct@@ sick@@ s@@ [100],@@ a[100],@@ t; charb[@@ 3@@ ]; gets(b); n=@@ atoi@@ (@@ b); for(i=0;i<n;i++) scanf("%s%d",@@ s[i].@@ name@@ ,&@@ s@@ [i].age); if(n==1) printf("%s",@@ s@@ [0].@@ name); else {@@ for(i=0;i<n;i++) if(s@@ [i].age>=60) {@@ a[@@ count@@ ]=@@ s[i]; count++; } for(i=0;i<@@ count@@ -1;i++) for(j=0;j<@@ count@@ -1-i;j++) if(a[j]@@ .@@ age@@ <@@ a[j+1@@ ].age) {t=@@ a[j];a[j]=a[j+1];@@ a[j+1]=@@ t;} for(i=0;i<@@ count@@ ;i++) printf("%s\n",@@ a[i].@@ name); for(i=0;i<n;i++) if(s@@ [i].age<60) printf("%s\n",@@ s[i].@@ name); } return0; }  
c -1
h -1
intmain(intargc,char*argv[]) { intn,i,j,@@ m,@@ b,@@ p,q; scanf("%d",&n); inta[@@ 1000][1000],@@ s; for(i=0;i<n;i++) { for(j=0;j<n;j++) { scanf("%d",&a[i][j]); } } for(i=0;i<@@ (n@@ /2@@ );i++) { for(j=0;j<@@ (n@@ /2@@ );j++) { if(a[i][j]==0) { m=i; b=j; break; } } if(a[i][j]==0) {break;} } for(i=0;i<n;i++) { for(j=0;j<n;j++) { if(a[i][j]==0&&@@ i@@ >@@ m@@ &&j@@ >@@ b) { p=i; q@@ =j; } } } s=(@@ p@@ -m@@ +1)*(@@ q@@ -b@@ +1)@@ -(@@ 2@@ *(p+@@ q@@ -m@@ -b@@ )); printf("%d\n",s); return0; }  
c -1
h -1
0

intmain() { inta[@@ 1010@@ ]; intk,i,j,@@ n; scanf("%d%d",&n,&k); for(i=0;i<=n-1;i++) scanf("%d",&a[i]); for(i=0;i<=n-1;i++) { for(j=0;j<=n-1;j++) { if(a[i]+a[j]==@@ k){ printf("yes");@@ return0;} } } printf("no"); return0; }  
c -1
h -1
intmain() { inti,@@ year,@@ month,@@ day,@@ sum=0,@@ months@@ [50@@ ],@@ msum@@ =0; months@@ [1]=@@ 31; months@@ [2]; months@@ [3@@ ]=31; months@@ [4@@ ]=30; months@@ [5@@ ]=31; months@@ [@@ 6@@ ]=30; months@@ [@@ 7@@ ]=31; months@@ [@@ 8@@ ]=31; months@@ [@@ 9@@ ]=30; months@@ [10@@ ]=31; months@@ [11@@ ]=30; months@@ [12@@ ]=31; scanf("%d%d%d",&year,&month,&day); if(year%@@ 4==0) { if(year%@@ 100!=0) { if(year%@@ 400==0) { months@@ [2]=@@ 29; } else { months@@ [2]=@@ 28; } } else { if(year%@@ 400==0) { months@@ [2]=@@ 29; } else { months@@ [2]=@@ 28; } } } else { months@@ [2]=@@ 28; } for(i=1;i<month;i++) { msum@@ =@@ msum@@ +@@ months@@ [i]; } sum=@@ msum@@ +day; printf("%d",sum); return0; }  
c -1
h -1
0

intmain() { intk; intm,n,i,j,@@ l,@@ sum1@@ =0,@@ sum=0; inta[100][100]; cin>>k; for(l=1;l@@ <=k;@@ l++) { cin>>m>>n; int(*p)@@ [100]; p=a; for(i=0;i<m;i++) for(j=0;j<n;j++) { cin>>@@ *(*(p+i)+j); sum=sum+*(@@ *(p+i)+j); } for(i=1;i<m-1;i++) for(j=1;j<@@ n-1;j++) { sum1@@ =@@ sum1@@ +*(@@ *(p+i)+j); } sum=sum-@@ sum1@@ ; cout<<sum<<endl; sum=@@ sum1@@ =0; } }  
c -1
h -1
intmain() { intn,i,j,@@ temp; char@@ t@@ [10]; scanf("%d",&n); int@@ y[@@ n]; charid@@ [n@@ ][10]; for(i=0;i<n;i++) scanf("%s%d",@@ id[i],&@@ y@@ [i]); for(i=1;i<n;i++) { if(y@@ [i]@@ >=60) {@@ for(j=i@@ ;j>0;j--) if(y@@ [j-1]@@ <@@ y@@ [j]) { temp=@@ y@@ [j]; y@@ [j]=@@ y@@ [j-1]; y@@ [j-1]=@@ temp; strcpy(@@ t,@@ id@@ [j]); strcpy(id@@ [j],@@ id@@ [j-1]); strcpy(id@@ [j-1@@ ],@@ t); } } } for(i=0;i<n;i++) printf("%s\n",@@ id[i]); }  
c -1
h -1
0

voidmain() { intyear,@@ mounth@@ ,@@ day,@@ count=0,@@ t=0; scanf("%d%d%d",&year,&@@ mounth@@ ,&@@ day); if(year%@@ 400==0||(@@ year%4==0&&year%100!=0@@ )) { count@@ =1; } else@@ count=0; if(count@@ ==1) { switch(@@ mounth@@ ) { case1:@@ t=@@ day;break; case2:@@ t@@ =31+@@ day;break; case3:@@ t=@@ 60@@ +day;break; case4:@@ t=@@ 91@@ +day;break; case5:@@ t=@@ 121@@ +day;break; case6:@@ t=@@ 152@@ +day;break; case7:@@ t=@@ 182@@ +day;break; case8:@@ t=@@ 213@@ +day;break; case9:@@ t=@@ 244@@ +day;break; case10:@@ t=@@ 274@@ +day;break; case11:@@ t=@@ 305@@ +day;break; case12:@@ t=@@ 335@@ +day;break; } } if(count@@ ==0) { switch(@@ mounth@@ ) { case1:@@ t=@@ day;break; case2:@@ t@@ =31+@@ day;break; case3:@@ t=@@ 59@@ +day;break; case4:@@ t=@@ 90@@ +day;break; case5:@@ t=@@ 120@@ +day;break; case6:@@ t=@@ 151@@ +day;break; case7:@@ t=@@ 181@@ +day;break; case8:@@ t=@@ 212@@ +day;break; case9:@@ t=@@ 243@@ +day;break; case10:@@ t=@@ 273@@ +day;break; case11:@@ t=@@ 304@@ +day;break; case12:@@ t=@@ 334@@ +day;break; } } printf("%d",t); }  
c -1
h -1
intmain() { intt,@@ i,j,k,@@ count; int@@ group@@ [@@ 15]; scanf("%d",&t); do { i=0; do { group@@ [i]=@@ t; scanf("%d",&t); i++; } while(t@@ !=0); printf("\n"); count=0; for(j=i-1;j>=0;j--) { for(k=0;k<i;k++) { if((@@ double)@@ group@@ [k]@@ /2@@ ==@@ group@@ [j]) { count++; } elseif((@@ double)@@ group@@ [j]@@ /2@@ ==@@ group@@ [k]) { count++; } } } printf("%d\n",@@ count@@ /2@@ ); scanf("%d",&t); } while(t@@ !=-1); return0; }  
c -1
h -1
0

intn,m,@@ N@@ [100],@@ M@@ [100]; void@@ scan@@ () {inti; scanf("%d%d",&n,&m); for(i=0;i<n;i++) scanf("%d",&@@ N@@ [i]); for(i=0;i<m;i++) scanf("%d",&@@ M@@ [i]); } voidsort@@ (int@@ q,@@ inta[]) { inti,j,k,@@ t; for(i=0;i<@@ q@@ -1;i++) {@@ k=i; for(j=i+1;j<@@ q@@ ;j++) if(a[j]@@ <@@ a[k]@@ )@@ k=j; if(k!=@@ i) {t=@@ a[i]; a[i]=@@ a[k]; a[k]=@@ t;} } } voidprint() {inti; printf("%d",@@ N@@ [0]); for(i=1;i<n;i++) printf("%d",@@ N@@ [i]); for(i=0;i<m;i++) printf("%d",@@ M@@ [i]); printf("\n"); } voidmain() { scan@@ (); sort(@@ n,@@ N); sort(@@ m,@@ M@@ ); print(); }  
c -1
h -1
intmain() { intn,i,j,k; cin>>n; inta[@@ 20001]; for(i=0;i<n;i++) { cin>>a[i]; } for(i=0;i<n;i++) { k=0; if(i==0) cout<<a[i]; for(j=0;j<i;j++) { if(a[i]==a[j]) k++; } if(k@@ ==0&&@@ i@@ !=0) cout<<""<<a[i]; } return0; }  
c -1
h -1
0

main() { chara[@@ 300],b[@@ 300@@ ],c[@@ 300],@@ d[@@ 300],@@ f@@ [300],@@ h@@ [300@@ ];@@ inti,@@ m,@@ n=0,@@ t,@@ g,@@ e@@ [3]; scanf("%s",a); scanf("%s",b); scanf("%s",c); for(m=0;m<@@ 290@@ ;m++) {if(@@ a[m@@ ]==@@ '\0')@@ break;@@ e@@ [0]=@@ m@@ +1;} for(m=0;m<@@ 290@@ ;m++) {if(@@ b[m@@ ]==@@ '\0')@@ break;@@ e@@ [1]=@@ m@@ +1;} for(m=0;m<@@ 290@@ ;m++) {if(@@ c[m@@ ]==@@ '\0')@@ break;@@ e@@ [2]=@@ m@@ +1;} for(i=0;i<=@@ e@@ [0]@@ -@@ e@@ [1]@@ ;i++) {@@ for(t=0;t@@ <@@ e@@ [1]@@ ;t++) {@@ if(a@@ [i+@@ t@@ ]==@@ b[t@@ ])@@ n@@ ++;@@ else@@ n@@ =0;} if(n==@@ e@@ [1]@@ ){@@ g@@ =i;@@ break;} } if(n@@ ==0)@@ printf("%s",a); else {@@ for(i=0;i<@@ g@@ ;i++) {@@ d[i]=@@ a[i];@@ printf("%c",@@ d@@ [i]);} for(i=0;i<@@ e@@ [2]@@ ;i++) {@@ printf("%c",@@ c[i]@@ );} for(i=0;i<@@ e@@ [1]@@ ;i++) f[i]=@@ a[i@@ +@@ g@@ ]; for(i=0;i<@@ e@@ [0]@@ -@@ e@@ [1]@@ -@@ g@@ ;i++) {@@ h@@ [i]=@@ a[@@ g@@ +@@ e@@ [1]@@ +i@@ ];@@ printf("%c",@@ h@@ [i]@@ );}} getchar();getchar();getchar();getchar();@@ getchar();getchar();@@ getchar();@@ getchar(); }  
c -1
h -1
struct@@ pat { charid[10]; intage; }@@ pat@@ [100]; main() { intn,a[@@ 200],@@ j,@@ i; scanf("%d",&n); for(j=0;j<@@ 150@@ ;j++)@@ a[j]=0; for(i=0;i<n;i++) { scanf("%s%d",@@ pat[i].@@ id,&@@ pat@@ [i].age); for(j=1;j<@@ 150@@ ;j++) { if(j==@@ pat@@ [i].age@@ )@@ a[j]@@ ++; } } for(j=@@ 150@@ ;j@@ >=60@@ ;j--) { if(a[j]@@ ==0)@@ continue; for(i=0;i<n;i++) { if(j==@@ pat@@ [i].age@@ )@@ printf("%s\n",@@ pat@@ [i].id); } } for(i=0;i<n;i++) if(pat@@ [i].age@@ <60@@ )@@ printf("%s\n",@@ pat@@ [i].id); getchar(); getchar(); }  
c -1
h -1
0

intmain() { inta,b,@@ c,d,@@ e@@ [12@@ ],@@ i; e@@ [1]=@@ e@@ [3@@ ]=@@ e@@ [5@@ ]=@@ e@@ [@@ 7@@ ]=@@ e@@ [@@ 8@@ ]=@@ e@@ [10@@ ]=@@ e@@ [12@@ ]=31; e@@ [2]=@@ 28; e@@ [4@@ ]=@@ e@@ [@@ 6@@ ]=@@ e@@ [@@ 9@@ ]=@@ e@@ [11@@ ]=30; d=0; scanf("%d%d%d",&a,&b,&c); if((@@ a%@@ 4!=0@@ )||(@@ a%@@ 100==0&&@@ a%@@ 400!=0)) { for(i=1;i<@@ b;i++) { d=d+@@ e@@ [i]; } d=d@@ +c; } elseif((@@ a%4==0&&a%100!=0@@ )||(@@ a%400==0)) { for(i=1;i<@@ b;i++) { e@@ [2]=@@ 29; d=d+@@ e@@ [i]; } d=d@@ +c; } printf("%d",d); return0; }  
c -1
h -1
intmain() { inty,m,d,@@ a,@@ s; scanf("%d%d%d",&y,&m,&d); if((y%@@ 4==0&&y%100!=0@@ )||(y%@@ 100==0&&@@ y%@@ 400==0)@@ ){ a=@@ 29; } else@@ a=@@ 28; if(m@@ ==1){ s=@@ d; } elseif(m==@@ 2@@ ){ s@@ =31+@@ d; } elseif(m==@@ 3@@ ){ s@@ =31+@@ a+@@ d; } elseif(m==@@ 4@@ ){ s=@@ 31@@ *2@@ +a+@@ d; } elseif(m==@@ 5@@ ){ s=@@ 31@@ *2@@ +a+@@ 30@@ +d; } elseif(m==@@ 6@@ ){ s=@@ 31*3@@ +a+@@ d+@@ 30; } elseif(m==@@ 7@@ ){ s=@@ 31*3@@ +a+@@ d+@@ 30@@ *2@@ ; } elseif(m==@@ 8@@ ){ s=@@ 31*@@ 4@@ +a+@@ d+@@ 30@@ *2@@ ; } elseif(m==@@ 9@@ ){ s=@@ 31*5@@ +a+@@ d+@@ 30@@ *2@@ ; } elseif(m==@@ 10@@ ){ s=@@ 31*5@@ +a+@@ d+@@ 30@@ *3@@ ; } elseif(m==@@ 11@@ ){ s=@@ 31*6@@ +a+@@ d+@@ 30@@ *3@@ ; } elseif(m==@@ 12@@ ){ s=@@ 31*6@@ +a+@@ d+@@ 30@@ *@@ 4@@ ; } else@@ ; printf("%d\n",s); return0; }  
c -1
h -1
1


void@@ a@@ (); void@@ b@@ (); void@@ c@@ (); void@@ d@@ (); int@@ x1@@ [1000],@@ x2@@ [@@ 499@@ ],@@ n1,n2; intmain() { a@@ (); b@@ (); c@@ (); d@@ (); return0; } void@@ a@@ () { inti; scanf("%d%d",&n1,&n2); for(i=0;i<n1;i++) scanf("%d",&@@ x1@@ [i]); for(i=0;i<n2;i++) scanf("%d",&@@ x2@@ [i]); } void@@ b@@ () { inti,j,@@ p; for(i=0;i<n1@@ -1;i++) for(j=i+1;j<@@ n1@@ ;j++) if(@@ x1@@ [i]>@@ x1@@ [j]) { p=@@ x1@@ [i]; x1@@ [i]=@@ x1@@ [j]; x1@@ [j]=@@ p; } for(i=0;i<n2@@ -1;i++) for(j=i+1;j<@@ n2@@ ;j++) if(@@ x2@@ [i]>@@ x2@@ [j]) { p=@@ x2@@ [i]; x2@@ [i]=@@ x2@@ [j]; x2@@ [j]=@@ p; } } void@@ c@@ () { inti; for(i=0;i<n2;i++) x1@@ [@@ n1@@ +i]=@@ x2@@ [i]; } void@@ d@@ () { inti; for(i=0;i<n1@@ +@@ n2;i++) { printf("%d",@@ x1@@ [i]); if(i<@@ n1+n2@@ -1) printf(""); } }  
c -1
h -1
structstu { charname@@ [20]; int@@ sbu@@ [3]; }; intmain() { intn; scanf("%d",&n); inti,j=0,@@ j2@@ =0,@@ j3@@ =0,@@ min@@ =0; structstu@@ stu[100000]; for(i=0;i<n;i++) { scanf("%s%d%d",@@ stu[i].@@ name@@ ,&stu[i].@@ sbu@@ [0]@@ ,&stu[i].@@ sbu@@ [1]); stu[i].@@ sbu@@ [2]=@@ stu[i].@@ sbu@@ [0]@@ +stu[i].@@ sbu@@ [1]; } for(i=0;i<n;i++) { if(stu[i].@@ sbu@@ [2@@ ]>@@ min) {@@ min@@ =stu[i].@@ sbu@@ [2]; j@@ =i;} } printf("%s%d\n",@@ stu[j].@@ name,@@ min); min@@ =0; for(i=0;i<n;i++) { if(stu[i].@@ sbu@@ [2]@@ <=@@ stu[j].@@ sbu@@ [2]@@ &&stu[i].@@ sbu@@ [2@@ ]>@@ min@@ &&i!=@@ j) {@@ min@@ =stu[i].@@ sbu@@ [2]; j2@@ =i;} } printf("%s%d\n",@@ stu[@@ j2@@ ].@@ name,@@ min); min@@ =0; for(i=0;i<n;i++) { if(stu[i].@@ sbu@@ [2]@@ <=@@ stu[@@ j2@@ ].@@ sbu@@ [2]@@ &&stu[i].@@ sbu@@ [2@@ ]>@@ min@@ &&i!=@@ j@@ &@@ i@@ !=@@ j2@@ ) {@@ min@@ =stu[i].@@ sbu@@ [2]; j3@@ =i;} } printf("%s%d\n",@@ stu[@@ j3@@ ].@@ name,@@ min); }  
c -1
h -1
0

intmain() { chara[@@ 257@@ ]={0}; charb[@@ 257@@ ]={0}; charc[@@ 257@@ ]={0}; inti=0; intj=0; intk=0; gets(a); gets(b); gets(c); int@@ isbreak@@ =0; int@@ len@@ =strlen(b); for(i=0;i<@@ 257@@ ;i++){ if(a@@ [i+@@ len@@ -1@@ ]==@@ '\0') break; for(j=i;j<i+@@ len@@ ;j++){ if(a[j]==@@ b@@ [j-i@@ ]){ k@@ ++;} else{ k=0; } } if(k==@@ len@@ ){ isbreak@@ =1; for(j=i;j<i+@@ len@@ ;j++){ a[j]=@@ c@@ [j-i@@ ]; } } if(@@ isbreak@@ !=0@@ )break; } puts(@@ a); return0; }  
c -1
h -1
structstudent { intnum; int@@ score1@@ ; int@@ score2; intsum; structstudent*next; }; structstudent*creat@@ (intm) { inti=0; structstudent*head,*p1,*p2; p1=p2=(structstudent*)malloc(LEN); scanf("%d%d%d",&p1->num,&p1->@@ score1@@ ,&p1->@@ score2); p1->@@ sum=(@@ p1->@@ score1@@ )+@@ (@@ p1->@@ score2); head=NULL; for(i=0;i<m-1;i++) { if(i==0)@@ head=p1; elsep2->next=p1; p2=p1; p1=(structstudent*)malloc(LEN); scanf("%d%d%d",&p1->num,&p1->@@ score1@@ ,&p1->@@ score2); p1->@@ sum=(@@ p1->@@ score1@@ )+@@ (@@ p1->@@ score2); } p2->next=p1; p1->next=NULL; return(head); } voidprint@@ (structstudent*head@@ ) { structstudent*@@ p=@@ head,*@@ q=@@ head; int@@ a=0,b=0,@@ c=0; if(head@@ !=NULL) {@@ do { if(a<@@ p->@@ sum) {@@ a=@@ p->@@ sum;@@ q=@@ p@@ ;} p=p->next; }while(p@@ !=NULL); printf("%d%d\n",@@ q->@@ num,@@ q->@@ sum); q->@@ sum=0; p=@@ head;@@ q=@@ head; do {@@ if(b@@ <@@ p->@@ sum) {@@ b=@@ p->@@ sum;@@ q=@@ p@@ ;} p=p->next; }while(p@@ !=NULL); printf("%d%d\n",@@ q->@@ num,@@ q->@@ sum); q->@@ sum=0; p=@@ head;@@ q=@@ head; do {@@ if(c@@ <@@ p->@@ sum) {@@ c=@@ p->@@ sum;@@ q=@@ p@@ ;} p=p->next; }while(p@@ !=NULL); printf("%d%d",@@ q->@@ num,@@ q->@@ sum); } } voidmain() { intm; scanf("%d",&m); structstudent*head@@ ,@@ stu@@ ; head=creat@@ (m); print(head); }  
c -1
h -1
0

intmain() { chars[@@ 256],b[@@ 256],c[256]; inti,j,k,n,@@ m; scanf("%s",&@@ s); scanf("%s",&@@ b); scanf("%s",&@@ c); n=strlen(@@ s)@@ -strlen(@@ b); for(i=0;i<=@@ n;i++) { m=0; for(j=0@@ ,k@@ =i@@ ;j<@@ strlen(b@@ )@@ ;j++@@ ,k++) { if(s@@ [k]==@@ b[j]) { m++; } } if(m==@@ strlen(b@@ )) { for(j=i,@@ k@@ =0;j<@@ strlen(b@@ )@@ +i@@ ;j++@@ ,k++) { s[j]=@@ c@@ [k]; } break; } } puts(@@ s); return0; }  
c -1
h -1
intmain() { intn,i,j,@@ k@@ =1,@@ r@@ =1,@@ number@@ [@@ 20001@@ ],@@ number1@@ [@@ 20001@@ ]={0}; cin>>n; for(i=1@@ ;i@@ !=@@ n@@ +1;i++) { cin>>@@ number@@ [i]; for(j=1@@ ,k@@ =1@@ ;j<=@@ i;j++) { if(@@ number@@ [i]==@@ number1@@ [j]) { k=0; break; } } if(k==1) { if(i==1) { cout<<@@ number@@ [1]; number1@@ [1]=@@ number@@ [1]; r++; } else { cout<<""<<@@ number@@ [i]; number1@@ [r@@ ]=@@ number@@ [i]; r++; } } } return0; }  
c -1
h -1
0

intmain() { intn,i,j,k,@@ t,@@ tmp@@ ,a[@@ 10000]; scanf("%d%d",&n,&k); for(i=1;i<=n;i++) scanf("%d",&a[i]); for(i=1;i<n;i++) { t=i; for(j=@@ t@@ ;j<=@@ n;j++) { if(a[j]@@ <@@ a[t@@ ]) t@@ =j; } if(t@@ !=@@ i) { tmp=@@ a[t@@ ]; a[t@@ ]=a[i]; a[i]=@@ tmp; } } t=0; for(i=1;i<n;i++) { for(j=i+1;j<=n;j++) { if(a[i]+a[j]==@@ k@@ &&@@ t@@ ==0) { printf("yes"); t=1; } else@@ if(a[i]+@@ a[j]@@ >@@ k@@ )break; } } if(t@@ ==0)@@ printf("no"); return0; }  
c -1
h -1
intmain() { intn; inta[100]; inth@@ [100]; int@@ ans; while(@@ scanf("%d",&@@ n)@@ !=@@ EOF@@ ) { ans@@ =1; for(inti=0;i<n;i++) { scanf("%d",&a[i]); h@@ [i]=1; } for(inti=1;i<@@ n;i++) { intsum@@ =1; for(intj=0;j<i;j++) { if(a[j]>=a[i]&&@@ h@@ [i]<@@ h@@ [j]@@ +1) h@@ [i]=@@ h@@ [j]+1; } if(h@@ [i]>@@ ans@@ )@@ ans=@@ h@@ [i]; } printf("%d\n",@@ ans); } return0; }  
c -1
h -1
0

voidmain() { intk,i,j,@@ h@@ [25@@ ]={0},@@ n[@@ 25@@ ]={@@ 1@@ },@@ num; scanf("%d",&k); for(i=0;i<k;i++) scanf("%d",&h[i]); for(i=k-2;i>=0;i--) {@@ for(j=i+1;j<k;j++) { if(h@@ [i]>=@@ h@@ [j]&&@@ n[i]@@ <n@@ [j]@@ +1) n[i]=@@ n@@ [j]+1; } } num=@@ n@@ [0]; for(i=0;i<k;i++) { if(num@@ <n@@ [i]) num=@@ n[i]; } printf("%d",@@ num@@ +1); }  
c -1
h -1
intmain() { intyear,month,day,@@ n; scanf("%d%d%d",&year,&month,&day); switch(month) { case1: { n=@@ day; break; } case2: { n=31+@@ day; break; } case3: { n=@@ 59@@ +day; if((year%4==0&&year%100!=0)||(year%400==0)) { n=n+1; } else { n=@@ n; } break; } case4: { n=@@ 90@@ +day; break; } case5: { n=@@ 120@@ +day; break; } case6: { n=@@ 151@@ +day; break; } case7: { n=@@ 181@@ +day; break; } case8: { n=@@ 212@@ +day; break; } case9: { n=@@ 243@@ +day; break; } case10: { n=@@ 273@@ +day; break; } case11: { n=@@ 304@@ +day; break; } case12: { n=@@ 334@@ +day; break; } } printf("%d\n",n); return0; }  
c -1
h -1
0

intmain() { structbook { intnum; charwriter@@ [26]; }@@ bookn@@ [999]; struct@@ zuozhe { char@@ w; int@@ count; }@@ zuozhen@@ [26]; intn,i; scanf("%d",&n); for(i=0;i<26;i++) { zuozhen@@ [i].@@ w@@ ='A'+i; zuozhen@@ [i].@@ count=0; } inth@@ =0; intm,@@ j; for(i=0;i<n;i++) { scanf("%d%s",&@@ bookn@@ [i].@@ num,@@ bookn@@ [i].@@ writer); m=strlen(@@ bookn@@ [i].@@ writer); for(j=0;j<m;j++) { h=@@ bookn@@ [i].@@ writer@@ [j]@@ -'A'; zuozhen@@ [h@@ ].@@ count++; } } struct@@ zuozhe@@ a; a=@@ zuozhen@@ [0]; for(i=1;i<26;i++) { if(a@@ .@@ count@@ <@@ zuozhen@@ [i].@@ count@@ ) a=@@ zuozhen@@ [i]; } printf("%c\n",@@ a.@@ w); printf("%d\n",@@ a.@@ count); intt; for(i=0;i<n;i++) { t@@ =strlen(@@ bookn@@ [i].@@ writer); for(j=0;j<@@ t;j++) { if(@@ bookn@@ [i].@@ writer@@ [j]==@@ a.@@ w@@ ) printf("%d\n",@@ bookn@@ [i].num); } } }  
c -1
h -1
main() { intn; scanf("%d",&n); inta[n]; inti,j,@@ max=0; for(i=0;i<n;i++) scanf("%d",&a[i]); intb[@@ n]; for(i=0;i<n;i++) b[i]=1; b[@@ n-1@@ ]=1; for(i=n-2;i>=0;i--) { for(j=i+1;j<n;j++) { if(a[j]<=@@ a[i]&&@@ b[j]@@ +1@@ >=@@ b[i]) b[i]=b[j]+1; } } for(i=0;i<n;i++) { if(b[i]>max) max=b[i]; } printf("%d",max); }  
c -1
h -1
0

main() { chara[256],b[256],c[256]; gets(a); gets(b); gets(c); intn@@ =strlen(a); intm@@ =strlen(b); inti,j; for(inti=0;i<n;i++) { if(a[i]==@@ b[0]) { for(j=1;j<@@ m;j++) { if(a@@ [i+j]!=@@ b[j]) break; } if(j==@@ m) { for(j=0;j<m;j++) { a[i+j@@ ]=@@ c[j]; } break; } } } puts(@@ a); }  
c -1
h -1
intmain() { inta[100],b[100],@@ m,n; voidread@@ (inta[],int@@ n); voidsort@@ (inta[],int@@ n); voidprint@@ (inta[],int@@ n); scanf("%d%d",&m,&n); read@@ (a,@@ m@@ );@@ read@@ (b,n); sort@@ (a,@@ m@@ );@@ sort@@ (b,n); print@@ (a,@@ m@@ );@@ printf("@@ ");@@ print@@ (b,n); } voidread@@ (inta[],intn) { inti; for(i=0;i<n;i++) scanf("%d",&a[i]); } voidsort@@ (inta[],intn) {@@ inti,j,t; for(i=n-1@@ ;i>0;i--) for(j=0;j<i;j++) if(a[j]>a[j+1]) {t=@@ a[j];a[j]=a[j+1];@@ a[j+1]=@@ t;} } voidprint@@ (inta[],intn) {inti; for(i=0;;i++) {@@ printf("%d",a[i]); n--; if(n@@ )@@ printf(""); else@@ break;}}  
c -1
h -1
0

intmain() { introw,col,@@ i,j,@@ s@@ ,*@@ p=@@ NULL@@ ; cin>>row>>col; inta[100][100]; for(i=0;i<row;i++) for(j=0;j<col;j++) { cin>>*(*(a+i)+j); } for(s=0;s@@ <=@@ row+col-2@@ ;s++) { for(i=0;i<row;i++) if(s@@ -i@@ <col@@ &&@@ s@@ -i@@ >=0) { cout<<@@ *(*(a+i)@@ +@@ s@@ -i@@ )<<endl; } } return0; }  
c -1
h -1
intmain() { intn,i,j,k,@@ h,@@ l,@@ y; int*p=@@ NULL@@ ; cin>>n; for(i=1;i<=n;i++) { y=0; intx[@@ 101][@@ 101@@ ]={0}; cin>>@@ h@@ >>@@ l; for(j=1;j<=@@ h@@ ;j++) { for(k=1;k<=@@ l@@ ;k++) { cin>>@@ x[j]@@ [k]; } } for(p=@@ x@@ [1]@@ +1@@ ;p<=@@ x@@ [1]@@ +l@@ ;p++) { y=@@ y@@ +@@ (*p@@ ); } for(p=@@ x@@ [2]@@ +1@@ ;p<=@@ x[@@ h@@ -1]@@ +1;@@ p=p+@@ 101@@ ) { y=@@ y@@ +@@ (*p@@ )+@@ (@@ *(p+@@ l@@ -1)); } for(p=@@ x[@@ h@@ ]+1@@ ;p<=@@ x[@@ h@@ ]+@@ l@@ ;p++) { y=@@ y@@ +@@ (*p@@ ); } cout<<@@ y@@ <<endl; } return0; }  
c -1
h -1
0

intmain(){ double@@ k; scanf("%lf",&@@ k); char@@ qian@@ [501]; char@@ hou@@ [501]; scanf("%s@@ %s",&@@ qian@@ ,&@@ hou@@ ); inti,@@ s=0; if(strlen(@@ qian@@ )!=strlen(@@ hou@@ )){ s=1; } intm=0; for(i=0;i<strlen(@@ qian@@ );i++){ if((@@ qian@@ [i]!='A'&&@@ qian@@ [i]!='T'&&@@ qian@@ [i]!='G'&&@@ qian@@ [i]!='@@ C')||(@@ hou@@ [i]!='A'&&@@ hou@@ [i]!='T'&&@@ hou@@ [i]!='G'&&@@ hou@@ [i]!='@@ C')){ s=1; } } if(s@@ ==1){ printf("error"); }elseif(@@ s@@ ==0){ for(i=0;i<strlen(@@ qian@@ );i++){ if(@@ qian@@ [i]==@@ hou@@ [i]){ m++; } } if(1.0*@@ m/@@ strlen(@@ qian@@ )>@@ k){ printf("yes"); }elseif(@@ 1.0*@@ m/@@ strlen(@@ qian@@ )@@ <=@@ k){ printf("no"); } } return0; }  
c -1
h -1
char@@ substring@@ [256@@ ]={0}; char@@ S@@ [256@@ ]={0}; char@@ replacement@@ [256@@ ]={0}; intmain() { while(cin>>@@ S@@ ) { cin>>@@ substring@@ ; cin>>@@ replacement@@ ; char*@@ p=strstr(@@ S@@ ,@@ substring); char*@@ q@@ =NULL; inti=0; if(p@@ !=NULL) { for(q=@@ S@@ ;q@@ <p@@ ;q++) { cout<<@@ *@@ q; } cout<<@@ replacement@@ ; for(q=@@ p+@@ strlen(@@ substring@@ );@@ *@@ q@@ !='\0'@@ ;q++) { cout<<@@ *@@ q; } cout<<endl; memset(@@ S@@ ,@@ 0,@@ 256); memset(@@ substring@@ ,@@ 0,@@ 256); memset(@@ replacement@@ ,@@ 0,@@ 256); } elseif(@@ p@@ ==NULL) { cout<<@@ S@@ <<endl; } } return0; }  
c -1
h -1
0

int@@ dispose@@ (int,int); intmain() { intn,i,@@ p; cin>>n; for(i=0;i<n;i++) { cin>>@@ p; cout<<@@ dispose@@ (p,@@ 2)<<endl; } return0; } int@@ dispose@@ (intp@@ ,int@@ y) { inti,@@ sol@@ =1; for(i=y@@ ;i<=@@ (int)@@ (@@ sqrt@@ (p@@ ))@@ ;i++) { if(p@@ %i==0) { sol@@ +=@@ dispose@@ (p@@ /i,i); } } return@@ sol@@ ; }  
c -1
h -1
int@@ compare@@ (constvoid*a,constvoid*@@ b) { int@@ x=@@ *(int*)@@ a; int@@ y=@@ *(int*)@@ b; if(x@@ <@@ y){ return-1; } if(x==@@ y){ return0; } return1; } void@@ initArrays@@ (int*a,@@ int*@@ b,int@@ m,intn) { inti; for(i=0;i<m;i++){ cin>>a[i]; } for(i=0;i<n;i++){ cin>>b[i]; } } voidsort@@ (int*a,@@ int*@@ b,int@@ m,intn) { qsort@@ (a,@@ m,@@ sizeof(int),@@ compare@@ ); qsort@@ (b,@@ n,@@ sizeof(int),@@ compare@@ ); } void@@ append@@ (int*a,@@ int*@@ b@@ ,int*@@ c@@ ,int@@ m,intn) { inti; for(i=0;i<m;i++){ c[i]=a[i]; } for(i=m;i<@@ m+@@ n;i++){ c[i]=b[i-@@ m]; } } voidprint@@ (int*@@ a,int@@ n) { inti; for(i=0;i<n-1;i++){ cout<<a[i]<<""; } cout<<a[i]; } intmain(intargc@@ ,@@ const@@ char*@@ argv[]) { intm,n; cin>>m>>n; inta[@@ m]; intb[@@ n]; initArrays@@ (a,b,m,n); sort@@ (a,b,m,n); intc[@@ m+@@ n]; append@@ (a,b,@@ c,@@ m,n); print(@@ c,@@ m+@@ n); return0; }  
c -1
h -1
0

voidmain() { chara[256],b[256],c[256]; intlen1,len2,@@ len3@@ ,i,j,@@ sum=0; scanf("%s",&@@ a); scanf("%s",&@@ b); scanf("%s",&@@ c); len1@@ =strlen(a); len2@@ =strlen(b); len3@@ =strlen(c); for(i=0;i<len1;i++) { if(a[i]==@@ b[0]) { sum=0; for(j=0;j<len2@@ ;j++) { if(a@@ [i+j]==@@ b[j]) { sum++; } } if(sum@@ ==@@ len2) { for(j=0;j<@@ len3@@ ;j++) { a[i+j@@ ]=@@ c[j]; } break; } } } printf("%s",a); }  
c -1
h -1
main() { intn,i,j,@@ first@@ ,@@ num,@@ fstn@@ ,@@ counter1@@ =0,@@ counter2@@ =0; intsum=0; int@@ c@@ [100][100@@ ]={0}; ints@@ [100]={0}; int@@ t@@ [100]={0}; scanf("%d",&n); for(i=0;i<n;i++) { for(j=0;j<n;j++) { scanf("%d",&@@ c@@ [i][j]); } } for(i=0;i<n;i++) { int@@ tum1@@ =0; sum=0; for(j=0;j<n;j++) { sum+=@@ c[i]@@ [j]; } tum1@@ =@@ n-@@ sum/@@ 255@@ ; s[i]=@@ tum1@@ ; } for(i=0;i<n;i++) { if(s@@ [i]!=0) { first@@ =i+1; fstn@@ =@@ s[i]; break; } } for(i=@@ first@@ ;@@ s[i]@@ !=@@ fstn@@ ;i++) { counter1@@ ++; } for(j=0;j<n;j++) { int@@ tum2@@ ; sum=0; for(i=0;i<n;i++) { sum+=@@ c[i]@@ [j]; } tum2@@ =@@ n-@@ sum/@@ 255@@ ; t@@ [j]=@@ tum2@@ ; } for(j=0;j<n;j++) { if(t@@ [j]@@ !=0) { first@@ =j+1; fstn@@ =@@ t@@ [j]; break; } } for(j=@@ first@@ ;t@@ [j]!=@@ fstn@@ ;j++) { counter2@@ ++; } printf("%d",@@ counter1@@ *@@ counter2@@ ); }  
c -1
h -1
0

intmain() { introw,col; inti=0,j=0; int@@ ar@@ [@@ 101][101]; scanf("%d%d",&row,&col); for(i=0;i<row;i++) for(j=0;j<col;j++) scanf("%d",&@@ ar@@ [i][j]); if(row@@ ==@@ col@@ ){ for(i=0;i<=@@ col@@ -1;i++) for(j=0;j<=i;j++) printf("%d\n",@@ ar@@ [j]@@ [i-j@@ ]); for(i=@@ col@@ ;i<=@@ row+col-2@@ ;i++) for(j=col-1@@ ;j>=i@@ -@@ row@@ +1@@ ;j--) printf("%d\n",@@ ar@@ [i-j@@ ][j]); } if(row@@ >@@ col@@ ){ for(i=0;i<=@@ col@@ -1;i++) for(j=0;j<=i;j++) printf("%d\n",@@ ar@@ [j]@@ [i-j@@ ]); for(i=@@ col@@ ;i<=@@ row-1;i++) for(j=col-1@@ ;j>=0;j--) printf("%d\n",@@ ar@@ [i-j@@ ][j]); for(i=@@ row@@ ;i<=@@ row+col-2@@ ;i++) for(j=col-1@@ ;j>=i@@ -@@ row@@ +1@@ ;j--) printf("%d\n",@@ ar@@ [i-j@@ ][j]); } if(row@@ <col@@ ){ for(i=0;i<=@@ row-1;i++) for(j=0;j<=i;j++) printf("%d\n",@@ ar@@ [j]@@ [i-j@@ ]); for(i=@@ row@@ ;i<=@@ col@@ -1;i++) for(j=0;j<=@@ row@@ -1;j++) printf("%d\n",@@ ar@@ [j]@@ [i-j@@ ]); for(i=@@ col@@ ;i<=@@ row+col-2@@ ;i++) for(j=col-1@@ ;j>=i@@ -@@ row@@ +1@@ ;j--) printf("%d\n",@@ ar@@ [i-j@@ ][j]); } return0; }  
c -1
h -1
intmain() { inta,b,c,@@ n,@@ s[@@ 12@@ ],@@ i,@@ t; scanf("%d%d%d",&a,&b,&c); s[@@ 0]=@@ 31; s[2@@ ]=31; s[@@ 3@@ ]=30; s[@@ 4@@ ]=31; s[@@ 5@@ ]=30; s[@@ 6@@ ]=31; s[@@ 7@@ ]=31; s[@@ 8@@ ]=30; s[@@ 9@@ ]=31; s[@@ 10@@ ]=30; s[@@ 11@@ ]=31; t=0; for(i=0;i<b@@ -1;i++) { if((@@ a%4==0&&a%100!=0@@ )||@@ a%@@ 400==0) { s@@ [1]=@@ 29; t=@@ s[i]@@ +@@ t; } else { s@@ [1]=@@ 28; t=@@ s[i]@@ +@@ t; } } n=@@ t@@ +c; printf("%d\n",n); return0; }  
c -1
h -1
0

intsum@@ (intm,int@@ n) { inta[@@ m@@ ][n@@ ],i,j,@@ t=0; if(m@@ ==1||@@ n@@ ==1) for(i=0;i<m+@@ n-1@@ ;i++){@@ scanf("%d",&@@ j@@ );@@ t+=@@ j@@ ;} else{ for(i=0;i<m;i++) for(j=0;j<n;j++) scanf("%d",&a[i][j]); for(i=0;i<m;i++)@@ t+=@@ a[i][0]+@@ a[i][n-1]; for(j=1;j<@@ n-1@@ ;j++)@@ t+=@@ a[0]@@ [j]+@@ a[m-1][j]; }@@ return@@ t; } intmain() { intm,n,@@ q; for(@@ scanf("%d",&@@ q@@ );@@ q@@ >0@@ ;q@@ --) { scanf("%d%d",&m,&n); printf("%d\n",sum@@ (m,@@ n@@ )); } }  
c -1
h -1
intmain() { inti,j,n,@@ a[@@ 26@@ ],b[@@ 26],@@ k; scanf("%d",&n); for(i=0;i<n;i++) { scanf("%d",&a[i]); } b[0]@@ =1; k=1; for(j=1;j<n;j++) { b[j]@@ =1; for(i=0;i<j;i++) { if(a[i]>=a[j]) { if(b[i]@@ +1>@@ b[j]@@ )@@ b[j]=@@ b[i]@@ +1; } } if(b[j]@@ >@@ k)@@ k=@@ b[j]; } printf("%d\n",@@ k); return0; }  
c -1
h -1
0

intmain(){ intn,k,i,j,@@ a=0; int@@ dk@@ [1000]; scanf("%d%d",&n,&k); scanf("%d",&(@@ dk@@ [0]@@ )); for(i=1;i<n;i++){ scanf("%d",&(@@ dk@@ [i]@@ )); } for(i=0;i<n-1;i++){ for(j=i+1;j<n;j++){ if(@@ dk@@ [i]+@@ dk@@ [j]==k){ printf("yes"); return0; } } a@@ +=1; } if(a==@@ n-1)@@ printf("no"); return0; }  
c -1
h -1
intmain() {@@ intn,i,@@ m=0,@@ p,@@ flag=0,@@ a@@ =-@@ 2,@@ b; scanf("%d",&n); for(i=0;i<n@@ *@@ n;i++) {scanf("%d",&@@ p); if(p@@ ==0) {@@ if(m@@ ==0){@@ flag@@ =1;m@@ ++;@@ a@@ ++;} elseif(@@ flag@@ ==1){@@ m@@ ++;@@ a@@ ++;} else@@ m@@ ++;} else{@@ if(flag@@ ==1)@@ flag@@ =0;} } b=@@ m@@ /2@@ -@@ a@@ -2@@ ; printf("%d",@@ a*@@ b); }  
c -1
h -1
0

intmain(intargc,char*argv[]) { inta,b,c,@@ i,@@ d=0; scanf("%d%d%d",&a,&b,&c); for(i=1;i<@@ b;i++) { if(i==1||i==3||i==5||i==7||i==8||i==10@@ ||i==@@ 12) d=d+@@ 31; else d=d+@@ 30; } if(i@@ <=@@ 2) d=@@ d; elseif(@@ a%@@ 400==0||(@@ a%4==0&&a%100!=0@@ )) d=d@@ -1; else d=d@@ -2@@ ; d=d@@ +c; printf("%d",d); return0; }  
c -1
h -1
intmain() { introw,col; inta,b; intsz[100][100]; intsum@@ [100]; for(row=0;row@@ <@@ 100@@ ;@@ row++) { sum[@@ row@@ ]=0; } for(row=0;row@@ <@@ 100@@ ;@@ row++) { for(col=0;col@@ <@@ 100@@ ;col@@ ++) { scanf("%d",&@@ sz[row][col@@ ]); if(@@ sz[row][col@@ ]==0) { break; } if(sz[@@ row@@ ][0]@@ ==-1) { break; } } if(sz[@@ row@@ ][0]@@ ==-1) { break; } a=@@ row; } for(row=0;row@@ <=@@ a;@@ row++) { for(b=0;b@@ <@@ 100@@ ;@@ b++) { for(col=0;col@@ <@@ 100@@ ;col@@ ++) { if(sz[@@ row@@ ][b@@ ]==2*@@ sz[row][col@@ ]@@ &&@@ sz[@@ row@@ ][b@@ ]@@ !=0&&@@ sz[row][col@@ ]!=0) { sum[@@ row@@ ]++; } } } } for(row=0;row@@ <=@@ a;@@ row++) { printf("%d\n",@@ sum[@@ row@@ ]); } return0; }  
c -1
h -1
0

char@@ zimu@@ [@@ 28@@ ]@@ ="@@ ABCDEFGJIJKLMNOPQRSTUVWXYZ@@ "; charwriter@@ [@@ 10000@@ ][@@ 10000]; int@@ times@@ [26],@@ id@@ [1000],@@ i,@@ len@@ [@@ 10000],@@ book@@ =0; intn,@@ j,k,@@ tmax@@ ,@@ max=0; intmain() { scanf("%d",&n); for(i=0;i<n;i++) { scanf("%d%s",&@@ id[i],&@@ writer@@ [i]); len@@ [i]@@ =strlen(@@ writer@@ [i]); } for(i=0;i<26;i++) { times@@ [i]=0; } for(i=0;i<n;i++) { for(j=0;j<len@@ [i];j++) { for(k=0;k<26;k++) { if(@@ writer@@ [i][j]==@@ zimu@@ [k]) {@@ times@@ [k]@@ ++;} } } } for(i=0;i<26;i++) { if(@@ times@@ [i]>max) {max=@@ times@@ [i]; tmax@@ =i; }} printf("%c\n",@@ zimu@@ [@@ tmax@@ ]); for(i=0;i<n;i++) { for(j=0;j<len@@ [i];j++) { if(@@ writer@@ [i][j]==@@ zimu@@ [@@ tmax@@ ]) {@@ book@@ ++;} } } printf("%d\n",@@ book@@ ); for(i=0;i<n;i++) { for(j=0;j<len@@ [i];j++) { if(@@ writer@@ [i][j]==@@ zimu@@ [@@ tmax@@ ]) {printf("%d\n",@@ id@@ [i]);} } } return0; }  
c -1
h -1
structstu@@ { inta; intb; intc; structstu*next; }; voidmain() { intn,i,j,@@ max; structstu@@ *head,*p1,*p2; scanf("%d",&n); for(i=0;i<n;i++) { if(i==0) { head@@ =p1@@ =p2@@ =(struct@@ stu*)malloc(sizeof(structstu)); scanf("%d%d%d",&p1->@@ a@@ ,&p1->@@ b@@ ,&p1->@@ c); head=p1; p2=p1; } else { p1=(struct@@ stu*)malloc(sizeof(structstu)); scanf("%d%d%d",&p1->@@ a@@ ,&p1->@@ b@@ ,&p1->@@ c); p2->next=p1; p2=p1; } } p2->next=NULL; for(j=0;j<3;j++) { max=0; p1=head; for(i=0;@@ p1->next@@ !=NULL@@ ;i++) { if(p1->@@ b+@@ p1->@@ c@@ >max)max=@@ p1->@@ b+@@ p1->@@ c; p1=p1->next; } p1=head; for(i=0;@@ p1->next@@ !=NULL@@ ;i++) { if(p1->@@ b+@@ p1->@@ c@@ ==@@ max) { printf("%d%d\n",@@ p1->@@ a,@@ max); p1->@@ b=0; p1->@@ c=0; p1=p1->next; break; } else@@ p1=p1->next; } } }  
c -1
h -1
0

int@@ Compare@@ (constvoid*@@ elem1@@ ,@@ constvoid*@@ elem2@@ ) { return@@ *(@@ (int*)@@ (@@ elem1@@ ))@@ -@@ *(@@ (int*)@@ (@@ elem2@@ )); } intmain() { int@@ n1,n2; int*@@ a1@@ ,*@@ a2@@ ; int@@ i1@@ ,@@ i2@@ ,@@ i3@@ ,@@ i4@@ ; scanf("%d%d",&n1,&n2); a1@@ =@@ (int*)malloc(sizeof(int)@@ *@@ n1); a2@@ =@@ (int*)malloc(sizeof(int)@@ *@@ n2); for(@@ i1@@ =0;@@ i1@@ <@@ n1@@ ;@@ i1@@ ++) { scanf("%d",@@ a1@@ +@@ i1@@ ); } for(@@ i2@@ =0;@@ i2@@ <@@ n2@@ ;@@ i2@@ ++) { scanf("%d",@@ a2@@ +@@ i2@@ ); } qsort(@@ a1,@@ n1,@@ sizeof(int),@@ Compare@@ ); qsort(@@ a2,@@ n2,@@ sizeof(int),@@ Compare@@ ); for(@@ i3@@ =0;@@ i3@@ <@@ n1@@ ;@@ i3@@ ++) { printf("%d",@@ a1@@ [@@ i3@@ ]); } for(@@ i4@@ =0;@@ i4@@ <@@ n2@@ -1;@@ i4@@ ++) { printf("%d",@@ a2@@ [@@ i4@@ ]); } printf("%d",@@ a2@@ [@@ n2@@ -1]); }  
c -1
h -1
intmain() { structstudent { int@@ ID,@@ Chinese@@ ,@@ math@@ ,sum; } stu[@@ 100000],@@ temp1@@ ,@@ temp2@@ ,@@ temp3@@ ; intn,i,j,k; scanf("%d\n",&n); for(i=0;i<n;i++) { scanf("%d%d%d",&stu[i].@@ ID@@ ,&stu[i].@@ Chinese@@ ,&stu[i].math); stu[i].sum=stu[i].@@ Chinese@@ +stu[i].@@ math; } temp1@@ =@@ stu[@@ 0]; for(i=1;i<n-1;i++) if(stu[i].@@ sum>@@ temp1@@ .@@ sum) temp1@@ =stu@@ [i]; printf("%d%d\n",@@ temp1@@ .@@ ID,@@ temp1@@ .@@ sum); if(@@ temp1@@ .@@ ID@@ ==@@ stu[0].@@ ID@@ )@@ temp2@@ =stu@@ [1]; else@@ temp2@@ =@@ stu[@@ 0]; for(i=1;i<n-1;i++) {if(@@ stu[i].@@ ID@@ ==@@ temp1@@ .@@ ID@@ )continue; elseif(@@ stu[i].@@ sum>@@ temp2@@ .@@ sum@@ )@@ temp2@@ =stu@@ [i]@@ ;} printf("%d%d\n",@@ temp2@@ .@@ ID,@@ temp2@@ .@@ sum); for(i=0;i<n;i++) if(stu[i].@@ ID@@ ==@@ temp1@@ .@@ ID@@ ||@@ stu[i].@@ ID@@ ==@@ temp2@@ .@@ ID@@ ) stu[i].@@ sum=0; temp3@@ =@@ stu[@@ 0]; for(i=1;i<n-1;i++) if(stu[i].@@ sum>@@ temp3@@ .@@ sum) temp3@@ =stu@@ [i]; printf("%d%d\n",@@ temp3@@ .@@ ID,@@ temp3@@ .@@ sum); return0; }  
c -1
h -1
0

voidmain() { inta[@@ 20@@ ][@@ 16],@@ s[@@ 20@@ ]={0},@@ i,j,k,@@ p=0,@@ n[@@ 20@@ ]={0}; for(i=0;i<@@ 20@@ ;i++) { scanf("%d",&a[i]@@ [0]); if(a[i]@@ [0]@@ ==-1)break; p=p@@ +1; for(j=1;j<@@ 16@@ ;j++) { scanf("%d",&a[i][j]); if(a[i][j]@@ ==0)break; s[i]=@@ s[i]@@ +1; } } for(i=0;i<p@@ ;i++) for(j=0;j<=@@ s[i]@@ ;j++) for(k=0;k<=@@ s[i]@@ ;k++) if(a[i][j]==@@ 2*@@ a[i][k]@@ )@@ n[i]=@@ n[i]@@ +1; for(i=0;i<p@@ ;i++) printf("%d\n",n@@ [i]); }  
c -1
h -1
voidmain() { inta,b,@@ s,@@ i,j; intx@@ [100][100]; intn; scanf("%d",&n); for(i=0;i<n;i++) { for(j=0;j<n;j++) { scanf("%d",&@@ x@@ [i][j]); } } for(i=0;i<n;i++) { a=0; for(j=0;j<n;j++) { if(x@@ [i][j]==@@ 255) continue; if(x@@ [i][j]==0) a=@@ a@@ +1; } if(a@@ >0) break; } for(j=0;j<n;j++) { b=0; for(i=0;i<n;i++) { if(x@@ [i][j]==@@ 255) continue; if(x@@ [i][j]==0) b=b@@ +1; } if(b@@ >0) break; } s=(@@ a@@ -2)*(@@ b@@ -2); printf("%d",s); }  
c -1
h -1
0

intmain() { int@@ len@@ ,len2@@ ,i,j,@@ f,@@ ff@@ ; chars[@@ 300],@@ sub@@ [300],@@ replace@@ [300]; gets(s); len@@ =strlen(s); gets(sub); gets(@@ replace); len2=strlen(@@ sub); f=0; for(i=0;i<=@@ len@@ -len2@@ ;i++){ ff@@ =1; for(j=0;j<len2@@ ;j++) if(@@ sub@@ [j]!=@@ s[i+j@@ ]){@@ ff@@ =0;@@ break;} if(@@ ff@@ ==0)@@ continue; for(j=0;j<@@ i@@ ;j++)@@ printf("%c",s@@ [j]); printf("%s",@@ replace); for(j=i@@ +len2@@ ;j<@@ len@@ ;j++)@@ printf("%c",s@@ [j]); f=1; break; } if(f@@ ==0)@@ printf("%s",s); return0; }  
c -1
h -1
intn,m,@@ N@@ [100],@@ M@@ [100]; void@@ scan@@ () {inti; scanf("%d%d",&n,&m); for(i=0;i<n;i++) scanf("%d",&@@ N@@ [i]); for(i=0;i<m;i++) scanf("%d",&@@ M@@ [i]); } voidsort@@ (int@@ q,@@ inta[]) { inti,j,k,@@ t; for(i=0;i<@@ q@@ -1;i++) {@@ k=i; for(j=i+1;j<@@ q@@ ;j++) if(a[j]@@ <@@ a[k]@@ )@@ k=j; if(k!=@@ i) {t=@@ a[i]; a[i]=@@ a[k]; a[k]=@@ t;} } } voidprint() {inti; printf("%d",@@ N@@ [0]); for(i=1;i<n;i++) printf("%d",@@ N@@ [i]); for(i=0;i<m;i++) printf("%d",@@ M@@ [i]); printf("\n"); } voidmain() { scan@@ (); sort(@@ n,@@ N); sort(@@ m,@@ M@@ ); print(); }  
c -1
h -1
0

intmain() { inta,b,c; scanf("%d%d%d",&a,&b,&c); if(b==1) { printf("%d",@@ c); } if((@@ a%@@ 4==0)&&(@@ a%@@ 100@@ ==0)&&(@@ a%400==0)) { switch(@@ b) { case2: { printf("%d",@@ 31+@@ c); break; } case3: { printf("%d",31+29@@ +c); break; } case4: { printf("%d",31+29@@ +31+@@ c); break; } case5: { printf("%d",31+29@@ +31+30@@ +c); break; } case6: { printf("%d",31+29@@ +31+30+31+@@ c); break; } case7: { printf("%d",31+29@@ +31+30+31+30@@ +c); break; } case8: { printf("%d",31+29@@ +31+30+31+30+31+@@ c); break; } case9: { printf("%d",31+29@@ +31+30+31+30+31+31+@@ c); break; } case10: { printf("%d",31+29@@ +31+30+31+30+31+31+30@@ +c); break; } case11: { printf("%d",31+29@@ +31+30+31+30+31+31+30+31+@@ c); break; } case12: { printf("%d",31+29@@ +31+30+31+30+31+31+30+31+30@@ +c); break; } } } else { switch(@@ b) { case2: { printf("%d",@@ 31+@@ c); break; } case3: { printf("%d",31+28@@ +c); break; } case4: { printf("%d",31+28@@ +31+@@ c); break; } case5: { printf("%d",31+28@@ +31+30@@ +c); break; } case6: { printf("%d",31+28@@ +31+30+31+@@ c); break; } case7: { printf("%d",31+28@@ +31+30+31+30@@ +c); break; } case8: { printf("%d",31+28@@ +31+30+31+30+31+@@ c); break; } case9: { printf("%d",31+28@@ +31+30+31+30+31+31+@@ c); break; } case10: { printf("%d",31+28@@ +31+30+31+30+31+31+30@@ +c); break; } case11: { printf("%d",31+28@@ +31+30+31+30+31+31+30+31+@@ c); break; } case12: { printf("%d",31+28@@ +31+30+31+30+31+31+30+31+30@@ +c); break; } } } return0; }  
c -1
h -1
voidmain() { intx@@ [100][@@ 15],@@ a[100@@ ],b[100@@ ]={0},@@ m,@@ i,j,k; for(i=0;;i++) { for(j=0@@ ;i<@@ 15@@ ;j++) { scanf("%d",&@@ x@@ [i][j]); if(x@@ [i][j]@@ ==0||@@ x@@ [i][j]@@ ==-1) {@@ a[i]@@ =j@@ ;break;} } if(x@@ [i][j]==@@ -1@@ ){@@ m@@ =i;@@ break;} } for(i=0;i<m;i++) { for(j=0;j<@@ a[i]@@ ;j++) { for(k=0;k<@@ a[i]@@ ;k++) { if((@@ float)@@ x[i]@@ [k]@@ /@@ (@@ float)@@ x@@ [i][j]==@@ 2@@ .0@@ )@@ b[i]@@ ++; } } } for(i=0;i<m;i++) printf("%d\n",@@ b[i]); return; }  
c -1
h -1
0

intmain() { intn,k,@@ a@@ =1,@@ i,j; intsz[1000]; scanf("%d%d",&n,&k); for(i=0;i<n;i++){ scanf("%d",&sz[i]); } for(i=0;i<n;i++){ for(j=i+1;j<n;j++){ if(sz[i]+sz@@ [j]==k){ a=0; } } } while(@@ a@@ ==0){ printf("yes"); break; } while(@@ a){ printf("no"); break; } return0; }  
c -1
h -1
intmain() { intcount@@ ,@@ n,@@ j,@@ i=1; inta[20000]; scanf("%d",&n); for(i@@ ;i<=n;i++) { scanf("%d",&a[i]); for(@@ count=0,@@ j@@ =1@@ ;j<@@ i;j++) { if(a[i]==a[j]) count++; } if(i@@ ==1&&@@ count@@ ==0) printf("%d",a[i]); elseif(@@ i@@ !=1@@ &&@@ count@@ ==0) printf("%d",a[i]); } return0; }  
c -1
h -1
0

inta[100],b[100],@@ c[100],@@ m,n; voidinput() { inti; scanf("%d%d",&m,&n); for(i=0;i<m;i++) { scanf("%d",&a[i]); } for(i=0;i<n;i++) { scanf("%d",&b[i]); } } void@@ az@@ () { inti,j,t; for(j=0;j<m;j++) { for(i=0;i<m@@ -1-j;i++) { if(a[i]>a[i+1]) { t=a[i]; a[i]=a[i+1]; a[i+1]=@@ t; } } } for(j=0;j<n;j++) { for(i=0;i<n@@ -1-j;i++) { if(b[i]>b[i+1]) { t=b[i]; b[i]=b[i+1]; b[i+1]=@@ t; } } } } void@@ jch@@ () { intj; for(j=0;j<m;j++) { c[j]=@@ a[j]; } for(j=@@ m@@ ;j<@@ m+@@ n;j++) { c[j]=@@ b@@ [j@@ -@@ m]; } } voidoutput@@ () { inti; for(i=0;i<m+@@ n-1;i++) { printf("%d",c[i]); } printf("%d",c[@@ m+@@ n-1]); } voidmain() { input(); az@@ (); jch@@ (); output@@ (); }  
c -1
h -1
intmain() { intyear,month,day; intk=0; int@@ monthday@@ [12]={31,28,31,30,31,30,31,31,30,31,30,31}; scanf("%d%d%d",&year,&month,&day); if(month@@ ==1)@@ k=k@@ +day; elseif(month==@@ 2)@@ k=k@@ +31+@@ day; elseif(month==@@ 3)@@ k=k@@ +31+28@@ +day; elseif(month==@@ 4)@@ k=k@@ +31+28@@ +31+@@ day; elseif(month==@@ 5@@ )@@ k=k@@ +31+28@@ +31+30+day; elseif(month==@@ 6@@ )@@ k=k@@ +31+28@@ +31+30+31+@@ day; elseif(month==@@ 7@@ )@@ k=k@@ +31+28@@ +31+30+31+30@@ +day; elseif(month==@@ 8@@ )@@ k=k@@ +31+28@@ +31+30+31+30+31+@@ day; elseif(month==@@ 9@@ )@@ k=k@@ +31+28@@ +31+30+31+30+31+31+@@ day; elseif(month==@@ 10@@ )@@ k=k@@ +31+28@@ +31+30+31+30+31+31+30@@ +day; elseif(month==@@ 11@@ )@@ k=k@@ +31+28@@ +31+30+31+30+31+31+30+31+@@ day; elseif(month==@@ 12@@ )@@ k=k@@ +31+28@@ +31+30+31+30+31+31+30+31+30@@ +day; if(((@@ (@@ year%@@ 4==0)&&(@@ year%100!=0@@ )@@ )||(@@ year%@@ 400==0)@@ )&&(@@ month@@ >2@@ ))@@ k=k+1; printf("%d",k); return0; }  
c -1
h -1
0

intsum=0; void@@ count@@ (int@@ N@@ ,int@@ i) { if(N@@ ==1)@@ sum++; while(i<=@@ N@@ ){ if(N@@ %i==0)@@ count@@ (@@ N@@ /i,i); i++; } return; } intmain() { int@@ T@@ =0; cin>>@@ T@@ ; while(@@ T@@ --) { intN@@ =0; cin>>@@ N; int@@ i=@@ 2,@@ total@@ =1; while(i<=@@ N@@ /@@ 2) { if(N@@ %i==0) { sum=0; count@@ (@@ N@@ /i,i); total+=@@ sum; } i++; } cout<<@@ total@@ <<endl; } return0; }  
c -1
h -1
intmain() { intk,m,n,i,j,@@ sum; cin>>k; while(k@@ --) { sum=0; cin>>m>>n; inta[@@ m@@ ][n]; for(i=0;i<m;i++) for(j=0;j<n;j++) cin>>*(*(a+i)+j); if(m==1) { for(i=0;i<n;i++) sum+=*(*(a@@ )@@ +i); cout<<sum<<endl; continue; } if(n==1) { for(i=0;i<m;i++) sum+=*(*(a@@ +i)); cout<<sum<<endl; continue; } for(i=0;i<n;i++) { sum+=*(*(a@@ )@@ +i); sum+=*(*(a@@ +m-1)@@ +i); } for(i=1;i<m-1;i++) { sum+=*(*(a@@ +i)); sum+=@@ *(*(a+i)@@ +n-1); } cout<<sum<<endl; } return0; }  
c -1
h -1
0

voidmain() { int@@ len@@ [1000]; intb[@@ 26]; inta[1000]; charstr@@ [1000][@@ 26]; intm,i,j,@@ max,@@ num; charc; int@@ pos@@ ,@@ temp; scanf("%d",&m); for(i=0;i<26;i++) b[i]=0; for(i=0;i<m;i++) { scanf("%d",&a[i]); scanf("%s",@@ str[i]); len@@ [i]@@ =strlen(@@ str[i]); for(j=0;j<len@@ [i];j++) { temp=@@ str@@ [i][j]@@ -'A'; b[@@ temp@@ ]++; } } max=@@ b[0]; pos@@ =0; for(i=1;i<26;i++) { if(b[i]>max) { max=b[i]; pos@@ =i; } } c=@@ pos@@ +'A'@@ ; printf("%c\n",@@ c); printf("%d\n",max); num=0; for(i=0;i<m;i++) for(j=0;j<len@@ [i];j++) if(str@@ [i][j]==@@ c) { num++; if(num@@ <@@ max) printf("%d\n",a[i]); else@@ printf("%d",a[i]); } }  
c -1
h -1
intmain() { intn,@@ t,@@ i; char@@ d1@@ [max@@ +1],@@ d2@@ [max@@ +1]; doublea,@@ k@@ =0@@ .@@ 00@@ ,@@ m; scanf("%lf",&a); scanf("%s",@@ d1@@ ); scanf("%s",@@ d2@@ ); n=strlen(@@ d1@@ ); t@@ =strlen(@@ d2@@ ); if(n@@ !=@@ t) { printf("error"); return0; } for(i=0;i<t;i++) { if((@@ d1@@ [i]!='A')&&(@@ d1@@ [i]!='C')&&(@@ d1@@ [i]!='T')&&(@@ d1@@ [i]!='G')@@ ) { printf("error"); return0; } elseif((@@ d2@@ [i]!='A')&&(@@ d2@@ [i]!='C')&&(@@ d2@@ [i]!='T')&&(@@ d2@@ [i]!='G')@@ ) { printf("error"); return0; } else { if(@@ d1@@ [i]==@@ d2@@ [i]) { k++; } } } m@@ =1@@ .0@@ *(@@ k/@@ n); if(m@@ >@@ a) { printf("yes"); } else { printf("no"); } return0; }  
c -1
h -1
0

intmain() { intn,k,i,j,@@ a[1000]; scanf("%d%d",&n,&k); for(i=0;i<n;i++) scanf("%d",&a[i]); for(i=0;i<n-1;i++) for(j=i+1;j<n;j++) if(a[i]+a[j]==k) { printf("yes"); return0; } if(a[i]+@@ a[j]@@ !=@@ k) printf("no"); return0; }  
c -1
h -1
intmain(){ intb,@@ c,@@ i,j,@@ count; doublea,@@ x,y,@@ z; char@@ m[@@ 550@@ ],@@ n[@@ 550@@ ]; scanf("%lf@@ \n@@ %s@@ \n@@ %s@@ \n",&@@ a,@@ m,n); b=strlen(@@ m); c=strlen(@@ n); if(b@@ !=@@ c) printf("error"); j=0; if(b==@@ c){ for(i=0;@@ m[i]@@ !='\0';i++){ if(m@@ [i]!='A'&&@@ m@@ [i]!='T'&&@@ m@@ [i]!='C'&&@@ m@@ [i]!='G') j++; } for(i=0;@@ n[i]@@ !='\0';i++){ if(n@@ [i]!='A'&&@@ n@@ [i]!='T'&&@@ n@@ [i]!='C'&&@@ n@@ [i]!='G') j++; } if(j@@ >0) printf("error"); } count=0; if(b==@@ c@@ &&j@@ ==0){ for(i=0;@@ m[i]@@ !='\0';i++){ if(m@@ [i]==@@ n@@ [i]) count++; } y=@@ count; z=@@ b; x=@@ z@@ *@@ a; if(y@@ >=@@ x) printf("yes"); else printf("no"); } return0; }  
c -1
h -1
0

intmain() { intnum[@@ 110@@ ],@@ m,@@ ni@@ =0,@@ n=0,@@ maxn@@ [@@ 30@@ ]={0@@ ,@@ 0,0,0,0,0,0,0,0,@@ 0,0,0,0,0,0,0,0,@@ 0,0,0,0,0,0,0,0,@@ 0,0,0,0,@@ 0@@ }; char@@ au@@ [@@ 110][@@ 30],@@ max@@ [30]; cin>>m; inti,j; for(i=0;i<m;i++) { cin>>num[i]; cin>>@@ au@@ [i]; } for(i=0;i<m;i++) { for(j=0;@@ au@@ [i][j]@@ !='\0';j++) { if(au@@ [i][j]=='@@ A')@@ maxn@@ [0]@@ ++; if(au@@ [i][j]=='@@ B@@ ')@@ maxn@@ [1@@ ]++; if(au@@ [i][j]=='@@ C')@@ maxn@@ [2@@ ]++; if(au@@ [i][j]=='@@ D@@ ')@@ maxn@@ [3@@ ]++; if(au@@ [i][j]=='@@ E@@ ')@@ maxn@@ [4@@ ]++; if(au@@ [i][j]=='@@ F@@ ')@@ maxn@@ [5@@ ]++; if(au@@ [i][j]=='@@ G')@@ maxn@@ [@@ 6@@ ]++; if(au@@ [i][j]=='@@ H@@ ')@@ maxn@@ [@@ 7@@ ]++; if(au@@ [i][j]=='@@ I@@ ')@@ maxn@@ [@@ 8@@ ]++; if(au@@ [i][j]=='@@ J@@ ')@@ maxn@@ [@@ 9@@ ]++; if(au@@ [i][j]=='@@ K@@ ')@@ maxn@@ [10@@ ]++; if(au@@ [i][j]=='@@ L@@ ')@@ maxn@@ [11@@ ]++; if(au@@ [i][j]=='@@ M@@ ')@@ maxn@@ [12@@ ]++; if(au@@ [i][j]=='@@ N@@ ')@@ maxn@@ [@@ 13@@ ]++; if(au@@ [i][j]=='@@ O@@ ')@@ maxn@@ [@@ 14@@ ]++; if(au@@ [i][j]=='@@ P@@ ')@@ maxn@@ [@@ 15@@ ]++; if(au@@ [i][j]=='@@ Q@@ ')@@ maxn@@ [@@ 16@@ ]++; if(au@@ [i][j]=='@@ R@@ ')@@ maxn@@ [@@ 17@@ ]++; if(au@@ [i][j]=='@@ S@@ ')@@ maxn@@ [@@ 18@@ ]++; if(au@@ [i][j]=='@@ T')@@ maxn@@ [@@ 19@@ ]++; if(au@@ [i][j]=='@@ U@@ ')@@ maxn@@ [@@ 20@@ ]++; if(au@@ [i][j]=='@@ V@@ ')@@ maxn@@ [@@ 21@@ ]++; if(au@@ [i][j]=='@@ W@@ ')@@ maxn@@ [@@ 22@@ ]++; if(au@@ [i][j]=='@@ X@@ ')@@ maxn@@ [@@ 23@@ ]++; if(au@@ [i][j]=='@@ Y@@ ')@@ maxn@@ [@@ 24@@ ]++; if(au@@ [i][j]=='@@ Z@@ ')@@ maxn@@ [25@@ ]++; } } for(i=0;i<26;i++) { if(@@ maxn@@ [i]>@@ n@@ ){@@ n=@@ maxn@@ [i];@@ ni@@ =i;} } cout<<@@ (char)(@@ ni@@ +65@@ )<<endl; cout<<n<<endl; for(i=0;i<m;i++) { for(j=0;@@ au@@ [i][j]@@ !='\0';j++) { if(au@@ [i][j]==@@ 65@@ +@@ ni@@ )@@ cout<<@@ num[i]@@ <<endl; } } return0; }  
c -1
h -1
inta[100],b[100]; intn,m; main() { voidinput@@ (void@@ ); void@@ order1@@ (void@@ ); void@@ order2@@ (void@@ ); voidoutput@@ (void@@ ); input(); order1@@ (); order2@@ (); output@@ (); } voidinput@@ (void) { inti; scanf("%d%d\n",&n,&@@ m); for(i=1;i<=n;i++) scanf("%d",&a[i]); for(i=1;i<=m;i++) scanf("%d",&b[i]); } void@@ order1@@ (void) { inti,j,t; for(i=1;i<=n-1;i++) for(j=i+1;j<=n;j++) if(a[i]>=@@ a[j]@@ ){@@ t=@@ a[i];a[i]=@@ a[j];a[j]=@@ t;} } void@@ order2@@ (void) { inti,j,t; for(i=1;i<=@@ m-1;i++) for(j=i+1;j<=@@ m;j++) if(b[i]@@ >=@@ b[j]@@ ){@@ t=@@ b[i]@@ ;@@ b[i]=b[j]@@ ;@@ b[j]=@@ t;} } voidoutput@@ (void) { inti; for(i=1;i<=n;i++) printf("%d",a[i]); for(i=1;i<m;i++) printf("%d",b[i]); printf("%d",@@ b[m@@ ]); }  
c -1
h -1
0

intmain(){ intk,@@ m,n; int@@ result@@ [100]; inti,j,@@ temp1@@ =0,@@ temp2@@ =0,@@ tempr@@ =0; double@@ temp3@@ =0; scanf("%d",&k); for(@@ temp2@@ =1;@@ temp2@@ <=k;@@ temp2@@ ++){ scanf("%d%d",&m,&n); tempr@@ =0; for(i=1;i<=@@ m;i++){ for(j=1;j<=n;j++){ scanf("%d",&@@ temp1@@ ); if(i==1||i==@@ m@@ ||j@@ ==1||@@ j==@@ n){ tempr@@ +=@@ temp1@@ ; } } } result@@ [@@ temp2@@ ]=@@ tempr@@ ; } for(i=1;i<=@@ k;i++){ printf("%d\n",@@ result@@ [i]); } return0; }  
c -1
h -1
intmain(intargc,char*argv[]) { chars[@@ 260@@ ],@@ sub@@ [260],@@ re@@ [260@@ ]; inti,@@ len1,len2,@@ m,@@ xxx@@ ,@@ yyy@@ =0; gets(s); gets(sub); gets(@@ re); len1@@ =strlen(s); len2=strlen(@@ sub); for(i=0;i<len1@@ -len2@@ +1@@ ;i++){ xxx@@ =0; for(m=0;m<@@ len2@@ ;m++){ if(s@@ [i@@ +m@@ ]==@@ sub@@ [m@@ ]){ xxx@@ ++; } } if(@@ xxx@@ ==@@ len2){ for(m=0;m<@@ len2@@ ;m++){ s@@ [i@@ +m@@ ]=@@ re@@ [m]; yyy@@ ++; if(@@ yyy@@ ==@@ len2@@ )break; } if(@@ yyy@@ ==@@ len2@@ )break; } } printf("%s",s); return0; }  
c -1
h -1
0

intmain() { int@@ lj@@ (inta[@@ ],intn,int@@ m); intn,m,@@ i,j,@@ l,@@ k=0,@@ s,@@ t=0,@@ a[@@ 25],b[@@ 25]; scanf("%d",&k); for(i=0;i<k;i++) scanf("%d",&a[i]); for(i=0;i<k;i++) b[i]=@@ lj@@ (a,@@ i,@@ k); for(i=0;i<k;i++) { if(t@@ <@@ b[i]) t=b[i]; } printf("%d",t); getchar(); getchar(); getchar(); } int@@ lj@@ (inta[@@ ],intn,int@@ m) { inti,@@ t,@@ p,@@ l=0,@@ b[@@ 25]; if(n==@@ m-1) return1; else { for(i=0;i<@@ 25;i++) b[i]=0; for(i=n@@ +1;i<@@ m;i++) { if(a[i]<=@@ a[n@@ ]) { b[i]=@@ lj@@ (a,@@ i,@@ m); } } t=@@ b[@@ n@@ +1]; for(i=n@@ +1;i<@@ m;i++) { if(t@@ <@@ b[i]) t=b[i]; } return@@ t@@ +1; } }  
c -1
h -1
intmain() { intx@@ [100][100]; inta; inti,j; int@@ a1,@@ b1,@@ a2,@@ b2@@ ; a1@@ =@@ a2@@ =@@ b1@@ =@@ b2@@ =0; ints; scanf("%d",&a); for(i=0;i<a;i++) { for(j=0;j<a@@ ;j++) { scanf("%d",&@@ x@@ [i][j]); } } for(i=0;i<a;i++) { for(j=0;j<a@@ ;j++) { if(x@@ [i][j]==0) { a1@@ =i; b1@@ =j; } } } for(i=a@@ -1;i>=0;i--) { for(j=@@ a@@ -1@@ ;j>=0;j--) { if(x@@ [i][j]==0) { a2@@ =i; b2@@ =j; } } } s=(@@ b2-b1@@ +1)*(@@ a2-a1@@ +1); printf("\n@@ %d\n",@@ s); return0; }  
c -1
h -1
0

int@@ Compare@@ (constvoid*@@ elem1@@ ,@@ constvoid*@@ elem2@@ ) { return@@ *(@@ (int*)@@ (@@ elem1@@ ))@@ -@@ *(@@ (int*)@@ (@@ elem2@@ )); } intmain() { int@@ M@@ ,@@ N; scanf("%d%d",&@@ M@@ ,&@@ N); inta[100],b[100]; inti; for(i=0;i<@@ M@@ ;i++) { scanf("%d",&a[i]); } qsort@@ (a,@@ M@@ ,@@ sizeof(int),@@ Compare@@ ); for(i=0;i<@@ M@@ ;i++) { printf(@@ ""@@ ); } for(i=0;i<N;i++) { scanf("%d",&b[i]); } qsort@@ (b,@@ N@@ ,@@ sizeof(int),@@ Compare@@ ); for(i=0;i<N;i++) { printf(@@ ""@@ ); } intc[@@ 200]; for(i=0;i<@@ M@@ ;i++) { c[i]=a[i]; } intj; for(j=0;j<@@ N@@ ;j++@@ ,i++) { c[i]=@@ b[j]; } for(i=0;i<@@ M@@ +@@ N@@ -1;i++) { printf("%d",c[i]); } printf("%d",c[i]); }  
c -1
h -1
intmain() { intn,i,j; inta[20000]; scanf("%d",&n); for(i=0;i<n;i++) scanf("%d",&a[i]); for(i=1;i<n;i++) for(j=0;j<i;j++) if(a[i]==a[j]) a[i]=0; printf("%d",a[0]); for(i=1;i<n;i++) if(a[i]!=0) printf("%d",a[i]); }  
c -1
h -1
0

intmain() { chars[256],@@ sub[256],@@ re@@ [256]; inti,j,k; gets(s); gets(sub); gets(@@ re); for(i=0;i<strlen(@@ s@@ );i++) { for(j=i;j<@@ strlen(@@ sub)@@ +i@@ ;j++) { if(s@@ [j]!=@@ sub@@ [j-i@@ ]@@ )break; if(j==@@ strlen(@@ sub)@@ +i@@ -1) { for(k=j@@ ;k@@ >=i@@ ;k--) s@@ [k]=@@ re@@ [k-i@@ ]; } } if(j==@@ strlen(@@ sub)@@ +i)@@ break; } printf("%s",s); return0; }  
c -1
h -1
inta[@@ 20010@@ ]; voidmain() { intn,i,@@ tmp@@ ,@@ k,@@ ii@@ =0; scanf("%d",&n); for(i=0;i<n;i++) { scanf("%d",&@@ tmp@@ ); intj; int@@ flag=0; for(j=0;j<i;j++) { if(a[j]==@@ tmp@@ ) { flag=1; } } if(flag==0) { a[@@ ii@@ ]=@@ tmp; ii@@ ++; } } for(k=0;k<@@ ii@@ -1;k++) { printf("%d",@@ a[k]); } printf("%d",a[@@ ii@@ -1]); }  
c -1
h -1
0

intmain(){ inti,j=0,@@ k,@@ m,n,@@ e,@@ x,@@ s@@ [100],@@ t@@ [100],@@ v@@ =0; charzfc@@ [100][10],@@ jg@@ [100][10],@@ h@@ [100][10]; scanf("%d",&n); for(i=0;i<n;i++){ scanf("%s",@@ zfc@@ [i]); scanf("%d",&s[i]); } for(i=0;i<n;i++){ if(s@@ [i]@@ >=60){ t@@ [j]@@ =i; j++; } } for(i=j@@ ;i>=0;i--){ for(k=0;k<@@ i@@ -1@@ ;k++){ if(s[@@ t@@ [k]@@ ]<@@ s[@@ t@@ [k+1@@ ]@@ ]){ m=@@ t@@ [k+1]; t@@ [k+1]=@@ t@@ [k]; t@@ [k]=@@ m; } } } for(i=0;i<j@@ ;i++){ puts(@@ zfc@@ [t@@ [i]@@ ]); } for(i=0;i<n;i++){ if(s@@ [i]@@ <60){ puts(@@ zfc@@ [i]); } } return0; }  
c -1
h -1
intmain() { intn,@@ num[@@ 20000],@@ i,j; scanf("%d",&n); for(i=1;i<=n;i++) { scanf("%d",&@@ num@@ [i@@ -1]); for(j=1;j<=@@ i-1;j++) if(num@@ [j-1@@ ]==@@ num@@ [i-1@@ ]) { num@@ [i-1]@@ =0; break; } } printf("%d",@@ num@@ [0]); for(i=1;i<=n-1;i++) { if(num@@ [i]@@ !=0)@@ printf("%d",@@ num[i]); } return0; }  
c -1
h -1
0

structbook { int@@ ISBN@@ ; charname[26]; }b[@@ 999]; intmain() { inti,j,@@ m,@@ k@@ [26],@@ max=0; char@@ a,@@ d@@ ='A'; for(i=0;i<26;i++) k@@ [i]=0; scanf("%d",&m); for(i=0;i<m;i++) scanf("%d%s",&@@ b[i].@@ ISBN@@ ,@@ b[i].@@ name); for(a@@ ='A'@@ ;a@@ <=@@ 'Z'@@ ;a@@ ++) for(i=0;i<m;i++) for(j=0;j<26;j++) if(b[i].@@ name[j]==@@ a) k@@ [a@@ -'A']++; for(i=0;i<26;i++) if(k@@ [i]>=@@ max) max=@@ k@@ [i]; for(i=0;i<26;i++) if(k@@ [i]==@@ max) { d@@ +=@@ i; printf("%c\n",@@ d); printf("%d\n",max); } for(i=0;i<m;i++) for(j=0;j<26;j++) if(b[i].@@ name[j]==@@ d) printf("%d\n",b[i].@@ ISBN@@ ); return0; }  
c -1
h -1
intmain() { intk,@@ l; intm,n,i,j,@@ s1,@@ s2,@@ s3@@ ,@@ s4@@ ,@@ s; intsz[100][100]; scanf("%d",&k); int*@@ sf@@ =@@ (int*)malloc(@@ (@@ sizeof(int@@ )*@@ k@@ )); for(l=0;l<@@ k;@@ l++) { s1@@ =0; s2@@ =0; s3@@ =0; s4@@ =0; s=0; scanf("%d%d",&m,&n); for(i=0;i<m;i++) { for(j=0;j<n;j++) { scanf("%d",&sz[i][j]); } } for(i=0;i<m;i++) { s1@@ +=@@ sz[i]@@ [0]; s2@@ +=@@ sz[i]@@ [n-1]; } for(j=0;j<n;j++) { s3@@ +=@@ sz[0]@@ [j]; s4@@ +=@@ sz[m@@ -1][j]; } s+=@@ s1@@ +@@ s2@@ +@@ s3@@ +@@ s4@@ -@@ sz[0][@@ 0]-@@ sz[0][@@ n-1]-@@ sz[@@ m-1][0]-@@ sz[@@ m-1][@@ n-1]; sf@@ [l@@ ]=@@ s; } for(l=0;l<@@ k;@@ l++) { printf("%d\n",@@ sf@@ [l]); } return0; }  
c -1
h -1
0

intmain() { intk=0,@@ m=0,@@ n=0; int@@ ans@@ =0,@@ a=0; cin>>k; for(inti=0;i<k;i++) { cin>>m>>n; for(intj=0;j<m;j++) for(intl@@ =0;@@ l@@ <n;@@ l++) { cin>>a; if(!@@ l@@ ||@@ l@@ ==@@ (n-1@@ )) ans@@ +=@@ a; elseif(@@ !@@ j@@ ||j==@@ (m@@ -1)) ans@@ +=@@ a; } cout<<ans@@ <<endl; ans=0; } return0; }  
c -1
h -1
voidmain() { intk,i,j,@@ l=0; inta[@@ 25@@ ]={0},b[@@ 25@@ ]={0}; scanf("%d",&k); for(i=0;i<=k-1;i++) scanf("%d",&a[i]); b[k@@ -1]@@ =1; for(i=k-2;i>=0;i--) { for(j=i+1;j<=@@ k@@ -1;j++) if(a[i]>=@@ a[j]&&@@ b[i]@@ <=@@ b[j]) b[i]=b[j]+1; if(b[i]@@ ==0) b[i]=1; } for(i=0;i<=@@ k@@ -2;i++) for(j=0;j<=@@ k@@ -2@@ -i;j++) if(b[j]>b[j+1]) { l=@@ b@@ [j+1]; b[j+1]=@@ b[j]; b[j]=@@ l; } printf("%d\n",@@ b[k@@ -1]); }  
c -1
h -1
0

voidmain() { intj,@@ n,@@ i,@@ book@@ ,@@ max=0,@@ pos@@ ,a[@@ 30@@ ][@@ 1000]={0}; chars@@ [100]; scanf("%d",&n); for(i=0;i<n;i++) { scanf("%d%s",&@@ book@@ ,&@@ s); for(j=0;j<strlen(@@ s@@ );j++) { a[@@ s[j]@@ -'A'@@ ][0]@@ ++; a[@@ s[j]@@ -'A'@@ ][@@ a[@@ s[j]@@ -'A'@@ ][0]@@ ]=@@ book@@ ; } } for(i=0;i<26;i++) if(a[i]@@ [0]@@ >max) { max=@@ a[i][0]; pos@@ =i; } printf("%c\n%d\n",@@ pos@@ +'A',@@ a[@@ pos@@ ][0]@@ ); for(i=1;i<=@@ a[@@ pos@@ ][0]@@ ;i++) printf("%d\n",a[@@ pos@@ ][i]); }  
c -1
h -1
intmain() { inty,m,@@ d; int@@ mth@@ [13]={0,31,28,31,30,31,30,31,31,30,31,30,31}; intleap@@ ; intsum=0; inti; cin>>y>>m>>d; if((y%@@ 400==0)||(@@ y%100!=0@@ )&&(@@ y%@@ 4@@ ==0)) leap@@ =1; else leap@@ =0; if(leap@@ ) mth@@ [2]=@@ 29; for(i=1;i<=@@ m-1;i++) sum=sum+@@ mth@@ [i]; sum=sum+@@ d; cout<<@@ sum; return0; }  
c -1
h -1
0

intmain(){ inta[@@ 105@@ ][@@ 105@@ ]={0},@@ row,col; cin>>row>>col; for(inti=0;i<@@ row;i++){ for(intj=0;j<@@ col@@ ;j++){ cin>>*(*(a+i)+j); } } for(inti=0;i<@@ row+col@@ -1;i++){ for(intj=0;j<@@ row@@ ;j++){ for(intk=0;k<@@ col@@ ;k++){ if(j@@ +k@@ ==@@ i)@@ cout<<*(*(a@@ +j)@@ +k@@ )<<endl; } } } return0; }  
c -1
h -1
struct@@ grade { intnum; intchinese; intmath; int@@ all@@ ; }stu[100000]; intmain() { intn,i,@@ e,f,@@ g,@@ a,b,@@ c; e=0; f=0; g=0; a=0; b=0; c=0; scanf("%d",&n); for(i=0;i<=@@ n-1;i++){ scanf("%d%d%d",&stu[i].num,&stu[i].@@ chinese@@ ,&stu[i].math); stu[i].@@ all@@ =stu[i].@@ chinese+@@ stu[i].@@ math; } for(i=0;i<=@@ n-1;i++){ if(stu[i].@@ all@@ >@@ e@@ ){ e=@@ stu[i].@@ all@@ ; a=i; } } for(i=0;i<=@@ n-1;i++){ if(stu[i].@@ all@@ <=@@ e@@ &&stu[i].@@ all@@ >@@ f@@ &&i!=@@ a){ f@@ =stu[i].@@ all@@ ; b=i; } } for(i=0;i<=@@ n-1;i++){ if(stu[i].@@ all@@ <=@@ f@@ &&stu[i].@@ all@@ >@@ g@@ &&i!=@@ a@@ &&i!=@@ b){ g@@ =stu[i].@@ all@@ ; c=i; } } printf("%d%d\n",stu[@@ a@@ ].num,stu[@@ a@@ ].@@ all@@ ); printf("%d%d\n",stu[@@ b@@ ].num,stu[@@ b@@ ].@@ all@@ ); printf("%d%d\n",stu[@@ c@@ ].num,stu[@@ c@@ ].@@ all@@ ); return0; }  
c -1
h -1
0

intmain() { intn; scanf("%d",&n); fflush@@ (@@ stdin@@ ); inti,j,k,@@ m; int@@ lie@@ ,@@ h; int@@ sum1@@ =0,@@ sum2@@ =0,@@ sum3@@ =0,@@ sum4@@ =0,@@ sum=0; for(i=0;i<n;i++) { sum1@@ =0,@@ sum2@@ =0,@@ sum3@@ =0,@@ sum4@@ =0,@@ sum=0; scanf("%d%d",&@@ h@@ ,&@@ lie@@ ); int@@ matrix@@ [h@@ ][@@ lie@@ ]; for(j=0;j<@@ h@@ ;j++) for(k=0;k<@@ lie@@ ;k++) { scanf("%d",&@@ matrix@@ [j]@@ [k]); } fflush@@ (@@ stdin@@ ); if(h@@ ==1&&@@ lie@@ ==1) { printf("%d\n",@@ matrix@@ [0][@@ 0]@@ ); return0; } for(m=0;m<@@ lie@@ ;m++) { sum1@@ +=@@ matrix@@ [0][@@ m]; sum2@@ +=@@ matrix@@ [h@@ -1@@ ][@@ m]; } for(m=0;m<@@ h@@ ;m++) { sum1@@ +=@@ matrix@@ [m@@ ][0]; sum2@@ +=@@ matrix@@ [m@@ ][@@ lie@@ -1]; } sum=@@ sum1@@ +@@ sum2@@ +@@ sum3@@ +@@ sum4@@ -(@@ matrix@@ [0][@@ 0]@@ +@@ matrix@@ [0][@@ lie@@ -1]@@ +@@ matrix@@ [h@@ -1@@ ][0]+@@ matrix@@ [h@@ -1@@ ][@@ lie@@ -1]); printf("%d\n",sum); } return0; }  
c -1
h -1
intmain() { inti,j,@@ k@@ =1,@@ l,@@ m,n,@@ a[@@ 20000],b[@@ 90@@ ],@@ x; cin>>n; for(i=0;i<n;i++) cin>>a[i]; b[0]=@@ a[0]; for(j=0;j<n;j++) { for(l=0;l<@@ k;@@ l++) { if(a[j]==@@ b[l@@ ]) {m@@ =1;} } if(m@@ !=1) { b[k]=@@ a[j]; k++; } m=0; } cout<<@@ b[0]; for(x@@ =1;@@ x@@ <k;@@ x++) cout<<""<<@@ b[@@ x@@ ]; return0; }  
c -1
h -1
0

intmain() { chars[256],@@ z@@ [256],@@ r@@ [256]; inti; cin.getline(@@ s,@@ 256); cin.getline(@@ z,@@ 256); cin.getline(@@ r,@@ 256); char*@@ p=strstr(@@ s,@@ z); if(p@@ ==NULL) cout<<@@ s; else { char*@@ q=@@ s; for(i=0;i<@@ (p@@ -@@ q@@ );i++) cout<<@@ s[i]; cout<<@@ r; p=p+@@ (@@ strlen(@@ z@@ )); while(@@ *p@@ !='\0') { cout<<@@ *p; p++; } } return0; }  
c -1
h -1
voidmain() { inti,j=0,@@ a[100][100],@@ s[@@ 1000@@ ],b[100@@ ]={0},@@ k=0; for(i=0;i<@@ 1000@@ ;i++) { scanf("%d",&s[i]); if(s[i]==@@ -1)break; } for(i=0;s[i]@@ !=@@ -1;i++) { if(s@@ [i]!=0) { a[k]@@ [j]=@@ s[i]; j++; } else { a[k]@@ [j]@@ =0; j=0; k++; } } a[k@@ ][0]@@ =-1; for(i=0;a[i]@@ [0]@@ !=@@ -1;i++) { for(j=0;@@ a[i][j]@@ !=0;j++) { for(k=0;@@ a[i][k]@@ !=0@@ ;k++) { if(a[i][j]==@@ 2*@@ a[i]@@ [k]) b[i]@@ ++; } } printf("%d\n",@@ b[i]); } }  
c -1
h -1
0

intmain() { intn,@@ sigma@@ ; int@@ sb@@ =0; scanf("%d%d",&n,&@@ sigma@@ ); intsz[1000]; for(inti=0;i<n;i++) { scanf("%d",&sz[i]); } for(intj=0;j<n;j++) { for(intk=0;k<@@ n;k++) { if(k==@@ j) { continue; } elseif(@@ k@@ !=@@ j) { if(sz@@ [j]+@@ sz@@ [k]==@@ sigma@@ ) { sb@@ =1; break; } } } if(@@ sb@@ ==1) { break; } } if(@@ sb@@ ==1) { printf("yes"); } else { printf("no"); } return0; }  
c -1
h -1
intmain() { intk,m,n,i,j,@@ s=0,@@ a[@@ 102@@ ][@@ 102@@ ]; cin>>k; while(k@@ >0) { s=0; cin>>m>>n; for(i=1;i<=m;i++) for(j=1;j<=n;j++) cin>>a[i][j]; for(i=1;i<=m;i++) { s=s+@@ a[i][1]@@ +@@ a[i][@@ n]; } for(j=2;j<=@@ n-1;j++) { s=s+@@ a[1]@@ [j]+@@ a[m]@@ [j]; } cout<<s<<endl; k--; } }  
c -1
h -1
0

intmain(){ doublen,@@ m; inti,@@ a,b,c,d,@@ e; char@@ w@@ [501],@@ f@@ [501]; scanf("%lf",&n); scanf("%s%s",@@ w,@@ f); a=0; b=0; c=strlen(@@ w); d@@ =strlen(@@ f); e=0; if(c@@ !=@@ d@@ ){ e=1; } else{ for(i=0;i<c@@ ;i++){ if(!@@ (@@ w@@ [i]=='A'||@@ w@@ [i]=='C'||@@ w@@ [i]=='T'||@@ w@@ [i]=='@@ G')){ e=1; break; } } for(i=0;i<d@@ ;i++){ if(!@@ (@@ f@@ [i]=='A'||@@ f@@ [i]=='C'||@@ f@@ [i]=='T'||@@ f@@ [i]=='@@ G')){ e=1; break; } } } if(e@@ ==1){@@ printf("error"); } else{ for(i=0;i<d@@ ;i++){ if(w@@ [i]==@@ f@@ [i]){ a++; } b++; } m@@ =1.0*@@ a/@@ b; if(m@@ >=@@ n@@ ){@@ printf("yes"); } elseif(m@@ <n@@ ){@@ printf("no"); } } return0; }  
c -1
h -1
intmain() { intk,m,n,@@ a[100][100],@@ sum,@@ p,q; inti,j,@@ h; cin>>k; for(h@@ =1;@@ h@@ <=k;@@ h++) { cin>>m>>n; p=0; q=0; for(i=1;i<=m;i++) { for(j=1;j<=n;j++) { cin>>a[i][j]; p=p+@@ a[i][j]; } } for(i=2@@ ;i<@@ m;i++) { for(j=2@@ ;j<n;j++) q=q@@ +@@ a[i][j]; } sum=@@ p@@ -@@ q; cout<<sum<<endl; } return0; }  
c -1
h -1
0

intk=0; inta[100]; int@@ dp@@ [100]; int@@ solve@@ () { int@@ ans=0; dp@@ [0]=1; for(inti=1;i<@@ k;i++) { dp@@ [i]=1; for(intj=0;j<i;j++) { if(a[j]>=a[i]&&@@ dp@@ [j]+1>@@ dp@@ [i]) { dp@@ [i]=@@ dp@@ [j]+1; } } if(@@ dp@@ [i]>@@ ans@@ ) { ans=@@ dp@@ [i]; } } return@@ ans; } intmain() { freopen@@ (@@ "@@ input@@ .@@ txt@@ ",@@ "@@ r@@ ",@@ stdin@@ ); freopen@@ (@@ "@@ output@@ .@@ txt@@ ",@@ "@@ w@@ ",@@ stdout@@ ); scanf("%d",&k); for(inti=0;i<k;i++) { scanf("%d",&a[i]); } printf("%d\n",@@ solve@@ (@@ )); return0; }  
c -1
h -1
main() { intk,i,@@ a[@@ 25@@ +@@ 10],@@ n[@@ 25@@ +@@ 10],@@ s; scanf("%d",&k); for(i=0;i<k;i++) { scanf("%d",&a[i]); n@@ [i]=1; } for(i=k-2;i>=0;i--) { intj; for(j=i+1;j<=@@ k@@ -1;j++) { if((@@ a[i]@@ >=@@ a[j]@@ )&&(@@ n[i]@@ <=@@ n@@ [j]@@ ))@@ n[i]=@@ n@@ [j]+1; } } s=@@ n@@ [0]; for(i=0;i<k;i++) { if(n@@ [i]>@@ s)@@ s=@@ n[i]; } printf("%d",s); return0; }  
c -1
h -1
1


intmain(){ int@@ c,d,@@ e,@@ count=0,@@ i; double@@ result@@ ,@@ n; scanf("%lf",&n); chara[500],b[500]; scanf("%s%s",a,b); c@@ =strlen(a); d@@ =strlen(b); if(c@@ !=@@ d) printf("error"); else{ for(i=0;i<c@@ ;i++){ if((a[i]!='@@ A'&&a[i]!='T'&&a[i]!='C'&&a[i]!='G')||(b[i]!='A'&&b[i]!='T'&&b[i]!='C'&&b[i]!='@@ G')){ printf("error"); result@@ =-1; break; } else{ if(a[i]==b[i]) count++; } } if(result@@ !=@@ -1){ result@@ =(double)@@ count@@ /@@ c; if(result@@ >n) printf("yes"); else printf("no"); } } return0; }  
c -1
h -1
intmain() { int@@ bian@@ ,@@ row,col; int@@ shuzu@@ [@@ 500@@ ][@@ 500]; inti,j,@@ m=0,@@ n=0; intsum; scanf("%d",&@@ bian@@ ); row@@ =@@ bian@@ ; col@@ =@@ bian@@ ; for(i=0;i<row;i++) { for(j=0;j<col;j++) { scanf("%d",&@@ shuzu@@ [i][j]); } } for(i=0;i<row;i++) { for(j=0;j<col;j++) { if(shuzu@@ [i][j]==0) { m@@ +=1; break; } } } for(j=0;j<col;j++) { for(i=0;i<row;i++) { if(shuzu@@ [i][j]==0) { n@@ +=1; break; } } } sum=(@@ m@@ -2)*(@@ n-2@@ ); printf("%d",sum); return0; }  
c -1
h -1
0

structpatient { charname@@ [10]; intage; }@@ pat@@ [100]; voidmain() { intn,i,j=0,@@ k=0,@@ l; structpatient@@ b[100@@ ]; structpatient@@ c[100]; structpatient@@ t; scanf("%d",&n); for(i=0;i<n;i++) scanf("%s%d",@@ pat[i].@@ name@@ ,&@@ pat@@ [i].age); for(i=0;i<n;i++) { if(pat@@ [i].age<60) { b[j]=@@ pat@@ [i]; j++; } else { c@@ [k]=@@ pat@@ [i]; k++; } } for(i=0;i<@@ k-1;i++) for(l=0;l<@@ k-1@@ -i@@ ;l++) if(@@ c[@@ l@@ ].age@@ <@@ c[@@ l@@ +1@@ ].age) { t=@@ c[@@ l@@ ]; c[@@ l@@ ]=@@ c[@@ l@@ +1]; c[@@ l@@ +1]=@@ t; } for(i=0;i<k;i++) printf("%s\n",@@ c@@ [i].@@ name); for(i=0;i<j;i++) printf("%s\n",@@ b[i].@@ name); }  
c -1
h -1
intmain() { double@@ a[@@ 16]; while(cin>>@@ a[0]) { if(a[0]==-1) break; else { intcount@@ =0,@@ i=0; do { i++; cin>>a[i]; }while(@@ a[i]@@ !=0); for(intj=0;j<@@ i-1;j++) { for(intk@@ =j+1@@ ;k<@@ i;k++) { if((@@ a[k]@@ /@@ a[j]==@@ 2@@ )||(@@ a[j]@@ /@@ a[k]==@@ 2@@ )) count++; } } cout<<count<<endl; } } return0; }  
c -1
h -1
0

intmain(){ inti,j,@@ l1,l2,@@ count=0,@@ o@@ =1; double@@ r; chara[@@ 1000],b[1000]; scanf("%lf",&@@ r); scanf("%s",a); scanf("%s",b); l1@@ =strlen(a); l2@@ =strlen(b); if(l1!=l2@@ ){ printf("error"); o@@ =0; } else{ for(i=0;i<l1;i++){ if((a[i]!='@@ A'&&a[i]!='T'&&a[i]!='G'&&a[i]!='@@ C')||(@@ b[i]!='A'&&b[i]!='T'&&b[i]!='G'&&b[i]!='@@ C')){ printf("error"); o@@ =0; break; } else{ if(a[i]==b[i]@@ )@@ count++; } } if(1.0*@@ count@@ /@@ l1@@ >@@ r@@ &&@@ o@@ ==1)@@ printf("yes"); elseif(@@ o@@ ==1)@@ printf("no"); } scanf("%d",&@@ i); return0; }  
c -1
h -1
ints@@ [100]={0},@@ t@@ [100]={0},@@ n,i,j,@@ m=0; char@@ ss@@ [100][100]; int@@ cmp@@ (constvoid*a,constvoid*@@ b) {@@ return(@@ *(int*)@@ b@@ -*@@ (int*)@@ a@@ );} intmain() { scanf("%d",&n); for(i=0;i<n;i++) scanf("%s%d",@@ ss@@ [i],&@@ s[i]); for(j=0;j<n;j++) { m=0; for(i=0;i<n;i++) {@@ m=m@@ >@@ s[i]@@ ?@@ m@@ :@@ s[i]@@ ;} if(m@@ <60@@ ){@@ break;} for(i=0;i<n;i++) { if(s[i]==@@ m) {@@ printf("%s\n",@@ ss@@ [i]); s[i]@@ =-@@ 1@@ ;} } } for(i=0;i<n;i++) {@@ if(s@@ [i]@@ !=-1) {@@ printf("%s\n",@@ ss@@ [i]);} } }  
c -1
h -1
0

intmain() { intm,n,@@ i,@@ t@@ ,j; inta[@@ 2][@@ 1000]; scanf("%d%d",&m,&n); for(i=0;i<m;i++) scanf("%d",&@@ a[0]@@ [i]); for(i=0;i<n;i++) scanf("%d",&@@ a[1]@@ [i]); for(j=0;j<m-1;j++) for(i=0;i<m@@ -1-j;i++) if(a[0]@@ [i]>@@ a[0]@@ [i+1]) { t=@@ a[0][i]; a[0]@@ [i]=@@ a[0]@@ [i+1]; a[0]@@ [i+1]=@@ t; } for(j=0;j<n-1;j++) for(i=0;i<n@@ -1-j;i++) if(@@ a[1]@@ [i]>@@ a[1]@@ [i+1]) { t=@@ a[1]@@ [i]; a[1]@@ [i]=@@ a[1]@@ [i+1]; a[1]@@ [i+1]=@@ t; } for(i=0;i<m;i++) printf("%d",@@ a[0]@@ [i]); for(i=0;i<n-1;i++) printf("%d",@@ a[1]@@ [i]); printf("%d\n",@@ a[1@@ ][@@ n-1]); }  
c -1
h -1
intmain() { inty,m,d,@@ i,@@ x; scanf("%d%d%d",&y,&m,&d); x=0; if(y%@@ 4!=0@@ ||(@@ y%@@ 100==0&&@@ y%@@ 400!=0)) {@@ for(i=1;i<m;i++) {@@ if(i==1||i==3||i==5||i==7||i==8||i==@@ 10) {@@ x=x+@@ 31@@ ;} elseif(i==@@ 4||i==6||i==9||i==@@ 11@@ ){@@ x=x@@ +30@@ ;} elseif(i==@@ 2@@ ){@@ x=x+@@ 28@@ ;} }} else {@@ for(i=1;i<m;i++) {@@ if(i==1||i==3||i==5||i==7||i==8||i==@@ 10) {@@ x=x+@@ 31@@ ;} elseif(i==@@ 4||i==6||i==9||i==@@ 11@@ ){@@ x=x@@ +30@@ ;} elseif(i==@@ 2@@ ){@@ x=x+@@ 29@@ ;} }} x=x@@ +d; printf("%d",x); return0; }  
c -1
h -1
0

voidmain() { intn,i,j,@@ max=0,@@ seq@@ =0; inta[@@ 26]={0}; scanf("%d",&n); structbook { intnum; charstr@@ [26]; }@@ book[999]; for(i=0;i<n;i++) scanf("%d%s",&book[i].@@ num,&@@ book[i].@@ str); for(i=0;i<n;i++) { for(j=0;j<26;j++) a[@@ (@@ book[i].@@ str@@ [j]-65@@ )@@ ]++; } for(i=0;i<26;i++) if(a[i]@@ >max){max=@@ a[i];@@ seq@@ =i;} printf("%c\n",@@ seq@@ +65); printf("%d\n",max); for(i=0;i<n;i++) { for(j=0;j<26;j++) if(book[i].@@ str@@ [j]==@@ seq@@ +65@@ ){@@ printf("%d\n",book[i].@@ num@@ );break;} } }  
c -1
h -1
int@@ search@@ (@@ chara[@@ ],@@ charb[@@ ]) { int@@ la@@ =strlen(@@ a)@@ ,lb@@ =strlen(@@ b@@ ),@@ i,j; for(i=0;i<=@@ lb@@ -@@ la;i++) { for(j=0;j<@@ la@@ ;j++) if(a[j]!=@@ b@@ [i+j@@ ]) break; if(j==@@ la@@ ) return@@ i; } return@@ 999@@ ; } intmain() { chars[@@ 300],@@ a[@@ 300],b[@@ 300]; intm,@@ i; scanf("%s@@ %s%s",&@@ s@@ ,&@@ a,&b); m=@@ search@@ (a,@@ s); if(m==@@ 999@@ ) { printf("%s\n",@@ s); getchar(); getchar(); return0; } for(i=0;i<m;i++) printf("%c",s[i]); printf("%s",@@ b); for(i@@ +=@@ strlen(a)@@ ;i<@@ strlen(@@ s@@ );i++) printf("%c",s[i]); getchar(); getchar(); return0; }  
c -1
h -1
0

intmain(){ charstr@@ [257],@@ sub@@ [257],@@ rep@@ [257]; int@@ result=0; inta,b,c,@@ i,@@ d,@@ e=0,@@ f,@@ g,@@ h@@ ,j,@@ k; int@@ len@@ [256]; gets(str); gets(sub); gets(@@ rep); a=strlen(@@ str); b=strlen(@@ sub); c=strlen(@@ rep); for(i=0;i<a;i++){ for(d@@ =0;d@@ <b@@ -1;@@ d@@ ++){ if((@@ str@@ [i@@ +d@@ ]==@@ sub@@ [d@@ ]@@ )&&(@@ str@@ [i@@ +d@@ +1@@ ]==@@ sub@@ [d@@ +1@@ ])@@ ){ result=1; len@@ [@@ e@@ ]=i; e++; } break; } } f=@@ len@@ [0]; if(result@@ ==1){ for(@@ g@@ =0;@@ g@@ <@@ f@@ ;@@ g@@ ++){ printf("%c",str@@ [@@ g@@ ]); } for(h=0;h@@ <@@ c;@@ h@@ ++){ printf("%c",@@ rep@@ [h@@ ]); } for(j=0;j<a@@ -@@ f@@ -b@@ ;j++){ printf("%c",str@@ [@@ f@@ +@@ b@@ +j@@ ]); } } elseif(@@ result@@ ==0){ puts(@@ str); } return0; }  
c -1
h -1
intmain() { intb,@@ c,d,@@ sum=0; inta[@@ 20]; a[0]@@ =0; a[1@@ ]=31; a[2]=@@ 59@@ ; a[@@ 3@@ ]=@@ 90@@ ; a[@@ 4@@ ]=@@ 120@@ ; a[@@ 5@@ ]=@@ 151@@ ; a[@@ 6@@ ]=@@ 181@@ ; a[@@ 7@@ ]=@@ 212@@ ; a[@@ 8@@ ]=@@ 243@@ ; a[@@ 9@@ ]=@@ 273@@ ; a[@@ 10@@ ]=@@ 304@@ ; a[@@ 11@@ ]=@@ 334@@ ; a[@@ 12@@ ]=@@ 365@@ ; scanf("%d%d%d",&@@ b,@@ &@@ c,@@ &@@ d); if((@@ b@@ %@@ 4!=0@@ )||(@@ b@@ %@@ 100==0&&@@ b@@ %@@ 400@@ !=0@@ )){ sum=@@ a[c@@ -1]@@ +d; } else{ if(c@@ <@@ 3@@ ){ sum=@@ a[c@@ -1]@@ +d; } else{ sum=@@ a[c@@ -1]@@ +d@@ +1; } } printf("%d",sum); return0; }  
c -1
h -1
0

intmain(){ intn,m,@@ i,j,@@ a[100][100],@@ x=0,@@ y=0,@@ k=0,@@ l=0; scanf("%d%d",&n,&m); for(i=0;i<n;i++) for(j=0;j<m;j++) scanf("%d",&a[i][j]); for(;@@ ;@@ ){ printf("%d\n",@@ a[x@@ ][y@@ ]); if(x==@@ n-1@@ &&@@ y@@ ==@@ m@@ -1)break; if(y@@ ==0||@@ x@@ ==@@ n-1){ if(l@@ ==@@ m-1)@@ k++; else@@ l++; x=@@ k;@@ y=@@ l; continue; } x@@ ++;@@ y@@ --; } }  
c -1
h -1
intmain() { intn; int@@ x,y; inta[100][100]; inti,j,k,l,@@ m; ints; cin>>n; for(i=1;i<=n;i++) { cin>>x@@ >>@@ y; for(j=0;j<@@ x;j++) { for(k=0;k<@@ y@@ ;k++) { cin>>a[j]@@ [k]; } } s=0; for(l=0;l<@@ y@@ ;l++) { s=s+@@ a[0][@@ l@@ ]+@@ a[x@@ -1@@ ][l@@ ]; } for(m=1;m@@ <@@ x@@ -1@@ ;m++) s=s+@@ a[m@@ ][0]+@@ a[m@@ ][y@@ -1]; cout<<s<<endl; } return0; }  
c -1
h -1
0

intmain() { double@@ k; scanf("%lf",&@@ k); int@@ flag@@ ,i,@@ x=0; char@@ d1@@ [501],@@ d2@@ [501]; scanf("%s%s",@@ d1@@ ,@@ d2@@ ); for(i=0;i<(@@ strlen(@@ d1@@ )@@ -1)@@ &&i@@ <(@@ strlen(@@ d2@@ )@@ -1);i++) { if((@@ d1@@ [i]=='A'||@@ d1@@ [i]=='T'||@@ d1@@ [i]=='C'||@@ d1@@ [i]=='@@ G')&&(@@ d2@@ [i]=='A'||@@ d2@@ [i]=='T'||@@ d2@@ [i]=='C'||@@ d2@@ [i]=='@@ G')) flag=1; else { flag=0; break; } } if(strlen(@@ d1@@ )!=strlen(@@ d2@@ )||@@ flag@@ ==0) { printf("error"); return0; } else { for(i=0;i<strlen(@@ d1@@ );i++) { if(@@ d1@@ [i]==@@ d2@@ [i]) x++; } } if(1.0*@@ x/@@ (@@ strlen(@@ d1@@ )@@ -1)@@ >@@ k) printf("yes"); else printf("no"); return0; }  
c -1
h -1
intmain() { intn,@@ num[@@ 20000],@@ i,j; scanf("%d",&n); for(i=1;i<=n;i++) { scanf("%d",&@@ num@@ [i@@ -1]); for(j=1;j<=@@ i-1;j++) if(num@@ [j-1@@ ]==@@ num@@ [i-1@@ ]) { num@@ [i-1]@@ =0; break; } } printf("%d",@@ num@@ [0]); for(i=1;i<=n-1;i++) { if(num@@ [i]@@ !=0)@@ printf("%d",@@ num[i]); } return0; }  
c -1
h -1
0

intmain(){ inti,j,k,@@ p=0,@@ q=0,@@ judge@@ =0; doublen; chara[501],b[501]; scanf("%lf",&n); scanf("%s",a); scanf("%s",b); p@@ =strlen(a); for(i=0;i<p@@ ;i++){ if(a[i]!='A'&&a[i]!='T'&&a[i]!='C'&&a[i]!='@@ G'){ printf("error"); return0; } } for(i=0;i<p@@ ;i++){ if(@@ b[i]!='A'&&b[i]!='T'&&b[i]!='C'&&b[i]!='@@ G'){ printf("error"); return0; } } for(i=0;i<p@@ ;i++){ if(a[i]==b[i]){ q++; } } if(1.0*@@ q@@ /@@ p@@ >=@@ n){ printf("yes"); } else{ printf("no"); } return0; }  
c -1
h -1
intmain(){ doublen; inti,@@ l,@@ r@@ =1,@@ s=0; chara[@@ 2][@@ 500]; scanf("%lf",&n); for(i=0;i<2@@ ;i++){ scanf("%s",@@ a[i]); } if(strlen(@@ a[0]@@ )!=strlen(@@ a[1@@ ])@@ ){ r=0; }else{ l=strlen(@@ a[0]); for(i=0;i<l;i++){ if((@@ a[0]@@ [i]!='A'&&@@ a[0]@@ [i]!='C'&&@@ a[0]@@ [i]!='T'&&@@ a[0]@@ [i]!='G')||(@@ a[1]@@ [i]!='A'&&@@ a[1]@@ [i]!='C'&&@@ a[1]@@ [i]!='T'&&@@ a[1]@@ [i]!='G')){ r=0; break; }elseif(@@ a[0]@@ [i]==@@ a[1]@@ [i]){ s++; } } } if(r@@ ==0){ printf("error"); }elseif(@@ 1.0*@@ s/@@ l@@ >=@@ n){ printf("yes"); }else{ printf("no"); } return0; }  
c -1
h -1
1


intmain() { intsz@@ [100][100],@@ n,@@ s@@ [100]={0},@@ i,j,@@ len,@@ col,@@ m,@@ sum=0; scanf("%d",&n); for(m=0;m@@ <n;m++) { scanf("%d%d",&@@ len@@ ,&@@ col); for(i=0;i<len;i++) { for(j=0;j<col;j++) { scanf("%d",&sz[i][j]); sum+=@@ sz[i]@@ [j]; } } if(col@@ ==1||@@ len@@ ==1) { s[m@@ ]=@@ sum; } else { for(j=0;j<col@@ -1;j++) { s[m@@ ]+=@@ sz[0]@@ [j]; } for(i=0;i<len@@ -1;i++) { s[m@@ ]+=@@ sz[i]@@ [@@ col@@ -1]; } for(j=1;j<@@ col;j++) { s[m@@ ]+=@@ sz[@@ len@@ -1][j]; } for(i=1;i<@@ len@@ ;i++) { s[m@@ ]+=@@ sz[i]@@ [0]; } } } for(i=0;i<n;i++) { printf("%d\n",@@ s[i]); } return0; }  
c -1
h -1
intmain(){ structstudent{ intnumber; intchinese; intmath; int@@ all@@ ; }stu[100000]; intn,i,j,@@ n1@@ =1,@@ n2@@ =1,@@ n3@@ =1; cin>>n; for(i=1;i<=n;i++){ cin>>@@ stu[i].@@ number@@ >>stu[i].@@ chinese@@ >>stu[i].@@ math; stu[i].@@ all@@ =stu[i].@@ chinese+@@ stu[i].@@ math; } for(i=2;i<=@@ n;i++){ if(@@ stu[@@ n1@@ ].@@ all@@ <@@ stu[i].@@ all@@ ) n1@@ =i; } for(i=2;i<=@@ n;i++){ if(i==@@ n1@@ ) continue; if(@@ stu[@@ n2@@ ].@@ all@@ <@@ stu[i].@@ all@@ ) n2@@ =i; } for(i=2;i<=@@ n;i++){ if(i==@@ n2@@ ||i==@@ n1@@ ) continue; if(@@ stu[@@ n3@@ ].@@ all@@ <@@ stu[i].@@ all@@ ) n3@@ =i; } cout<<@@ stu[@@ n1@@ ].@@ number@@ <<""<<@@ stu[@@ n1@@ ].@@ all@@ <<endl; cout<<@@ stu[@@ n2@@ ].@@ number@@ <<""<<@@ stu[@@ n2@@ ].@@ all@@ <<endl; cout<<@@ stu[@@ n3@@ ].@@ number@@ <<""<<@@ stu[@@ n3@@ ].@@ all@@ <<endl; return0; }  
c -1
h -1
0

intmain() { struct@@ people@@ { charnum[@@ 10@@ ];@@ intage; }@@ peo1@@ [100],@@ peo2@@ [100],@@ peo3@@ [100],@@ e; intn,i,j,@@ m,@@ k; scanf("%d",&n); chars@@ [100][10]; for(i=0;i<n;i++) { scanf("%s",@@ peo1@@ [i].num); scanf("%d",&@@ peo1@@ [i].age); } j=0; m=0; for(i=0;i<n;i++) { if(@@ peo1@@ [i].age>=60) { peo2@@ [j]=@@ peo1@@ [i]; j++; } elseif(@@ peo1@@ [i].age<60) { peo3@@ [m]=@@ peo1@@ [i]; m++; } } for(k=1;k<=@@ j@@ ;k++) { for(i=0;i<j@@ -@@ k;i++) { if(@@ peo2@@ [i].age@@ <@@ peo2@@ [i+1@@ ].age) { e=@@ peo2@@ [i+1]; peo2@@ [i+1]=@@ peo2@@ [i]; peo2@@ [i]=@@ e; } } } inta,b,c; for(a@@ =0,@@ i@@ =0;a@@ <j@@ ;a@@ ++@@ ,i++) { strcpy(@@ s[@@ a@@ ],@@ peo2@@ [i].num); } for(a@@ =j@@ ,@@ b@@ =0;a@@ <n;@@ a@@ ++,@@ b++) { strcpy(@@ s[@@ a@@ ],@@ peo3@@ [b@@ ].@@ num); } for(c=0;c@@ <n;@@ c++) { printf("%s\n",@@ s[@@ c@@ ]); } return0; }  
c -1
h -1
struct@@ stud {@@ intn; intm; intc; intt; }@@ s[@@ 100000],@@ temp; voidmain() { inti,j,k,n,@@ p; scanf("%d",&n); for(i=0;i<n;i++) {@@ scanf("%d%d%d",&@@ s[i].@@ n,&@@ s[i].@@ m,&@@ s[i].@@ c); s[i].@@ t=@@ s[i].@@ m+@@ s[i].@@ c; } for(j=0;j<@@ 3@@ &&j@@ <@@ n;j++) {@@ for(k=j@@ +1,@@ p=@@ j@@ ;k<@@ n;k++) if(s[@@ p@@ ].@@ t@@ <@@ s@@ [k].@@ t@@ ){@@ p=@@ k@@ ;} temp=@@ s[j]@@ ;s@@ [j]=@@ s[p@@ ];@@ s[p@@ ]=temp; printf("%d%d\n",@@ s[j].@@ n,@@ s[j].@@ t); } }  
c -1
h -1
0

intmain() { intk,i,j,@@ p,@@ h@@ [100]={0},@@ m@@ [100],@@ max=1; scanf("%d",&k); for(i=0;i<k;i++) { scanf("%d",&h[i]); } for(i=0;i<100;i++) { m@@ [i]=1; } for(i=k-2;i>=0;i--) { for(j=i+1;j<k;j++) { if((@@ h@@ [j]<=@@ h@@ [i]@@ )&&(@@ m@@ [j]@@ +1@@ >=@@ m[i]@@ )) { m@@ [i]=@@ m@@ [j]+1; } } } for(p=@@ k-1@@ ;p@@ >=0@@ ;p@@ --) { if(m@@ [p@@ ]>=@@ max) {max=@@ m@@ [p@@ ];} } printf("%d",max); return0; }  
c -1
h -1
intmain() { intn,m,@@ num[@@ 20000],@@ i,@@ num_cout@@ [@@ 20000],@@ k,@@ j; cin>>n; for(i=0;i<n;i++) { cin>>num[i]; } num_cout@@ [0]=@@ num[@@ 0]; k=1; for(i=1;i<n;i++) { m=0; for(j=0;j<k;j++) { if(num@@ [i]==@@ num_cout@@ [j]) m++; } if(m==0) { num_cout@@ [k]=@@ num[i]; k++; } } for(i=0;i<@@ k-1;i++) { cout<<@@ num_cout@@ [i]@@ <<""; } cout<<@@ num_cout@@ [k@@ -1]; return0; }  
c -1
h -1
0

intmain() { int@@ bkn@@ ,@@ m@@ =1,@@ n,@@ i,j; char@@ bka@@ [30]; struct@@ author { intnum; int@@ p[@@ 200]; } a[@@ 30]; scanf("%d",&n); for(i=1;i<@@ 27@@ ;i++) a[i].@@ num=0; for(i=0;i<n;i++) { scanf("%d%s",&@@ bkn@@ ,@@ bka@@ ); for(j=0;j<strlen(@@ bka@@ );j++) { a[@@ bka@@ [j]@@ -@@ 64@@ ].@@ num++; a[@@ bka@@ [j]@@ -@@ 64@@ ].@@ p[@@ a[@@ bka@@ [j]@@ -@@ 64@@ ].num@@ -1@@ ]=@@ bkn@@ ; } } for(i=2@@ ;i<@@ 27@@ ;i++) if(a[i].@@ num@@ >@@ a[m@@ ].@@ num) m=i; printf("%c\n%d\n",@@ m+@@ 64@@ ,@@ a[m@@ ].@@ num); for(i=0;i<@@ a[m@@ ].@@ num;i++) printf("%d\n",@@ a[m@@ ].@@ p[i]); return0; }  
c -1
h -1
intmax@@ (inta,intb) { if(a<@@ b) return@@ b; else return@@ a; } intmain() { intnum; inth@@ [100]; cin>>num; inti,j,k; for(i=0;i<num;i++) cin>>@@ h@@ [i]; intf@@ [100]={0}; f@@ [0]=1; for(i=1;i<@@ num;i++) { f@@ [i]=1; for(j=0;j<i;j++) { if(h@@ [i]<=@@ h@@ [j]) f[i]=@@ max(@@ f@@ [i],@@ f@@ [j]@@ +1); } } int@@ result=@@ f@@ [0]; for(i=1;i<@@ num;i++) { result=@@ max(@@ f@@ [i],@@ result); } cout<<@@ result@@ <<endl; }  
c -1
h -1
0

int@@ sushu@@ (int@@ a) { int@@ b=@@ 2,@@ c,@@ d=0,@@ k; while(@@ b<@@ a) { c=@@ a%@@ b; if(c@@ !=0) { b=b@@ +1; d=d@@ +1;} elsebreak; } if(d@@ ==@@ (a@@ -2@@ )) k=1; else k=0; return@@ k; } int@@ zheng@@ (intn,int@@ i) { intsum@@ =1,@@ a; for(a@@ =i;@@ a@@ <n@@ /2@@ ;a@@ ++) { if(n%@@ a@@ ==0) { if(a@@ <=@@ n/@@ a) { sum=sum+@@ zheng@@ (n@@ /@@ a,@@ a); } } } returnsum; } intmain() { intn,i,j=0,@@ k=0,@@ b[@@ 10000@@ ]={0},@@ e@@ [@@ 40000@@ ]={0}; scanf("%d",&n); for(i=0;i<n;i++) { scanf("%d",&@@ e@@ [i]); } for(i=0;i<n;i++) { if(@@ sushu@@ (@@ e@@ [i])@@ ==0) { b[i]=@@ zheng@@ (@@ e@@ [i],@@ 2); } else { b[i]=1; } } printf("%d",@@ b[0]@@ ); for(i=1;i<n;i++) printf("\n%d",@@ b[i]); return0; }  
c -1
h -1
voidmain() { intk,m,n,@@ a[@@ 110][110@@ ],i,j,@@ l,@@ s=0; scanf("%d",&k); for(i=1;i<=k;i++) { scanf("%d%d",&m,&n); for(j=1;j<=m;j++) for(l=1;l@@ <=n;@@ l++) scanf("%d",&a[j]@@ [l]); if(m@@ ==1)@@ for(j=1;j<=@@ n@@ ;j++)@@ s=s+@@ a[1]@@ [j]; elseif(n@@ ==1)@@ for(j=i;j<=@@ m@@ ;j++)@@ s=s+@@ a[j]@@ [1]; else {@@ for(j=1;j<=m;j++) {@@ s=s+@@ a[j]@@ [1]@@ +@@ a[j]@@ [n@@ ];@@ a[j]@@ [1]@@ =0;@@ a[j]@@ [n@@ ]@@ =0;} for(j=2@@ ;j<n;j++) {@@ s=s+@@ a[1]@@ [j]+@@ a[m@@ ][j]@@ ;@@ a[1]@@ [j]@@ =0;@@ a[m@@ ][j]@@ =0;@@ }} printf("%d\n",s); s=0; } }  
c -1
h -1
0

main() { intn,i; scanf("%d",&n); charID@@ [n@@ ][10]; intage@@ [n]; for(i=0;i<=n-1;i++) { scanf("%s%d",@@ ID@@ [i],&@@ age[i]); } char@@ ID2@@ [n@@ ][10]; intb[@@ n]; int@@ j=0,@@ t,@@ k; for(i=0;i<=n-1;i++) { if(age[i]@@ >=60) { b[j]=@@ age[i]; strcpy(@@ ID2@@ [j],@@ ID@@ [i]); j++; } } charc[@@ 10]; for(k=0;k<j@@ -1;k++) { for(i=0;i<j@@ -1@@ -@@ k;i++) { if(b[i]@@ <b@@ [i+1]) { t=b[i]; b[i]=b[i+1]; b[i+1]=@@ t; strcpy(@@ c,@@ ID2@@ [i]); strcpy(@@ ID2@@ [i],@@ ID2@@ [i+1]); strcpy(@@ ID2@@ [i+1],@@ c); } } } for(i=0;i<=@@ j@@ -1;i++) printf("%s\n",@@ ID2@@ [i]); char@@ ID3@@ [n@@ ][10]; intm=0; for(i=0;i<n;i++) { if(age[i]@@ <60) { strcpy(@@ ID3@@ [m@@ ],@@ ID@@ [i]); m++; } } for(i=0;i<=@@ m-1;i++) printf("%s\n",@@ ID3@@ [i]); }  
c -1
h -1
intmain() {@@ intyear,@@ mon@@ ,@@ day; scanf("%d%d%d",&year,&@@ mon@@ ,&@@ day); int@@ re@@ ; if((@@ year%@@ 4==0&&@@ year%@@ 400@@ ==0&&@@ year%@@ 100@@ ==0)||(@@ year%4==0&&year%100!=0@@ )) { switch(@@ mon@@ ) { case1:@@ re@@ =@@ day;break; case2:@@ re@@ =31+@@ day;break; case3:@@ re@@ =31+29@@ +day;break; case4:@@ re@@ =31+29@@ +31+@@ day;break; case5:@@ re@@ =31+29@@ +31+30@@ +day;break; case6:@@ re@@ =31+29@@ +31+30+31+@@ day;break; case7:@@ re@@ =31+29@@ +31+30+31+30@@ +day;break; case8:@@ re@@ =31+29@@ +31+30+31+30+31+@@ day;break; case9:@@ re@@ =31+29@@ +31+30+31+30+31+31+@@ day;break; case10:@@ re@@ =31+29@@ +31+30+31+30+31+31+30@@ +day;break; case11:@@ re@@ =31+29@@ +31+30+31+30+31+31+30+31+@@ day;break; case12:@@ re@@ =31+29@@ +31+30+31+30+31+31+30+31+30@@ +day;break; } } else {@@ switch(@@ mon@@ ) { case1:@@ re@@ =@@ day;break; case2:@@ re@@ =31+@@ day;break; case3:@@ re@@ =31+28@@ +day;break; case4:@@ re@@ =31+28@@ +31+@@ day;break; case5:@@ re@@ =31+28@@ +31+30@@ +day;break; case6:@@ re@@ =31+28@@ +31+30+31+@@ day;break; case7:@@ re@@ =31+28@@ +31+30+31+30@@ +day;break; case8:@@ re@@ =31+28@@ +31+30+31+30+31+@@ day;break; case9:@@ re@@ =31+28@@ +31+30+31+30+31+31+@@ day;break; case10:@@ re@@ =31+28@@ +31+30+31+30+31+31+30@@ +day;break; case11:@@ re@@ =31+28@@ +31+30+31+30+31+31+30+31+@@ day;break; case12:@@ re@@ =31+28@@ +31+30+31+30+31+31+30+31+30@@ +day;break; } } printf("%d",@@ re); return0; }  
c -1
h -1
0

intmain(intargc,char*argv[]) { intk,m,n,@@ i,@@ col,@@ row,@@ sum@@ [100]={0}; scanf("%d",&k); for(i=0;i<k;i++){ scanf("%d%d",&m,&n); intsz[100][100]; for(row=0;row@@ <m;@@ row++){ for(col=0;col<n;col@@ ++){ scanf("%d",&@@ sz[row][col@@ ]); } } for(col=0;col@@ <@@ n-1;@@ col@@ ++)@@ sum[i]@@ +=@@ sz[0][@@ col@@ ]; for(row=0;row@@ <m-1@@ ;@@ row@@ ++)@@ sum[i]@@ +=@@ sz[@@ row@@ ][n-1]; for(col@@ =@@ n-1;@@ col@@ >0@@ ;col@@ --@@ )@@ sum[i]@@ +=@@ sz[@@ m-1@@ ][col@@ ]; for(row@@ =@@ m-1@@ ;@@ row@@ >0@@ ;@@ row@@ --@@ )@@ sum[i]@@ +=@@ sz[@@ row@@ ][0]; printf("%d\n",sum@@ [i]); } return0; }  
c -1
h -1
intmain() { intn,i,j,@@ m,@@ y; scanf("%d",&n); inta[20000]; intb[@@ 20000]; for(i=0;i<n;i++) { scanf("%d",&a[i]); } printf("%d",a[0]); for(i=1;i<n;i++) { y=0; for(j=0;j<=i-1;j++) { if(a[i]==a[j]) { y++; } } if(y@@ ==0) printf("%d",a[i]); } return0; }  
c -1
h -1
0

structstudent { char@@ number@@ [100]; charname@@ [100]; structstudent*next; }; intn; structstudent*creat@@ (void) { structstudent*head; structstudent*p1,*p2; inti=0; p1=p2=(structstudent*)malloc(LEN); scanf("%s@@ %s",&@@ p1->@@ number@@ ,&p1->@@ name); head=NULL; do { i=i+1; if(i@@ ==1)@@ head@@ =p1;@@ elsep2->next=p1; p2=p1; p1=(structstudent*)malloc(LEN); scanf("%s@@ %s",&@@ p1->@@ number@@ ,&p1->@@ name); } while(i<@@ n-1); p2->next=p1; p2=p1; p2->next=NULL; return(head); } voidmain() { int@@ h,@@ i,k,@@ m,@@ j,@@ max; structstudent*head; structstudent*@@ p; int@@ sum[@@ 10000@@ ]={0}; scanf("%d",&n); head=creat(); p=head; for(i=@@ 65@@ ,k@@ =0;i<=@@ 90@@ ;i++@@ ,k++) { p=head; do { m=strlen(@@ p->@@ name); for(j=0;j<m;j++) { if(p->@@ name[j]==@@ i)@@ sum@@ [k]++; } p=p->next; }while(p@@ !=NULL); } for(i=0,@@ max=@@ sum@@ [0]@@ ;i<=@@ k;i++) { if(sum@@ [i]>=@@ max@@ ){@@ h@@ =i;@@ max=@@ sum[i]@@ ;} } printf("%c\n%d\n",@@ h@@ +65@@ ,max); p=head; do { m=strlen(@@ p->@@ name); for(j=0;j<m;j++) { if(p->@@ name[j]==@@ h@@ +65@@ )@@ printf("%s\n",p->@@ number); } p=p->next; }while(p@@ !=NULL); }  
c -1
h -1
intmain() { intsz[100][100]; intk,@@ i; scanf("%d",&k); for(i=1;i<=@@ k;i++){ intm,n,@@ a,b,@@ sp@@ =0; scanf("%d%d",&m,&n); for(a=0;a@@ <=@@ m-1@@ ;a@@ ++){ for(b=0;b@@ <=@@ n-1;@@ b++){ scanf("%d",&(@@ sz[a@@ ][b@@ ]@@ )); sp@@ =@@ sp@@ +@@ sz[a@@ ][b@@ ]; } } intsum=0; for(b=0;b@@ <=@@ n-1;@@ b++){ sum=sum+@@ sz[0][@@ b@@ ]+sz[@@ m-1][@@ b@@ ]; } for(a=0;a@@ <=@@ m-1@@ ;a@@ ++){ sum=sum+@@ sz[a@@ ][0]+@@ sz[a@@ ][n-1]; } sum=sum-@@ sz[0][@@ 0]-@@ sz[0][@@ n-1]-@@ sz[@@ m-1][0]-@@ sz[@@ m-1][@@ n-1]; if(m@@ ==1||@@ n@@ ==1){ sum=@@ sp@@ ; } printf("%d\n",sum); } return0; }  
c -1
h -1
0

intmain() { intm,@@ la@@ ,lb@@ ,@@ x,@@ i; double@@ r0@@ ,@@ r1@@ ; chara[@@ 505@@ ],b[@@ 505@@ ]; scanf("%lf",&@@ r0@@ ); scanf("%s",a); scanf("%s",b); la@@ =strlen(a); lb@@ =strlen(b); if(@@ la@@ !=@@ lb@@ ) printf("error\n"); else { x=1; for(i=0,@@ m@@ =0;i<@@ la;i++) { if(a[i]!='@@ A'&&a[i]!='T'&&a[i]!='G'&&a[i]!='@@ C') { printf("error\n"); x=0; break; } elseif(@@ b[i]!='A'&&b[i]!='T'&&b[i]!='G'&&b[i]!='@@ C') { printf("error\n"); x=0; break; } else { if(a[i]==b[i]) m++; } } r1@@ =1.0*@@ m/@@ la@@ ; if(x==1) { if(@@ r1@@ >@@ r0@@ ) printf("yes\n"); else printf("no\n"); } } return0; }  
c -1
h -1
int@@ days_of_month@@ [2][@@ 12@@ ]={@@ {@@ 31,@@ 28,31,30,31,30,31,31,30,31,30,31@@ }@@ , {@@ 31,@@ 29@@ ,31,30,31,30,31,31,30,31,30,31@@ }@@ }; int@@ is_leap_year@@ (intyear@@ ) { if(@@ year%100!=0@@ &&@@ year%@@ 4@@ ==0||@@ year%400==0) return1; else return0; } intmain() { intyear,month,day; scanf("%d%d%d",&@@ year,@@ &@@ month,@@ &@@ day); int@@ index@@ =@@ is_leap_year@@ (year@@ ); intdays@@ =0; for(inti=0;i<@@ month-1;i++) days@@ +=@@ days_of_month@@ [@@ index@@ ]@@ [i]; days@@ +=@@ day; printf("%d",@@ days@@ ); }  
c -1
h -1
0

intmain() { intfenjie@@ (intm,int@@ i); intn,i,@@ c[100]; scanf("%d",&n); for(i=0;i<n;i++) scanf("%d",&@@ c[i]); for(i=0;i<n;i++) printf("%d\n",@@ fenjie@@ (@@ c[i]@@ ,@@ 2)); return0; } intfenjie@@ (intm,int@@ i) { int@@ l@@ =1@@ ,j; int@@ t=@@ sqrt(@@ (@@ float)@@ m); for(j=i;j<=@@ t@@ ;++@@ j) { if(m@@ %j==0) l@@ +=@@ fenjie@@ (m@@ /j,j); } return@@ l; }  
c -1
h -1
intmain() { intn=0,@@ t=0; intnum[@@ 1000]; cin>>n; cin>>t; for(inti=0;i<n;i++) { cin>>num[i]; } int@@ x=0; for(intj=0;j<n;j++) { for(intk@@ =j+1@@ ;k<@@ n;k++) { if(num@@ [j]+@@ num@@ [k]==@@ t) { cout<<"yes"; x=x@@ +1; break; } if(j==@@ n-2@@ &&k@@ ==@@ n-1) cout<<"no"; } if(x@@ ==1)break; } return0; }  
c -1
h -1
0

intmain() { char@@ n@@ [100],@@ s1@@ [@@ 20],@@ s2@@ [20]; gets(@@ n); gets(@@ s1@@ );@@ gets(@@ s2); if(n@@ [1]@@ =='@@ l@@ ') printf("@@ iloveearth@@ "); elseif(n@@ [0]@@ =='@@ s@@ ') printf("@@ sdjkhfksdahfjksdh111111lhfjkasdhkfhkasdhfklahsdjkfhsdk@@ "); else printf("@@ programmingiscool@@ "); return0; }  
c -1
h -1
unsigned@@ inth@@ [26],@@ n; int@@ go@@ (int@@ maxh@@ ,int@@ cp@@ ) { intx,y,@@ max; while(@@ h@@ [@@ cp@@ ]>@@ maxh@@ )@@ cp@@ =@@ cp@@ +1; if(h@@ [@@ cp@@ ]@@ ==0)@@ return0; x=@@ go@@ (@@ maxh@@ ,@@ cp@@ +1); maxh@@ =@@ h@@ [@@ cp@@ ]; y@@ =1@@ +@@ go@@ (@@ maxh@@ ,@@ cp@@ +1); max@@ =(@@ x@@ >@@ y)@@ ?@@ x@@ :@@ y; return@@ max; } intmain() { unsigned@@ inti,@@ c,@@ t; scanf("%d",&n); for(i=0;i<n;i++)@@ scanf("%d",&h[i]); h@@ [n@@ ]=0; t=@@ go@@ (@@ 65535@@ ,@@ 0); printf("%d",t); return0; }  
c -1
h -1
0

intmain() { intn,i,@@ pass@@ ; structpatient { charid@@ [@@ L@@ ]; intage; }@@ men@@ [@@ M@@ ],@@ temp; scanf("%d",&n); for(i=0;i<n;i++) scanf("%s%d",@@ men@@ [i].id,&@@ men@@ [i].age); for(@@ pass@@ =1;@@ pass@@ <n;@@ pass@@ ++) { for(i=n-1;i@@ >@@ pass@@ -1@@ ;i--) { if(@@ men@@ [i].age@@ >=60&&@@ men@@ [i].age@@ >@@ men@@ [i-1@@ ].age) { temp=@@ men@@ [i]; men@@ [i]=@@ men@@ [i-1]; men@@ [i-1@@ ]=temp; } } } for(i=0;i<n;i++) { printf("%s\n",@@ men@@ [i].id); } return0; }  
c -1
h -1
void@@ main(@@ void) { intk,@@ a[@@ 25@@ ],i,j,@@ max,@@ b[@@ 25@@ ]={@@ 1@@ }; scanf("%d",&k); for(i=0;i<k;i++) { scanf("%d",&a[i]); } for(i=1;i<k;i++) { max=1; for(j=0;j<i;j++) { if(a[j]>=a[i]&&@@ b[j]@@ +1@@ >=@@ max) max=@@ b[j]@@ +1; } b[i]=@@ max; } max=0; for(i=0;i<k;i++) { if(b[i]>max) max=b[i]; } printf("%d",max); }  
c -1
h -1
0

int@@ F@@ (intn,int@@ a) { if(n@@ ==1)@@ return1; if(a@@ ==1)@@ return0; if(n%@@ a@@ ==0)@@ return@@ F@@ (n@@ /@@ a,@@ a)@@ +@@ F@@ (n,@@ a@@ -1); return@@ F@@ (n,@@ a@@ -1); } main() { intn,a,@@ i; scanf("%d",&n); for(i=1;i<=n;i++) { scanf("%d",&a); printf("%d\n",@@ F@@ (a,@@ a@@ )); } }  
c -1
h -1
voidmain(){ introw,col,@@ a[100][100],@@ i,j,@@ n; scanf("%d%d",&row,&col); for(i=0;i<row;i++){ for(j=0;j<col;j++){ scanf("%d",&a[i][j]); } } for(n=0;n@@ <=@@ row+col-2@@ ;n++){ for(i=0;i<@@ row@@ &&i@@ <=@@ n;i++){ for(j=0;j<col@@ &&j@@ <=@@ n;j++){ if(i+j@@ ==@@ n)@@ printf("%d\n",a[i][j]); } } } }  
c -1
h -1
0

intmain() { char@@ ma@@ ='A'; int@@ cnt@@ [@@ ASCII@@ ]={0}; inti,j,n; struct{ intid; char@@ au@@ [@@ MAX_N@@ +1]; }@@ bk@@ [@@ MAX_M@@ ]; scanf("%d",&n); for(i=0;i<n;i++) {@@ scanf("%d%s",&@@ bk[i].@@ id,@@ bk[i].@@ au); for(j=0;@@ bk[i].@@ au@@ [j]@@ ;j++) {if(@@ ++@@ cnt@@ [@@ bk[i].@@ au@@ [j]@@ ]>@@ cnt@@ [@@ ma@@ ]) { ma@@ =@@ bk[i].@@ au@@ [j]; } } } printf("%c\n%d\n",@@ ma@@ ,@@ cnt@@ [@@ ma@@ ]); for(i=0;i<n;i++) {if(@@ strchr(@@ bk[i].@@ au@@ ,@@ ma@@ )) { printf("%d\n",@@ bk@@ [i].id); } } return0; }  
c -1
h -1
void@@ pai@@ (intn,@@ inta[]) { for(inti=0;i<n;i++) { scanf("%d",&a[i]); } for(inti=0;i<n;i++) { for(int@@ r@@ =1;@@ r@@ <n@@ -i@@ ;r++) { if(a@@ [i+@@ r@@ ]<@@ a[i]) { int@@ k=@@ a[i]; a[i]=@@ a[i@@ +@@ r@@ ]; a[i@@ +@@ r@@ ]=@@ k; } } } } int@@ link@@ (intn,int@@ m) { inta[100@@ ]={0},@@ b[100@@ ]={0}; pai@@ (n,@@ a); pai@@ (m,@@ b); for(inti=0;i<n;i++) printf("%d",a[i]); for(inti=0;i<@@ m-1;i++) printf("%d",b[i]); printf("%d",b[@@ m-1@@ ]); } intmain() { intn,m; scanf("%d%d",&n,&m); link@@ (n,@@ m); printf("\n"); }  
c -1
h -1
0

int@@ p=0,@@ q=@@ 2; int@@ jizu@@ (intx) { for(inti=@@ q@@ ;i<=@@ x@@ -1;i++) { if((x@@ %i@@ ==0)&&(@@ x@@ /i@@ >@@ i@@ )) { p++; q@@ =i; jizu@@ (x@@ /i); } elseif((@@ x@@ %i@@ ==0)&&(@@ x/@@ i==@@ i@@ )) { p++; } } return@@ p; } intmain() { intn; scanf("%d",&n); inta[100]; for(inti=0;i<=@@ n-1;i++) { scanf("%d",&a[i]); } for(inti=0;i<=@@ n-1;i++) { printf("%d\n",@@ jizu@@ (@@ a[i])@@ +1); p=0,@@ q=@@ 2; } inty; scanf("%d",&@@ y); }  
c -1
h -1
voidmain() { int@@ col,@@ row,@@ a[100][100],@@ i,j; scanf("%d%d",&row,&col); for(i=0;i<row;i++) { for(j=0;j<col@@ ;j++)@@ scanf("%d",&a[i][j]); } i@@ =0;j@@ =0; for(;;) { printf("%d\n",a[i][j]); if(i+j@@ ==@@ row+col-2@@ )break; if(j@@ ==0) { j@@ =i@@ +j@@ +1@@ ;i@@ =0; } elseif(@@ i>=@@ row@@ -1) {@@ j@@ =i@@ +j@@ +1@@ ;i@@ =0;} else{@@ i@@ ++@@ ;j--@@ ;} if(j@@ >@@ col-1@@ ){@@ i@@ =i@@ +j@@ +1@@ -col@@ ;j@@ =j@@ -@@ (j@@ +1@@ -col@@ );} if(i+j@@ ==@@ row+col-2@@ )break; } if(@@ row+col@@ >2) printf("%d\n",a[i][j]); }  
c -1
h -1
0

intmain() { intn,k,@@ flag; intnum[@@ 1000]; inti=0,@@ j; cin>>n>>k; while(i<n) { i++; cin>>num[i]; } for(i=0;i<n;i++) { for(j=i;j<@@ n;j++) { if(num@@ [i]+@@ num@@ [j]==k) { cout<<"yes@@ "<<endl; flag=0; i=@@ n; j=@@ n; break; } } } if(flag) cout<<"no@@ "<<endl; }  
c -1
h -1
intm,n,@@ a[@@ 1000@@ ]={0},b[@@ 1000]={0},@@ c[@@ 1000]={0}; void@@ du@@ (@@ ){@@ int@@ i@@ ;@@ for(i=0;i<m;i++)@@ scanf("%d",&a[i]@@ );@@ for(i=0;i<n;i++)@@ scanf("%d",&@@ b[i]@@ );} void@@ pai@@ (@@ ){@@ intj,@@ k,@@ l; for(j=0;j<=@@ m@@ ;j++){@@ for(k=0;k<@@ m-1@@ ;k++@@ ){@@ if(a[k]@@ >@@ a[k@@ +1@@ ]){@@ l=@@ a[k]@@ ;@@ a[k]=a[k@@ +1@@ ];@@ a[k@@ +1]=@@ l@@ ;@@ }}} for(j=0;j<=@@ n@@ ;j++){@@ for(k=0;k<@@ n-1@@ ;k++@@ ){@@ if(@@ b[k@@ ]>@@ b[k@@ +1@@ ]){@@ l=@@ b[k@@ ];@@ b[k]=@@ b[k@@ +1@@ ];@@ b[k@@ +1]=@@ l@@ ;@@ }@@ }}} void@@ he@@ (@@ ){@@ int@@ o@@ ,@@ p@@ ;@@ for(@@ o@@ =0;@@ o@@ <m;@@ o@@ ++)@@ c[@@ o@@ ]=a[@@ o@@ ];@@ for(p=0;p@@ <n;@@ p@@ ++@@ ){@@ c[@@ o@@ ]=@@ b[p@@ ];@@ o@@ ++;@@ }} void@@ shu@@ (@@ ){@@ int@@ q@@ ;@@ for(q=0;q@@ <@@ m+@@ n;@@ q@@ ++@@ ){@@ printf("%d",c[@@ q@@ ]@@ );@@ if(q@@ !=@@ m+@@ n-1)@@ printf("@@ ");@@ else@@ printf("\n@@ ");@@ }} intmain() {@@ scanf("%d%d",&@@ m,&@@ n);@@ du@@ ();@@ pai@@ ();@@ he@@ ();@@ shu@@ ();@@ return0;}  
c -1
h -1
0

intc; void@@ cal@@ (intn,int@@ k); intmain(intargc@@ ) {@@ intm,n,@@ j; cin>>m; for(j=1;j<=m;j++) {@@ cin>>n; c=0; cal@@ (n,@@ 1); cout<<@@ c@@ <<endl;} return0; } void@@ cal@@ (intn,int@@ k) {@@ if(n==1) {@@ c++; return@@ ;} inti; for(i=2;i<=n;i++) {@@ if(n@@ %i==0&&@@ i>=@@ k) {@@ cal@@ (n@@ /i,@@ i@@ );}} }  
c -1
h -1
intmain() { intk; intm; intn; inti,j,t; inta[100][100]; scanf("%d",&k); for(t@@ =1;t@@ <=k;@@ t++) { intsum=0; scanf("%d%d",&m,&n); for(i=0;i<=@@ m-1;i++) { for(j=0;j<=n-1;j++) { scanf("%d",&a[i][j]); } } for(i=0;i<=@@ m-1;i++) { for(j=0;j<=n-1;j++) { sum=sum+@@ a[i][j]; } } for(i=1;i<=@@ m@@ -2;i++) { for(j=1;j<=@@ n-2@@ ;j++) { sum=sum-@@ a[i][j]; } } printf("%d\n",sum); } return0; }  
c -1
h -1
0

intlen1,len2,@@ array1@@ [100],@@ array2@@ [100],@@ sa@@ [100]; void@@ zp1@@ (int@@ a1@@ [100],int@@ l1@@ ){ int@@ cur1@@ ; for(inti=0;i<@@ l1@@ -1;i++) for(intj=0;j<@@ l1@@ -1-i;j++) if(@@ a1@@ [j]>@@ a1@@ [j+1@@ ]){ cur1@@ =@@ a1@@ [j]; a1@@ [j]=@@ a1@@ [j+1]; a1@@ [j+1]=@@ cur1@@ ; } } void@@ zp2@@ (int@@ a2@@ [100],int@@ l2@@ ){ int@@ cur2@@ ; for(inti=0;i<@@ l2@@ -1;i++) for(intj=0;j<@@ l2@@ -1-i;j++) if(@@ a2@@ [j]>@@ a2@@ [j+1@@ ]){ cur2@@ =@@ a2@@ [j]; a2@@ [j]=@@ a2@@ [j+1]; a2@@ [j+1]=@@ cur2@@ ; } } void@@ connection@@ (int@@ a1@@ [100],int@@ a2@@ [100@@ ]) { for(inti=0;i<@@ len1@@ ;i++) sa@@ [i]=@@ array1@@ [i]; for(inti=@@ len1@@ ;i<@@ len1@@ +len2@@ ;i++) sa@@ [i]=@@ array2@@ [i-@@ len1@@ ]; } intmain(){ cin>>@@ len1@@ >>@@ len2@@ ; for(inti=0;i<@@ len1@@ ;i++) cin>>@@ array1@@ [i]; for(inti=0;i<@@ len2@@ ;i++) cin>>@@ array2@@ [i]; zp1@@ (@@ array1@@ ,@@ len1@@ ); zp2@@ (@@ array2@@ ,len2@@ ); connection@@ (@@ array1@@ ,@@ array2@@ ); cout<<@@ sa@@ [0]; for(inti=1;i<@@ len1@@ +len2@@ ;i++) cout<<""<<@@ sa@@ [i]; cout<<endl; return0; }  
c -1
h -1
voidmain() { inti,j,n,@@ c[100],@@ max; double@@ a[100]; memset(@@ c,@@ 0,sizeof(@@ c@@ )); scanf("%d",&n); for(i=0;i<n;i++) scanf("%lf",&@@ a[i]); c[@@ n-1@@ ]=1; for(i=n-1;i>=0;i--) { max=0; for(j=i+1;j<n;j++) if(a[j]<=@@ a[i]&&@@ c[j]@@ >max) max=@@ c[j]; c[i]=@@ max+1; } max=0; for(i=0;i<n;i++) if(c@@ [i]>max) max=@@ c[i]; printf("%d",max); }  
c -1
h -1
0

intmain() { intk,i,j,@@ l; intm@@ [100],@@ n@@ [100]; intsum@@ [100]={0}; inta[100][100@@ ][100]; scanf("%d",&k); for(i=0;i<k;i++){ scanf("%d%d",&@@ m@@ [i],&@@ n@@ [i]); for(j=0;j<m@@ [i]@@ ;j++){ for(l=0;l<@@ n@@ [i];@@ l++){ scanf("%d",&a[j]@@ [l@@ ][i]); } } } for(i=0;i<k;i++){ for(l=0;l<@@ n[i]@@ -1;@@ l++){ sum[i]@@ +=@@ a[0][@@ l@@ ]@@ [i]; } for(j=0;j<m@@ [i]@@ -1;j++){ sum[i]@@ +=@@ a[j]@@ [n@@ [i]@@ -1]@@ [i]; } for(l@@ =@@ n[i]@@ -1;@@ l@@ >0@@ ;@@ l@@ --){ sum[i]@@ +=@@ a[m@@ [i]@@ -1@@ ][l@@ ]@@ [i]; } for(j=@@ m[i]@@ -1@@ ;j>0@@ ;j--){ sum[i]@@ +=@@ a[j]@@ [0]@@ [i]; } printf("%d\n",sum@@ [i]); } return0; }  
c -1
h -1
intmain() { inti,@@ year,@@ month,@@ day,@@ date@@ =0; scanf("%d%d%d",&year,&month,&day); for(i=1;i<month;i++) { if(i==@@ 4||i==6||i==9||i==11) date@@ =@@ date+@@ 30; else { if(i==@@ 2) { if(@@ year%100!=0@@ &&@@ year%@@ 4@@ ==0||@@ year%400==0) date@@ =@@ date+@@ 29; else date@@ =@@ date+@@ 28; } else date@@ =@@ date@@ +31; } } date@@ =@@ date@@ +day; printf("%d\n",@@ date@@ ); return0; }  
c -1
h -1
0

intmain() { intr,@@ c,@@ i,j; inta[100][100]; scanf("%d%d",&@@ r@@ ,&c); for(i=0;i<@@ r;i++) for(j=0;j<@@ c;j++) scanf("%d",&a[i][j]); for(i=0;i<@@ r@@ +c@@ -1;i++) { if(i<@@ c@@ &&@@ c@@ <=@@ r@@ ) for(j=0;j<=i;j++) printf("%d\n",@@ a[j][i-j@@ ]); elseif(@@ i>=@@ c@@ &&@@ c@@ <=@@ r@@ &&i@@ <@@ r@@ ) for(j=i@@ -c@@ +1@@ ;j<=@@ i;j++) printf("%d\n",@@ a[j][i-j@@ ]); elseif(@@ i>=@@ r@@ &&@@ c@@ <=@@ r@@ ) for(j=i@@ -c@@ +1@@ ;j<@@ r@@ ;j++) printf("%d\n",@@ a[j][i-j@@ ]); elseif(@@ i@@ <@@ r@@ &&@@ c@@ >@@ r@@ ) for(j=0;j<=i;j++) printf("%d\n",@@ a[j][i-j@@ ]); elseif(@@ i>=@@ r@@ &&@@ c@@ >@@ r@@ &&i@@ <@@ c) for(j=0;j<@@ r@@ ;j++) printf("%d\n",@@ a[j][i-j@@ ]); elseif(@@ i>=@@ c@@ &&@@ c@@ >@@ r@@ ) for(j=i@@ -c@@ +1@@ ;j<@@ r@@ ;j++) printf("%d\n",@@ a[j][i-j@@ ]); } return0; }  
c -1
h -1
intn,i; struct@@ man { charnum[10]; intage; int@@ nu@@ ; }@@ stu@@ [100]; int@@ f(@@ char*@@ a,int@@ b,int@@ n1@@ ,char*@@ c@@ ,int@@ d@@ ,int@@ n2) {@@ intsum; if(b@@ >=60&&@@ d@@ >=60) {@@ if(b@@ >@@ d) sum=1; elseif(@@ b<@@ d) sum@@ =-1; else sum=@@ n2@@ -@@ n1@@ ; } elseif(@@ b@@ >=60&&@@ d@@ <60) sum=1; elseif(@@ b@@ <60&&@@ d@@ >=60) sum@@ =-1; else sum=@@ n2@@ -@@ n1@@ ; return(@@ sum); } voidmain() {@@ scanf("%d",&n); for(i=0;i<n;i++) { scanf("%s%d",@@ stu[i].@@ num,&stu[i].@@ age); stu[i].@@ nu@@ =i+1@@ ;} intj,@@ k; struct@@ man@@ t; for(i=0;i<n-1;i++) {@@ k=i; for(j=i+1;j<n;j++) if(@@ f(@@ stu[i].@@ num,@@ stu[i].@@ age@@ ,@@ stu[i].@@ nu@@ ,@@ stu[j].@@ num,@@ stu[j].@@ age@@ ,@@ stu[j].@@ nu@@ )@@ <0) {@@ k=j; t=@@ stu@@ [i];@@ stu[i]=@@ stu@@ [k]@@ ;@@ stu@@ [k]=@@ t;} } for(i=0;i<n;i++) printf("%s\n",@@ stu[i].@@ num); }  
c -1
h -1
0

intmain(intargc,char*argv[]) { inta,b,c; scanf("%d%d%d",&a,&b,&c); if((@@ a%4==0&&a%100!=0@@ )||(@@ a%400==0)) { intm[@@ 12]={31,29,31,30,31,30,31,31,30,31,30,31}; inti; intk=0; for(i=0;i<(@@ b@@ -1);i++) { k=k@@ +m@@ [i]; } k=k@@ +c; printf("%d",k); } else { intm[@@ 12]={31,28,31,30,31,30,31,31,30,31,30,31}; inti; intk=0; for(i=0;i<(@@ b@@ -1);i++) { k=k@@ +m@@ [i]; } k=k@@ +c; printf("%d",k); } return0; }  
c -1
h -1
intmain() { inta,b,c,@@ d; scanf("%d%d%d",&a,&b,&c); if(a%@@ 4==0&&a%100!=0@@ ||a%@@ 400==0) {@@ switch(@@ b) {@@ case1: {d=@@ c; break;} case2: {@@ d@@ =31+c; break;} case3: {@@ d=31+29@@ +c; break;} case4: {@@ d=31+29@@ +31+@@ c; break;} case5: {@@ d=31+29@@ +31+30@@ +c; break;} case6: {@@ d=31+29@@ +31+30+31+@@ c; break;} case7: {@@ d=31+29@@ +31+30+31+30@@ +c; break;} case8: {@@ d=31+29@@ +31+30+31+30+31+@@ c; break;} case9: {@@ d=31+29@@ +31+30+31+30+31+31+@@ c; break;} case10: {@@ d=31+29@@ +31+30+31+30+31+31+30@@ +c; break;} case11: {@@ d=31+29@@ +31+30+31+30+31+31+30+31+@@ c; break;} case12: {@@ d=31+29@@ +31+30+31+30+31+31+30+31+30@@ +c; break;} } printf("%d",d); } else {@@ switch(@@ b) {@@ case1: {d=@@ c; break;} case2: {@@ d@@ =31+c; break;} case3: {@@ d=31+28@@ +c; break;} case4: {@@ d=31+28@@ +31+@@ c; break;} case5: {@@ d=31+28@@ +31+30@@ +c; break;} case6: {@@ d=31+28@@ +31+30+31+@@ c; break;} case7: {@@ d=31+28@@ +31+30+31+30@@ +c; break;} case8: {@@ d=31+28@@ +31+30+31+30+31+@@ c; break;} case9: {@@ d=31+28@@ +31+30+31+30+31+31+@@ c; break;} case10: {@@ d=31+28@@ +31+30+31+30+31+31+30@@ +c; break;} case11: {@@ d=31+28@@ +31+30+31+30+31+31+30+31+@@ c; break;} case12: {@@ d=31+28@@ +31+30+31+30+31+31+30+31+30@@ +c; break;} } printf("%d",d); } return0; }  
c -1
h -1
1


intmain() { charzfc@@ [257],@@ a[@@ 50@@ ],b[@@ 50]; inti,j,k; scanf("%s%s%s",@@ zfc@@ ,@@ a,b); for(i=0;i<strlen(@@ zfc@@ );i++) { if(a[0]@@ ==@@ zfc@@ [i]) { for(j=1;j<@@ strlen(a)@@ ;j++) { if(a[j]!=@@ zfc@@ [i+j@@ ]) break; } if(j==@@ strlen(@@ a@@ )) break; } } if(j==@@ strlen(@@ a@@ )) { for(k=0;k<i;k++) printf("%c",@@ zfc@@ [k]); for(k=i@@ ;k<@@ i+@@ strlen(b@@ )@@ ;k++) printf("%c",@@ b[k@@ -i]); for(k=i+@@ strlen(b@@ )@@ ;k<@@ strlen(@@ zfc@@ )@@ ;k++) printf("%c",@@ zfc@@ [k]); } else printf("%s",@@ zfc); return0; }  
c -1
h -1
intx[@@ 10000],@@ y[@@ 10000],@@ z[@@ 100000]; intm,n,i,j,@@ temp; void@@ dq@@ () { cin>>m>>n; for(i=1;i<=m;i++) cin>>@@ x[i]; for(i=1;i<=n;i++) cin>>y@@ [i]; } void@@ px@@ () { for(i=1;i<=@@ m-1;i++) for(j=@@ m@@ ;j>=i@@ +1@@ ;j--) if(x@@ [j]<=@@ x@@ [j-1]@@ ){@@ temp=@@ x[j]@@ ;x@@ [j]=@@ x@@ [j-1]@@ ;x@@ [j-1]=@@ temp;} for(i=1;i<=n-1;i++) for(j=n@@ ;j>=i@@ +1@@ ;j--) if(y@@ [j]<=@@ y@@ [j-1]@@ ){@@ temp=@@ y@@ [j];@@ y@@ [j]=@@ y@@ [j-1]@@ ;y@@ [j-1]=@@ temp;} } void@@ hb@@ () { for(i=1;i<=m;i++) z@@ [i]=@@ x[i]; for(i=1;i<=n;i++) z@@ [i@@ +m@@ ]=@@ y@@ [i]; } void@@ xs@@ () { for(i=1;i<@@ m+n;i++) cout<<@@ z@@ [i]@@ <<''; cout<<@@ z@@ [m@@ +@@ n]; cout<<endl; } intmain() { dq@@ (); px@@ (); hb@@ (); xs@@ (); return0; }  
c -1
h -1
0

struct@@ bing { charid[10]; intage; }; voidmain() { struct@@ bing@@ peo@@ [@@ 120@@ ],@@ old@@ [@@ 120@@ ],@@ young@@ [@@ 120@@ ],@@ temp; inti,j,n,@@ num1@@ =0,@@ num2@@ =0; scanf("%d",&n); for(i=0;i<n;i++) scanf("%s%d",@@ peo@@ [i].id,&@@ peo@@ [i].age); for(i=0;i<n;i++) { if(@@ peo@@ [i].age>=60) { old@@ [@@ num1@@ ]=@@ peo@@ [i]; num1@@ =@@ num1@@ +1; } else { young@@ [@@ num2@@ ]=@@ peo@@ [i]; num2@@ =@@ num2@@ +1; } } for(i=0;i<@@ num1@@ -1;i++) for(j=0;j<@@ num1@@ -i-1;j++) { if(old@@ [j].age@@ <@@ old@@ [j+1@@ ].age) { temp=@@ old@@ [j]; old@@ [j]=@@ old@@ [j+1]; old@@ [j+1]=temp; } } for(i=0;i<@@ num1@@ ;i++) printf("%s\n",old@@ [i].id); for(i=0;i<@@ num2@@ ;i++) printf("%s\n",@@ young@@ [i].id); }  
c -1
h -1
struct@@ stud {@@ intn; intm; intc; intt; }@@ s[@@ 100000],@@ temp; voidmain() { inti,j,k,n,@@ p; scanf("%d",&n); for(i=0;i<n;i++) {@@ scanf("%d%d%d",&@@ s[i].@@ n,&@@ s[i].@@ m,&@@ s[i].@@ c); s[i].@@ t=@@ s[i].@@ m+@@ s[i].@@ c; } for(j=0;j<@@ 3@@ &&j@@ <@@ n;j++) {@@ for(k=j@@ +1,@@ p=@@ j@@ ;k<@@ n;k++) if(s[@@ p@@ ].@@ t@@ <@@ s@@ [k].@@ t@@ ){@@ p=@@ k@@ ;} temp=@@ s[j]@@ ;s@@ [j]=@@ s[p@@ ];@@ s[p@@ ]=temp; printf("%d%d\n",@@ s[j].@@ n,@@ s[j].@@ t); } }  
c -1
h -1
0

intmain() {@@ inti,j,n,@@ k,@@ s[@@ 1100@@ ],@@ p; p=0; scanf("%d%d",&n,&k); for(i=1;i<=n;i++){ scanf("%d",&s[i]); } scanf("%d",&k); for(i=1;i<=n;i++){ for(j=1;j<=n;j++){ if(s@@ [i]+@@ s@@ [j]==k){ p++; } } } if(p@@ ==0){ printf("no"); }else{ printf("yes"); } return0; }  
c -1
h -1
intmain() { intyear,@@ mon@@ ,@@ d; int@@ month@@ =1,@@ day@@ =1,@@ lunar@@ =0,@@ days@@ =1; cin>>year>>@@ mon@@ >>@@ d; if(((@@ year%@@ 4==0)&&(@@ year%100!=0@@ )@@ )||(year%400==0)) lunar@@ =1; while((@@ mon@@ !=@@ month@@ )||(@@ d@@ !=@@ day@@ )) { day@@ ++; days@@ ++; if((@@ day@@ ==@@ 32@@ )&&(@@ (@@ month@@ ==1)@@ ||(@@ month==@@ 3@@ )||(@@ month==@@ 5@@ )||(@@ month==@@ 7@@ )||(@@ month==@@ 8@@ )||(@@ month==@@ 10@@ )||(@@ month==@@ 12@@ )@@ )) { month@@ ++; day@@ =1; } if((@@ day@@ ==@@ 31@@ )&&(@@ (@@ month==@@ 4@@ )||(@@ month==@@ 6@@ )||(@@ month==@@ 9@@ )||(@@ month==@@ 11@@ )@@ )) { month@@ ++; day@@ =1; } if((@@ day@@ ==@@ 30@@ )&&(@@ month==@@ 2@@ )&&(@@ lunar@@ ==1@@ )) { month@@ ++; day@@ =1; } if((@@ day@@ ==@@ 29@@ )&&(@@ month==@@ 2@@ )&&(@@ lunar@@ ==0)) { month@@ ++; day@@ =1; } } cout<<@@ days@@ <<endl; return0; }  
c -1
h -1
0

structpatient { charid@@ [11]; intage; structpatient*next; }; intmain() { structpatient*@@ head; structpatient*@@ create@@ (int@@ n); voidsort@@ (structpatient@@ *head@@ ); intn; scanf("%d",&n); head=@@ create@@ (n); sort(@@ head); return0; } structpatient*@@ create@@ (intn) { inti; structpatient@@ *head,*p1,*p2; p1=(struct@@ patient@@ *)malloc(len); head=p1; p2=p1; scanf("%s%d",@@ p1->id,&p1->age); for(i=1;i<n;i++) { p1=(struct@@ patient@@ *)malloc(len); scanf("%s%d",@@ p1->id,&p1->age); (@@ p2->next@@ )@@ =p1; p2=p1; if(i==@@ (n-1@@ )) (@@ p1->next@@ )@@ =NULL; } returnhead; } voidsort@@ (structpatient@@ *head) { intm; structpatient*@@ p1,*p2; for(;;) { p1=head; p2=head; m=0; for(;;) { if((@@ p1->age@@ )>@@ m)@@ m@@ =(@@ p1->@@ age); if((@@ p1->next@@ )==@@ NULL@@ )break; else@@ p1@@ =(@@ p1->next@@ ); } if(m@@ <60@@ )break; p1=head; for(;;) { if((@@ p1->age@@ )==@@ m) { printf("%s\n",@@ p1->@@ id); if(@@ p1@@ ==@@ head@@ )@@ head@@ =(@@ p1->next@@ ); else { (@@ p2->next@@ )@@ =(@@ p1->next@@ ); } break; } else { if(@@ p1@@ !=@@ p2@@ ) { p2=p1; p1@@ =(@@ p1->next@@ ); } else@@ p1@@ =(@@ p1->next@@ ); } } } p1=head; for(;;) { printf("%s\n",@@ p1->@@ id); if((@@ p1->next@@ )==@@ NULL@@ )break; else@@ p1@@ =(@@ p1->next@@ ); } }  
c -1
h -1
main() { inti,j; intk; scanf("%d",&k); inta[@@ k@@ ],b[@@ k@@ ]; for(i=0;i<k;i++) { scanf("%d",&a[i]); } b[k@@ -1]@@ =1; int@@ d; for(i=k-2;i>=0;i--) {@@ d=0; b[i]=1; for(j=i+1;j<k;j++) {@@ if(a[i]>=a[j]) if(d@@ <@@ b[j]) d=@@ b[j]; } b[i]@@ =1@@ +d; } for(i=0;i<k;i++) if(d@@ <@@ b[i]) d=@@ b[i]; printf("%d",d@@ );}  
c -1
h -1
0

intmain() { introw,@@ col@@ ,*@@ *p,@@ num; inti,j,k; scanf("%d%d",&row,&col); num=@@ row@@ *@@ col; p=@@ (int@@ **@@ )@@ malloc(@@ row@@ *sizeof(int)); for(i=0;i<row;i++) { *(p+i)@@ =@@ (int*)malloc(@@ col@@ *sizeof(int)); } for(i=0;i<row;i++) { for(j=0;j<col;j++) { scanf("%d",*(p+i)+j); } } for(i=0;i<@@ col@@ +row@@ -1;i++) { k=0; j=i; while(j@@ >=0@@ &&k@@ <=row@@ ) { if(j@@ <col@@ &&k@@ <row) { printf("%d\n",@@ *(*(p@@ +k)@@ +j)); } k=k+1; j=j-1; } } return0; }  
c -1
h -1
struct@@ s { int@@ d; charc[@@ 20]; struct@@ s@@ *next; }; voidsort@@ (struct@@ s@@ *head) { struct@@ s@@ *@@ pre@@ =@@ head,*@@ p=@@ pre@@ ->next@@ ,*@@ s; s@@ =(struct@@ s@@ *)malloc(sizeof(struct@@ s@@ )); scanf("%s%d",@@ s@@ ->@@ c@@ ,&@@ s@@ ->@@ d); s@@ ->next=NULL; if(s@@ ->@@ d@@ >=60) { while(p@@ !=NULL@@ &&@@ p->@@ d@@ >=@@ s@@ ->@@ d) { pre@@ =p; p=p->next; } pre@@ ->next=@@ s; s@@ ->next=p; } if(s@@ ->@@ d@@ <60) { while(p!=NULL) { pre@@ =p; p=p->next; } pre@@ ->next=@@ s; s@@ ->next=p; } } intmain() { struct@@ s@@ *head,*p; intn,i; head=(struct@@ s@@ *)malloc(sizeof(struct@@ s@@ )); scanf("%d",&n); head@@ ->next=NULL; for(i=0;i<n;i++) { sort(@@ head); } p=head->next; while(p!=NULL) { printf("%s\n",p->@@ c); p=p->next; } return0; }  
c -1
h -1
0

intmain() { intk,@@ m,n; intsum=0; cin>>k; inta[100][100]; for(inti=0;i<k;i++) {@@ sum=0; cin>>m>>n; for(inti=0;i<m;i++) for(intj=0;j<n;j++) cin>>a[i][j]; if(m@@ !=1@@ &&n@@ !=1) { for(inti=0;i<n;i++) sum+=*(@@ *a@@ +i)@@ +*(@@ *(a@@ +m-1)@@ +i); for(inti=1;i<@@ m-1;i++) sum+=@@ *(*(a+i)@@ )@@ +*(@@ *(a+i)@@ +n-1); cout<<sum<<endl; } else@@ cout<<@@ **@@ a@@ <<endl; } return0; }  
c -1
h -1
intmain() {@@ inti,j,n,@@ a[@@ 20000]; cin>>n; for(i=0;i<n;i++){@@ cin>>@@ a[i];} if(n@@ >1) { for(i=1;i<n;i++) for(j=0;j<i;j++) if(a[i]==@@ a[j])@@ a[i]=0; cout<<a[0]; for(i=1;i<@@ n@@ ;i++){@@ if(a[i]@@ !=0)@@ cout<<""<<@@ a[i];} } if(n@@ ==1)@@ cout<<a[0]; return0; }  
c -1
h -1
0

struct{ charID[10]; int@@ nian@@ ; }@@ patient@@ [100],@@ old@@ [100],@@ qita@@ [100],@@ temp; intmain() { intn,i,k,@@ e,@@ num,@@ j; scanf("%d",&n); for(i=0;i<n;i++){ scanf("%s%d",@@ patient@@ [i].@@ ID,&@@ patient@@ [i].@@ nian@@ ); } num=0; for(i=0;i<n;i++){ if(@@ patient@@ [i].@@ nian@@ >=60){ num=num@@ +1; } } k=0; for(i=0;i<n;i++){ if(@@ patient@@ [i].@@ nian@@ >=60){ old@@ [k]=@@ patient@@ [i]; k=k+1; } } k=0; for(i=0;i<n;i++){ if(@@ patient@@ [i].@@ nian@@ <60){ qita@@ [k]=@@ patient@@ [i]; k=k+1; } } for(j=1;j<@@ num@@ ;j++){ for(k=0;k<@@ num@@ -j@@ ;k++){ if(old@@ [k+1@@ ].@@ nian@@ >@@ old@@ [k].@@ nian@@ ){ temp=@@ old@@ [k+1]; old@@ [k+1]=@@ old@@ [k]; old@@ [k]=@@ temp; } } } for(k=0;k<@@ num@@ ;k++){ printf("%s\n",old@@ [k].@@ ID); } for(k=0;k<@@ n-@@ num@@ ;k++){ printf("%s\n",@@ qita@@ [k].@@ ID); } return0; }  
c -1
h -1
structstudent { long@@ num; int@@ scorec@@ ; int@@ scorem@@ ; structstudent*next; }; structstudent*creat@@ (void) { structstudent*head,*@@ p0@@ ,*@@ p1,*p2; inti=0; head@@ =(structstudent*)malloc(len); head@@ ->next=NULL; scanf("%ld%d%d",&@@ head->@@ num,&@@ head->@@ scorec@@ ,&@@ head->@@ scorem@@ ); while(i<@@ 2) { p1=head; p0@@ =(structstudent*)malloc(len); scanf("%ld%d%d",&@@ p0->@@ num,&@@ p0->@@ scorec@@ ,&@@ p0->@@ scorem@@ ); while((@@ p0->@@ scorec@@ +@@ p0->@@ scorem@@ )@@ <=@@ (@@ p1->@@ scorec@@ +p1->@@ scorem@@ )&&(@@ p1->next@@ !=NULL@@ )) { p2=p1; p1=p1->next; } if((@@ p0->@@ scorec@@ +@@ p0->@@ scorem@@ )>@@ (@@ p1->@@ scorec@@ +p1->@@ scorem@@ )) { if(head@@ ==@@ p1@@ )@@ head=@@ p0; else@@ p2->next=@@ p0; p0->next@@ =p1; } else { p1->next=@@ p0; p0@@ ->next=NULL; } i++; } return(head); } structstudent*@@ sort(@@ structstudent*head@@ ,intn) { structstudent*@@ p0@@ ,*@@ p1,*p2; int@@ i=@@ 3@@ ; while(i<n) { p1=head; p0@@ =(structstudent*)malloc(len); scanf("%ld%d%d",&@@ p0->@@ num,&@@ p0->@@ scorec@@ ,&@@ p0->@@ scorem@@ ); while((@@ p0->@@ scorec@@ +@@ p0->@@ scorem@@ )@@ <=@@ (@@ p1->@@ scorec@@ +p1->@@ scorem@@ )&&(@@ p1->next@@ !=NULL@@ )) { p1=p1->next; } if((@@ p0->@@ scorec@@ +@@ p0->@@ scorem@@ )>@@ (@@ p1->@@ scorec@@ +p1->@@ scorem@@ )) { if(head@@ ==@@ p1@@ ) { p2=p1->next; (*@@ p2->next@@ ).@@ num=@@ p2->@@ num; (*@@ p2->next@@ ).@@ scorec@@ =@@ p2->@@ scorec@@ ; (*@@ p2->next@@ ).@@ scorem@@ =@@ p2->@@ scorem@@ ; p2->@@ num=@@ p1->@@ num; p2->@@ scorec@@ =p1->@@ scorec@@ ; p2->@@ scorem@@ =p1->@@ scorem@@ ; p1->@@ num=@@ p0->@@ num; p1->@@ scorec@@ =@@ p0->@@ scorec@@ ; p1->@@ scorem@@ =@@ p0->@@ scorem@@ ; } elseif(@@ p1@@ ==@@ head@@ ->next) { (*@@ p1->next@@ ).@@ num=@@ p1->@@ num; (*@@ p1->next@@ ).@@ scorec@@ =p1->@@ scorec@@ ; (*@@ p1->next@@ ).@@ scorem@@ =p1->@@ scorem@@ ; p1->@@ num=@@ p0->@@ num; p1->@@ scorec@@ =@@ p0->@@ scorec@@ ; p1->@@ scorem@@ =@@ p0->@@ scorem@@ ; } else { p1->@@ num=@@ p0->@@ num; p1->@@ scorec@@ =@@ p0->@@ scorec@@ ; p1->@@ scorem@@ =@@ p0->@@ scorem@@ ; } } free(@@ p0@@ ); i++; } return(head); } voidmain() { structstudent*head,*p1,*p2; intn; scanf("%d",&n); head=creat(); head=@@ sort(@@ head,@@ n); p1=@@ head->next; p2=p1->next; printf("%ld%d\n",@@ head->@@ num,@@ (@@ head->@@ scorec@@ +@@ head->@@ scorem@@ )); printf("%ld%d\n",@@ p1->@@ num,@@ (@@ p1->@@ scorec@@ +p1->@@ scorem@@ )); printf("%ld@@ %d",@@ p2->@@ num,@@ (@@ p2->@@ scorec@@ +@@ p2->@@ scorem@@ )); }  
c -1
h -1
0

intmain() { introw,col,@@ i,j,k,@@ sum; cin>>row>>col; intarray[@@ row][col]; for(i=0;i<row;i++) for(j=0;j<col;j++) cin>>array[i][j]; sum=@@ row@@ +@@ col; for(k=@@ 2@@ ;k<=@@ sum@@ ;k++) for(i=1;i<=@@ row;i++) for(j=@@ col@@ ;j>0;j--) if(i+j@@ ==k) {@@ cout<<array@@ [i-1]@@ [j-1]@@ <<endl@@ ;break;} return0; }  
c -1
h -1
intmain() { inta[@@ 17@@ ],@@ i,j,k,@@ n; cin>>@@ a[1]; while(@@ a[1]@@ !=-1) { n=0; i=1; while(a[i]@@ !=0) { i++; cin>>a[i]; } for(j=1;j<=@@ i;j++) { for(k=1;k<=@@ i;k++) { if(a[j]==@@ a[k]@@ *2) { n++; } } } n=@@ n-1; cout<<n<<endl; cin>>@@ a[1]; } return0; }  
c -1
h -1
0

int@@ p@@ (intn,int@@ heightLimit@@ ,int*@@ missileHeight@@ ,int@@ missileNum@@ ) { inta; intb; if(n==@@ missileNum@@ -1) if(@@ missileHeight@@ [n@@ ]<=@@ heightLimit@@ ) return1; else return0; else if(@@ missileHeight@@ [n@@ ]<=@@ heightLimit@@ ) { a@@ =1@@ +p@@ (n@@ +1,@@ missileHeight@@ [n@@ ],@@ missileHeight@@ ,@@ missileNum@@ ); b=@@ p@@ (n@@ +1,@@ heightLimit@@ ,@@ missileHeight@@ ,@@ missileNum@@ ); return@@ a@@ >b@@ ?@@ a@@ :@@ b; } else return@@ p@@ (n@@ +1,@@ heightLimit@@ ,@@ missileHeight@@ ,@@ missileNum@@ ); } voidmain() { intn,i,j; int*@@ missileHeight@@ ; int@@ highest@@ =-1; scanf("%d",&n); missileHeight@@ =@@ (int*)malloc(sizeof(int)*n); for(i=0;i<n;i++) { scanf("%d",&(@@ missileHeight@@ [i]@@ )); if(@@ missileHeight@@ [i]>@@ highest@@ )@@ highest@@ =@@ missileHeight@@ [i]; } printf("%d",@@ p@@ (@@ 0,@@ highest@@ ,@@ missileHeight@@ ,@@ n@@ )); }  
c -1
h -1
intmain() { intn,@@ i=0,@@ x,@@ m=0,@@ k=0,@@ t=0; cin>>n; int@@ shuzu@@ [n]; for(i=0;i<n;i++) { cin>>x; shuzu@@ [i]=@@ x; } for(m=0;m@@ <n;m++) { if(m@@ ==0){@@ cout<<@@ shuzu@@ [m]@@ ;} else { for(k=0;k<@@ m;k++) { if(shuzu@@ [m@@ ]!=@@ shuzu@@ [k]@@ )@@ t=1; else{@@ t@@ =0;@@ break;} } if(t@@ ==1)@@ cout<<""<<@@ shuzu@@ [m]; } } return0; }  
c -1
h -1
0

intf@@ (intn,int@@ min@@ ){ inti,@@ result=1; if(@@ min@@ >n) return0; for(i=min@@ ;i<@@ n;i++){ if(n@@ %i==0){ result+=@@ f(@@ n@@ /i,i); } } returnresult; } intmain(){ intn,a,@@ i,@@ t; scanf("%d",&n); for(i=0;i<n;i++){ scanf("%d",&a); t=@@ f(a,@@ 2); if(i<@@ n-1) printf("%d\n",t); else printf("%d",t); } return0; }  
c -1
h -1
intmain() { intn,i,j,@@ s,@@ a1@@ =0,@@ b1@@ =0,@@ a2@@ =0,@@ b2@@ =0,@@ c[@@ 1001@@ ][@@ 1001]; scanf("%d",&n); for(i=0;i<n;i++) for(j=0;j<n;j++) scanf("%d",&@@ c@@ [i][j]); for(i=0;i<n;i++) { for(j=0;j<n;j++) { if(c@@ [i][j]==0) { a1@@ =i; b1@@ =j; break; } } if(@@ c[@@ a1@@ ][@@ b1@@ ]@@ ==0)break; } for(i=n-1;i>=0;i--) { for(j=n-1;j>=0;j--) { if(c@@ [i][j]==0) { a2@@ =i; b2@@ =j; break; } } if(@@ c[@@ a2@@ ][@@ b2@@ ]@@ ==0)break; } s=(@@ a2-a1@@ -1)*(@@ b2-b1@@ -1); printf("%d",s); return0; }  
c -1
h -1
0

intmain() { intk,m,n,i,j,@@ s=0,@@ a[@@ 102@@ ][@@ 102@@ ]; cin>>k; while(k@@ >0) { s=0; cin>>m>>n; for(i=1;i<=m;i++) for(j=1;j<=n;j++) cin>>a[i][j]; for(i=1;i<=m;i++) { s=s+@@ a[i][1]@@ +@@ a[i][@@ n]; } for(j=2;j<=@@ n-1;j++) { s=s+@@ a[1]@@ [j]+@@ a[m]@@ [j]; } cout<<s<<endl; k--; } }  
c -1
h -1
intmain() { intn,a,@@ i,j,@@ k@@ =1,@@ num[@@ 20000]; cin>>n; cin>>a; num[@@ 0]=@@ a; for(i=1;i<n;i++) { cin>>a; for(j=0;j<k;j++) { if(a==@@ num@@ [j]) break; } if(j==@@ k) { num@@ [k]=@@ a; k=k+1; } } for(i=0;i<=@@ k@@ -2;i++) cout<<@@ num[i]@@ <<""; cout<<num@@ [k@@ -1]; return0; }  
c -1
h -1
0

intmain(intargc,char*argv[]) { intn; scanf("%d",&n); struct {int@@ id@@ ;@@ int@@ yuwen@@ ;@@ int@@ shuxue@@ ;@@ }stu[@@ 1000001@@ ]; int@@ grade@@ [100000]; inti,@@ a,b; int@@ m1@@ =0,@@ m2@@ =0,@@ m3@@ =0; int@@ m1id@@ ,@@ m2id@@ ,@@ m3id@@ ; for(i=0;i<n;i++) { scanf("%d",&@@ stu[i].@@ id); scanf("%d",&@@ stu[i].@@ yuwen@@ ); scanf("%d",&@@ stu[i].@@ shuxue); grade@@ [i]=@@ stu[i].@@ yuwen+stu[i].@@ shuxue; } for(i=0;i<n;i++) {if(@@ grade@@ [i]>@@ m1@@ ) {@@ m1=@@ grade@@ [i]; a=i; m1id@@ =stu[i].@@ id@@ ;} } printf("%d",@@ m1id@@ ); printf("%d\n",@@ m1@@ ); for(i=0;i<n;i++) {if((@@ grade@@ [i]>@@ m2@@ )&&(i@@ !=@@ a@@ )) {@@ m2=@@ grade@@ [i]; b=i; m2id@@ =stu[i].@@ id@@ ;} } printf("%d",@@ m2id@@ ); printf("%d\n",@@ m2@@ ); for(i=0;i<n;i++) {if((@@ grade@@ [i]>@@ m3@@ )&&(i@@ !=@@ a@@ )&&(i@@ !=@@ b@@ )) {@@ m3=@@ grade@@ [i]; m3id@@ =stu[i].@@ id; } } printf("%d",@@ m3id@@ ); printf("%d\n",@@ m3@@ ); return0; }  
c -1
h -1
structstudent { intid; int@@ ch; intmath; }; voidmain() { structstudentstu[100000]; intn,i,j,@@ sum=0,@@ id1@@ =0,@@ flag=0; scanf("%d",&n); for(i=0;i<n;i++) scanf("%d%d%d",&stu[i].@@ id@@ ,&stu[i].@@ ch@@ ,&stu[i].math); for(i=0;i<3;i++) { for(j=0;j<n;j++) { if((@@ stu[j].@@ ch@@ +@@ stu[j].@@ math@@ )>@@ sum) {@@ sum=@@ stu[j].@@ ch@@ +@@ stu[j].@@ math; id1@@ =@@ stu[j].@@ id; flag@@ =j;} } printf("%d%d\n",@@ id1@@ ,@@ sum); sum=0; id1@@ =0; stu[@@ flag@@ ].@@ ch@@ =0; stu[@@ flag@@ ].@@ math@@ =0; flag=0; } }  
c -1
h -1
1


intmain() { intsz[100][100]; introw,col,@@ i,j; int@@ startrow@@ =0,@@ startcol@@ =0; scanf("%d%d",&@@ row,@@ &@@ col); for(i=0;i<row;i++) { for(j=0;j<col;j++) { scanf("%d",&sz[i][j]); } } while((@@ startcol@@ +@@ startrow@@ )!=@@ (@@ row+col-2@@ )) { if(@@ startcol@@ <col@@ -1) { for(i=@@ startrow@@ ;@@ (i@@ <row@@ )&&(i@@ <=@@ startrow@@ +@@ startcol@@ );i++) { printf("%d\n",@@ sz[i]@@ [@@ startcol@@ +@@ startrow@@ -i]); } startcol@@ ++; } else { for(i=@@ startrow@@ ;@@ (i@@ <row@@ )&&(i@@ <=@@ startrow@@ +@@ startcol@@ );i++) { printf("%d\n",@@ sz[i]@@ [@@ startcol@@ +@@ startrow@@ -i]); } startrow@@ ++; } } printf("%d",@@ sz[@@ row-1@@ ][col@@ -1]); return0; }  
c -1
h -1
intmain() { inta,@@ i,@@ t@@ ,j,@@ sum,@@ m,n; scanf("%d\n",&@@ t); for(j=0;j<@@ t;j++) { scanf("%d%d\n",&@@ m,&n); sum=0; for(i=1;i<=@@ m*@@ n;i++) { scanf("%d",&a); if((i@@ <=@@ n@@ )||(@@ i@@ >@@ (m@@ *@@ n-@@ n)@@ )||(@@ i@@ %n@@ ==1)@@ ||(@@ i@@ %n@@ ==0)@@ )@@ sum+=@@ a; } printf("%d\n",sum); } return0; }  
c -1
h -1
0

intm,n,@@ a[@@ 1000],b[1000],@@ c[@@ 2000@@ ],@@ s,@@ t; voidinput() { scanf("%d%d",&m,&n); for(s=0;s@@ <m;@@ s++) scanf("%d",&a[@@ s@@ ]); for(s=0;s@@ <n;@@ s++) scanf("%d",&@@ b[@@ s@@ ]); } voidorder@@ () { intk; for(@@ s@@ =1;@@ s@@ <m;@@ s++) for(t=0;t@@ <m@@ -@@ s@@ ;t++) if(a[@@ t@@ ]>@@ a[t@@ +1]) { k=@@ a[t@@ ]; a[t@@ ]=a[@@ t@@ +1]; a[t@@ +1]=@@ k; } for(@@ s@@ =1;@@ s@@ <n;@@ s++) for(t=0;t@@ <@@ n-@@ s@@ ;t++) if(@@ b[t@@ ]>@@ b[t@@ +1]) { k=@@ b[t@@ ]; b[t@@ ]=@@ b[t@@ +1]; b[t@@ +1]=@@ k; } } void@@ add@@ () { for(s=0;s@@ <m;@@ s++) c[@@ s@@ ]=a[@@ s@@ ]; for(@@ s=@@ m,@@ t@@ =0;@@ s@@ <@@ m+@@ n;@@ s@@ ++,@@ t++) c[@@ s@@ ]=@@ b[t@@ ]; } voidoutput@@ () { for(s=0;s@@ <@@ m+@@ n;@@ s++) { if(s@@ !=@@ m+@@ n-1)@@ printf("%d",c[@@ s@@ ]); else@@ printf("%d",c[@@ s@@ ]); } } intmain() { input(); order@@ (); add@@ (); output@@ (); return0; }  
c -1
h -1
main() { inta[@@ 15@@ ][@@ 15],@@ i=0,j=0,@@ s=0,@@ m=0,@@ h@@ =0,@@ g@@ [@@ ]={0@@ ,@@ 0,0,0,0,0,0,0,0,@@ 0,0,0,0,0,0,0,0,@@ 0,0,@@ 0},@@ b[@@ 15]; while(1) { scanf("%d",&a[i][j]); if(a[i][j]==0) { b[i]@@ =j; i=i+1; j=0; } else@@ if(a[i][j]==@@ -1) { break; } else@@ j=j+1; } for(s=0;s@@ <i@@ ;s++) { for(m=0;m<@@ b[@@ s@@ ]@@ ;m++) { for(h=0;h@@ <@@ b[@@ s@@ ];@@ h++) { if(a[@@ s@@ ][m@@ ]==2*@@ a[@@ s@@ ][@@ h@@ ]) { g@@ [s@@ ]=@@ g@@ [s@@ ]+1; } } } } for(s=0;s@@ <i@@ ;s++) { printf("%d\n",@@ g@@ [s@@ ]); } return0; }  
c -1
h -1
0

structbook { intnumber; charauthor[26]; structbook*next; }; intm,@@ i; structbook*@@ creat@@ (void) { structbook@@ *head,*p1,*p2; inti=1; p1=p2=(struct@@ book@@ *)malloc(sizeof(structbook)); head=p1; for(i=1;i<m;i++) { scanf("%d%s",&p1->@@ number,@@ p1->@@ author); p1=(structbook@@ *)malloc(sizeof(structbook)); p2->next=p1; p2=p1; } scanf("%d%s",&p1->@@ number,@@ p1->@@ author); p2->next=p1; p1->next=NULL; returnhead; } main() { structbook@@ *head,*p; intj,@@ a[@@ 26]={0},@@ max; scanf("%d",&m); head=creat(); for(p=head@@ ;p!=NULL;p=p->next) for(i=0;i<strlen(@@ p->@@ author@@ );i++) switch(@@ p->@@ author@@ [i]) { case'@@ A@@ ':@@ a[0]@@ ++@@ ;break; case'@@ B@@ ':@@ a[1@@ ]++;break; case'@@ C@@ ':@@ a[2@@ ]++;break; case'@@ D@@ ':a[@@ 3@@ ]++;break; case'@@ E@@ ':a[@@ 4@@ ]++;break; case'@@ F@@ ':a[@@ 5@@ ]++;break; case'@@ G@@ ':a[@@ 6@@ ]++;break; case'@@ H@@ ':a[@@ 7@@ ]++;break; case'@@ I@@ ':a[@@ 8@@ ]++;break; case'@@ J@@ ':a[@@ 9@@ ]++;break; case'@@ K@@ ':a[@@ 10@@ ]++;break; case'@@ L@@ ':a[@@ 11@@ ]++;break; case'@@ M@@ ':a[@@ 12@@ ]++;break; case'@@ N@@ ':a[@@ 13@@ ]++;break; case'@@ O@@ ':a[@@ 14@@ ]++;break; case'@@ P@@ ':a[@@ 15@@ ]++;break; case'@@ Q@@ ':a[@@ 16@@ ]++;break; case'@@ R@@ ':a[@@ 17@@ ]++;break; case'@@ S@@ ':a[@@ 18@@ ]++;break; case'@@ T@@ ':a[@@ 19@@ ]++;break; case'@@ U@@ ':a[@@ 20@@ ]++;break; case'@@ V@@ ':a[@@ 21@@ ]++;break; case'@@ W@@ ':a[@@ 22@@ ]++;break; case'@@ X@@ ':a[@@ 23@@ ]++;break; case'@@ Y@@ ':a[@@ 24@@ ]++;break; case'@@ Z@@ ':a[@@ 25@@ ]++;break; } max=@@ a[0]; for(i=0;i<26;i++) if(a[i]@@ >max)max=@@ a[i]; for(i=0;i<26;i++) if(a[i]==@@ max) {@@ printf("%c\n",@@ 65@@ +i@@ );break;} printf("%d\n",max); for(p=head@@ ;p!=NULL;p=p->next) for(j=0;j<strlen(@@ p->@@ author@@ );j++) if(p->@@ author@@ [j]==@@ 65@@ +i)@@ printf("%d\n",p->@@ number); }  
c -1
h -1
main() { intn,@@ t,@@ i,j,@@ h,@@ k,@@ b[@@ 25],@@ a[@@ 25]; k=1; t=@@ n-1; scanf("%d",&n); for(i=0;i<n;i++) scanf("%d",&a[i]); for(i=0;i<n;i++) b[i]=1; for(i=n-2;i>=0;i--) { for(j=i+1;j<n;j++) { if(a[i]>=a[j]) { t@@ =j; b[i]=b[j]+1; for(h@@ =j@@ ;@@ h@@ <n;@@ h++) { if(a[i]>=@@ a[h@@ ]@@ &&@@ b[@@ h@@ ]>@@ b[t@@ ]) { b[i]=@@ b[@@ h@@ ]+1; t=@@ h; } } if(k@@ <@@ b[i]) { k=@@ b[i]; } break; } } } printf("%d",k); }  
c -1
h -1
0

voidmain() { inti,j,k,l,@@ x=0,@@ a[@@ 20]; while(1) { x=0; scanf("%d",&a[0]); if(a[0]==-1)break; for(j=1@@ ;a@@ [j-1]@@ !=0;j++) scanf("%d",&a[j]); for(k=0;k<j@@ -1;k++) { for(l=0;l<@@ j@@ ;l++) { if(a[@@ l@@ ]==2*@@ a[k]) x=x@@ +1; } } printf("%d\n",x); } }  
c -1
h -1
structstu { intnum; int@@ ch; intmath; structstu*next; }; voidmain() { intn,@@ m=0,@@ max=0,@@ max2@@ =0,@@ max3@@ =0,@@ no@@ =0,@@ no2@@ =0,@@ no3@@ =0; structstu@@ *p; scanf("%d",&n); structstu*@@ p1,*p2,*head; p1=(struct@@ stu@@ *)malloc(LEN); scanf("%d%d%d",&p1->num,&p1->@@ ch@@ ,&p1->math); head=NULL; while(@@ n-1) { m=m+1; if(m==1) head=p1; else p2->next=p1; p2=p1; p1=(struct@@ stu@@ *)malloc(LEN); scanf("%d%d%d",&p1->num,&p1->@@ ch@@ ,&p1->math); n--; } p2->next=NULL; p=head; while(p) { p->@@ ch@@ =p->@@ math+@@ p->@@ ch; p=p->next; } p=head; while(p) { if(p->@@ ch@@ >max) { max=@@ p->@@ ch; no@@ =p->@@ num; } p=p->next; } printf("%d%d\n",@@ no@@ ,max); p=head; while(p) { if(p->@@ ch@@ <=@@ max@@ &&@@ p->@@ ch@@ >@@ max2@@ &&@@ p->@@ num@@ !=@@ no@@ ) { max2=@@ p->@@ ch; no2@@ =p->@@ num; } p=p->next; } printf("%d%d\n",@@ no2@@ ,@@ max2@@ ); p=head; while(p) { if(p->@@ ch@@ <=@@ max2@@ &&@@ p->@@ ch@@ >@@ max3@@ &&@@ p->@@ num@@ !=@@ no@@ &&@@ p->@@ num@@ !=@@ no2@@ ) { max3=@@ p->@@ ch; no3@@ =p->@@ num; } p=p->next; } printf("%d%d",@@ no3@@ ,max3@@ ); }  
c -1
h -1
0

structstudent {intnum; chars[@@ 26]; }stu[@@ 999]; intmain() {@@ intm,@@ a[@@ 26]={0},@@ i,j,@@ max,@@ k,@@ l=0; scanf("%d",&m); for(i=0;i<m;i++) scanf("%d%s",&@@ stu[i].@@ num,@@ stu[i].@@ s); for(i=0;i<26;i++) for(k=0;k<@@ m;k++) for(j=0;j<strlen(@@ stu[k].@@ s@@ );j++) if(@@ stu[k].@@ s[j]=='@@ A'+@@ i) a[i]@@ ++; max=@@ a[0]; for(i=1;i<26;i++) if(a[i]>max) {max=@@ a[i];@@ l@@ =i;} printf("%c\n",@@ 'A'+@@ l); printf("%d\n",max); for(i=0;i<m;i++) for(j=0;j<strlen(@@ stu[i].@@ s@@ );j++) if(stu[i].@@ s[j]=='@@ A'+@@ l) {printf("%d\n",@@ stu[i].@@ num); break;} return0; }  
c -1
h -1
intmain(){ intk,@@ i,j; intn,@@ row,col; int@@ shuzu@@ [@@ mx@@ ][@@ mx@@ ],@@ cc@@ [@@ 1000@@ ]={@@ 99@@ }; int@@ result=0; scanf("%d",&n); for(k=0;k<n;k++){ scanf("%d%d",&row,&col); for(i=0;i<row;i++){ for(j=0;j<col;j++){ scanf("%d",&@@ shuzu@@ [i][j]); } } for(i=0;i<row;i++){ for(j=0;j<col;j++){ if(i@@ ==0){@@ result+=@@ shuzu@@ [i][j]@@ ;} elseif(i==@@ (@@ row-1)@@ ){@@ result+=@@ shuzu@@ [i][j]@@ ;} else{@@ if(j@@ ==0){@@ result+=@@ shuzu@@ [i][j]@@ ;} elseif(@@ j==@@ (@@ col@@ -1)@@ ){@@ result+=@@ shuzu@@ [i][j]@@ ;} } } } cc@@ [k]=@@ result; result=0; } for(k=0;k<n;k++){ printf("%d\n",@@ cc@@ [k]); } return0; }  
c -1
h -1
0

intmain() { int@@ p,@@ m,n,@@ i,j,k,@@ a[100][100],@@ sum; scanf("%d",&@@ p); for(i=0;i<p@@ ;i++) { scanf("%d%d",&m,&n); sum=0; for(j=1;j<=m;j++) for(k=1;k<=n;k++) scanf("%d",&a[j]@@ [k]); if(m@@ ==1&&n@@ ==1) { printf("%d\n",@@ a[1@@ ][1@@ ]); break; } for(k=1;k<=n;k++) sum+=@@ a[1@@ ][k@@ ]+@@ a[m@@ ][k@@ ]; for(j=1;j<=m;j++) sum+=@@ a[j]@@ [1]@@ +@@ a[j]@@ [n]; sum@@ -=@@ a[1@@ ][1@@ ]+@@ a[1@@ ][n@@ ]+@@ a[m@@ ][1@@ ]+@@ a[m@@ ][n]; printf("%d\n",sum); } return0; }  
c -1
h -1
intmain() { intx,y,@@ z,@@ k=0,@@ i; cin>>x@@ >>@@ y@@ >>@@ z; inta[@@ 12]={31,28,31,30,31,30,31,31,30,31,30,31}; intb[@@ 12]={31,29,31,30,31,30,31,31,30,31,30,31}; if((x@@ %4==0&&@@ x@@ %100!=0@@ )||(@@ x%@@ 400==0)) for(i=0;i<@@ y@@ -1;i++) k=k@@ +@@ b[i]; else for(i=0;i<@@ y@@ -1;i++) k=k@@ +@@ a[i]; k=k@@ +@@ z; cout<<@@ k; return0; }  
c -1
h -1
0

int@@ mysort@@ (void@@ *@@ a,@@ void@@ *@@ b) { return@@ *(int*)@@ a@@ -@@ *(int*)@@ b; } intmain() { int@@ in@@ [1000]; intn,k; inti; int@@ found@@ =0; scanf("%d%d",&@@ n,@@ &@@ k); for(i=0;i<n@@ ;++i) { scanf("%d",&@@ in@@ [i]); } qsort(@@ in@@ ,@@ n,@@ sizeof(int),@@ mysort@@ ); int*@@ lp@@ =@@ &@@ in@@ [0]; int*@@ rp@@ =@@ &@@ in@@ [n-1]; while(@@ lp@@ !=@@ rp@@ ) { i=@@ *@@ lp@@ +@@ *@@ rp@@ ; if(i<@@ k) { ++@@ lp@@ ; }elseif(@@ i@@ >@@ k) { --@@ rp@@ ; }else{ found@@ =1; break; } } if(@@ found@@ ) { printf("yes\n"); }else{ printf("no\n"); } return0; }  
c -1
h -1
intmain(){ char@@ asd@@ [500],@@ zxc@@ [500]; inti,j; doublen; scanf("%lf",&n); scanf("%s",@@ asd@@ ); scanf("%s",@@ zxc@@ ); int@@ len1=strlen(@@ asd@@ ); int@@ len2=strlen(@@ zxc@@ ); int@@ a1@@ =0; int@@ a2@@ =0; for(i=0;i<len1;i++) { if(@@ asd@@ [i]!='A'&&@@ asd@@ [i]!='C'&&@@ asd@@ [i]!='G'&&@@ asd@@ [i]!='T@@ ') a1@@ ++; } for(i=0;i<@@ len2@@ ;i++) { if(@@ zxc@@ [i]!='A'&&@@ zxc@@ [i]!='C'&&@@ zxc@@ [i]!='G'&&@@ zxc@@ [i]!='T@@ ') a2@@ ++; } if(@@ a1@@ !=0@@ ||@@ a2@@ !=0@@ ||@@ len1@@ !=@@ len2) printf("error"); else { int@@ d=0; for(i=0;i<len1;i++) { if(@@ asd@@ [i]==@@ zxc@@ [i]) d++; } double@@ result@@ =1.0*@@ d@@ /@@ len1; if(result@@ >n) printf("yes"); else printf("no"); } return0; }  
c -1
h -1
0

intmain() { inti,j,k,@@ m,n; inta[100][100]; cin>>n>>m; for(i=1;i<=n;i++) for(j=1;j<=m;j++) cin>>a[i][j]; for(i=1;i<=@@ m+@@ n-1;i++) for(j=1;j<=n;j++) { if(i@@ +1@@ -j@@ >0@@ &&i@@ +1@@ -j@@ <=@@ m) cout<<*(*(a@@ +j)@@ +i@@ +1@@ -j@@ )<<endl; } return0; }  
c -1
h -1
intmain(){ char@@ sz[@@ 2][@@ 510@@ ]; doublea,@@ e; intb,@@ c,d,@@ f; ints[@@ 2@@ ]; d=0; scanf("%lf",&a); for(b=0;b@@ <@@ 2;@@ b++){ scanf("%s",&@@ sz[@@ b@@ ]); s[@@ b@@ ]=@@ strlen(@@ sz@@ [0]); for(@@ f@@ =0;@@ f@@ <@@ s[@@ b@@ ];@@ f@@ ++){ if(sz[@@ b@@ ][@@ f@@ ]!='@@ A'&&@@ sz[@@ b@@ ][@@ f@@ ]!='@@ T'&&@@ sz[@@ b@@ ][@@ f@@ ]!='@@ G'&&@@ sz[@@ b@@ ][@@ f@@ ]!='@@ C'){ printf("error"); return0; } } } if(s@@ [0]@@ !=@@ s[1]@@ ){ printf("error\n"); return0; } for(b=0;b@@ <@@ s[0]@@ ;@@ b++){ if(@@ sz[0][@@ b@@ ]==@@ sz@@ [1@@ ][b@@ ]){ d++; } } e@@ =1.0*@@ d@@ /@@ s[@@ 0]; if(e@@ >@@ a){ printf("yes\n"); } else{ printf("no\n"); } return0; }  
c -1
h -1
0

int@@ read@@ (inta[@@ 200@@ ],int@@ b[100@@ ]) {@@ intm,n,@@ i; scanf("%d%d",&m,&n); a[0]=@@ m;@@ b[0]=@@ n; for(i=1;i<=m;i++) scanf("%d",&a[i]); for(i=1;i<=n;i++) scanf("%d",&b[i]); return0; } int@@ seq@@ (inta[@@ 200@@ ]) {@@ inti,j,@@ t,@@ m=@@ a[0]; for(j=1;j<=@@ m-1;j++) for(i=1;i<=@@ m@@ -j;i++) if(a[i]>a[i+1]) {t=@@ a[i];@@ a[i]=a[i+1@@ ];@@ a[i+1]=@@ t;} return0; } int@@ toge@@ (inta[@@ 200@@ ],int@@ b[100@@ ]) {int@@ i@@ ;@@ int@@ m=@@ a[0]@@ ;@@ int@@ n=@@ b[0]; a[0]=@@ a[0]@@ +@@ b[0]; for(i=m@@ +1;i<=@@ m+n;i++) a[i]=b[i-@@ m]; return0;} int@@ see@@ (inta[@@ 200@@ ]) {inti; printf("%d",@@ a[1]); for(i=2;i<=@@ a[0]@@ ;i++) printf("%d",a[i]); return0;} intmain() {@@ inta[@@ 200@@ ],b[100]; read@@ (a,b); seq@@ (a@@ );@@ seq@@ (@@ b); toge@@ (a,b); see@@ (a); return0; }  
c -1
h -1
voidmain() {@@ intm,@@ t,@@ i,j,@@ n; inta[@@ 20000],b[@@ 20000]; a[@@ 20000@@ ]='\0'; b[@@ 20000@@ ]='\0'; scanf("%d",&n); for(i=0;i<n@@ ;i=i+1@@ ) scanf("%d",&b[i]); a[0]=@@ b[0]; m=1; t=1; for(i=1;i<@@ n@@ ;i=i+1@@ ) {@@ for(j=0;j<m@@ ;j@@ =j+1@@ ) {@@ if(a[j]==@@ b[i]@@ )@@ t@@ =0;} if(t@@ ==1){@@ a[m@@ ]=b[i]; m=m@@ +1;} t@@ =1;} for(i=0;i<m@@ -1@@ ;i=i+1@@ ) printf("%d",a[i]); printf("%d",a[@@ m-1@@ ]); }  
c -1
h -1
0

struct@@ bingren@@ { charid[20]; intage; }@@ bing@@ [100@@ ]={@@ '\0@@ ',@@ 0@@ }; struct@@ laoren@@ { char@@ oid@@ [20]; int@@ oage@@ ; }@@ lao@@ [100@@ ]={@@ '\0@@ ',@@ 0@@ }; voidmain() { intn,i,j=0,@@ l; struct@@ laoren@@ temp; scanf("%d",&n); for(i=0;i<n;i++) { scanf("%s",@@ bing@@ [i].id); scanf("%d",&@@ bing@@ [i].age); } for(i=0;i<n;i++) { if(@@ bing@@ [i].age>=60) { strcpy(@@ lao@@ [j].@@ oid@@ ,@@ bing@@ [i].id); lao@@ [j].@@ oage@@ =@@ bing@@ [i].age; bing@@ [i].age@@ =-1; j++; } else continue; } for(l=0;l<@@ j@@ ;l++) { for(i=0;i<j@@ -l@@ ;i++) { if(@@ lao@@ [i].@@ oage@@ <@@ lao@@ [i+1].@@ oage@@ ) { temp=@@ lao@@ [i]; lao@@ [i]=@@ lao@@ [i+1]; lao@@ [i+1]=@@ temp; } } } for(i=0;i<j@@ +1;i++) { printf("%s\n",@@ lao@@ [i].@@ oid@@ ); } for(i=0;i<n;i++) { if(@@ bing@@ [i].age@@ >=0) { printf("%s\n",@@ bing@@ [i].id); } else continue; } }  
c -1
h -1
intmain() { intn,a,@@ i,@@ begin@@ ,@@ end@@ ,@@ flag=0,@@ x1,@@ x2,@@ y1,@@ y2@@ ; scanf("%d",&n); for(i=1;i<=@@ n*@@ n;i++){ scanf("%d",&a); if(a==0) { if(flag@@ ==0)@@ begin@@ =i; flag=1; end@@ =i; } } x1@@ =(@@ begin@@ +@@ n-1)@@ /n; y1@@ =@@ begin@@ %@@ n; x2@@ =(@@ end@@ +@@ n-1)@@ /n; y2@@ =@@ end@@ -n@@ *(@@ x2@@ -1); printf("%d\n",@@ (@@ x2-x1-1)*(y2-y1@@ -1)); return0; }  
c -1
h -1
0

intmain(){ chars[256],@@ s1@@ [256],@@ s2@@ [256],@@ ss@@ [@@ 20],@@ re@@ [20]; inti,j,@@ x=0,@@ y=0,@@ a,@@ flag=0; gets(s); scanf("%s%s",@@ ss@@ ,@@ re); for(i=0;s[i]@@ !='\0';i++){ if(s@@ [i]!=@@ ss@@ [0]){ s1@@ [x@@ ]=@@ s[i]; x++; } elseif(@@ s@@ [i]==@@ ss@@ [0]){ a=i; flag=1; for(j=0;@@ ss@@ [j]@@ !='\0';j++){ if(@@ ss@@ [j]!=@@ s[@@ a@@ ]){ flag=0; } a++; } if(flag@@ ==0){ s1@@ [x@@ ]=@@ s[i]; x++; } } if(flag@@ ==1){ s1@@ [x@@ ]='\0'; break; } } if(flag@@ ==1){ for(i@@ +=@@ strlen(@@ ss@@ );@@ s[i]@@ !='\0';i++){ s2@@ [y@@ ]=@@ s[i]; y++; } } s2@@ [y@@ ]='\0'; if(flag@@ ==1){ printf("%s@@ %s%s",@@ s1,@@ re@@ ,@@ s2); } if(flag@@ ==0){ printf("%s",s); } return0; }  
c -1
h -1
intmain() { intn,i,j,k,@@ p,@@ t; inta[@@ 20002@@ ]; cin>>n; cin>>a[0]; p=0; for(i=1;i<=n-1;i++) { cin>>k; t=0; for(j=0;j<=@@ p@@ ;j++) { if(a[j]==@@ k) { t=1; break; } } if(t@@ ==1)@@ continue; else { p=p@@ +1; a[p@@ ]=@@ k; } } cout<<a[0]; for(i=1;i<=@@ p@@ ;i++) { cout<<""<<a[i]; } cout<<endl; return0; }  
c -1
h -1
0

intmain() { inti,@@ sum=0,@@ m,n; double@@ x; scanf("%lf",&x); char@@ c1@@ [501],@@ c2@@ [501]; scanf("%s",@@ c1@@ ); scanf("%s",@@ c2@@ ); m=strlen(@@ c1@@ ); n=strlen(@@ c2@@ ); if(m==@@ n){ for(i=0;i<m;i++){ if((@@ c1@@ [i]!='A'&&@@ c1@@ [i]!='T'&&@@ c1@@ [i]!='C'&&@@ c1@@ [i]!='G')||(@@ c2@@ [i]!='A'&&@@ c2@@ [i]!='T'&&@@ c2@@ [i]!='C'&&@@ c2@@ [i]!='G')){ sum++; } } if(sum@@ !=0){ printf("error"); }else{ for(i=0;i<m;i++){ if(@@ c1@@ [i]==@@ c2@@ [i]){ sum++; } } if((@@ double)@@ sum/@@ m@@ >@@ x){ printf("yes"); }else{ printf("no"); } } }@@ elseif(m@@ !=@@ n){ printf("error"); } return0; }  
c -1
h -1
intmain() { intn,a[@@ 1000][1000]; inti,j; int@@ lon@@ ,@@ wid@@ ; intm; int@@ c1@@ =0,@@ c2@@ =0; lon@@ =0,@@ wid@@ =0; scanf("%d",&n); for(i=0;i<n;i++) { for(j=0;j<n;j++) { scanf("%d",&a[i][j]); } } for(i=0;i<n;i++) { for(j=0;j<n;j++) { if(a[i][j]==0) { c1@@ =@@ c1@@ +1; if(@@ c1@@ >2) lon@@ =@@ c1@@ ;break; } } } for(j=0;j<n;j++) { for(i=0;i<n;i++) { if(a[i][j]==0) { c2@@ =@@ c2@@ +1; if(@@ c2@@ >2) wid@@ =@@ c2@@ ;break; } } } m@@ =(@@ lon@@ -2)*(@@ wid@@ -2); printf("%d\n",m); return0;}  
c -1
h -1
0

intmain() { float@@ x,y,@@ k=0; inti,j; chara[501],b[501]; scanf("%f",&@@ x); scanf("%s",a); scanf("%s",b); for(i=0;a[i]@@ ;i++) if(!@@ (@@ a[i]=='@@ A'||a[i]=='T'||a[i]=='@@ G'||@@ a[i]=='@@ C')){ printf("error\n"); return0; } for(j=0;@@ b[j]@@ ;j++) if(!@@ (@@ b[j]@@ =='@@ A'||@@ b[j]@@ =='@@ T'||@@ b[j]@@ =='@@ G'||@@ b[j]@@ =='@@ C')){ printf("error\n"); return0; } if(i!=@@ j){ printf("error\n"); return0; } for(i=0;a[i]@@ ;i++) if(a[i]==b[i]) k@@ +=1; y=@@ k/@@ j; if(y@@ >@@ x) printf("yes\n"); else printf("no\n"); return0; }  
c -1
h -1
structpatient { charid[20]; intage; intnum; }; intmain() { intn,i,j; char@@ id1@@ [20]; int@@ age1@@ ,@@ u@@ ; structpatient@@ temp; structpatient@@ *p; structpatient@@ a[@@ 500]; scanf("%d",&n); p=a; u@@ =0; for(@@ ;p<@@ a+@@ n;@@ p++) { scanf("%s",@@ id1@@ ); scanf("%d",&@@ age1@@ ); strcpy(@@ p->@@ id,@@ id1@@ ); p->age@@ =@@ age1@@ ; p->@@ num=@@ u@@ ; u@@ ++; } p=a; for(i=n-2;i>=0;i--) { for(j=0;j<=i;j++) { if((@@ *(p+j)@@ ).@@ age@@ >=60@@ ||(@@ *(p@@ +j+1)@@ ).@@ age@@ >=60) { if((@@ *(p+j)@@ ).@@ age@@ <(@@ *(p@@ +j+1)@@ ).@@ age@@ ) { temp@@ =*(p@@ +j); *(p+j)@@ =*(p@@ +j@@ +1); *(p@@ +j+1)@@ =temp; } } elsecontinue; } } p=a; for(@@ ;p<@@ a+@@ n;@@ p++) { printf("%s\n",p->id); } return0; }  
c -1
h -1
0

intmain() { void@@ scan@@ (); scan@@ (); return0; } void@@ scan@@ () { intm,n; inta[100],b[100]; cin>>m>>n; for(inti=0;i<m;i++) cin>>a[i]; for(intj=0;j<n;j++) cin>>@@ b[j]; voidsort@@ (intx,int@@ c[@@ ]); sort(@@ m,@@ a); cout<<"@@ "; sort(@@ n,@@ b); } voidsort@@ (intx,int@@ c[@@ ]) { for(intk=0;k<@@ x@@ -1;k++) for(intl@@ =0;@@ l<@@ x@@ -k@@ -1;@@ l++) if(@@ c[@@ l@@ ]>@@ c[@@ l@@ +1@@ ])@@ swap(@@ c[@@ l@@ ],c[@@ l@@ +1@@ ]); for(int@@ h@@ =0;h@@ <@@ x@@ -1;@@ h@@ ++)@@ cout<<c[@@ h@@ ]@@ <<""; cout<<c[@@ x@@ -1]; }  
c -1
h -1
intmain() { struct@@ pa { charid[10]; intage; }@@ pat@@ [100],@@ p1@@ [100],@@ p2@@ [100],@@ temp; inti,n,@@ j=0,@@ k=0,@@ m; cin>>n; for(i=0;i<n;i++) { cin>>@@ pat[i].@@ id@@ >>@@ pat@@ [i].age; } for(i=0;i<n;i++) { if(pat@@ [i].age>=60) { p1@@ [j]=@@ pat@@ [i]; j++; } else { p2@@ [k]=@@ pat@@ [i]; k++; } } for(i=j@@ -1@@ ;i>0;i--) { for(m=0;m<@@ i@@ ;m++) { if(@@ p1@@ [m@@ ].age@@ <@@ p1@@ [m@@ +1@@ ].age) { temp@@ =p1@@ [m]; p1@@ [m]=@@ p1@@ [m@@ +1]; p1@@ [m@@ +1]=@@ temp; } } } for(i=0;i<j;i++) { printf("%s\n",@@ p1@@ [i].id); } for(i=0;i<k;i++) { printf("%s\n",@@ p2@@ [i].id); } return0; }  
c -1
h -1
0

intmain() { inta[100][100],@@ i,j,k,@@ sum,@@ row,col; scanf("%d%d",&row,&col); for(i=1;i<=@@ row;i++) { for(j=1;j<=col;j++) { scanf("%d",&@@ a[i-1]@@ [j-1]); } } for(@@ sum=0;@@ sum@@ <=col@@ -1;@@ sum@@ ++) { for(i=0;i<=@@ row-1;i++) { if(sum@@ -i@@ <0) break; printf("%d\n",@@ a[i][@@ sum@@ -i]); } } for(@@ sum=@@ col@@ ;@@ sum@@ <=col@@ +row@@ -2@@ ;@@ sum@@ ++) { for(i=@@ sum@@ -col@@ +1;i<=@@ row-1;i++) { if(sum@@ -i@@ <0@@ )break; printf("%d\n",@@ a[i][@@ sum@@ -i]); } } return0; }  
c -1
h -1
intmain(intargc,char*argv[]) { intn; scanf("%d",&n); structstu@@ { intid; int@@ x,y; }stu[100000]; int@@ no1@@ =0; int@@ no2@@ =0; int@@ no3@@ =0; inti; int@@ N1@@ ,@@ N2@@ ,@@ N3@@ ; for(i=0;i<n;i++) { scanf("%d%d%d",&stu[i].@@ id@@ ,&stu[i].@@ x@@ ,&stu[i].@@ y); } for(i=0;i<n;i++) { if((@@ stu[i].@@ x+@@ stu[i].@@ y@@ )>@@ no1@@ ){@@ no2@@ =@@ no1@@ ;@@ no1@@ =(@@ stu[i].@@ x+@@ stu[i].@@ y@@ );@@ N2@@ =@@ N1@@ ;@@ N1@@ =i;} elseif((@@ stu[i].@@ x+@@ stu[i].@@ y@@ )>@@ no2@@ ){@@ no3@@ =@@ no2@@ ;@@ no2@@ =(@@ stu[i].@@ x+@@ stu[i].@@ y@@ );@@ N3@@ =@@ N2@@ ;@@ N2@@ =i;} elseif((@@ stu[i].@@ x+@@ stu[i].@@ y@@ )>@@ no3@@ ){@@ no3@@ =(@@ stu[i].@@ x+@@ stu[i].@@ y@@ );@@ N3@@ =i;} } printf("%d%d\n%d%d\n%d@@ %d",@@ stu[@@ N1@@ ].id,@@ (@@ stu[@@ N1@@ ].@@ x+@@ stu[@@ N1@@ ].@@ y@@ ),@@ stu[@@ N2@@ ].id,@@ (@@ stu[@@ N2@@ ].@@ x+@@ stu[@@ N2@@ ].@@ y@@ ),@@ stu[@@ N3@@ ].id,@@ (@@ stu[@@ N3@@ ].@@ x+@@ stu[@@ N3@@ ].@@ y@@ )); return0; }  
c -1
h -1
0

intmain(){ charzfc@@ [256],@@ wt@@ [256],@@ tar@@ [256]; inti,j,@@ tag@@ ; scanf("%s",@@ zfc); scanf("%s",@@ wt@@ ); scanf("%s",@@ tar@@ ); int@@ n=strlen(@@ zfc); int@@ k=strlen(@@ wt@@ ); for(i=0;i<n@@ -k@@ +1@@ ;i++){ tag@@ =0; for(j=i;j<@@ i@@ +k@@ ;j++){ if(@@ zfc@@ [j]!=@@ wt@@ [j-i@@ ]){ tag@@ =1; break; } } if(tag@@ ==0){ for(j=i;j<@@ i@@ +k@@ ;j++){ zfc@@ [j]=@@ tar@@ [j-i@@ ]; } break; } } puts(@@ zfc); return0; }  
c -1
h -1
intmain() { charstr@@ [1000],@@ sub@@ [500],@@ rep@@ [500]; intn,m,@@ cut@@ ,@@ i=0,@@ flag=0; cin>>@@ str@@ >>@@ sub@@ >>@@ rep@@ ; n=strlen(@@ str); m=strlen(@@ sub); cut@@ =strlen(@@ rep); while(@@ str@@ [i]@@ !='\0') { if(str[i]==@@ sub@@ [0]) { intj=0; int@@ k=i; while(@@ sub@@ [j]@@ !='\0') { if(@@ sub@@ [j]==@@ str@@ [k]) { j++; k++; } else break; } if(j==@@ m) { for(int@@ t=@@ n-1@@ ;t@@ >=i@@ +m@@ ;t@@ --) { str@@ [t@@ +@@ cut@@ -m@@ ]=@@ str@@ [t@@ ]; } str@@ [@@ n+@@ cut@@ -m@@ ]=@@ '\0'@@ ; for(intt@@ =i;@@ t@@ <@@ i+@@ cut@@ ;t++) { str@@ [t@@ ]=@@ rep@@ [t@@ -i@@ ]; } flag=1; } if(flag==1) break; } i++; } cout<<str@@ ; return0; }  
c -1
h -1
1


intmain(){ chara[501],b[501]; intn,i,j; double@@ r,@@ m=0,@@ l=0; scanf("%lf",&@@ r); scanf("%s",&@@ a); scanf("%s",&@@ b); if(strlen(a)!=strlen(b@@ )){ printf("error"); return0; } elseif(@@ strlen(a)@@ ==@@ strlen(b@@ )){ for(i=0;a[i]@@ !='\0';i++){ if((a[i]!='@@ A'&&a[i]!='T'&&a[i]!='C'&&a[i]!='G')||(b[i]!='A'&&b[i]!='T'&&b[i]!='C'&&b[i]!='@@ G')){ printf("error"); return0; } else@@ if(a[i]==b[i]){ m++; } } } l@@ =strlen(a); if(m@@ /@@ l>@@ r@@ ){ printf("yes"); } else{ printf("no"); } return0; }  
c -1
h -1
int@@ num1@@ [1000],@@ num2@@ [1000],@@ a,b; void@@ cin_array@@ (int@@ num1@@ [],int@@ num2@@ []) { cin>>a>>@@ b; for(inti=0;i<@@ a@@ ;i++)@@ cin>>@@ num1@@ [i]; for(inti=0;i<@@ b@@ ;i++)@@ cin>>@@ num2@@ [i]; } voidsort@@ (int@@ num1@@ [],int@@ num2@@ []) { inttemp; for(inti=1;i<=@@ a;i++) for(intj=0;j<@@ a@@ -i;j++) if(@@ num1@@ [j]>@@ num1@@ [j+1@@ ]){ temp=@@ num1@@ [j]; num1@@ [j]=@@ num1@@ [j+1]; num1@@ [j+1]=temp; } for(inti=1;i<=@@ b;i++) for(intj=0;j<@@ b@@ -i;j++) if(@@ num2@@ [j]>@@ num2@@ [j+1@@ ]){ temp=@@ num2@@ [j]; num2@@ [j]=@@ num2@@ [j+1]; num2@@ [j+1]=temp; } } void@@ connect@@ (int@@ num1@@ [],int@@ num2@@ []) { for(inti=0;i<@@ b;i++) num1@@ [a@@ +i]=@@ num2@@ [i]; } void@@ cout_array@@ (int@@ num[@@ ]) { for(inti=0;i<@@ a+@@ b@@ -1;i++) cout<<@@ num[i]@@ <<""; cout<<@@ num[@@ a+@@ b@@ -1]; } intmain() { cin_array@@ (@@ num1,num2@@ ); sort(@@ num1,num2@@ ); connect@@ (@@ num1,num2@@ ); cout_array@@ (@@ num1@@ ); return0; }  
c -1
h -1
0

intmain(intargc,char*argv[]) {@@ inta[100@@ ][@@ 15],@@ i=0,j=0,@@ x=@@ 10@@ ,@@ k=0,@@ m,@@ num=0; for(i=0;i<@@ 100@@ ;i++){ if(x@@ ==-1)break; for(j=0;j<@@ 16@@ ;j++){ scanf("%d",&x); if(x@@ ==-1)break; if(x@@ ==0)break; a[i]@@ [j]=@@ x; } } k=i; for(i=0;i<@@ k@@ -1;i++){ for(j=0;j<@@ 15@@ ;j++){ for(m@@ =j+1@@ ;m@@ <@@ 15@@ ;m++){ if(a[i][j]@@ *1.0/@@ a[i]@@ [m@@ ]==@@ 2@@ ||@@ a[i]@@ [m]@@ *1.0/@@ a[i]@@ [j]==@@ 2)@@ num++; } } printf("%d\n",num); num=0; } return0; }  
c -1
h -1
intmain(){ int@@ all@@ ,@@ name@@ [@@ 20000],@@ input@@ [@@ 20000],@@ i,@@ p,@@ count,@@ judge@@ ; scanf("%d",&@@ all@@ ); count=0; for(i=0;i<@@ all@@ ;i++){@@ name@@ [i]@@ =0;} for(i=0;i<@@ all@@ ;i++){@@ scanf("%d",&@@ input@@ [i]);} for(i=0;i<@@ all@@ ;i++){ judge@@ =0; for(p=0;p@@ <@@ count@@ ;p@@ ++@@ ){@@ if(name@@ [p@@ ]==@@ input@@ [i]@@ ){@@ judge@@ =1;@@ break;}} if(@@ judge@@ ==1){@@ continue;} name@@ [@@ count@@ ]=@@ input@@ [i]; count++; } printf("%d",@@ name@@ [0]); for(i=1;i<@@ count@@ ;i++){@@ printf("%d",@@ name@@ [i]);} return0; }  
c -1
h -1
0

voidmain() { struct@@ ts { int@@ sl@@ ; char@@ zz@@ [30]; int@@ zzsl@@ ; struct@@ ts@@ *next; }; struct@@ ts@@ *@@ p1,*p2,*head; inti,j,k,@@ m,n,@@ max,@@ zzzdnum@@ ,@@ num@@ [100]={0}; char@@ zzzd@@ ; scanf("%d",&n); p1=@@ p2=@@ head=(struct@@ ts@@ *)malloc(sizeof(struct@@ ts@@ )); scanf("%d%s",&p1->@@ sl@@ ,@@ p1->@@ zz@@ ); for(i=1;i<n;i++) { p1=(struct@@ ts@@ *)malloc(sizeof(struct@@ ts@@ )); scanf("%d%s",&p1->@@ sl@@ ,@@ p1->@@ zz@@ ); p1->@@ zzsl@@ =strlen(@@ p1->@@ zz@@ ); p2->next=p1; p2=p1; } p1->next@@ =0; for(i@@ ='A'@@ ;i<=@@ 'Z'@@ ;i++) { p1=head; for(k=0;k<n;k++) { for(j=0;@@ p1->@@ zz@@ [j]!='\0';j++) { if(p1->@@ zz@@ [j]==@@ i)@@ num[i]@@ ++; } p1=p1->next; } } max=0; for(i@@ ='A'@@ ;i<=@@ 'Z'@@ ;i++) { max=@@ max@@ >@@ num[i]@@ ?@@ max@@ :@@ num[i]; } for(i@@ ='A'@@ ;i<=@@ 'Z'@@ ;i++) { if(num@@ [i]==@@ max@@ )@@ zzzd@@ =i; } printf("%c\n%d\n",@@ zzzd@@ ,max); p1=head; zzzdnum@@ =0; for(i=0;i<n;i++) { for(j=0;@@ p1->@@ zz@@ [j]!='\0';j++) { if(p1->@@ zz@@ [j]==@@ zzzd@@ ) { printf("%d\n",@@ p1->@@ sl@@ ); } } p1=p1->next; } }  
c -1
h -1
structbook { intnum; char@@ edt@@ [27]; }; struct@@ total { charname@@ ; int@@ amount@@ ; }; intmain() { intm,@@ i,j,k; structbook@@ bk@@ [1000]; struct@@ total@@ to@@ [27]; scanf("%d",&m); for(i=0;i<m;i++) scanf("%d%s",&@@ bk[i].@@ num,@@ bk[i].@@ edt@@ ); for(i=0;i<26;i++) { to@@ [i].name@@ ='A'+i; to@@ [i].@@ amount@@ =0; } for(i=0;i<m;i++) { for(j=0;j<strlen(@@ bk[i].@@ edt@@ );j++) { for(k=0;k<26;k++) { if(@@ bk[i].@@ edt@@ [j]==@@ to@@ [k].@@ name@@ ) to@@ [k].@@ amount@@ ++; } } } for(i=k@@ =0;i<@@ 26;i++) { if(@@ to@@ [i].@@ amount@@ >@@ to@@ [k].@@ amount@@ ) k=i; } printf("%c\n%d\n",@@ to@@ [k].@@ name,@@ to@@ [k].@@ amount@@ ); for(i=0;i<m;i++) { for(j=0;j<strlen(@@ bk[i].@@ edt@@ );j++) if(@@ bk[i].@@ edt@@ [j]==@@ to@@ [k].@@ name@@ ) printf("%d\n",@@ bk[i].@@ num); } return0; }  
c -1
h -1
1


struct@@ old { charID[10]; intage; }; voidmain() { struct@@ old@@ a[100],b[100],@@ c[100]; intn,i,j,@@ B@@ =0,@@ C@@ =0,@@ temp; char@@ TEMP@@ [10]; scanf("%d",&n); for(i=0;i<n;i++) { scanf("%s%d",&@@ a[i].@@ ID,&@@ a[i].@@ age); if(a[i].age@@ >=60) { strcpy(@@ b[@@ B@@ ].ID,@@ a[i].@@ ID); b[@@ B@@ ].age=@@ a[i].@@ age; B@@ ++; } else { strcpy(@@ c[@@ C@@ ].ID,@@ a[i].@@ ID); c[@@ C@@ ].age=@@ a[i].@@ age; C@@ ++; } } for(i=@@ B@@ -1;i>=0;i--) { for(j=0;j<i;j++) { if(b[j]@@ .@@ age@@ <b@@ [j+1@@ ].age@@ ||(@@ b[j].@@ age@@ ==@@ b@@ [j+1@@ ].age@@ &&(@@ (@@ b[j].@@ ID@@ -'@@ \@@ 0@@ ')@@ >@@ (@@ b@@ [j+1].@@ ID@@ -'@@ \@@ 0@@ ')@@ )@@ )) { temp=@@ b@@ [j+1@@ ].age@@ ,@@ b@@ [j+1@@ ].age=@@ b[j].@@ age@@ ,@@ b[j].@@ age@@ =temp; strcpy(@@ TEMP@@ ,@@ b@@ [j+1].@@ ID@@ ),@@ strcpy(@@ b@@ [j+1].@@ ID,@@ b[j].@@ ID@@ ),@@ strcpy(@@ b[j].@@ ID,@@ TEMP@@ ); } } } for(i=@@ C@@ -1;i>=0;i--) { for(j=0;j<i;j++) { if((@@ c@@ [j].@@ ID@@ -'@@ \@@ 0@@ ')@@ >@@ (@@ c@@ [j+1].@@ ID@@ -'@@ \@@ 0@@ ')@@ ) { temp=@@ c@@ [j+1@@ ].age@@ ,@@ c@@ [j+1@@ ].age=@@ c@@ [j].age@@ ,@@ c@@ [j].age@@ =temp; strcpy(@@ TEMP@@ ,@@ c@@ [j+1].@@ ID@@ ),@@ strcpy(@@ c@@ [j+1].@@ ID,@@ c@@ [j].@@ ID@@ ),@@ strcpy(@@ c@@ [j].@@ ID,@@ TEMP@@ ); } } } for(i=0;i<@@ B@@ ;i++) printf("%s\n",@@ b[i].@@ ID); for(i=0;i<@@ C@@ ;i++) printf("%s\n",@@ c@@ [i].ID); }  
c -1
h -1
structstudent { intnum; intchinese; intmath; intsum; }; voidmain() { intn,i,j; structstudentstu[100000]; structstudent@@ stud@@ ; scanf("%d",&n); for(i=0;i<n;i++) { scanf("%d%d%d",&stu[i].num,&stu[i].@@ chinese@@ ,&stu[i].math); stu[i].sum=stu[i].@@ chinese+@@ stu[i].@@ math; } for(i=0;i<3;i++) { for(j=i+1;j<n;j++) { if(stu[i].@@ sum<@@ stu[j].@@ sum) { stud@@ =stu@@ [i]; stu[i]=@@ stu@@ [j]; stu@@ [j]=@@ stud@@ ; } } } for(i=0;i<3;i++) { printf("%d%d\n",stu[i].@@ num,@@ stu[i].@@ sum); } }  
c -1
h -1
0

intnum,@@ s=1; void@@ divide@@ (intn,int@@ a) { for(inti=@@ n@@ ;i<=@@ a/@@ s;i++) { s@@ *=@@ i; if(s@@ ==@@ a) num++; elseif(@@ s@@ <a@@ &&@@ a@@ %s@@ ==0) divide@@ (i,@@ a); s@@ /=@@ i; } } intmain() { intn,i,@@ a; cin>>n; for(i=0;i<n;i++) { num=0; cin>>a; divide@@ (2,@@ a); cout<<num<<endl; } return0; }  
c -1
h -1
intsum=0; voidf@@ (intn,int@@ y) { int@@ a=@@ sqrt(@@ n); for(inti=@@ y@@ ;i<=a;i++) { if(n%i==0) { sum++; y@@ =i; f(@@ n@@ /i,@@ y); } } } intmain() { intn; cin>>n; for(inti=1;i<=n;i++) { intnum; cin>>num; sum=0; f(@@ num,@@ 2); cout<<sum@@ +1<<endl; } return0; }  
c -1
h -1
1


intmain(){ inti,j,k,@@ p=0,@@ q=0,@@ judge@@ =0; doublen; chara[501],b[501]; scanf("%lf",&n); scanf("%s",a); scanf("%s",b); p@@ =strlen(a); for(i=0;i<p@@ ;i++){ if(a[i]!='A'&&a[i]!='T'&&a[i]!='C'&&a[i]!='@@ G'){ printf("error"); return0; } } for(i=0;i<p@@ ;i++){ if(@@ b[i]!='A'&&b[i]!='T'&&b[i]!='C'&&b[i]!='@@ G'){ printf("error"); return0; } } for(i=0;i<p@@ ;i++){ if(a[i]==b[i]){ q++; } } if(1.0*@@ q@@ /@@ p@@ >=@@ n){ printf("yes"); } else{ printf("no"); } return0; }  
c -1
h -1
intmain() { inti,@@ t=0,@@ s=0,@@ l1,l2@@ ; doublen,@@ m; chara[256],b[@@ 256]; scanf("%lf",&n); scanf("%s",&@@ a); scanf("%s",&@@ b); l1@@ =strlen(a); l2@@ =strlen(b); for(i=0;i<l1;i++) { if((a[i]!='@@ A'&&a[i]!='T'&&a[i]!='C'&&a[i]!='G')||(b[i]!='A'&&b[i]!='T'&&b[i]!='C'&&b[i]!='@@ G')) { s=s+1; } } if(s@@ !=0@@ ||@@ l1@@ !=l2@@ ) { printf("error"); } else { for(i=0;i<l1;i++) { if(a[i]==b[i]) { t=t+1; } } m@@ =(double)@@ t@@ /@@ l1; if(m@@ >n) { printf("yes"); } elseprintf("no"); } return0; }  
c -1
h -1
1


intmain() { intn,k,i,j,@@ g; inta[1000]; scanf("%d%d",&n,&k); g=0; for(i=0;i<=n-1;i++) { scanf("%d",&a[i]); } for(i=0;i<=n-1;i++) { for(j=i+1;j<=@@ n-1;j++) { if((@@ a[i]+@@ a[j]@@ )==@@ k) { g@@ =1; break; } } if(g@@ ==1)break; } if(g@@ ==1)@@ printf("yes"); elseprintf("no"); return0; }  
c -1
h -1
intmain() { chara[256],b[256],c[256]; scanf("%s%s%s",a,b,c); char*@@ p; p=@@ strstr@@ (a,b); if(p@@ ) { int@@ n=strlen(@@ a)@@ -strlen(@@ p); inti; int@@ k@@ =strlen(b); int@@ l=strlen(@@ c); intm=0; for(i=0;i<n;i++) { printf("%c",a[i]); } for(i=n@@ ;i<@@ n+@@ l@@ ;i++) { printf("%c",@@ c[m@@ ]); m++; } for(i=@@ n+@@ k@@ ;i<@@ (@@ strlen(a)@@ );i++) { printf("%c",a[i]); } } else {@@ printf("%s\n",@@ a@@ );} return0; }  
c -1
h -1
0

intmain() { intn,k,@@ s=0; scanf("%d",&n); scanf("%d",&k); intsz[1000]; for(inti=0;i<n;i++){ scanf("%d",&sz[i]); } for(int@@ z@@ =0;z@@ <n;@@ z@@ ++){ for(int@@ m=@@ z@@ +1@@ ;m@@ <n;m++){ if(k==@@ sz[@@ z@@ ]+@@ sz[m@@ ]){ s++; } if(k!=@@ (@@ sz[@@ z@@ ]+@@ sz[m@@ ])@@ ){ s+=@@ 0@@ ; } }} if(s@@ ==0){ printf("no"); } if(s@@ !=0){ printf("yes"); } return0; }  
c -1
h -1
intn,m,@@ a[100],b[100]; voidinput() { intj,@@ k; scanf("%d%d",&n,&m); for(j=0;j<n;j++) scanf("%d",&a[j]); for(k=0;k<@@ m;k++) scanf("%d",&@@ b[k@@ ]); } void@@ arrange@@ (intn,@@ intm,@@ intx@@ [],int@@ y@@ []) { intj,@@ k,@@ t; for(j=0;j<n-1;j++) for(k=0;k<@@ n-1@@ -j@@ ;k++) if(x@@ [k]@@ >@@ x@@ [k+1@@ ]) { t=@@ x@@ [k]; x@@ [k]=@@ x@@ [k+1]; x@@ [k+1]=@@ t; } for(j=0;j<m-1;j++) for(k=0;k<@@ m-1@@ -j@@ ;k++) if(y@@ [k]@@ >@@ y@@ [k+1@@ ]) { t=@@ y@@ [k]; y@@ [k]=@@ y@@ [k+1]; y@@ [k+1]=@@ t; } } voidcombine@@ (intn,@@ intm,@@ intx@@ [],int@@ y@@ []) { inti; for(i=0;i<m;i++) x@@ [n@@ +i]=@@ y@@ [i]; } voidprint@@ (intn,@@ intm,@@ intx@@ []) { inti; for(i=0;i<m+@@ n-1;i++) printf("%d",@@ x[i]); printf("%d",@@ x@@ [m@@ +@@ n-1]); } voidmain() { input(); arrange@@ (n,@@ m,@@ a,b); combine@@ (n,@@ m,@@ a,b); print@@ (n,@@ m,@@ a); }  
c -1
h -1
0

intmain() { intt,@@ m,n,@@ a[100][100],@@ i,j,k,@@ sum; int*p; cin>>t; for(k=1;k<=@@ t@@ ;k++) { cin>>m>>n; sum=0; for(i=0;i<=@@ m-1;i++) { for(j=0;j<=n-1;j++) { cin>>a[i][j]; } } for(p=@@ a[0]@@ ;p<=@@ a[0]@@ +@@ n-1@@ ;p++) { sum=sum+*@@ p; } for(i=1;i<=@@ m@@ -2;i++) { sum=sum+@@ a[i][0]+@@ a[i][n-1]; } for(p=@@ a[m-1]@@ ;p<=@@ a[m-1]@@ +@@ n-1@@ ;p++) { sum=sum+*@@ p; } cout<<sum<<endl; } return0; }  
c -1
h -1
intmain() { structstu@@ { intchi; int@@ ma; intsum; inti; }; structstu@@ m[@@ 100000],@@ temp; intj,@@ n; scanf("%d",&n); structstu*@@ p=@@ m; structstu*@@ q; for(@@ ;p<@@ m+@@ n;@@ p@@ +=@@ 1) { scanf("%d%d%d",&@@ (*p).@@ i@@ ,&@@ (*p).@@ chi@@ ,&@@ (*p).@@ ma@@ ); (*p).@@ sum=(@@ *p@@ ).@@ chi@@ +@@ (*p).@@ ma; } for(p=@@ m@@ ;p<@@ m+@@ n-1@@ ;p++) { for(q=@@ p@@ +1@@ ;q@@ <@@ m+@@ n;@@ q++) { if((@@ *p@@ ).@@ sum<@@ (*@@ q@@ ).@@ sum) { temp@@ =*@@ p; *p@@ =*@@ q; *@@ q=@@ temp; } } if(p==@@ m+@@ 2) break; } for(p=@@ m@@ ;p<@@ m+@@ 3@@ ;p++) { printf("%d%d\n",@@ (*p).@@ i,@@ (*p).@@ sum); } return0; }  
c -1
h -1
0

intmain() { inti,j,k,n,@@ a[@@ 1000]={0},@@ flag=0; cin>>n>>k; for(i=0;i<n;i++) { cin>>a[i]; } for(i=0;i<n-1;i++) { for(j=i+1;j<n;j++) { if(a[i]+a[j]==k) { flag=1; cout<<"yes@@ "@@ <<endl; break; } } if(flag==1) { break; } } if(flag==0) { cout<<"no@@ "@@ <<endl; } return0; }  
c -1
h -1
int@@ mins@@ (intx,int@@ y){ if(x>@@ y)@@ return@@ y; else@@ return@@ x; } int@@ maxs@@ (intx,int@@ y){ if(x>@@ y) return@@ x; else return@@ y; } intmain(){ introw,col,@@ i,j,@@ n; cin>>row>>col; n=@@ row@@ *@@ col; inta[@@ row][col]; for(i=0;i<row;i++){ for(j=0;j<col;j++){ cin>>a[i][j]; } } for(i=0;i<@@ mins@@ (@@ row,@@ col@@ );i++){ for(j=0;j<=@@ i;j++){ cout<<@@ a[j][i-j@@ ]<<endl; } } if(row@@ >=@@ col@@ ){ for(i=@@ col@@ ;i<@@ row;i++){ for(j=i@@ -col@@ +1@@ ;j<=@@ i;j++){ cout<<@@ a[j][i-j@@ ]<<endl; } } for(i=@@ row@@ ;i<=@@ row+col-2@@ ;i++){ for(j=i@@ -col@@ +1@@ ;j<@@ row@@ ;j++){ cout<<@@ a[j][i-j@@ ]<<endl; } } } else{ for(i=@@ row@@ ;i<@@ col@@ ;i++){ for(j=0;j<row@@ ;j++){ cout<<@@ a[j][i-j@@ ]<<endl; } } for(i=@@ col@@ ;i<=@@ row+col-2@@ ;i++){ for(j=i@@ -col@@ +1@@ ;j<@@ row@@ ;j++){ cout<<@@ a[j][i-j@@ ]<<endl; } } } return0; }  
c -1
h -1
0

voidmain() { int@@ len@@ [1000]; intb[@@ 26]; inta[1000]; charstr@@ [1000][@@ 26]; intm,i,j,@@ max,@@ num; charc; int@@ pos@@ ,@@ temp; scanf("%d",&m); for(i=0;i<26;i++) b[i]=0; for(i=0;i<m;i++) { scanf("%d",&a[i]); scanf("%s",@@ str[i]); len@@ [i]@@ =strlen(@@ str[i]); for(j=0;j<len@@ [i];j++) { temp=@@ str@@ [i][j]@@ -'A'; b[@@ temp@@ ]++; } } max=@@ b[0]; pos@@ =0; for(i=1;i<26;i++) { if(b[i]>max) { max=b[i]; pos@@ =i; } } c=@@ pos@@ +'A'@@ ; printf("%c\n",@@ c); printf("%d\n",max); num=0; for(i=0;i<m;i++) for(j=0;j<len@@ [i];j++) if(str@@ [i][j]==@@ c) { num++; if(num@@ <@@ max) printf("%d\n",a[i]); else@@ printf("%d",a[i]); } }  
c -1
h -1
inta[100][100@@ ][100]; intmain() { intk,@@ m@@ [100],@@ n@@ [100],@@ i,j,@@ t,@@ s@@ [100]; cin>>k; for(i=0;i<k;i++) { s[i]@@ =0; cin>>@@ m[i]@@ >>@@ n[i]; for(j=0;j<m@@ [i];j++) for(t=0;t@@ <@@ n[i]@@ ;t++) cin>>@@ a[i][j]@@ [t@@ ]; for(t=0;t@@ <@@ n[i]@@ ;t++) s[i]@@ +=@@ (@@ a[i][@@ 0][@@ t@@ ]+@@ a[i]@@ [m@@ [i]@@ -1@@ ][@@ t@@ ]); for(j=0;j<m@@ [i];j++) s[i]@@ +=@@ (@@ a[i][j]@@ [0]+@@ a[i][j]@@ [n@@ [i]@@ -1]); s[i]=@@ s[i]@@ -@@ a[i][@@ 0][@@ 0]-@@ a[i][@@ 0][@@ n[i]@@ -1]@@ -@@ a[i]@@ [m@@ [i]@@ -1@@ ][0]-@@ a[i]@@ [m@@ [i]@@ -1@@ ][@@ n[i]@@ -1]; } for(i=0;i<k;i++) cout<<@@ s[i]@@ <<endl; return0; }  
c -1
h -1
0

int@@ varieties@@ =0,@@ p; int@@ dfs@@ (int@@ dep@@ ,int@@ last@@ ,int@@ k) { if(k==1) { varieties@@ ++; return0; } for(inti=@@ last@@ ;i<=@@ k;i++) if(k@@ %i==0) { dfs@@ (@@ dep@@ +1,@@ i,@@ k@@ /i); } } intmain() { inti,n,@@ t; cin>>n; intm[@@ n]; for(i=0;i<n;i++) { cin>>t; dfs@@ (@@ 0,@@ 2,@@ t); m@@ [i]=@@ varieties@@ ; varieties@@ =0; } for(i=0;i<n;i++) cout<<@@ m@@ [i]<<endl; return0; }  
c -1
h -1
structstudent { int@@ count; int@@ yu@@ ; int@@ shu; }stu[@@ 1000000@@ ]; voidmain() { intn,@@ i@@ ,*@@ p,@@ max=0,@@ sm@@ =0,@@ tm@@ =0,@@ j=0; p=@@ (int*)malloc(@@ 1000000@@ *sizeof(int)); scanf("%d",&n); for(i=0;i<n;i++) { scanf("%d%d%d",&stu[i].@@ count@@ ,&stu[i].@@ yu@@ ,&stu[i].@@ shu); *(p+i)@@ =stu[i].@@ yu@@ +stu[i].@@ shu; } for(i=0;i<n;i++) max@@ =(@@ max@@ >*@@ (p@@ +i)@@ )@@ ?@@ max@@ :@@ (@@ *(p@@ +i)); for(i=0;i<n;i++) {if((@@ *(p+i)@@ <@@ max@@ )&&(@@ *(p+i)@@ >@@ sm@@ )) sm@@ =*(p@@ +i@@ );} for(i=0;i<n;i++) {if((@@ *(p+i)@@ >@@ tm@@ )&&(@@ *(p+i)@@ <@@ sm@@ )) tm@@ =*(p@@ +i@@ );} for(i=0@@ ;j<@@ 3@@ ,i@@ <@@ n;i++) { if(@@ *(p+i)@@ ==@@ max) { printf("%d%d\n",stu[i].@@ count@@ ,max); j++; } } for(i=0@@ ;j<@@ 3@@ ,i@@ <@@ n;i++) {if(@@ *(p+i)@@ ==@@ sm@@ &&j@@ <@@ 3) { printf("%d%d\n",stu[i].@@ count,@@ sm@@ ); j++; } } for(i=0@@ ;j<@@ 3@@ ,i@@ <@@ n;i++) { if(@@ *(p+i)@@ ==@@ tm@@ &&j@@ <@@ 3) { printf("%d%d\n",stu[i].@@ count,@@ tm@@ ); j++; } } }  
c -1
h -1
0

intmain() { intt; cin>>t; inta[100][100]; intsum; int@@ n[@@ 200]; int@@ g; ints[@@ 200]; for(@@ g@@ =0;@@ g@@ <=@@ t@@ -1;@@ g@@ ++) { cin>>@@ s[@@ g@@ ]; cin>>@@ n[@@ g@@ ]; inti; intj; for(i=0;i<=@@ s[@@ g@@ ]@@ -1;i++) for(j=0;j<=@@ n[@@ g@@ ]@@ -1;j++) { cin>>a[i][j]; } sum=0; for(i=0;i<=@@ s[@@ g@@ ]@@ -1;i++) { sum=sum+*@@ *(a@@ +i); sum=sum+*(@@ *(a+i)@@ +@@ n[@@ g@@ ]@@ -1); } for(j=0;j<=@@ n[@@ g@@ ]@@ -1;j++) { sum=sum+*(@@ *a@@ +j); sum=sum+*(@@ *(a+@@ s[@@ g@@ ]@@ -1)@@ +j); } sum=sum@@ -*@@ *a@@ -*(@@ *(a+@@ s[@@ g@@ ]@@ -1)@@ +@@ n[@@ g@@ ]@@ -1)@@ -*@@ (*@@ a+@@ n[@@ g@@ ]@@ -1)@@ -*@@ *(a+@@ s[@@ g@@ ]@@ -1); cout<<sum<<endl; } return0; }  
c -1
h -1
intmain() { chars1@@ [256@@ ]={'\0'},@@ s2@@ [256@@ ]={'\0'},@@ s3@@ [256@@ ]={'\0'},@@ t@@ [256@@ ]={'\0'}; inti,j,@@ k=0,@@ s,@@ l1,l2,@@ l3@@ ; scanf("%s",@@ s1); scanf("%s",@@ s2); scanf("%s",@@ s3); l1=strlen(@@ s1); l2=strlen(@@ s2); l3@@ =strlen(@@ s3); for(i=0;i<l1@@ ;) { for(j=0;j<@@ l2@@ ;j++) { if(i+j@@ >=@@ l1@@ ||@@ s1@@ [i+j]!=@@ s2@@ [j]){ break; } } if(j==@@ l2@@ ) { for(s=0;s@@ <@@ l3@@ ;s++) { t@@ [k]=@@ s3@@ [s@@ ]; k++; } i@@ =i+@@ l2@@ ; break; } else { t@@ [k]=@@ s1@@ [i]; i++; k++; } } for(@@ ;i<@@ l1@@ ;i++) { t@@ [k]=@@ s1@@ [i]; k++; } t@@ [k]=@@ '\0'@@ ; printf("%s",@@ t); return0; }  
c -1
h -1
0

intmain() { intk,@@ m[@@ 1000],@@ n[@@ 1000],@@ i,@@ a,b,@@ x,@@ sum; scanf("%d",&k); sum=0; for(i=0;i<k;i++){ scanf("%d%d",&@@ m@@ [i],&@@ n@@ [i]); for(a=0;a@@ <m@@ [i];@@ a++){ for(b=0;b@@ <n@@ [i];@@ b++){ scanf("%d",&x); if(a@@ ==0||@@ b@@ ==0||@@ a@@ ==@@ m[i]@@ -1@@ ||@@ b==@@ n[i]@@ -1){ sum+=@@ x; } } } printf("%d\n",sum); sum=0; } return0; }  
c -1
h -1
intmain() { char@@ zfc1@@ [257@@ ]={0},@@ zfc2@@ [257@@ ]={0},@@ zfc3@@ [257@@ ]={0},@@ zichuan@@ [257@@ ]={0}; intlen1,len2,@@ i,j,k,@@ t,@@ flag=0; scanf("%s",@@ zfc1@@ ); scanf("%s",@@ zfc2@@ ); scanf("%s",@@ zfc3@@ ); len1=strlen(@@ zfc1@@ ); len2=strlen(@@ zfc2@@ ); for(i=0;i<=@@ len1@@ -len2@@ ;i++) { for(j=0;j<len2@@ ;j++) { zichuan@@ [j]=@@ zfc1@@ [j+i@@ ]; } if(strcmp(@@ zichuan@@ ,@@ zfc2@@ )@@ ==0) { for(k=0;k<i;k++) { printf("%c",@@ zfc1@@ [k]); } printf("%s",@@ zfc3@@ ); for(t@@ =i+@@ len2@@ ;@@ zfc1@@ [t@@ ]!='\0'@@ ;t++) { printf("%c",@@ zfc1@@ [t@@ ]); } flag=1; break; } } if(flag==0) { printf("%s",@@ zfc1@@ ); } return0; }  
c -1
h -1
0

inta[@@ 26]; intmain() { int@@ d@@ (int@@ xz@@ ,int@@ p@@ ,int@@ q); inty,@@ i,@@ n; scanf("%d",&n); for(i=1;i<=n;i++) { scanf("%d",&a[i]); } y=@@ d@@ (@@ 10000@@ ,@@ 1,@@ n); printf("%d",@@ y); } int@@ d@@ (int@@ xz@@ ,int@@ p@@ ,int@@ q) { int@@ g,@@ h; if(p==@@ q@@ &&@@ a[p@@ ]<=@@ xz@@ )@@ return1; elseif(@@ p@@ ==@@ q@@ &&@@ a[p@@ ]>@@ xz@@ )return0; else { if(@@ xz@@ <@@ a[p@@ ])@@ return(@@ d@@ (@@ xz@@ ,@@ p@@ +1,@@ q@@ )); else { g@@ =1@@ +d@@ (@@ a[p@@ ],@@ p@@ +1,@@ q); h=@@ d@@ (@@ xz@@ ,@@ p@@ +1,@@ q); if(g@@ >@@ h@@ )@@ return(@@ g@@ ); else@@ return(@@ h); } } }  
c -1
h -1
intmain() { inta[@@ 17@@ ][@@ 1000],@@ i,j,k,@@ s[@@ 1000]={0}; int@@ sum[@@ 1000]={0},@@ g@@ =0,@@ n; for(i=0@@ ,k@@ =0;i<=@@ 1000@@ ;i++@@ ,k++) { for(j=0;j<=@@ 16@@ ;j++,@@ s[i]@@ ++) { cin>>a[j]@@ [i]; if(a[j]@@ [i]==0) break; elseif(@@ a[j]@@ [i]==@@ -1) { g@@ =1; break; } } if(g@@ ==1) break; } for(i=0;i<=k-1;i++) { for(j=@@ s[i]@@ ;j>=0;j--) { for(n=0;n@@ <j@@ ;n++) { if(a[@@ n@@ ]@@ [i]<@@ a[j]@@ [i]) { if(a[j]@@ [i]==@@ 2*@@ a[n@@ ]@@ [i]) sum[i]@@ ++; } else { if(a[@@ n@@ ]@@ [i]==@@ 2*@@ a[j]@@ [i]) sum[i]@@ ++; } } } cout<<sum@@ [i]<<endl; } return0; }  
c -1
h -1
0

intmain(){ inti,@@ m,n,@@ a,b,@@ k; k=0; a=0; b=0; double@@ p; char@@ f[@@ 501],@@ g@@ [501]; scanf("%lf%s%s",&@@ p,@@ f,@@ g@@ ); m=strlen(@@ f); n=strlen(@@ g@@ ); for(i=0;i<m;i++){ if(f@@ [i]!='A'&&@@ f@@ [i]!='T'&&@@ f@@ [i]!='C'&&@@ f@@ [i]!='G')@@ {@@ a@@ ++;} } for(i=0;i<n;i++){ if(g@@ [i]!='A'&&@@ g@@ [i]!='T'&&@@ g@@ [i]!='C'&&@@ g@@ [i]!='G')@@ {@@ b@@ ++;} } if(m!=@@ n@@ ||@@ a@@ !=0@@ ||@@ b@@ !=0@@ ){@@ printf("error");} else{@@ for(i=0;i<m;i++){ if(f@@ [i]==@@ g[i]@@ ){@@ k@@ ++;} } if(1.0*@@ k/@@ m@@ >@@ p@@ ){printf("yes");} else{printf("no");} } return0; }  
c -1
h -1
intmain() { char@@ all@@ [257],@@ sub@@ [257],@@ re@@ [257]; inti,j,k,@@ p,q,@@ r,@@ s; cin>>@@ all@@ >>@@ sub@@ >>@@ re@@ ; int@@ flag; for(i=0;@@ all@@ [i]!='\0';i++) { flag=1; for(j=0@@ ,k@@ =i;@@ sub@@ [j]@@ !='\0'@@ ;k++@@ ,j@@ ++) { if(@@ all@@ [k]@@ !=@@ sub@@ [j]) { flag=0; break; } } if(flag==1) { break; } } if(flag==1) { int@@ c=strlen(@@ re); for(p=@@ k,@@ q=@@ c;@@ all@@ [p@@ ]!='\0'@@ ;p@@ ++,@@ q++) re@@ [q@@ ]=@@ all@@ [p@@ ]; re@@ [q@@ ]='\0'; for(@@ r=0,@@ s@@ =i;@@ re@@ [r@@ ]!='\0'@@ ;r@@ ++,@@ s++) all@@ [s@@ ]=@@ re@@ [r@@ ]; all@@ [s@@ ]='\0'; } cout<<@@ all@@ <<endl; return0; }  
c -1
h -1
0

intmain() { intn,k,i,@@ m,@@ e; int@@ p@@ [1000]; scanf("%d%d\n",&n,&@@ k); e=@@ n; for(i=1;i<=n;i++){ scanf("%d",&@@ p[i]); } for(m=1;m@@ <=@@ n-1@@ ;m++){ for(i=m@@ +1;i<=@@ n;i++){ if(p@@ [m@@ ]+@@ p@@ [i]==@@ k){ printf("yes"); e@@ =i; break; }@@ elseif(m==@@ n-1@@ &&@@ i==@@ n){ printf("no"); e@@ =i; break; } } if(e@@ !=@@ n@@ ||(@@ m@@ ==@@ n-1@@ &&@@ e@@ ==@@ n@@ )){ break; } } return0; }  
c -1
h -1
voidmain(){ introw,col,@@ max; scanf("%d%d",&row,&col); inti,j; inta[@@ 101][101]; for(i=0;i<row;i++) for(j=0;j<col;j++) { scanf("%d",&a[i][j]); } for(i=0;i<=@@ row+col-2@@ ;i++) { max=0; if(row@@ -1@@ <i@@ )max=@@ row@@ -1; else@@ max=i; for(j=0;j<=@@ max@@ ;j++) { if(i@@ -j@@ <=col@@ -1) { printf("%d\n",@@ a[j][i-j@@ ]); } } } }  
c -1
h -1
0

intmain() { introw,col,@@ a[100][100],@@ i,k,@@ j; scanf("%d%d",&row,&col); for(k=0;k<@@ row@@ ;k++){ for(i=0;i<@@ col@@ ;i++){ scanf("%d",&(@@ a[k]@@ [i]@@ )); } } for(i=0;i<@@ 201@@ ;i++){ k=0; j=i; while(j@@ >=0@@ ){ if(@@ 0@@ <=j@@ &&j@@ <col@@ &&@@ 0@@ <=@@ k@@ &&k@@ <row@@ )@@ printf("%d\n",@@ a[k]@@ [j]); j--; k++; } } return0; }  
c -1
h -1
intmain() { intn,@@ j,@@ m; scanf("%d",&n); inti,@@ h@@ [26]; for(i=1;i<=n@@ ;i++){@@ scanf("%d",&@@ h@@ [i]@@ );@@ }; int@@ q@@ [26]; for(i=1;i<=n@@ ;i++){@@ q@@ [i]@@ =1;@@ }; for(i=n-1@@ ;i>=1;i--) {@@ m=0; for(j=i+1;j<=@@ n;j++){ if(h@@ [j]<=@@ h@@ [i]){ if(m@@ <@@ q@@ [j]@@ ){@@ m=@@ q@@ [j];@@ }@@ ;@@ }@@ ;@@ }; q@@ [i]=@@ q@@ [i]+@@ m; } m=0; for(i=1;i<=n@@ ;i++){@@ if(m@@ <@@ q@@ [i]@@ ){@@ m=@@ q@@ [i];@@ }@@ ;@@ }; printf("%d",m); }  
c -1
h -1
0

intmain(){ introw,col,@@ i,j,k,@@ N; inta[@@ 101][101]; scanf("%d%d",&row,&col); for(i=0;i<row;i++){ for(j=0;j<col;j++){ scanf("%d",&a[i][j]); } } N@@ =@@ row+col-2@@ ; for(k=0;k<=@@ N@@ ;k++){ i=0; j=@@ k-@@ i; do{ if(i@@ >=0@@ &&j>=0@@ &&i@@ <row@@ &&j@@ <col@@ ){ printf("%d\n",a[i][j]); i++; j--; }else{ i++; j--; } }while(@@ j@@ >=0@@ ); } return0; }  
c -1
h -1
intmain(intargc,char*argv[]) { intn,@@ a[100][100],@@ i,j,@@ i1@@ ,@@ i2@@ ,@@ j1@@ ,@@ j2@@ ,@@ k1@@ =0,@@ k2@@ =0; scanf("%d",&n); for(i=0;i<n;i++) for(j=0;j<n;j++) scanf("%d",&a[i][j]); for(i=0;i<n;i++) { for(j=0;j<n;j++) if(a[i][j]==0) { i1@@ =i; j1@@ =j; k1@@ =1; break; } if(@@ k1@@ ==1)break; } for(i=n-1;i>=0;i--) { for(j=n-1;j>=0;j--) if(a[i][j]==0) { i2@@ =i; j2@@ =j; k2@@ =1; break; } if(@@ k2@@ ==1)break; } printf("%d",@@ ((@@ i2@@ -@@ i1@@ -1)*(@@ j2@@ -@@ j1@@ -1)@@ )); return0; }  
c -1
h -1
0

void@@ fun@@ (intm,int@@ i); intnum; intmain() { intn,i,@@ a; cin>>n; for(i=0;i<n;i++) { cin>>a; num=0; fun@@ (a,@@ 2); cout<<num@@ +1<<endl; } return0; } void@@ fun@@ (intm,int@@ i) { int@@ k=@@ sqrt(@@ m); for(i@@ =i@@ ;i<=@@ k;i++) { if(m@@ %i==0) { num++; fun@@ (m@@ /i,i); } } }  
c -1
h -1
voidmain() { intm,@@ a,b,@@ i,j,k,@@ sum; ints@@ [100][100]; int(*p)@@ [100]; scanf("%d",&m); for(k=0;k<@@ m;k++) {@@ p=@@ s@@ ;@@ sum=0; scanf("%d%d",&a,&b); for(i=0;i<a;i++) for(j=0;j<@@ b;j++) {@@ scanf("%d",*(p+i)+j); if(i==0||i==@@ a@@ -1@@ ||j@@ ==0||j==@@ b@@ -1) sum+=@@ *(*(p+i)@@ +j@@ );} printf("%d\n",sum); } }  
c -1
h -1
0

intmain(){ intm=0,@@ f,@@ i,@@ g,@@ p=1; double@@ x; chars[@@ 501],@@ t@@ [501]; scanf("%lf",&x); scanf("%s",s); scanf("%s",@@ t); f@@ =strlen(s); g@@ =strlen(@@ t); if(f@@ !=@@ g@@ ){@@ p@@ =0;} else{ for(i=0;i<@@ f@@ ;i++){ if((@@ s@@ [i]!='A'&&@@ s@@ [i]!='T'&&@@ s@@ [i]!='G'&&@@ s@@ [i]!='@@ C')@@ || (@@ t@@ [i]!='A'&&@@ t@@ [i]!='T'&&@@ t@@ [i]!='G'&&@@ t@@ [i]!='@@ C')@@ ){@@ p@@ =0;} } } if(p@@ ==0){@@ printf("error");} else{ for(i=0;i<@@ f@@ ;i++){ if(t@@ [i]==@@ s[i]@@ ){ m++; } } if(1.0*@@ m/@@ f@@ >@@ x@@ ){printf("yes");} else{printf("no");} } return0; }  
c -1
h -1
intm,n; void@@ get@@ (inta[@@ 200@@ ],intb[@@ 200@@ ]) { inti; scanf("%d%d",&m,&n); for(i=0;i<m;i++) scanf("%d",&a[i]); for(i=0;i<n;i++) scanf("%d",&b[i]); } void@@ sequence@@ (inta[@@ 200@@ ],int@@ p) { inti,j,temp; for(i=0;i<p@@ ;i++) for(j=i+1;j<@@ p@@ ;j++) if(a[j]@@ <@@ a[i]) { temp=a[i]; a[i]=a[j]; a[j]=@@ temp; } } voidcombine@@ (inta[@@ 200@@ ],int@@ p@@ ,int@@ b[@@ 200@@ ],int@@ q) { intj; for(j=0;j<@@ q@@ ;j++) a[p@@ +j@@ ]=@@ b[j]; } void@@ show@@ (inta[@@ 200@@ ],int@@ p) { inti; for(i=0;i<p@@ -1;i++) { printf("%d",a[i]); } printf("%d",@@ a[p@@ -1]); } voidmain() { inta[@@ 200@@ ],b[@@ 200]; get@@ (a,b); sequence@@ (a,m); sequence@@ (b,n); combine@@ (a,@@ m,@@ b,@@ n); show@@ (a,@@ m+@@ n); }  
c -1
h -1
0

intmain() { inti,j,@@ t,@@ r,@@ k,@@ m,n,@@ a[@@ 1000]={0},@@ b[100@@ ][100@@ ]={0},@@ sum=0; scanf("%d",&k); for(i=0;i<k;i++){ scanf("%d%d",&m,&n); for(t=0;t@@ <m;@@ t++){ for(r=0;r@@ <n;@@ r@@ ++){ scanf("%d",&@@ b[t@@ ][@@ r@@ ]); if(r@@ ==@@ n-1)@@ scanf("\n@@ ");} } if(m==1) for(j=0;j<=n-1;j++) sum+=@@ b[0]@@ [j]; elseif(n@@ ==1) for(j=0;j<=@@ m-1;j++) sum+=@@ b[j]@@ [0]; else { for(j=0;j<n-1;j++) sum+=*(@@ b[0]@@ +j); for(j=0;j<m-1;j++) sum+=*(@@ b[j]@@ +n-1); for(j=n-1@@ ;j>0;j--) sum+=*(@@ b[m@@ -1]@@ +j); for(j=@@ m-1@@ ;j>0;j--) sum+=*(@@ b[j]@@ +@@ 0); } a[i]=@@ sum; sum=0; } for(i=0;i<k;i++) printf("%d\n",a[i]); }  
c -1
h -1
intmain() { intn,i,@@ age@@ [100],@@ a,@@ ageb@@ [100],@@ c,@@ t,@@ m; charID@@ [100][100],@@ IDb@@ [100][100],@@ IDc@@ [100]; scanf("%d",&n); for(i=0;i<n;i++) { scanf("%s%d",@@ ID@@ [i],&@@ age[i]); } i=0; c=0; while(i<n) { if(age[i]@@ >=60) { ageb@@ [c@@ ]=@@ age[i]; strcpy(@@ IDb@@ [c@@ ],@@ ID@@ [i]); c++; } i++; } for(i=0;i<=@@ c@@ -1;i++) for(a=0;a@@ <@@ c@@ -i@@ -1;@@ a++) if(@@ ageb@@ [a@@ ]<@@ ageb@@ [a@@ +1]) { t=@@ ageb@@ [a@@ ]; strcpy(@@ IDc@@ ,@@ IDb@@ [a@@ ]); ageb@@ [a@@ ]=@@ ageb@@ [a@@ +1]; strcpy(@@ IDb@@ [a@@ ],@@ IDb@@ [a@@ +1@@ ]); ageb@@ [a@@ +1]=@@ t; strcpy(@@ IDb@@ [a@@ +1],@@ IDc@@ ); } for(i=0;i<=@@ c@@ -1;i++) printf("%s\n",@@ IDb@@ [i]); i=0; while(i<n) { if(age[i]@@ <60) printf("%s\n",@@ ID@@ [i]); i++; } getchar(); getchar(); }  
c -1
h -1
0

intmain() { intk,m,n,@@ *p; cin>>k; for(inti=0;i<k;i++) { cin>>m>>n; intsum=0; inta[100][100@@ ]={0}; for(intj=0;j<m;j++) for(intl@@ =0;@@ l@@ <n;@@ l++) cin>>a[j]@@ [l]; p=@@ a[0]; for(intj=0;j<n;j++) sum+=@@ *p@@ ++; if(m@@ -1@@ !=0) { p=@@ a[@@ m-1@@ ]; for(intj=0;j<n;j++) sum+=@@ *p@@ ++; } for(intj=1;j<@@ m-1;j++) { p=@@ a[j]; sum+=@@ *p; sum+=@@ *(p+@@ n-1); } cout<<sum<<endl; } return0; }  
c -1
h -1
intmain(){ intsz@@ [100],@@ aged@@ [100]; char@@ num@@ [100][@@ 11@@ ],@@ anum@@ [100][@@ 11@@ ],@@ q@@ [100][@@ 11]; intn,i,k,@@ j=0,@@ s,@@ p,@@ e=0; scanf("%d",&n); for(i=0;i<n;i++){ scanf("%s",@@ num[i]); scanf("%d",&sz[i]); }@@ for(i=0;i<n;i++){ if(sz[i]@@ >=60){ aged@@ [j]=@@ sz[i]; strcpy(@@ anum@@ [j],@@ num[i]); j++; } }@@ for(@@ s@@ =1;@@ s@@ <j@@ ;s@@ ++){ for(k=0;k<j@@ -@@ s@@ ;k++){ if(@@ aged@@ [k]@@ <@@ aged@@ [k+1@@ ]){ e=@@ aged@@ [k+1]; aged@@ [k+1]=@@ aged@@ [k]; aged@@ [k]=@@ e; strcpy(@@ q@@ [k],@@ anum@@ [k+1@@ ]); strcpy(@@ anum@@ [k+1@@ ],@@ anum@@ [k]); strcpy(@@ anum@@ [k],@@ q@@ [k]); } } }@@ for(p=0;p@@ <j@@ ;p++){ printf("%s\n",@@ anum@@ [p@@ ]); }@@ for(i=0;i<n;i++){ if(sz[i]@@ <60){ printf("%s\n",@@ num[i]); } }@@ return0; }  
c -1
h -1
0

voidmain() { intyear,@@ mon@@ ,@@ day,@@ i,@@ x; x=0; scanf("%d%d%d",&year,&@@ mon@@ ,&@@ day); for(i=1;i<@@ mon@@ ;i++) { if(i==1||i==3||i==5||i==7||i==8||i==10@@ ||i==@@ 12) { x=x+@@ 31; } if(i==@@ 4||i==6||i==9||i==11) { x=x+@@ 30; } if(i==@@ 2) { if(year%@@ 400==0) { x=x+@@ 29; } elseif(@@ year%@@ 4==0&&@@ year%@@ 100!=0) { x=x+@@ 29; } else { x=x+@@ 28; } } } x=x@@ +day; printf("%d",x); }  
c -1
h -1
intmain() { intn; scanf("%d",&n); intsz[100][100]; inti,j,@@ a,b,c,d,@@ x; for(i=0;i<n;i++) { for(j=0;j<n;j++){ scanf("%d",&sz[i][j]); } } int@@ tag@@ ; for(i=0;i<n;i++){ tag@@ =0; for(j=0;j<n;j++){ if((@@ sz@@ [i][j]@@ ==0)&&(@@ sz[i]@@ [j-1]@@ !=0)&&(@@ sz@@ [i-1][j]@@ !=0@@ )){ a=i; b=j; tag@@ =1; break; } } if(tag@@ ==1){@@ break;} } for(i=n-1;i>=0;i--){ for(j=n-1@@ ;j>=0;j--){ if((@@ sz@@ [i][j]@@ ==0)&&(@@ sz@@ [i+1][j]@@ !=0)&&(@@ sz[i]@@ [j+1]@@ !=0@@ )){ c=i; d=j; tag@@ =@@ 2; break; } } if(tag@@ ==@@ 2@@ ){@@ break;} } x@@ =(@@ c-a-1)*(d-b-1); printf("%d",x); return0; }  
c -1
h -1
0

intmain() { charstr@@ [260],@@ subStr@@ [260],@@ replace@@ [260],@@ str2@@ [260@@ ]; char*@@ start@@ =@@ str,@@ *@@ node@@ =NULL@@ ,@@ *@@ rep@@ =@@ replace@@ ; int@@ len,@@ i=0; cin>>@@ str@@ >>@@ subStr@@ >>@@ replace@@ ; node@@ =@@ strstr(@@ str,@@ subStr@@ ); if(@@ node@@ ==NULL) cout<<str@@ ; else { while(@@ start@@ !=@@ node@@ ) str2@@ [i@@ ++]=@@ *@@ start@@ ++; while(@@ *@@ rep@@ !='\0') str2@@ [i@@ ++]=@@ *@@ rep@@ ++; node@@ +=@@ strlen(@@ subStr@@ ); while(@@ *@@ node@@ !='\0') str2@@ [i@@ ++]=@@ *@@ node@@ ++; str2@@ [i]=@@ '\0'@@ ; cout<<@@ str2@@ ; } cout<<endl; start@@ =NULL; node@@ =NULL; rep@@ =NULL; return0; }  
c -1
h -1
intmain() { intn,i,j,@@ k@@ =1,@@ a[@@ 20000@@ ]={0},b[@@ 20000@@ ]={0}; scanf("%d",&n); for(i=0;i<n;i++) scanf("%d",&a[i]); b[0]=@@ a[0]; for(i=1;i<n;i++) { for(j=0;j<i;j++) { if(a[i]==a[j]@@ )break; if(j==@@ i@@ -1@@ ){@@ b[k]=@@ a[i]@@ ;k@@ ++;} } } printf("%d",@@ b[0]@@ ); if(k@@ >1) { for(i=1;i<k;i++) printf("%d",b[i]); } return0; }  
c -1
h -1
0

intmain(){ intn,k,i,@@ s[@@ 1000],@@ z@@ [1000],@@ j,@@ g=0; scanf("%d%d",&n,&k); for(i=0;i<n;i++){ scanf("%d",&s[i]); } for(i=0;i<n;i++){ z@@ [i]=@@ s[i]; } for(i=0;i<n;i++){ for(j=0;j<n;j++){ if(s@@ [i]!=@@ z@@ [j]&&@@ s[i]@@ +@@ z@@ [j]==k){ g@@ +=1; } } } if(g@@ >0){ printf("yes"); } else{ printf("no"); } return0; }  
c -1
h -1
intmain() { intn,i,j,@@ sa@@ =0,@@ m=0; double@@ x,@@ s; chara[@@ 105@@ ],b[@@ 105@@ ]; scanf("%lf",&x); scanf("%s@@ %s",&@@ a,&b); if(strlen(a)!=strlen(b@@ )) { printf("error"); } else { for(i=0;i<@@ strlen(a)@@ ;i++) { if((a[i]!='@@ A'&&a[i]!='T'&&a[i]!='C'&&a[i]!='G')||(b[i]!='A'&&b[i]!='T'&&b[i]!='C'&&b[i]!='@@ G')) { printf("error"); m=1; break; } } if(m@@ ==0){ for(i=0;i<@@ strlen(a)@@ ;i++) { if(a[i]==b[i]) { sa@@ ++; } } s@@ =1.0*@@ sa@@ /@@ strlen(@@ a); if(s@@ >@@ x) printf("yes"); else printf("no"); } } return0; }  
c -1
h -1
0

intmain(){ inta[16],@@ j; while(cin>>@@ a[0]@@ ){ if(a[0]==-1)break; inti=1; int@@ l=0; while(cin>>@@ a[i]@@ ){ if(a[i]==0)break; for(j=0;j<i;j++) if((@@ a[i]==@@ 2*@@ a[j]@@ )||(@@ a[j]==2*@@ a[i]@@ )) l=l@@ +1; i++; } cout<<@@ l@@ <<endl; } return0; }  
c -1
h -1
intmain(){ inta[100][100],@@ n,@@ b,@@ c,@@ d=0,@@ x1,@@ x2,@@ y1,@@ y2@@ ,@@ m; scanf("%d",&n); for(b=0;b@@ <n;b++){ for(c=0;c@@ <n;@@ c@@ ++){ scanf("%d",&a[@@ b@@ ][c@@ ]); if(a[@@ b@@ ][c@@ ]@@ ==0&&@@ d@@ ==0){ x1@@ =@@ b; y1@@ =@@ c; d=1; } elseif(@@ a[@@ b@@ ][c@@ ]@@ ==0&&@@ d@@ ==1){ x2@@ =@@ b; y2@@ =@@ c; } } } m@@ =(@@ x2-x1-1)*(y2-y1-1); printf("%d",(@@ x2-x1-1)*(y2-y1@@ -1)); return0; }  
c -1
h -1
0

intmain() { intn,i,@@ row,@@ col@@ ,j,@@ k,@@ sum; cin>>n; cin.get(); for(i=0;i<n;i++) { sum=0; row@@ =0; col@@ =0; inta[@@ 103@@ ][@@ 103@@ ]={0}; cin>>row>>col; for(j=0;j<row@@ ;j++) for(k=0;k<col@@ ;k++) cin>>@@ *(*(a@@ +j)+@@ k); if((@@ row@@ ==1@@ )&&(@@ col@@ ==1@@ )) cout<<@@ **@@ a@@ <<endl; else { for(k=0;k<col@@ ;k++) sum=sum+*(@@ *@@ a+@@ k); for(k=0;k<col@@ ;k++) sum=sum+*(@@ *(a+@@ row-1)@@ +@@ k); for(j=0;j<row@@ ;j++) sum=sum+*@@ *(a@@ +j); for(j=0;j<row@@ ;j++) sum=sum+*(@@ *(a@@ +j)@@ +col@@ -1); sum=sum@@ -*@@ *@@ a; sum=sum@@ -*(@@ *(a+@@ row@@ -1)); sum=sum@@ -*@@ (*@@ a+@@ col@@ -1); sum=sum@@ -*(@@ *(a+@@ row-1)@@ +col@@ -1); cout<<sum<<endl; } } return0; }  
c -1
h -1
structstudent { intnum; float@@ chinese; float@@ math; float@@ sum; }; voidmain() { intn,i; structstudent*@@ pt@@ ,*@@ p,@@ temp; scanf("%d",&n); pt@@ =(structstudent@@ *)malloc(@@ n*@@ LEN@@ ); for(p=@@ pt@@ ;p<@@ pt@@ +n;@@ p++) { scanf("%d@@ %@@ f@@ %@@ f",&@@ p->@@ num,&@@ p->@@ chinese@@ ,&p->@@ math); p->@@ sum=@@ p->@@ chinese+@@ p->@@ math; } for(i=0;i<3;i++) { for(p=@@ pt@@ ;p<@@ pt@@ +@@ n-1@@ -i@@ ;p++) { if(p->@@ sum@@ >=@@ (p@@ +1)@@ ->@@ sum) {@@ temp@@ =*@@ p@@ ;@@ *p@@ =*(p@@ +1@@ );@@ *(p@@ +1)@@ =@@ temp;} } } for(p=@@ pt@@ +@@ n-1@@ ;p@@ >@@ pt@@ +@@ n-@@ 4@@ ;p@@ --) { printf("%d@@ %@@ g@@ \n",@@ p->@@ num,@@ p->@@ sum); } }  
c -1
h -1
0

intmain() { introw,col; cin>>row>>col; inta[@@ row][col]; inti,j; intsum; for(i=0;i<row;i++) for(j=0;j<col;j++) cin>>a[i][j]; for(@@ sum=0;@@ sum@@ <col@@ -1;@@ sum@@ ++) { for(j=@@ sum@@ ;j>=0;j--) { i=@@ sum@@ -j@@ ; if(i>=@@ row) break; cout<<a[i][j]<<endl; } } for(@@ sum=@@ col@@ -1;@@ sum<=@@ row+col-2@@ ;@@ sum@@ ++) { for(j=col-1@@ ;j>=0;j--) { i=@@ sum@@ -j@@ ; if(i>=@@ row) break; cout<<a[i][j]<<endl; } } return0; }  
c -1
h -1
intmain() { intarray@@ [@@ 99@@ ][@@ 99@@ ]; introw,col,@@ i,j,@@ t=0; scanf("%d%d",&row,&col); for(i=0;i<row;i++) {@@ for(j=0;j<col;j++) scanf("%d",&array@@ [i][j]); } for(t=0;t@@ <=@@ row+col-2@@ ;t++) {@@ if(t@@ <col) { for(i=0;i<=@@ t@@ &&i@@ <=row@@ -1;i++) { printf("%d\n",array@@ [i]@@ [t@@ -i]); } } else{ for(i=@@ t@@ +1@@ -col@@ ;i<=@@ t@@ &&i@@ <=row@@ -1;i++) printf("%d\n",array@@ [i]@@ [t@@ -i]); } } return0; }  
c -1
h -1
1


voidmain() { chars1@@ [256],@@ s2@@ [256],@@ s3@@ [256]; intn,i,j,@@ length1@@ ,@@ length2@@ ,@@ k,@@ h; k=0; scanf("%s",@@ s2); scanf("%s",@@ s1); scanf("%s",@@ s3); length1@@ =strlen(@@ s1); length2@@ =strlen(@@ s2); for(i=0;i<@@ length2@@ ;i++) { if(s1@@ [0]==@@ s2@@ [i]) { j=0; while(@@ s2@@ [j+i@@ ]==@@ s1@@ [j]@@ &&j@@ <@@ length1@@ )@@ j++; if(j==@@ length1@@ )@@ k=i; } if(k@@ )break; } h=@@ k; if(k@@ ) {@@ for(@@ h=@@ k;@@ h@@ <k@@ +@@ length1@@ ;@@ h++) s2@@ [h@@ ]=@@ s3@@ [h@@ -k@@ ];} printf("%s",@@ s2); }  
c -1
h -1
structstudent { intnum,@@ z; }@@ a,@@ max1,@@ max2@@ ,max3@@ ; voidmain() { inti,n,@@ x,y; scanf("%d",&n); max1@@ .z@@ =-1; max2@@ .z@@ =-1; max3@@ .z@@ =-1; for(i=0;i<n;i++) { scanf("%d%d%d",&@@ a.@@ num,&@@ x,&@@ y); a.@@ z=@@ x+@@ y; if(a@@ .z@@ >@@ max1@@ .z@@ ) { max3@@ .@@ num=@@ max2@@ .@@ num; max3@@ .@@ z=@@ max2@@ .@@ z; max2@@ .@@ num=@@ max1@@ .@@ num; max2@@ .@@ z=@@ max1@@ .@@ z; max1@@ .@@ num=@@ a.@@ num; max1@@ .@@ z=@@ a.@@ z; } elseif(a@@ .z@@ >@@ max2@@ .z@@ ) { max3@@ .@@ num=@@ max2@@ .@@ num; max3@@ .@@ z=@@ max2@@ .@@ z; max2@@ .@@ num=@@ a.@@ num; max2@@ .@@ z=@@ a.@@ z; }elseif(@@ a@@ .z@@ >@@ max3@@ .z@@ ) { max3@@ .@@ num=@@ a.@@ num; max3@@ .@@ z=@@ a.@@ z; } } printf("%d%d\n%d%d\n%d%d\n",@@ max1@@ .num,@@ max1@@ .@@ z,@@ max2@@ .num,@@ max2@@ .@@ z,@@ max3@@ .num,@@ max3@@ .@@ z); }  
c -1
h -1
0

structbook { int@@ ISBN@@ ; charname[26]; }b[@@ 999]; intmain() { inti,j,@@ m,@@ k@@ [26],@@ max=0; char@@ a,@@ d@@ ='A'; for(i=0;i<26;i++) k@@ [i]=0; scanf("%d",&m); for(i=0;i<m;i++) scanf("%d%s",&@@ b[i].@@ ISBN@@ ,@@ b[i].@@ name); for(a@@ ='A'@@ ;a@@ <=@@ 'Z'@@ ;a@@ ++) for(i=0;i<m;i++) for(j=0;j<26;j++) if(b[i].@@ name[j]==@@ a) k@@ [a@@ -'A']++; for(i=0;i<26;i++) if(k@@ [i]>=@@ max) max=@@ k@@ [i]; for(i=0;i<26;i++) if(k@@ [i]==@@ max) { d@@ +=@@ i; printf("%c\n",@@ d); printf("%d\n",max); } for(i=0;i<m;i++) for(j=0;j<26;j++) if(b[i].@@ name[j]==@@ d) printf("%d\n",b[i].@@ ISBN@@ ); return0; }  
c -1
h -1
intmain(){ chara[@@ 266@@ ],@@ s[@@ 22@@ ],@@ z[@@ 22@@ ]; gets(a); gets(s); gets(@@ z); intn,i,j,@@ l@@ =1,@@ m,@@ q,@@ w,@@ e; for(i=0;a[i]@@ !='\0';i++){ if(s@@ [0]==@@ a[i]@@ ){ l@@ =1; m=i; for(@@ w@@ =0;@@ s[@@ w@@ ]!='\0'@@ ;@@ w@@ ++){ if(s[@@ w@@ ]!=@@ a[i]@@ ){ l@@ =0;} i@@ ++;} if(l@@ ){ break; } } } for(n@@ =0;@@ s[@@ n@@ ]!='\0'@@ ;n++){ 1@@ ;} if(l@@ ){ for(j=0;@@ a[j]@@ !='\0';j++){ if(m==@@ 48@@ ){@@ m=@@ 17@@ ;} if(j==@@ m){ for(e@@ =0;@@ z[@@ e@@ ]!='\0'@@ ;@@ e@@ ++){ printf("%c",@@ z[@@ e@@ ]); } j=@@ m+@@ n-1; } else{ printf("%c",@@ a[j]@@ );} } } return0;}  
c -1
h -1
0

intmain() {@@ intn,k,i,j,@@ h; scanf("%d%d",&n,&k); inta[@@ 1000],b[1000],@@ sum; for(i=0;i<n;i++){ scanf("%d",&a[i]); } for(i=0;i<n;i++){ for(j=0;j<n;j++){ if(a[i]+a[j]==@@ k@@ &&i!=@@ j){ b[i]@@ +=1; break; } } if(j==@@ n){ b[i]=0; } } for(h=0;h@@ <n;@@ h@@ ++){ sum+=@@ b[@@ h@@ ]; } if(sum@@ ==0) printf("no\n"); if(sum@@ !=0) printf("yes\n"); return0; }  
c -1
h -1
voidmain() { intk,i,j,@@ t=0,@@ sum@@ [100@@ ]={0@@ }@@ ,*p; scanf("%d",&k); for(t=0;t@@ <k;@@ t++) { intm,n; scanf("%d%d",&m,&n); p=@@ (int*)malloc(sizeof(int)@@ *@@ m@@ *n); for(i=0;i<m;i++) { for(j=0;j<n;j++) { scanf("%d",p@@ +i@@ *@@ n@@ +j); if(i==0||i==@@ m-1@@ ||j@@ ==0||j==@@ n-1)@@ sum[@@ t@@ ]+=@@ *(p@@ +i@@ *@@ n@@ +j); } } } for(t=0;t@@ <k;@@ t++) printf("%d\n",@@ sum[@@ t@@ ]); }  
c -1
h -1
0

int@@ divide@@ (intn,int@@ a) { int@@ s=0,@@ i; if(n@@ ==1)@@ return1; for(i=a@@ ;i@@ >1@@ ;i--) if(n%i==0) s+=@@ divide@@ (n/i,i); return@@ s; } intmain() { intn,k; cin>>k; while(k@@ >0) { cin>>n; cout<<@@ divide@@ (n,@@ n@@ )<<endl; k--; } return0; }  
c -1
h -1
intmain(){ intn,k,@@ s,@@ h@@ =0,@@ t=0; scanf("%d%d",&n,&k); inta[n]; for(inti=0;i<n;i++){ scanf("%d",&a[i]); } for(inti=0;i<@@ n-1;i++){ for(intj=i+1@@ ;j<@@ n;j++){ s=@@ a[i]+a[j]; if(s@@ ==k){ h@@ =1; } } } if(h@@ ==1&&@@ t@@ ==0){ printf("yes"); }else{ printf("no"); } return0; }  
c -1
h -1
0

intmain() { intm,n,@@ zong@@ ,@@ x,y,@@ sum,@@ i,@@ zanshi@@ ; int*@@ c@@ ,*@@ d; scanf("%d%d",&m,&n); zong@@ =@@ m*@@ n; d=@@ (int*)malloc(@@ zong@@ *sizeof(int)); c=@@ d; for(;@@ c@@ <@@ d+@@ zong@@ ;c@@ ++)@@ scanf("%d",@@ c); for(@@ sum=@@ 2;@@ sum<=@@ m+@@ n;@@ sum@@ ++) { for(@@ y@@ =1;@@ y@@ <@@ sum@@ ;y@@ ++) { x=@@ sum@@ -@@ y; zanshi@@ =@@ n@@ *(@@ y@@ -1)@@ +@@ x; if(x@@ <=@@ n@@ &&@@ y@@ <=@@ m@@ &&@@ zanshi@@ >=1@@ &&@@ zanshi@@ <=@@ zong@@ )@@ printf("%d\n",*(@@ d+@@ zanshi@@ -1)); } } }  
c -1
h -1
inta[@@ 100000]; intn; void@@ del_a@@ (intx) { for(inti=@@ x@@ ;i<@@ n-1;i++) { a[i]=a[i+1]; } a[@@ n-1@@ ]=0; n=@@ n-1; } intmain() { cin>>n; for(inti=0;i<n;i++) { cin>>a[i]; } for(inti=1;i<@@ n;i++) { for(intj=0;j<i;j++) { if(a[i]==a[j]) { del_a@@ (i); i@@ =i-1; break; } } } for(inti=0;i<@@ n-1;i++) { cout<<a[i]<<""; } cout<<a[@@ n-1]; return0; }  
c -1
h -1
0

intmain() { inty,m,d,@@ day@@ [12]={31,28,31,30,31,30,31,31,30,31,30,31}; cin>>y>>m>>d; if((y%@@ 4==0&&y%100!=0@@ )||(y%@@ 400==0)) day@@ [1]=@@ 29; for(inti=0;i<@@ m-1;i++) d@@ +=@@ day@@ [i]; cout<<@@ d; return0; }  
c -1
h -1
voidmain() { inta[@@ 15@@ ]={0},@@ i=0,j=0,@@ m=0; scanf("%d",&a[0]); while(a[i]@@ !=0) { scanf("%d",&@@ a[i+1@@ ]); i=i+1; } i=0; while(@@ a[0]@@ !=-1) { while(a[i]@@ !=0) { while(@@ a[j]@@ !=0) { if(((@@ float)@@ a[j])@@ /@@ ((@@ float)@@ a[i]@@ )==@@ 2) m=m+1; j=j+1; } j=0; i=i+1; } printf("%d\n",m); i=0; m=0; scanf("%d",&a[0]); while(a[i]@@ !=0) { scanf("%d",&@@ a[i+1@@ ]); i=i+1; } i=0; } }  
c -1
h -1
0

intmain(intargc,char*argv[]) { intn; intm; scanf("%d",&n); int@@ liu@@ [100][100]; inti,j,@@ p; int@@ x1,@@ x2,@@ y1,@@ y2@@ ; for(i=0;i<n;i++){ for(j=0;j<n;j++){ scanf("%d",&@@ liu@@ [i][j]); } } for(i=0;i<n;i++){ for(j=0;j<n;j++){ if(@@ liu@@ [i][j]@@ ==0@@ &@@ liu@@ [i+1][j]@@ ==0@@ &@@ liu@@ [i]@@ [j+1]@@ ==0){ x1=i; y1@@ =j;} if(@@ liu@@ [i][j]@@ ==0@@ &@@ liu@@ [i-1][j]@@ ==0@@ &@@ liu@@ [i]@@ [j-1]@@ ==0) {@@ x2=i; y2@@ =j;} } } m@@ =(@@ x2-x1-1)*(y2-y1-1); printf("%d",m); return0; }  
c -1
h -1
intmain(intargc,char*argv[]) { intnum[@@ 101@@ ][100]; intn,i,j; scanf("%d",&n); i@@ =j@@ =0; for(i=0;i<n;i++) {@@ for(j=0;j<n;j++) scanf("%d",&@@ num@@ [i][j]); } inta,b,c,@@ d; a=@@ b=@@ c=@@ d=0; i@@ =j@@ =0; do{ do{ if(num@@ [i][j]==0&&@@ a@@ ==0&&@@ b@@ ==0) a=@@ i,@@ b@@ =j+1; j++; }while(@@ j@@ <@@ n); j=0; i++; }@@ while(i<@@ n); i@@ =j@@ =0; do{ do{ if(num@@ [i][j]==0&&@@ c@@ <=i@@ &&@@ d@@ <=@@ j) c=@@ i,@@ d=j; j++; }while(@@ j@@ <@@ n); j=0; i++; }@@ while(i<@@ n); ints; s=(@@ c-a@@ -1)*(@@ d@@ -@@ b); printf("%d\n",s); return0; }  
c -1
h -1
1


intmain() { introw,col,@@ f@@ [100][100],@@ i,j; scanf("%d%d",&row,&col); for(i=0;i<row;i++) { for(j=0;j<col;j++) scanf("%d",&@@ f@@ [i][j]); } for(j=0;j<col;j++) { for(i=0;i<=@@ j@@ &&i@@ <@@ row;i++) { printf("%d",@@ f@@ [i]@@ [j-i@@ ]); printf("\n"); } } for(j=1;j<@@ row@@ ;j++) { for(i=j@@ ;i<@@ row@@ &&i@@ <=j@@ +col@@ -1;i++) { printf("%d",@@ f@@ [i]@@ [@@ col-1@@ +j@@ -i]); printf("\n"); } } return0; }  
c -1
h -1
intmain() { chars1@@ [257],@@ s2@@ [257],@@ s3@@ [257]; char*@@ p; gets(@@ s1); gets(@@ s2); gets(@@ s3); p=strstr(@@ s1,@@ s2); if(p@@ ){ int@@ i=@@ p@@ -@@ s1@@ ; s1@@ [i]@@ ='\0'; printf("%s",@@ s1); printf(@@ s3); printf("%s\n",@@ p+@@ strlen(@@ s2@@ )); } else{ puts(@@ s1); } return0; }  
c -1
h -1
0

int@@ readin@@ (intn,@@ int*@@ a); int@@ px@@ (intn,@@ int*@@ a); int@@ sc@@ (int@@ n1@@ ,int*@@ a,int@@ n2@@ ,int*@@ b); intt,@@ i,j,@@ a[@@ 1000],b[1000]; intmain() { int@@ n1,n2@@ ;@@ cin>>@@ n1@@ >>@@ n2; readin@@ (@@ n1,@@ a); px@@ (@@ n1,@@ a); readin@@ (@@ n2,@@ b); px@@ (@@ n2,@@ b); sc@@ (@@ n1,@@ a,@@ n2,@@ b); return0; } int@@ readin@@ (intn,@@ int*@@ a) { memset(a,0,@@ sizeof(a)); for(i=1;i<=@@ n;i++)@@ cin>>a[i]; } int@@ px@@ (intn,@@ int*@@ a) { for(i=1;i<n;i++) for(j=i+1;j<=n;j++) if(a[i]>a[j]) { t=@@ a[i];a[i]=@@ a[j];a[j]=@@ t; } } int@@ sc@@ (int@@ n1@@ ,int*@@ a,int@@ n2@@ ,int*@@ b) { for(inti=1;i<=@@ n1@@ ;i++)@@ cout<<a[i]@@ <<''; for(inti=1;i<=@@ n2@@ -1;i++)@@ cout<<b[i]@@ <<'@@ '@@ ;@@ cout<<b[@@ n2@@ ]; }  
c -1
h -1
voidmain() { inta[@@ 30@@ ],b[@@ 30],@@ i,j,k,@@ n,@@ m=1; scanf("%d",&n); for(i=1;i<=n;i++) { scanf("%d",&a[i]); b[i]=1; } for(i=n-1@@ ;i>=1;i--) { for(j=i+1;j<=n;j++) { if(a[i]>=@@ a[j]&&@@ b[i]@@ <@@ b[j]@@ +1) b[i]=b[j]+1; } if(b[i]>@@ m) m=@@ b[i]; } printf("%d",m); }  
c -1
h -1
0

intmain() { intm; cin>>m; char@@ writter@@ [27]; int@@ data@@ [26@@ ][@@ 1000]; memset(@@ data@@ ,0,sizeof(@@ data@@ )); intmax=0; char@@ max_name@@ ; for(inti=1;i<=@@ m;i++){ intnumber; cin>>@@ number@@ >>@@ writter@@ ; for(intj=0;j<@@ strlen(@@ writter@@ )@@ ;j++){ data@@ [@@ writter@@ [j]-65@@ ][0]@@ ++; data@@ [@@ writter@@ [j]-65@@ ][@@ data@@ [@@ writter@@ [j]-65@@ ][0]@@ ]=@@ number; if(max<@@ data@@ [@@ writter@@ [j]-65@@ ][0]@@ ){ max=@@ data@@ [@@ writter@@ [j]-65@@ ][0]; max_name@@ =@@ writter@@ [j]; } } } cout<<@@ max_name@@ <<endl@@ <<@@ max<<endl; for(inti=1;i<=@@ max@@ ;i++) cout<<@@ data@@ [@@ max_name@@ -65@@ ]@@ [i]<<endl; return0; }  
c -1
h -1
intmain() { inty,m,d,@@ n=0; cin>>y>>m>>d; int@@ ping@@ [@@ 12]={31,@@ 28,31,30,31,30,31,31,30,31,30,31@@ },@@ run@@ [@@ 12]={31,29,31,30,31,30,31,31,30,31,30,31}; if(y%@@ 4!=0@@ ||(@@ y%@@ 100==0&&@@ y%@@ 400!=0)) { for(inti=0;i<@@ m-1;i++) n=n+@@ ping@@ [i]; n=n+@@ d; } else { for(inti=0;i<@@ m-1;i++) n=n+@@ run@@ [i]; n=n+@@ d; } cout<<n<<endl; return0; }  
c -1
h -1
0

intmain() { inti,@@ n@@ [100][100],@@ col,@@ row,@@ COL@@ ,@@ ROW@@ ; scanf("%d%d",&@@ ROW@@ ,&@@ COL@@ ); for(row=0;row@@ <ROW@@ ;@@ row++){ for(col=0;col@@ <@@ COL@@ ;col@@ ++){ scanf("%d",&@@ n[@@ row][col@@ ]); } } for(i=0;i<@@ COL@@ +@@ ROW@@ -1;i++){ if(i<@@ COL@@ ){ col@@ =i; row@@ =0; while(@@ col@@ >=0&&@@ row@@ <ROW@@ ){ printf("%d\n",@@ n[@@ row][col@@ ]); col@@ -=@@ 1; row@@ +=1; } } elseif(@@ i>=@@ COL@@ ){ col@@ =@@ COL@@ -1; row@@ =i@@ -@@ COL@@ +1; while(@@ col@@ >=0&&@@ row@@ <ROW@@ ){ printf("%d\n",@@ n[@@ row][col@@ ]); col@@ -=@@ 1; row@@ +=1; } } } return0; }  
c -1
h -1
intmain() { introw,col,@@ array@@ [100][100],@@ i,j,@@ t; cin>>row>>col; for(i=0;i<row;i++) for(j=0;j<col;j++) cin>>array[i][j]; for(t=0;t@@ <col@@ ;t++) for(i=0,j@@ =@@ t@@ ;i<=@@ t@@ &&j>=0@@ &&i@@ <row@@ ;j--@@ ,i++) {@@ cout<<array@@ [i][j]; if(i!=@@ row-1@@ ||j@@ !=@@ col@@ -1) cout<<endl; } for(t@@ =1;t@@ <=row@@ -1;@@ t++) for(i=@@ t@@ ,j=@@ col-1@@ ;j>=0@@ &&i@@ <=row-1@@ ;j--@@ ,i++) {@@ cout<<array@@ [i][j]; if(i!=@@ row-1@@ ||j@@ !=@@ col@@ -1) cout<<endl; } return0; }  
c -1
h -1
1


intmain() { intt,@@ tri@@ [100][100],@@ h,@@ l@@ ,*@@ point@@ =@@ tri@@ [0]; cin>>t; for(inti=1;i<=@@ t;i++) { cin>>@@ h@@ >>@@ l; int@@ temp=0; for(intp@@ =1@@ ;p<=@@ h@@ ;p++) { for(int@@ q@@ =1;@@ q@@ <=@@ l@@ ;q++) { cin>>@@ *(@@ point@@ +@@ 100@@ *p@@ +@@ q); if(p@@ ==1||@@ q@@ ==1||@@ p@@ ==@@ h@@ ||@@ q@@ ==@@ l) temp@@ +=@@ *(@@ point@@ +@@ 100@@ *p@@ +@@ q); } } cout<<@@ temp@@ <<endl; } return0; }  
c -1
h -1
intmain(){ inta[16],@@ j; while(cin>>@@ a[0]@@ ){ if(a[0]==-1)break; inti=1; int@@ l=0; while(cin>>@@ a[i]@@ ){ if(a[i]==0)break; for(j=0;j<i;j++) if((@@ a[i]==@@ 2*@@ a[j]@@ )||(@@ a[j]==2*@@ a[i]@@ )) l=l@@ +1; i++; } cout<<@@ l@@ <<endl; } return0; }  
c -1
h -1
0

intmain() {@@ intm,n,@@ k,i,j,@@ a[@@ 25],b[@@ 25],@@ max; scanf("%d",&k); for(i=0;i<=k-1;i++) scanf("%d",&a[i]); for(i=k@@ -1;i>=0;i--) { if(i==@@ k@@ -1) b[i]=1; else {@@ max=0; for(j=i+1;j<=@@ k@@ -1;j++) if(a[j]<=@@ a[i]&&@@ b[j]@@ >=@@ max) max=@@ b[j]; b[i]=@@ max+1; } } max=0; for(i=0;i<=k-1;i++) {@@ if(b[i]@@ >=@@ max) max=@@ b[i]@@ ;} printf("%d",max); return0; }  
c -1
h -1
intmain() { intn,i,j,@@ sum=0,@@ len@@ =0,@@ final@@ ; unsigned@@ short@@ a[@@ 500@@ ][@@ 500]; scanf("%d",&n); for(i=0;i<n;i++) for(j=0;j<n;j++) { scanf("%d",&a[i][j]); if(a[i][j]==0) sum++; } for(i=0;i<n@@ &&@@ len@@ ==0@@ ;i++) for(j=0;j<n;j++) { if(a[i][j]==0) len@@ ++; } final@@ =(@@ sum@@ -2*@@ len@@ )@@ /2@@ *(@@ len@@ -2); printf("%d\n",@@ final@@ ); return0; }  
c -1
h -1
0

intmain(){ inta[@@ 101][101]; intr,@@ c@@ ,j,@@ k,@@ l,@@ m,@@ sum,@@ n,@@ p; cin>>n; for(p=1@@ ;p@@ <=n;@@ p++) {@@ sum=0; cin>>@@ r; cin>>@@ c; for(inti=0;i<@@ r;i++) for(intj=0;j<@@ c;j++) cin>>a[i][j]; for(j=0;j<@@ r@@ ;j++) { sum=sum+*@@ *(a@@ +j); } for(k=1;k<@@ c@@ ;k++) { sum=sum+*(@@ *(a+@@ r@@ -1)@@ +@@ k); } for(l@@ =@@ r@@ -2@@ ;@@ l@@ >=0;@@ l@@ --) { sum=sum+*(@@ *(a+@@ l@@ )+@@ c@@ -1); } for(m=1;m@@ <@@ c@@ -1@@ ;m++) { sum=sum+*(@@ *(a+@@ 0@@ )+@@ m); } cout<<sum<<endl; } return0; }  
c -1
h -1
intmain() { inta[@@ 20002@@ ],b[@@ 20001@@ ],@@ n,@@ i,j; cin>>n; for(i=1;i<=n;i++) cin>>a[i]; for(i=1;i<=n@@ +1;i++) b[i]=0; a[n@@ +1@@ ]=0; for(i=2;i<=n;i++) { for(j=1;j<i;j++) if(a[i]==@@ a[j])@@ a[i]=0; } for(i=1;i<=n;i++) { for(j=i+1;j<=@@ n+1@@ ;j++) b[i]@@ +=@@ a[j]; } for(i=1;i<=n;i++) { if(a[i]@@ !=0&&@@ b[i]@@ !=0) cout<<a[i]<<""; else@@ if(a[i]@@ !=0&&@@ b[i]@@ ==0) cout<<a[i]@@ <<endl; } return0; }  
c -1
h -1
0

intmain() { inta[@@ 20@@ ],b[@@ 20]; inti,j,k; intn; i@@ =1;@@ n=0; while(1) { scanf("%d",&a[i]); if(a[i]==@@ -1)break; else@@ if(a[i]==0) { for(j=1;j<=@@ i-1;j++) b[j]=@@ a[j]@@ *2@@ ; for(j=1;j<=@@ i-1;j++) for(k=1;k<=@@ i-1;k++) { if(b[j]@@ ==@@ a[k]@@ )@@ n++; } printf("%d\n",n); i=1; n=0; } else@@ i++; } return0; }  
c -1
h -1
structstudent { intnum; int@@ yw@@ ; int@@ sx; }; intmain() { intn,i,@@ x=0,@@ y=0,@@ z=0; scanf("%d",&n); structstudent@@ a[@@ n]; intb[@@ n]; for(i=0;i<n;i++) { scanf("%d%d%d",&a[i].@@ num,&@@ a[i].@@ yw@@ ,&a[i].@@ sx@@ ); b[i]=@@ a[i].@@ yw@@ +a[i].@@ sx; } for(i=1;i<n;i++) { if(b[@@ x@@ ]<@@ b[i]) x@@ =i; } printf("%d%d\n",@@ a[x@@ ].num,@@ b[@@ x@@ ]); for(i=1;i<n;i++) { if(i==@@ x)@@ continue; if(b[@@ y@@ ]<@@ b[i]) y@@ =i; } printf("%d%d\n",@@ a[@@ y@@ ].num,@@ b[@@ y@@ ]); for(i=1;i<n;i++) { if(i==@@ x)@@ continue; if(i==@@ y)@@ continue; if(b[@@ z@@ ]<@@ b[i]) z@@ =i; } printf("%d%d\n",@@ a[@@ z@@ ].num,@@ b[@@ z@@ ]); getchar(); getchar(); }  
c -1
h -1
0

intmain(){ inti,@@ a=0,b=0,@@ p=0; char@@ sz[@@ 10000]; chars[@@ 10000]; doublen,@@ c; scanf("%lf%s%s",&@@ n,&@@ sz@@ ,&@@ s); for(i=0;@@ sz[i]@@ ;i++){ if(sz@@ [i]==@@ s[i]@@ ){ a@@ ++;} b++; if((@@ sz@@ [i]!='A'&&@@ sz@@ [i]!='T'&&@@ sz@@ [i]!='C'&&@@ sz@@ [i]!='G')||(@@ s@@ [i]!='A'&&@@ s@@ [i]!='T'&&@@ s@@ [i]!='C'&&@@ s@@ [i]!='G')@@ ) {@@ p@@ ++;} } c@@ =1.0*@@ a/@@ b; if(p@@ !=0){ printf("error"); } if(p@@ ==0&&@@ c@@ >n){ printf("yes"); } if(p@@ ==0&&@@ c@@ <=@@ n){ printf("no"); } return0; }  
c -1
h -1
structstudent { intID; intchi; intmath; }@@ student[@@ 100000]; intmain() { intn,i,j,k; scanf("%d",&n); inta[n]; for(i=0;i<n;i++) { scanf("%d%d%d",&@@ student[i].@@ ID,&@@ student[i].@@ chi@@ ,&@@ student[i].@@ math); a[i]=@@ student[i].@@ chi@@ +@@ student[i].@@ math; } for(k=0;k<@@ 3@@ ;k++) { for(i=0;i<n;i++) { for(j=0;j<n;j++) { if(a[i]@@ <@@ a[j]) break; } if(j==@@ n@@ &&a[i]@@ >=@@ a@@ [j-1]) { printf("%d%d\n",@@ student[i].@@ ID,@@ a[i]); a[i]=0; break; } } } getchar(); getchar(); }  
c -1
h -1
0

intmain() { intn,k,@@ a[1000],@@ i,j,@@ e=0; scanf("%d%d",&n,&k); for(i=0;i<n;i++)@@ scanf("%d",&a[i]); for(i=0;i<n;i++){ for(j=0;j<n;j++){ if(i==@@ j@@ )continue; if(a[i]+a[j]==@@ k){ e++; } } } if(e@@ ==0)@@ printf("no"); elseif(@@ e@@ >0@@ )@@ printf("yes"); return0; }  
c -1
h -1
main() { inta[16],@@ n,@@ i,j,k; while(1) { n=0; for(i=0;i<16;i++) a[i]=0; scanf("%d",&a[0]); if(a[0]==-1) break; else { for(i=1;i<@@ 16@@ ;i++) { scanf("%d",&a[i]); if(a[i]==0) break; } j=i; for(i=0;i<j@@ -1;i++) { for(k@@ =i+1@@ ;k<@@ j@@ ;k++) { if(a[k@@ ]==2*@@ a[i]@@ ||@@ a[i]==@@ 2*@@ a[k]) n++; } } printf("%d\n",n); } } }  
c -1
h -1
0

intmain() { introw,col; cin>>row>>col; inta[@@ row][col]; inti,j; intsum; for(i=0;i<row;i++) for(j=0;j<col;j++) cin>>a[i][j]; for(@@ sum=0;@@ sum@@ <col@@ -1;@@ sum@@ ++) { for(j=@@ sum@@ ;j>=0;j--) { i=@@ sum@@ -j@@ ; if(i>=@@ row) break; cout<<a[i][j]<<endl; } } for(@@ sum=@@ col@@ -1;@@ sum<=@@ row+col-2@@ ;@@ sum@@ ++) { for(j=col-1@@ ;j>=0;j--) { i=@@ sum@@ -j@@ ; if(i>=@@ row) break; cout<<a[i][j]<<endl; } } return0; }  
c -1
h -1
intmain() { intk,m,n,i,j,@@ p,@@ sum1@@ ,@@ sum2@@ ,@@ sum3@@ ,@@ sum4@@ ,sum; scanf("%d",&k); for(i=0;i<k;i++){ intsz[100][100]; scanf("%d%d",&m,&n); for(j=0;j<m;j++){ for(p=0;p@@ <n;@@ p++){ scanf("%d",&sz@@ [j]@@ [p@@ ]); } } if(m@@ !=1@@ &&m@@ !=@@ 2@@ &&n@@ !=1@@ &&n@@ !=@@ 2@@ ){ sum1@@ =@@ sum2@@ =@@ sum3@@ =@@ sum4@@ =0; for(p=0;p@@ <n;@@ p++){ sum1@@ +=@@ sz[0][@@ p@@ ]; } for(p=0;p@@ <n;@@ p++){ sum2@@ +=@@ sz[@@ m-1][@@ p@@ ]; } for(j=0;j<m;j++){ sum3@@ +=@@ sz[j]@@ [0]; } for(j=0;j<m;j++){ sum4@@ +=@@ sz[j]@@ [n-1]; } printf("%d\n",@@ sum1@@ +@@ sum2@@ +@@ sum3@@ +@@ sum4@@ -@@ sz[0][@@ 0]-@@ sz[0][@@ n-1]-@@ sz[@@ m-1][0]-@@ sz[@@ m-1][@@ n-1]); }else{ sum=0; for(j=0;j<m;j++){ for(p=0;p@@ <n;@@ p++){ sum+=@@ sz[j]@@ [p@@ ]; } } printf("%d\n",sum); } } return0; }  
c -1
h -1
0

structbook { int@@ name@@ ; charwriter@@ [26]; }; voidmain() { structbook@@ data@@ [999]; intm,i,j,@@ max=0,@@ b=0; inta[@@ 26]={0}; scanf("%d",&m); for(i=0;i<m;i++) scanf("%d%s",&@@ data@@ [i].name@@ ,@@ data@@ [i].@@ writer); for(i=0;i<m;i++) for(j=0;j<strlen(@@ data@@ [i].@@ writer@@ );j++) a[@@ data@@ [i].@@ writer@@ [j]@@ -'A']++; for(i=0;i<26;i++) if(a[i]>max) {max=@@ a[i]; b@@ =i;} printf("%c\n%d\n",@@ (@@ 'A'+@@ b@@ ),@@ max); for(i=0;i<m;i++) for(j=0;j<strlen(@@ data@@ [i].@@ writer@@ );j++) {if(@@ data@@ [i].@@ writer@@ [j]==@@ (@@ 'A'+@@ b@@ )) { printf("%d\n",@@ data@@ [i].@@ name); break;} } }  
c -1
h -1
struct@@ info { charnum[10]; intage; }; struct@@ info1 { char@@ num1@@ [10]; int@@ age1@@ ; }; intmain(intargc,char*argv[]) { struct@@ info@@ patient@@ [@@ 101]; struct@@ info1@@ old@@ [@@ 101]; intn; scanf("%d",&n); inti,j; for(i=0,j@@ =0;i<@@ n;i++){ scanf("%s%d",&@@ patient@@ [i].num,&@@ patient@@ [i].age); if(@@ patient@@ [i].age>=60){ strcpy(old@@ [j].@@ num1,@@ patient@@ [i].num); old@@ [j].@@ age1@@ =@@ patient@@ [i].age; j++; } } intm@@ =j; for(j=1;j<@@ m@@ ;j++){ for(i=0;i<m@@ -j@@ ;i++){ if(old@@ [i].@@ age1@@ <@@ old@@ [i+1].@@ age1@@ ){ old@@ [100@@ ]=@@ old@@ [i]; old@@ [i]=@@ old@@ [i+1]; old@@ [i+1]=@@ old@@ [100]; } } } for(i=0;i<m;i++){ printf("%s\n",old@@ [i].@@ num1@@ ); } for(i=0;i<n;i++){ if(@@ patient@@ [i].age@@ <60){ printf("%s\n",@@ patient@@ [i].num); } } return0; }  
c -1
h -1
0

int@@ num_a@@ ,@@ num_b@@ ,a[@@ 2000@@ ]={0},b[@@ 1000]={0},@@ i,j; voidmain() { void@@ a1@@ (@@ ),@@ a2@@ (@@ ),@@ a3@@ (@@ ),@@ a4@@ (); a1@@ (); a2@@ (); a3@@ (); a4@@ (); } void@@ a1@@ () { scanf("%d%d",&@@ num_a@@ ,&@@ num_b@@ ); for(i=0;i<@@ num_a@@ ;i++) scanf("%d",&a[i]); for(i=0;i<@@ num_b@@ ;i++) scanf("%d",&b[i]); } void@@ a2@@ () { int@@ turn1@@ ; for(i=0;i<@@ num_a@@ ;i++) for(j=i+1;j<@@ num_a@@ ;j++) if(a[i]>a[j]) { turn1@@ =@@ a[i];a[i]=@@ a[j];a[j]=@@ turn1@@ ; } for(i=0;i<@@ num_b@@ ;i++) for(j=i+1;j<@@ num_b@@ ;j++) if(b[i]>@@ b[j]) { turn1@@ =@@ b[i]@@ ;@@ b[i]=b[j]@@ ;@@ b[j]=@@ turn1@@ ; } } void@@ a3@@ () { for(i=0;i<@@ num_b@@ ;i++) a[@@ num_a@@ +i]=b[i]; } void@@ a4@@ () { for(i=0;i<@@ num_a@@ +@@ num_b@@ -1;i++) printf("%d@@ "@@ ,@@ a[i]); printf("%d\n",a[@@ num_a@@ +@@ num_b@@ -1]); }  
c -1
h -1
structpatient{ charid[10]; intage; }@@ pat@@ [100],@@ order@@ [100],@@ buffer@@ [100],@@ swap@@ ; intmain(){ inti,j=0,@@ m=0,@@ n,k,@@ p,q; scanf("%d",&n); for(i=0;i<n;i++){ scanf("%s%d",@@ pat[i].@@ id,&@@ pat@@ [i].age); } for(i=0;i<n;i++){ if(pat@@ [i].age>=60){ order@@ [j]=@@ pat@@ [i]; j@@ ++;} } for(i=0;i<n;i++){ if(pat@@ [i].age@@ <60){ buffer@@ [m]=@@ pat@@ [i]; m@@ ++;} } for(p=1@@ ;p<@@ j@@ ;p++){ for(q=0;q@@ <j@@ -@@ p@@ ;q@@ ++){ if(@@ order@@ [q@@ ].age@@ <@@ order@@ [q@@ +1@@ ].age){ swap@@ =@@ order@@ [q@@ +1]; order@@ [q@@ +1]=@@ order@@ [q@@ ]; order@@ [q@@ ]=@@ swap@@ ; } } } for(q=0;q@@ <j@@ ;q@@ ++){ printf("%s",@@ order@@ [q@@ ].id); printf("\n@@ ");} for(i=0;i<m;i++){ printf("%s",@@ buffer@@ [i].id); printf("\n@@ ");} }  
c -1
h -1
0

intmain(){ inti,@@ m,n; double@@ w,@@ e@@ ,k@@ =0@@ .0@@ ; chara[501],b[501]; scanf("%lf%s%s",&@@ w@@ ,&@@ a,&b); m=strlen(a); n@@ =strlen(b); for(i=0;i<n;i++){ if(m!=@@ n){ printf("error\n"); i=@@ n+1; break; } elseif((@@ a[i]!='@@ A'&&a[i]!='T'&&a[i]!='C'&&a[i]!='G')||(b[i]!='A'&&b[i]!='T'&&b[i]!='C'&&b[i]!='@@ G')){ printf("error\n"); i=@@ n+1; break; } else@@ if(a[i]==b[i]){ k=k+1; e@@ =1.0*@@ k/@@ n; } } if(e@@ >@@ w@@ &&@@ i==@@ n) printf("yes\n"); elseif(@@ e@@ <=@@ w@@ &&@@ i==@@ n) printf("no\n"); return0; }  
c -1
h -1
intmain(intargc,char*argv[]) { inti,j,@@ C@@ [1000][1000]; intn,@@ s; inta,b; scanf("%d",&n); for(i=0;i<n;i++) { for(j=0;j<n;j++) { scanf("%d",&(@@ C@@ [i][j]@@ )); } } for(i=0;i<n;i++) { intsum=0; for(j=0;j<n;j++) { if(@@ C@@ [i][j]==0) sum=sum+1; if(sum@@ >2) a=@@ sum; } } for(j=0;j<n;j++) { int@@ um@@ =0; for(i=0;i<n;i++) { if(@@ C@@ [i][j]==0) um@@ =@@ um@@ +1; if(@@ um@@ >2) b=@@ um@@ ; } } s=(@@ a@@ -2)*(@@ b@@ -2); printf("%d\n",s); return0; }  
c -1
h -1
0

intsum@@ =1; int@@ kk@@ (inta,intb) { inti; for(i=b@@ ;i@@ >=@@ 2@@ ;i--) if(a%i==0) return@@ a/@@ i; return0; } int@@ seperate@@ (inta,intb) { inti; for(i=b@@ ;i@@ >=@@ 2@@ ;i--) { if(a@@ %i@@ ==0@@ &&(@@ a/@@ i)@@ <=@@ i) {@@ sum@@ ++;@@ if((@@ a/@@ i@@ )==@@ 2)@@ continue@@ ;@@ else@@ seperate@@ (a@@ /i,@@ a/@@ i@@ -1)@@ ;} elseif(@@ (a@@ %i@@ ==0)&&(@@ (@@ kk@@ (a@@ /i,@@ i@@ ))@@ !=0)) { seperate@@ (a/i,i); } } returnsum; } intmain() { intn,i,@@ m; cin>>n; for(i=1;i<=n;i++) { cin>>m; cout<<@@ seperate@@ (m,@@ m-1)@@ <<endl; sum=1; } return0; }  
c -1
h -1
intmain() { chara[500],b[500]; inti,@@ len,@@ n=0,@@ x,y; double@@ m,@@ p; scanf("%lf",&@@ m); scanf("%s%s",a,b); x@@ =strlen(a); y@@ =strlen(b); len@@ =strlen(a); for(i=0;i<len;i++) { if(a[i]@@ >'@@ Z@@ '||@@ a[i]@@ <'@@ A'@@ ) { printf("error"); return0;} } if(x@@ !=@@ y) printf("error"); else { len@@ =strlen(a); for(i=0;i<len;i++) { if(a[i]==b[i]) { n++; } } p=@@ (double)@@ n/@@ len; if(p@@ >@@ m) { printf("yes"); } elseif(@@ p@@ <=@@ m) printf("no"); } return0; }  
c -1
h -1
0

intm,n,@@ a; int@@ str1@@ [@@ 10000],@@ str2@@ [@@ 10000]; void@@ dosomething@@ (int@@ str@@ [@@ 10000@@ ],int@@ q); main() { scanf("%d%d",&n,&m); for(inti=0;i<n;i++) scanf("%d",&@@ str1@@ [i]); for(inti=0;i<m;i++) scanf("%d",&@@ str2@@ [i]); dosomething@@ (@@ str1@@ ,n); dosomething@@ (@@ str2@@ ,@@ m); for(inti=0;i<n;i++) printf("%d",@@ str1@@ [i]); for(inti=0;i<m;i++) i@@ ==0@@ ?@@ printf("%d",@@ str2@@ [i])@@ :@@ printf("%d",@@ str2@@ [i]); } void@@ dosomething@@ (int@@ str@@ [@@ 10000@@ ],int@@ q) { for(inti=0;i<@@ q@@ -1;i++) for(intj=i+1@@ ;j<@@ q@@ ;j++) { if(str@@ [i]>@@ str@@ [j]) a=@@ str@@ [i],@@ str[i]=@@ str@@ [j],@@ str@@ [j]=@@ a; } }  
c -1
h -1
typedef@@ struct@@ Node { charID@@ [11]; intage; struct@@ Node@@ *next; }@@ node@@ ; node@@ *creat@@ (intn) { node@@ *@@ p1,*p2,*head; inti; p1=p2@@ =(@@ node@@ *)malloc(sizeof(@@ node@@ )); head=p1; for(i=0;i<n;i++) { p2=p1; scanf("%s%d",p1->@@ ID@@ ,&p1->@@ age); p1@@ =(@@ node@@ *)malloc(sizeof(@@ node@@ )); p2->next=p1; } p2->next=NULL; return(head); } voidsort@@ (int@@ x,@@ char*@@ a,@@ node@@ *head) { node@@ *@@ pre@@ =@@ head,*@@ p=@@ pre@@ ->next@@ ,*@@ s; s=(@@ node@@ *)malloc(sizeof(@@ node@@ )); s@@ ->age=@@ x; strcpy(@@ s@@ ->@@ ID,@@ a); s@@ ->next=NULL; while(p@@ !=NULL@@ &&@@ x@@ <=@@ p->age@@ ) { pre@@ =p; p=p->next; } pre@@ ->next=@@ s; s@@ ->next=p; } voidprint@@ (@@ node@@ *head) { node@@ *p; p=head; while(p!=NULL) { printf("%s\n",p->@@ ID); p=p->next; } } voidmain() { intn; node@@ *@@ head1@@ ,*@@ head2@@ ,*p; scanf("%d",&n); head1@@ =@@ creat@@ (n); head2@@ =(@@ node@@ *)malloc(sizeof(@@ node@@ )); strcpy(@@ head2@@ ->@@ ID@@ ,"@@ "); head2@@ ->next=NULL; p=@@ head1@@ ; while(p!=NULL) { if(p->@@ age@@ >=60) sort(@@ p->age@@ ,@@ p->@@ ID,@@ head2@@ ); p=p->next; } head2@@ =@@ head2@@ ->next; print(@@ head2@@ ); p=@@ head1@@ ; while(p!=NULL) { if(p->@@ age@@ <60) printf("%s\n",p->@@ ID); p=p->next; } }  
c -1
h -1
0

int@@ judge@@ (int@@ ); intmain() { intyear,month,day,@@ i,j,@@ total=0; cin>>year>>@@ month>>@@ day; for(i=1;i<=@@ month-1;i++) { if(i==1||i==3||i==5||i==7||i==8||i==@@ 10) total=total@@ +31; elseif(i==@@ 4||i==6||i==9||i==11) total=total+@@ 30; elseif(@@ judge@@ (year@@ )@@ ==0&&@@ i==@@ 2) total=total+@@ 28; elseif(@@ judge@@ (year@@ )@@ ==1&&@@ i==@@ 2) total=total+@@ 29; } total=total@@ +day; cout<<@@ total@@ <<endl; return0; } int@@ judge@@ (intx) { int@@ y=0; if(x@@ %4==0&&@@ x@@ %100!=0@@ ||@@ x%@@ 400==0) y=1; else y=0; return@@ y; }  
c -1
h -1
intmain() { inta[16]; inti,j,k; int@@ count; end3@@ :@@ ; for(i=0;;i++) { count=0; cin>>a[i]; if(a[i]==-1) {@@ goto@@ end1@@ ;} if(a[i]==0) { for(j=0;j<i;j++) { for(k=0;k<i;k++) { if(a[j]==2*@@ a[k]) { count=@@ count@@ +1; break; } } } cout<<count<<endl; goto@@ end3@@ ; } } end1@@ :@@ ; return0; }  
c -1
h -1
0

voidmain() { intm,n,@@ a[@@ 20000],@@ i,j; j=0; scanf("%d",&n); for(i=0;i<n;i++) scanf("%d",&a[i]); printf("%d",a[0]); m=1; if(n@@ >1) { do { for(i=@@ m-1@@ ;i>=0;i--) { if(a[m@@ ]==@@ a[i]) j=j+1; } if(j@@ ==0) printf("%d",@@ a[m@@ ]); j=0; m=m+1; }while(@@ m@@ <@@ n); } printf("\n"); }  
c -1
h -1
intmain() { int@@ point@@ [@@ M@@ ][@@ N]; inti,j; intn; inta,b,c,@@ d; intsum=0; scanf("%d\n",&n); for(i=0;i<n;i++) { for(j=0;j<n;j++) { scanf("%d",&@@ point@@ [i][j]); } } for(i=0;i<n;i++) { for(j=0;j<n;j++) { if(@@ point@@ [i][j]==0&&@@ point@@ [i+1][j]@@ ==0&&@@ point@@ [i+1]@@ [j+1@@ ]==255&&@@ point@@ [i]@@ [j+1@@ ]==0) { a=i; b=j; } if(@@ point@@ [i][j]==0&&@@ point@@ [i+1]@@ [j]==@@ 255@@ &&@@ point@@ [i+1]@@ [j+1@@ ]==255&&@@ point@@ [i]@@ [j+1@@ ]==255@@ ) { c=i; d=j; } sum=(@@ c-a-1)*(d-b-1); } } printf("%d\n",sum); return0; }  
c -1
h -1
0

intmain() { inta[@@ 17@@ ],@@ b=0,@@ i,j,@@ l,@@ m=0,@@ q; for(i=0;i<=@@ 16@@ ;i++) a[i]=0; for(q@@ =0;@@ ;q++) { for(i=0;i<16;i++) { scanf("%d",&a[i]); b=b@@ +1; if(a[i]==0) { break; } } if(a[0]==-1) { goto@@ lab@@ ; } for(j=0;j<@@ b;j++) { for(l@@ =j+1@@ ;@@ l<@@ b@@ ;l++) { if(a[j]==2*@@ a[l@@ ]@@ ||@@ a[l@@ ]==2*@@ a[j]) { m=m+1; } } } printf("%d\n",m); m=0; b=0; } lab@@ :@@ ; }  
c -1
h -1
intmain() { intn,i,j,@@ t,@@ x; cin>>n; inta[n]; for(i=0;i<n;i++) { cin>>x; a[i]=@@ x; } for(i=0;i<n;i++) { for(j=i+1;j<n;j++) { if(a[i]==a[j]) { for(t@@ =j@@ ;t@@ <n;@@ t++) { a[t@@ ]=a[@@ t@@ +1]; } n--; j--; } } } for(i=0;i<n-1;i++) { cout<<a[i]<<""; } cout<<a[@@ n-1@@ ]<<endl; return0; }  
c -1
h -1
0

intmain() { intn,k,@@ s,@@ x; scanf("%d%d",&n,&k); x=0; inta[1000]; for(inti=0;i<n;i++){ scanf("%d",&a[i]); } for(intj=0;j<@@ n-1@@ ;j++){ for(intl@@ =j+1@@ ;@@ l@@ <n;@@ l++){ s=@@ a[j]@@ +@@ a[l@@ ]; if(s@@ ==k){ x=x@@ +1;} } } if(x@@ ==0){ printf("no");} if(x@@ !=0){ printf("yes");} return0; }  
c -1
h -1
voidmain() { intn,@@ i=0,@@ k=0,@@ t=0; inta[@@ 90000@@ ]={0}; scanf("%d",&n); for(i=0;i<n;i++) scanf("%d",&a[i]); printf("%d",a[0]); for(k=1;k<@@ n;k++) {@@ t=0; for(i=0;i<k;i++) { if(a[k@@ ]==@@ a[i]) t=1; } if(t==0) printf("%d",@@ a[k]); } }  
c -1
h -1
0

intmain() { intn,i,j,@@ s=0,@@ e,@@ z=0; inta[100@@ ],@@ c[100],@@ x@@ [100]; char@@ b[100@@ ][@@ 10],@@ d@@ [100][10],@@ y@@ [100][10]; char@@ f@@ [100][10]; scanf("%d",&n); for(i=0;i<n;i++){ scanf("%s%d",@@ b[i]@@ ,&@@ a[i]); } for(i=0;i<n;i++){ if(a[i]@@ >=60){ c[@@ s@@ ]=a[i]; strcpy(@@ d[@@ s@@ ],@@ b[i]); s++; }else{ x[@@ z@@ ]=a[i]; strcpy(@@ y[@@ z@@ ],@@ b[i]); z@@ ++; } } for(i=0;i<@@ s@@ ;i++){ for(j=1;j<@@ s@@ -i;j++){ if(c@@ [j-1]@@ <@@ c@@ [j]){ e=@@ c[j]; c[j]=@@ c@@ [j-1]; c@@ [j-1]=@@ e; strcpy(@@ f@@ [j],@@ d@@ [j]); strcpy(@@ d@@ [j],@@ d@@ [j-1]); strcpy(@@ d@@ [j-1@@ ],@@ f@@ [j]); } } } for(i=0;i<@@ s@@ ;i++){ printf("%s\n",@@ d[i]); } for(i=0;i<@@ z@@ ;i++){ printf("%s\n",@@ y@@ [i]); } return0; }  
c -1
h -1
voidmain() { intn,@@ x=0; long@@ i,j,@@ a,b,c,d,@@ e,f,@@ s; scanf("%d",&n); a=@@ b=0; c=@@ d=@@ e=@@ 255@@ ; for(i=1;i<=@@ n*@@ n;i++) { scanf("%d",&@@ c); if(c@@ ==0) { a=i; break; } } for(j=i+1;j<=@@ n*@@ n;j++) { c=@@ d; d=@@ e; e=@@ f; scanf("%d",&@@ f); if((@@ f@@ !=0)&&(@@ c@@ ==0)&&(@@ d@@ ==0)&&(@@ e@@ ==0)) { b@@ =j@@ -1; } } int@@ o@@ ,@@ p,q,@@ r; o@@ =@@ a%@@ n; p=@@ (@@ -b@@ +1)@@ %@@ n+@@ n; q=@@ a/@@ n; r=@@ b@@ /n; s=(@@ n-@@ o@@ -@@ p@@ )*(@@ r@@ -@@ q@@ -1); printf("%d\n",s); }  
c -1
h -1
0

intmain() { double@@ a; inti,n,@@ m,@@ t=0,@@ k=0; char@@ x[@@ 501],@@ y@@ [501]; scanf("%lf\n",&@@ a); gets(@@ x); gets(@@ y); n=strlen(@@ x); m=strlen(@@ y); if(n@@ !=@@ m) printf("error\n"); else { for(i=0;i<n;i++) { if((x@@ [i]!='A'&&@@ x@@ [i]!='G'&&@@ x@@ [i]!='T'&&@@ x@@ [i]!='@@ C')||(@@ y@@ [i]!='A'&&@@ y@@ [i]!='G'&&@@ y@@ [i]!='T'&&@@ y@@ [i]!='@@ C')@@ ) { k=1; printf("error\n"); break; } elseif(x@@ [i]==@@ y@@ [i]) { t++; } } if(k@@ !=1) { if((@@ double)@@ ((@@ double)@@ t@@ /@@ (double)@@ n)@@ >@@ a) printf("yes\n"); else@@ printf("no\n"); } } return0; }  
c -1
h -1
intmain() { ints[@@ 26],@@ d@@ [26]; inti,j,k; intn; scanf("%d",&n); for(i=0;i<n;i++) { scanf("%d",@@ s@@ +i); d@@ [i]=0; } for(i=n-1;i@@ >-@@ 1@@ ;i--) { k=0; for(j=i+1;j<n;j++) { if(k@@ <@@ d@@ [j]&&@@ s[i]@@ >=@@ s[j]@@ )@@ k=@@ d@@ [j]; } k++; d[i]=@@ k; } k=0; for(i=0;i<n;i++) { if(d@@ [i]>@@ k)@@ k=@@ d@@ [i]@@ ;} printf("%d",k); return0; }  
c -1
h -1
0

intmain(){ inti,@@ y,@@ n,@@ s@@ ,j,@@ h,@@ a,@@ k,@@ b,@@ sz@@ [100][100],@@ jieguo@@ [100],@@ sum; scanf("%d",&n); for(i=0;i<n;i++){ scanf("%d%d",&a,&b); for(j=0;j<a@@ ;j++){ for(k=0;k<@@ b@@ ;k++){ scanf("%d",&sz@@ [j]@@ [k]); } } sum=0; for(h=0;h@@ <b@@ ;@@ h@@ ++){ sum=sum+@@ sz[0][@@ h@@ ]+@@ sz[a@@ -1@@ ][@@ h@@ ]; } for(s=0;s@@ <@@ a;@@ s@@ ++){ sum=sum+@@ sz[@@ s@@ ][0]+@@ sz[@@ s@@ ][b@@ -1]; } sum=sum-@@ sz[0][@@ 0]-@@ sz[0][@@ b@@ -1]@@ -@@ sz[a@@ -1@@ ][0]-@@ sz[a@@ -1@@ ][b@@ -1]; jieguo@@ [i]=@@ sum; } for(y=0;y@@ <n;@@ y@@ ++){ printf("%d\n",@@ jieguo@@ [y@@ ]); } return0; }  
c -1
h -1
intmain(){ inta[@@ 20001@@ ]={0}; intn; cin>>n; for(inti=1;i<=@@ n;i++){ cin>>a[i]; } for(inti=1;i<=@@ n;i++){ for(intj=1;j<=@@ i;j++){ if(i!=@@ 1@@ &&@@ a@@ [j-1@@ ]==@@ a[i])@@ a[i]=0; } } for(inti=1;i<=@@ n;i++){ if(i!=@@ 1@@ &&a[i]@@ !=0)@@ cout<<""<<a[i]; elseif(@@ i@@ ==1)@@ cout<<a[i]; } return0; }  
c -1
h -1
0

intmain(intargc,char*argv[]) { inta[@@ 1000],@@ n,k,@@ i,j,@@ x; scanf("%d%d",&n,&k); for(i=0;i<n;i++){ scanf("%d",&a[i]); } for(i=0;i<n;i++){ for(j=i+1;j<n;j++){ if(a[i]+a[j]==@@ k){ x++; } } } if(x@@ !=0){ printf("yes"); } else{ printf("no"); } return0; }  
c -1
h -1
intmain() { chars[256],@@ sub[256],@@ re@@ [256]; inti,j,k; gets(s); gets(sub); gets(@@ re); for(i=0;i<strlen(@@ s@@ );i++) { for(j=i;j<@@ strlen(@@ sub)@@ +i@@ ;j++) { if(s@@ [j]!=@@ sub@@ [j-i@@ ]@@ )break; if(j==@@ strlen(@@ sub)@@ +i@@ -1) { for(k=j@@ ;k@@ >=i@@ ;k--) s@@ [k]=@@ re@@ [k-i@@ ]; } } if(j==@@ strlen(@@ sub)@@ +i)@@ break; } printf("%s",s); return0; }  
c -1
h -1
0

int@@ compare@@ (constvoid*a,constvoid*@@ b) { return(@@ *(int*)@@ a@@ -@@ *(int*)@@ b); } intmain(){ intn,k; cin>>n>>k; inta[1000]; for(inti=0;i<n;i++) cin>>a[i]; qsort@@ (a,n,@@ sizeof(int),@@ compare@@ ); for(inti=0;i<n;i++) for(intj=@@ n-1@@ ;j>i;j--) { if(a[i]+a[j]==k) { cout<<"yes@@ "<<endl; return1; } else@@ if(a[i]+@@ a[j]@@ <@@ k) break; } cout<<"no@@ "<<endl; return0; }  
c -1
h -1
struct@@ p@@ { charid[10]; intage; }; void@@ bubble@@ (struct@@ p@@ a[100@@ ],int@@ n) { inti,j; struct@@ p@@ temp; for(i=0;i<n-1;i++) { for(j=0;j<n-1;j++) { if(a[j]@@ .@@ age@@ >=60) { if(a@@ [j+1@@ ].age@@ >@@ a[j].@@ age@@ ) { temp=a[j]; a[j]=a[j+1]; a[j+1]=temp; } } else { if(a@@ [j+1@@ ].age@@ >=60) { temp=a[j]; a[j]=a[j+1]; a[j+1]=temp; } } } } } intmain() { intn,i; struct@@ p@@ a[100]; scanf("%d",&n); for(i=0;i<n;i++) { scanf("%s%d",@@ a[i].@@ id,&@@ a[i].@@ age); } bubble@@ (a,@@ n); for(i=0;i<n;i++) { printf("%s\n",@@ a[i].@@ id); } return0; }  
c -1
h -1
0

int@@ countt@@ ; voidf@@ (intp@@ ,int@@ q) { for(int@@ m=@@ p@@ ;m@@ <=@@ sqrt(@@ q@@ );@@ m@@ ++) { if(q@@ %@@ m@@ ==0) {@@ countt@@ ++; f(@@ m,@@ q@@ /@@ m@@ );} } } intmain() { intn,@@ num,@@ i; cin>>n; for(i=0;i<n;i++) { cin>>num; countt@@ =0; for(int@@ k=@@ 2@@ ;k<=@@ sqrt(@@ num@@ )@@ ;k++) { if(num@@ %@@ k@@ ==0) { countt@@ ++; f(@@ k,@@ num@@ /@@ k); } } cout<<@@ countt@@ +1@@ <<endl@@ ;@@ ; } return0; }  
c -1
h -1
intmax(int@@ b[@@ 25@@ ]) {@@ inti,@@ t=@@ b[0]; for(i=0;i<@@ 25@@ ;i++){@@ if(b[i]>@@ t)@@ t=@@ b[i]@@ ;} return@@ t; } int@@ destroy@@ (inta[@@ 25@@ ],int@@ t) {@@ intb[@@ 25@@ ]={@@ 1@@ }; inti,j; for(j=@@ t@@ -1@@ ;j>=0;j--) {@@ for(i=j@@ +1;i<=@@ t@@ ;i++){@@ if(a[j]>=@@ a[i]@@ &&(@@ b[i]@@ +1)@@ >@@ b[j]@@ )@@ b[j]=@@ b[i]@@ +1;} } return@@ max(@@ b)@@ +1; } voidmain() {int@@ x,@@ i=0; inta[@@ 25@@ ]={0}; scanf("%d",&x); for(i=0;i<=@@ x@@ -1;i++)@@ scanf("%d",&a[i]); printf("%d",@@ destroy@@ (a,@@ x@@ -1)); }  
c -1
h -1
0

structbook { int@@ no; char@@ auth@@ [26]; }; voidmain() { structbook@@ *head,*@@ BK@@ ; intm,n,@@ k,i,j,@@ t,@@ q,@@ p,@@ max; inta[@@ 26]={0}; scanf("%d",&m); BK@@ =(struct@@ book@@ *)malloc(@@ m*@@ LEN@@ ); head=@@ BK@@ ; for(i=0;i<m;i++) { scanf("%d%s",&@@ BK@@ ->@@ no@@ ,&@@ BK@@ ->@@ auth@@ ); n=strlen(@@ BK@@ ->@@ auth@@ ); for(j=0;j<n;j++) { k=@@ BK@@ ->@@ auth@@ [j]@@ -'A'; a[k]=@@ a[k]@@ +1; } BK@@ =@@ BK@@ +1; } max=@@ a[0]; t=0; for(i=1;i<26;i++) { if(a[i]>max) { max=a[i]; t=i; } } q=@@ t@@ +'A'@@ ; printf("%c\n%d\n",@@ q,@@ max); BK@@ =head; for(i=0;i<m;i++) { p=0; n=strlen(@@ BK@@ ->@@ auth@@ ); for(j=0;j<n;j++) { if(@@ BK@@ ->@@ auth@@ [j]==@@ q) { p=1; break; } } if(p@@ ==1) { printf("%d\n",@@ BK@@ ->@@ no@@ ); } BK@@ =@@ BK@@ +1; } }  
c -1
h -1
intmain() { intn,m,@@ d,@@ i,j,@@ counter@@ =0,@@ month1@@ [@@ 12]={31,@@ 28,31,30,31,30,31,31,30,31,30,31@@ },@@ month2@@ [@@ 12]={31,29,31,30,31,30,31,31,30,31,30,31}; cin>>n>>@@ m>>d; if((@@ n@@ %4==0&&@@ n@@ %100!=0@@ )||(@@ n@@ %@@ 400==0)) { for(i=0;i<m-1;i++) counter@@ +=@@ month2@@ [i]; counter@@ +=@@ d; cout<<@@ counter@@ <<endl; } else { for(i=0;i<m-1;i++) counter@@ +=@@ month1@@ [i]; counter@@ +=@@ d; cout<<@@ counter@@ <<endl; } return0; }  
c -1
h -1
0

intmain() { int@@ sum,@@ a,b,@@ m,n,@@ k,@@ i,j; intnum@@ [100][100]; scanf("%d",&n); for(i=0;i<n;i++) { sum=0; for(a=0;a@@ <@@ 100@@ ;a@@ ++) { for(b=0;b@@ <@@ 100@@ ;@@ b++) { num[@@ a@@ ][b@@ ]=0; } } scanf("%d%d",&@@ m,&@@ k); if(m@@ ==1&&@@ k@@ ==1) { scanf("%d",&@@ j); printf("%d",@@ j); } elseif(m@@ ==1&&@@ k@@ !=1) { for(a=0;a@@ <k;@@ a++) { scanf("%d",&@@ num[@@ 0][@@ a@@ ]); sum=sum+@@ num[@@ 0][@@ a@@ ]; } printf("%d",sum); } elseif(m@@ !=1@@ &&k@@ ==1) { for(a=0;a@@ <m;@@ a++) { scanf("%d",&@@ num[@@ a@@ ][0]@@ ); sum=sum+@@ num[@@ a@@ ][0]; } printf("%d",sum); } else { for(a=0;a@@ <m;@@ a++) { for(b=0;b@@ <k;@@ b++) { scanf("%d",&@@ num[@@ a@@ ][b@@ ]); } } for(a=0;a@@ <k;@@ a++) { sum=sum+@@ num[@@ 0][@@ a@@ ]+@@ num[@@ m-1][@@ a@@ ]; } for(a@@ =1;@@ a@@ <@@ (m@@ -1)@@ ;a@@ ++) { sum=sum+@@ num[@@ a@@ ][0]+@@ num[@@ a@@ ][k@@ -1]; } printf("%d\n",sum); } } }  
c -1
h -1
intmain() { inta[@@ 17@@ ],@@ n,m,@@ i@@ =1,@@ t=0; cin>>@@ a[1]; while(a[i]@@ !=-1) { while(a[i]@@ >0) { i=i+1; cin>>a[i]; } for(m=1;m@@ <i@@ ;m++) for(n=@@ m@@ +1@@ ;n@@ <=i@@ ;n++) if(a[m@@ ]==2*@@ a[n@@ ]@@ ||@@ a[n@@ ]==2*@@ a[m@@ ]) t=t+1; cout<<t@@ <<endl; for(i=0;i<@@ 17@@ ;i++) a[i]=0; t=0; i=1; cin>>@@ a[1]; } return0; }  
c -1
h -1
0

intmain(){ inta[@@ 101@@ ],b[@@ 20000],@@ n,@@ i; for(i=0;i<@@ 101@@ ;i=i+1@@ ){ a[i]=0; } cin>>n; cin>>@@ b[0]; cout<<@@ b[0]; a[@@ b[0]@@ ]=1; for(i=1;i<n;i++){ cin>>b[i]; if(a[@@ b[i]@@ ]==0){ cout<<""<<@@ b[i]; a[@@ b[i]@@ ]=1; } } return0; }  
c -1
h -1
structstu { charnum[@@ 15]; intchinese; intmath; intsum; structstu*next; }; intn; structstu*@@ creat@@ (void) { structstu@@ *head,*@@ p,*@@ g@@ ,*@@ h; inti,j; p=(struct@@ stu@@ *)malloc(LEN); scanf("%s%d%d",@@ (*p).@@ num,&@@ (*p).@@ chinese@@ ,&@@ (*p).@@ math); (*p).@@ sum=(@@ (*p).@@ chinese+@@ (*p).@@ math); for(i=0;;i++) { if(i@@ ==0){@@ head=@@ p@@ ;@@ (*p).@@ next@@ =NULL@@ ;} elseif(@@ i@@ <@@ 4) { for(@@ h=@@ head@@ ,j@@ =0;j<@@ i;j++) { if((@@ *p@@ ).@@ sum>@@ (*@@ h@@ ).@@ sum@@ )break; else{@@ g=@@ h@@ ;@@ h@@ =(@@ *@@ h@@ ).@@ next@@ ;} } if(j@@ ==0){@@ (*p).@@ next@@ =@@ head;@@ head=@@ p@@ ;} elseif(@@ j==@@ i@@ ){@@ (*@@ g@@ ).@@ next@@ =p@@ ;@@ (*p).@@ next@@ =NULL@@ ;} else{@@ (*@@ g@@ ).@@ next@@ =p@@ ;@@ (*p).@@ next@@ =@@ h@@ ;} } else { for(@@ h=@@ head@@ ,j@@ =0;j<@@ 3;j++) { if((@@ *p@@ ).@@ sum>@@ (*@@ h@@ ).@@ sum@@ )break; else{@@ g=@@ h@@ ;@@ h@@ =(@@ *@@ h@@ ).@@ next@@ ;} } if(j@@ ==0){@@ (*p).@@ next@@ =@@ head;@@ head=@@ p@@ ;} else{@@ (*@@ g@@ ).@@ next@@ =p@@ ;@@ (*p).@@ next@@ =@@ h@@ ;} } if(i==@@ n-1@@ )break; p=(struct@@ stu@@ *)malloc(LEN); scanf("%s%d%d",@@ (*p).@@ num,&@@ (*p).@@ chinese@@ ,&@@ (*p).@@ math); (*p).@@ sum=(@@ (*p).@@ chinese+@@ (*p).@@ math); } return(head); } voidprint(struct@@ stu@@ *head) { structstu@@ *p; inti; for(p=head@@ ,i@@ =0;i<@@ 3@@ ;i++,@@ p=@@ (*p).@@ next@@ ) printf("%s%d\n",@@ (*p).@@ num,@@ (*p).@@ sum); } voidmain() { structstu*@@ head; scanf("%d",&n); head=creat(); print(head); }  
c -1
h -1
0

int@@ fun@@ (inti,int@@ j@@ ,int@@ count@@ ) { intk; for(k=i@@ ;k<=@@ sqrt(@@ j)@@ ;k++) if(j@@ %@@ k@@ ==0) { count++; count=@@ fun@@ (@@ k,@@ j@@ /@@ k,@@ count); } returncount; } intmain() {int@@ count; intk,@@ n,@@ i,j; scanf("%d",&k); for(j=0;j<k;j++) { scanf("%d",&n); count@@ =1; for(i=2@@ ;i<@@ sqrt(n@@ );i++) if(n%i==0) { count++; count=@@ fun@@ (i,@@ n@@ /i,@@ count); } printf("%d\n",@@ count); } return0; }  
c -1
h -1
intmain() { intn,k,@@ x@@ [1000]; inti,j,@@ sign@@ =0; scanf("%d%d",&n,&k); for(i=0;i<n;i++) { scanf("%d",&@@ x[i]); } for(i=0;i<n;i++) { for(j=i+1;j<n;j++) { if((x@@ [i]+@@ x[j]@@ )==@@ k) { sign@@ =1; break; } } } if(@@ sign@@ ==1) printf("yes"); else printf("no"); scanf("%d%d",&n,&k); return0; }  
c -1
h -1
0

main() { inti,j,k,@@ l1,l2,@@ l3@@ ,sum; chara[100@@ ],b[100],@@ c[100]; scanf("%s",a); scanf("%s",b); scanf("%s",c); sum=0; l1@@ =strlen(b); l2=strlen(@@ c); l3@@ =strlen(a); for(i=0;i<@@ l3@@ ;i++) { for(j=i,@@ k@@ =0@@ ;k<@@ l1@@ ;k++) { if(a[j]!=@@ b[k@@ ]) break; j++; } if(k==@@ l1@@ &&@@ sum@@ ==0) { for(j=0;@@ c@@ [j]!='\0';j++) printf("%c",@@ c@@ [j]); i@@ =i+@@ l1@@ -1; sum=sum+1; } else printf("%c",a[i]); } }  
c -1
h -1
intmain() { inta[16]; for(inti@@ =0;@@ ;) { cin>>a[i]; if(a[i]@@ !=0&&@@ a[i]@@ !=-1) { i++; continue; } elseif(@@ !@@ a[i]) { intn=0; for(intj=0;j<@@ i-1;j++) { for(intk@@ =j+1@@ ;k<@@ i;k++) { if(((@@ a[j]@@ /@@ a[k]==@@ 2)@@ &&@@ !@@ (@@ a[j]@@ %@@ a[k]@@ )@@ )||((@@ a[k]@@ /@@ a[j]==@@ 2)@@ &&@@ !@@ (@@ a[k]@@ %@@ a[j])@@ )) n++; } } cout<<n<<endl; i=0; continue; } else break; } return0; }  
c -1
h -1
0

voidf@@ (int*@@ p1,int*p2@@ ,int@@ m,intn) { do@@ {printf("%d\n",@@ *p2@@ );@@ p2@@ +=@@ n-1@@ ;} while((@@ p2@@ -@@ p1@@ +1)@@ %n@@ &&(@@ p2@@ -@@ p1@@ +1)@@ <=@@ m@@ *n); } intmain(intargc,char*argv[]) { intr,@@ l,@@ i,j@@ ,*@@ q; scanf("%d%d",&@@ r@@ ,&@@ l); int@@ *p@@ [l@@ +@@ r@@ -1]; inta[@@ r@@ ][l@@ ]; for(i=1;i<=@@ r;i++) for(j=1;j<=@@ l@@ ;j++) scanf("%d",&@@ a[i-1]@@ [j-1]); for(i=1;i<=@@ l@@ ;i++) p@@ [i-1]@@ =&@@ a[0]@@ [i-1]; for(i=@@ l@@ +1;i<=@@ l@@ +@@ r@@ -1;i++) p@@ [i-1]@@ =&@@ a[i@@ -l@@ ][l@@ -1]; q@@ =&@@ a[0][@@ 0]; for(i=1;i<=@@ r@@ +l@@ -1;i++) f(@@ q,@@ p@@ [i-1@@ ],@@ r,@@ l); return0; }  
c -1
h -1
intmain() { charstr@@ [300],@@ subStr@@ [@@ 10],@@ re@@ [10]; inti,j,@@ lenth@@ ,@@ m,n; int@@ flag=0; cin>>@@ str@@ >>@@ subStr@@ >>@@ re@@ ; lenth@@ =strlen(@@ str); n=strlen(@@ subStr@@ ); m=strlen(@@ re); for(i=0;i<@@ lenth@@ ;i++) { j=0; if(str[i]==@@ subStr@@ [j]) { for(j=0;j<n;j++) { if(str[i]==@@ subStr@@ [j]) i++; else break; } } if(j==@@ n) { flag=1; for(@@ ;j>0@@ ;i@@ --@@ ,j@@ --) { str@@ [i-1@@ ]=@@ re@@ [j-1]; } } if(flag==1) { break; } } cout<<str@@ ; return0; }  
c -1
h -1
0

structpatient { charID@@ [11]; intage; }@@ pa@@ [100]; intmain(intargc,char*argv[]) { intn,i; scanf("%d",&n); for(i=0;i<n;i++) { scanf("%s%d",@@ pa@@ [i].@@ ID,&@@ pa@@ [i].age); } structpatient@@ old@@ [100]; intcount=0; for(i=0;i<n;i++) { if(pa@@ [i].age>=60) { strcpy(old@@ [@@ count@@ ].ID,@@ pa@@ [i].ID); old@@ [@@ count@@ ].age=@@ pa@@ [i].age; count++; pa@@ [i].age@@ =0; } } intk,@@ j,@@ e; char@@ ex@@ [11]; for(k=1;k<@@ count@@ ;k++) { for(j=0;j<@@ count@@ -@@ k;j++) { if(old@@ [j].age@@ <@@ old@@ [j+1@@ ].age) { e=@@ old@@ [j+1].@@ age; old@@ [j+1@@ ].age=@@ old@@ [j].@@ age; old@@ [j].age@@ =@@ e; strcpy(@@ ex@@ ,@@ old@@ [j].@@ ID); strcpy(old@@ [j].@@ ID,@@ old@@ [j+1].@@ ID); strcpy(old@@ [j+1].@@ ID,@@ ex@@ ); } } } for(i=0;i<@@ count@@ ;i++) { printf("%s\n",old@@ [i].ID); } for(i=0;i<n;i++) { if(pa@@ [i].age@@ !=0) { printf("%s\n",@@ pa@@ [i].ID); } } return0; }  
c -1
h -1
intmain() { inti,j,k,@@ a[@@ 16],@@ num; while(@@ scanf("%d",&@@ a[0]@@ ),@@ a[0]@@ +1) { i=1; num=0; while(@@ scanf("%d",&a[i]@@ ),@@ a[i]) { i++; } for(j=0;j<i;j++) { for(k=j+1;k<@@ i;k++) { if(a[j]==2*@@ a[k]@@ ||@@ a[k@@ ]==2*@@ a[j]) { num++; } } } printf("%d\n",num); } return0; }  
c -1
h -1
0

intmain() { inti,j,@@ row,col,@@ shuzu@@ [100][100],@@ n=0; scanf("%d%d",&row,&col); for(i=0;i<row;i++){ for(j=0;j<col;j++){ scanf("%d",&@@ shuzu@@ [i][j]); } } if(row@@ ==@@ col@@ ){ for(i=0;i<@@ col@@ ;i++){ for(j=0;j<row@@ ;j++){ printf("%d\n",@@ shuzu@@ [j]@@ [i-j@@ ]); if((i@@ -j@@ )@@ ==0){ break; } } } for(i=1;i<@@ row;i++){ for(j=0;j<col;j++){ printf("%d\n",@@ shuzu@@ [i+j@@ ][col@@ -1-j@@ ]); if((i@@ +j+1)@@ ==@@ row@@ ){ break; } } } } if(row@@ >@@ col@@ ){ for(i=0;i<@@ col@@ ;i++){ for(j=0;j<row@@ ;j++){ printf("%d\n",@@ shuzu@@ [j]@@ [i-j@@ ]); if((i@@ -j@@ )@@ ==0){ break; } } } for(i=1;i<@@ row;i++){ for(j=0;j<col;j++){ printf("%d\n",@@ shuzu@@ [i+j@@ ][col@@ -1-j@@ ]); if((@@ col-1@@ -j@@ )@@ ==0){ break; } if((i@@ +j+1)@@ ==@@ row@@ ){ break; } } } } if(row@@ <col@@ ){ for(i=0;i<@@ col@@ ;i++){ for(j=0;j<row@@ ;j++){ printf("%d\n",@@ shuzu@@ [j]@@ [i-j@@ ]); if((i@@ -j@@ )@@ ==0){ break; } } } for(i=1;i<@@ row;i++){ for(j=0;j<col;j++){ printf("%d\n",@@ shuzu@@ [i+j@@ ][col@@ -1-j@@ ]); if((i@@ +j+1)@@ ==@@ row@@ ){ break; } } } } return0; }  
c -1
h -1
struct@@ ill { charid@@ [100]; intage; struct@@ ill@@ *next; }; voidmain() { struct@@ ill@@ *creat@@ (int@@ x); struct@@ ill@@ *p,*@@ head; char*@@ w@@ [1000]; char*@@ temp1@@ ; intn,i,j=0,@@ k,@@ temp; int*@@ q; scanf("%d",&n); p=@@ creat@@ (n); head=@@ p; q=@@ (int*)malloc(n*sizeof(int)); for(i=0;i<n;i++) { if((@@ *p@@ ).@@ age@@ >=60@@ ){@@ *(q@@ +j)@@ =(@@ *p@@ ).@@ age@@ ;@@ *(@@ w@@ +j)@@ =(@@ *p@@ ).@@ id@@ ;j++@@ ;} p=@@ (*p).@@ next; } k=j; loop@@ :@@ for(i=0;i<j@@ -1;i++) { if(*(@@ q@@ +i)@@ <*@@ (@@ q@@ +i@@ +1@@ )) { temp@@ =*(@@ q@@ +i@@ );@@ *(q@@ +i)@@ =*(@@ q@@ +i@@ +1@@ );@@ *(q@@ +i@@ +1)@@ =temp; temp1@@ =*(@@ w@@ +i@@ );@@ *(@@ w@@ +i)@@ =*(@@ w@@ +i@@ +1@@ );@@ *(@@ w@@ +i@@ +1)@@ =@@ temp1@@ ; } } for(i=0;i<j@@ -1;i++) { if(*(@@ q@@ +i)@@ <*@@ (@@ q@@ +i@@ +1)@@ )@@ goto@@ loop@@ ; } for(i=0;i<j;i++) {@@ printf("%s\n",@@ *(@@ w@@ +i)@@ );} p=head; for(i=0;i<n;i++) { if((@@ *p@@ ).@@ age@@ >=60@@ )@@ goto@@ lop@@ ; else {@@ printf("%s\n",@@ (*p).@@ id@@ );} lop@@ :@@ p=@@ (*p).@@ next; } } struct@@ ill@@ *creat@@ (intx) { struct@@ ill@@ *head,*p1,*p2; inti; p1=(struct@@ ill@@ *)malloc(sizeof(struct@@ ill@@ )); scanf("%s%d",@@ (*@@ p1@@ ).@@ id,&@@ (*@@ p1@@ ).@@ age); p2=p1; head=p1; for(i=0;i<x;i++) { p1=(struct@@ ill@@ *)malloc(sizeof(struct@@ ill@@ )); scanf("%s%d",@@ (*@@ p1@@ ).@@ id,&@@ (*@@ p1@@ ).@@ age); (*@@ p2@@ ).@@ next@@ =p1; p2=p1; } (*@@ p2@@ ).@@ next@@ =NULL; return(head); }  
c -1
h -1
0

intmain() { inta[1000]; inti,n,@@ j,@@ e,@@ l,@@ k; scanf("%d%d",&n,&k); for(i=0;i<n;i++){ scanf("%d",&a[i]); } e=@@ a[0]; for(i=1;i<=n;i++){ for(j=0;j<n@@ -i;j++){ if(a[j]>a[j+1@@ ]){ e=@@ a[j+1@@ ]; a[j+1]=@@ a[j]; a[j]=@@ e; } } } l=0; for(i=0;i<n;i++){ for(j=i;j<@@ n;j++){ if(a[i]+a[j]==@@ k){ l++; } } } if(l@@ ==0){ printf("no"); }else{ printf("yes"); } return0; }  
c -1
h -1
intmain() { int@@ ls@@ ,@@ lo@@ ,@@ lr@@ ,@@ i,j,k,@@ flag; charstr@@ [257],@@ org@@ [257],@@ rep@@ [257]; gets(str); gets(@@ org@@ ); gets(@@ rep); ls@@ =strlen(@@ str); lo@@ =strlen(@@ org@@ ); lr@@ =strlen(@@ rep); for(i=0;i<=@@ ls@@ -@@ lo@@ ;i++) { flag=1; for(j=0;j<@@ lo@@ ;j++) { if(str@@ [i+j]!=@@ org@@ [j]) { flag=0; break; } } if(flag==1) { for(k=0;k<i;k++) printf("%c",str@@ [k]); for(k=0;k<@@ lr@@ ;k++) printf("%c",@@ rep@@ [k]); for(k=i+@@ lo@@ ;k<@@ ls@@ ;k++) printf("%c",str@@ [k]); return0; } } puts(@@ str); return0; }  
c -1
h -1
0

intmain() { inty,m,d,@@ i,j,k,@@ sum=0,@@ a; scanf("%d%d%d",&y,&m,&d); for(i=1;i<=@@ (m@@ -1);i++) { if(i==1) sum=sum+@@ 31; if(i==@@ 3) sum=sum+@@ 31; if(i==@@ 5) sum=sum+@@ 31; if(i==@@ 7) sum=sum+@@ 31; if(i==@@ 8) sum=sum+@@ 31; if(i==@@ 10) sum=sum+@@ 31; if(i==@@ 12) sum=sum+@@ 31; if(i==@@ 4) sum=sum+@@ 30; if(i==@@ 6) sum=sum+@@ 30; if(i==@@ 9) sum=sum+@@ 30; if(i==@@ 11) sum=sum+@@ 30; if(i==@@ 2) { j=@@ y%@@ 4@@ ,@@ k=@@ y%@@ 400@@ ,@@ a=@@ y%@@ 100; if((@@ a@@ !=0@@ &&j@@ ==0)||(@@ k@@ ==0)) sum=sum+@@ 29; else sum=sum+@@ 28; } } sum=sum+@@ d; printf("%d\n",sum); getchar(); getchar(); }  
c -1
h -1
intmain(intargc,char*argv[]) { intn,a[@@ 99999@@ ],b[@@ 2@@ ],@@ i,k,@@ m,@@ s[@@ 99999@@ ],@@ first@@ =0,@@ x,y; scanf("%d",&n); for(i=0;i<n;i++) { scanf("%d",&a[i]); for(k=0;k<@@ 2@@ ;k++) { scanf("%d",&@@ b[k@@ ]); } s[i]=@@ b[0]@@ +@@ b[1@@ ]; } for(m=0;m<@@ 3@@ ;m++) {@@ first@@ =0; for(x=0;x@@ <n;@@ x++) { if(s[@@ x@@ ]>@@ first@@ ) {@@ first=@@ s[@@ x@@ ]; y=@@ x@@ +1; } } printf("%d%d\n",@@ y,@@ first@@ ); s[@@ y@@ -1]@@ =0; } return0; }  
c -1
h -1
0

intmain() { chara[501],b[501]; inti,k,@@ l=0; k=0; double@@ d; scanf("%lf",&@@ d); scanf("%s",a); scanf("%s",b); if(strlen(a)!=strlen(b@@ )) { k=1; printf("error"); } if(strlen(a)@@ ==@@ strlen(b@@ )) { for(i=0;i<@@ strlen(a)@@ ;i++) { if(a[i]==b[i]) l++; if((a[i]!='@@ A'&&a[i]!='T'&&a[i]!='G'&&a[i]!='@@ C')||(@@ b[i]!='A'&&b[i]!='T'&&b[i]!='G'&&b[i]!='@@ C')@@ ) { k=1; printf("error"); break; } } } if(k==0) { if((@@ 1.0*@@ l@@ /@@ strlen(a)@@ )@@ >=@@ d) printf("yes"); else printf("no"); } return0; }  
c -1
h -1
intmain() { intn,@@ num[@@ 15@@ ],i,j,@@ s,@@ t,@@ answer@@ ; while(cin>>@@ num@@ [0]) { if(num@@ [0]@@ ==-1) break; j=0; answer@@ =0; do { j++; cin>>@@ num@@ [j]; } while(@@ num[j]@@ !=0); for(s=0;s@@ <j@@ ;s++) { for(t=0;t@@ <j@@ ;t++) { if(@@ num[@@ t@@ ]==2*@@ num[@@ s@@ ]) answer@@ ++; } } cout<<@@ answer@@ <<endl; } return0; }  
c -1
h -1
0

intnum=0; void@@ asd@@ (inti,int@@ q) { intj; for(j=@@ q@@ ;j>@@ 1@@ ;j--) { if(i@@ %j@@ !=0) continue; if(i==@@ j) { num++; } else { q@@ =j; asd@@ (i@@ /@@ j,@@ q); } } } intmain() { intn,@@ o@@ ; cin>>n; for(@@ o@@ =0;@@ o@@ <n;@@ o@@ ++) { num=0; inta; cin>>a; asd@@ (a,@@ a); if(num@@ ==1) cout<<@@ 1@@ <<endl; else cout<<num<<endl; } }  
c -1
h -1
intmain(){ intnumber@@ (intn,int@@ low@@ ); intn,i,@@ data@@ ,@@ ans; scanf("%d",&n); for(i=1;i<=n;i++) { scanf("%d",&@@ data@@ ); ans=@@ number@@ (@@ data@@ ,@@ 2); printf("%d\n",@@ ans); } } intnumber@@ (intn,int@@ low@@ ) { intj,@@ ans; ans=0; for(j=@@ low@@ ;j@@ *@@ j@@ <=@@ n;j++) { if(n@@ %j==0) ans=@@ ans@@ +@@ number@@ (n@@ /j,j); } ans=@@ ans@@ +1; return@@ ans; }  
c -1
h -1
1


intmain() { inta[@@ 999@@ ];@@ char@@ r@@ [@@ 999@@ ][@@ 26@@ ];@@ intb[@@ 125@@ ]={0@@ }@@ ;@@ intn,i,j,@@ maxi@@ ,@@ s; scanf("%d",&n); for(i=0;i<=n-1;i++) { scanf("%d",&a[i]); scanf("%s",@@ r@@ [i]); s@@ =strlen(@@ r@@ [i])@@ -1; for(j=0;j<=@@ s@@ ;j++) { b[r@@ [i][j]@@ ]=@@ b[r@@ [i][j]@@ ]+1; } } maxi@@ =@@ 65@@ ; for(i=@@ 66@@ ;i<=@@ 90@@ ;i++) { if(b[i]>@@ b[@@ maxi@@ ])@@ maxi@@ =i; } printf("%c\n",@@ maxi@@ ); printf("%d\n",@@ b[@@ maxi@@ ]); for(i=0;i<=n-1;i++) { s@@ =strlen(@@ r@@ [i])@@ -1; for(j=0;j<=@@ s@@ ;j++) { if(r@@ [i][j]==@@ maxi@@ ) { printf("%d\n",a[i]); break; } } } return0; }  
c -1
h -1
voidmain() { int@@ sl@@ ,@@ al@@ ,i,j,@@ flag=0; chars[256],@@ a[@@ 256],b[@@ 256]; scanf("%s%s%s",@@ s,@@ a,b); sl@@ =strlen(s); al@@ =strlen(a); for(i=0;i<@@ sl@@ ;i++) { if(s[i]==@@ a[0]) { for(j=0;j<@@ al@@ ;j++) { if(s@@ [i+j]==@@ a[j])@@ flag=1; else@@ flag@@ =0;@@ continue; } if(flag==1) { for(j=0;j<@@ al@@ &&@@ s[i+j@@ ]==@@ a[j]@@ ;j++) s[i+j@@ ]=@@ b[j]@@ ;break; } } } printf("%s\n",@@ s); }  
c -1
h -1
0

struct@@ BING { charid[10]; int@@ old@@ ; }@@ bing@@ [100],@@ temp; intmain() { inti,j,k,n,@@ p,@@ max; scanf("%d",&n); for(i=0;i<n;i++){ scanf("%s%d",@@ bing@@ [i].id,&@@ bing@@ [i].@@ old@@ ); } for(p@@ =0;@@ ;p@@ ++@@ ){@@ max@@ =-1; for(i=0;i<n;i++){ if(@@ bing@@ [i].@@ old@@ >max@@ &&@@ bing@@ [i].@@ old@@ >=60@@ ){max=@@ bing@@ [i].@@ old@@ ;k@@ =i;} } if(max@@ >=60@@ ){@@ printf("%s\n",@@ bing@@ [k].@@ id@@ );@@ bing@@ [k].@@ old@@ =-@@ 1@@ ;} if(max@@ <60@@ )@@ break;} for(i=0;i<n;i++){ if(@@ bing@@ [i].@@ old@@ <60&&@@ bing@@ [i].@@ old@@ >=0@@ )@@ printf("%s\n",@@ bing@@ [i].id); } return0; }  
c -1
h -1
int@@ god@@ (int@@ num1@@ ,int@@ num2@@ ); intmain(void) { int@@ number,@@ ctr@@ ,i; int@@ n[@@ 20000@@ ],c[@@ 20000]; scanf("%d",&@@ number); for(i=0;i<=@@ 20000@@ ;i++) { c[i]@@ =0; } for(@@ ctr@@ =0;@@ ctr@@ <@@ number@@ ;@@ ctr@@ ++) { scanf("%d",&@@ n[@@ ctr@@ ]); } printf("%d",@@ n@@ [0]); for(@@ ctr@@ =1;@@ ctr@@ <@@ number@@ ;@@ ctr@@ ++) { for(i=0;i<@@ ctr@@ ;i++) { if(n@@ [i]==@@ n[@@ ctr@@ ]) { c[@@ ctr@@ ]++; } } if(@@ c[@@ ctr@@ ]==0) printf("%d",@@ n[@@ ctr@@ ]); } getchar(); return0; }  
c -1
h -1
0

voidmain() { struct@@ p { charnum[@@ 11]; intage; }; struct@@ p@@ c[@@ 101]; intn,i,@@ t=0,@@ s,@@ h,@@ l=0; inta[100],b[100],@@ d@@ [100]={0}; scanf("%d",&n); for(i=0;i<n;i++) scanf("%s%d",@@ c@@ [i].num,&@@ c@@ [i].age); for(i=0;i<n;i++) { if(c@@ [i].age>=60) { a[t@@ ]=@@ c@@ [i].age; c@@ [i].age@@ =0; b[t@@ ]=i; t++; } } if(t@@ >0) { leap@@ : s=@@ a[0]; h=0; for(i=0;i<t;i++) { if(a[i]>@@ s) { s=@@ a[i]; h@@ =i; } } printf("%s\n",@@ c[@@ b[@@ h@@ ]@@ ].@@ num); l++; a[h@@ ]=0; if(@@ l<@@ t) goto@@ leap@@ ; } for(i=0;i<n;i++) { if(c@@ [i].age@@ !=0) printf("%s\n",@@ c@@ [i].num); } }  
c -1
h -1
intmain() { intn,@@ mian@@ [@@ 105@@ ][@@ 105@@ ]; inti,j,@@ i1@@ ,@@ j1@@ ,@@ i2@@ ,@@ j2@@ ; cin>>n; for(i=0;i<n;i++) { for(j=0;j<n;j++) { cin>>@@ mian@@ [i][j]; } } for(i=0;i<n;i++) { for(j=0;j<n;j++) { if(@@ mian@@ [i][j]==0&&@@ mian@@ [i+1][j]@@ ==0&&@@ mian@@ [i]@@ [j+1@@ ]==0) { i1@@ =i; j1@@ =j; } elseif(@@ mian@@ [i][j]==0&&@@ mian@@ [i-1][j]@@ ==0&&@@ mian@@ [i]@@ [j-1]@@ ==0) { i2@@ =i; j2@@ =j; } } } cout<<(@@ i2@@ -@@ i1@@ -1)*(@@ j2@@ -@@ j1@@ -1); return0; }  
c -1
h -1
0

int@@ fen@@ (intx,int@@ y); intmain(){ intn,i,@@ m[@@ 500]; scanf("%d",&n); for(i=0;i<n;i++) { scanf("%d",&@@ m[i]); printf("%d\n",@@ fen@@ (m@@ [i],@@ 2)); } return0; } int@@ fen@@ (intx,int@@ y){ intj,@@ k; int@@ result=1; if(x@@ <@@ y) return0; for(j=@@ y@@ ;j<@@ x;j++) { if(x@@ %j==0) result+=@@ fen@@ (x@@ /j,j); } returnresult; }  
c -1
h -1
intmain(){ intb,@@ c,@@ f@@ =0,@@ e=0,@@ i; doublea,@@ h; char@@ d[@@ 3@@ ][@@ 502@@ ]; scanf("%lf",&a); for(i=0;i<2@@ ;i++){ scanf("%s",@@ d[i]); } b=strlen(@@ d@@ [0]); c=strlen(@@ d@@ [1]); if(b==@@ c){ for(@@ f@@ =0;@@ f@@ <b@@ ;@@ f@@ ++){ if(@@ d[@@ 0][@@ f@@ ]==@@ d@@ [1@@ ][@@ f@@ ]){ e++; } } for(@@ f@@ =0;@@ f@@ <b@@ ;@@ f@@ ++){ if((@@ d[@@ 0][@@ f@@ ]!='@@ A'&&@@ d[@@ 0][@@ f@@ ]!='@@ G'&&@@ d[@@ 0][@@ f@@ ]!='@@ C'&&@@ d[@@ 0][@@ f@@ ]!='@@ T')||(@@ d@@ [1@@ ][@@ f@@ ]!='@@ A'&&@@ d@@ [1@@ ][@@ f@@ ]!='@@ G'&&@@ d@@ [1@@ ][@@ f@@ ]!='@@ C'&&@@ d@@ [1@@ ][@@ f@@ ]!='@@ T')@@ ){ break; } } if(f@@ ==@@ b){ h=@@ e@@ *1.0/@@ b; if(h@@ >@@ a){ printf("yes"); } else{ printf("no"); } } else{ printf("error"); } } else{ printf("error"); } return0; }  
c -1
h -1
0

struct@@ a { intnumber; char@@ authors@@ [26]; struct@@ a@@ *next; }; intn,@@ max=0; intmain() { struct@@ a*@@ create@@ (void@@ ); char@@ sum@@ (struct@@ a*@@ ); void@@ pr@@ (char@@ x,@@ struct@@ a@@ *head@@ ); struct@@ a*@@ head; char@@ x; scanf("%d",&n); head=@@ create@@ (); x=@@ sum@@ (head); pr@@ (x,@@ head); } struct@@ a*@@ create@@ (void) { struct@@ a@@ *head,*p1,*p2; inti; p1=@@ len@@ ;@@ head@@ =p1;@@ p2=p1; for(i=0;i<n;i++) { scanf("%d%s",&p1->@@ number,@@ p1->@@ authors@@ ); if(i!=@@ n-1) {@@ p1=@@ len@@ ;@@ p2->next@@ =p1;@@ p2=@@ p2->next@@ ;} else@@ p1->next=@@ null@@ ; } returnhead; } char@@ sum@@ (struct@@ a@@ *head) { struct@@ a@@ *p; p=head; inta[@@ 26]={0},@@ i,j; char@@ zd@@ ; for(i=0;i<n;i++) { for(j=0;@@ *(@@ p->@@ authors@@ +j)@@ !='\0';j++) a[@@ *(@@ p->@@ authors@@ +j)@@ -65]++; p=p->next; } for(i=0;i<26;i++) if(a[i]@@ >max){max=@@ a[i];@@ zd@@ =i;} printf("%c@@ \n@@ %d",@@ zd@@ +65@@ ,a[@@ zd@@ ]); return(@@ zd@@ +65); } void@@ pr@@ (char@@ x,@@ struct@@ a@@ *head) { inti,j,@@ num; struct@@ a@@ *p; p=head; for(i=0;i<n;i++) { num=0; for(j=0;@@ *(@@ p->@@ authors@@ +j)@@ !='\0';j++) if(*(@@ p->@@ authors@@ +j)@@ ==@@ x)@@ num@@ =1; if(num@@ )@@ printf("\n%d",@@ p->@@ number); p=p->next; } }  
c -1
h -1
intmain() { inta[20000]; intn,i,j,@@ s,@@ k; scanf("%d",&n); for(i=0;i<n;i++) { scanf("%d",&a[i]); } for(i=0;i<n;i++) { s=@@ a[i]; for(k@@ =i+1@@ ;k<@@ n;k++) { if(a[k@@ ]==@@ s) { for(j=k@@ ;j<n;j++) { a[j]=a[j+1]; } n--; k--; } } } for(i=0;i<n;i++) { if(i@@ >0) printf(""); printf("%d",a[i]); } return0; }  
c -1
h -1
0

intmain() { intn,m,@@ a[@@ 1500@@ ][@@ 1500@@ ],b[@@ 10000@@ ],i,j,@@ sum,@@ t=0; cin>>n>>m; for(i=1;i<=@@ 1499@@ ;i++)@@ for(j=1;j<=@@ 1499@@ ;j++)@@ a[i][j]@@ =-@@ 198@@ ; for(i=1;i<=n;i++) for(j=1;j<=m;j++) { cin>>a[i][j]; } for(@@ sum=@@ 2;@@ sum<=@@ (@@ n+@@ m@@ );@@ sum@@ ++) { for(i=1;i<@@ sum@@ ;i++) { if(a[i]@@ [@@ sum@@ -i@@ ]!=@@ -@@ 198@@ ) cout<<a[i]@@ [@@ sum@@ -i@@ ]<<endl; } } return0; }  
c -1
h -1
voidmain() { inti,@@ m,n,@@ sum,@@ a[@@ 10001@@ ]@@ ,*p; scanf("%d",&@@ i); while(i@@ --){ scanf("%d%d",&m,&n); for(p=@@ a@@ ;p<@@ a+@@ m*@@ n;@@ p++) scanf("%d",@@ p); sum=0; for(p=@@ a@@ ;p<@@ a+@@ n;@@ p++) sum+=@@ *p; if(m@@ !=1) for(p=@@ a+@@ (m@@ -1)*@@ n;@@ p@@ <@@ a+@@ m*@@ n;@@ p++) sum+=@@ *p; for(p=@@ a+@@ n;@@ p@@ <@@ a+@@ (m@@ -1)*@@ n;@@ p@@ +=@@ n) sum+=@@ *p; for(p=@@ a+@@ n@@ *2@@ -1@@ ;p<@@ a+@@ m*@@ n-1@@ ;p@@ +=@@ n) sum+=@@ *p; printf("%d\n",sum); } }  
c -1
h -1
0

intmain(){ doublen; chara[@@ MAX@@ +1]; charb[@@ MAX@@ +1]; int@@ p,q,@@ i,j,@@ x=0,@@ y=0,@@ l=0; scanf("%lf",&n); scanf("%s",a); scanf("%s",b); p@@ =strlen(a); q@@ =strlen(b); if(p@@ !=@@ q@@ ){ printf("error"); } if(p==@@ q@@ ){ for(i=0;a[i]@@ ;i++){ if(a[i]!='A'&&a[i]!='T'&&a[i]!='C'&&a[i]!='@@ G'){ printf("error"); x++; break; } } for(j=0;@@ b[j]@@ ;j++){ if(b[j]@@ !='@@ A'&&@@ b[j]@@ !='@@ T'&&@@ b[j]@@ !='@@ C'&&@@ b[j]@@ !='@@ G'&&@@ x@@ ==0){ printf("error"); y++; break; } } } if(p==@@ q@@ &&@@ x@@ ==0&&@@ y@@ ==0){ for(i=0;i<p@@ ;i++){ if(a[i]==b[i]){ l++; } } if(l@@ *1.0/@@ p@@ >n){ printf("yes"); }else{ printf("no"); } } return0; }  
c -1
h -1
intmain() { intk,i,@@ a[@@ 101][101]; cin>>k; for(i=1;i<=k;i++) { intm,n,@@ j1@@ ,@@ j2@@ ,@@ sum=0; cin>>m>>n; for(@@ j1@@ =1;@@ j1@@ <=@@ m;@@ j1@@ ++) { for(@@ j2@@ =1;@@ j2@@ <=n;@@ j2@@ ++) { cin>>@@ *(*(a@@ +@@ j1@@ )+@@ j2@@ ); } } for(@@ j2@@ =1;@@ j2@@ <=n;@@ j2@@ ++) sum=sum+*(@@ *(a@@ +1)@@ +@@ j2@@ )@@ +*(@@ *(a@@ +m@@ )+@@ j2@@ ); for(@@ j1@@ =@@ 2;@@ j1@@ <=@@ m-1@@ ;@@ j1@@ ++) sum=sum+*(@@ *(a+@@ j1@@ )@@ +1)@@ +*(@@ *(a+@@ j1@@ )+@@ n); cout<<sum<<endl; } return0; }  
c -1
h -1
0

voidmain() { inta,b; scanf("%d%d",&a,&b); inti,j; int@@ s1@@ [1000],@@ s2@@ [1000]; for(i=1;i<=@@ a;i++) scanf("%d",&@@ s1[i]); for(i=1;i<=@@ b;i++) scanf("%d",&@@ s2@@ [i]); for(i=1;i<=@@ a@@ -1;i++) for(j=1;j<=@@ a@@ -i;j++) if(s1@@ [j]>@@ s1@@ [j+1]) { intt; t=@@ s1@@ [j]; s1@@ [j]=@@ s1@@ [j+1]; s1@@ [j+1]=t; } for(i=1;i<=@@ b@@ -1;i++) for(j=1;j<=@@ b@@ -i;j++) if(s2@@ [j]>@@ s2@@ [j+1]) { intt; t=@@ s2@@ [j]; s2@@ [j]=@@ s2@@ [j+1]; s2@@ [j+1]=t; } for(i=1;i<=@@ a;i++) printf("%d",@@ s1[i]); for(i=1;i<=@@ b@@ -1;i++) printf("%d",@@ s2@@ [i]); printf("%d",@@ s2@@ [b@@ ]); }  
c -1
h -1
voidmain() { structpatient { charid[10]; intage; }@@ pa@@ [100]={0},@@ old@@ [100]={0},@@ young@@ [100]={0},@@ t; inti,j,@@ k=0,@@ l=0,@@ n; scanf("%d",&n); for(i=0;i<n;i++) { scanf("%s%d",@@ pa@@ [i].id,&@@ pa@@ [i].age); } for(i=0;i<n;i++) { if(pa@@ [i].age>=60) { old@@ [k]=@@ pa@@ [i]; k++; } else { young@@ [l@@ ]=@@ pa@@ [i]; l++; } } for(i=0;i<n-1;i++) {@@ for(j=0;j<n-1-i;j++) { if(old@@ [j].age@@ <@@ old@@ [j+1@@ ].age) { t=@@ old@@ [j]; old@@ [j]=@@ old@@ [j+1]; old@@ [j+1]=t; } } } for(i=0;i<k;i++) { printf("%s\n",old@@ [i].id); } for(i=0;i<l;i++) { printf("%s\n",@@ young@@ [i].id); } }  
c -1
h -1
0

intsum=0; intmain() {@@ void@@ shu@@ (inta,int@@ b); intn=0,@@ i=0,@@ a=0,@@ c=0,@@ j=0; scanf("%d",&n); for(i=1;i<=n;i++) {@@ scanf("%d",&a); for(j=2;j<=@@ sqrt(@@ (double)@@ a)@@ ;j++) {@@ if(a%@@ j@@ ==0) {@@ sum=sum+1; shu@@ (@@ j,@@ a/@@ j); } } printf("%d",@@ sum@@ +1); if(i<@@ n) printf("\n"); sum=0; } return(0); } void@@ shu@@ (inta,intb) {int@@ i=0; for(i=a@@ ;i<=sqrt(@@ (double)@@ b@@ );i++) {@@ if(b@@ %i==0) {@@ sum=sum+1; shu@@ (i,@@ b@@ /i); } } }  
c -1
h -1
intmain() { inta,@@ i,j,k,@@ tot@@ ,@@ s; a=0; intnum[@@ 20@@ ]={0}; while(@@ a@@ !=-1) { j=1; tot@@ =1; s=0; for(i=1;i<=@@ 20@@ ;i++) num@@ [i]=0; i=1; cin>>a; while(@@ a@@ !=-1) { if(a@@ !=0) { num@@ [i@@ ++]=@@ a; tot@@ ++; cin>>a; } elsebreak; } if(a@@ !=-1) { for(j=1;j<=@@ tot@@ ;j++) for(k=j+1@@ ;k<=@@ tot@@ ;k++) if((@@ num@@ [k]==2*@@ num[j]@@ )||(@@ 2*@@ num@@ [k]==@@ num[j]@@ )) s++; cout<<s<<endl; }@@ }@@ cin>>@@ s; return0; }  
c -1
h -1
0

intmain() { inti,j,k,l,@@ n,m,@@ row,col; inta[@@ 200][@@ 200@@ ]={0}; scanf("%d%d",&row,&col); for(i=1;i<=@@ row;i++) for(j=1;j<=col;j++) scanf("%d",&a[i][j]); for(i=1;i<@@ row+col@@ +1;i++) for(j=1;j<=@@ i;j++) if(a[j]@@ [i-j@@ ]!=0) printf("%d\n",@@ a[j][i-j@@ ]); return0; }  
c -1
h -1
intmain() { inti,j,n,@@ a[@@ 20000],b[@@ 20000]; scanf("%d",&n); scanf("%d",&@@ a[1]); printf("%d",@@ a[1]); for(i=2;i<=@@ n;++@@ i) { scanf("%d",&a[i]); for(j=1;j<=@@ i@@ -1;@@ ++@@ j) { b@@ [i-1]@@ =0; b[j]=@@ a[j]@@ -@@ a[i]; if(b[j]@@ ==0)break; } if(b@@ [i-1]@@ !=0)@@ printf("%d",a[i]); } return0; }  
c -1
h -1
0

intsum=0; voidf@@ (intx,int@@ i) { double@@ m=@@ sqrt(@@ x); if(i<@@ m) { if(x%i==0) { sum++; f(@@ x@@ /i,i); } f(@@ x,@@ i@@ +1); } if(@@ fabs@@ (i@@ -@@ m)@@ <0@@ .@@ 00000001@@ ) sum++; } intmain() { int@@ x,@@ i,@@ n; scanf("%d",&n); for(i=0;i<n;i++) {@@ scanf("%d",&x); sum=0; f(@@ x,@@ 2); printf("%d\n",sum@@ +1); } return0; }  
c -1
h -1
voidmain() { int*@@ a[@@ 101][@@ 101],@@ lie@@ ,@@ hang@@ ,i,j,@@ h,@@ l; scanf("%d%d",&@@ hang@@ ,&@@ lie@@ ); for(i=1;i<=@@ hang@@ ;i++) for(j=1;j<=@@ lie@@ ;j++) a[i]@@ [j]=@@ (int@@ *)malloc(sizeof@@ (int@@ )); for(i=1;i<=@@ hang@@ ;i++) for(j=1;j<=@@ lie@@ ;j++) scanf("%d",@@ a[i]@@ [j]); for(j=1;j<=@@ lie@@ ;j++) { h@@ =1; l@@ =j; while(@@ l@@ >=1@@ &&@@ h@@ <=@@ hang@@ ) { printf("%d\n",@@ *@@ a[h@@ ][l@@ ]); h@@ ++; l@@ --; } } for(i=2;i<=@@ hang@@ ;i++) { l=@@ lie@@ ; h@@ =i; while(@@ l@@ >=1@@ &&@@ h@@ <=@@ hang@@ ) { printf("%d\n",@@ *@@ a[h@@ ][l@@ ]); h@@ ++; l@@ --; } } }  
c -1
h -1
0

intmain(){ while(1){ inta[16@@ ];@@ inti=0,@@ n=0,@@ k; while(1){ scanf("%d",&a[i]); if(a[i]==0)break; if(a[i]==@@ -1)@@ return0; i@@ ++;} for(i=0;a[i]@@ !=0;i++) for(k=0;@@ a[k]@@ !=0@@ ;k++) { if(a[k@@ ]==2*@@ a[i])@@ n++; } printf("%d\n",n@@ );}}  
c -1
h -1
voidmain() { inti,j,@@ k=0,@@ l,@@ m,@@ t,@@ a[100][100],@@ c[100]; for(i=1;;i++) { j=1; scanf("%d",&a[i][j]); if(a[i][j]==@@ -1)break; for(j=2@@ ;j<@@ 100@@ ;j++) { scanf("%d",&a[i][j]); if(a[i][j]@@ ==0)break; for(l@@ =j@@ ;@@ l@@ >=1@@ ;@@ l@@ --) { if(a[i][j]==@@ 2*@@ a[i]@@ [l@@ ]@@ ||@@ 2*@@ a[i]@@ [j]==@@ a[i]@@ [l@@ ])@@ c[i]@@ ++; elsecontinue; } } k++; } for(m=1;m@@ <=@@ k@@ ;m++) { printf("%d\n",@@ c[m@@ ]); } }  
c -1
h -1
1


structbook { intnum; charwriter@@ [27]; structbook*next; }@@ *@@ head; int@@ times@@ [26]; void@@ create@@ (intm) { structbook*@@ p1,*p2; inti; for(i=0;i<=@@ m-1;i++) { p1=(structbook@@ *)malloc(sizeof(structbook)); scanf("%d",&@@ p1->num); scanf("%s",@@ p1->@@ writer); if(!@@ i)@@ head=p1; elsep2->next=p1; p2=p1; } p2->next=NULL; } intcount@@ () { intmax@@ ,@@ l,@@ i; char@@ temp@@ [27]; structbook*@@ p1; for(i=0;i<=@@ 25@@ ;i++)@@ times@@ [i]=0; p1=head; while(p1!=NULL) { l=strlen(@@ p1->@@ writer); strcpy(@@ temp,@@ p1->@@ writer); for(i=0;i<=@@ l@@ -1;i++) times@@ [@@ temp@@ [i]@@ -65]++; p1=p1->next; } max=0; for(i=0;i<=25;i++) if(@@ times@@ [i]>@@ times@@ [max@@ ])@@ max=i; return(@@ max); } voidprint@@ (int@@ max) { structbook*@@ p1; int@@ abc@@ [@@ 999@@ ],@@ total@@ ,@@ l,@@ i; char@@ temp@@ [27]; total=0; printf("%c\n",@@ max@@ +65); p1=head; while(p1!=NULL) { strcpy(@@ temp,@@ p1->@@ writer); l=strlen(@@ temp); for(i=0;i<=@@ l@@ -1;i++) if(max@@ +65@@ ==@@ temp@@ [i]@@ )break; if(i<@@ l) { abc@@ [@@ total@@ ]=@@ p1->@@ num; total@@ ++; } p1=p1->next; } printf("%d\n",@@ total); for(i=0;i<=@@ total@@ -1;i++) { printf("%d\n",@@ abc@@ [i]); } } voidmain() { intmax@@ ,@@ m; scanf("%d",&m); create@@ (m); max=count@@ (); print(@@ max); }  
c -1
h -1
structstudent { charnum[10]; intyuwen; intshuxue; intsum; }; intmain() { intn,i; scanf("%d",&n); structstudent@@ a[@@ 100000]; structstudent@@ s[@@ 3@@ ]; structstudent@@ k; for(i=0;i<n;i++) { scanf("%s%d%d",@@ a[i].@@ num,&@@ a[i].@@ yuwen@@ ,&a[i].@@ shuxue); a[i].@@ sum=@@ a[i].@@ yuwen@@ +a[i].@@ shuxue; } s[@@ 0]=@@ a[0]; s@@ [1]=@@ a[0]; s[1].@@ sum=0; s[2@@ ]=@@ a[0]; s[2].@@ sum=0; for(i=1;i<n;i++) { if(a[i].@@ sum>@@ s[2].@@ sum@@ &&@@ a[i].@@ sum<=@@ s[1].@@ sum@@ ){@@ s[2@@ ]=@@ a[i];} if(a[i].@@ sum>@@ s[1].@@ sum@@ &&@@ a[i].@@ sum<=@@ s@@ [0].@@ sum@@ ){@@ s[2@@ ]=@@ s[1]@@ ;s@@ [1]=@@ a[i];} if(a[i].@@ sum>@@ s@@ [0].@@ sum@@ ){@@ s[2@@ ]=@@ s[1]@@ ;s@@ [1]=@@ s[0]@@ ;@@ s[@@ 0]=@@ a[i];} } for(i=0;i<3;i++) { printf("%s%d\n",@@ s[i].@@ num,@@ s[i].@@ sum); } getchar();@@ getchar(); }  
c -1
h -1
0

structbook { intnum; charname@@ [27]; structbook*next; }; intm; structbook*@@ head; structbook*@@ setup@@ () {int@@ t=0; structbook@@ *head,*p1,*p2; head@@ =p1@@ =p2@@ =(struct@@ book@@ *)malloc(sizeof(structbook)); scanf("%d%s",&p1->num,p1->name); while(t@@ <m@@ -1) {@@ t++; p2->next=p1; p2=p1; p1=(structbook@@ *)malloc(sizeof(structbook)); scanf("%d%s",&p1->num,p1->name); } p2->next=p1; p1->next=NULL; return(head); } intk=0,@@ max=0; void@@ found@@ (struct@@ book@@ *p@@ ) {@@ inti,j; p=head; int*@@ pi@@ ; pi@@ =@@ (int*)malloc(sizeof(int)@@ *@@ 26@@ ); for(i=0;i<26@@ ;i++)@@ *(@@ pi@@ +i)@@ =0; for(i=0;i<m;i++) { for(j=0;@@ p->@@ name@@ [j]!='\0';j++) { (*(@@ pi@@ +@@ (p->@@ name@@ [j]@@ -'@@ A')@@ ))@@ ++; } p=p->next; } for(j=0;j<26;j++) { if(*(@@ pi@@ +j)@@ >max){ max@@ =*(@@ pi@@ +j); k=j; } } } intmain() {@@ inti,j; scanf("%d",&m); structbook@@ *p; head=@@ p=@@ setup@@ (); found@@ (p); printf("%c\n%d\n",@@ (k@@ +'@@ A')@@ ,max); p=head; for(i=0;i<m;i++) {@@ for(j=0;@@ p->@@ name@@ [j]!='\0';j++) if(p->@@ name[j]==@@ k@@ +'A'@@ ){ printf("%d\n",p->num); break; } p=p->next; } }  
c -1
h -1
voidmain() { struct@@ date { int@@ year; int@@ month@@ ; int@@ day; int@@ days; }@@ date1@@ ; scanf("%d%d%d",&@@ date1@@ .@@ year@@ ,&@@ date1@@ .@@ month,&@@ date1@@ .@@ day); intb[@@ 12]={31,28,31,30,31,30,31,31,30,31,30,31}; date1@@ .@@ days@@ =0; inti; if(@@ date1@@ .@@ month@@ >1) { for(i=0;i<=@@ date1@@ .@@ month@@ -2;i++) { date1@@ .@@ days=@@ date1@@ .@@ days@@ +@@ b[i]; } date1@@ .@@ days=@@ date1@@ .@@ days@@ +@@ date1@@ .@@ day; } else { date1@@ .@@ days=@@ date1@@ .@@ day; } printf("%d",@@ date1@@ .@@ days@@ ); }  
c -1
h -1
0

intmain() { inta[@@ 101][@@ 101],@@ r,@@ c,@@ r1@@ ,@@ c1@@ ; inti,@@ l@@ ,j,@@ k,@@ m,n; cin>>@@ r@@ >>@@ c; for(m=0;m@@ <=@@ 100@@ ;m++) { for(n=0;n@@ <=@@ 100@@ ;n++) { a[m@@ ][n@@ ]@@ =-1; } } for(i=1;i<=@@ r;i++) { for(j=1;j<=@@ c;j++) { cin>>a[i][j]; } } for(k=1;k<=@@ c@@ ;k++) { c1@@ =k; r1@@ =1; while(@@ a[@@ r1@@ ][@@ c1@@ ]@@ >0) { cout<<a[@@ r1@@ ++@@ ][@@ c1@@ --@@ ]<<endl; } } for(l@@ =@@ 2;@@ l@@ <=@@ r@@ ;l++) { c1@@ =@@ c; r1@@ =@@ l; while(@@ a[@@ r1@@ ][@@ c1@@ ]@@ >0) { cout<<a[@@ r1@@ ++@@ ][@@ c1@@ --@@ ]<<endl; } } return0; }  
c -1
h -1
intn,m; int@@ num1@@ [100],@@ num2@@ [100],@@ num3@@ [1000]; voidread@@ (){ cin>>n>>m; for(inti=1;i<=@@ n;i++){ cin>>@@ num1@@ [i]; } for(inti=1;i<=@@ m;i++){ cin>>@@ num2@@ [i]; } } voidsort@@ (int@@ num1@@ [],int@@ num2@@ [@@ ]){ for(inti=1;i<=@@ n-1;i++){ for(intj=1;j<=@@ n@@ -i;j++){ if(@@ num1@@ [j]>@@ num1@@ [j+1@@ ])@@ swap(@@ num1@@ [j],@@ num1@@ [j+1]); } } for(inti=1;i<=@@ m-1@@ ;i++){ for(intj=1;j<=@@ m@@ -i;j++){ if(@@ num2@@ [j]>@@ num2@@ [j+1@@ ])@@ swap(@@ num2@@ [j],@@ num2@@ [j+1]); } } } voidhebing@@ (int@@ num1@@ [],int@@ num2@@ [],int@@ num3@@ [@@ ]){ for(inti=1;i<=@@ n+@@ m;i++){ if(i@@ <=@@ n)@@ num3@@ [i]=@@ num1@@ [i]; else@@ num3@@ [i]=@@ num2@@ [i-@@ n]; } } void@@ display@@ (int@@ num3@@ [@@ ]){ for(inti=1;i<=@@ n+@@ m;i++){ if(i@@ ==1)@@ cout<<@@ num3@@ [i]; else@@ cout<<""<<@@ num3@@ [i]; } } intmain(){ read(); sort(@@ num1,num2@@ ); hebing@@ (@@ num1,num2@@ ,@@ num3@@ ); display@@ (@@ num3@@ ); return0; }  
c -1
h -1
0

intmain() { chara[100@@ ],b[100],@@ c[100]; inti,j,@@ s,@@ k,@@ y; gets(a); gets(b); gets(c); for(i=0;i<@@ strlen(a)@@ ;i++) { k=i; j=0; while(@@ a[k]==@@ b[j]@@ &&j@@ <@@ strlen(b@@ )) { k++; j++; } if(j==@@ strlen(b@@ )) { y=0; for(@@ s@@ =i;@@ s@@ <@@ i+@@ strlen(b@@ );@@ s++) { a[@@ s@@ ]=@@ c[@@ s@@ -i@@ ]; }@@ y=1; } if(y@@ ==1)break; } printf("%s\n",@@ a); return0; }  
c -1
h -1
struct@@ Node@@ ; typedef@@ struct@@ Node@@ *@@ pNode@@ ; struct@@ Node { intx; charid[20]; pNode@@ next; }; pNode@@ create@@ () { pNode@@ p; p=@@ (@@ pNode@@ )@@ malloc(@@ sizeof(struct@@ Node@@ )); p@@ ->next=NULL; return@@ p; } voidsort@@ (@@ pNode@@ head@@ ,intn) { pNode@@ p=@@ NULL@@ ,@@ q@@ =NULL@@ ,@@ s=@@ NULL@@ ; inti; for(i=1;i<=n;i++) { s=(@@ pNode@@ )@@ malloc(@@ sizeof(struct@@ Node@@ )); s@@ ->next=NULL; scanf("%s%d",&@@ s@@ ->@@ id,&@@ s@@ ->@@ x); if(s@@ ->@@ x@@ <60) { p=head; while(p@@ ->next) p=p->next; p@@ ->next=@@ s; } else { q=@@ head; p=head->next; while(p) { if(p->@@ x@@ <@@ s@@ ->@@ x) break; q=p; p=p->next; } q@@ ->next=@@ s; s@@ ->next=p; } } } void@@ outputdata@@ (@@ pNode@@ p) { p=p->next; while(p@@ ->next) { printf("%s\n",p->id); p=p->next; } printf("%s\n",p->id); } intmain() { pNode@@ head; intn; head=@@ create@@ (); scanf("%d",&n); sort(@@ head,@@ n); outputdata@@ (head); return0; }  
c -1
h -1
0

intleap@@ (int@@ y) { if@@ ( (@@ y%@@ 100@@ ==0)&&(@@ y%400==0) || (@@ y%100!=0@@ )&&(@@ y%@@ 4==0) ) return@@ 1@@ ;@@ else@@ return0; } intdays@@ (int@@ y,int@@ d@@ ,int@@ r@@ ) { inta[@@ 13@@ ]={0@@ ,@@ 0@@ ,31,@@ 28@@ ,31,30,31,30,31@@ ,31,30,31,30@@ }; if(leap@@ (y@@ ))@@ a[@@ 3@@ ]=@@ 29; int@@ ans=0; for(inti=1;i<=@@ d@@ ;i++)@@ ans@@ +=@@ a[i]; return@@ ans@@ +@@ r; } intmain() { inty,@@ d,@@ r; cin>>y>>@@ d@@ >>@@ r; cout<<@@ days@@ (@@ y,@@ d,@@ r); }  
c -1
h -1
voidmain() { int@@ d1@@ ,@@ d2@@ ,@@ sum=0,@@ n,@@ a[100][100],@@ i,j,@@ x1,y1,x2,y2@@ ; scanf("%d",&n); for(i=0;i<n;i++) { for(j=0;j<n;j++) scanf("%d",&a[i][j]); } for(i=0;i<n;i++) { for(j=0;j<n;j++) { if(a[i][j]==0) { x1@@ =i;@@ y1@@ =j@@ ;break; } } if(j@@ <n@@ )break; } for(i=n-1;i>=0;i--) { for(j=n-1;j>=0;j--) { if(a[i][j]==0) { x2@@ =i;@@ y2@@ =j@@ ;break; } } if(j@@ >=0@@ )break; } d1@@ =@@ x2-x1@@ +1;@@ d2@@ =@@ y2-y1@@ +1; sum=(@@ d1@@ -2)*(@@ d2@@ -2); printf("%d",sum); }  
c -1
h -1
0

intmain() { inti,j,@@ row,col,@@ x,y; inta[100][100]; scanf("%d%d",&row,&col); for(i=0;i<row;i++) for(j=0;j<col;j++) scanf("%d",&a[i][j]); for(i=0;i<=@@ col@@ -1;i++) { x=0; y@@ =i; do { printf("%d\n",@@ a[x@@ ][y@@ ]); x++; y@@ --; } while((@@ y@@ >=0@@ )&&(@@ x@@ <=row@@ -1)); } for(i=1;i<=@@ row-1;i++) { x@@ =i; y=@@ col-1; do { printf("%d\n",@@ a[x@@ ][y@@ ]); x++; y@@ --; } while((@@ y@@ >=0@@ )&&(@@ x@@ <=row@@ -1)); } return0; }  
c -1
h -1
intmain() { inti,j,n,@@ x1,y1,x2,y2@@ ,@@ a[1000],@@ t; x1@@ =-1; scanf("%d",&n); for(i=0;i<n;i++) { for(j=0;j<n;j++) { scanf("%d",&a[j]); if(a[j]@@ ==0) { if(@@ x1@@ ==-1) { x1=i; y1=j; } x2=i; y2=j; } } } t@@ =(@@ x2-x1-1)*(y2-y1-1); printf("%d\n",t); return0; }  
c -1
h -1
0

int@@ cal@@ (int@@ y,int@@ x) { inti,@@ sum; if(x@@ ==1)@@ return1; else { sum=0; for(i=y@@ ;i<=@@ x;i++) { if((x@@ %i@@ ==0)&&(@@ (x@@ /i@@ ==1)@@ ||(@@ x@@ /i@@ >@@ y@@ ))@@ )@@ sum+=@@ cal@@ (i,@@ x@@ /i); } returnsum; } } intmain() { intn,i,@@ l; scanf("%d",&n); for(i=1;i<=n;i++) { scanf("%d",&@@ l); printf("%d",@@ cal@@ (2,@@ l@@ )); if(i!=@@ n)@@ printf("\n"); } return0; }  
c -1
h -1
structstudent { intnum; float@@ chinese; float@@ math; float@@ sum; }; voidmain() { intn,i; structstudent*@@ pt@@ ,*@@ p,@@ temp; scanf("%d",&n); pt@@ =(structstudent@@ *)malloc(@@ n*@@ LEN@@ ); for(p=@@ pt@@ ;p<@@ pt@@ +n;@@ p++) { scanf("%d@@ %@@ f@@ %@@ f",&@@ p->@@ num,&@@ p->@@ chinese@@ ,&p->@@ math); p->@@ sum=@@ p->@@ chinese+@@ p->@@ math; } for(i=0;i<3;i++) { for(p=@@ pt@@ ;p<@@ pt@@ +@@ n-1@@ -i@@ ;p++) { if(p->@@ sum@@ >=@@ (p@@ +1)@@ ->@@ sum) {@@ temp@@ =*@@ p@@ ;@@ *p@@ =*(p@@ +1@@ );@@ *(p@@ +1)@@ =@@ temp;} } } for(p=@@ pt@@ +@@ n-1@@ ;p@@ >@@ pt@@ +@@ n-@@ 4@@ ;p@@ --) { printf("%d@@ %@@ g@@ \n",@@ p->@@ num,@@ p->@@ sum); } }  
c -1
h -1
0

voidmain() { structbook { intx; char@@ z@@ [10]; structbook*next; }@@ *@@ p1,*p2,*@@ p,*@@ head,*@@ t; inti,n,@@ max=0,@@ j,k,@@ l,@@ y[@@ 400@@ ],@@ q@@ ;@@ char@@ u@@ ;@@ scanf("%d",&n); p1=@@ p2=@@ head=(struct@@ book@@ *)malloc(sizeof(structbook)); for(i=0;i<n;i++) { scanf("%d%s",&p1->@@ x,@@ p1->@@ z@@ );@@ y@@ [i]@@ =strlen(@@ p1->@@ z); p1=(structbook@@ *)malloc(sizeof(struct@@ book@@ )@@ );@@ p2->next@@ =p1;@@ p2=p1; } p=head; for(i=0;i<n-1;i++) { for(j=0;j<@@ y@@ [i];j++) { q@@ =1;@@ t=@@ p@@ ->next; for(k@@ =i+1@@ ;k<@@ n;k++) { for(l=0;l<@@ y@@ [k]@@ ;l++) if(p->@@ z@@ [j]==@@ t@@ ->@@ z@@ [l@@ ])@@ q++; t=t@@ ->next; } if(q@@ >max){max=@@ q@@ ;@@ u@@ =p->@@ z@@ [j]@@ ;} } p=p->next; } printf("%c\n%d\n",@@ u@@ ,max); p=head; for(i=0;i<n;i++) { for(j=0;j<@@ y@@ [i];j++) if(@@ u@@ ==@@ p->@@ z@@ [j]@@ ){@@ printf("%d\n",p->@@ x@@ );break;} p=p->next; } }  
c -1
h -1
void@@ swap@@ (int*a,@@ int*@@ b) { int@@ temp=@@ *@@ a;@@ *@@ a=@@ *@@ b@@ ;*@@ b=@@ temp; } int@@ find@@ (int*@@ s@@ ,int@@ x,int@@ l@@ ,int@@ r@@ ) { if(l@@ >@@ r@@ )return0; int@@ mid@@ =(@@ l@@ +@@ r@@ )@@ /2; if(s[@@ mid@@ ]==@@ x)@@ return1; else { if(s[@@ mid@@ ]>@@ x)@@ return@@ find@@ (@@ s,@@ x,@@ l,@@ mid@@ -1); else@@ return@@ find@@ (@@ s,@@ x,@@ mid@@ +1,@@ r); } } intmain() { intn=0,@@ i=0,@@ j=0; int@@ x=0; ints[@@ 1000]={0}; while((@@ scanf("%d",&@@ x@@ ),@@ x)@@ !=-1) { if(x@@ !=0) { s[@@ n@@ ++]=@@ x; for(i=n-1@@ ;@@ (i@@ >0@@ )&&(@@ s[i]@@ <@@ s@@ [i-1]@@ )@@ ;i--) swap(@@ &@@ s[i]@@ ,&@@ s@@ [i@@ -1]); } else { intcount=0; for(i=0;i<n;i++) { if(@@ find@@ (@@ s,@@ 2*@@ s[i]@@ ,i@@ +1,@@ n@@ )) count++; } printf("%d\n",@@ count); for(i=0;i<n;i++) s[i]@@ =0; n=0; } } return0; }  
c -1
h -1
0

intmain() { intn,k,@@ j; ints=0; cin>>n; cin>>k; inta[1000]; for(inti=0;i<n;i++) { cin>>a[i]; } for(int@@ z@@ =0;z@@ <n;@@ z++) { for(j=@@ z@@ +1@@ ;j<n;j++) { if(a[@@ z@@ ]+@@ a[j]==@@ k) {@@ s=1; break;} } if(a[@@ z@@ ]+@@ a[j]==@@ k@@ )break; } if(s@@ ==1)@@ cout<<"yes"; elseif(@@ s@@ ==0) cout<<"no"; return0; }  
c -1
h -1
intnum[@@ 101][101]; intmain(void) { inti=0,@@ j@@ =1,@@ k@@ =1,@@ x,y,@@ row,col,@@ n=1; scanf("%d%d",&row,&col); for(x=0;x@@ <=row@@ -1;@@ x++) for(y=0;y@@ <=col@@ -1;@@ y@@ ++) scanf("%d",&@@ num[@@ x@@ ][y@@ ]); printf("%d\n",@@ num[@@ 0][@@ 0]@@ ); while(n@@ <row@@ *@@ col) { int@@ flag=0; while(j@@ >=0&&i@@ <=row-1@@ &&j@@ <=col@@ -1) { printf("%d\n",@@ num@@ [i][j]); i++; j--; n++; flag=1; } if(flag==1) k++; if(k@@ <=col@@ -1) { i=0; j=@@ k; } else { i=@@ k-@@ col@@ +1; j=col-1; } } return0; }  
c -1
h -1
0

inth@@ [100],@@ s@@ [100]={0},@@ n; int@@ p@@ (int@@ i) { int@@ s1@@ =0,@@ s2@@ ,j; if(s@@ [i]==0) { for(j=i+1;j<n;j++) {@@ s2=@@ s1@@ ; if(h@@ [i]<@@ h@@ [j]) s1@@ =0; else s1@@ =p@@ (j@@ )@@ +1; if(s1@@ <@@ s2@@ )@@ s1@@ =@@ s2; } s[i]=@@ s1@@ ; } else s1@@ =@@ s[i]; return(@@ s1); } voidmain() { inti,@@ s1@@ =0,@@ s2; scanf("%d",&n); for(i=0;i<n;i++) scanf("%d",&h[i]); for(i=0;i<n;i++) { s2=@@ s1@@ ; s1@@ =p@@ (i); if(s1@@ <@@ s2@@ ) s1@@ =@@ s2; } printf("%d",@@ s1@@ +1); }  
c -1
h -1
intmain() { intn,i,j,k,@@ m; chara[@@ 50000@@ ]; intb[@@ 20001]; scanf("%d\n",&n); gets(a); k@@ =strlen(a); i=0; j=1; while(i<=@@ k@@ -1) { b[j]@@ =(@@ a[i]@@ -@@ 48@@ )*@@ 10@@ +(@@ a[i+1@@ ]-@@ 48@@ ); i@@ =i+@@ 3@@ ; j=j+1; } j=j-1; printf("%d",@@ b[1@@ ]); i=@@ 2; while(i<=@@ j) { m=1; while(m@@ <@@ i) { if(b[i]==@@ b[m@@ ]@@ )break; m=m+1; } if(m==@@ i)@@ printf("%d",b[i]); i=i+1; } return0; }  
c -1
h -1
0

intmain() { intn,@@ m=0,@@ a[@@ 100001@@ ]={@@ 100000000@@ }; scanf("%d",&n); for(inti=1;i<=n;i++) { intt; scanf("%d",&t); int@@ j=@@ m; while(@@ a[j]@@ <@@ t)@@ j--; a[@@ ++@@ j@@ ]=t; m@@ =j@@ >@@ m@@ ?@@ j@@ :@@ m; } printf("%d\n",m); getchar(); getchar(); return0; }  
c -1
h -1
intmain() { intn,i,j; int@@ x1@@ =-1,@@ y1@@ =-1,@@ x2@@ =-1,@@ y2@@ =-1; int@@ t[@@ 500@@ ][@@ 500]; scanf("%d",&n); for(i=0;i<n;i++) for(j=0;j<n;j++) scanf("%d",&@@ t@@ [i][j]); for(i=0;i<n;i++) { for(j=0;j<n;j++) { if(t@@ [i][j]==0) { x1@@ =j; y1@@ =i; break; } } if(@@ x1@@ !=-1) break; } for(i=n-1@@ ;i>0;i--) { for(j=n-1@@ ;j>0;j--) { if(t@@ [i][j]==0) { x2@@ =j; y2@@ =i; break; } } if(@@ x2@@ !=-1) break; } printf("%d\n",@@ (@@ x2-x1-1)*(y2-y1@@ -1)); return0; }  
c -1
h -1
0

intm; structbook { intnum; charname[26]; structbook*next; }; structbook*@@ create@@ (void) { structbook@@ *head,*p1,*p2; inti; scanf("%d",&m); p1=(structbook@@ *)malloc(LEN); scanf("%d%s",&p1->num,p1->name); head=NULL; for(i=1;i<m;i++) { if(i@@ ==1)head=p1; elsep2->next=p1; p2=p1; p1=(structbook@@ *)malloc(LEN); scanf("%d%s",&p1->num,p1->name); } p2->next=p1; p1->next=NULL; return(head); } voidmain() { intnum[@@ 26]={0},@@ i,j,@@ max=0; structbook*@@ p1,*p2,*head; char*@@ p; p1=@@ create@@ (); head=p1; for(i=0;i<m;i++) { for(p=@@ p1->name@@ ;@@ *p@@ !='\0'@@ ;p++) { num[@@ (*p)@@ -'A']++; } p1=p1->next; } for(i=0;i<26;i++) { if(num@@ [i]>max) { max=@@ num[i]; j=i; } } printf("%c\n",@@ (@@ 'A'+@@ j@@ )); printf("%d\n",max); p1=head; for(i=0;i<m;i++) { p=@@ p1->name@@ ; for(p=@@ p1->name@@ ;@@ *p@@ !='\0'@@ ;p++) { if(@@ *p@@ ==@@ (@@ 'A'+@@ j@@ )) { printf("%d\n",@@ p1->num); break; } } p1=p1->next; } }  
c -1
h -1
intmax(int@@ b[@@ 25@@ ]) {@@ inti,@@ t=@@ b[0]; for(i=0;i<@@ 25@@ ;i++){@@ if(b[i]>@@ t)@@ t=@@ b[i]@@ ;} return@@ t; } int@@ destroy@@ (inta[@@ 25@@ ],int@@ t) {@@ intb[@@ 25@@ ]={@@ 1@@ }; inti,j; for(j=@@ t@@ -1@@ ;j>=0;j--) {@@ for(i=j@@ +1;i<=@@ t@@ ;i++){@@ if(a[j]>=@@ a[i]@@ &&(@@ b[i]@@ +1)@@ >@@ b[j]@@ )@@ b[j]=@@ b[i]@@ +1;} } return@@ max(@@ b)@@ +1; } voidmain() {int@@ x,@@ i=0; inta[@@ 25@@ ]={0}; scanf("%d",&x); for(i=0;i<=@@ x@@ -1;i++)@@ scanf("%d",&a[i]); printf("%d",@@ destroy@@ (a,@@ x@@ -1)); }  
c -1
h -1
0

intmain() { char@@ sz@@ [100]; scanf("%s",@@ sz@@ ); inti,j,@@ m,n,@@ len,@@ len1,len2@@ ; char@@ as@@ [100],@@ az@@ [100]; scanf("%s%s",@@ as@@ ,@@ az@@ ); len=strlen(@@ sz@@ ); len1=strlen(@@ as@@ ); len2=strlen(@@ as@@ ); for(i=0;i<len@@ ;i++){ for(j=0;j<len2@@ ;j++@@ ,i@@ ++){ if(sz[i]@@ !=@@ as@@ [j]@@ )break; if(j==@@ len2@@ -1){ for(m@@ =i@@ -len2@@ +1,@@ n@@ =0;n@@ <@@ len2@@ ;n@@ ++,@@ m@@ ++){ sz[m@@ ]=@@ az@@ [n]; } } if(j==@@ len2@@ -1){ i=@@ len; } } } printf("%s",@@ sz@@ ); return0; }  
c -1
h -1
structpatient { charID[10]; intage; structpatient*next; }; voidsort@@ (structpatient@@ *head,@@ structpatient*@@ q) { structpatient*@@ pre@@ =@@ head,*@@ p=@@ pre@@ ->next@@ ,*@@ s; s@@ =(struct@@ patient*)malloc(sizeof(structpatient)); s@@ ->age=@@ q@@ ->age@@ ;@@ strcpy(@@ s@@ ->@@ ID,@@ q->@@ ID); s@@ ->next=NULL; if(q@@ ->age@@ >=60) { while(@@ (p@@ !=NULL@@ )&&(@@ q@@ ->age@@ <=@@ p->age@@ )) { pre@@ =p; p=p->next; } pre@@ ->next=@@ s; s@@ ->next=p; } else { while(p!=NULL) { pre@@ =p; p=p->next; } pre@@ ->next=@@ s; s@@ ->next=p; } } voidprint@@ (structpatient@@ *head) { structpatient@@ *p; p=head; while(p!=NULL) { printf("%s\n",p->@@ ID); p=p->next; } } voidmain() { intn,i; structpatient*@@ head; structpatient@@ *p; head=(struct@@ patient*)malloc(sizeof(structpatient)); head@@ ->next=NULL; scanf("%d",&n); for(i=1;i<=n;i++) { p=@@ (structpatient@@ *)malloc(sizeof(structpatient@@ )); scanf("%s%d",@@ p->@@ ID,&@@ p->@@ age); sort(@@ head,@@ p); } print(@@ head@@ ->next@@ ); }  
c -1
h -1
0

int@@ input@@ (int*@@ s@@ ,intn) { } int@@ sort@@ (int*@@ s@@ ,intn) { } main() { intm,n; scanf("%d%d",&m,&n); int*@@ a=@@ (int*)malloc(@@ m@@ *sizeof(int)); int*@@ b=@@ (int*)malloc(n*sizeof(int)); int*@@ s=@@ (int*)malloc(@@ (@@ m+@@ n)@@ *sizeof(int)); for(inti=0;i<m;i++) scanf("%d",a@@ +i); for(inti=0;i<n;i++) scanf("%d",@@ b@@ +i); for(inti=1;i<@@ m;i++) for(intj=0;j<@@ m@@ -i;j++) { if(@@ *(a@@ +j)@@ >*@@ (@@ a+@@ (j@@ +1)@@ )) { intt; t@@ =*@@ (a@@ +j); *(a@@ +j)@@ =*(@@ a+@@ (j@@ +1@@ )); *(a+@@ (j@@ +1)@@ )@@ =t; } } for(inti=1;i<@@ n;i++) for(intj=0;j<@@ n@@ -i;j++) { if(*(@@ b@@ +j)@@ >*@@ (@@ b+@@ (j@@ +1)@@ )) { intt; t@@ =*(@@ b@@ +j); *(@@ b@@ +j)@@ =*(@@ b+@@ (j@@ +1@@ )); *(@@ b+@@ (j@@ +1)@@ )@@ =t; } } for(inti=0;i<m;i++) s[i]=@@ a[i]; for(inti=0;i<n;i++) s[m@@ +i]=b[i]; for(inti=0;i<@@ m+n;i++) { if(i==0) printf("%d",@@ s[i]); else printf("%d",@@ s[i]); } }  
c -1
h -1
void@@ get_array@@ (inta[@@ ]); inta[@@ 101]; intmain() { get_array@@ (a); } void@@ get_array@@ (inta[@@ ]) { int@@ n1,n2; cin>>@@ n1@@ >>@@ n2; for(inti=0;i<@@ n1@@ ;i++) { cin>>a[i]; } for(inti=0;i<@@ n1@@ -1;i++) { for(intj=0;j<@@ n1@@ -1-i;j++) { if(a[j]>a[j+1]) { int@@ tmp; tmp=@@ a[j]; a[j]=a[j+1]; a[j+1]=@@ tmp; } } } cout<<a[0]; for(inti=1;i<@@ n1@@ ;i++) { cout<<""<<a[i]; } for(inti=0;i<@@ n2;i++) { cin>>a[i]; } for(inti=0;i<@@ n2@@ -1;i++) { for(intj=0;j<@@ n2@@ -1-i;j++) { if(a[j]>a[j+1]) { int@@ tmp; tmp=@@ a[j]; a[j]=a[j+1]; a[j+1]=@@ tmp; } } } for(inti=0;i<@@ n2;i++) { cout<<""<<a[i]; } return; }  
c -1
h -1
1


intm=0; intmain() { void@@ count@@ (inta,int@@ b); intr,@@ i,k,@@ n; scanf("%d",&@@ r); for(i=0;i<@@ r;i++) { scanf("%d",&n); for(k=@@ 2@@ ;k<=@@ sqrt(n@@ )@@ ;k++) { if(n%@@ k@@ ==0) { m++; count@@ (@@ k,@@ n/@@ k); } } printf("%d\n",@@ m@@ +1); m=0; } } void@@ count@@ (inta,intb) { intj; double@@ t=@@ sqrt(@@ b); for(j=@@ a@@ ;j<=@@ t;j++) { if(b@@ %j==0) { m++; count@@ (@@ j,@@ b@@ /j@@ ); } } }  
c -1
h -1
intt,@@ a,@@ flag@@ ,@@ a1@@ ; void@@ find@@ (intm,int@@ min) { inti; for(i=2;i<=@@ sqrt(@@ (double)@@ m@@ );i++) { if(m@@ %i==0) { if(i>=@@ min) { t++; min@@ =i; find@@ (m@@ /i,@@ min); } } } return; } intmain() { intn,@@ ii@@ ; cin>>n; for(@@ ii@@ =1;@@ ii@@ <=n;@@ ii@@ ++) { t=0; flag=0; cin>>a; a1@@ =@@ a; find@@ (a,@@ 2); cout<<t@@ +1<<endl; } return0; }  
c -1
h -1
1


intmain() { intn,k,@@ a[1000],@@ i,j,@@ e=0; scanf("%d%d",&n,&k); for(i=0;i<n;i++)@@ scanf("%d",&a[i]); for(i=0;i<n;i++){ for(j=0;j<n;j++){ if(i==@@ j@@ )continue; if(a[i]+a[j]==@@ k){ e++; } } } if(e@@ ==0)@@ printf("no"); elseif(@@ e@@ >0@@ )@@ printf("yes"); return0; }  
c -1
h -1
intmain() { intmax=0,@@ n,@@ i,@@ count=0,@@ m,@@ j,@@ num[@@ 200],@@ left@@ ,@@ flag=0; chara[100@@ ],b[100]; double@@ s; scanf("%lf",&@@ s); scanf("%s",&@@ a); scanf("%s",&@@ b); if(strlen(a)@@ ==@@ strlen(b@@ )) { n@@ =strlen(a); } else { flag=1; printf("error"); } if(flag==0) { for(i=0;i<n;i++) { if((a[i]!='@@ A'&&a[i]!='T'&&a[i]!='G'&&a[i]!='@@ C')||(@@ b[i]!='A'&&b[i]!='T'&&b[i]!='G'&&b[i]!='@@ C')@@ ) { flag=1; printf("error"); break; } else { if(a[i]==b[i]) { count++; } } } } if(flag==0) { if((@@ double)@@ count@@ /@@ n@@ >@@ s) { printf("yes"); } else { printf("no"); } } return0; }  
c -1
h -1
0

voidinput@@ (inta[],intb[]) { inti,@@ m,n; scanf("%d%d",&@@ a[@@ 49@@ ]@@ ,&@@ b[@@ 49@@ ]); m=@@ a[@@ 49@@ ]; n=@@ b[@@ 49@@ ]; for(i=0;i<m;i++) scanf("%d",&a[i]); for(i=0;i<n;i++) scanf("%d",&b[i]); } voidorder@@ (intm,@@ intn,@@ inta[@@ ],intb[@@ ]) { inti,j,t; for(j=0;j<m-1;j++) { for(i=0;i<m@@ -1-j;i++) {@@ if(a[i]>a[i+1]) {t=@@ a[i];@@ a[i]=a[i+1@@ ];@@ a[i+1]=@@ t;} } } for(j=0;j<n-1;j++) { for(i=0;i<n@@ -1-j;i++) {@@ if(b[i]>b[i+1]) {t=@@ b[i]@@ ;@@ b[i]=b@@ [i+1@@ ];@@ b[i+1]=@@ t;} } } } void@@ comb@@ (intm,@@ intn,@@ inta[@@ ],intb[@@ ],int@@ c[@@ ]) { inti; for(i=0;i<m;i++) c[i]=a[i]; for(i=m;i<@@ (@@ m+@@ n@@ );i++) c[i]=b[i-@@ m]; } voidprint@@ (intm,@@ intn,@@ intc[@@ ]) { inti; printf("%d",c@@ [0]); for(i=1;i<@@ (@@ m+@@ n@@ );i++) printf("%d",c[i]); } voidmain() { inta[@@ 50@@ ],b[@@ 50@@ ],@@ c[100]; input@@ (a,b); order@@ (@@ a[@@ 49@@ ],b[@@ 49@@ ],@@ a,b); comb@@ (@@ a[@@ 49@@ ],b[@@ 49@@ ],@@ a,b,c); print(@@ a[@@ 49@@ ],b[@@ 49@@ ],@@ c); }  
c -1
h -1
intmain() { inti,@@ t=0,@@ c@@ =1,@@ d@@ =1,@@ n,@@ p=0,@@ q=0,@@ r@@ =0@@ ,*@@ b; struct@@ pp { intx; inty; int@@ z; }@@ *@@ s; scanf("%d",&n); b=@@ (int*)malloc(sizeof(int)*n); s@@ =(struct@@ pp@@ *)malloc(sizeof(int)@@ *3@@ *n); for(i=0;i<n;i++) { scanf("%d%d%d",&@@ s[i].@@ x,&@@ s[i].@@ y,&@@ s[i].@@ z); b[i]@@ =(@@ (@@ s[i].@@ y@@ )+@@ (@@ s[i].@@ z@@ )); } for(i=0;i<n;i++) { if(b[i]>@@ t) { t=b[i]; p=i; } } for(i=0;i<n;i++) { { if((@@ b[i]@@ >@@ c@@ )&&(i@@ !=@@ p@@ )) {@@ c=@@ b[i]; q@@ =i;} } } for(i=0;i<n;i++) { { if((@@ b[i]@@ >@@ d@@ )&&(i@@ !=@@ p@@ )&&(i@@ !=@@ q@@ )) {d=@@ b[i]; r@@ =i;} } } printf("%d%d\n",@@ s[p@@ ].@@ x,@@ b[p@@ ]); printf("%d%d\n",@@ s[@@ q@@ ].@@ x,@@ b[@@ q@@ ]); printf("%d%d\n",@@ s[@@ r@@ ].@@ x,@@ b[r@@ ]); return0; }  
c -1
h -1
0

int@@ yn@@ (char@@ x); intmain(){ chara[501],b[501]; double@@ q,@@ p; inti,@@ s,@@ l1,l2,@@ o@@ ; scanf("%lf%s%s",&@@ p,@@ a,b); l1@@ =strlen(a); l2@@ =strlen(b); o@@ =0; if(l1!=l2@@ )@@ o@@ =1; for(i=0;i<l1;i++) if(@@ yn@@ (@@ a[i])@@ ==1){@@ o@@ =1;break;} for(i=0;i<@@ l2@@ ;i++) if(@@ yn@@ (@@ b[i]@@ )@@ ==1){@@ o@@ =1;break;} if(@@ o@@ ==1)@@ printf("error"); else{ s=0; for(i=0;i<l1;i++) if((@@ a[i]@@ )==@@ b[i]@@ )@@ s=s+1; q@@ =1.0*@@ s/@@ l1; if(q@@ >@@ p@@ )@@ printf("yes"); elseprintf("no"); } return0; } int@@ yn@@ (char@@ x){ inta; if((x@@ =='@@ A')||(@@ x@@ =='@@ T')||(@@ x@@ =='@@ C')||(@@ x@@ =='@@ G')@@ )@@ a=0; else@@ a=1; return@@ a; }  
c -1
h -1
structstu { charnum[@@ 15]; intchinese; intmath; intsum; structstu*next; }; intn; structstu*@@ creat@@ (void) { structstu@@ *head,*@@ p,*@@ g@@ ,*@@ h; inti,j; p=(struct@@ stu@@ *)malloc(LEN); scanf("%s%d%d",@@ (*p).@@ num,&@@ (*p).@@ chinese@@ ,&@@ (*p).@@ math); (*p).@@ sum=(@@ (*p).@@ chinese+@@ (*p).@@ math); for(i=0;;i++) { if(i@@ ==0){@@ head=@@ p@@ ;@@ (*p).@@ next@@ =NULL@@ ;} elseif(@@ i@@ <@@ 4) { for(@@ h=@@ head@@ ,j@@ =0;j<@@ i;j++) { if((@@ *p@@ ).@@ sum>@@ (*@@ h@@ ).@@ sum@@ )break; else{@@ g=@@ h@@ ;@@ h@@ =(@@ *@@ h@@ ).@@ next@@ ;} } if(j@@ ==0){@@ (*p).@@ next@@ =@@ head;@@ head=@@ p@@ ;} elseif(@@ j==@@ i@@ ){@@ (*@@ g@@ ).@@ next@@ =p@@ ;@@ (*p).@@ next@@ =NULL@@ ;} else{@@ (*@@ g@@ ).@@ next@@ =p@@ ;@@ (*p).@@ next@@ =@@ h@@ ;} } else { for(@@ h=@@ head@@ ,j@@ =0;j<@@ 3;j++) { if((@@ *p@@ ).@@ sum>@@ (*@@ h@@ ).@@ sum@@ )break; else{@@ g=@@ h@@ ;@@ h@@ =(@@ *@@ h@@ ).@@ next@@ ;} } if(j@@ ==0){@@ (*p).@@ next@@ =@@ head;@@ head=@@ p@@ ;} else{@@ (*@@ g@@ ).@@ next@@ =p@@ ;@@ (*p).@@ next@@ =@@ h@@ ;} } if(i==@@ n-1@@ )break; p=(struct@@ stu@@ *)malloc(LEN); scanf("%s%d%d",@@ (*p).@@ num,&@@ (*p).@@ chinese@@ ,&@@ (*p).@@ math); (*p).@@ sum=(@@ (*p).@@ chinese+@@ (*p).@@ math); } return(head); } voidprint(struct@@ stu@@ *head) { structstu@@ *p; inti; for(p=head@@ ,i@@ =0;i<@@ 3@@ ;i++,@@ p=@@ (*p).@@ next@@ ) printf("%s%d\n",@@ (*p).@@ num,@@ (*p).@@ sum); } voidmain() { structstu*@@ head; scanf("%d",&n); head=creat(); print(head); }  
c -1
h -1
0

intmain() { int@@ k1@@ ,@@ k2@@ ,@@ a[100@@ ],b[100@@ ],i,j,@@ c; scanf("%d%d",&@@ k1@@ ,&@@ k2@@ ); for(i=0;i<=@@ k1@@ -1;@@ ++@@ i) { scanf("%d",&a[i]); } for(i=0;i<=@@ k2@@ -1;@@ ++@@ i) { scanf("%d",&b[i]); } for(i=0;i<=@@ k1@@ -2@@ ;++i) { for(j=i+1;j<=@@ k1@@ -1;@@ ++@@ j) { if(a[i]>a[j]) { c=@@ a[j]; a[j]=@@ a[i]; a[i]=@@ c; } } printf("%d",a[i]); } printf("%d",a[@@ k1@@ -1]); for(i=0;i<=@@ k2@@ -2@@ ;++i) { for(j=i+1;j<=@@ k2@@ -1;@@ ++@@ j) { if(b[i]>@@ b[j]) { c=@@ b[j]; b[j]=@@ b[i]; b[i]=@@ c; } } printf("%d",b[i]); } printf("%d",b[@@ k2@@ -1]); return0; }  
c -1
h -1
main() { intyear,month,day,@@ D@@ =0,@@ i; scanf("%d%d%d",&year,&month,&day); if(year%@@ 400==0||(@@ year%100!=0@@ &&@@ year%@@ 4@@ ==0)) { inta[@@ 12]={31,29,31,30,31,30,31,31,30,31,30,31}; for(i=0;i<month-1;i++) D=@@ D@@ +@@ a[i]; D=@@ D@@ +day; } else { inta[@@ 12]={31,28,31,30,31,30,31,31,30,31,30,31}; for(i=0;i<month-1;i++) D=@@ D@@ +@@ a[i]; D=@@ D@@ +day; } printf("%d",D@@ ); getchar(); getchar(); return0; }  
c -1
h -1
0

intmain() { chara[@@ 2][@@ 500]; int@@ len@@ [2@@ ],i,j,@@ o@@ ,@@ W@@ ,@@ l; doublen,@@ p; W@@ =0; l=0; scanf("%lf",&n); getchar(); for(i=0;i<2@@ ;i++){ scanf("%s",@@ a[i]); len@@ [i]@@ =strlen(@@ a[i]); for(j=0;j<len@@ [i]@@ ;j++){ if(a[i][j]@@ !='@@ A'&&@@ a[i][j]@@ !='@@ T'&&@@ a[i][j]@@ !='@@ C'&&@@ a[i][j]@@ !='@@ G'){ W@@ ++; } } } if(@@ len@@ [0]@@ !=@@ len@@ [1]@@ ||@@ W@@ !=0){ printf("error"); return0; } else{ for(j=0;j<len@@ [0]@@ ;j++){ if(a[0]@@ [j]==@@ a[1]@@ [j]){ l++; } } } p@@ =1.0*@@ l@@ /@@ len@@ [0]; if(p@@ >n){ printf("yes"); }else{ printf("no"); } scanf("%d",&@@ o@@ ); return0; }  
c -1
h -1
chars1@@ [@@ 10000],@@ s2[@@ 10000],@@ s[@@ 10000]; int@@ Len@@ (@@ char*@@ s) { inti; for(i=0;s[i]@@ ;i++@@ ); return@@ i; } int@@ Match@@ (@@ char*@@ s1@@ ,char*@@ s2@@ ) { inti,@@ l=@@ Len@@ (@@ s2); for(i=0;i<l;i++) if(s1@@ [i]!=@@ s2@@ [i]) return0; return1; } int@@ Find@@ (@@ char*@@ s,@@ char*@@ s1@@ ) { inti,@@ l=@@ Len@@ (@@ s); for(i=0;i<l;i++) if(@@ Match@@ (@@ s@@ +@@ i,@@ s1@@ )) return@@ i; return@@ l; } intmain() { intl,@@ i,@@ t; scanf("%s%s%s",@@ s,@@ s1,@@ s2); l=@@ Len@@ (@@ s); t=@@ Find@@ (@@ s,@@ s1); if(t==@@ l) printf("%s\n",@@ s); else { for(i=0;i<t;i++) printf("%@@ 1c@@ ",@@ s[i]); printf("%s",@@ s2); for(i=@@ Len@@ (@@ s1@@ )+@@ t@@ ;i<@@ l@@ ;i++) printf("%@@ 1c@@ ",@@ s[i]); printf("\n"); } return0;}  
c -1
h -1
0

int@@ counter@@ =1; void@@ abc@@ (inta,intb) { inti; for(i=b@@ ;i<=a;i++) { if(a@@ %i@@ ==0@@ &&(@@ a/@@ i)@@ >=@@ i) { counter@@ ++; abc@@ (a/i,i); } } } intmain() { intt,@@ x; cin>>t; for(x@@ =1;@@ x@@ <=@@ t@@ ;x@@ ++) { counter@@ =1; intm; cin>>m; abc@@ (m,@@ 2); cout<<@@ counter@@ <<endl; } return0; }  
c -1
h -1
intmain() { intsum@@ [100]={0},@@ a[100]; intn,i,j,@@ max=0; scanf("%d",&n); for(i=0;i<n;i++)@@ scanf("%d",&a[i]); for(i=n-1;i>=0;i--) { if(i==@@ n-1)@@ sum@@ [i]=1; else { for(j=i+1;j<=@@ n-1;j++) if(a[j]<=@@ a[i]) { if(sum@@ [j]@@ >max)max=@@ sum@@ [j]; } sum[i]@@ =+@@ +@@ max; max=0; } } max=0; for(i=0;i<=n-1;i++) if(sum@@ [i]@@ >max)max=@@ sum[i]; printf("%d",max); return0; }  
c -1
h -1
0

intmain() { int@@ bubble@@ (intc[],int@@ x); inti,@@ m,n; inta[100],b[100]; scanf("%d%d",&m,&n); for(i=1;i<=m;i++) { scanf("%d",&@@ a[i@@ -1]); } printf("\n"); for(i=1;i<=n;i++) { scanf("%d",&@@ b@@ [i@@ -1]); } printf("\n"); bubble@@ (a,m); printf(""); bubble@@ (b,n); } int@@ bubble@@ (intc[],int@@ x) { int@@ t@@ ,j,@@ temp; for(t@@ =1;t@@ <=@@ x@@ ;t++) { for(j=1;j<=@@ x@@ -@@ t;j++) { if(c@@ [j-1]@@ >@@ c@@ [j]) { temp=@@ c@@ [j-1]; c@@ [j-1]=@@ c[j]; c[j]=@@ temp; } } } for(t@@ =1;t@@ <=@@ x@@ ;t++) { printf("%d",c[@@ t@@ -1]); if(t@@ !=@@ x) printf(""); } }  
c -1
h -1
intmain() { inti,n,@@ t=0,@@ e,@@ num=0,@@ k; char@@ z@@ [10]; struct@@ point { charID[10]; intage; }@@ a[100],b[100]; scanf("%d",&n); for(i=0;i<n;i++) { scanf("%s",&@@ a[i].@@ ID); scanf("%d",&@@ a[i].@@ age); } for(i=0;i<n;i++) { if(a[i].age@@ >=60) { num=num@@ +1; } } intf@@ =@@ num; for(i=0;i<n;i++) { if(a[i].age@@ >=60) { b[t@@ ].age=@@ a[i].@@ age; strcpy(@@ b[t@@ ].ID,@@ a[i].@@ ID); t++; } if(a[i].age@@ <60) { b[@@ f@@ ].age=@@ a[i].@@ age; strcpy(@@ b[@@ f@@ ].ID,@@ a[i].@@ ID); f@@ ++; } } for(i=0;i<num;i++) { for(k=0;k<@@ num@@ -i@@ -1;k++) { if(@@ b[k@@ ].age@@ <@@ b[k@@ +1@@ ].age) { e=@@ b[k@@ ].@@ age; b[k@@ ].age=@@ b[k@@ +1@@ ].@@ age; b[k@@ +1@@ ].age=@@ e; strcpy(@@ z,@@ b[k@@ +1@@ ].@@ ID); strcpy(@@ b[k@@ +1@@ ].ID,@@ b[k@@ ].@@ ID); strcpy(@@ b[k@@ ].ID,@@ z); } } } for(i=0;i<n;i++) { printf("%s\n",@@ b[i].@@ ID); } return0; }  
c -1
h -1
0

voidmain() { inta[@@ 200][@@ 200]; inti,j,@@ row,col,@@ sum; scanf("%d%d",&row,&col); for(i=0;i<row;i++){ for(j=0;j<col;j++) scanf("%d",&a[i][j]); } if(col@@ >=@@ row@@ ){ for(@@ sum=0;@@ sum@@ <col@@ ;@@ sum@@ ++){ for(j=@@ sum@@ ;j>=0;j--){ i=@@ sum@@ -j@@ ; if(i>=@@ row@@ )break; printf("%d\n",a[i][j]); } } for(;@@ sum@@ <=col@@ +row@@ -2@@ ;@@ sum@@ ++){ for(j=col-1@@ ;j>=0;j--){ i=@@ sum@@ -j@@ ; if(i>=@@ row@@ )break; printf("%d\n",a[i][j]); } } } else{ for(@@ sum=0;@@ sum@@ <col@@ ;@@ sum@@ ++){ for(j=@@ sum@@ ;j>=0;j--){ i=@@ sum@@ -j@@ ; if(i>=@@ row@@ )break; printf("%d\n",a[i][j]); } } for(;@@ sum@@ <=col@@ +row@@ -2@@ ;@@ sum@@ ++){ for(j=col-1@@ ;j>=0;j--){ i=@@ sum@@ -j@@ ; if(i>=@@ row@@ )break; printf("%d\n",a[i][j]); } } } }  
c -1
h -1
int@@ Compare@@ (constvoid*@@ elem1@@ ,@@ constvoid*@@ elem2@@ ) { return@@ *(@@ (int*)@@ (@@ elem1@@ ))@@ -@@ *(@@ (int*)@@ (@@ elem2@@ )); } intmain() { int@@ n1,n2; int*@@ a1@@ ,*@@ a2@@ ; int@@ i1@@ ,@@ i2@@ ,@@ i3@@ ,@@ i4@@ ; scanf("%d%d",&n1,&n2); a1@@ =@@ (int*)malloc(sizeof(int)@@ *@@ n1); a2@@ =@@ (int*)malloc(sizeof(int)@@ *@@ n2); for(@@ i1@@ =0;@@ i1@@ <@@ n1@@ ;@@ i1@@ ++) { scanf("%d",@@ a1@@ +@@ i1@@ ); } for(@@ i2@@ =0;@@ i2@@ <@@ n2@@ ;@@ i2@@ ++) { scanf("%d",@@ a2@@ +@@ i2@@ ); } qsort(@@ a1,@@ n1,@@ sizeof(int),@@ Compare@@ ); qsort(@@ a2,@@ n2,@@ sizeof(int),@@ Compare@@ ); for(@@ i3@@ =0;@@ i3@@ <@@ n1@@ ;@@ i3@@ ++) { printf("%d",@@ a1@@ [@@ i3@@ ]); } for(@@ i4@@ =0;@@ i4@@ <@@ n2@@ -1;@@ i4@@ ++) { printf("%d",@@ a2@@ [@@ i4@@ ]); } printf("%d",@@ a2@@ [@@ n2@@ -1]); }  
c -1
h -1
0

intmain() { introw,col,@@ i,j,@@ k=1; inta[@@ 200][@@ 200@@ ]={0}; cin>>row>>col; for(i=0;i<=@@ row-1;i++) { for(j=0;j<=@@ col@@ -1;j++) cin>>a[i][j]; } cout<<@@ a[0][@@ 0]; while(k@@ <=@@ row+col-2@@ ) { for(i=0;i<=@@ row-1;i++) { if(k@@ -i@@ >=0@@ &&k@@ -i@@ <col) { cout<<endl; cout<<a[i]@@ [k-i@@ ]; } } k++; } cout<<endl; return0; }  
c -1
h -1
intmain() { int@@ c@@ [100][100]; intt; intn=0; intm; int@@ d@@ [100]={0}; int@@ q@@ [100]={0}; inti; int@@ z=0; int@@ x=0; t=0; do { i=0; do { scanf("%d",&@@ c[@@ t@@ ][i]); if(@@ c[@@ t@@ ][0]@@ ==-1) {break;} if(@@ c[@@ t@@ ]@@ [i]==0) {break;} i@@ ++;@@ d[@@ t@@ ]++; }@@ while(i<=@@ 100@@ ); if(@@ c[@@ t@@ ][0]@@ ==-1) {break;} t@@ ++;@@ n++; }while(@@ t@@ <=@@ 100@@ ); do { i=0; do { m=0; do { if((@@ c[@@ z@@ ]@@ [i]@@ *2@@ )==@@ c[@@ z@@ ][m@@ ]) {@@ q@@ [@@ z@@ ]@@ ++;} m++; }while(@@ m@@ <=@@ d[@@ z@@ ]@@ -1); i++; }@@ while(i<=@@ d[@@ z@@ ]@@ -1); z@@ ++; }while(@@ z@@ <=@@ n-1); while(@@ x@@ <=@@ n-1) { printf("%d\n",@@ q@@ [x@@ ]); x++; } scanf("%d",&t); return0; }  
c -1
h -1
0

main() { inti,j,n,@@ num,@@ a[@@ 17@@ ]; do {@@ i=0; do {@@ i++; scanf("%d",&a[i]); }while(@@ a[i]@@ >0@@ ); n@@ =i-1; if(a[@@ n+1@@ ]!=@@ -1) {@@ num=0; for(i=1;i<=n-1;i++) for(j=i+1;j<=n;j++) if(a[i]==2*@@ a[j]||a[j]==2*@@ a[i]) num++; printf("%d\n",num); } }while(@@ a[n@@ +1@@ ]@@ ==0@@ ); return0; }  
c -1
h -1
intmain(intargc,char*argv[]) { int@@ A[@@ 16]; intsum@@ ,j,@@ i,k,@@ m; for(j=0;;j++) { scanf("%d",&@@ A@@ [0]); if(A@@ [0]@@ ==-1) return0; while(@@ A@@ [0]@@ !=0&&@@ A@@ [0]@@ !=-1) { sum=0; for(i=1;;i++) { scanf("%d",&@@ A@@ [i]); if(A@@ [i]==0) break; } for(k=0;k<i;k++) { for(m=0;m<@@ i@@ ;m++) { if(A@@ [k]==@@ A@@ [m]@@ *2) sum=sum+1; } } printf("%d\n",sum); break; } } return0; }  
c -1
h -1
1


intmain() { double@@ bl@@ ,@@ jl@@ ; scanf("%lf",&@@ bl@@ ); char@@ dna1@@ [501],@@ dna2@@ [501]; scanf("%s",@@ dna1); scanf("%s",@@ dna2); inti,@@ k=0,@@ l,@@ n=0; l=strlen(@@ dna1); for(i=0;i<l;i++) { if((@@ dna1@@ [i]!='A'&&@@ dna1@@ [i]!='G'&&@@ dna1@@ [i]!='C'&&@@ dna1@@ [i]!='T')@@ ||(@@ dna2@@ [i]!='A'&&@@ dna2@@ [i]!='G'&&@@ dna2@@ [i]!='C'&&@@ dna2@@ [i]!='T')@@ ) { k++; } } if(k@@ >0) { printf("error\n"); } else { for(i=0;i<l;i++) { if(dna1@@ [i]==@@ dna2@@ [i]) { n++; } } jl@@ =1.0*@@ n/@@ (@@ l@@ -1); if(@@ jl@@ >@@ bl@@ ) { printf("yes\n"); } else { printf("no\n"); } } return0; }  
c -1
h -1
intmain() { intk; cin>>k; int@@ high@@ [30]; intnum[@@ 30]={0}; inti,j; for(i=0;i<k;i++) { cin>>@@ high@@ [i]; } num@@ [0]=1; for(i=1;i<k;i++) { intmax=0; for(j=i-1;j>=0;j--) { if(@@ high@@ [i]<=@@ high@@ [j]) { if(max<@@ num@@ [j]) max=@@ num@@ [j]; } } num[i]=@@ max+1; } sort(@@ num,@@ num@@ +@@ k); printf("%d",@@ num@@ [k@@ -1]); return0; }  
c -1
h -1
0

intmain() { introw,col,@@ sum; scanf("%d%d",&row,&col); inta[100][100]; inti,j; for(i=0;i<row;i++) { scanf("%d",&a[i]@@ [0]); for(j=1;j<@@ col;j++) { scanf("%d",&a[i][j]); } } for(@@ sum=0;@@ sum@@ <(@@ row+col@@ -1)@@ ;@@ sum@@ ++) { for(i=0;i<=@@ sum@@ ;i++) { if(i@@ <row@@ &&(@@ sum@@ -i@@ )@@ <col) { printf("%d\n",@@ a[i][@@ sum@@ -i]); } } } return0; }  
c -1
h -1
intmain(){ intk,m,n,i,j,@@ l,@@ sum=0; inta[100][100]; intb[@@ 1000]; scanf("%d\n",&@@ k); for(i=0;i<k;i++){ scanf("%d%d",&m,&n); for(j=0;j<m;j++){ for(l=0;l<n;@@ l++){ scanf("%d",&a[j]@@ [l]); } } if((@@ m@@ !=1@@ )&&(@@ n@@ !=1@@ )){ for(l=0;l<n;@@ l++){ sum=sum+@@ a[0][@@ l@@ ]; sum=sum+@@ a[m-1][@@ l@@ ]; } for(j=1;j<@@ m-1@@ ;j++){ sum=sum+@@ a[j]@@ [0]; sum=sum+@@ a[j]@@ [n-1]; } b[i]=@@ sum; sum@@ =0;} elseif(m@@ =1@@ ){ for(l=0;l<n;@@ l++){ sum=sum+@@ a[0][@@ l@@ ]; b[i]=@@ sum; sum=0; } } elseif(n@@ =1@@ ){ for(j=0;j<m;j++){ sum=sum+@@ a[j]@@ [0]; b[i]=@@ sum; sum=0; } } } for(i=0;i<k;i++){ printf("%d\n",@@ b[i]); } return0; }  
c -1
h -1
0

int@@ result; void@@ bfs@@ (inta[@@ ],intn,@@ inti,@@ int@@ u@@ ) { intj; if(result@@ <@@ u@@ ) result=@@ u@@ ; if(i<@@ n) { for(j=i+1;j<=n;j++) { if(a[j]<=@@ a[i]) bfs@@ (a,n,@@ j,@@ u@@ +1); } } } intmain() { int@@ R@@ ,@@ C@@ ,i,j,@@ n; inta[@@ 26@@ ],b[@@ 26@@ ][@@ 26]; cin>>n; for(i=1;i<=n;i++) cin>>a[i]; result=0; a[0]=@@ 99999@@ ; bfs@@ (a,n,@@ 0,@@ 0); cout<<@@ result@@ <<endl; return0; }  
c -1
h -1
intmain(intargc,char*argv[]) { intn; scanf("%d",&n); int@@ picture@@ [1000][1000]; int@@ hang@@ [1000]; inti,j; intm=0,@@ mg@@ =0,@@ l=0,@@ number; for(i=0;i<n;i++) { hang@@ [i]=0; for(j=0;j<n;j++) { scanf("%d",&@@ picture@@ [i][j]); if(@@ picture@@ [i][j]==0) { hang@@ [i]=@@ hang@@ [i]@@ +1; } } if(@@ hang@@ [i]>@@ 2@@ &&m@@ ==0) { m=i; mg@@ =@@ hang@@ [i]; } elseif(@@ hang@@ [i]>@@ 2@@ &&m@@ >0) { l@@ =i; } } number@@ =(@@ l@@ -m@@ -1)*(@@ mg@@ -2); printf("%d",@@ number); return0; }  
c -1
h -1
0

intmain(intargc,char*argv[]) { intn,k; inti,j,@@ p=1; intnum[@@ 1000]; scanf("%d%d",&n,&k); for(i=0;i<n;i++){ scanf("%d",&@@ num[i]); } for(i=0;i<n-1;i++){ for(j=i+1;j<@@ n@@ -i;j++){ if(num@@ [i]+@@ num@@ [j]==k){ p=0; } } } if(p@@ ==0){ printf("yes\n"); } elseif(@@ p@@ =1@@ ){ printf("no\n"); } return0; }  
c -1
h -1
intmain() { int@@ row@@ =0,@@ col@@ =0,@@ k=0; cin>>row>>col; inti=0,j=0,@@ s[@@ row][col]; for(i=0;i<=@@ row-1;i++) { for(j=0;j<=@@ col@@ -1;j++) { cin>>@@ s[i]@@ [j]; } } for(i=0;i<=@@ col@@ -1;i++) { j=0; k=i; do { cout<<@@ s[j]@@ [k]@@ <<endl; j++; k--; }while(@@ (j@@ <=row@@ -1)@@ &&(@@ k@@ >=0@@ )); } for(i=1;i<=@@ row-1;i++) { j=col-1; k=i; do { cout<<@@ s[k]@@ [j]<<endl; k++; j--; }while(@@ (k@@ <=row@@ -1)@@ &&(@@ j@@ >=0@@ )); } return0; }  
c -1
h -1
0

intmain(){ intsz[100][100]; intt,@@ i,j,@@ a,@@ ROW@@ ,@@ COL@@ ; scanf("%d%d",&@@ ROW@@ ,&@@ COL@@ ); for(i=0;i<@@ ROW@@ ;i++){ for(j=0;j<@@ COL@@ ;j++){ scanf("%d",&sz[i][j]); } } for(t=0;t@@ <ROW@@ +@@ COL@@ -1;@@ t++){ if(@@ ROW@@ -1@@ >=@@ t@@ ){@@ a=@@ t;} else{@@ a=@@ ROW@@ -1@@ ;} i=0; while(i<@@ a@@ +1@@ ){ if(i<@@ t@@ -@@ COL@@ +1@@ ){ i=@@ t@@ -@@ COL@@ +1; } j=@@ t@@ -@@ i; printf("%d\n",sz@@ [i][j]); i++; } } return0; }  
c -1
h -1
main() {@@ intn,i,k,@@ j,@@ x,y,@@ max; scanf("%d",&n); inta[@@ 26@@ ],b[@@ 26]; for(i=n-1;i>=0;i--) scanf("%d",&a[i]); b[0]@@ =1; i=0; while(i<=@@ n-1) {@@ j=0; x=0; while(j<@@ i) {@@ if(a[j]<=@@ a[i]) { if(b[j]@@ >=@@ x) x=@@ b[j]@@ ;} j++; } b[i]=@@ x@@ +1; i++; } max=1; for(i=0;i<=n-1;i++) if(b[i]@@ >=@@ max) max=b[i]; printf("%d",max); }  
c -1
h -1
0

intmain() { intn,i,j,k; scanf("%d\n",&n); structbook { intnum; charname[26]; }@@ book[999]; for(i=0;i<n;i++) {@@ scanf("%d@@ %s@@ \n",&@@ book[i].@@ num,@@ book[i].name); } struct@@ author { char@@ l; int@@ count; }@@ au@@ [26]; for(i=0;i<26;i++) {@@ au@@ [i].@@ l=@@ 65@@ +@@ i; au@@ [i].@@ count=0; } for(i=0;i<26;i++) {@@ for(j=0;j<n;j++) {@@ for(k=0;k<26;k++) {if(@@ au@@ [i].@@ l@@ ==@@ book[j].@@ name@@ [k]) {@@ au@@ [i].@@ count++; break; } } } } intmax=0; for(i=1;i<26;i++) {if(@@ au@@ [max@@ ].@@ count@@ <@@ au@@ [i].@@ count@@ ) max=i; } printf("%c\n%d\n",@@ au@@ [max@@ ].@@ l,@@ au@@ [max@@ ].@@ count); for(j=0;j<n;j++) {@@ for(k=0;k<26;k++) { if(au@@ [max@@ ].@@ l@@ ==@@ book[j].@@ name@@ [k]) {printf("%d\n",@@ book[j].@@ num); break; } } } return0; }  
c -1
h -1
intmain() { inta,b,c; intt=0; scanf("%d%d%d",&a,&b,&c); if(a%@@ 400==0||(@@ a%4==0&&a%100!=0@@ )) { for(inti=1;i<@@ b;i++) { if(i==1||i==3||i==5||i==7||i==8||i==10@@ ||i==@@ 12) { t+=@@ 31; } elseif(i==@@ 4||i==6||i==9||i==11) { t+=@@ 30; } else { t+=@@ 29; } } } else { for(intj=1;j<@@ b;j++) { if(j@@ ==1||@@ j==@@ 3@@ ||j==@@ 5@@ ||j==@@ 7@@ ||j==@@ 8@@ ||j==@@ 10@@ ||j==@@ 12) { t+=@@ 31; } elseif(@@ j==@@ 4@@ ||j==@@ 6@@ ||j==@@ 9@@ ||j==@@ 11) { t+=@@ 30; } else { t+=@@ 28; } } } t=t@@ +c; printf("%d",t); return0; }  
c -1
h -1
0

intf@@ (intn,int@@ i) { intsum=0; for(i@@ ;i<=@@ (int)@@ sqrt(n@@ );i++){ if(n@@ %i==0){ sum+=@@ f(@@ n@@ /i,i); } } return@@ sum@@ +1; } main() { int@@ i0@@ ,@@ n0@@ ; scanf("%d",&@@ n0@@ ); for(@@ i0@@ =0;@@ i0@@ <@@ n0@@ ;@@ i0@@ ++){ intn; scanf("%d",&n); printf("%d\n",@@ f(@@ n,@@ 2)); } }  
c -1
h -1
intm,n; inta[100],b[100]; voidmain() { voidf1@@ (); voidf2@@ (ints[],int@@ k); void@@ f3@@ (intp@@ [],int@@ t); void@@ f4@@ (intp@@ [],int@@ t); f1@@ (); f2@@ (a,m); f2@@ (b,n); f3@@ (a,m); f4@@ (b,n); } voidf1@@ () {inti; scanf("%d%d",&m,&n); for(i=0;i<m;i++) scanf("%d",&a[i]); for(i=0;i<n;i++) scanf("%d",&b[i]); } voidf2@@ (ints[],int@@ k) { inti,j,t; for(j=0;j<@@ k@@ -1;j++) for(i=0;i<@@ k-1@@ -j;i++) if(s@@ [i]>@@ s@@ [i+1]) {t=@@ s[i]; s[i]=@@ s@@ [i+1]; s@@ [i+1]=@@ t;} } void@@ f3@@ (intp@@ [],int@@ t) { inti,j; for(i=0;i<t;i++) printf("%d",@@ p[i]); } void@@ f4@@ (intp@@ [],int@@ t) { inti,j; for(i=0;i<@@ t@@ -1;i++) printf("%d",@@ p[i]); printf("%d",@@ p@@ [t@@ -1]); }  
c -1
h -1
0

intmain(){ inti,j,k,l,@@ m,n,@@ s; scanf("%d",&k); for(i=1;i<=@@ k;i++){ scanf("%d%d",&m,&n); inta[@@ m@@ ][n]; s=0; for(j=0;j<m;j++){ for(l=0;l<n;@@ l++){ scanf("%d",&(@@ a[j]@@ [l@@ ]@@ )); } } if(m@@ ==1){ for(j=0;j<n;j++){ s+=@@ a[0][j]; } }elseif(@@ n@@ ==1){ for(j=0;j<m;j++){ s+=@@ a[j]@@ [0]; } }else{ for(j=0;j<n;j++){ s=s+@@ a[0]@@ [j]+@@ a[m-1][j]; } for(j=0;j<m;j++){ s=s+@@ a[j]@@ [0]+@@ a[j]@@ [n-1]; } s=s@@ -@@ a[0][0]@@ -@@ a[0][@@ n-1]-@@ a[@@ m-1][0]-@@ a[m-1][@@ n-1]; } printf("%d\n",s); } return0; }  
c -1
h -1
intmain() { inta[@@ 12683@@ ],b[@@ 12683@@ ]; inti,j,n,@@ k; scanf("%d\n",&n); for(i=0;i<=n-1;i++) {@@ scanf("%d",&a[i]); b[i]=1; } for(j=n-1;j>=0;j--) { for(k=0;k<j@@ ;k++) { if(a[k@@ ]==@@ a[j]) {@@ b[j]@@ =0; break;} else b[j]@@ =1;@@ }} printf("%d",a[0]); for(j=1;j<=@@ n-1;j++) {@@ if(b[j]@@ ==1) {@@ printf(""); printf("%d",@@ a[j]@@ );}} return0; }  
c -1
h -1
0

intmain() { inta[@@ 101][@@ 101@@ ],b[@@ 100000]; introw,col; inti,j,@@ k@@ =(@@ -1)@@ ,sum; scanf("%d%d",&row,&col); for(i=0;i<row;i++) { for(j=0;j<col;j++) scanf("%d",&a[i][j]); } for(@@ sum=0;@@ sum<=@@ ((@@ row+col@@ )@@ -2@@ );@@ sum@@ ++) { for(i=0;i<row;i++) { if(sum@@ -i@@ >=0&&@@ sum@@ -i@@ <col) { k@@ +=1; b[k]=@@ a[i][@@ sum@@ -i@@ ]; } } } for(k=0;k<=@@ row@@ *@@ col-1@@ ;k++) printf("%d\n",@@ b[k@@ ]); return0; }  
c -1
h -1
int@@ cmp@@ (constvoid*a,constvoid*@@ b) { return(@@ *(int*)@@ a@@ -*@@ (int*)@@ b); } intmain() { structstudent { intnum; intchinese; int@@ maths; int@@ amount@@ ; }; structstudentstu[100000]; inta[@@ 100000],@@ n,@@ l@@ ,j,@@ k; scanf("%d",&n); for(inti=0;i<n;i++) { scanf("%d%d%d",&stu[i].num,&stu[i].@@ chinese@@ ,&stu[i].@@ maths@@ ); a[i]=@@ stu[i].@@ chinese+@@ stu[i].@@ maths; } qsort@@ (a,n,@@ sizeof(@@ a[0]@@ ),@@ cmp@@ ); for(int@@ h=@@ n-1;@@ h@@ >=0;@@ h@@ --) { if(a[@@ n-1@@ ]==@@ stu[@@ h@@ ].@@ chinese+@@ stu[@@ h@@ ].@@ maths@@ ) {@@ l=@@ stu[@@ h@@ ].num@@ ;} } for(int@@ g=@@ n-1;@@ g@@ >=0;@@ g@@ --) { if(a[@@ n-2@@ ]==@@ stu[@@ g@@ ].@@ chinese+@@ stu[@@ g@@ ].@@ maths@@ &&(@@ g@@ +1)@@ !=@@ l) {@@ j=@@ stu[@@ g@@ ].num@@ ;} } for(int@@ f=@@ n-1;@@ f@@ >=0;@@ f@@ --) { if(a[@@ n-@@ 3@@ ]==@@ stu[@@ f@@ ].@@ chinese+@@ stu[@@ f@@ ].@@ maths@@ &&(@@ f@@ +1)@@ !=@@ j@@ &&(@@ f@@ +1)@@ !=@@ l) {@@ k=@@ stu[@@ f@@ ].num@@ ;} } printf("%d%d\n",@@ l,@@ a[@@ n-1]); printf("%d%d\n",@@ j,@@ a[@@ n-2@@ ]); printf("%d%d\n",@@ k,@@ a[@@ n-@@ 3@@ ]); }  
c -1
h -1
0

intmain() { int@@ l1,l2@@ ,i,j,@@ a,@@ k,@@ m; char@@ sz[@@ 256],@@ s1@@ [256],@@ r@@ [256],@@ zj@@ [256]; gets(@@ sz@@ ); gets(@@ s1); gets(@@ r); l1=strlen(@@ sz@@ ); l2=strlen(@@ s1); for(i=0;i<l1;i++) { if(sz@@ [i]==@@ s1@@ [0]) { a=0; for(j=0;j<@@ l2@@ ;j++) { if(s1@@ [j]==@@ sz@@ [i+j@@ ]) a=@@ a@@ +1; } if(a==@@ l2@@ ) { for(m=0;m<@@ i@@ ;m++) printf("%c",@@ sz[m@@ ]); printf("%s",@@ r); for(m@@ =i+@@ l2@@ ;m@@ <@@ l1@@ ;m++) printf("%c",@@ sz[m@@ ]); k=1; } } if(k@@ ==1)break; } if(k@@ !=1@@ )@@ printf("%s",@@ sz@@ ); return0; }  
c -1
h -1
intmain() { inta[100@@ ],@@ i,@@ e,@@ k; charid@@ [100][10],@@ p@@ [10]; intn; scanf("%d",&n); for(i=0;i<n;i++){ scanf("%s%d",@@ id[i],&@@ a[i]); } for(k=1;k<=@@ n;k++){ for(i=n-1;i@@ >@@ k-1@@ ;i--){ if(a[i]>@@ a[i-1]@@ &&a[i]@@ >=60){ e=@@ a[i]; a[i]=@@ a[i@@ -1]; a[i-1@@ ]=@@ e; strcpy(@@ p,@@ id[i]); strcpy(id@@ [i],@@ id@@ [i@@ -1]); strcpy(id@@ [i-1@@ ],@@ p); } } } for(i=0;i<n;i++){ printf("%s\n",@@ id[i]); } return0; }  
c -1
h -1
0

intmain(intargc,char*argv[]) { intm,i,j,@@ A@@ [26]={0},@@ B@@ [26]; char@@ s; scanf("%d",&m); structbook{ intnum; char@@ n@@ [26]; }@@ *@@ book@@ ; book@@ =(struct@@ book@@ *)malloc(sizeof(struct@@ book@@ )*@@ m); for(i=0;i<m;i++) { scanf("%d%s",&book[i].num,@@ book[i].@@ n); for(j=0;@@ book[i].@@ n@@ [j]!='\0';j++) { switch(@@ book[i].@@ n@@ [j]) { case@@ 65@@ :@@ A@@ [0]@@ ++@@ ;break; case@@ 66@@ :@@ A@@ [1]@@ ++@@ ;break; case@@ 67@@ :@@ A@@ [2@@ ]++;break; case@@ 68@@ :@@ A@@ [3@@ ]++;break; case@@ 69@@ :@@ A[@@ 4@@ ]++;break; case@@ 70@@ :@@ A@@ [5@@ ]++;break; case@@ 71@@ :@@ A[@@ 6@@ ]++;break; case@@ 72@@ :@@ A[@@ 7@@ ]++;break; case@@ 73@@ :@@ A[@@ 8@@ ]++;break; case@@ 74@@ :@@ A[@@ 9@@ ]++;break; case@@ 75@@ :@@ A[@@ 10@@ ]++;break; case@@ 76@@ :@@ A@@ [11@@ ]++;break; case@@ 77@@ :@@ A[@@ 12@@ ]++;break; case@@ 78@@ :@@ A[@@ 13@@ ]++;break; case@@ 79@@ :@@ A[@@ 14@@ ]++;break; case@@ 80@@ :@@ A[@@ 15@@ ]++;break; case@@ 81@@ :@@ A[@@ 16@@ ]++;break; case@@ 82@@ :@@ A[@@ 17@@ ]++;break; case@@ 83@@ :@@ A[@@ 18@@ ]++;break; case@@ 84@@ :@@ A[@@ 19@@ ]++;break; case@@ 85@@ :@@ A[@@ 20@@ ]++;break; case@@ 86@@ :@@ A[@@ 21@@ ]++;break; case@@ 87@@ :@@ A[@@ 22@@ ]++;break; case@@ 88@@ :@@ A[@@ 23@@ ]++;break; case@@ 89@@ :@@ A[@@ 24@@ ]++;break; case@@ 90@@ :@@ A@@ [25@@ ]++;break; } } } intk,@@ max; for(i=0;i<26;i++) { B@@ [i]=@@ A@@ [i]; } for(i=@@ 25@@ ;i>0;i--) { if(@@ B@@ [i]>@@ B@@ [i-1@@ ]) { B@@ [i-1@@ ]=@@ B@@ [i]; max=@@ B@@ [i]; } else { max=@@ B@@ [i-1]; } } for(i=@@ 25@@ ;i>=0;i--) { if(A@@ [i]==@@ max) k=i; } s=@@ k@@ +65; printf("%c\n%d\n",@@ s,@@ max); for(i=0;i<m;i++) { for(j=0;@@ book[i].@@ n@@ [j]!='\0';j++) { if(book[i].@@ n@@ [j]==@@ s) { printf("%d\n",book[i].@@ num); break; } } } return0; }  
c -1
h -1
intmain() { chara[@@ 300],b[@@ 300@@ ],c[@@ 300]; inti=0,j=0,@@ len1,len2,@@ len3@@ ,@@ t=0,@@ k; gets(a); gets(b); gets(c); len1@@ =strlen(a); len2@@ =strlen(b); len3@@ =strlen(c); while(i<@@ len1@@ &&@@ t@@ <@@ len2) { if(a[i]!=@@ b[j]) { i++; j=0; t=0; } else { i++; j++; t++; } } if(t@@ >=@@ len2) { for(j=0;j<@@ i@@ -@@ t;j++) printf("%c",@@ a[j]); for(j=0;j<@@ len3@@ ;j++) printf("%c",@@ c@@ [j]); for(j=i@@ -@@ t@@ +len2@@ ;j<@@ len1@@ ;j++) printf("%c",@@ a[j]); } if(t@@ <@@ len2) { for(j=0;j<@@ len1@@ ;j++) printf("%c",@@ a[j]); } return0; }  
c -1
h -1
0

int@@ divide@@ (intn,int@@ j) { intsum@@ =1,@@ i,@@ s,@@ p,@@ k; s=@@ sqrt(@@ n); for(i=j@@ ;i<=@@ s;i++) { if(n%i==0) { p=@@ n/@@ i; k=i; sum=sum+@@ divide@@ (p,@@ i); } } returnsum; } intmain() { intn; cin>>n; intk,@@ m,@@ p; for(k=0;k<n;k++) { cin>>m; p=@@ divide@@ (m,@@ 2); cout<<@@ p@@ <<endl; } return0; }  
c -1
h -1
intmain(){ char@@ m[@@ 600@@ ],@@ z@@ [256],@@ t@@ [256]; scanf("%s%s%s",@@ m,@@ z,@@ t); int@@ len1=strlen(@@ m); int@@ len2=strlen(@@ z); inti,j,@@ c@@ =1,@@ flag=0; for(i=0;i<len1;i++){ intk=0; if(m@@ [i]==@@ z@@ [k]@@ ){ j=i; for(k=1;k<@@ len2@@ ;k++){ if(m@@ [i+1@@ ]==@@ z@@ [k]@@ ){ i++; c++; } else{ break; } } } if(c==@@ len2){ break; } } if(c==@@ len2){ for(i=0;i<j@@ ;i++){ printf("%c",@@ m[i]); } printf("%s",@@ t); for(i=j@@ +len2@@ ;i<@@ len1@@ ;i++){ printf("%c",@@ m[i]); } } else{ printf("%s\n",@@ m); } return0; }  
c -1
h -1
0

intmain() { chara[500],b[500]; int@@ len,@@ lmn@@ ,@@ sum=0,@@ i,@@ flag=1; doublen; scanf("%lf",&n); scanf("%s%s",a,b); len@@ =strlen(a); lmn@@ =strlen(b); if(@@ len@@ !=@@ lmn@@ ) { printf("error"); } else for(i=0;i<len;i++) { if((a[i]!='@@ A'&&a[i]!='T'&&a[i]!='C'&&a[i]!='G')||(b[i]!='A'&&b[i]!='T'&&b[i]!='C'&&b[i]!='@@ G')) {@@ flag=0; printf("error"); break; } } if(@@ len@@ ==@@ lmn@@ &&@@ flag@@ ==1) { for(i=0;i<len;i++) { if(a[i]==b[i]) sum+=@@ 1; } if((@@ double)@@ sum/@@ len@@ >n) printf("yes"); else printf("no"); } return0; }  
c -1
h -1
structpatient {@@ charid@@ [11]; intage@@ ,@@ seq@@ ; structpatient*next; }; main() {@@ intn,@@ n1@@ =0,@@ n2@@ =0,@@ i,j,@@ m,@@ at@@ ; charid[10]; structpatient*@@ head1@@ ,*@@ head2@@ ,*@@ p11@@ ,*@@ p12@@ ,*@@ p21@@ ,*@@ p22@@ ,*@@ t@@ ,*@@ q; scanf("%d",&n); head1@@ =NULL; head2@@ =NULL; for(i=0;i<n;i++) { scanf("%s%d",@@ id,&@@ at@@ ); if(@@ at@@ >=60) {if(@@ head1@@ ==NULL) { head1@@ =(struct@@ patient*)malloc(sizeof(structpatient)); strcpy(@@ head1@@ ->id,@@ id); head1@@ ->age=@@ at@@ ; head1@@ ->next=NULL; } else {@@ for(@@ t=@@ head1@@ ,@@ q=@@ t@@ ;t@@ !=NULL;@@ q=@@ t,@@ t=t@@ ->next) {@@ if(t@@ ->age@@ <@@ at@@ &&@@ t@@ !=@@ head1@@ ) { p11@@ =(struct@@ patient*)malloc(sizeof(structpatient)); p11@@ ->age=@@ at@@ ; strcpy(@@ p11@@ ->id,@@ id); q@@ ->next=@@ p11@@ ; p11@@ ->next=@@ t; break; } if(t@@ ->age@@ <@@ at@@ &&@@ t@@ ==@@ head1@@ ) { p11@@ =(struct@@ patient*)malloc(sizeof(structpatient)); p11@@ ->age=@@ at@@ ; strcpy(@@ p11@@ ->id,@@ id); p11@@ ->next=@@ head1@@ ; head1@@ =@@ p11@@ ; break; } } if(t@@ ==NULL) { p11@@ =(struct@@ patient*)malloc(sizeof(structpatient)); p11@@ ->age=@@ at@@ ; strcpy(@@ p11@@ ->id,@@ id); q@@ ->next=@@ p11@@ ; p11@@ ->next=NULL; } } } if(@@ at@@ <60) {if(@@ head2@@ ==NULL) { head2@@ =(struct@@ patient*)malloc(sizeof(structpatient)); strcpy(@@ head2@@ ->id,@@ id); head2@@ ->age=@@ at@@ ; head2@@ ->next=NULL; p22@@ =@@ head2@@ ; } else { p21@@ =(struct@@ patient*)malloc(sizeof(structpatient)); p21@@ ->age=@@ at@@ ; strcpy(@@ p21@@ ->id,@@ id); p22@@ ->next=@@ p21@@ ; p21@@ ->next=NULL; p22@@ =@@ p21@@ ; } } } for(@@ t=@@ head1@@ ,@@ q=@@ t@@ ;t@@ !=NULL;@@ q=@@ t,@@ t=t@@ ->next@@ ); q@@ ->next=@@ head2@@ ; for(@@ t=@@ head1@@ ;t@@ ->next@@ !=NULL;@@ t=t@@ ->next) {@@ printf("%s\n",@@ t@@ ->id); } printf("%s",@@ t@@ ->id); }  
c -1
h -1
0

intmain() { chara[501],b[501]; inti,@@ m; doublen; m=0; scanf("%lf",&n); scanf("%s",a); scanf("%s",b); int@@ p@@ =strlen(a); int@@ q@@ =strlen(b); if(p==@@ q) { for(i=0;a[i]!='\0';i++) { if(((@@ a[i]!='@@ A')&&(@@ a[i]!='@@ T')&&(@@ a[i]!='@@ C')&&(@@ a[i]!='@@ G')@@ )||((@@ b[i]!='@@ A')&&(@@ b[i]!='@@ T')&&(@@ b[i]!='@@ C')&&(@@ b[i]!='@@ G')@@ )) { printf("error"); return0; } else { if((@@ a[i]@@ )==@@ (@@ b[i]@@ )) m++; } } if((@@ 1.0*@@ m/@@ (p@@ *1.0@@ ))@@ >=@@ n) { printf("yes"); } else{printf("no");} } else { printf("error"); } return0; }  
c -1
h -1
intmain() {int@@ sum@@ (intx,int@@ y); intk,i,@@ m,n; scanf("%d",&k); for(i=1;i<=k;i++) {@@ scanf("%d%d",&m,&n); printf("%d\n",sum@@ (m,@@ n@@ )); } return0; } intsum@@ (intx,inty) {@@ intb[100@@ ][100]; intsum=0,@@ i,j; for(i=0;i<x;i++) for(j=0;j<@@ y;j++) scanf("%d",&@@ b[i]@@ [j]); for(i=0;i<x;i++) for(j=0;j<@@ y;j++) if(i==0||i==@@ (x@@ -1)@@ ||j@@ ==0||j==@@ (y@@ -1)) sum=sum+@@ b[i]@@ [j]; return(@@ sum); }  
c -1
h -1
0

intmain() { intk,@@ a[100][100],@@ n,m,@@ i,j,@@ sum; scanf("%d",&k); for(@@ ;k@@ >0@@ ;k--) { sum=0; scanf("%d%d",&m,&n); for(i=0;i<m;i++) for(j=0;j<n;j++) scanf("%d",&a[i][j]); if(m@@ ==1&&n@@ !=1@@ )@@ for(i=0;i<n;i++)@@ sum+=@@ a[0][i]; if(n@@ ==1&&@@ m@@ !=1@@ )@@ for(i=0;i<m;i++)@@ sum+=@@ a[i][0]; if(n@@ ==1&&@@ m@@ ==1)@@ sum=@@ a[0][@@ 0]; else { for(i=0;i<n-1;i++) sum+=@@ a[0]@@ [i]+@@ a[m-1]@@ [i+1]; for(i=0;i<m-1;i++) sum+=@@ a[i+1@@ ][0]+@@ a[i][n-1]; } printf("%d\n",sum); } return0; }  
c -1
h -1
inta[@@ 101@@ ],b[@@ 101],@@ m,n; int@@ input@@ () { inti; scanf("%d%d",&m,&n); for(i=1;i<=m;i++) scanf("%d",&a[i]); for(i=1;i<=n;i++) scanf("%d",&b[i]); return(0); } int@@ pai@@ () { inti,j,@@ p; for(j=1;j<@@ m;j++) { for(i=1;i<=@@ m@@ -j;i++) { if(a[i]>a[i+1]) { p=@@ a[i]; a[i]=a[i+1]; a[i+1]=@@ p; } } } for(j=1;j<n;j++) { for(i=1;i<=n@@ -j;i++) { if(b[i]>b[i+1]) { p=@@ b[i]; b[i]=b[i+1]; b[i+1]=@@ p; } } } return(0); } int@@ print@@ () { inti; for(i=1;i<=m;i++) printf("%d",a[i]); for(i=1;i<n;i++) printf("%d",b[i]); printf("%d",b[@@ n@@ ]); return(0); } voidmain() { input(); pai@@ (); print(); }  
c -1
h -1
0

intmain() { inti,@@ l,@@ a[@@ 10000],@@ n,k,@@ f@@ =0,@@ m; scanf("%d%d",&n,&k); for(i=0;i<=@@ n;i++) scanf("%d",&a[i]); for(l=0;l@@ <=n;@@ l++) { for(m=@@ l@@ +1@@ ;m@@ <=n;@@ m@@ ++) { if(a[@@ l@@ ]+@@ a[m@@ ]==@@ k) f=@@ f@@ +1; } } if(f@@ !=0) printf("yes"); else printf("no"); return0; }  
c -1
h -1
intmain() { intnum@@ [100]={0},@@ index@@ =0,@@ sum=0; charc; for(;@@ num@@ [0]@@ !=@@ -1;@@ ) {@@ while(@@ true@@ ) { scanf("%d",&@@ num[@@ index@@ ++@@ ]); scanf("%@@ c@@ ",&@@ c); if(c==@@ '\n@@ ') break; } for(inti=0;i<@@ index@@ ;i++) { for(intj=0;j<@@ index@@ ;j++) { if(num@@ [i]==@@ (@@ 2*@@ num[j]@@ )||(@@ 2*@@ num[i]@@ )==@@ num@@ [j]) { sum++; } } } if(num@@ [0]@@ ==-1) {@@ return0;} else printf("%d\n",@@ (@@ sum@@ -1)@@ /2@@ ); sum=0;@@ index@@ =0; } return0; }  
c -1
h -1
0

int@@ disintegerate@@ (inta,intb) { if(a==@@ b@@ ||@@ b@@ ==1) return1; if(a@@ >@@ b) return0; int@@ ans=0; for(inti=@@ a@@ ;i<=@@ b;i++) { if(b@@ %i==0) ans=@@ ans@@ +@@ disintegerate@@ (i,@@ b@@ /i); } return@@ ans; } intmain() { int@@ Time@@ ; cin>>@@ Time@@ ; while(@@ Time@@ >0){ intn; cin>>n; cout<<@@ disintegerate@@ (2,@@ n@@ )<<endl; Time@@ --; } return0; }  
c -1
h -1
intmain() { intn,@@ r,@@ c,@@ zl@@ [@@ 1000][1000],@@ x,@@ a=0,b=0,@@ d=0,@@ e=0; cin>>n; for(r=0;r@@ <n;@@ r++) { for(c=0;c@@ <n;@@ c++) { cin>>@@ zl@@ [r@@ ][c@@ ]; } } for(r=0;r@@ <n;@@ r++) { for(c=0;c@@ <n;@@ c++) { if(@@ zl@@ [r@@ ][c@@ ]==0) { a=@@ r; b=@@ c; break; } } if(@@ zl@@ [a@@ ][b@@ ]==0) { break; } } for(r=0;r@@ <n;@@ r++) { for(c=0;c@@ <n;@@ c++) { if(@@ zl@@ [r@@ ][c@@ ]==0) { d=@@ r; e=@@ c; } } } x@@ =(@@ d@@ -@@ a@@ -1)*(@@ e@@ -b@@ -1); cout<<@@ x@@ <<endl; return0; }  
c -1
h -1
0

int@@ Compare@@ (constvoid*@@ elem1@@ ,@@ constvoid*@@ elem2@@ ) { return@@ *(@@ (int*)@@ elem1@@ )@@ -*(@@ (int*)@@ elem2@@ ); } intmain() { intm,n; inta[100],b[100]; inti; scanf("%d%d",&m,&n); for(i=0;i<m;i++) { scanf("%d",&a[i]); } for(i=0;i<n;i++) { scanf("%d",&b[i]); } qsort@@ (a,@@ m,@@ sizeof(int),@@ Compare@@ ); qsort@@ (b,@@ n,@@ sizeof(int),@@ Compare@@ ); for(i=0;i<m;i++) { printf("%d",a[i]); } for(i=0;i<n-1;i++) { printf("%d",b[i]); } printf("%d",b[@@ n-1]); }  
c -1
h -1
intmain() { inta[@@ 20002@@ ],b[@@ 20001@@ ],@@ n,@@ i,j; cin>>n; for(i=1;i<=n;i++) cin>>a[i]; for(i=1;i<=n@@ +1;i++) b[i]=0; a[n@@ +1@@ ]=0; for(i=2;i<=n;i++) { for(j=1;j<i;j++) if(a[i]==@@ a[j])@@ a[i]=0; } for(i=1;i<=n;i++) { for(j=i+1;j<=@@ n+1@@ ;j++) b[i]@@ +=@@ a[j]; } for(i=1;i<=n;i++) { if(a[i]@@ !=0&&@@ b[i]@@ !=0) cout<<a[i]<<""; else@@ if(a[i]@@ !=0&&@@ b[i]@@ ==0) cout<<a[i]@@ <<endl; } return0; }  
c -1
h -1
0

main() { intk,i,j,@@ l,@@ m,n,@@ a[100][100]; scanf("%d",&k); for(i=0;i<k;i++) { scanf("%d%d",&m,&n); int@@ add@@ =0; for(j=0;j<m;j++) { for(l=0;l<n;l++) scanf("%d",&a[j]@@ [l]); } for(l=0;l<n;l++) add@@ +=@@ (@@ a[0][@@ l@@ ]+@@ a[m-1][@@ l@@ ]); for(l=1;@@ l<@@ m-1@@ ;l++) add@@ +=@@ (@@ a[l@@ ][0]+@@ a[l@@ ][@@ n-1]); printf("%d\n",@@ add@@ ); for(j=0;j<@@ 100@@ ;j++) { for(l=0;l<@@ 100@@ ;l++) a[j]@@ [l@@ ]=0; } } getchar(); getchar(); }  
c -1
h -1
charzfc@@ [3@@ ][@@ 257@@ ]; intmain(){ gets(@@ zfc@@ [1]); gets(@@ zfc@@ [2@@ ]); gets(@@ zfc@@ [3@@ ]); inti,k,@@ len@@ ,len2@@ ,j; len=strlen(@@ zfc@@ [1]); len2=strlen(@@ zfc@@ [2@@ ]); for(i=0;i<len;i++) { if((@@ zfc[1]@@ [i]==@@ zfc@@ [2@@ ][0]@@ )&&(@@ zfc[1]@@ [i+1@@ ]==@@ zfc@@ [2@@ ][1@@ ]@@ )) break; } if(i!=@@ len@@ ) { for(k=i@@ ;k<@@ (@@ len2@@ +i)@@ ;k++) { j=@@ k-@@ i; zfc@@ [1@@ ][k@@ ]=@@ zfc@@ [3@@ ]@@ [j]; if(k==@@ len2@@ +i@@ ) break; } } printf("%s",@@ zfc@@ [1]); return0; }  
c -1
h -1
0

intmain() { intn,@@ m=0,@@ a[@@ 100001@@ ]={@@ 100000000@@ }; scanf("%d",&n); for(inti=1;i<=n;i++) { intt; scanf("%d",&t); int@@ j=@@ m; while(@@ a[j]@@ <@@ t)@@ j--; a[@@ ++@@ j@@ ]=t; m@@ =j@@ >@@ m@@ ?@@ j@@ :@@ m; } printf("%d\n",m); getchar(); getchar(); return0; }  
c -1
h -1
intmain(intargc,char*argv[]) { inta[100][100]; int@@ x1,y1,x2,y2@@ ,@@ area@@ =0; intn,i,j; scanf("%d",&n); for(i=0;i<n;i++){ for(j=0;j<n;j++){ scanf("%d",&a[i][j]); } } for(i=0;i<n;i++){ for(j=0;j<n;j++){ if(a[i][j]@@ ==0){ x1=i; y1=j; break; } } if(j<@@ n){ break; } } for(i=n-1;i>=0;i--){ for(j=n-1@@ ;j>=0;j--){ if(a[i][j]@@ ==0){ x2=i; y2=j; break; } } if(j@@ >=0@@ ){ break; } } area@@ =(@@ x2-x1-1)*(y2-y1-1); printf("%d",@@ area@@ ); return0; }  
c -1
h -1
0

intmain() { inti,j,k; introw,col; int@@ matrix@@ [100@@ *@@ 100@@ ]; scanf("%d%d",&@@ row,@@ &@@ col); for(i=0;i<row;i++){ for(j=0;j<col;j++){ scanf("%d",@@ matrix@@ +i@@ *@@ 100@@ +j); } } for(i=0;i<@@ col@@ ;i++){ for(j=i,@@ k@@ =0@@ ;j>=0@@ &&k@@ <row@@ ;j--@@ ,k@@ ++){ printf("%d\n",*(@@ matrix@@ +k@@ *@@ 100@@ +j)); } } for(i=1;i<@@ row;i++){ for(j=col-1@@ ,k@@ =i@@ ;j>=0@@ &&k@@ <row@@ ;j--@@ ,k@@ ++){ printf("%d\n",*(@@ matrix@@ +k@@ *@@ 100@@ +j)); } } return0; }  
c -1
h -1
intmain(){ chara[@@ 300],b[@@ 300@@ ],c[@@ 300],@@ d@@ [100][100]; int@@ la@@ ,lb@@ ,i,j,@@ x=0,@@ m=0,@@ wz@@ ; gets(a); gets(b); gets(c); la@@ =strlen(a); lb@@ =strlen(b); for(i=0;i<@@ la@@ ;i++){ if(a[i]==@@ b[0]@@ ){ m=0; wz@@ =i; for(j=0;j<@@ lb@@ ;j++){ if(a@@ [i+j]!=@@ b[j]@@ ){ i@@ =i@@ +j@@ -1; break; } else m++; } } if(m==@@ lb@@ ){ for(j=0;j<@@ wz@@ ;j++){ d@@ [0]@@ [j]=@@ a[j]; d[@@ 0][@@ wz@@ ]='\0'; } for(j=@@ wz@@ +lb@@ ;j<@@ la@@ ;j++){ d@@ [1]@@ [j@@ -@@ wz@@ -@@ lb@@ ]=@@ a[j]; d@@ [1@@ ][@@ la@@ -@@ wz@@ -@@ lb@@ ]='\0'; } break; } } if(m@@ >0){ if(@@ wz@@ ==0) strcpy(@@ d[@@ 0],@@ c); else strcat(@@ d[@@ 0],@@ c); if(@@ wz@@ +lb@@ ==@@ la@@ ) puts(@@ d@@ [0]); else{ strcat(@@ d[@@ 0],@@ d@@ [1]); puts(@@ d@@ [0]); } } else puts(@@ a); return0; }  
c -1
h -1
0

intnumber@@ =0; int@@ l; voidsort@@ (intn) { inti; for(i=@@ l@@ ;n@@ /i@@ >=i@@ ;i++) { if(n%i==0) { l@@ =i; sort@@ (n@@ /i); if(n@@ /i@@ ==1) number@@ ++; } } number@@ ++; } intmain() { intn,m,@@ k; cin>>n; for(k=0;k<n;k++) { l=@@ 2; number@@ =0; cin>>m; sort(@@ m); cout<<@@ number@@ <<endl; } return0; }  
c -1
h -1
intmain() { chars[@@ 1000],@@ a[@@ 1000],b[1000],@@ n@@ [1000]; intj,@@ i,@@ pos@@ ,@@ len1,len2,@@ flag=0; cin>>@@ s; cin>>a; cin>>@@ b; if(!@@ strstr(@@ s,@@ a@@ )) { cout<<s<<endl; return0; } len1@@ =strlen(s); len2@@ =strlen(a); for(i=0,j@@ =0;@@ s[i]@@ !='\0';i++) { if(j@@ >=@@ len2) break; if(s[i]==@@ a[j]) { j++; continue; } if(j@@ ) { i@@ -=@@ j; j=0; } } pos@@ =i; j@@ =i@@ -j@@ ; for(i=0;i<j;i++) n[i]=@@ s[i]; for(j=0;@@ b[j]@@ !='\0'@@ ;j++@@ ,i++) n[i]=@@ b[j]; j=@@ pos@@ ; for(;@@ s[j]@@ !='\0'@@ ;i++,j++) n[i]=@@ s[j]; n[i]=@@ '\0'@@ ; cout<<n<<endl; return0; }  
c -1
h -1
0

int@@ total=0; int@@ divide@@ (int@@ k,@@ intnumber@@ ) { if(@@ number@@ ==1){@@ total@@ ++;@@ return0;} inti; for(i=k@@ ;i<=@@ number@@ ;i++) { if(@@ number@@ %i==0) divide@@ (i,@@ number@@ /i); }@@ return0; } intmain() { inti,n; cin>>n; intnum[@@ n]; for(i=0;i<n;i++) cin>>num[i]; for(i=0;i<n;i++) {@@ total=0; divide@@ (2,@@ num[i]); cout<<@@ total@@ <<endl; } cin>>n; return0; }  
c -1
h -1
intmain() { inty,m,d,@@ sum=0; inti=0; int@@ n[@@ 12@@ ]; sum=0; scanf("%d%d%d",&y,&m,&d); if((y%@@ 4==0)&&(@@ y%100!=0@@ )) {@@ n[@@ 0]=@@ 31; n@@ [1]=@@ 29; n@@ [2@@ ]=31; n@@ [3@@ ]=30; n[@@ 4@@ ]=31; n[@@ 5@@ ]=30; n[@@ 6@@ ]=31; n[@@ 7@@ ]=31; n[@@ 8@@ ]=30; n[@@ 9@@ ]=31; n[@@ 10@@ ]=30; n[@@ 11@@ ]=31; for(i=0;i<m-1;i++) { sum+=@@ n[i]; } sum+=@@ d; printf("%d\n",sum); } if((y%@@ 4==0)&&(@@ y%@@ 100@@ ==0)&&(@@ y%@@ 400!=0)) { n[@@ 0]=@@ 31; n@@ [1]=@@ 28; n@@ [2@@ ]=31; n@@ [3@@ ]=30; n[@@ 4@@ ]=31; n[@@ 5@@ ]=30; n[@@ 6@@ ]=31; n[@@ 7@@ ]=31; n[@@ 8@@ ]=30; n[@@ 9@@ ]=31; n[@@ 10@@ ]=30; n[@@ 11@@ ]=31; for(i=0;i<m-1;i++) { sum+=@@ n[i]; } sum+=@@ d; printf("%d\n",sum); } if((y%@@ 4==0)&&(@@ y%@@ 100@@ ==0)&&(@@ y%@@ 400==0)) { n[@@ 0]=@@ 31; n@@ [1]=@@ 29; n@@ [2@@ ]=31; n@@ [3@@ ]=30; n[@@ 4@@ ]=31; n[@@ 5@@ ]=30; n[@@ 6@@ ]=31; n[@@ 7@@ ]=31; n[@@ 8@@ ]=30; n[@@ 9@@ ]=31; n[@@ 10@@ ]=30; n[@@ 11@@ ]=31; for(i=0;i<m-1;i++) {@@ sum+=@@ n[i]; } sum+=@@ d; printf("%d\n",sum); } if(y%@@ 4@@ !=0) { n[@@ 0]=@@ 31; n@@ [1]=@@ 28; n@@ [2@@ ]=31; n@@ [3@@ ]=30; n[@@ 4@@ ]=31; n[@@ 5@@ ]=30; n[@@ 6@@ ]=31; n[@@ 7@@ ]=31; n[@@ 8@@ ]=30; n[@@ 9@@ ]=31; n[@@ 10@@ ]=30; n[@@ 11@@ ]=31; for(i=0;i<m-1;i++) {@@ sum=sum+@@ n[i]; } sum=sum+@@ d; printf("%d\n",sum); } return0; }  
c -1
h -1
0

intmain(){ intn,k,@@ sz[@@ 1000],@@ b=0,@@ c,@@ q,@@ i,j,@@ e; scanf("%d%d",&n,&k); for(i=0;i<n;i++){ scanf("%d",&sz[i]); } for(i=0;i<n-1;i++) { for(j=i+1;j<n;j++) { q=@@ sz[i]@@ +sz@@ [j]; if(q@@ ==k) { printf("yes"); return0; } } } printf("no"); return0; }  
c -1
h -1
intmain() { chara[256],b[@@ 256],c[@@ 256],@@ d@@ [256],@@ e@@ [256]; inti,j,@@ lena@@ ,@@ lenb@@ ,@@ m,n,@@ k; scanf("%s%s%s",a,b,c); lena@@ =strlen(a); lenb@@ =strlen(b); for(i=0;i<@@ lena@@ ;i++) { m=0; for(j=i;j<i+@@ lenb@@ ;j++) { if(b@@ [j-i@@ ]!=@@ a[j]) m=1; } if(m==0) { for(n=0;n@@ <i@@ ;n++) { d[@@ n@@ ]=a[@@ n]; } d[@@ n@@ ]='\0'; for(k=i+@@ lenb@@ ;k<@@ lena@@ ;k++) { e@@ [k-i@@ -@@ lenb@@ ]=@@ a[k]; } e@@ [k-i@@ -@@ lenb@@ ]='\0'; printf("%s@@ %s%s",@@ d,@@ c,@@ e); break; } } if(m==1) printf("%s",a); return0; }  
c -1
h -1
0

intmain() { structpatient { chara[@@ 10]; intage; }@@ pat@@ [100]; intn,i,@@ m,@@ b[100@@ ],@@ l=0,@@ p,@@ q=0; scanf("%d",&n); for(i=0;i<n;i++) { scanf("%s%d",@@ pat[i].@@ a,&@@ pat@@ [i].age); } for(i=0;i<n;i++) { if(pat@@ [i].age>=60) { l=l@@ +1; b[l@@ ]=@@ pat@@ [i].age; } } for(i=1;i<=@@ l@@ ;i++) { for(m@@ =i+1@@ ;m@@ <=@@ l@@ ;m++) if(b[i]@@ <@@ b[m@@ ]) { p=@@ b[i]; b[i]=@@ b[m@@ ]; b[m@@ ]=@@ p; } } for(i=1;i<=@@ l@@ ;i++) { for(m=1;m@@ <=@@ l@@ ;m++) { if(b[i]==@@ b[m@@ ]) { if(i!=@@ m)@@ b[m@@ ]=0; } } } for(i=1;i<=@@ l@@ ;i++) { for(m=0;m@@ <n;m++) if(pat@@ [m@@ ].age@@ ==@@ b[i]@@ )@@ printf("%s\n",@@ pat@@ [m@@ ].@@ a); } for(i=0;i<n;i++) if(pat@@ [i].age@@ <60@@ )@@ printf("%s\n",@@ pat[i].@@ a); return0; }  
c -1
h -1
int@@ f1@@ (int@@ y,int@@ r@@ ) { inta[@@ 12]={31,29,31,30,31,30,31,31,30,31,30,31}; inti,k,@@ d=0; for(i=0;i<@@ 12@@ ;i++) { if(y@@ -1@@ ==@@ i) { for(k=0;k<i;k++) d=d+@@ a[k]; } } d=d+@@ r; return@@ d; } int@@ f2@@ (int@@ y,int@@ r@@ ) { inta[@@ 12]={31,28,31,30,31,30,31,31,30,31,30,31}; inti,k,@@ d=0; for(i=0;i<@@ 12@@ ;i++) { if(y@@ -1@@ ==@@ i) { for(k=0;k<i;k++) d=d+@@ a[k]; } } d=d+@@ r; return@@ d; } voidmain() { inta,@@ y,@@ r,@@ d; scanf("%d%d%d",&a,&@@ y,&@@ r); if((@@ a%100!=0@@ &&@@ a%@@ 4@@ ==0)||(@@ a%400==0)) d=@@ f1@@ (@@ y,@@ r); else d=@@ f2@@ (@@ y,@@ r); printf("%d",d); }  
c -1
h -1
0

intmain(){ inti,j,@@ m=0,@@ n=0,@@ total@@ =0,@@ zong@@ =0,@@ A@@ =1; double@@ bl@@ ,@@ suande@@ ; char@@ z1@@ [100]; char@@ z2@@ [100]; scanf("%lf",&@@ bl@@ ); scanf("%s",&@@ z1@@ ); scanf("%s",&@@ z2@@ ); for(i=0;@@ z1@@ [i]!='\0';i++){ m++; } for(i=0;@@ z2@@ [i]!='\0';i++){ n++; } if(m!=@@ n){ printf("error"); } else{ for(i=0;@@ z1@@ [i]!='\0';i++){ zong@@ ++; if(((@@ z1@@ [i]!='A')&&(@@ z1@@ [i]!='T')&&(@@ z1@@ [i]!='C')&&(@@ z1@@ [i]!='G')@@ )||((@@ z2@@ [i]!='A')&&(@@ z2@@ [i]!='T')&&(@@ z2@@ [i]!='C')&&(@@ z2@@ [i]!='G')@@ )){ A@@ =0; break; } else{ if(@@ z1@@ [i]==@@ z2@@ [i]){ total@@ ++; } } } suande@@ =1.0*@@ total@@ /@@ zong@@ ; if((@@ A@@ ==1@@ )&&(@@ suande@@ <=@@ bl@@ )){ printf("no"); } elseif((@@ A@@ ==1@@ )&&(@@ suande@@ >@@ bl@@ )){ printf("yes"); } elseif(A@@ ==0){ printf("error"); } else{@@ printf("@@ a@@ ");} } return0; }  
c -1
h -1
intmain() { intn,i,@@ a[@@ 150@@ ],@@ tmp@@ ,j; chars[@@ 150@@ ][@@ 20],@@ ts@@ [20]; scanf("%d",&n); for(i=1;i<=n;i++) { scanf("%s",@@ s[i]); scanf("%d",&a[i]); } for(i=1;i<n;i++) for(j=1;j<=@@ n@@ -i;j++) if(((@@ a[j+1@@ ]@@ >=60@@ )&&(@@ a[j]@@ <60@@ )) ||(@@ (@@ a[j+1@@ ]>@@ a[j]@@ )&&(@@ a[j]@@ >=60@@ )@@ )) { memcpy@@ (@@ ts@@ ,@@ s[j]@@ ,@@ sizeof(@@ ts@@ )); memcpy@@ (@@ s[j]@@ ,@@ s@@ [j+1],@@ sizeof(@@ ts@@ )); memcpy@@ (@@ s@@ [j+1],@@ ts@@ ,@@ sizeof(@@ ts@@ )); tmp=@@ a[j]; a[j]=a[j+1]; a[j+1]=@@ tmp; } for(i=1;i<=n;i++) printf("%s\n",@@ s[i]); }  
c -1
h -1
0

intmain() { inta[@@ 10000]; intm,n; cin>>m>>n; inti; for(i=0;i<m@@ *@@ n;i++){ cin>>a[i]; } int*p; inttemp; temp=0; int@@ num=@@ m+@@ n-1; while(@@ num@@ --){ p=@@ a+@@ temp; i=@@ temp; while(i@@ %n@@ !=0@@ &&i@@ /@@ n@@ !=@@ m-1@@ ){ cout<<*p<<endl; p=p+@@ (@@ n-1); i@@ +=@@ (@@ n-1); } cout<<*p<<endl; if(temp@@ <@@ n-1){ temp@@ ++; } else{ temp@@ +=@@ n; } } return0; }  
c -1
h -1
intmain() { charstr[256],@@ sub[256],@@ rep@@ [256]; cin>>@@ str@@ >>@@ sub@@ >>@@ rep@@ ; char*@@ p=strstr(@@ str,@@ sub@@ ),@@ *@@ temp1@@ ,@@ *@@ temp2@@ ; if(p@@ ==NULL) cout<<str@@ ; else { temp1@@ =@@ p,@@ temp2@@ =@@ rep@@ ; while(@@ *@@ temp2@@ !='\0') { *@@ temp1@@ =@@ *@@ temp2@@ ; temp1@@ ++,@@ temp2@@ ++; } cout<<str@@ ; } return0; }  
c -1
h -1
0

intmain() { intt; cin>>t; for(inti=0;i<@@ t;i++) { intn,m; cin>>m>>n; intnum[@@ 110][110@@ ]; for(intj=0;j<m;j++) for(intk=0;k<@@ n@@ ;k++)@@ cin>>@@ num[j]@@ [k]; intsum=0; if(m@@ ==1&&n@@ !=1) { for(intj=0;j<@@ n@@ ;j++)@@ sum=sum+@@ num@@ [0]@@ [j]; cout<<sum<<endl; } elseif(m@@ !=1@@ &&n@@ ==1) { for(intj=0;j<@@ m@@ ;j++)@@ sum=sum+@@ num[m@@ ][0]; cout<<sum<<endl; } elseif(m@@ ==1&&n@@ ==1)@@ cout<<@@ num[@@ 0][@@ 0]@@ <<endl; else {@@ for(intj=0;j<@@ n@@ ;j++)@@ sum=sum+*(@@ *@@ num@@ +j); for(intj=0;j<@@ n@@ ;j++)@@ sum=sum+*(@@ num[m@@ -1]@@ +j); for(intj=1;j<@@ m-1@@ ;j++)@@ sum=sum+*@@ *(@@ num@@ +j); for(intj=1;j<@@ m-1@@ ;j++)@@ sum=sum+*(@@ *(@@ num@@ +j)@@ +n-1); cout<<sum<<endl; } }@@ return0; }  
c -1
h -1
structpatient { charnum[10]; intage; structpatient*next; }; intn; structpatient*@@ creat@@ (void) { structpatient*@@ head; structpatient*@@ p1,*p2; intnum@@ =1; head=NULL; while(@@ num@@ <=@@ n) { p1=(struct@@ patient@@ *)malloc(LEN); scanf("%s%d",@@ p1->num,&p1->@@ age); if(num@@ ==1) head=p1; else p2->next=p1; p2=p1; num++; } p2->next=NULL; return(head); } intmain() { structpatient*@@ pt@@ ,*@@ p,*@@ pre@@ ; inti,@@ max,@@ num=0; scanf("%d",&n); pt@@ =@@ creat@@ (); for(p=@@ pt@@ ;p@@ ;@@ p=p->next) { if(p->@@ age@@ >=60) num++; } for(i=1;i<=@@ num;i++) { max=@@ 59@@ ; for(p=@@ pt@@ ;p@@ ;@@ p=p->next) { if(max<@@ p->age@@ ) max=@@ p->@@ age; } for(p=@@ pre@@ =@@ pt@@ ;p@@ ;@@ p=p->next) { if(p->@@ age@@ !=@@ max) pre@@ =p; else break; } printf("%s\n",p->@@ num); if(p==@@ pt@@ ) pt@@ =p@@ ->next; else pre@@ ->next=@@ p@@ ->next; } for(p=@@ pt@@ ;p@@ ;@@ p=p->next) printf("%s\n",p->@@ num); return0; }  
c -1
h -1
0

int@@ factorize@@ (intn,int@@ j) { int@@ F@@ =1; for(@@ ;j<=@@ sqrt(n@@ );j++) if(n@@ %j==0) F@@ +=@@ factorize@@ (n@@ /j,j); return@@ F@@ ; } intmain() { inti,@@ m,@@ n@@ [1000]; scanf("%d",&m); for(i=0;i<m;i++) scanf("%d",&@@ n@@ [i]); for(i=0;i<m;i++) printf("%d\n",@@ factorize@@ (n@@ [i],@@ 2)); return0; }  
c -1
h -1
intmain() { intm,@@ i,j; scanf("%d",&m); struct@@ Bookinfo { intnumber; char@@ auther@@ [27]; }; struct@@ Bookinfo@@ a[1000]; for(i=0;i<m;i++) scanf("%d%s",&@@ a[i].@@ number,@@ a[i].@@ auther@@ ); intcount@@ [26]={0},@@ max,@@ record@@ ; for(i=0;i<m;i++) { intk; k=strlen(@@ a[i].@@ auther@@ ); for(j=0;j<k;j++) { count[@@ a[i].@@ auther@@ [j]@@ -'A']++; } } max=count@@ [0]; for(i=0;i<26;i++) if(count@@ [i]>=@@ max) { max=count@@ [i]; record@@ =i; } printf("%c\n%d\n",@@ record@@ +'A',@@ max); for(i=0;i<m;i++) { intn; n=strlen(@@ a[i].@@ auther@@ ); for(j=0;j<n;j++) if(a[i].@@ auther@@ [j]==@@ record@@ +'A'@@ ) { printf("%d\n",@@ a[i].@@ number); break; } } }  
c -1
h -1
0

voidmain() { inta[@@ 15]; scanf("%d",&a[0]); inti=1; intk=0; while(@@ a[i-1]@@ !=0) { scanf("%d",&a[i]); k=k+1; i++; } intj; intn=0; for(i=0;i<=k-1;i++) { for(j=0;j<=@@ k@@ -1;j++) { if(a[i]==2*@@ a[j]) { n=n+1; } } } printf("%d",n); }  
c -1
h -1
intmain() { inta[16],@@ i,@@ b,@@ j,k,@@ m; a[1]@@ =1; while(@@ a[1]@@ !=-1) { i=1; m=0; while(cin>>@@ b) { a[i]=@@ b; if(a[i]@@ ==0||@@ a[i]@@ ==-1) break; i=i+1; } for(j=1;j<=@@ i-1;j++) { for(k=1;k<=@@ i-1;k++) { if(a[j]==2*@@ a[k]) m++; } } if(a[i]@@ !=-1) cout<<@@ m@@ <<endl; } return0; }  
c -1
h -1
1


structstudent {intnum; chars[@@ 26]; }stu[@@ 999]; intmain() {@@ intm,@@ a[@@ 26]={0},@@ i,j,@@ max,@@ k,@@ l=0; scanf("%d",&m); for(i=0;i<m;i++) scanf("%d%s",&@@ stu[i].@@ num,@@ stu[i].@@ s); for(i=0;i<26;i++) for(k=0;k<@@ m;k++) for(j=0;j<strlen(@@ stu[k].@@ s@@ );j++) if(@@ stu[k].@@ s[j]=='@@ A'+@@ i) a[i]@@ ++; max=@@ a[0]; for(i=1;i<26;i++) if(a[i]>max) {max=@@ a[i];@@ l@@ =i;} printf("%c\n",@@ 'A'+@@ l); printf("%d\n",max); for(i=0;i<m;i++) for(j=0;j<strlen(@@ stu[i].@@ s@@ );j++) if(stu[i].@@ s[j]=='@@ A'+@@ l) {printf("%d\n",@@ stu[i].@@ num); break;} return0; }  
c -1
h -1
intmain() { inta[@@ 17@@ ],@@ i,@@ n; while(1) { n=0; cin>>@@ a[1]; if(a[1@@ ]==@@ -1)break; for(i=2@@ ;@@ ;i++) { cin>>a[i]; if(a[i]==0)break; } for(intj=1;j<=@@ i;j++) for(intk@@ =j+1@@ ;k<=@@ i;k++) if(a[j]==2*@@ a[k]@@ ||@@ a[k@@ ]==2*@@ a[j]) n++; cout<<n<<endl; } return0; }  
c -1
h -1
0

intmain() { charzfc@@ [5@@ ][@@ 600]; inti,@@ p,q,@@ sum=0; doublen,@@ flag; scanf("%lf",&n); for(i=0;i<2@@ ;i++) { scanf("%s",@@ zfc@@ [i]); } p@@ =strlen(@@ zfc@@ [0]); q@@ =strlen(@@ zfc@@ [1]); if(p@@ !=@@ q) { printf("error\n"); return0; } for(i=0;@@ (@@ zfc[0]@@ [i]!=@@ '\0@@ ')&&(@@ zfc[1]@@ [i]!=@@ '\0')@@ ;i++) { if((@@ zfc[0]@@ [i]!='A'&&@@ zfc[0]@@ [i]!='G'&&@@ zfc[0]@@ [i]!='C'&&@@ zfc[0]@@ [i]!='T')@@ ||(@@ zfc[1]@@ [i]!='A'&&@@ zfc[1]@@ [i]!='G'&&@@ zfc[1]@@ [i]!='C'&&@@ zfc[1]@@ [i]!='T')@@ ) { printf("error\n"); return0; } if(@@ zfc[0]@@ [i]==@@ zfc[1]@@ [i]) { sum++; } } flag@@ =1.0*@@ sum/@@ p; if(flag@@ >n) { printf("yes"); } else { printf("no"); } return0; }  
c -1
h -1
voidmain() { voidorder@@ (inta[],intb[],int@@ m,int@@ n); inta[100],b[100]; intm,n,@@ i; scanf("%d%d",&m,&n); for(i=0;i<m;i++) scanf("%d",&a[i]); for(i=0;i<n;i++) scanf("%d",&b[i]); order@@ (a,b,m,n); for(i=0;i<m+@@ n-1;i++) printf("%d",a[i]); printf("%d",a[@@ m+@@ n-1]); } voidorder@@ (inta[],intb[],int@@ m,intn) { inti,j; intt; for(i=0;i<m-1;i++) for(j=0;j<m@@ -i-1;j++) if(a[j]>a[j+1]) { t=a[j]; a[j]=a[j+1]; a[j+1]=@@ t;} for(i=0;i<n-1;i++) for(j=0;j<n@@ -i-1;j++) if(b[j]>b[j+1]) { t=@@ b[j]; b[j]=b[j+1]; b[j+1]=@@ t;} for(i=m;i<@@ m+n;i++) a[i]=b[i-@@ m]; return@@ ;}  
c -1
h -1
0

intmain(){ intn,k,i,j,@@ f@@ =0,@@ s=0,@@ a[@@ 10000]; scanf("%d%d",&n,&k); for(i=1;i<n;i++){ scanf("%d",&a[i]); } for(i=0;i<n;i++){ if(f@@ ==0){ for(j=0;j<i;j++){ if(a[i]+a[j]==@@ k){ printf("yes\n"); f=1; s=1; break; } } } } if(s@@ ==0){ printf("no\n"); } return0; }  
c -1
h -1
intmain() { charstr@@ [300]; char@@ sub@@ [300]; char@@ rep@@ [300]; inti,j,@@ lenstr@@ ,@@ lensub@@ ,@@ judge@@ ,@@ state@@ =0; fgets@@ (@@ str,@@ 300@@ ,@@ stdin@@ ); fgets@@ (@@ sub,@@ 300@@ ,@@ stdin@@ ); fgets@@ (@@ rep@@ ,@@ 300@@ ,@@ stdin@@ ); lenstr@@ =strlen(@@ str@@ )@@ -1; lensub@@ =strlen(@@ sub)@@ -1; for(i=0;i<=@@ lenstr@@ -@@ lensub@@ ;i++) { judge@@ =0; for(j=0;j<@@ lensub@@ ;j++) { judge@@ =@@ judge@@ +(@@ str@@ [i+j@@ ]-@@ sub@@ [j]@@ )*(@@ str@@ [i+j@@ ]-@@ sub@@ [j]); } if(@@ judge@@ ==0) {@@ state@@ =1; break;} } if(@@ state@@ ==1) {@@ for(j=0;j<=i-1;j++) printf("%c",str@@ [j]); for(j=0;@@ rep@@ [j]!=@@ '\n@@ '@@ ;j++) printf("%c",@@ rep@@ [j]); for(j=i@@ +@@ lensub@@ ;j<=@@ lenstr@@ -1;j++) printf("%c",str@@ [j]); } else { for(j=0;j<@@ lenstr@@ ;j++) printf("%c",str@@ [j]); } return0; }  
c -1
h -1
0

intmain(){ intn,@@ m=0,@@ sz@@ [100],@@ i,j,@@ sz2@@ [100],@@ e; char@@ zf@@ [100][@@ 20],@@ f[@@ 20],@@ zf2@@ [100][@@ 20]; scanf("%d",&n); for(i=0;i<n;i++){ scanf("%s",@@ zf@@ [i]); scanf("%d",&sz[i]); } for(i=0;i<n;i++){ if(sz[i]@@ >=60){ n--; strcpy(@@ zf2@@ [m@@ ],@@ zf@@ [i]); sz2@@ [m]=@@ sz[i]; m++; for(j=i;j<=@@ n;j++){ strcpy(@@ zf@@ [j],@@ zf@@ [j+1]); sz@@ [j]=@@ sz@@ [j+1]; } i--; } } for(j=1;j<=@@ m@@ ;j++){ for(i=0;i<m@@ -j@@ ;i++){ if(@@ sz2@@ [i]<@@ sz2@@ [i+1@@ ]){ e=@@ sz2@@ [i]; sz2@@ [i]=@@ sz2@@ [i+1]; sz2@@ [i+1]=@@ e; strcpy(@@ f,@@ zf2@@ [i]); strcpy(@@ zf2@@ [i],@@ zf2@@ [i+1]); strcpy(@@ zf2@@ [i+1],@@ f); } } } for(i=0;i<m;i++){ printf("%s\n",@@ zf2@@ [i]); } for(i=0;i<n;i++){ printf("%s\n",@@ zf@@ [i]); } return0; }  
c -1
h -1
intmain() { intn,i,j,k,@@ p,@@ t; inta[@@ 20002@@ ]; cin>>n; cin>>a[0]; p=0; for(i=1;i<=n-1;i++) { cin>>k; t=0; for(j=0;j<=@@ p@@ ;j++) { if(a[j]==@@ k) { t=1; break; } } if(t@@ ==1)@@ continue; else { p=p@@ +1; a[p@@ ]=@@ k; } } cout<<a[0]; for(i=1;i<=@@ p@@ ;i++) { cout<<""<<a[i]; } cout<<endl; return0; }  
c -1
h -1
0

const@@ intN@@ =@@ 110@@ ; inta[@@ N@@ ][@@ N]; intmain() { inti,j,k; intx; intm,n; scanf("%d",&x); while(@@ x@@ --) { memset(a,0,@@ sizeof(a)); scanf("%d%d",&m,&n); for(i=0;i<m;i++) { for(j=0;j<n;j++) { scanf("%d",&a[i][j]); } } intsum=0; if(m==1) { for(i=0;i<n;i++) sum+=@@ a[0][i]; } elseif(n@@ ==1) { for(i=0;i<m;i++) sum+=@@ a[i][0]; } else { for(i=0;i<n;i++) { sum+=@@ a[0][i]; sum+=@@ a[m-1]@@ [i]; } for(i=1;i<m-1;i++) { sum+=@@ a[i][0]; sum+=@@ a[i][n-1]; } } printf("%d\n",sum); } return0; }  
c -1
h -1
intmain() { structstu { charid@@ [@@ 9@@ ]; int@@ chn@@ ; intmath; int@@ both@@ ; structstu*next; }; intn,i; scanf("%d",&n); structstu@@ *head,*p1,*p2; for(i=0;i<n;i++) { if(i==0) { head=(struct@@ stu*)malloc(sizeof(structstu)); p1=head; } else { p1->next@@ =(struct@@ stu*)malloc(sizeof(structstu)); p1=p1->next; } scanf("%s%d%d",@@ p1->id,&p1->@@ chn@@ ,&p1->math); p1->@@ both@@ =p1->@@ chn@@ +p1->@@ math; } p1->next=NULL; int@@ max; for(i=0;i<3;i++) { max=@@ head->@@ both@@ ; p1=head; do { p1=p1->next; if(max<@@ p1->@@ both@@ ) { max=@@ p1->@@ both@@ ; p2=p1; } }while(@@ p1->next@@ !=NULL); printf("%s%d\n",@@ p2->@@ id,@@ p2->@@ both@@ ); p2->@@ both@@ =0; } return0; }  
c -1
h -1
0

intmain() { inti,j,@@ a,b,@@ c=0; doublen; scanf("%lf",&n); char@@ A[@@ 500],@@ B@@ [500]; scanf("%s%s",@@ A@@ ,@@ B@@ ); a=strlen(@@ A@@ ); b=strlen(@@ B@@ ); if(a!=@@ b) { printf("error"); return0; } for(j=0;j<a@@ ;j++) { if(A@@ [j]==@@ B@@ [j]) { c++; } if(A@@ [j]!='@@ A'&&@@ A@@ [j]!='@@ G'&&@@ A@@ [j]!='@@ C'&&@@ A@@ [j]!='@@ T@@ ') { printf("error"); return0; } if(@@ B@@ [j]!='@@ A'&&@@ B@@ [j]!='@@ G'&&@@ B@@ [j]!='@@ C'&&@@ B@@ [j]!='@@ T@@ ') { printf("error"); return0; } } if((@@ 1.0*@@ c@@ /@@ a)@@ >=@@ n) { printf("yes"); }else{ printf("no"); } return0; }  
c -1
h -1
voidmain() { char@@ S@@ [100],@@ sub@@ [100],@@ replace@@ [100]; scanf("%s",@@ S@@ ); scanf("%s",@@ sub); scanf("%s",@@ replace); inta,b,c,@@ i,j; a=strlen(@@ S@@ ); b=strlen(@@ sub); c=strlen(@@ replace); intk,@@ m; for(i=0;i<a;i++) { if(@@ S@@ [i]==@@ sub@@ [0]) { for(j=0;j<@@ b;j++) { if(@@ S@@ [i+j]!=@@ sub@@ [j]@@ )break; } if(@@ S@@ [i+@@ b@@ -1@@ ]==@@ sub@@ [b@@ -1@@ ]) { m=i; for(k=0;k<@@ m;k++) printf("%c",@@ S@@ [k]); printf("%s",@@ replace); for(k=i+@@ b@@ ;k<@@ a@@ ;k++) printf("%c",@@ S@@ [k]); break; } } } if(i==@@ a) printf("%s",@@ S@@ ); }  
c -1
h -1
0

intmain() { intn,m,@@ a[100][100],@@ i,j,@@ num@@ =1,@@ k,@@ l,@@ t; cin>>n>>m; for(i=0;i<n;i++) { for(j=0;j<m;j++) { cin>>a[i][j]; } } if(m==1) { for(i=0;i<n;i++) { for(j=0;j<m;j++) { cout<<a[i][j]<<endl; } } return0; } k=0; l=0; while(1) { if(k@@ <n@@ &&@@ l<@@ m) cout<<@@ a[k@@ ][l@@ ]<<endl; if(l@@ !=0) { k@@ ++;@@ l@@ --@@ ;@@ continue; } if(l@@ ==0) { t=@@ k; k=0; l=@@ t@@ +1; } while(k@@ >=@@ n@@ ||@@ l@@ >=@@ m) { k++; l@@ --; if(l@@ ==0) { t=@@ k; k=0; l=@@ t@@ +1; } if(l@@ +k@@ ==@@ m+@@ n) { return0; } } } }  
c -1
h -1
intmain() { intn,a[@@ 20000@@ ],i,j,@@ f; scanf("%d%d",&@@ n,@@ a); printf("%d",@@ *@@ a); for(i=1;i<n;i++) { f=0; scanf("%d",a@@ +i); for(j=0;j<i;j++) { if(@@ *(a+i)@@ ==@@ *(a@@ +j@@ )) f=1; } if(f@@ ==0) printf("%d",@@ *(a@@ +i)); elsecontinue; } return0; }  
c -1
h -1
0

intmain() { chars[@@ 260@@ ],@@ s1@@ [260],@@ s2@@ [260],@@ s3@@ [260@@ ]; inti,j,k,l,@@ h,@@ len,@@ len1,len2@@ ; gets(s); gets(@@ s1); gets(@@ s2); len@@ =strlen(s); len1=strlen(@@ s1); len2=strlen(@@ s2); for(i=0,@@ h@@ =0;i<@@ len@@ ;i++,@@ h++) { s3@@ [h@@ ]=@@ s[i]; if(s[i]==@@ s1@@ [0]) { int@@ e=1; for(j=0@@ ,k@@ =i@@ ;j<@@ len1@@ ;j++@@ ,k++) { if(s@@ [k]@@ !=@@ s1@@ [j]) { e=0; break; } } if(e@@ ) { for(l=0;l<@@ len2@@ ;@@ l@@ ++,@@ h++) { s3@@ [h@@ ]=@@ s2@@ [l]; } h@@ --; i@@ =i+@@ len1@@ -1; s1@@ [0]@@ ='@@ .@@ '; } } } s3@@ [@@ len@@ -@@ len1@@ +len2@@ ]='\0'; printf("%s",@@ s3); return0; }  
c -1
h -1
main() { intn,i,j,@@ max,@@ m,@@ k; scanf("%d",&n); static@@ int@@ hight@@ [25],@@ num[@@ 25]; for(i=0;i<=@@ n-1@@ ;i++)@@ scanf("%d",&@@ hight@@ [i]); num@@ [0]=1; for(i=1;i<=n-1;i++) { for(j=i-1;j>=0;j--) { m=0; if(@@ hight@@ [j]>=@@ hight@@ [i]) { m=@@ num@@ [j]; break; } } if(j==@@ -1)@@ num[i]@@ =1; for(k=j@@ -1@@ ;k>=0@@ ;k--) { if(@@ hight@@ [k]@@ >=@@ hight@@ [i]) { if(num@@ [k]@@ >@@ m)@@ m=@@ num@@ [k]; } } if(num@@ [i]@@ ==0)@@ num[i]=@@ m@@ +1; } max=@@ num[@@ n-1]; for(i=n-2;i>=0;i--) { if(num@@ [i]@@ >max)max=@@ num[i]; } printf("%d\n",max); return0; }  
c -1
h -1
0

structpatient {@@ charid@@ [11]; intage@@ ,@@ seq@@ ; structpatient*next; }; main() {@@ intn,@@ n1@@ =0,@@ n2@@ =0,@@ i,j,@@ m,@@ at@@ ; charid[10]; structpatient*@@ head1@@ ,*@@ head2@@ ,*@@ p11@@ ,*@@ p12@@ ,*@@ p21@@ ,*@@ p22@@ ,*@@ t@@ ,*@@ q; scanf("%d",&n); head1@@ =NULL; head2@@ =NULL; for(i=0;i<n;i++) { scanf("%s%d",@@ id,&@@ at@@ ); if(@@ at@@ >=60) {if(@@ head1@@ ==NULL) { head1@@ =(struct@@ patient*)malloc(sizeof(structpatient)); strcpy(@@ head1@@ ->id,@@ id); head1@@ ->age=@@ at@@ ; head1@@ ->next=NULL; } else {@@ p11@@ =(struct@@ patient*)malloc(sizeof(structpatient)); p11@@ ->age=@@ at@@ ; strcpy(@@ p11@@ ->id,@@ id); for(@@ t=@@ head1@@ ,@@ q=@@ t@@ ;t@@ !=NULL;@@ q=@@ t,@@ t=t@@ ->next) {@@ if(t@@ ->age@@ <@@ at@@ &&@@ t@@ !=@@ head1@@ ) { q@@ ->next=@@ p11@@ ; p11@@ ->next=@@ t; break; } if(t@@ ->age@@ <@@ at@@ &&@@ t@@ ==@@ head1@@ ) { p11@@ ->next=@@ head1@@ ; head1@@ =@@ p11@@ ; break; } } if(t@@ ==NULL) { q@@ ->next=@@ p11@@ ; p11@@ ->next=NULL; } } } if(@@ at@@ <60) {if(@@ head2@@ ==NULL) { head2@@ =(struct@@ patient*)malloc(sizeof(structpatient)); strcpy(@@ head2@@ ->id,@@ id); head2@@ ->age=@@ at@@ ; head2@@ ->next=NULL; p22@@ =@@ head2@@ ; } else { p21@@ =(struct@@ patient*)malloc(sizeof(structpatient)); p21@@ ->age=@@ at@@ ; strcpy(@@ p21@@ ->id,@@ id); p22@@ ->next=@@ p21@@ ; p21@@ ->next=NULL; p22@@ =@@ p21@@ ; } } } for(@@ t=@@ head1@@ ,@@ q=@@ t@@ ;t@@ !=NULL;@@ q=@@ t,@@ t=t@@ ->next@@ ); q@@ ->next=@@ head2@@ ; for(@@ t=@@ head1@@ ;t@@ ->next@@ !=NULL;@@ t=t@@ ->next) printf("%s\n",@@ t@@ ->id); printf("%s",@@ t@@ ->id); }  
c -1
h -1
structstudent { int@@ stuID@@ ; intyuwen; intshuxue; int@@ zongfen; }stu[100000]; intmain() { inti,n,@@ j,@@ x,@@ str@@ ; scanf("%d",&n); for(i=0;i<n;i++) { scanf("%d%d%d",&stu[i].@@ stuID@@ ,&stu[i].@@ yuwen@@ ,&stu[i].@@ shuxue); stu[i].@@ zongfen@@ =stu[i].@@ yuwen+stu[i].@@ shuxue; } for(i=0;i<3;i++) { for(j=0;j<n-1;j++) { if(stu[j].@@ zongfen@@ >@@ stu[j+1].@@ zongfen@@ ||(@@ (@@ stu[j].@@ zongfen@@ ==@@ stu[j+1].@@ zongfen@@ )&&(@@ stu[j].@@ stuID@@ <@@ stu[j+1].@@ stuID@@ )@@ )) { x=@@ stu[j].@@ zongfen; stu[j].@@ zongfen@@ =stu@@ [j+1].@@ zongfen; stu[j+1].@@ zongfen@@ =@@ x; str@@ =@@ stu[j].@@ stuID@@ ; stu[j].@@ stuID@@ =stu@@ [j+1].@@ stuID@@ ; stu[j+1].@@ stuID@@ =@@ str@@ ; } } printf("%d%d\n",stu[@@ n-1@@ -i@@ ].@@ stuID@@ ,@@ stu[@@ n-1@@ -i@@ ].@@ zongfen@@ ); } return0; }  
c -1
h -1
0

intmain() { intk,i,j,@@ max,@@ a[@@ 30@@ ]={0},@@ limit@@ [@@ 30@@ ]={0},@@ num[@@ 30]={0}; scanf("%d",&k); for(i=k@@ -1;i>=0;i--) { scanf("%d",&a[i]); } num@@ [0]=1; limit@@ [0]=@@ a[0]; for(i=1;i<k;i++) { max=1; for(j=0;j<i;j++) { if((@@ a[i]@@ >=@@ limit@@ [j]@@ )&&(@@ (@@ num[j]@@ +1)@@ >=@@ max@@ )) { max=@@ num@@ [j]+1; } } limit@@ [i]=@@ a[i]; num[i]=@@ max; } max=0; for(i=0;i<k;i++) { if(num@@ [i]@@ >max)max=@@ num[i]; } printf("%d",max); return0; }  
c -1
h -1
intmain() { intn,@@ h@@ [100],@@ w@@ =0,@@ q@@ ;@@ inta[100][100]; cin>>n; for(inti=1;i<=n;i++) {@@ h@@ [i]@@ =0;@@ for(intj=1;j<=@@ n;j++) { cin>>a[i][j]; if(a[i][j]==0) h@@ [i]++; }} for(inti=1;i<=n;i++) {@@ if(h@@ [i]!=0) {@@ q=@@ h@@ [i];@@ break;}} for(inti=1;i<=n;i++) { if(h@@ [i]!=0) {@@ w@@ ++;@@ }@@ elsecontinue; } intm@@ =(@@ q@@ -2)*(@@ w@@ -2); cout<<@@ m; }  
c -1
h -1
0

intm,n; inta[100],b[100]; int@@ ans@@ [@@ 200]; voidread@@ (inta[],intb[]) { cin>>m; cin>>n; for(inti=1;i<=@@ m;i++) cin>>a[i]; for(inti=1;i<=n;i++) cin>>b[i]; } voidsort@@ (inta[],int@@ m) { inttemp; for(inti=1;i<@@ m;i++) { for(intj=i+1@@ ;j<=@@ m;j++) { if(a[i]>a[j]) { temp=a[i]; a[i]=a[j]; a[j]=@@ temp; } } } } void@@ add@@ (inta[],intb[]) { for(inti=1;i<=@@ m;i++) ans@@ [i]=@@ a[i]; for(inti=1;i<=n;i++) ans@@ [m@@ +i]=b[i]; } voidout@@ (inta[],int@@ m) { cout<<@@ a[1]; for(inti=2;i<=@@ m;i++) cout<<'@@ '@@ <<@@ a[i]; } intmain() { read@@ (a,b); sort@@ (a,m); sort@@ (b,n); add@@ (a,b); out@@ (@@ ans@@ ,@@ m+@@ n); return0; }  
c -1
h -1
voidmain() {@@ inta[@@ 20001]; inti,k,@@ j=0,@@ n,@@ fil@@ =@@ 101@@ ,@@ m=0,@@ g=0; scanf("%d",&n); for(i=0;i<n;i++) {@@ scanf("%d",&a[i]);} k=0; a[n@@ ]=@@ 101@@ ; while(k@@ <n) { for(i=0;i<k;i++) { if(a[i]==@@ a[k]) k++; } for(i=0;i<k;i++) { if(a[i]==@@ a[k]) k++; } if(k==0) printf("%d",@@ a[k]@@ ),@@ k++; else if(k@@ <n@@ &&k@@ >0) printf("%d",@@ a[k]@@ ),@@ k@@ ++,@@ m++; } }  
c -1
h -1
0

intmain() { intn,i,j,k; scanf("%d\n",&n); structbook { intnum; charname[26]; }@@ book[999]; for(i=0;i<n;i++) {@@ scanf("%d@@ %s@@ \n",&@@ book[i].@@ num,@@ book[i].name); } struct@@ author { char@@ l; int@@ count; }@@ au@@ [26]; for(i=0;i<26;i++) {@@ au@@ [i].@@ l=@@ 65@@ +@@ i; au@@ [i].@@ count=0; } for(i=0;i<26;i++) {@@ for(j=0;j<n;j++) {@@ for(k=0;k<26;k++) {if(@@ au@@ [i].@@ l@@ ==@@ book[j].@@ name@@ [k]) {@@ au@@ [i].@@ count++; break; } } } } intmax=0; for(i=1;i<26;i++) {if(@@ au@@ [max@@ ].@@ count@@ <@@ au@@ [i].@@ count@@ ) max=i; } printf("%c\n%d\n",@@ au@@ [max@@ ].@@ l,@@ au@@ [max@@ ].@@ count); for(j=0;j<n;j++) {@@ for(k=0;k<26;k++) { if(au@@ [max@@ ].@@ l@@ ==@@ book[j].@@ name@@ [k]) {printf("%d\n",@@ book[j].@@ num); break; } } } return0; }  
c -1
h -1
intmain() { intk,i,j,@@ t,@@ d[@@ 25],@@ h@@ [25]; scanf("%d",&k); for(i=0;i<k;i++) {scanf("%d",&@@ h@@ [i]);} for(i=0;i<k;i++) { t=0; for(j=0;j<i;j++) { if(h@@ [j]>=@@ h@@ [i]) { if(d@@ [j]>@@ t)@@ t=@@ d@@ [j]; } } d[i]=@@ t@@ +1; } for(i=0;i<k;i++) { if(d@@ [i]>@@ t)@@ t=@@ d[i]; } printf("%d\n",t); return0; }  
c -1
h -1
0

intmain() { char@@ book[@@ 1000][@@ 20@@ ]={'\0'},@@ name@@ [1000][@@ 30@@ ]={'\0'}; int@@ length@@ ,@@ n,i,j,@@ number@@ [@@ 30@@ ]={0},@@ memory@@ ,@@ largest@@ ,@@ temp; scanf("%d",&n); for(i=0;i<n;i++) { scanf("%s%s",@@ book@@ [i],@@ name@@ [i]); } for(i=0;i<n;i++) { length@@ =strlen(@@ name@@ [i]); for(j=0;j<@@ length@@ ;j++) { temp=@@ name@@ [i][j]@@ -'A'; number@@ [@@ temp@@ ]@@ +=1; } } largest@@ =0; for(i=0;i<26;i++) { if(@@ number@@ [i]>@@ largest@@ ) { largest@@ =@@ number@@ [i]; memory@@ =i; } } printf("%c\n%d\n",@@ 'A'+@@ memory@@ ,@@ number@@ [@@ memory@@ ]); for(i=0;i<n;i++) { length@@ =strlen(@@ name@@ [i]); for(j=0;j<@@ length@@ ;j++) { if(name[i][j]=='@@ A'+@@ memory@@ ) { printf("%s\n",@@ book@@ [i]); } } } return0; }  
c -1
h -1
main() { chara[100@@ ]={0},@@ b[100@@ ]={0},@@ c@@ [100]={0}; gets(a); gets(b); gets(c); int@@ lb@@ ,@@ la@@ ; lb@@ =strlen(b); la@@ =strlen(a); intcount=0; for(inti=0;i<=@@ la@@ -@@ lb@@ ;i++) { count=0; for(intj=0;j<@@ lb@@ ;j++) { if(a@@ [i+j]!=@@ b[j]) { count@@ =1; break; } } if(count@@ ==0) { a[i]@@ =1; for(intj=1;j<@@ lb@@ ;j++) a[i+j@@ ]=@@ 2; break; } } for(inti=0;i<@@ la;i++) { if(a[i]@@ ==1)@@ printf("%s",@@ c); if(a[i]==@@ 2); if(a[i]!=@@ 2@@ &&a[i]@@ !=1) printf("%c",a[i]); } }  
c -1
h -1
0

intmain() { intn,k,@@ a[1000],@@ q=0,@@ w@@ =0; cin>>n>>k; for(inti=0;i<n;i++) { cin>>a[i]; } do { for(inti=@@ q@@ +1@@ ;i<n;i++) { if(a[@@ q@@ ]+@@ a[i]@@ ==k) { cout<<"yes"; w@@ ++; break; } } q++; } while(@@ w@@ !=1@@ &&@@ q@@ <@@ n-1); if(w@@ ==0)@@ cout<<"no"; return0; }  
c -1
h -1
introw,col; intarray[@@ 101][101]; int(*p)@@ [@@ 101@@ ]=@@ array@@ ; intf@@ (intm,int@@ n){ inti; if(m==@@ row-1@@ &&@@ n==@@ col@@ -1) { cout<<@@ *(*(p@@ +m@@ )+@@ n); return0; } for(i=0;@@ m@@ +i@@ <=row-1@@ &&n@@ -i@@ >=0@@ ;i++) cout<<@@ *(*(p@@ +m@@ +i)@@ +@@ n-i@@ )<<endl; if(n@@ <col@@ -1) return@@ f(@@ 0,@@ n@@ +1); if(n@@ >=@@ col@@ -1) return@@ f(@@ m@@ +1,@@ col@@ -1); } intmain(){ inti,j; cin>>row>>col; for(i=0;i<row;i++) for(j=0;j<col;j++) cin>>array[i][j]; f(@@ 0,@@ 0); return0; }  
c -1
h -1
0

structbook { charwriter@@ [@@ 32@@ ]; intid; structbook*next; }; structbook*@@ create@@ (intm) { structbook@@ *head@@ =NULL@@ ,*@@ p1,*p2; inti; p1=p2=(struct@@ book@@ *)malloc(@@ Len@@ ); scanf("%d%s",&p1->@@ id,@@ p1->@@ writer); p1->next=NULL; head=p1; p2=p1; for(i=1;i<m;i++) { p1=(structbook@@ *)malloc(@@ Len@@ ); scanf("%d%s",&p1->@@ id,@@ p1->@@ writer); p1->next=NULL; p2->next=p1; p2=p1; } returnhead; } intmain() { structbook@@ *head,*p; intm,@@ i@@ ,*@@ q1@@ ,*@@ q2@@ ,j; q1=@@ (int*)malloc(@@ 26@@ *sizeof(int@@ *@@ )); q2@@ =@@ q1@@ ; for(i=0;i<26;i++) q1@@ [i]=0; q1=@@ q2@@ ; scanf("%d",&m); head=@@ create@@ (m); p=head; for(i=0;i<m;i++) { for(j=0;@@ p->@@ writer@@ [j]!='\0';j++) q1@@ [@@ p->@@ writer@@ [j]@@ -'A']++; p=p->next; } q1=@@ q2@@ ; intmax=0; char@@ maxm@@ ='A'; for(i=0;i<26;i++) if(max<@@ q1@@ [i]@@ ){max=@@ q1@@ [i];@@ maxm@@ =i@@ +'A'@@ ;} printf("%c@@ \n@@ %d",@@ maxm@@ ,max); for(i=0,@@ p=@@ head@@ ;i<@@ m@@ ;i++,@@ p=p->next) for(j=0;@@ p->@@ writer@@ [j]!='\0';j++) if(p->@@ writer@@ [j]==@@ maxm@@ )@@ printf("\n%d",@@ p->@@ id); }  
c -1
h -1
intmain(intargc,char*argv[]) { intyear,month,@@ date; intm=0,@@ n=0; scanf("%d%d%d",&@@ year,@@ &@@ month,@@ &@@ date@@ ); if(month==1) { n=@@ date; } m=m+@@ 31; if(month==2) { n=@@ m+@@ date; } if((year%4==0&&year%100!=0)||(year%400==0)) { m=m+@@ 29; } else { m=m+@@ 28; } if(month==3) { n=@@ m+@@ date; } m=m+@@ 31; if(month==@@ 4) { n=@@ m+@@ date; } m=m+@@ 30; if(month==@@ 5) { n=@@ m+@@ date; } m=m+@@ 31; if(month==@@ 6) { n=@@ m+@@ date; } m=m+@@ 30; if(month==@@ 7) { n=@@ m+@@ date; } m=m+@@ 31; if(month==8) { n=@@ m+@@ date; } m=m+@@ 31; if(month==@@ 9) { n=@@ m+@@ date; } m=m+@@ 30; if(month==@@ 10) { n=@@ m+@@ date; } m=m+@@ 31; if(month==@@ 11) { n=@@ m+@@ date; } m=m+@@ 30; if(month==@@ 12) { n=@@ m+@@ date; } printf("%d\n",n); return0; }  
c -1
h -1
0

intmain() { intyear,month,@@ monthd@@ [@@ 12]={31,@@ 28,31,30,31,30,31,31,30,31,30,31@@ },@@ day,@@ di@@ =0,@@ i; scanf("%d%d%d",&year,&month,&day); for(i=1;i<month;i++) { di@@ =@@ di@@ +@@ monthd@@ [i-1]; } di@@ =@@ di@@ +day; if((@@ year%@@ 4)@@ !=0@@ ||(@@ year%@@ 400@@ )@@ !=0) { printf("%d\n",@@ di@@ ); } else printf("%d",@@ di@@ +1); return0; }  
c -1
h -1
intmain() { intx[@@ 16@@ ],i,j,@@ k; for(i=0;i<@@ 15;i++) x@@ [i]=0; for(i=0;;i++) { cin>>@@ x[i]; if(x@@ [i]==@@ -1) break; if(x@@ [i]==0) { intt=0; for(j=0;j<i;j++) for(k=0;k<i;k++) if(x@@ [j]==2*@@ x@@ [k]) { t++; } cout<<t@@ <<endl; i@@ =-1; } } return0; }  
c -1
h -1
0

intmain() { intk,m,n,i,j,@@ jz@@ [100][100],@@ sum=0; cin>>k; while(@@ cin>>m>>@@ n) { for(i=0;i<m;i++) { for(j=0;j<n;j++) cin>>@@ jz@@ [i][j]; } if(m@@ ==1&&n@@ ==1) sum=@@ jz@@ [0][@@ 0]; elseif(m@@ ==1) { for(i=0;i<n;i++) sum=sum+@@ jz@@ [0]@@ [i]; } elseif(m@@ ==1) { for(i=0;i<n;i++) sum=sum+@@ jz@@ [0]@@ [i]; } else { for(i=0;i<n;i++) sum=sum+@@ jz@@ [0]@@ [i]+@@ jz@@ [m@@ -1]@@ [i]; for(i=1;i<m-1;i++) sum=sum+@@ jz@@ [i]@@ [0]+@@ jz@@ [i]@@ [n-1]; } cout<<sum<<endl; sum=0; } return0; }  
c -1
h -1
structstu { intid; int@@ eng@@ ; intmath; intsum; structstu*next; }@@ *head,*p1,*p2; structstu*@@ order@@ (intn) { inti,j,t; p1=head; for(i=0;i<3;i++) { p2=p1->next; for(j=i+1;j<n;j++) {if(@@ p1->@@ sum<@@ p2->@@ sum) { t=@@ p1->id@@ ;@@ p1->id@@ =@@ p2->@@ id@@ ;@@ p2->@@ id@@ =t; t=@@ p1->@@ sum;@@ p1->sum=@@ p2->@@ sum;@@ p2->@@ sum=@@ t; } p2=@@ p2->next@@ ;} p1=p1->next; } returnhead; } voidmain() { intn,i; scanf("%d",&n); p1=@@ head=(struct@@ stu*)malloc(sizeof(structstu)); for(i=0;i<n;i++) { scanf("%d%d%d",&@@ p1->id,&p1->@@ eng@@ ,&p1->math); p1->sum=p1->@@ eng@@ +p1->@@ math; p2=p1; p1=(struct@@ stu*)malloc(sizeof(structstu)); p2->next=p1; } p2->next=NULL; p1=@@ order@@ (n); for(i=0;i<3;i++) { printf("%d%d\n",@@ p1->@@ id,@@ p1->@@ sum); p1=p1->next; } }  
c -1
h -1
0

intmain() { double@@ k; int@@ total1@@ ,@@ total2@@ ; inti,@@ same@@ =0; char@@ h1@@ [@@ 10000]; char@@ h2@@ [@@ 10000]; scanf("%lf",&@@ k); scanf("%s",@@ h1@@ ); scanf("%s",@@ h2@@ ); total1@@ =@@ (int)@@ strlen(@@ h1@@ ); total2@@ =@@ (int)@@ strlen(@@ h2@@ ); if(@@ total1@@ !=@@ total2@@ ){@@ printf("error");@@ return0;} else{@@ for(i=0;i<@@ total1@@ ;i++) { if((@@ h1@@ [i]=='A'||@@ h1@@ [i]=='T'||@@ h1@@ [i]=='C'||@@ h1@@ [i]=='@@ G')&&(@@ h2@@ [i]=='A'||@@ h2@@ [i]=='T'||@@ h2@@ [i]=='C'||@@ h2@@ [i]=='@@ G')) { if(@@ h1@@ [i]==@@ h2@@ [i]@@ ){@@ same@@ ++;} } else{@@ printf("error");@@ return0;} } } if(((@@ double)@@ same@@ /@@ (double)@@ total1@@ )>@@ k){@@ printf("yes");} else{printf("no");} return0; }  
c -1
h -1
intmain() { intn,@@ sum=0,@@ mat@@ [100]; memset(@@ mat@@ ,0,sizeof(@@ mat@@ )); while(@@ scanf("%d",&@@ n@@ ),@@ n@@ !=-1) { if(n@@ ==0) { printf("%d\n",sum); sum=0; memset(@@ mat@@ ,0,sizeof(@@ mat@@ )); } elseif(n@@ >@@ 49@@ ) { mat@@ [n@@ ]=1; if(@@ mat@@ [n@@ >>@@ 1@@ ]) sum++; } else { mat@@ [n@@ ]=1; if(@@ mat@@ [n@@ <<@@ 1@@ ]) sum++; if(!@@ (n@@ &@@ 1@@ )&&@@ mat@@ [n@@ >>@@ 1@@ ]) sum++; } } return0; }  
c -1
h -1
0

intmain(){ intk,@@ n,@@ i,@@ m,@@ x,y,@@ z,@@ c; c=0; scanf("%d",&n); scanf("%d",&k); inta[n]; for(i=0;i<n;i++){ scanf("%d",&(@@ a[i]@@ )); } for(i=0;i<n;i++){ for(x=0;x@@ <n;@@ x@@ ++){ if(x==@@ i){ continue; } if(a[x@@ ]+@@ a[i]==@@ k){ c=1; } } } if(c@@ ==0) { printf("no"); } else { printf("yes"); } return0; }  
c -1
h -1
intmain() { inty,m,d,@@ x; scanf("%d%d%d",&y,&m,&d); if(y%@@ 4==0) if(y%@@ 100==0) if(y%@@ 400@@ ==0){ switch(@@ m){ case1: x=@@ d; break; case2: x=31+@@ d; break; case3: x=31+29@@ +d; break; case4: x=31+29@@ +31+@@ d; break; case5: x=31+29@@ +31+30@@ +d; break; case6: x=31+29@@ +31+30+31+@@ d; break; case7: x=31+29@@ +31+30+31+30@@ +d; break; case8: x=31+29@@ +31+30+31+30+31+@@ d; break; case9: x=31+29@@ +31+30+31+30+31+31+@@ d; break; case10: x=31+29@@ +31+30+31+30+31+31+30@@ +d; break; case11: x=31+29@@ +31+30+31+30+31+31+30+31+@@ d; break; case12: x=31+29@@ +31+30+31+30+31+31+30+31+30@@ +d; break;} printf("%d\n",@@ x);} else{ switch(@@ m){ case1: x=@@ d; break; case2: x=31+@@ d; break; case3: x=31+28@@ +d; break; case4: x=31+28@@ +31+@@ d; break; case5: x=31+28@@ +31+30@@ +d; break; case6: x=31+28@@ +31+30+31+@@ d; break; case7: x=31+28@@ +31+30+31+30@@ +d; break; case8: x=31+28@@ +31+30+31+30+31+@@ d; break; case9: x=31+28@@ +31+30+31+30+31+31+@@ d; break; case10: x=31+28@@ +31+30+31+30+31+31+30@@ +d; break; case11: x=31+28@@ +31+30+31+30+31+31+30+31+@@ d; break; case12: x=31+28@@ +31+30+31+30+31+31+30+31+30@@ +d; break;} printf("%d\n",@@ x);} else{ switch(@@ m){ case1: x=@@ d; break; case2: x=31+@@ d; break; case3: x=31+29@@ +d; break; case4: x=31+29@@ +31+@@ d; break; case5: x=31+29@@ +31+30@@ +d; break; case6: x=31+29@@ +31+30+31+@@ d; break; case7: x=31+29@@ +31+30+31+30@@ +d; break; case8: x=31+29@@ +31+30+31+30+31+@@ d; break; case9: x=31+29@@ +31+30+31+30+31+31+@@ d; break; case10: x=31+29@@ +31+30+31+30+31+31+30@@ +d; break; case11: x=31+29@@ +31+30+31+30+31+31+30+31+@@ d; break; case12: x=31+29@@ +31+30+31+30+31+31+30+31+30@@ +d; break;} printf("%d\n",@@ x);} else{ switch(@@ m){ case1: x=@@ d; break; case2: x=31+@@ d; break; case3: x=31+28@@ +d; break; case4: x=31+28@@ +31+@@ d; break; case5: x=31+28@@ +31+30@@ +d; break; case6: x=31+28@@ +31+30+31+@@ d; break; case7: x=31+28@@ +31+30+31+30@@ +d; break; case8: x=31+28@@ +31+30+31+30+31+@@ d; break; case9: x=31+28@@ +31+30+31+30+31+31+@@ d; break; case10: x=31+28@@ +31+30+31+30+31+31+30@@ +d; break; case11: x=31+28@@ +31+30+31+30+31+31+30+31+@@ d; break; case12: x=31+28@@ +31+30+31+30+31+31+30+31+30@@ +d; break;} printf("%d\n",@@ x);} return0; }  
c -1
h -1
0

intmain() { int@@ row@@ =0,@@ col@@ =0; inta[@@ 101][101]; cin>>row>>col; for(inti=0;i<row;i++) for(intj=0;j<col;j++) cin>>a[i][j]; for(inti=0;i<@@ col;i++) { cout<<*(*(a@@ )@@ +i)@@ <<endl; for(intj=1@@ ;i@@ -j@@ >=0@@ &&j@@ <row@@ ;j++) cout<<*(*(a@@ +j)@@ +i-j@@ )<<endl; } for(inti=1;i<@@ row;i++) { cout<<@@ *(*(a+i)@@ +col@@ -1)@@ <<endl; for(intj=1@@ ;i@@ +j@@ <row@@ &&j@@ <=col@@ -1;j++) cout<<*(*(a@@ +i@@ +j)@@ +col@@ -1-j@@ )<<endl; } return0; }  
c -1
h -1
int@@ aa@@ (int@@ high@@ [@@ ],intn,@@ intk,@@ int@@ lh@@ ,int@@ point@@ ) { int@@ remax@@ =0,@@ a=0,@@ i; if(@@ point@@ ==@@ k@@ -1) { if(@@ lh@@ >=@@ high@@ [k-1]@@ )@@ return1; else@@ return0; } else { for(i=@@ point@@ ;i<@@ k;i++) if(@@ high@@ [i]<=@@ lh@@ ) { a=@@ aa@@ (@@ high@@ ,@@ n@@ +1,@@ k,@@ high@@ [i],@@ i@@ +1)@@ +1; if(a@@ >@@ remax@@ )@@ remax@@ =@@ a; } return@@ remax@@ ; } } voidmain() { inti,@@ high@@ [25],@@ k; scanf("%d",&k); for(i=0;i<@@ k;i++)@@ scanf("%d",&@@ high@@ [i]); printf("%d",@@ aa@@ (@@ high@@ ,@@ 0,@@ k,@@ 32767@@ ,@@ 0@@ )); }  
c -1
h -1
0

int@@ shuzu@@ [@@ 20000]; intmain(){ intn,@@ x; scanf("%d",&n); for(intt@@ =0;t@@ <n;@@ t++){ scanf("%d",&@@ shuzu@@ [t@@ ]); } for(intj=0;j<n;j++){ for(inti@@ =j+1@@ ;i<@@ n;i++){ if(shuzu@@ [i]==@@ shuzu@@ [j]){ shuzu@@ [i]=0; } } } for(intm=0;m@@ <n;m++){ if(shuzu@@ [m]@@ !=0){ if(m@@ ==0){ printf("%d",@@ shuzu@@ [m]); } else{ printf("%d",@@ shuzu@@ [m]); } } } return0; }  
c -1
h -1
intmain(){ intn,@@ sz@@ [100][100],@@ r,@@ s,@@ p,q; scanf("%d",&n); for(int@@ row@@ =0;row@@ <n;@@ row++){ for(int@@ col@@ =0;col@@ <n;col@@ ++){ scanf("%d",&(@@ sz[row][col@@ ]@@ )); } } for(int@@ a@@ =0;a@@ <n;@@ a++){ for(int@@ b@@ =0;b@@ <n;b++){ if(@@ sz[a@@ ][b@@ ]==0){ r=@@ a; s=@@ b; break; } else continue; } } for(int@@ c=@@ n-1;@@ c@@ >=0@@ ;c@@ --){ for(int@@ d=@@ n-1;@@ d@@ >=0;@@ d@@ --){ if(sz[@@ c@@ ][@@ d@@ ]==0){ p=@@ c; q=@@ d; break; } else continue; } } int@@ e@@ =(@@ r@@ -@@ p@@ -1)*(@@ q@@ -@@ s@@ -1); printf("%d",@@ e); return0; }  
c -1
h -1
0

intmain() { charstr@@ [@@ 270@@ ],@@ subs@@ [@@ 70@@ ],@@ rep@@ [@@ 70@@ ],@@ *p; cin>>@@ str@@ >>@@ subs@@ >>@@ rep@@ ; p=strstr(@@ str,@@ subs@@ ); if(p@@ !=NULL) for(inti@@ =0;@@ rep@@ [i]!='\0';i++) *p@@ ++@@ =@@ rep@@ [i]; cout<<str@@ <<endl; return0; }  
c -1
h -1
intmain(){ intn,@@ j,@@ i,@@ a1,a2,@@ b1,@@ b2@@ ,@@ t,@@ x; ints@@ [100][100]; scanf("%d",&n); for(j=0;j<n;j++){ for(i=0;i<n;i++){ scanf("%d",&@@ s[j]@@ [i]); } } for(@@ x=0,@@ j@@ =0;j<@@ n;j++){ for(i=0;i<n;i++){ if(s@@ [j]@@ [i]@@ ==0){ a1@@ =j; x++; break; } } if(x@@ !=0){ break;} } for(@@ x=0,@@ j@@ =(@@ n-1)@@ ;j>=0;j--){ for(i=0;i<n;i++){ if(s@@ [j]@@ [i]@@ ==0){ a2@@ =j; x++; break; } } if(x@@ !=0){ break;} } for(@@ x=0,@@ i@@ =0;i<@@ n;i++){ for(j=0;j<n;j++){ if(s@@ [j]@@ [i]@@ ==0){ b1@@ =i; x++; break; } } if(x@@ !=0){ break;} } for(@@ x=0,@@ i@@ =(@@ n-1)@@ ;i>=0;i--){ for(j=0;j<n;j++){ if(s@@ [j]@@ [i]@@ ==0){ b2@@ =i; x++; break; } } if(x@@ !=0){ break;} } t@@ =(@@ a2-a1@@ -1)*(@@ b2-b1@@ -1); printf("%d\n",t); return0; }  
c -1
h -1
0

intn,a,@@ cnt@@ =0,@@ num; int@@ decompose@@ (intx,inty) { inti,@@ xnum@@ =1; if(x==1) return0; if(x==@@ 2) return1; for(i=y@@ ;i<=@@ (int)sqrt(@@ x@@ );i++) if(x%i==0) xnum@@ +=@@ decompose@@ (x/i,i); return@@ xnum@@ ; } intmain() { cin>>n; while(@@ cnt@@ <n) { cin>>a; num=@@ decompose@@ (a,@@ 2); cout<<num<<endl; cnt@@ ++; } return0; }  
c -1
h -1
voidinput@@ (intarray[],int@@ n) {inti; for(i=0;i<=@@ n-2;i++) { scanf("%d",&array@@ [i]);} scanf("%d\n",&@@ array[@@ n-1@@ ]@@ );} voidorder@@ (intarray[],int@@ n) {@@ inti,@@ o@@ ,@@ e; for(i=0;i<=@@ n-2;i++) {@@ for(@@ o@@ =i+1@@ ;@@ o@@ <=@@ n-1;@@ o@@ ++) {if(@@ array@@ [i]>@@ array[@@ o@@ ]){@@ e=@@ array@@ [i];@@ array@@ [i]=@@ array[@@ o@@ ];@@ array[@@ o@@ ]=@@ e@@ ;} }}} voidoutput@@ (intarray[],int@@ n) {inti; for(i=0;i<=@@ n-2;i++) {printf("%d",@@ array@@ [i]);} printf("%d",@@ array[@@ n-1@@ ]@@ );} voidmain() {@@ inta[@@ 20@@ ],b[@@ 20],@@ q,@@ w; scanf("%d%d\n",&@@ q@@ ,&@@ w); input@@ (a,@@ q); input@@ (b,@@ w); order@@ (a,@@ q@@ );@@ order@@ (b,@@ w); output@@ (a,@@ q@@ );@@ printf("@@ ");@@ output@@ (b,@@ w@@ );}  
c -1
h -1
0

intmain(){ double@@ z; inti,j,@@ a,b,c,d,@@ m,n; scanf("%lf",&@@ z); charzfc@@ [501]; scanf("%s",@@ zfc); char@@ bjc@@ [501]; scanf("%s",@@ bjc@@ ); i=0; j=0; c=0; d=0; n=0; while(@@ zfc@@ [i]!=@@ '\0')@@ {@@ i@@ ++;} while(@@ bjc@@ [j]!=@@ '\0')@@ {@@ j@@ ++;} for(a@@ =0;@@ zfc@@ [a@@ ]!='\0'@@ ;a@@ ++@@ ){@@ if(@@ zfc@@ [a]@@ =='@@ A'||@@ zfc@@ [a]@@ =='@@ T'||@@ zfc@@ [a]@@ =='@@ C'||@@ zfc@@ [a]@@ =='@@ G')@@ {@@ c@@ ++;@@ }} for(b@@ =0;@@ bjc@@ [b@@ ]!='\0'@@ ;@@ b@@ ++@@ ){@@ if(@@ bjc@@ [b@@ ]@@ =='@@ A'||@@ bjc@@ [b@@ ]@@ =='@@ T'||@@ bjc@@ [b@@ ]@@ =='@@ C'||@@ bjc@@ [b@@ ]@@ =='@@ G')@@ {@@ d@@ ++;@@ }} if(i==@@ j@@ &&@@ c@@ ==@@ i@@ &&@@ d@@ ==@@ i@@ ){@@ for(m=0;m<@@ i@@ ;m@@ ++@@ ){@@ if(@@ zfc@@ [m@@ ]==@@ bjc@@ [m]@@ ){@@ n@@ ++;@@ }} if((@@ 1.0*@@ n@@ /i@@ )>@@ z@@ ){@@ printf("yes");@@ }@@ else{printf("no");} } else@@ printf("error"); return0; }  
c -1
h -1
int@@ Compare@@ (constvoid*@@ elem1@@ ,@@ constvoid*@@ elem2@@ ) { return@@ *(@@ (int*)@@ elem1@@ )@@ -*(@@ (int*)@@ elem2@@ ); } intmain() { intm,n; inta[100],b[100]; inti; scanf("%d%d",&m,&n); for(i=0;i<m;i++) { scanf("%d",&a[i]); } for(i=0;i<n;i++) { scanf("%d",&b[i]); } qsort@@ (a,@@ m,@@ sizeof(int),@@ Compare@@ ); qsort@@ (b,@@ n,@@ sizeof(int),@@ Compare@@ ); for(i=0;i<m;i++) { printf("%d",a[i]); } for(i=0;i<n-1;i++) { printf("%d",b[i]); } printf("%d",b[@@ n-1]); }  
c -1
h -1
0

intn,m; int@@ key@@ ,j,@@ k,@@ i,@@ t; main() { scanf("%d%d",&n,&m); int*@@ p1=@@ (int*)malloc(@@ (n@@ +1)@@ *sizeof(int)); int*@@ p2=@@ (int*)malloc(@@ (m@@ +1)@@ *sizeof(int)); for(i=1;i<=n;i++) scanf("%d",@@ (@@ p1@@ +i)); for(i=1;i<=m;i++) scanf("%d",@@ (@@ p2@@ +i)); for(i=1;i<=n-1;i++) { for(j=i+1;j<=n;j++) { if(*(@@ p1@@ +i)@@ >*@@ (@@ p1@@ +j@@ )) { t@@ =*(@@ p1@@ +i)@@ ,*@@ (@@ p1@@ +i)@@ =*(@@ p1@@ +j)@@ ,*@@ (@@ p1@@ +j)@@ =t; } } } for(i=1;i<=@@ m-1;i++) { for(j=i+1;j<=@@ m;j++) { if(*(@@ p2@@ +i)@@ >*@@ (@@ p2@@ +j@@ )) { t@@ =*(@@ p2@@ +i)@@ ,*@@ (@@ p2@@ +i)@@ =*(@@ p2@@ +j)@@ ,*@@ (@@ p2@@ +j)@@ =t; } } } for(i=1;i<=n;i++) printf("%d",@@ *(@@ p1@@ +i)); for(i=1;i<=m;i++) { if(i==@@ m) printf("%d",@@ *(@@ p2@@ +i)); else printf("%d",@@ *(@@ p2@@ +i)); } }  
c -1
h -1
intf@@ (intm,int@@ n) { inti,j,@@ t,@@ a[100],b[100],@@ c=0; for(i=0;i<=@@ m-1;i++) scanf("%d",&a[i]); for(i=0;i<=n-1;i++) scanf("%d",&b[i]); for(j=0;j<=@@ m@@ -2@@ ;j++) for(i=0;i<=@@ m@@ -2@@ -j;i++) if(a[i]>a[i+1]) { t=a[i]; a[i]=a[i+1]; a[i+1]=@@ t; } for(j=0;j<=@@ n-2@@ ;j++) for(i=0;i<=@@ n-2@@ -j;i++) if(b[i]>b[i+1]) { t=b[i]; b[i]=b[i+1]; b[i+1]=@@ t; } for(i=0;i<=@@ m-1@@ ;i++,@@ c++) { if(c@@ ) printf(""); printf("%d",a[i]); } for(i=0;i<=n-1;i++) printf("%d",b[i]); printf("\n"); return(0); } intmain() { intm,n; scanf("%d%d",&m,&n); f(@@ m,n); }  
c -1
h -1
1


intmain() { inta[100][100],@@ n=0,@@ row@@ =0,@@ col@@ =0; scanf("%d%d",&row,&col); for(inti=0;i<row;i++) for(intj=0;j<col;j++) scanf("%d",&(@@ a[i][j]@@ )); n=@@ row+col@@ -1; for(intk=0;k<@@ n;k++) for(inti=0;i<row;i++) for(intj=0;j<col;j++) { if(i+j@@ ==k) printf("%d\n",a[i][j]); } return0; }  
c -1
h -1
intmain() {@@ intyear,@@ mon@@ ,@@ day; scanf("%d%d%d",&year,&@@ mon@@ ,&@@ day); int@@ re@@ ; if((@@ year%@@ 4==0&&@@ year%@@ 400@@ ==0&&@@ year%@@ 100@@ ==0)||(@@ year%4==0&&year%100!=0@@ )) { switch(@@ mon@@ ) { case1:@@ re@@ =@@ day;break; case2:@@ re@@ =31+@@ day;break; case3:@@ re@@ =31+29@@ +day;break; case4:@@ re@@ =31+29@@ +31+@@ day;break; case5:@@ re@@ =31+29@@ +31+30@@ +day;break; case6:@@ re@@ =31+29@@ +31+30+31+@@ day;break; case7:@@ re@@ =31+29@@ +31+30+31+30@@ +day;break; case8:@@ re@@ =31+29@@ +31+30+31+30+31+@@ day;break; case9:@@ re@@ =31+29@@ +31+30+31+30+31+31+@@ day;break; case10:@@ re@@ =31+29@@ +31+30+31+30+31+31+30@@ +day;break; case11:@@ re@@ =31+29@@ +31+30+31+30+31+31+30+31+@@ day;break; case12:@@ re@@ =31+29@@ +31+30+31+30+31+31+30+31+30@@ +day;break; } } else {@@ switch(@@ mon@@ ) { case1:@@ re@@ =@@ day;break; case2:@@ re@@ =31+@@ day;break; case3:@@ re@@ =31+28@@ +day;break; case4:@@ re@@ =31+28@@ +31+@@ day;break; case5:@@ re@@ =31+28@@ +31+30@@ +day;break; case6:@@ re@@ =31+28@@ +31+30+31+@@ day;break; case7:@@ re@@ =31+28@@ +31+30+31+30@@ +day;break; case8:@@ re@@ =31+28@@ +31+30+31+30+31+@@ day;break; case9:@@ re@@ =31+28@@ +31+30+31+30+31+31+@@ day;break; case10:@@ re@@ =31+28@@ +31+30+31+30+31+31+30@@ +day;break; case11:@@ re@@ =31+28@@ +31+30+31+30+31+31+30+31+@@ day;break; case12:@@ re@@ =31+28@@ +31+30+31+30+31+31+30+31+30@@ +day;break; } } printf("%d",@@ re); return0; }  
c -1
h -1
0

intmain() { voidf@@ (ints[],int@@ n); inta[100@@ ],b[100@@ ][100]; intn,@@ i=1@@ ,j; charc; do{ scanf("%d",&a[i]); i++; scanf("%@@ c@@ ",&@@ c); }while(@@ c@@ !=@@ '\n@@ '@@ ); n@@ =i-1; for(i=1;i<=n;i++) { for(j=1;j<=@@ a[i]@@ ;j++) { scanf("%d",&@@ b[i]@@ [j]); } } f(@@ b[1@@ ],@@ a[1]); for(i=2;i<=n;i++) { printf(""); f(@@ b[i]@@ ,@@ a[i]); } return0; } voidf@@ (ints[],int@@ n) { inti,j,t; for(i=2;i<=n;i++) { for(j=i-1@@ ;j@@ >=1@@ ;j--) { if(s@@ [j+1]@@ <@@ s@@ [j]) { t=@@ s[j]; s[j]=@@ s@@ [j+1]; s@@ [j+1]=t; } } } printf("%d",@@ s@@ [1]); for(i=2;i<=n;i++) { printf("%d",@@ s[i]); } }  
c -1
h -1
intmain() { inty,m,d,@@ s=0,@@ a[@@ 12@@ ],@@ i; scanf("%d%d%d",&y,&m,&d); if((y%@@ 400==0)||(@@ y%@@ 4==0&&y%100!=0@@ )) a[1]=29; else a[1]=@@ 28; a[0]=@@ a[2@@ ]=a[@@ 4@@ ]=a[@@ 6@@ ]=a[@@ 7@@ ]=a[@@ 9@@ ]=a[@@ 11@@ ]=31; a[@@ 3@@ ]=a[@@ 5@@ ]=a[@@ 8@@ ]=a[@@ 10@@ ]=30; for(i=0;i<m-1;i++) { s=s+@@ a[i]; } s=s@@ +d; printf("%d",s); }  
c -1
h -1
0

intm,n,@@ a[@@ 1000@@ ]={0},b[@@ 1000]={0}; intmain() { inti,j,k; voidread@@ (int@@ array1@@ [],int@@ array2@@ [@@ ]); voidsort@@ (intarray[],int@@ x); voidprint@@ (int@@ array5@@ [],int@@ array6@@ [@@ ]); scanf("%d%d",&m,&n); read@@ (a,b); sort@@ (a,m); sort@@ (b,n); print@@ (a,b); } voidread@@ (int@@ array1@@ [],int@@ array2@@ []) { inti; for(i=0;i<m;i++) scanf("%d",&a[i]); for(i=0;i<n;i++) scanf("%d",&b[i]); } voidsort@@ (intarray[],int@@ x) { inti,j,k,@@ t; for(i=0;i<x@@ -1;i++) for(j=i+1;j<@@ x;j++) if(array@@ [ j@@ ]<@@ array@@ [i]) {t=@@ array@@ [i];@@ array@@ [i]=@@ array@@ [j];@@ array@@ [j]=@@ t;} } voidprint@@ (int@@ array5@@ [],int@@ array6@@ []) { intj; for(j=0;j<m;j++) printf("%d",@@ array5@@ [j]); for(j=0;j<n-1;j++) printf("%d",@@ array6@@ [j]); printf("%d",@@ array6@@ [@@ n-1]); }  
c -1
h -1
structstudent { intnum; int@@ yw@@ ; int@@ sx; }; intmain() { intn,i,@@ x=0,@@ y=0,@@ z=0; scanf("%d",&n); structstudent@@ a[@@ n]; intb[@@ n]; for(i=0;i<n;i++) { scanf("%d%d%d",&a[i].@@ num,&@@ a[i].@@ yw@@ ,&a[i].@@ sx@@ ); b[i]=@@ a[i].@@ yw@@ +a[i].@@ sx; } for(i=1;i<n;i++) { if(b[@@ x@@ ]<@@ b[i]) x@@ =i; } printf("%d%d\n",@@ a[x@@ ].num,@@ b[@@ x@@ ]); for(i=1;i<n;i++) { if(i==@@ x)@@ continue; if(b[@@ y@@ ]<@@ b[i]) y@@ =i; } printf("%d%d\n",@@ a[@@ y@@ ].num,@@ b[@@ y@@ ]); for(i=1;i<n;i++) { if(i==@@ x)@@ continue; if(i==@@ y)@@ continue; if(b[@@ z@@ ]<@@ b[i]) z@@ =i; } printf("%d%d\n",@@ a[@@ z@@ ].num,@@ b[@@ z@@ ]); getchar(); getchar(); }  
c -1
h -1
0

intmain() { chara[@@ 501]; charb[@@ 501]; inti,n,@@ j,@@ k; float@@ v@@ ; j=0; k=0; n=0; scanf("%f",&@@ v@@ ); scanf("%s",a); scanf("%s",b); for(i=0;a[i]!='\0';i++) { j=j+1; if((a[i]!='@@ A')&&(@@ a[i]!='@@ T')&&(@@ a[i]!='@@ C')&&(@@ a[i]!='@@ G')) { printf("error"); return0; } } for(i=0;@@ b[i]@@ !='\0';i++) { k=k+1; if((@@ b[i]!='@@ A')&&(@@ b[i]!='@@ T')&&(@@ b[i]!='@@ C')&&(@@ b[i]!='@@ G')) { printf("error"); return0; } } if(j!=@@ k) { printf("error"); return0; } for(i=0;a[i]!='\0';i++) { if(a[i]==b[i]) { n=n+1; } } if(@@ v@@ *@@ j@@ <n) { printf("yes"); } else { printf("no"); } return0; }  
c -1
h -1
intmain() { intn,a[@@ 20000],@@ t@@ =1,@@ temp; cin>>n; cin>>a[0]; for(inti=1;i<@@ n;i++) { cin>>@@ temp; for(intj=0;j<@@ t;j++) { if(temp@@ ==@@ a[j]) break; if(j==@@ t@@ -1) { a[t@@ ]=temp; t@@ +=1; } } } for(inti=0;i<@@ t@@ -1;i++) cout<<a[i]@@ <<''; cout<<@@ a[t@@ -1]@@ <<endl; return0; }  
c -1
h -1
0

intmain() { intk,@@ n,m,@@ i,j,@@ x,@@ sum; cin>>k; while(k@@ --) { cin>>m>>n; sum=0; for(i=1;i<=m;i++) { for(j=1;j<=n;j++) { cin>>x; if((i@@ ==1)@@ ||(@@ i==@@ m@@ )||(@@ j@@ ==1)@@ ||(@@ j==@@ n@@ )) sum=sum+@@ x; } } cout<<sum<<endl; } return0; }  
c -1
h -1
intmain() { intn,i,j,@@ t=0; cin>>n; inta[@@ 10000]; cin>>a[0]; for(i=1;@@ (i@@ +@@ t)@@ <@@ n;i++) {@@ cin>>a[i]; for(j=0;j<i;j++) { if(a[i]==a[j]) {@@ i--; t++; break; }} } for(i=0;i<n-@@ t@@ -1;i++) cout<<a[i]@@ <<''; cout<<a[@@ n-@@ t@@ -1]; return0; }  
c -1
h -1
0

intmain() { intt; cin>>t; for(inti=0;i<@@ t;i++) { intn,m; cin>>m>>n; intnum[@@ 110][110@@ ]; for(intj=0;j<m;j++) for(intk=0;k<@@ n@@ ;k++)@@ cin>>@@ num[j]@@ [k]; intsum=0; if(m@@ ==1&&n@@ !=1) { for(intj=0;j<@@ n@@ ;j++)@@ sum=sum+@@ num@@ [0]@@ [j]; cout<<sum<<endl; } elseif(m@@ !=1@@ &&n@@ ==1) { for(intj=0;j<@@ m@@ ;j++)@@ sum=sum+@@ num[m@@ ][0]; cout<<sum<<endl; } elseif(m@@ ==1&&n@@ ==1)@@ cout<<@@ num[@@ 0][@@ 0]@@ <<endl; else {@@ for(intj=0;j<@@ n@@ ;j++)@@ sum=sum+*(@@ *@@ num@@ +j); for(intj=0;j<@@ n@@ ;j++)@@ sum=sum+*(@@ num[m@@ -1]@@ +j); for(intj=1;j<@@ m-1@@ ;j++)@@ sum=sum+*@@ *(@@ num@@ +j); for(intj=1;j<@@ m-1@@ ;j++)@@ sum=sum+*(@@ *(@@ num@@ +j)@@ +n-1); cout<<sum<<endl; } }@@ return0; }  
c -1
h -1
int@@ comp@@ (constvoid*a,constvoid*@@ b); intmain() { intn,m,@@ i,j,k; scanf("%d%d",&n,&m); inta[n@@ ],b[@@ m]; for(i=0;i<n;i++) scanf("%d",&a[i]); for(i=0;i<m;i++) scanf("%d",&b[i]); qsort@@ (a,n,@@ sizeof(int),@@ comp@@ ); qsort@@ (b,@@ m,@@ sizeof(int),@@ comp@@ ); for(i=0;i<n;i++) printf("%d",a[i]); for(i=0;i<m;i++) {@@ printf("%d",b[i]); if(i<@@ m-1) printf(""); } return0; } int@@ comp@@ (constvoid*a,constvoid*@@ b) { return@@ *(int*)@@ a@@ -*@@ (int*)@@ b; }  
c -1
h -1
0

intmain() { charstr[256],@@ a[@@ 256],b[@@ 256],@@ tmp@@ [256]; inti,@@ lenstr@@ ,@@ lena@@ ; char*@@ pstr@@ ; gets(str); gets(a); gets(b); lenstr@@ =strlen(@@ str); lena@@ =strlen(a); for(i=0;i<=@@ lenstr@@ -@@ lena@@ ;i++) { pstr@@ =&@@ str@@ [i]; strncpy@@ (@@ tmp@@ ,@@ pstr@@ ,@@ lena@@ ); tmp@@ [@@ lena@@ ]='\0'; if(strcmp(@@ tmp@@ ,@@ a)@@ ==0) { str@@ [i]@@ ='@@ @@@ '; break; } } for(i=0;i<@@ lenstr@@ ;i++) { if(str@@ [i]=='@@ @@@ ') { printf("%s",@@ b); i@@ =i+@@ lena@@ -1; } else@@ printf("%c",@@ str[i]); } printf("\n"); return0; }  
c -1
h -1
intmain() { int@@ photo@@ [300@@ ][@@ 300@@ ]={@@ 1@@ }; intn; inti,j; cin>>n; for(i=1;i<=n;i++) { for(j=1;j<=n;j++) { intt; cin>>t; if(t==@@ 255) t=1; photo@@ [i][j]=@@ t; } } int@@ found@@ =0; int@@ Lx@@ ,@@ Ly@@ ,@@ Bx@@ ,@@ By@@ ; for(i=1;i<=n;i++) { for(j=1;j<=n;j++) { if(@@ photo@@ [i][j]==0) { Lx@@ =i; Ly@@ =j; found@@ =1; break; } } if(@@ found@@ )break; } found@@ =0; for(i=n@@ ;i>=1;i--) { for(j=n@@ ;j@@ >=1@@ ;j--) { if(@@ photo@@ [i][j]==0) { Bx@@ =i; By@@ =j; found@@ =1; break; } if(@@ found@@ )break; } } int@@ w=@@ Bx@@ -@@ Lx@@ -1; int@@ h=@@ By@@ -@@ Ly@@ -1; cout<<@@ w@@ *@@ h@@ <<endl; return0; }  
c -1
h -1
0

int@@ input@@ (intn) { cin>>n; return@@ n; } voidpaixu@@ (inta[],intn) { inti,j,@@ p; for(i=0;i<=@@ n-2;i++) { for(j=i+1;j<n;j++) { if(a[i]>a[j]) { p=@@ a[i]; a[i]=a[j]; a[j]=@@ p; } } } } void@@ add@@ (inta[],intb[],int@@ n1,int@@ n2) { inti; for(i=0;i<n1;i++) cout<<a[i]<<""; for(i=0;i<n2@@ -1;i++) cout<<b[i]<<""; cout<<b[@@ n2@@ -1]@@ <<endl; } intmain() { inta[100],b[100],@@ n1,n2,@@ i; cin>>@@ n1@@ >>@@ n2; for(i=0;i<n1;i++) a[i]=@@ input@@ (@@ a[i]); for(i=0;i<n2;i++) b[i]=@@ input@@ (@@ b[i]); paixu@@ (a,@@ n1); paixu@@ (b,@@ n2); add@@ (a,b,@@ n1,n2@@ ); return0; }  
c -1
h -1
intmain(){ intn,@@ i,j@@ =@@ 2,@@ m; inta[@@ 20010@@ ],b[100]; cin>>n; for(i=1;i<=n;i++){ cin>>a[i]; } b[1@@ ]=@@ a[1]; for(i=2;i<=@@ n;i++){ for(m=1;m@@ <=i@@ -1@@ ;m++){ if(a[m@@ ]==@@ a[i]) break; } if(m==@@ i){ b[j]=@@ a[i]; j++; } } for(i=1;i<=@@ j@@ -1;i++){ if(i<@@ j@@ -1){ cout<<b[i]<<""; }else cout<<@@ b[i]; } return0; }  
c -1
h -1
0

intmain() { chars[256],@@ w@@ [256],@@ v@@ [256]; inti,j,@@ slen@@ ,@@ wlen@@ ,@@ k; scanf("%s",@@ w); scanf("%s",s); scanf("%s",@@ v@@ ); slen@@ =strlen(s); wlen@@ =strlen(@@ w); for(i=0;i<=@@ wlen@@ -@@ slen@@ ;i++){ for(j=0;j<@@ slen@@ ;j++){ if(w@@ [i+j]!=@@ s[j]@@ ){ break; } } if(j==@@ slen@@ ){ break; } } if(j==@@ slen@@ ){ for(k=0;k<@@ i@@ ;k++){ printf("%c",@@ w@@ [k]); } printf("%s",@@ v@@ ); if(w@@ [i+@@ slen@@ ]@@ !=0){ for(k=i+@@ slen@@ ;k<@@ wlen@@ ;k++){ printf("%c",@@ w@@ [k]); } } } elseif(i==@@ wlen@@ -@@ slen@@ +1) printf("%s",@@ w); return0; }  
c -1
h -1
voidmain() { structstudent { intnum; int@@ yu@@ ; int@@ shu; intc; }@@ s[@@ 100000],@@ k; inti,j,n; scanf("%d",&n); for(i=0;i<n;i++) { scanf("%d%d%d",&@@ s[i].@@ num,&@@ s[i].@@ yu@@ ,&@@ s[i].@@ shu); s[i].@@ c=@@ s[i].@@ yu@@ +@@ s[i].@@ shu; } for(i=0;i<3;i++) { for(j=i+1;j<@@ n-1;j++) if(s@@ [j].@@ c@@ >@@ s[i].@@ c) { k=@@ s[i]; s[i]=@@ s[j]; s[j]=@@ k; } printf("%d%d\n",@@ s[i].@@ num,@@ s[i].@@ c); } }  
c -1
h -1
0

intmain(){ double@@ a; scanf("%lf",&a); charb[@@ 600@@ ],c[@@ 600]; getchar(); gets(b); gets(c); int@@ d,@@ e,f,@@ g; inth@@ =0; d@@ =strlen(b); e@@ =strlen(c); if(d@@ !=@@ e@@ ){ printf("error"); } else{ for(inti=0;i<=@@ d@@ -1;i++){ if(@@ b[i]!='A'&&b[i]!='@@ G'&&b[i]!='@@ C'&&b[i]!='@@ T@@ '){ f@@ =1;} if(c@@ [i]!='A'&&@@ c@@ [i]!='G'&&@@ c@@ [i]!='C'&&@@ c@@ [i]!='T'){ g@@ =1;} } if(f@@ ==1||@@ g@@ ==1){ printf("error");} else{ for(inti=0;i<=@@ d@@ -1;i++){ if(b[i]==@@ c[i]@@ ){ h@@ ++;@@ }} if(1.0*@@ h@@ /@@ d@@ >@@ a){ printf("yes");} else{ printf("no@@ ");@@ }}} inty; scanf("%d",&@@ y); return0;}  
c -1
h -1
structstudent { intnum; intchi; intmath; intsum; }; voidmain() { intn,i,j,@@ max; structstudent@@ t@@ ,*@@ s; scanf("%d",&n); s@@ =(structstudent@@ *)malloc(@@ n*@@ sizeof(@@ structstudent)); for(i=0;i<n;i++) {@@ scanf("%d%d%d",&@@ s[i].@@ num,&@@ s[i].@@ chi@@ ,&@@ s[i].@@ math); s[i].@@ sum=@@ s[i].@@ chi@@ +@@ s[i].@@ math@@ ;} max=0; for(i=0;i<n;i++) { if(max<@@ s[i].@@ sum@@ ){max=@@ s[i].@@ sum@@ ;j@@ =i;} } printf("%d%d\n",@@ s[j].@@ num,@@ s[j].@@ sum); s[j].@@ sum=0;@@ max=0; for(i=0;i<n;i++) { if(max<@@ s[i].@@ sum@@ ){max=@@ s[i].@@ sum@@ ;j@@ =i;} } printf("%d%d\n",@@ s[j].@@ num,@@ s[j].@@ sum); s[j].@@ sum=0;@@ max=0; for(i=0;i<n;i++) { if(max<@@ s[i].@@ sum@@ ){max=@@ s[i].@@ sum@@ ;j@@ =i;} } printf("%d%d\n",@@ s[j].@@ num,@@ s[j].@@ sum); s[j].@@ sum=0; }  
c -1
h -1
0

main() {@@ char@@ temp_0@@ [@@ 10],@@ id@@ [100][10]; inti,j,n,@@ max,@@ age@@ [100],@@ num@@ [100],@@ yes@@ [100],@@ ncount@@ =1,@@ temp,@@ num_1@@ ; scanf("%d",&n); for(i=0;i<n;i++) {@@ num[i]=@@ i; scanf("%s%d",@@ id[i],&@@ age[i]); } for(j=0;j<n;j++) { for(i=0;i<n@@ -j@@ -1;i++) {if(@@ age@@ [i]<@@ age@@ [i+1]) {@@ strcpy(@@ temp_0@@ ,@@ id[i]); temp=@@ age[i]; num_1@@ =@@ num[i]; strcpy(id@@ [i],@@ id@@ [i+1]); age@@ [i]=@@ age@@ [i+1]; num[i]=@@ num@@ [i+1]; age@@ [i+1]=@@ temp; strcpy(id@@ [i+1],@@ temp_0@@ ); num@@ [i+1]=@@ num_1@@ ;} }} for(i=0;i<n;i++) {if(@@ age@@ [i]@@ >=60) printf("%s\n",@@ id[i]); } for(j=0;j<n;j++) {@@ for(i=0;i<n@@ -j@@ -1;i++) {@@ if(num@@ [i]>@@ num@@ [i+1]) {@@ strcpy(@@ temp_0@@ ,@@ id[i]); temp=@@ age[i]; num_1@@ =@@ num[i]; strcpy(id@@ [i],@@ id@@ [i+1]); age@@ [i]=@@ age@@ [i+1]; num[i]=@@ num@@ [i+1]; age@@ [i+1]=@@ temp; strcpy(id@@ [i+1],@@ temp_0@@ ); num@@ [i+1]=@@ num_1@@ ; }} } for(i=0;i<n;i++) {if(@@ age@@ [i]@@ <60) printf("%s\n",@@ id@@ [i]);} }  
c -1
h -1
intmain() { intn; inta[20000]; inti,j; intt; int@@ l@@ =1; scanf("%d",&n); for(i=0;i<n;i++) { scanf("%d",&a[i]); } if(n==1) { printf("%d",a[0]); return0; } printf("%d",a[0]); t=@@ n; for(i=0;i<n;i++) { for(j=0;j<i;j++) { if(a[i]==a[j]) { t=t@@ -1; break; } } } for(i=0;i<n;i++) { for(j=0;j<i;j++) { if(a[i]==a[j]) { break; } elseif(@@ j==@@ i@@ -1@@ &&@@ l<@@ t) { printf("%d",a[i]); } } } return0; }  
c -1
h -1
0

int@@ g@@ (intx,int@@ j){ for(j@@ ++@@ ;j<=@@ x@@ ;j++){ if(x==@@ j) return1; if(x@@ %j@@ ==0&&@@ x@@ /j@@ >=@@ j) return@@ g@@ (x@@ /j@@ ,j@@ -1)@@ +@@ g@@ (x@@ ,j); } return0; } intmain(){ intn,@@ a; cin>>n; for(inti=1;i<=@@ n;i++){ cin>>a; cout<<@@ g@@ (a,@@ 1@@ )<<endl; } return0; }  
c -1
h -1
intmain() { inty,m,d,@@ n; scanf("%d",&@@ y); if((y%@@ 4==0&&y%100!=0@@ )||(y%@@ 400==0)) { scanf("%d%d",&@@ m,&d); if(m==1) {@@ n=@@ d@@ ;} if(m==@@ 2) {@@ n=31+@@ d@@ ;} if(m==@@ 3) {@@ n=31+29@@ +d@@ ;} if(m==@@ 4) {@@ n=31+29@@ +@@ d+@@ 31@@ ;} if(m==@@ 5) {@@ n=31+29@@ +d@@ +31+30@@ ;} if(m==@@ 6) {@@ n=31+29@@ +d@@ +31+30@@ +31@@ ;} if(m==@@ 7) {@@ n=31+29@@ +d@@ +31+30+31+30@@ ;} if(m==@@ 8) {@@ n=31+29@@ +d@@ +31+30+31+30@@ +31@@ ;} if(m==@@ 9) {@@ n=31+29@@ +d@@ +31+30+31+30+31+@@ 31@@ ;} if(m==@@ 10) {@@ n=31+29@@ +d@@ +31+30+31+30+31+31+30@@ ;} if(m==@@ 11) {@@ n=31+29@@ +d@@ +31+30+31+30+31+31+30@@ +31@@ ;} if(m==@@ 12) {@@ n=31+29@@ +d@@ +31+30+31+30+31+31+30+31+30@@ ;} printf("%d",n); } else { scanf("%d%d",&@@ m,&d); if(m==1) {@@ n=@@ d@@ ;} if(m==@@ 2) {@@ n=31+@@ d@@ ;} if(m==@@ 3) {@@ n=31+28@@ +d@@ ;} if(m==@@ 4) {@@ n=31+28@@ +@@ d+@@ 31@@ ;} if(m==@@ 5) {@@ n=31+28@@ +d@@ +31+30@@ ;} if(m==@@ 6) {@@ n=31+28@@ +d@@ +31+30@@ +31@@ ;} if(m==@@ 7) {@@ n=31+28@@ +d@@ +31+30+31+30@@ ;} if(m==@@ 8) {@@ n=31+28@@ +d@@ +31+30+31+30@@ +31@@ ;} if(m==@@ 9) {@@ n=31+28@@ +d@@ +31+30+31+30+31+@@ 31@@ ;} if(m==@@ 10) {@@ n=31+28@@ +d@@ +31+30+31+30+31+31+30@@ ;} if(m==@@ 11) {@@ n=31+28@@ +d@@ +31+30+31+30+31+31+30@@ +31@@ ;} if(m==@@ 12) {@@ n=31+28@@ +d@@ +31+30+31+30+31+31+30+31+30@@ ;} printf("%d",n); } return0; }  
c -1
h -1
0

intmain() { intc[@@ 101][101]; intn,i,j,@@ s,@@ t; cin>>n; while(n--) { cin>>@@ s@@ >>@@ t; for(i=0;i<@@ s;i++) for(j=0;j<@@ t;j++) cin>>@@ c[i]@@ [j]; intsum=0; if(s@@ ==1) for(i=0;i<t;i++) sum=sum+@@ c[@@ 0][@@ t@@ ]; elseif(@@ t@@ ==1) for(i=0;i<@@ s;i++) sum=sum+@@ c[i]@@ [0]; else { for(i=0;i<t;i++) sum=sum+@@ c@@ [0]@@ [i]+@@ c[@@ s@@ -1]@@ [i]; for(i=1;i<@@ s@@ -1;i++) sum=sum+@@ c[i]@@ [0]+@@ c[i]@@ [t@@ -1]; } cout<<sum<<endl; } return0; }  
c -1
h -1
int@@ hs@@ (int@@ a); intmain(){ intn,@@ b[@@ 20002@@ ],i,j,@@ pd@@ ,@@ js@@ ; scanf("%d",&n); for(i=1;i<=n;i++){ scanf("%d",&b[i]); } js@@ =@@ n; for(i=1;i<=n;i++){ for(j=1;j<@@ i;j++){ if(b[j]@@ ==@@ b[i]@@ ){ js@@ --; break; } } } pd@@ =1; for(i=1;i<=n;i++){ for(j=1;j<@@ i;j++){ if(b[j]@@ ==@@ b[i]@@ ){ pd@@ =0; } } if(@@ pd@@ ==1&&@@ js@@ !=1@@ ){ printf("%d",b[i]); js@@ --; } elseif(@@ pd@@ ==1&&@@ js@@ ==1){ printf("%d",b[i]); break; } pd@@ =1; } scanf("%d",&n); return0; }  
c -1
h -1
0

intf@@ (intn) { cin>>n; if(n%@@ 100==0) { if(n%@@ 400==0) return1; else@@ return0; } elseif(n@@ %@@ 4==0) return1; else return0; } intmain() { inty,m,@@ d; cin>>y>>m>>d; int@@ t=0,@@ i; for(i=1;i<m;i++) { if(i==1||i==@@ 5@@ ||i==@@ 3@@ ||i==7||i==8||i==@@ 10) t=t@@ +31; elseif(i==@@ 2) t=t+@@ 28; elseif(i==@@ 4||i==6||i==9||i==11) t=t+@@ 30; } t=t@@ +d; if(@@ f(@@ y)@@ ==1&&@@ m@@ >2) t=t+1; cout<<t@@ <<endl; return0; }  
c -1
h -1
int@@ rui@@ (int@@ y,int@@ m){ if((y%@@ 4==0&&y%100!=0@@ )||(y%@@ 400==0)@@ &&m@@ ==@@ 2) return1; else@@ return0; } intmain(){ int@@ d=0,@@ y,@@ m,@@ r,@@ i; int@@ pp@@ [13]={0,31,28,31,30,31,30,31,31,30,31,30,31}; cin>>y>>@@ m>>@@ r; for(i=1;i<m;i++) d=d+@@ pp@@ [i]+@@ rui@@ (@@ y,@@ i); d=d+@@ r; cout<<@@ d@@ <<endl; return0; }  
c -1
h -1
1


intmain() { intn,k,i,@@ sz[@@ 1000],@@ e,@@ l,@@ b=0; scanf("%d%d",&n,&k); for(i=0;i<=@@ (@@ n-1)@@ ;i++){@@ scanf("%d",&@@ sz[i]@@ );} for(e@@ =0;e@@ <=@@ (@@ n-2@@ );@@ e@@ ++){ for(l@@ =(@@ e@@ +1@@ );@@ l@@ <=@@ (n-1@@ );@@ l++) {@@ if(k==@@ sz[@@ e@@ ]+sz[@@ l@@ ]){@@ b@@ =1;@@ break;@@ }}} if(b@@ ==0){@@ printf("no");} if(b@@ ==1){@@ printf("yes");} return0; }  
c -1
h -1
intmain(intargc,char*argv[]) { inta,b,c,@@ n; scanf("%d%d%d",&a,&b,&c); if(a%@@ 4!=0@@ ||(@@ a%@@ 100==0&&@@ a%@@ 400!=0)) { if(b@@ <@@ 2) n=@@ c; elseif(@@ b<@@ 3) n=31+@@ c; elseif(@@ b<@@ 4) n=@@ 59@@ +c; elseif(@@ b<@@ 5) n=@@ 90@@ +c; elseif(@@ b<@@ 6) n=@@ 120@@ +c; elseif(@@ b<@@ 7) n=@@ 151@@ +c; elseif(@@ b<@@ 8) n=@@ 181@@ +c; elseif(@@ b<@@ 9) n=@@ 212@@ +c; elseif(@@ b<@@ 10) n=@@ 243@@ +c; elseif(@@ b<@@ 11) n=@@ 273@@ +c; elseif(@@ b<@@ 12) n=@@ 304@@ +c; else n=@@ 334@@ +c; } else { if(b@@ <@@ 2) n=@@ c; elseif(@@ b<@@ 3) n=31+@@ c; elseif(@@ b<@@ 4) n=@@ 60@@ +c; elseif(@@ b<@@ 5) n=@@ 91@@ +c; elseif(@@ b<@@ 6) n=@@ 121@@ +c; elseif(@@ b<@@ 7) n=@@ 152@@ +c; elseif(@@ b<@@ 8) n=@@ 182@@ +c; elseif(@@ b<@@ 9) n=@@ 213@@ +c; elseif(@@ b<@@ 10) n=@@ 244@@ +c; elseif(@@ b<@@ 11) n=@@ 274@@ +c; elseif(@@ b<@@ 12) n=@@ 305@@ +c; else n=@@ 335@@ +c; } printf("%d\n",n); return0; }  
c -1
h -1
0

main() { inti,j,n,@@ num,@@ a[@@ 17@@ ]; do {@@ i=0; do {@@ i++; scanf("%d",&a[i]); }while(@@ a[i]@@ >0@@ ); n@@ =i-1; if(a[@@ n+1@@ ]!=@@ -1) {@@ num=0; for(i=1;i<=n-1;i++) for(j=i+1;j<=n;j++) if(a[i]==2*@@ a[j]||a[j]==2*@@ a[i]) num++; printf("%d\n",num); } }while(@@ a[n@@ +1@@ ]@@ ==0@@ ); return0; }  
c -1
h -1
intmain() { inti,n,@@ j; inta[20000]; scanf("%d",&n); for(i=0;i<=n-1;i++) { scanf("%d",&a[i]); } for(i=0;i<=n-1;i++) { if(i==0)@@ printf("%d",a[i]); else { for(j=0;j<i;j++) { if(a[i]==a[j]@@ )break; } if(j==@@ i)@@ printf("%d",a[i]); } } }  
c -1
h -1
0

intmain() { double@@ a; intsum=0,@@ i,@@ l1,l2,@@ judge@@ =1; char@@ x[@@ 1001@@ ],@@ y[@@ 1001]; scanf("%lf%s%s",&@@ a,@@ x,@@ y); l1=strlen(@@ x@@ ),@@ l2=strlen(@@ y); if(l1!=l2@@ ) judge@@ =0; else for(i=0;i<l1;i++) { if(x@@ [i]!='C'&&@@ x@@ [i]!='G'&&@@ x@@ [i]!='A'&&@@ x@@ [i]!='T@@ ') judge@@ =0; if(y@@ [i]!='C'&&@@ y@@ [i]!='G'&&@@ y@@ [i]!='A'&&@@ y@@ [i]!='T@@ ') judge@@ =0; } if(@@ judge@@ ==1) { for(i=0;i<l1;i++) if(x@@ [i]==@@ y@@ [i]) sum++; if(sum@@ >=@@ (int)@@ (a@@ *@@ l1@@ )) printf("yes"); else printf("no"); } else printf("error"); return0; }  
c -1
h -1
main() { intn,@@ j,k,@@ t; scanf("%d",&n); chara[@@ n@@ ][10]; char@@ p@@ [1@@ ][10]; int@@ g@@ [n]; for(j=0;j<n;j++) scanf("%s%d",@@ a[j]@@ ,&@@ g@@ [j]); for(j=n-1@@ ;j>0;j--) for(k=@@ n-1@@ ;k@@ >@@ n@@ -j@@ -1@@ ;k--) { if(g@@ [k]@@ >=60) { if(g@@ [k]@@ >@@ g@@ [k-1@@ ]) { t=@@ g@@ [k@@ -1]; g@@ [k-1@@ ]=@@ g@@ [k]; g@@ [k]=@@ t; strcpy(@@ p[@@ 0],@@ a[k@@ -1]); strcpy(@@ a[k@@ -1@@ ],@@ a[k]); strcpy(@@ a[k@@ ],@@ p@@ [0]); } } } for(k=0;k<n;k++) printf("%s\n",@@ a[k]); getchar(); getchar(); }  
c -1
h -1
0

intmain() { intn,k,i,@@ p,q,@@ sum,@@ s=0; inta[1000]; cin>>n>>k; for(i=0;i<n;i++) cin>>a[i]; for(p=1@@ ;p@@ <n;p++) for(q=0;q@@ <p@@ ;q++) { sum=@@ a[p@@ ]+@@ a[q@@ ]; if(sum@@ ==k) s=s+1; } if(s@@ ) cout<<"yes@@ "<<endl; else cout<<"no@@ "<<endl; return0; }  
c -1
h -1
intmain(){ intyear,@@ mouth@@ ,@@ day,@@ n; scanf("%d%d%d",&year,&@@ mouth@@ ,&@@ day); if(year%@@ 4@@ ==0){ switch(@@ mouth@@ ){ case1:@@ n=@@ day@@ ;printf("%d",@@ n@@ );break; case2:@@ n=31+@@ day@@ ;printf("%d",@@ n@@ );break; case3:@@ n=@@ 60@@ +day@@ ;printf("%d",@@ n@@ );break; case4:@@ n=@@ 91@@ +day@@ ;printf("%d",@@ n@@ );break; case5:@@ n=@@ 121@@ +day@@ ;printf("%d",@@ n@@ );break; case6:@@ n=@@ 152@@ +day@@ ;printf("%d",@@ n@@ );break; case7:@@ n=@@ 182@@ +day@@ ;printf("%d",@@ n@@ );break; case8:@@ n=@@ 213@@ +day@@ ;printf("%d",@@ n@@ );break; case9:@@ n=@@ 244@@ +day@@ ;printf("%d",@@ n@@ );break; case10:@@ n=@@ 274@@ +day@@ ;printf("%d",@@ n@@ );break; case11:@@ n=@@ 305@@ +day@@ ;printf("%d",@@ n@@ );break; case12:@@ n=@@ 335@@ +day@@ ;printf("%d",@@ n);@@ break;}} else{ switch(@@ mouth@@ ){ case1:@@ n=@@ day@@ ;printf("%d",@@ n@@ );break; case2:@@ n=31+@@ day@@ ;printf("%d",@@ n@@ );break; case3:@@ n=@@ 59@@ +day@@ ;printf("%d",@@ n@@ );break; case4:@@ n=@@ 90@@ +day@@ ;printf("%d",@@ n@@ );break; case5:@@ n=@@ 120@@ +day@@ ;printf("%d",@@ n@@ );break; case6:@@ n=@@ 151@@ +day@@ ;printf("%d",@@ n@@ );break; case7:@@ n=@@ 181@@ +day@@ ;printf("%d",@@ n@@ );break; case8:@@ n=@@ 212@@ +day@@ ;printf("%d",@@ n@@ );break; case9:@@ n=@@ 243@@ +day@@ ;printf("%d",@@ n@@ );break; case10:@@ n=@@ 273@@ +day@@ ;printf("%d",@@ n@@ );break; case11:@@ n=@@ 304@@ +day@@ ;printf("%d",@@ n@@ );break; case12:@@ n=@@ 334@@ +day@@ ;printf("%d",@@ n);@@ break;}} return0; }  
c -1
h -1
0

int@@ division@@ (intm,int@@ k) { intnum=0; if(m@@ >=@@ k) { for(inti=@@ k@@ ;i<=@@ m;i++) { if(m==@@ i)@@ num++; elseif(m@@ %i==0) { num+=@@ division@@ (m@@ /i,i); } } } returnnum; } intmain() { intn; cin>>n; for(inti=0;i<n;i++) { inta; cin>>a; cout<<@@ division@@ (a,@@ 2)<<endl; } return0; }  
c -1
h -1
intmain() { intyear,month,day,@@ daynum@@ =0,@@ i; cin>>year>>@@ month>>@@ day; int@@ month1@@ [12]={31,28,31,30,31,30,31,31,30,31,30,31}; int@@ month2@@ [@@ 12]={31,29,31,30,31,30,31,31,30,31,30,31}; int@@ judgeleap@@ ; if((year%4==0&&year%100!=0)||(year%400==0)) { for(i=0;i<month-1;i++) { daynum@@ +=@@ month2@@ [i]; } } else { for(i=0;i<month-1;i++) { daynum@@ +=@@ month1@@ [i]; } } daynum@@ =@@ daynum@@ +day; cout<<@@ daynum@@ ; return0; }  
c -1
h -1
0

voidmain() { charstring@@ [300],@@ substring@@ [300],@@ replacement@@ [300],@@ test@@ [300]; int@@ lensub@@ ,@@ len,@@ i,j; scanf("%s\n@@ %s@@ \n@@ %s",@@ string,@@ substring@@ ,@@ replacement); len=strlen(@@ string); lensub@@ =strlen(@@ substring); for(i=0;i<=@@ len@@ -@@ lensub@@ ;i++) { for(j=1;j<=@@ lensub@@ ;j++) { test@@ [j-1]=@@ string@@ [i+j@@ -1]; test@@ [j]@@ ='\0'; } if(strcmp(@@ test@@ ,@@ substring@@ )@@ !=0) { printf("%c",@@ string@@ [i]); } else { printf("%s",@@ replacement); i@@ +=@@ lensub@@ ; break; } } for(@@ ;i<=@@ len@@ -1;i++) { printf("%c",@@ string@@ [i]); } }  
c -1
h -1
main() { intn; scanf("%d",&n); int*p; p=@@ (int*)malloc(n*sizeof(int)); inti,j; for(i=0;i<n;i++) scanf("%d",&@@ p[i]); printf("%d",@@ p@@ [0]); for(i=1;i<n;i++) { for(j=0;j<i;j++) { if(p@@ [i]==@@ p@@ [j]) break; } if(j==i) printf("%d",@@ p[i]); } getchar(); getchar(); getchar(); getchar(); getchar(); getchar(); }  
c -1
h -1
0

structstudent { intnum; intchinese; intmath; structstudent*next; }; intm; structstudent*creat@@ (intn) { structstudent*head; structstudent*p1,*p2; m=0; p1=p2@@ =(structstudent*)malloc(sizeof(structstudent)); scanf("%d%d%d",&p1->num,&p1->@@ chinese@@ ,&p1->math); head=NULL; while(n--) { m=m+1; if(m==1) head=p1; else p2->next=p1; p2=p1; p1@@ =(structstudent*)malloc(sizeof(structstudent)); scanf("%d%d%d",&p1->num,&p1->@@ chinese@@ ,&p1->math); } p2->next=NULL; return(head); } structstudent*@@ del@@ (structstudent*head@@ ,int@@ num) { structstudent*p1,*p2; p1=head; while(@@ num@@ !=@@ p1->num@@ &&@@ p1->next@@ !=NULL) { p2=p1; p1=p1->next; } if(num@@ ==@@ p1->num@@ ) { if(@@ p1@@ ==@@ head@@ ) head=@@ p1->next; else p2->next=@@ p1->next; m=@@ m-1@@ ; } return(head); } intmain() { intmax=0; intn,@@ j; scanf("%d",&n); structstudent*head,*p1,*p2; head=creat(n); for(j=0;j<3;j++) { p1=head; p2=head; max=0; while(@@ p1->next@@ !=NULL) { if((@@ p1->@@ chinese+@@ p1->@@ math@@ )@@ >max) max=@@ p1->@@ chinese+@@ p1->@@ math@@ ,@@ p2=p1; p1=p1->next; } printf("%d%d\n",@@ p2->@@ num,@@ (@@ p2->@@ chinese+@@ p2->@@ math@@ )); head=@@ del@@ (head,@@ p2->@@ num); } }  
c -1
h -1
inta[@@ 1001@@ ][@@ 1001]; intmain(){ intn; cin>>n; inti,j; for(i=0;i<n@@ ;++@@ i){ for(j=0;j<@@ n;++@@ j){ cin>>a[i][j]; } } int@@ sx@@ ,@@ sy@@ ,@@ ex@@ ,@@ ey@@ ,@@ flag=0; for(i=0;i<n@@ ;++@@ i){ for(j=0;j<@@ n;++@@ j){ if(a[i][j]==0&&@@ flag@@ ==0){ sx@@ =i; sy@@ =j; flag=1; } else@@ if(a[i][j]==0&&@@ flag@@ ==1){ ex@@ =i; ey@@ =j; } } } sx@@ +=@@ 1@@ ;@@ sy@@ +=@@ 1@@ ;@@ ex@@ -=@@ 1@@ ;@@ ey@@ -=@@ 1; intsum@@ =(@@ ex@@ -@@ sx@@ +1)*(@@ ey@@ -@@ sy@@ +1); cout<<sum<<endl; return0; }  
c -1
h -1
0

int@@ la@@ ,lb@@ ,a[@@ 1000],b[1000],@@ c[@@ 2000]; void@@ duqu@@ () { cin>>@@ la@@ >>@@ lb@@ ; for(inti=0;i<@@ la@@ ;i++)@@ cin>>a[i]; for(intj=0;j<@@ lb@@ ;j++)@@ cin>>@@ b[j]; } voidpaixu@@ () { inti,j,temp; for(i=0;i<@@ la@@ -1;i++) for(j=i+1;j<@@ la@@ ;j++) if(a[i]>a[j]) { temp=a[i]; a[i]=a[j]; a[j]=@@ temp; } for(i=0;i<@@ lb@@ -1;i++) for(j=i+1;j<@@ lb@@ ;j++) if(b[i]>@@ b[j]) { temp=@@ b[i]; b[i]=@@ b[j]; b[j]=@@ temp; } } voidhebing@@ () { for(inti=0;i<@@ la@@ ;i++)@@ c[i]=a[i]; for(intj=0;j<@@ lb@@ ;j++)@@ c[@@ la@@ +j@@ ]=@@ b[j]; } voidshuchu@@ () { for(inti=0;i<@@ la@@ +lb@@ ;i++) { cout<<@@ c[i]; if(i!=@@ la@@ +lb@@ -1)@@ cout<<'@@ '; } } intmain() { duqu@@ (); paixu@@ (); hebing@@ (); shuchu@@ (); return0; }  
c -1
h -1
struct@@ person { charid[20]; intage; }; voidmain() { intn,i,j,@@ m=0,@@ k=0,@@ z; struct@@ person@@ t@@ ,*@@ s@@ ,*@@ o@@ ,*@@ age; scanf("%d",&n); s@@ =(struct@@ person@@ *)malloc(@@ n*@@ sizeof(struct@@ person@@ )); o@@ =(struct@@ person@@ *)malloc(@@ n*@@ sizeof(struct@@ person@@ )); age@@ =(struct@@ person@@ *)malloc(@@ n*@@ sizeof(struct@@ person@@ )); for(i=0;i<n;i++) {@@ scanf("%s%d",@@ (*(@@ s@@ +i)@@ ).@@ id,&@@ (*(@@ s@@ +i)@@ ).@@ age); if((@@ *(@@ s@@ +i)@@ ).@@ age@@ >=60@@ ){@@ *(@@ o@@ +k)@@ =*(@@ s@@ +i)@@ ;k@@ ++;} else{@@ *(@@ age@@ +m@@ )@@ =*(@@ s@@ +i@@ );@@ m@@ ++;} } for(i=0;i<k;i++) {@@ for(j=@@ k-1@@ ;j>i;j--) if((@@ *(@@ o@@ +j)@@ ).@@ age@@ >@@ (*(@@ o@@ +j@@ -1)@@ ).@@ age@@ ){@@ t@@ =*(@@ o@@ +j@@ );@@ *(@@ o@@ +j)@@ =*(@@ o@@ +j@@ -1)@@ ;@@ *(@@ o@@ +j@@ -1)@@ =@@ t;} printf("%s\n",@@ (*(@@ o@@ +i)@@ ).@@ id); } for(i=0;i<m;i++) printf("%s\n",@@ (*(@@ age@@ +i)@@ ).@@ id); }  
c -1
h -1
0

intmain() { inti,j,n,@@ p=0,@@ m[@@ 20000]; scanf("%d\n",&n); for(i=0;i<n;i++) scanf("%d",&@@ m[i]); for(i=0;i<n;i++) { j=0; while(j<@@ i) { if(m@@ [i]==@@ m@@ [j]) break; j++; } if(j==i) { if(p@@ ) printf(""); printf("%d",@@ m[i]); p++; } } return0; }  
c -1
h -1
intmain() { intb[@@ 20000@@ ]={0},@@ a[@@ 20000],@@ i,n,@@ j,@@ flag=0; cin>>n; for(i=0;i<=n-1;i++) cin>>a[i]; for(i=0;i<=n-1;i++) for(j=n-1@@ ;j>=i@@ +1@@ ;j--) if(a[i]==@@ a[j])@@ b[j]@@ =1; for(i=0;i<=n-1;i++) if(b[i]@@ ==0) { if(flag==0) { cout<<a[i]; flag=1; continue; } cout<<""<<a[i]; } return0; }  
c -1
h -1
1


intmain() { inta[@@ 101][@@ 101@@ ],b[@@ 100000]; introw,col; inti,j,@@ k@@ =(@@ -1)@@ ,sum; scanf("%d%d",&row,&col); for(i=0;i<row;i++) { for(j=0;j<col;j++) scanf("%d",&a[i][j]); } for(@@ sum=0;@@ sum<=@@ ((@@ row+col@@ )@@ -2@@ );@@ sum@@ ++) { for(i=0;i<row;i++) { if(sum@@ -i@@ >=0&&@@ sum@@ -i@@ <col) { k@@ +=1; b[k]=@@ a[i][@@ sum@@ -i@@ ]; } } } for(k=0;k<=@@ row@@ *@@ col-1@@ ;k++) printf("%d\n",@@ b[k@@ ]); return0; }  
c -1
h -1
intmain() { chars[@@ 300],@@ w@@ [100],@@ t@@ [100]; gets(@@ w); gets(s); gets(@@ t); inti,j,k,@@ p,q,@@ f@@ =1,@@ n,m,@@ e; n=strlen(@@ w@@ );@@ m@@ =strlen(s); for(i=j@@ =0;i<n;i++) { k@@ =i@@ ;p@@ =i;@@ q@@ =j; if(w@@ [p@@ ]==@@ s[@@ q@@ ]) { for(q=0;q@@ <m;@@ q@@ ++){ if(w@@ [p@@ ]!=@@ s[@@ q@@ ]){ f=0; } p++; } if(f@@ ==1) { for(e@@ =0;e@@ <k;@@ e++) { printf("%c",@@ w@@ [@@ e@@ ]); } printf("%s",@@ t); for(@@ e=@@ k@@ +m@@ ;@@ e@@ <n;@@ e@@ ++){ printf("%c",@@ w@@ [@@ e@@ ]); } return0; } f=1; } } printf("%s",@@ w); return0; }  
c -1
h -1
0

int@@ la@@ =0,@@ lb@@ =0,@@ l=0,@@ a[100],b[100],@@ combine@@ [@@ 200]; voidinput@@ (); void@@ seq@@ (); void@@ sequence@@ (intx@@ [100@@ ]); void@@ com@@ (inta[100],int@@ b[100@@ ]); voidoutput@@ (int@@ combine@@ [@@ 200@@ ]); intmain(){ input(); seq@@ (); com@@ (a,b); output@@ (@@ combine@@ ); return0; } voidinput@@ (){ cin>>@@ la@@ >>@@ lb@@ ; for(inti=0;i<@@ la;i++) cin>>a[i]; for(inti=0;i<@@ lb@@ ;i++) cin>>b[i]; } void@@ seq@@ (){ l=@@ la@@ ; sequence@@ (a); l=@@ lb@@ ; sequence@@ (@@ b); } void@@ sequence@@ (intx@@ [100@@ ]){ int@@ temp=0; for(inti=1;i<@@ l@@ ;i++) for(intj=1;j<=@@ l@@ -i;j++) if(x@@ [j-1]@@ >@@ x@@ [j]) { temp=@@ x@@ [j]; x@@ [j]=@@ x@@ [j-1]; x@@ [j-1]=@@ temp; } } void@@ com@@ (inta[100],int@@ b[100@@ ]){ memcpy@@ (@@ combine@@ ,@@ a,@@ la@@ *@@ 4@@ ); memcpy@@ (@@ combine@@ +@@ la@@ ,@@ b,@@ lb@@ *@@ 4@@ ); } voidoutput@@ (int@@ combine@@ [@@ 200@@ ]){ cout<<@@ combine@@ [0]; for(inti=1;i<@@ la@@ +lb@@ ;i++) cout<<""<<@@ combine@@ [i]; }  
c -1
h -1
inta[100@@ ],@@ la@@ ,@@ b[100@@ ],@@ lb@@ ,@@ c[@@ 200],@@ lc@@ ; void@@ R@@ (){ inti; cin>>@@ la@@ >>@@ lb@@ ; for(i=1;i<=@@ la;i++) cin>>a[i]; for(i=1;i<=@@ lb@@ ;i++) cin>>b[i]; return; } void@@ S@@ (int*@@ x,int@@ lx@@ ){ inti,j; for(i=1;i<@@ lx@@ ;i++){ for(j=1;j<=@@ lx@@ -i;j++){ if(x@@ [j]>@@ x@@ [j+1@@ ]){ int@@ t=@@ x@@ [j]; x@@ [j]=@@ x@@ [j+1]; x@@ [j+1]=t; } } } return; } void@@ M@@ (){ inti; for(i=1;i<=@@ la;i++) c[i]=a[i]; for(i=@@ la@@ +1;i<=@@ la@@ +lb@@ ;i++) c[i]=b[i-@@ la@@ ]; return; } void@@ D@@ (){ inti; for(i=1;i<=@@ la@@ +lb@@ ;i++){ if(i@@ >1) cout<<"@@ "; cout<<@@ c[i]; } cout<<endl; return; } intmain(){ R@@ ();@@ S@@ (a,@@ la@@ );@@ S@@ (b,@@ lb@@ );@@ M@@ ();@@ D@@ (); return0; }  
c -1
h -1
1


inta[@@ row][col]; intmain(){ intr,@@ c,@@ i,j,@@ n; scanf("%d%d",&@@ r@@ ,&c); for(i=0;i<@@ r@@ ;i++){ for(j=0;j<@@ c@@ ;j++){ scanf("%d\n",&@@ a[i][j]@@ );} } for(n=0;n@@ <=@@ c+@@ r@@ -2@@ ;n++){ for(i=0;i<=@@ n@@ &&i@@ <@@ r@@ ;i++){ j=@@ n-@@ i; if(j<@@ c){ printf("%d\n",a[i][j]); } } } return0; }  
c -1
h -1
intmain() { intk,@@ n,m,@@ i,j,@@ a[100][100],@@ s,@@ q@@ [100],@@ h1@@ ,@@ h2@@ ,@@ t,@@ l1,l2,@@ c; scanf("%d",&k); for(i=1@@ ,@@ t@@ =0;i<=@@ k,@@ t@@ <k@@ ;i++,@@ t++) {@@ h1@@ =0,@@ h2@@ =0,@@ t,@@ l1@@ =0,@@ l2@@ =0; scanf("%d%d",&m,&n); if(n@@ ==1&&@@ m@@ ==1) {scanf("%d",&@@ a[0][0]@@ ); q@@ [t@@ ]=a[@@ 0][@@ 0]@@ ;} if(m@@ ==1&&n@@ >1) { for(i=0;i<n;i++) scanf("%d",&@@ a[0]@@ [i]); for(@@ c=0,@@ i@@ =0;i<n;i++) c=@@ c+@@ a[0][i]; q@@ [t@@ ]=@@ c; } if(n@@ >1@@ &&m@@ >1) {@@ for(i=0;i<m;i++) {@@ for(j=0;j<n;j++) {@@ scanf("%d",&a[i]@@ [j]@@ );}} for(j=0;j<n;j++) {@@ h1@@ =@@ h1@@ +@@ a[0]@@ [j]@@ ;} for(j=0;j<n;j++) {@@ h2@@ =@@ h2@@ +@@ a[m-1]@@ [j]@@ ;} for(i=1;i<m-1;i++) {@@ l1@@ =@@ l1@@ +@@ a[i][0]@@ ;} for(i=1;i<m-1;i++) {@@ l2@@ =@@ l2@@ +@@ a[i][@@ n-1@@ ];} q@@ [t@@ ]=@@ h1@@ +@@ h2@@ +@@ l1@@ +@@ l2@@ ;} if(n@@ ==1&&@@ m@@ >1) { for(i=0;i<m;i++) scanf("%d",&a[i]@@ [0]); for(@@ c=0,@@ i@@ =0;i<@@ m;i++) c=@@ c+@@ a[i][0]; q@@ [t@@ ]=@@ c; } } for(i=0;i<k;i++) {printf("%d\n",@@ q@@ [i]);} return0; }  
c -1
h -1
0

intmain() { intm,@@ i,j,k,@@ q=0,@@ t=0,@@ u@@ ,@@ max; intb[@@ 26]={0}; charc[@@ ]@@ ="@@ ABCDEFGHIJKLMNOPQRSTUVWXYZ@@ "; struct@@ as@@ { int@@ sh@@ ; chara[@@ 26]; }@@ cla@@ [1000]; scanf("%d",&m); for(i=0;i<m;i++){ scanf("%d%s",&@@ cla@@ [i].@@ sh@@ ,@@ cla@@ [i].@@ a); t=@@ (int)@@ strlen(@@ cla@@ [i].@@ a); for(k=0;k<@@ t@@ ;k++){ u@@ =@@ cla@@ [i].@@ a[k]@@ -'A'; b[@@ u@@ ]++; } } max=0; for(j=0;j<@@ 25@@ ;j++) if(max<@@ b[j]@@ ){ max=@@ b[j]; q@@ =j; } printf("%c\n",@@ c[@@ q@@ ]); printf("%d\n",max); for(i=0;i<m;i++){ t=@@ (int)@@ strlen(@@ cla@@ [i].@@ a); for(k=0;k<@@ t@@ ;k++) if(@@ cla@@ [i].@@ a[k]==@@ c[@@ q@@ ]) printf("%d\n",@@ cla@@ [i].@@ sh@@ ); } return0; }  
c -1
h -1
intmain(){ intb,@@ c,@@ i,@@ j1@@ ,j; doublea,@@ m,n; chars1@@ [100],@@ s2@@ [100]; c=0; scanf("%lf",&a); scanf("%s",@@ s1); scanf("%s",@@ s2); if(strlen(@@ s1@@ )!=strlen(@@ s2@@ )){ printf("error"); return0; }else{ for(i=0;@@ s1@@ [i]!='\0';i++){ if(s1@@ [i]!='A'&&@@ s1@@ [i]!='G'&&@@ s1@@ [i]!='C'&&@@ s1@@ [i]!='T@@ '||@@ s2@@ [i]!='A'&&@@ s2@@ [i]!='G'&&@@ s2@@ [i]!='C'&&@@ s2@@ [i]!='T'){ printf("error"); return0; }else{ if(s1[i]==s2@@ [i]){ c++; } } } } m@@ =1.0*@@ strlen(@@ s1); n@@ =1.0*@@ c; if(n@@ /@@ m@@ >@@ a){ printf("yes"); }else{ printf("no"); } return0; }  
c -1
h -1
0

intfenjie@@ (intx,int@@ b) { inti,@@ z@@ =0,@@ c; for(i=b@@ ;i<=@@ x;i++) { if(x==@@ i) z=@@ z@@ +1; elseif(x@@ %i==0) { c=@@ x/@@ i; z=@@ z@@ +@@ fenjie@@ (c,@@ i); } } return(@@ z); } voidmain() { intn,i,@@ num,@@ a; scanf("%d\n",&n); for(i=0;i<n;i++) { scanf("%d",&a); num=@@ fenjie@@ (a,@@ 2); printf("%d\n",num); } }  
c -1
h -1
intmain(){ chara[@@ 2][@@ 600]; doublen,@@ m; scanf("%lf@@ %s",&@@ n,@@ a[0]); scanf("%s",@@ a[1]); inti,@@ s=0; m=strlen(@@ a[0]); for(i=0;i<m;i++){ if((@@ a[0]@@ [i]!=@@ 65@@ &&@@ a[0]@@ [i]!=@@ 67@@ &&@@ a[0]@@ [i]!=@@ 71@@ &&@@ a[0]@@ [i]!=@@ 84@@ )||(@@ a[1]@@ [i]!=@@ 65@@ &&@@ a[1]@@ [i]!=@@ 67@@ &&@@ a[1]@@ [i]!=@@ 71@@ &&@@ a[1]@@ [i]!=@@ 84@@ )){ printf("error"); s@@ =-1; break; } elseif(@@ a[0]@@ [i]==@@ a[1]@@ [i]) s++; } if(s@@ !=@@ -1){ double@@ q; q=@@ s@@ *1.0/@@ m; if(q@@ >=@@ n) printf("yes"); else{ printf("no"); } } return0; }  
c -1
h -1
0

intmain() { intn,k,@@ a[@@ 1010@@ ],@@ s,@@ i,@@ u@@ =0; scanf("%d%d",&n,&k); for(i=0;i<=n-1;i++) { scanf("%d",&@@ s); if(s@@ <@@ k) { a[@@ u@@ ]=@@ s@@ ;@@ u@@ ++; } } for(i=@@ u@@ -1@@ ;i>=1;i--) { for(s=0;s@@ <=i@@ -1;@@ s++) { if(a[@@ s@@ ]==@@ k-@@ a[i]) { printf("yes@@ \n@@ ");@@ return0; } } } printf("no@@ \n@@ ");@@ return0; }  
c -1
h -1
intmain(){ intm,n; cin>>m>>n; inta[@@ m@@ ][n]; for(int@@ c@@ =0;c@@ <m;@@ c++) for(int@@ d@@ =0;d@@ <n;@@ d@@ ++)@@ cin>>@@ a[c@@ ][@@ d@@ ]; int@@ *p@@ [m]; for(intj=0;j<@@ m@@ ;j++)@@ p@@ [j]=@@ a[j]; for(intk=0@@ ;k<=@@ m+@@ n-2@@ ;k++) for(int@@ c@@ =0;c@@ <m;@@ c++) for(int@@ d@@ =0;d@@ <n;@@ d@@ ++){ if(c@@ +d@@ ==@@ k)@@ cout<<@@ *(p@@ [c@@ ]@@ +d@@ )<<endl; } return0; }  
c -1
h -1
0

intmain() { intm,n,@@ zz@@ [100][100],@@ k,@@ t,@@ i,j; cin>>m>>n; for(i=0;i<m;i++) for(j=0;j<n;j++) cin>>@@ zz@@ [i][j]; for(i=0;i<n;i++) { k=0; t=i; for(j=0;;j++) { if(t@@ >=0@@ &&k@@ <@@ m) cout<<@@ zz@@ [k@@ ++@@ ][@@ t@@ --@@ ]<<endl; if(t@@ <0@@ ||@@ k@@ >=@@ m) break; } } for(i=1;i<m;i++) { k=i; t=@@ n-1; for(j=0;;j++) { if(t@@ >=0@@ &&k@@ <@@ m) cout<<@@ zz@@ [k@@ ++@@ ][@@ t@@ --@@ ]<<endl; if(t@@ <0@@ ||@@ k@@ >=@@ m) break; } } }  
c -1
h -1
intmain() { struct@@ time { int@@ year; int@@ month@@ ; int@@ date; int@@ dayoftheyear@@ ; }@@ nn@@ ; scanf("%d%d%d",&@@ nn.@@ year@@ ,&@@ nn.@@ month,&@@ nn.@@ date@@ ); if(((@@ nn.@@ year%@@ 4==0)&&(@@ nn.@@ year%@@ 100@@ ==0)@@ )||(@@ nn.@@ year%400==0)) { switch(@@ nn.@@ month@@ ){ case1: nn.@@ dayoftheyear@@ =@@ nn.@@ date; break; case2: nn.@@ dayoftheyear@@ =@@ nn.@@ date+@@ jan@@ ; break; case3: nn.@@ dayoftheyear@@ =@@ nn.@@ date+@@ jan+feb@@ +1; break; case4: nn.@@ dayoftheyear@@ =@@ nn.@@ date+@@ jan+feb+mar@@ +1; break; case5: nn.@@ dayoftheyear@@ =@@ nn.@@ date+@@ jan+feb+mar@@ +@@ apr@@ +1; break; case6: nn.@@ dayoftheyear@@ =@@ nn.@@ date+@@ jan+feb+mar@@ +@@ apr@@ +@@ may@@ +1; break; case7: nn.@@ dayoftheyear@@ =@@ nn.@@ date+@@ jan+feb+mar@@ +@@ apr@@ +@@ may@@ +@@ jun@@ +1; break; case8: nn.@@ dayoftheyear@@ =@@ nn.@@ date+@@ jan+feb+mar@@ +@@ apr@@ +@@ may@@ +@@ jun@@ +@@ jul@@ +1; break; case9: nn.@@ dayoftheyear@@ =@@ nn.@@ date+@@ jan+feb+mar@@ +@@ apr@@ +@@ may@@ +@@ jun@@ +@@ jul@@ +@@ aug@@ +1; break; case10: nn.@@ dayoftheyear@@ =@@ nn.@@ date+@@ jan+feb+mar@@ +@@ apr@@ +@@ may@@ +@@ jun@@ +@@ jul@@ +@@ aug@@ +@@ sep@@ +1; break; case11: nn.@@ dayoftheyear@@ =@@ nn.@@ date+@@ jan+feb+mar@@ +@@ apr@@ +@@ may@@ +@@ jun@@ +@@ jul@@ +@@ aug@@ +@@ sep@@ +@@ oct@@ +1; break; case12: nn.@@ dayoftheyear@@ =@@ nn.@@ date+@@ jan+feb+mar@@ +@@ apr@@ +@@ may@@ +@@ jun@@ +@@ jul@@ +@@ aug@@ +@@ sep@@ +@@ oct@@ +@@ nov@@ +1; break; } } else { switch(@@ nn.@@ month@@ ){ case1: nn.@@ dayoftheyear@@ =@@ nn.@@ date; break; case2: nn.@@ dayoftheyear@@ =@@ nn.@@ date+@@ jan@@ ; break; case3: nn.@@ dayoftheyear@@ =@@ nn.@@ date+@@ jan+feb@@ ; break; case4: nn.@@ dayoftheyear@@ =@@ nn.@@ date+@@ jan+feb+mar@@ ; break; case5: nn.@@ dayoftheyear@@ =@@ nn.@@ date+@@ jan+feb+mar@@ +@@ apr@@ ; break; case6: nn.@@ dayoftheyear@@ =@@ nn.@@ date+@@ jan+feb+mar@@ +@@ apr@@ +@@ may@@ ; break; case7: nn.@@ dayoftheyear@@ =@@ nn.@@ date+@@ jan+feb+mar@@ +@@ apr@@ +@@ may@@ +@@ jun@@ ; break; case8: nn.@@ dayoftheyear@@ =@@ nn.@@ date+@@ jan+feb+mar@@ +@@ apr@@ +@@ may@@ +@@ jun@@ +@@ jul@@ ; break; case9: nn.@@ dayoftheyear@@ =@@ nn.@@ date+@@ jan+feb+mar@@ +@@ apr@@ +@@ may@@ +@@ jun@@ +@@ jul@@ +@@ aug@@ ; break; case10: nn.@@ dayoftheyear@@ =@@ nn.@@ date+@@ jan+feb+mar@@ +@@ apr@@ +@@ may@@ +@@ jun@@ +@@ jul@@ +@@ aug@@ +@@ sep@@ ; break; case11: nn.@@ dayoftheyear@@ =@@ nn.@@ date+@@ jan+feb+mar@@ +@@ apr@@ +@@ may@@ +@@ jun@@ +@@ jul@@ +@@ aug@@ +@@ sep@@ +@@ oct@@ ; break; case12: nn.@@ dayoftheyear@@ =@@ nn.@@ date+@@ jan+feb+mar@@ +@@ apr@@ +@@ may@@ +@@ jun@@ +@@ jul@@ +@@ aug@@ +@@ sep@@ +@@ oct@@ +@@ nov@@ ; break; } } printf("%d\n",@@ nn.@@ dayoftheyear@@ ); return0; }  
c -1
h -1
0

intn,m,@@ i; inta[100]; intb[100@@ ]; void@@ passed@@ (intx,inty) { intj,@@ t; for(i=1;i<@@ x;i++) { for(j=0;j<i;j++) { if(a@@ [i-j@@ ]<@@ a[i@@ -1-j@@ ]) { t=@@ a[i@@ -j@@ ]; a[i@@ -j@@ ]=a[i@@ -1-j@@ ]; a[i@@ -1-j@@ ]=t; } elsebreak; } } for(i=1;i<@@ y;i++) { for(j=0;j<i;j++) { if(b@@ [i-j@@ ]@@ <b@@ [i-1@@ -j@@ ]) { t=@@ b@@ [i-j@@ ]; b@@ [i-j@@ ]=@@ b@@ [i-1@@ -j@@ ]; b@@ [i-1@@ -j@@ ]=t; } elsebreak; } } printf("%d",a[0]); for(i=1;i<@@ x@@ ;i++)@@ printf("%d",a[i]); for(i=0;i<@@ y@@ ;i++)@@ printf("%d",b[i]); } intmain() { scanf("%d%d",&n,&m); for(i=0;i<n;i++)@@ scanf("%d",&a[i]); for(i=0;i<m;i++)@@ scanf("%d",&b[i]); passed@@ (n,@@ m); }  
c -1
h -1
int@@ dd@@ [25]; intk; int@@ maxnum@@ =0; void@@ fun@@ (intp@@ ,int@@ num,int@@ hight@@ ) { if(p@@ >@@ k) { if(num@@ >@@ maxnum@@ ) maxnum@@ =@@ num; return; } if(@@ dd@@ [p@@ ]<=@@ hight@@ ) { fun@@ (p@@ +1,@@ num@@ +1,@@ dd@@ [p@@ ]); fun@@ (p@@ +1,@@ num,@@ hight@@ ); } else fun@@ (p@@ +1,@@ num,@@ hight@@ ); return; } intmain() { cin>>k; for(inti=0;i<k;i++) cin>>@@ dd@@ [i]; fun@@ (@@ 0,0,@@ 65535@@ ); cout<<@@ maxnum@@ -1@@ <<endl; }  
c -1
h -1
0

intn,@@ t,@@ cnt@@ ; voidf@@ (int@@ left@@ ,int@@ last@@ ){ if(@@ left@@ <@@ last@@ ){@@ if(@@ left@@ ==1)@@ cnt@@ ++;@@ return@@ ;} for(inti=@@ last@@ ;i<=@@ left@@ ;i++)@@ if(@@ left@@ %i==0)@@ f(@@ left@@ /i,i); } intmain(){ scanf("%d",&t); while(t@@ --){ scanf("%d",&n); cnt@@ =0;@@ f(@@ n,@@ 2); printf("%d\n",@@ cnt@@ ); } return0; }  
c -1
h -1
structpa@@ { charnum[@@ 15]; intage; structpa@@ *next; }; intmain() { structpa@@ *p,*@@ p1,*p2; inti=0,@@ n; scanf("%d",&n); p1=(struct@@ pa@@ *)malloc(LEN); scanf("%s%d",@@ p1->num,&p1->@@ age); p1->next=NULL; p2=p1; p=@@ p2; for(i=1;i<n;i++){ p1=(struct@@ pa@@ *)malloc(LEN); scanf("%s%d",@@ p1->num,&p1->@@ age); if(p1->age@@ <60){ while(@@ p2->next@@ !=NULL) p2=p2->next; p2->next=p1; p1->next=NULL; } else{ if(p->@@ age@@ <@@ p1->age@@ ){ p1->next@@ =p; p=@@ p1; } else{ while(@@ p2->next@@ !=NULL@@ &&(@@ p2->next@@ )@@ ->age@@ >=@@ p1->age@@ ) p2=p2->next; p1->next=@@ p2->next; p2->next=p1; } } p2=@@ p; } while(p@@ !=NULL@@ ){ printf("%s\n",p->@@ num); p=p->next; } return0; }  
c -1
h -1
0

intmain(){ int@@ p,@@ a,b,@@ i,j@@ ,*@@ num; num=@@ (int*)malloc(sizeof(int)@@ *@@ 10000@@ ); scanf("%d%d",&a,&b); for(i=1;i<=@@ a;i++){ for(j=1;j<=@@ b;j++) scanf("%d",@@ num@@ +@@ (i@@ -1)*@@ b@@ +j); } for(i=1;i<@@ b@@ ;i++){ p=i; for(;@@ ;@@ ){ printf("%d\n",*(@@ num@@ +p@@ )); if(p@@ %@@ b@@ ==1||@@ p@@ >b@@ *(a@@ -1)@@ )break; p@@ +=@@ b@@ -1; } } for(i=b@@ ;i<=@@ a*@@ b@@ ;i@@ +=@@ b){ p=i; for(;@@ ;@@ ){ printf("%d\n",*(@@ num@@ +p@@ )); if(p@@ %@@ b@@ ==1||@@ b@@ ==1||@@ p@@ >b@@ *(a@@ -1)@@ )break; p@@ +=@@ b@@ -1; } } }  
c -1
h -1
voidmain() { intn,i,k,@@ m,@@ a=0,@@ b,@@ p=0,@@ q=0; scanf("%d",&n); for(i=1;i<=n;i++) { for(k=1;k<=n;k++) { scanf("%d",&m); if(m==0) { a=@@ a@@ +1; p=p@@ +1; } } if(p@@ !=0) q=q@@ +1; p=0; } b@@ =(@@ q@@ -2@@ )@@ *(a@@ -2*@@ q@@ )@@ /2; printf("%d\n",@@ b); }  
c -1
h -1
0

voidmain() { intn,i,j,@@ no@@ [1000],@@ shu@@ [26]={0},@@ max=0; chars[@@ 1000][@@ 20],@@ c; scanf("%d",&n); for(i=0;i<n;i++) { scanf("%d%s",&@@ no@@ [i],@@ s[i]); for(j=0;j<strlen(@@ s[i]@@ );j++) { shu@@ [s@@ [i][j]@@ -'A']++; } } for(i=0;i<26;i++) { if(@@ shu@@ [i]>max) { max=@@ shu@@ [i]; c@@ ='A'+i; } } printf("%c\n%d\n",@@ c,@@ max); for(i=0;i<n;i++) { if(@@ strchr(@@ s[i]@@ ,@@ c@@ )) printf("%d\n",@@ no@@ [i]); } }  
c -1
h -1
voidmain() { int@@ point@@ [1000],@@ i,@@ p,@@ sta@@ ,@@ end@@ ,@@ total@@ ,@@ n,@@ s; scanf("%d",&n); s=0; for(p=0;p@@ <n;p++) { for(i=0;i<n;i++)@@ scanf("%d",&@@ point@@ [i]); i=0; do { i++; }while(@@ (@@ point@@ [i]==@@ 255@@ )&&(i@@ <n@@ )); sta@@ =i; i=@@ n; do { i--; }while(@@ (@@ point@@ [i]==@@ 255@@ )&&(i@@ >0@@ )); end@@ =i; for(i=@@ sta@@ ;i<=@@ end@@ ;i++)@@ if(@@ point@@ [i]==@@ 255@@ )@@ s++; } printf("%d",s); }  
c -1
h -1
0

intmain() { inta,b,c,@@ y; scanf("%d%d%d",&a,&b,&c); if((@@ a%@@ 4==0)&&(@@ a%100!=0@@ )) { if(b==1) { y=@@ c; } if(b==@@ 2) { y@@ =31+c; } if(b==@@ 3) { y@@ =31+29@@ +c; } if(b==@@ 4) { y@@ =31+29@@ +31+@@ c; } if(b==@@ 5) { y@@ =31+29@@ +31+30@@ +c; } if(b==@@ 6) { y@@ =31+29@@ +31+30+31+@@ c; } if(b==@@ 7) { y@@ =31+29@@ +31+30+31+30@@ +c; } if(b==@@ 8) { y@@ =31+29@@ +31+30+31+30+31+@@ c; } if(b==@@ 9) { y@@ =31+29@@ +31+30+31+30+31+31+@@ c; } if(b==@@ 10) { y@@ =31+29@@ +31+30+31+30+31+31+30@@ +c; } if(b==@@ 11) { y@@ =31+29@@ +31+30+31+30+31+31+30+31+@@ c; } if(b==@@ 12) { y@@ =31+29@@ +31+30+31+30+31+31+30+31+30@@ +c; } printf("%d",@@ y); } elseif(@@ a%@@ 400==0) { if(b==1) { y=@@ c; } if(b==@@ 2) { y@@ =31+c; } if(b==@@ 3) { y@@ =31+29@@ +c; } if(b==@@ 4) { y@@ =31+29@@ +31+@@ c; } if(b==@@ 5) { y@@ =31+29@@ +31+30@@ +c; } if(b==@@ 6) { y@@ =31+29@@ +31+30+31+@@ c; } if(b==@@ 7) { y@@ =31+29@@ +31+30+31+30@@ +c; } if(b==@@ 8) { y@@ =31+29@@ +31+30+31+30+31+@@ c; } if(b==@@ 9) { y@@ =31+29@@ +31+30+31+30+31+31+@@ c; } if(b==@@ 10) { y@@ =31+29@@ +31+30+31+30+31+31+30@@ +c; } if(b==@@ 11) { y@@ =31+29@@ +31+30+31+30+31+31+30+31+@@ c; } if(b==@@ 12) { y@@ =31+29@@ +31+30+31+30+31+31+30+31+30@@ +c; } printf("%d",@@ y); } else { if(b==1) { y=@@ c; } if(b==@@ 2) { y@@ =31+c; } if(b==@@ 3) { y@@ =31+28@@ +c; } if(b==@@ 4) { y@@ =31+28@@ +31+@@ c; } if(b==@@ 5) { y@@ =31+28@@ +31+30@@ +c; } if(b==@@ 6) { y@@ =31+28@@ +31+30+31+@@ c; } if(b==@@ 7) { y@@ =31+28@@ +31+30+31+30@@ +c; } if(b==@@ 8) { y@@ =31+28@@ +31+30+31+30+31+@@ c; } if(b==@@ 9) { y@@ =31+28@@ +31+30+31+30+31+31+@@ c; } if(b==@@ 10) { y@@ =31+28@@ +31+30+31+30+31+31+30@@ +c; } if(b==@@ 11) { y@@ =31+28@@ +31+30+31+30+31+31+30+31+@@ c; } if(b==@@ 12) { y@@ =31+28@@ +31+30+31+30+31+31+30+31+30@@ +c; } printf("%d",@@ y); } return0; }  
c -1
h -1
intmain() { intn,a[@@ 16],@@ i,@@ t,@@ m,@@ j,k,@@ sum; while(cin>>@@ t) { if(t@@ !=-1) { a[1]=@@ t; i=1; while(cin>>@@ m) { if(m@@ !=0) { i=i+1; a[i]=@@ m; } elsebreak; } sum=0; for(j=1;j<=@@ i;j++) for(k=1;k<=@@ i;k++) { if(a[k@@ ]==2*@@ a[j]||@@ a[k]@@ ==0@@ .@@ 5@@ *@@ a[j]) sum=sum+1; } cout<<sum@@ /2@@ <<endl; } else{@@ cout<<@@ endl@@ ;break;} } return0; }  
c -1
h -1
0

int@@ N1@@ ,@@ N2@@ ,@@ N3@@ ; int*@@ p1=@@ (int*)malloc(@@ 100*sizeof(int)); int*@@ p2=@@ (int*)malloc(@@ 100*sizeof(int)); int*@@ p3=@@ (int*)malloc(@@ 100*sizeof(int)); void@@ inputnumbers@@ (){ scanf("%d%d\n",&@@ N1@@ ,&@@ N2@@ ); scanf("%d",@@ p1); for(inti=1;i<=@@ N1@@ -1;i++){ scanf("@@ %d",@@ p1@@ +i); } scanf("\n@@ %d",@@ p2@@ ); for(inti=1;i<=@@ N2@@ -1;i++){ scanf("@@ %d",@@ p2@@ +i); } } void@@ seperatesort@@ (){ for(inti=1;i<=@@ N1@@ -1;i++){ for(intj=i+1@@ ;j<=@@ N1@@ ;j++){ if(*(@@ p1@@ +i@@ -1)@@ >*@@ (@@ p1@@ +j@@ -1)) { int@@ temp@@ =*(@@ p1@@ +i@@ -1); *(@@ p1@@ +i@@ -1)@@ =*(@@ p1@@ +j@@ -1); *(@@ p1@@ +j@@ -1)@@ =temp; } } } for(inti=1;i<=@@ N2@@ -1;i++){ for(intj=i+1@@ ;j<=@@ N2@@ ;j++){ if(*(@@ p2@@ +i@@ -1)@@ >*@@ (@@ p2@@ +j@@ -1)) { int@@ temp@@ =*(@@ p2@@ +i@@ -1); *(@@ p2@@ +i@@ -1)@@ =*(@@ p2@@ +j@@ -1); *(@@ p2@@ +j@@ -1)@@ =temp; } } } } voidcombine@@ (){ N3@@ =@@ N1@@ +@@ N2@@ ; for(inti=0;i<=@@ N1@@ -1;i++){ *(@@ p3@@ +i)@@ =*(@@ p1@@ +i); } for(inti=0;i<=@@ N2@@ -1;i++){ *(@@ p3@@ +@@ N1@@ +i)@@ =*(@@ p2@@ +i); } } void@@ printresult2@@ (){ printf("%d",@@ *@@ p3@@ ); for(inti=1;i<=@@ N3@@ -1;i++){ printf("%d",@@ *(@@ p3@@ +i)); } } void@@ printresult1@@ (){ printf("%d",@@ *@@ p1); for(inti=1;i<=@@ N1@@ -1;i++){ printf("%d",@@ *(@@ p1@@ +i)); } for(inti=0;i<=@@ N2@@ -1;i++){ printf("%d",@@ *(@@ p2@@ +i)); } } intmain(){ inputnumbers@@ (); seperatesort@@ (); combine@@ (); printresult2@@ (); }  
c -1
h -1
main() { intn,a[@@ 25],b[@@ 25@@ ],i,j,@@ max,@@ s; scanf("%d",&n); for(i=0;i<n;i++) { scanf("%d",&a[i]); b[i]=0; } for(i=n-1;i>=0;i--) { max=0; for(j=i;j<@@ n;j++) { if(a[j]<=@@ a[i]) { s=@@ b[j]@@ +1; if(s@@ >=@@ max@@ )max=@@ s; } } b[i]=@@ max; } max=0; for(i=0;i<n;i++) { if(b[i]@@ >=@@ max@@ )max=@@ b[i]; } printf("%d",max); }  
c -1
h -1
0

intmain() { inta[16@@ ]={0}; intsum=0; do { sum=0; cin>>a[0]; if(a[0]==-1)break; for(inti=1;i<=@@ 15@@ ;++i) { cin>>a[i]; if(a[i]==0)break; } for(intm=0;m@@ <=@@ 13@@ ;++@@ m) { if(a[m@@ +1@@ ]@@ ==0)break; for(int@@ n=@@ m@@ +1@@ ;n@@ <=@@ 14@@ ;++@@ n) { if(a[@@ n@@ ]@@ ==0)break; if(a[m@@ ]==2*@@ a[n@@ ]@@ ||@@ a[n@@ ]==2*@@ a[m@@ ])@@ ++@@ sum; } } cout<<sum<<endl; }while(@@ 1); return0; }  
c -1
h -1
intmain() { intn,@@ i=0,@@ a[@@ 1000][1000],@@ row,col,@@ m,@@ p,q,@@ b[@@ 1000],@@ c[@@ 1000]; scanf("%d",&n); for(row=0;row<n;@@ row++) { for(col=0;col<n;col@@ ++) { scanf("%d",&a[@@ row][col@@ ]); if(a[@@ row][col@@ ]==0) { b[i]=@@ row; c[i]=@@ col; i++; } } } q@@ =i-1; m=@@ b[@@ q@@ ]-@@ b[0]@@ -1; p=@@ c[@@ q@@ ]-@@ c@@ [0]@@ -1; printf("%d",m@@ *p@@ ); return0; }  
c -1
h -1
0

int@@ f2@@ (inti,int@@ a) { int@@ c,@@ s=0; for(i@@ ;i<=@@ a@@ /2@@ ;i++) { if(a%i==0) { c=@@ a/@@ i; if(c@@ >=@@ i) { s=s+@@ f2@@ (i,@@ c); } } } s=s+1; return@@ s; } intf(int@@ a) { ints=0; s=s+@@ f2@@ (2,@@ a); return@@ s; } intmain() { intn,i,@@ a,b; scanf("%d",&n); for(i=0;i<n;i++) { scanf("%d",&a); b=@@ f(@@ a); printf("%d\n",@@ b); } return0; }  
c -1
h -1
intmain() { intn,i,j,@@ k@@ =1,@@ a[@@ 20000@@ ]={0},b[@@ 20000@@ ]={0}; scanf("%d",&n); for(i=0;i<n;i++) scanf("%d",&a[i]); b[0]=@@ a[0]; for(i=1;i<n;i++) { for(j=0;j<i;j++) { if(a[i]==a[j]@@ )break; if(j==@@ i@@ -1@@ ){@@ b[k]=@@ a[i]@@ ;k@@ ++;} } } printf("%d",@@ b[0]@@ ); if(k@@ >1) { for(i=1;i<k;i++) printf("%d",b[i]); } return0; }  
c -1
h -1
0

main() { inti,j,k,l,@@ a[@@ 26],@@ len@@ [26]; scanf("%d",&k); for(i=0;i<@@ k;@@ ++@@ i) scanf("%d",&a[i]); for(i=0;i<@@ k;@@ ++@@ i) len@@ [i]=1; for(i=1;i<@@ k;@@ ++@@ i) { for(j=0;j<@@ i@@ ;++@@ j) if(a[i]<=@@ a[j]) { len@@ [i]=@@ len@@ [j]+1; break; } for(l@@ =j+1@@ ;@@ l<@@ i@@ ;++@@ l) if(@@ len@@ [l@@ ]>=@@ len@@ [i]@@ &&a[i]@@ <=@@ a[l@@ ]) { len@@ [i]=@@ len@@ [l@@ ]+1; continue; } } for(i=0;i<@@ k;@@ ++@@ i) if(@@ len@@ [i]>@@ len@@ [0]) len@@ [0]=@@ len@@ [i]; printf("%d",@@ len@@ [0]); }  
c -1
h -1
intmain() { inta[@@ 500@@ ][@@ 500@@ ],i,j,@@ n,@@ h@@ [3@@ ],@@ g@@ [3@@ ],@@ s; scanf("%d",&n); for(i=1;i<=n;i++) for(j=1;j<=n;j++) { scanf("%d",&a[i][j]); } for(i=1;i<=n;i++) for(j=1;j<=n;j++) { if(a[i][j]@@ ==0){@@ h@@ [1]=@@ i@@ ;@@ g@@ [1]=@@ j@@ ;break;} } for(i=n@@ ;i>=1;i--) for(j=n@@ ;j@@ >=1@@ ;j--) { if(a[i][j]==0) { h@@ [2]=@@ i@@ ;@@ g@@ [2]=@@ j@@ ;break; } } s=(@@ h@@ [1]@@ -@@ h@@ [2]@@ -1)*(@@ g@@ [2@@ ]-@@ g@@ [1]@@ -1); printf("%d",s); return0; }  
c -1
h -1
0

intmain() { intfenjie@@ (intx,int@@ y); inta,@@ n,@@ i; cin>>n; for(i=1;i<=n;i++) { cin>>a; cout<<@@ fenjie@@ (a,@@ 2)<<endl; } return0; } intfenjie@@ (intx,inty) { intb,@@ i,@@ count@@ =1; if(x==1) return0; if(x==@@ 2) return1; b=@@ sqrt(@@ (double)@@ x); for(i=y@@ ;i<=@@ b;i++) { if(x%i==0) { count+=@@ fenjie@@ (x/i,i); } } returncount; }  
c -1
h -1
structStudent { intnum; int@@ Chi@@ ; int@@ Math@@ ; intsum; }; structStudent@@ stud@@ [100000],@@ temp; intmain() { intn,i,j; cin>>n; for(i=0;i<n;i++) { cin>>@@ stud@@ [i].@@ num@@ >>@@ stud@@ [i].@@ Chi@@ >>@@ stud@@ [i].@@ Math@@ ; stud@@ [i].@@ sum=@@ stud@@ [i].@@ Chi@@ +@@ stud@@ [i].@@ Math@@ ; } if(n==@@ 2) { if(@@ stud@@ [0].@@ sum<@@ stud@@ [1].@@ sum) { temp=@@ stud@@ [0]; stud@@ [0]=@@ stud@@ [1]; stud@@ [1]=@@ temp; } } else { for(i=0;i<3;i++) { for(j=n-1;j>i;j--) { if(@@ stud@@ [j].@@ sum>@@ stud@@ [j-1].@@ sum) { temp=@@ stud@@ [j]; stud@@ [j]=@@ stud@@ [j-1]; stud@@ [j-1]=@@ temp; } } } } if(n==@@ 2) { cout<<@@ stud@@ [0].@@ num@@ <<''<<@@ stud@@ [0].@@ sum@@ <<endl; cout<<@@ stud@@ [1].@@ num@@ <<''<<@@ stud@@ [1].@@ sum; } for(i=0;i<2@@ ;i++) { cout<<@@ stud@@ [i].@@ num@@ <<''<<@@ stud@@ [i].@@ sum@@ <<endl; } cout<<@@ stud@@ [2].@@ num@@ <<''<<@@ stud@@ [2].@@ sum; return0; }  
c -1
h -1
0

intmain(){ intn,i,k,@@ l,@@ b[100@@ ],@@ n1@@ =0,@@ n2@@ =0,@@ ha@@ [100],@@ pp@@ [100],@@ x; chara[100@@ ][@@ 11@@ ],@@ yi@@ [100][10],@@ er@@ [100][10],@@ y@@ [11]; scanf("%d",&n); for(i=0;i<n;i++) { scanf("%s",@@ a[i]); scanf("%d",&b[i]); } for(i=0;i<n;i++) { if(b[i]@@ >=60) { n1@@ ++; } else { n2@@ ++; } } for(i=0,@@ k=0,@@ l@@ =0;i<n;i++) { if(b[i]@@ >=60) { ha@@ [k]=@@ b[i]; strcpy(@@ yi@@ [k],@@ a[i]); k++; } else { pp@@ [l@@ ]=b[i]; strcpy(@@ er@@ [l@@ ],@@ a[i]); l++; } } for(i=1;i<@@ n1@@ ;i++) { for(k=0;k<@@ n1@@ -i@@ ;k++) { if(@@ ha@@ [k]@@ <@@ ha@@ [k+1@@ ]) { x=@@ ha@@ [k]; ha@@ [k]=@@ ha@@ [k+1]; ha@@ [k+1]=@@ x; strcpy(@@ y,@@ yi@@ [k]); strcpy(@@ yi@@ [k],@@ yi@@ [k+1@@ ]); strcpy(@@ yi@@ [k+1@@ ],@@ y); } } } for(i=0;i<n1@@ ;i++){ printf("%s\n",@@ yi@@ [i]); } for(i=0;i<n2@@ ;i++){ printf("%s\n",@@ er@@ [i]); } return0; }  
c -1
h -1
structstudent { int@@ xuehao@@ ; intyuwen; intshuxue; }stu[100000]; intmain() { int@@ sum[@@ 100000]; long@@ i,j,@@ n,@@ t; scanf("%d",&n); for(i=0;i<n;i++) { scanf("%d%d%d",&stu[i].@@ xuehao@@ ,&stu[i].@@ yuwen@@ ,&stu[i].@@ shuxue); sum[i]=@@ stu[i].@@ yuwen+stu[i].@@ shuxue; } for(i=0;i<3;i++) { t=0; for(j=0;j<n-1;j++) { if(sum@@ [j+1@@ ]>@@ sum[@@ t@@ ]) t@@ =j+1; } printf("%d%d\n",stu[@@ t@@ ].@@ xuehao@@ ,@@ sum[@@ t@@ ]); sum[@@ t@@ ]=0; } getchar(); getchar(); getchar(); }  
c -1
h -1
0

struct@@ node { int@@ s,@@ n; }; void@@ cpy_clr@@ (struct@@ node@@ a[@@ ],@@ struct@@ node@@ b[@@ ]) { inti; for(i=0;i<=@@ MAX@@ &&(@@ a[i].@@ s@@ !=0@@ ||@@ b[i].@@ s@@ !=0@@ );i++) if(b[i].@@ s@@ !=0) {@@ a[i].@@ s=@@ b[i].@@ s@@ ;@@ a[i].@@ n=@@ b[i].@@ n;@@ b[i].@@ s=0;@@ b[i].@@ n@@ =0;} else {@@ a[i].@@ s=0;@@ a[i].@@ n@@ =0;@@ b[i].@@ n@@ =0;} } int@@ chklst@@ (struct@@ node@@ a[@@ ],int@@ n) { inti; int@@ result=0; for(i=0;@@ a[i].@@ s@@ !=0;i++) {@@ if(a[i].@@ s@@ !=@@ n@@ ){@@ result@@ =0;@@ break;} else@@ result@@ ++; } returnresult; } void@@ init@@ (struct@@ node@@ a[@@ ]) { inti; for(i=0;i<@@ MAX@@ ;i++){@@ a[i].@@ s=0;@@ a[i].@@ n@@ =0;} } voidmain() { struct@@ node@@ a[@@ MAX@@ ],b[@@ MAX@@ ]; inti,j,k,l,@@ _n@@ ,@@ n,@@ sum=0; scanf("%d",&n); while(n--) { scanf("%d",&@@ _n@@ ); for(l@@ =@@ 2;@@ l<@@ _n@@ ;l++) if(@@ _n@@ %@@ l@@ ==0) {@@ init@@ (a@@ );@@ init@@ (@@ b); a[0].@@ s=@@ l@@ ;@@ a[0].@@ n=@@ l; while(@@ chklst@@ (a,@@ _n@@ )@@ ==0&&@@ a[0].@@ s@@ !=0) { i@@ =0@@ ;k@@ =-1; if(a[0]@@ .@@ s@@ ==0)break; while(@@ a[i].@@ s@@ !=0) { if(a[i].@@ s@@ ==@@ _n@@ )@@ sum++; else { for(j=@@ a[i].@@ n@@ ;j<=@@ (@@ _n@@ /@@ a[i].@@ s@@ );j++) if(@@ _n@@ %@@ (@@ a[i].@@ s@@ *@@ j)@@ ==0) {@@ b[@@ ++@@ k@@ ].@@ s=@@ a[i].@@ s@@ *@@ j@@ ;@@ b[k@@ ].@@ n@@ =j;} } i++; } cpy_clr@@ (a,b); } i=0; while(@@ a[i].@@ s@@ !=0) { if(a[i].@@ s@@ ==@@ _n@@ )@@ sum++; i++; } } printf("%d\n",@@ ++@@ sum); sum=0; } }  
c -1
h -1
intmain() { int@@ I@@ ,@@ m,n,@@ a[100][100]; inti,j,k,@@ sum; scanf("%d",&@@ I@@ ); for(k=0;k<@@ I@@ ;k++) { sum=0; scanf("%d%d",&m,&n); for(i=0;i<m;i++) { for(j=0;j<n;j++) { scanf("%d",&a[i][j]); } } for(i=0;i<m;i++) sum=sum+@@ a[i][0]+@@ a[i][n-1]; for(i=0;i<n;i++) sum=sum+@@ a[0]@@ [i]+@@ a[m-1]@@ [i]; sum=sum-@@ a[0][0]@@ -@@ a[0][@@ n-1]-@@ a[m-1][@@ n-1]-@@ a[m-1][@@ 0]; if((@@ m@@ ==@@ n@@ )&&(@@ m@@ ==1@@ )) sum=@@ a[0][@@ 0]; printf("%d\n",sum); } return0; }  
c -1
h -1
0

intmain() { intm; cin>>m; int@@ book[1000]; char@@ person@@ [@@ ]@@ ="@@ ABCDEFGHIJKLMNOPQRSTUVWXYZ@@ "; char@@ people@@ [100][100]; inti,j; int@@ l; int@@ t@@ [100]={0}; for(i=1;i<=m;i++) { cin>>@@ book@@ [i]; cin>>@@ people@@ [i]; l=strlen(@@ people@@ [i]); for(j=0;j<l;j++) { t[@@ people@@ [i][j]@@ -'A']++; } } intmax=0,@@ tt@@ ; for(i=0;i<=@@ 26;i++) { if(t@@ [i]>max) { max=@@ t@@ [i]; tt@@ =i; } } cout<<@@ person@@ [@@ tt@@ ]<<endl; cout<<max<<endl; intk; int@@ already@@ [26@@ ]={@@ 1@@ }; for(i=1;i<=m;i++) { l=strlen(@@ people@@ [i]); for(j=0;j<l;j++) { if(@@ people@@ [i][j]==@@ person@@ [@@ tt@@ ]) { cout<<@@ book@@ [i]<<endl; for(k=0;k<@@ l@@ ;k++) { if((@@ people@@ [i][k]@@ !=@@ person@@ [@@ tt@@ ]@@ )&&(@@ already@@ [@@ people@@ [i][k]@@ -'A'@@ ]@@ !=0)) { already@@ [@@ people@@ [i][k]@@ -'A'@@ ]=0; } } break; } } } return0; }  
c -1
h -1
intmain() { intyear,month,@@ date@@ ,sum; int@@ mon@@ [@@ PI@@ ]; mon@@ [1]=@@ mon@@ [3@@ ]=@@ mon@@ [5@@ ]=@@ mon@@ [@@ 7@@ ]=@@ mon@@ [@@ 8@@ ]=@@ mon@@ [10@@ ]=@@ mon@@ [12@@ ]=31; mon@@ [4@@ ]=@@ mon@@ [@@ 6@@ ]=@@ mon@@ [@@ 9@@ ]=@@ mon@@ [11@@ ]=30; sum=0; scanf("%d%d%d",&year,&month,&@@ date@@ ); if(year%@@ 4==0&&year%100!=0@@ ||@@ year%400==0) { mon@@ [2]=@@ 29; } else { mon@@ [2]=@@ 28; } inti; for(i=1;i<month;i++) { sum+=@@ mon@@ [i]; } sum+=@@ date; printf("%d",sum); return0; }  
c -1
h -1
0

struct@@ pat { char*@@ id; inta; int@@ o@@ ; structpat@@ *next; }; intn; intmain() { structpat@@ *@@ create@@ (int@@ n); structpat@@ *@@ arrange@@ (struct@@ pat@@ *head@@ ); structpat@@ *head,*p; scanf("%d",&n); head=@@ create@@ (n); head=@@ arrange@@ (head); p=head; while(p!=NULL) { printf("%s",@@ p->@@ id); if(p@@ ->next@@ !=NULL@@ )@@ printf("\n"); p=p->next; } } structpat@@ *@@ create@@ (intn) { structpat@@ *head,*p1,*p2; inti; p2=@@ head=@@ MLCP@@ ; for(i=1;i<=n;i++) { p1=@@ MLCP@@ ; p1->id@@ =@@ MLCI@@ ; scanf("%s%d",@@ p1->id,&p1->@@ a); p1->@@ o@@ =i; p2->next=p1; p2=p1; } p2->next=NULL; returnhead; } structpat@@ *@@ arrange@@ (struct@@ pat@@ *head) { voidsort@@ (struct@@ pat@@ *@@ hn@@ ); structpat@@ *@@ p1,*p2,*@@ hn@@ ,*@@ n1@@ ; n1@@ =@@ hn@@ =@@ MLCP@@ ; p2=@@ head;@@ p1=@@ head->next; while(p1!=NULL) { if(p1->@@ a@@ >=60) { p2->next=@@ p1->next; n1@@ ->next@@ =p1;@@ n1@@ =p1; p1=@@ p2->next; } else{@@ p1=p1->next@@ ;@@ p2=@@ p2->next@@ ;} } n1@@ ->next=NULL; sort(@@ hn@@ ); n1@@ ->next=@@ head->next; head=@@ hn@@ ->next; returnhead; } voidsort@@ (struct@@ pat@@ *@@ hn@@ ) { structpat@@ *p1,*p2; char*@@ tid@@ ; int@@ ta@@ ,@@ to@@ ; p1=@@ hn@@ ->next; while(p1!=NULL) { p2=p1->next; while(@@ p2@@ !=NULL) { if(@@ p2->@@ a@@ >@@ p1->@@ a@@ ||(@@ p2->@@ a@@ ==@@ p1->@@ a@@ &&@@ p2->@@ o@@ <@@ p1->@@ o@@ )) { tid@@ =@@ p2->@@ id@@ ;@@ p2->@@ id@@ =p1->@@ id@@ ;@@ p1->id@@ =@@ tid@@ ; ta@@ =@@ p2->@@ a;@@ p2->@@ a=@@ p1->@@ a;@@ p1->@@ a=@@ ta@@ ; to@@ =@@ p2->@@ o@@ ;@@ p2->@@ o@@ =p1->@@ o@@ ;@@ p1->@@ o@@ =@@ to@@ ; } p2=p2->next; } p1=p1->next; } }  
c -1
h -1
intmain() { inti,j,k,@@ m,n,@@ dmax@@ ,@@ a[100],@@ d@@ [100]; scanf("%d",&n); for(i=0;i<n;i++) { scanf("%d",&a[i]); } for(i=0;i<n;i++) d@@ [i]=1; for(i=n-2;i>=0;i--) { for(j=i+1;j<n;j++) { if((@@ a[i]@@ >=@@ a[j]@@ )&&(@@ d@@ [i]<=@@ d@@ [j]@@ )) { d[i]=@@ d@@ [j]+1; } } } dmax@@ =0; for(i=0;i<n;i++) {@@ if(d@@ [i]>@@ dmax@@ ) dmax@@ =@@ d[i]; } printf("%d\n",@@ dmax@@ ); return0; }  
c -1
h -1
0

voidmain() { intm,i,j,@@ temp,@@ max; chara[@@ 1000][@@ 10@@ ],b[@@ 1000][@@ 20],@@ w; intc[@@ 26]; scanf("%d",&m); for(i=0;i<26@@ ;i++)@@ c[i]@@ =0; for(i=0;i<m;i++) { scanf("%s%s",@@ a[i],@@ b[i]); } for(i=0;i<m;i++) { for(j=0;j<strlen(@@ b[i]@@ );j++) { if(b[i][j]=='@@ A')@@ c@@ [0]@@ ++; if(b[i][j]=='@@ B@@ ')c[@@ 1@@ ]++; if(b[i][j]=='@@ C')@@ c[@@ 2@@ ]++; if(b[i][j]=='@@ D@@ ')c[@@ 3@@ ]++; if(b[i][j]=='@@ E@@ ')c[@@ 4@@ ]++; if(b[i][j]=='@@ F@@ ')c[@@ 5@@ ]++; if(b[i][j]=='@@ G')@@ c[@@ 6@@ ]++; if(b[i][j]=='@@ H@@ ')c[@@ 7@@ ]++; if(b[i][j]=='@@ I@@ ')c[@@ 8@@ ]++; if(b[i][j]=='@@ J@@ ')c[@@ 9@@ ]++; if(b[i][j]=='@@ K@@ ')c[@@ 10@@ ]++; if(b[i][j]=='@@ L@@ ')c[@@ 11@@ ]++; if(b[i][j]=='@@ M@@ ')c[@@ 12@@ ]++; if(b[i][j]=='@@ N@@ ')c[@@ 13@@ ]++; if(b[i][j]=='@@ O@@ ')c[@@ 14@@ ]++; if(b[i][j]=='@@ P@@ ')c[@@ 15@@ ]++; if(b[i][j]=='@@ Q@@ ')c[@@ 16@@ ]++; if(b[i][j]=='@@ R@@ ')c[@@ 17@@ ]++; if(b[i][j]=='@@ S@@ ')c[@@ 18@@ ]++; if(b[i][j]=='@@ T')@@ c[@@ 19@@ ]++; if(b[i][j]=='@@ U@@ ')c[@@ 20@@ ]++; if(b[i][j]=='@@ V@@ ')c[@@ 21@@ ]++; if(b[i][j]=='@@ W@@ ')c[@@ 22@@ ]++; if(b[i][j]=='@@ X@@ ')c[@@ 23@@ ]++; if(b[i][j]=='@@ Y@@ ')c[@@ 24@@ ]++; if(b[i][j]=='@@ Z@@ ')c[@@ 25@@ ]++; } } for(i=0;i<26;i++) {@@ temp=0; for(j=0;j<26;j++) { if(c@@ [i]>=@@ c@@ [j]) { temp@@ ++; } } if(temp@@ ==@@ 26@@ ){@@ max@@ =i;@@ break;} } w@@ ='A'+i; printf("%c\n",@@ w); printf("%d\n",@@ c[i]); for(i=0;i<m;i++) { for(j=0;j<strlen(@@ b[i]@@ );j++) { if(b[i]@@ [j]==@@ w@@ ){@@ printf("%s\n",@@ a[i]@@ );break;} } } }  
c -1
h -1
voidmain() { inta[@@ 20],@@ i,@@ m,n,@@ k; for(;;) { k=0; scanf("%d",&a[0]); if(a[0]==-1) break; for(i=1;;i++) { scanf("%d",&a[i]); if(a[i]==0) break; } for(m=0;m<@@ i@@ ;m++) for(n=0;n@@ <i@@ ;n++) if(a[m@@ ]==2*@@ a[n@@ ]) k++; printf("%d\n",@@ k); } }  
c -1
h -1
0

structbook { intnum; char@@ wr@@ [26]; structbook*next; }; voidmain() { inti,n,@@ m=0,@@ j,@@ a,b,@@ c; ints@@ [100]={0}; scanf("%d",&n); structbook@@ *head,*@@ p1,*p2,*@@ p; p1=p2=(struct@@ book@@ *)malloc(LEN); scanf("%d%s",&p1->num,p1->@@ wr@@ ); head=NULL; while(m@@ !=@@ n-1) { m=m+1; if(m@@ ==1)head=p1; elsep2->next=p1; p2=p1; p1=(structbook@@ *)malloc(LEN); scanf("%d%s",&p1->num,p1->@@ wr@@ ); } p2->next=p1; p2=p1; p2->next=NULL; p=head; do { b=strlen(@@ p->@@ wr@@ ); for(j=0;j<@@ b;j++) s[@@ p->@@ wr@@ [j]@@ ]++; p=p->next; }while(p@@ !=NULL); a=@@ s[@@ 65@@ ]; c=@@ 65@@ ; for(i=@@ 66@@ ;i<@@ 91@@ ;i++) if(a<@@ s@@ [i]) { a=@@ s[i]; c=i; } printf("%c\n%d\n",@@ c,@@ a); p=head; do { b=strlen(@@ p->@@ wr@@ ); for(j=0;j<@@ b;j++) if(p->@@ wr@@ [j]==@@ c) printf("%d\n",p->num); p=p->next; }while(p@@ !=NULL); }  
c -1
h -1
voidmain() { intb[@@ 25],@@ a[@@ 25],@@ x=0,@@ n,@@ i,j,k,@@ l; scanf("%d",&n); for(j=0;j<n;j++) scanf("%d",&a[j]); for(k=0;k<n;k++) { b[k@@ ]=0; for(i=0;i<k;i++) { if(a[i]>=@@ a[k]) { if(b[i]>@@ b[k@@ ]) b[k@@ ]=b[i]; } } b[k]=@@ b[k@@ ]+1; } for(l=0;l<@@ k;@@ l++) { if(@@ b[l@@ ]>@@ x) { x=@@ b[l@@ ]; } } printf("%d\n",x); }  
c -1
h -1
0

int@@ run@@ (intn) { if(n@@ %4==0&&@@ n@@ %@@ 100!=0) return1; if(n%@@ 400==0) return1; return0; } int@@ yue@@ (int@@ y@@ ,intn) { if(n@@ ==1||@@ n==@@ 3@@ ||@@ n==@@ 5@@ ||@@ n==@@ 7@@ ||@@ n==@@ 8@@ ||@@ n==@@ 10@@ ||@@ n==@@ 12) return@@ 31; if(@@ run@@ (@@ y)@@ ==1&&@@ n==@@ 2) return@@ 29; if(@@ run@@ (@@ y)@@ ==0&&@@ n==@@ 2) return@@ 28; return@@ 30; } intdays@@ (int@@ y,int@@ m,int@@ d) { intk=0; for(inti=1;i<@@ m;i++) k@@ +=@@ yue@@ (@@ y,@@ i); k@@ +=@@ d; return@@ k; } intmain() { inty,m,@@ d; scanf("%d%d%d",&y,&m,&d); printf("%d",@@ days@@ (@@ y,@@ m,@@ d@@ )); return0; }  
c -1
h -1
intmain() { inta[16@@ ]={0},@@ n,@@ i=1; for(;@@ a[i]@@ !=@@ -1;@@ ) { n=0; for(i=0;;i++) { cin>>a[i]; for(intj=0;j<i;j++) { if(a[j]@@ *2==@@ a[i]@@ ||@@ a[j]==@@ a[i]@@ *2@@ ){@@ n@@ ++;} } if(a[i]@@ ==0||@@ a[i]==@@ -1@@ ){@@ break;} } if(a[i]!=@@ -1@@ ){@@ cout<<n@@ <<endl;} } }  
c -1
h -1
0

intmax@@ [26]={0}; inta[@@ 26]={0}; void@@ attack@@ (intn) { inti=0,j=0,@@ premax@@ =0; for(i=0;i<n;i++) {@@ max@@ [i]=1; for(j=0;j<i;j++) { if(a[i]<=@@ a[j]) { premax@@ =@@ max@@ [j]+1; if(@@ premax@@ >max@@ [i]) max@@ [i]=@@ premax@@ ;} } } } intmain() {@@ static@@ intn,i,@@ num=0; scanf("%d",&n); for(i=0;i<n;i++) scanf("%d",&a[i]); attack@@ (n); num=@@ max@@ [0]; for(i=1;i<n;i++) if(max@@ [i]>@@ num) num=@@ max@@ [i]; printf("%d",@@ num); }  
c -1
h -1
intmain(intargc,char*argv[]) { intn; scanf("%d",&n); inti,j; int@@ c@@ [100][100]; int@@ a1,a2,@@ b1,@@ b2@@ ,@@ a,b,@@ s; for(i=0;i<n;i++){ for(j=0;j<n;j++){ scanf("%d",&@@ c@@ [i][j]); } } for(i=0;i<n;i++){ for(j=0;j<n;j++){ if(c@@ [i][j]==0){ a1@@ =i; b1@@ =j; } } } for(i=n-1;i>=0;i--){ for(j=n-1@@ ;j>=0;j--){ if(c@@ [i][j]==0){ a2@@ =i; b2@@ =j; } } } a=@@ a1@@ -@@ a2@@ -1; b=@@ b1@@ -@@ b2@@ -1; s=@@ a*@@ b; printf("%d",s); return0; }  
c -1
h -1
0

intmain(){ intn,k; int@@ y=0; ints[@@ 1000],@@ z[@@ 1000000@@ ]; scanf("%d%d",&n,&k); inti,@@ u@@ ,j,@@ v@@ ; for(i=0;i<n;i++){ scanf("%d",&s[i]); } for(@@ u@@ =0;@@ u@@ <n;@@ u@@ ++){ for(j=@@ u@@ +1@@ ;j<@@ n;j++){ z@@ [y@@ ]=@@ s[@@ u@@ ]+@@ s[j]; y++; } } int@@ a=0; for(@@ v@@ =0;@@ v@@ <@@ y@@ ;@@ v@@ ++){ if(z@@ [@@ v@@ ]==k){ a=1; break; } } if(a@@ ==1){@@ printf("yes");} else{printf("no");} return0; }  
c -1
h -1
inta[@@ 1000][@@ 1000]={0}; intmain() { intn,i,j,@@ b=0,@@ c=0,@@ d=0,@@ e=0,@@ f,@@ x=0,@@ y=0; scanf("%d",&n); for(i=0;i<n;i++) { for(j=0;j<n;j++) { scanf("%d",&a[i][j]); } } for(i=0;i<n;i++) { for(j=0;j<n;j++) { if(a[i][j]==0) { b=i; c@@ =j; x=1; break; } } if(x==1) break; } for(i=n-1;i>=0;i--) { for(j=n-1;j>=0;j--) { if(a[i][j]==0) { d@@ =i; e@@ =j; y=1; break; } } if(y@@ ==1) break; } f@@ =(@@ d-b@@ -1)*(@@ e@@ -c@@ -1); printf("%d",@@ f); return0; }  
c -1
h -1
0

struct@@ information { inta; chars[@@ 26]; int@@ len; }@@ xinxi@@ [1000]; voidmain() { intn,i,@@ c[@@ 26]={0},@@ max,@@ t@@ ,j; scanf("%d",&n); for(i=0;i<n;i++) { scanf("%d%s",&@@ xinxi[i].@@ a,@@ xinxi[i].@@ s); xinxi[i].@@ len=strlen(@@ xinxi[i].@@ s); } for(i=0;i<n;i++) for(j=0;j<@@ xinxi[i].@@ len@@ ;j++) { if(xinxi[i].@@ s[j]=='@@ A')@@ c[@@ 1@@ ]++; if(xinxi[i].@@ s[j]=='@@ B@@ ')c[@@ 2@@ ]++; if(xinxi[i].@@ s[j]=='@@ C')@@ c[@@ 3@@ ]++; if(xinxi[i].@@ s[j]=='@@ D@@ ')c[@@ 4@@ ]++; if(xinxi[i].@@ s[j]=='@@ E@@ ')c[@@ 5@@ ]++; if(xinxi[i].@@ s[j]=='@@ F@@ ')c[@@ 6@@ ]++; if(xinxi[i].@@ s[j]=='@@ G')@@ c[@@ 7@@ ]++; if(xinxi[i].@@ s[j]=='@@ H@@ ')c[@@ 8@@ ]++; if(xinxi[i].@@ s[j]=='@@ I@@ ')c[@@ 9@@ ]++; if(xinxi[i].@@ s[j]=='@@ J@@ ')c[@@ 10@@ ]++; if(xinxi[i].@@ s[j]=='@@ K@@ ')c[@@ 11@@ ]++; if(xinxi[i].@@ s[j]=='@@ L@@ ')c[@@ 12@@ ]++; if(xinxi[i].@@ s[j]=='@@ M@@ ')c[@@ 13@@ ]++; if(xinxi[i].@@ s[j]=='@@ N@@ ')c[@@ 14@@ ]++; if(xinxi[i].@@ s[j]=='@@ O@@ ')c[@@ 15@@ ]++; if(xinxi[i].@@ s[j]=='@@ P@@ ')c[@@ 16@@ ]++; if(xinxi[i].@@ s[j]=='@@ Q@@ ')c[@@ 17@@ ]++; if(xinxi[i].@@ s[j]=='@@ R@@ ')c[@@ 18@@ ]++; if(xinxi[i].@@ s[j]=='@@ S@@ ')c[@@ 19@@ ]++; if(xinxi[i].@@ s[j]=='@@ T')@@ c[@@ 20@@ ]++; if(xinxi[i].@@ s[j]=='@@ U@@ ')c[@@ 21@@ ]++; if(xinxi[i].@@ s[j]=='@@ V@@ ')c[@@ 22@@ ]++; if(xinxi[i].@@ s[j]=='@@ W@@ ')c[@@ 23@@ ]++; if(xinxi[i].@@ s[j]=='@@ X@@ ')c[@@ 24@@ ]++; if(xinxi[i].@@ s[j]=='@@ Y@@ ')c[@@ 25@@ ]++; if(xinxi[i].@@ s[j]=='@@ Z@@ ')c[@@ 26@@ ]++; } max=@@ c[@@ 0]; t=0; for(i=1;i<26;i++) { if(c@@ [i]>max) { max=@@ c[i]; t=i; } } printf("%c\n",@@ 64@@ +@@ t); printf("%d\n",@@ c[@@ t@@ ]); for(i=0;i<n;i++) for(j=0;j<@@ xinxi[i].@@ len@@ ;j++) if(xinxi[i].@@ s@@ [j]==@@ 64@@ +@@ t) printf("%d\n",@@ xinxi[i].@@ a); }  
c -1
h -1
intmain(){ intn,k,i,@@ m; scanf("%d%d",&n,&k); intsz[1000]; for(i=0;i<n-1;i++){ scanf("%d",&sz[i]); } scanf("%d",&@@ sz[@@ n-1]); int@@ a=0; for(a=0;a@@ <n;@@ a++){ m=0; for(i=a@@ +1;i<@@ n;i++){ if(@@ sz[a@@ ]+@@ sz@@ [i]==@@ k){ m=1; printf("yes"); break; } } if(m@@ ==1){ break; } } if(m@@ ==0){ printf("no"); } return0; }  
c -1
h -1
0

main() {@@ intb[@@ 26],@@ h@@ [26],@@ k,i,j,@@ t=0; scanf("%d",&k); for(i=1;i<=k;i++) scanf("%d",&h[i]); for(i=1;i<=k;i++) { for(j=1@@ ,@@ t@@ =0;j<@@ i;j++) { if(h@@ [j]>=@@ h@@ [i]) {@@ if(b[j]@@ >@@ t) t=@@ b[j]@@ ;} } if(t@@ ==0)@@ b[i]=1; else@@ b[i]=@@ t@@ +1;} for(i=1@@ ,@@ t@@ =0;i<=@@ k;i++) { if(b[i]>@@ t) t=b[i]; } printf("%d",t); getchar(); getchar(); }  
c -1
h -1
intmain() {@@ intn,i,j,@@ a,b,@@ r,@@ m,@@ c; scanf("%d",&n); r=0;@@ m=0; for(i=1;i<=n;i++) {@@ for(j=1@@ ,@@ b=@@ 255@@ ;j<=@@ n;j++) {@@ scanf("%d",&a); if(a@@ ==0)@@ m=m+1; if(b@@ >@@ a)@@ r=r@@ +1; b=@@ a; } } r@@ =(@@ r@@ +@@ 2)@@ /2; c@@ =(@@ (m@@ -2*@@ r@@ )+@@ 4)@@ /2; m@@ =(@@ r@@ -2)*(@@ c@@ -2); printf("%d\n",m); return0; }  
c -1
h -1
0

intmain() { intn; ints[@@ 60@@ ]; cin>>n; int@@ key@@ =1; for(inti=0;i<n;i++) { cin>>@@ s[i]; s@@ [i@@ +30@@ ]=1; for(intj=i@@ -1@@ ;j>=0;j--) { if(s@@ [j]>=@@ s@@ [i]) { if(s@@ [j@@ +30@@ ]>=@@ s@@ [i@@ +30@@ ])@@ s@@ [i@@ +30@@ ]=@@ s@@ [j@@ +30@@ ]+1; } } if(s@@ [i@@ +30@@ ]>@@ key@@ )@@ key@@ =@@ s@@ [i@@ +30@@ ]; } cout<<@@ key@@ ; return0; }  
c -1
h -1
intmain() { inti,j,n,@@ left_i@@ =-1,@@ left_j@@ ,@@ right_i@@ ,@@ right_j@@ ,@@ num,@@ temp; scanf("%d",&n); for(i=0;i<n;i++){ num=0; for(j=0;j<n;j++){ scanf("%d",&@@ temp); if(temp@@ ==0){ num++; if(num@@ ==1&&@@ left_i@@ <0@@ ){ left_i@@ =i; left_j@@ =j; } else{ right_i@@ =i; right_j@@ =j; } } } } printf("%d\n",@@ (@@ right_i@@ -@@ left_i@@ -1)*(@@ right_j@@ -@@ left_i@@ -1)); return0; }  
c -1
h -1
0

inta[@@ row][col]; intmain(){ intr,@@ c,@@ i,j,@@ n; scanf("%d%d",&@@ r@@ ,&c); for(i=0;i<@@ r@@ ;i++){ for(j=0;j<@@ c@@ ;j++){ scanf("%d\n",&@@ a[i][j]@@ );} } for(n=0;n@@ <=@@ c+@@ r@@ -2@@ ;n++){ for(i=0;i<=@@ n@@ &&i@@ <@@ r@@ ;i++){ j=@@ n-@@ i; if(j<@@ c){ printf("%d\n",a[i][j]); } } } return0; }  
c -1
h -1
intmain() { intsz[@@ 16],@@ result@@ [100]; inti,j,k,@@ n=0,@@ row@@ =0; while(1){ for(i=1;i<@@ 16@@ ;i++){ sz[i]@@ =0; } scanf("%d",&sz@@ [0]); if(sz@@ [0]==@@ -1){ break; }else{ k=1; for(i=1;i<@@ 16@@ ;i++){ scanf("%d",&sz[i]); if(sz[i]@@ ==0){ break; }else{ k++; } } n=0; for(i=1;i<@@ k;i++){ for(j=0;j<i;j++){ if(sz@@ [i]==@@ sz[j]@@ *2@@ ||@@ sz@@ [j]==@@ sz[i]@@ *2@@ ){ n++; } } } result@@ [@@ row@@ ]=@@ n; row@@ ++; } } for(i=0;i<row;i++){ printf("%d\n",@@ result@@ [i]); } return0; }  
c -1
h -1
0

structbook { intid; charwriter@@ [26]; int@@ length@@ ; }@@ zz@@ [999]; intmain() { intn,i,j,k; int@@ letter@@ [26]={0}; int@@ letter_book@@ [26@@ ][@@ 999@@ ]={0}; cin>>n; for(i=0;i<n;i++) { cin>>@@ zz@@ [i].@@ id; cin>>@@ zz@@ [i].@@ writer@@ ; zz@@ [i].@@ length@@ =strlen(@@ zz@@ [i].@@ writer); } for(j=0;j<n;j++) { for(k=0;k<@@ zz@@ [j].@@ length@@ ;k++) { letter_book@@ [@@ zz@@ [j].@@ writer@@ [k]@@ -'A'@@ ][@@ letter@@ [@@ zz@@ [j].@@ writer@@ [k]@@ -'A'@@ ]@@ ]=@@ zz@@ [j].@@ id; letter@@ [@@ zz@@ [j].@@ writer@@ [k]@@ -'A']++; } } intmax=0,@@ t; for(i=0;i<26;i++) { if(@@ letter@@ [i]>max) { max=@@ letter@@ [i]; t=i; } } char@@ m; m=@@ 'A'@@ +@@ t; cout<<@@ m@@ <<endl; cout<<max<<endl; for(i=0;i<@@ max@@ ;i++) cout<<@@ letter_book@@ [t@@ ]@@ [i]<<endl; }  
c -1
h -1
int@@ isRN@@ (intyear@@ ) { int@@ result; if((year%4==0&&year%100!=0@@ )||@@ year%400==0) result=1; else result=0; returnresult; } voidmain() { intyear,month,day; inti; intsum=0; scanf("%d%d%d",&year,&month,&day); for(i=1;i<month;i++) { if(i==1||i==3||i==5||i==7||i==8||i==10@@ ||i==@@ 12) sum+=@@ 31; elseif(i==@@ 4||i==6||i==9||i==11) sum+=@@ 30; else { if(@@ isRN@@ (year@@ )@@ ==1) sum+=@@ 29; else sum+=@@ 28; } } sum+=@@ day; printf("%d",sum); }  
c -1
h -1
0

intmain(intargc,char*argv[]) { ints[@@ 26@@ ]={0@@ ,@@ 0,0,0,0,0,0,0,0,@@ 0,0,0,0,0,0,0,0,@@ 0,0,0,0,0,0,0,0,@@ 0@@ }; structbook{ inta; charname@@ [27]; }; structbook@@ list@@ [999]; charc; intn,i,j,@@ b,@@ maxnum@@ =0,@@ max; scanf("%d",&n); for(i=0;i<n;i++){ scanf("%d%s",&@@ list@@ [i].@@ a,@@ list@@ [i].@@ name); for(j=0;@@ list@@ [i].name@@ [j]@@ !='\0';j++){ c=@@ list@@ [i].name@@ [j]; b=@@ c@@ -'A'; s[@@ b@@ ]++; } } for(i=0;i<26;i++){ if(s@@ [i]>@@ maxnum@@ ){ maxnum@@ =@@ s[i]; max=i; } } printf("%c\n%d\n",@@ 'A'+@@ max,@@ maxnum@@ ); for(i=0;i<n;i++){ for(j=0;@@ list@@ [i].name@@ [j]@@ !='\0';j++){ if(@@ list@@ [i].name@@ [j]@@ -'@@ A@@ '==@@ max@@ ){ printf("%d\n",@@ list@@ [i].@@ a); } } } return0; }  
c -1
h -1
intmain() {@@ inta[100@@ ],b[100],c[@@ 200],@@ i,@@ m,n; scanf("%d",&m); scanf("%d",&n); for(i=0;i<m;i++) scanf("%d",&a[i]); for(i=0;i<n;i++) scanf("%d",&b[i]); intj,@@ p; for(i=m@@ -2@@ ;i>=0;i--) { for(j=0;j<=i;j++) { if(a[j]>a[j+1]) { p=@@ a[j]; a[j]=a[j+1]; a[j+1]=@@ p; } } } for(i=n-2;i>=0;i--) { for(j=0;j<=i;j++) { if(b[j]>b[j+1]) { p=@@ b[j]; b[j]=b[j+1]; b[j+1]=@@ p; } } } int@@ q; for(q=0;q@@ <m;@@ q++) c[@@ q@@ ]=a[@@ q@@ ]; for(q=@@ m;@@ q@@ <@@ m+@@ n;@@ q++) c[@@ q@@ ]=@@ b[@@ q@@ -@@ m]; ints; printf("%d",c@@ [0]); for(@@ s@@ =1;@@ s@@ <@@ m+@@ n;@@ s++) printf("%d",c[@@ s@@ ]); }  
c -1
h -1
0

intmain() { inti,j,@@ p,@@ changdu1@@ ,@@ changdu2@@ ,@@ changdu3@@ ,@@ m; char@@ x@@ [256@@ ]={0},@@ y@@ [256@@ ]={0},@@ z[@@ 513@@ ]={0},@@ media@@ [256@@ ][@@ 256@@ ]={0}; scanf("%s",@@ x); scanf("%s",@@ y); scanf("%s",@@ z); changdu1@@ =strlen(@@ x); changdu2@@ =strlen(@@ y); changdu3@@ =strlen(@@ z); if(@@ changdu1@@ <@@ changdu2@@ ); else { for(i=0;i<@@ changdu1@@ -@@ changdu2@@ +1;i++) { for(j=0;j<@@ changdu2@@ ;j++) media@@ [i][j]=@@ x@@ [i+j@@ ]; } for(i=0;i<@@ changdu1@@ -@@ changdu2@@ +1;i++) { if(strcmp(@@ media@@ [i],@@ y)@@ ==0) { p=i; break; } } if(i==@@ changdu1@@ -@@ changdu2@@ +1) { printf("%s",@@ x); return0; } else { strcpy(@@ media@@ [p@@ ],@@ z); if(p@@ !=0) { for(i=0;i<p@@ ;i++) printf("%c",@@ x[i]); printf("%s",@@ media@@ [p@@ ]); if(@@ changdu2@@ >@@ changdu3@@ )@@ m=@@ changdu2@@ ; else@@ m=@@ changdu3@@ ; for(i=@@ p@@ +m@@ ;i<@@ changdu1@@ ;i++) printf("%c",@@ x[i]); printf("\n"); } else { printf("%s",@@ media@@ [p@@ ]); for(i=@@ p+@@ changdu3@@ ;i<@@ changdu1@@ ;i++) printf("%c",@@ x[i]); printf("\n"); } } } return0; }  
c -1
h -1
struct@@ data { intnum[@@ 100000],@@ a[@@ 100000@@ ],b[@@ 100000],@@ sum[@@ 100000]; }@@ data@@ ; intmain(intargc,char*argv[]) { inti,n,@@ x=0,@@ y=0,@@ z=0; scanf("%d",&n); for(i=0;i<n;i++) { scanf("%d%d%d",&@@ data.@@ num[i]@@ ,&@@ data.@@ a[i],&@@ data.@@ b[i]); data.@@ sum[i]=@@ data.@@ a[i]+@@ data.@@ b[i]; } for(i=0;i<n;i++) { if(@@ data.@@ sum@@ [i]>@@ data.@@ sum[@@ x@@ ]) { z=@@ y; y=@@ x; x@@ =i; continue; } if(@@ data.@@ sum@@ [i]<=@@ data.@@ sum[@@ x@@ ]@@ &&@@ data.@@ sum@@ [i]>@@ data.@@ sum[@@ y@@ ]) { z=@@ y; y@@ =i; continue; } if(@@ data.@@ sum@@ [i]<=@@ data.@@ sum[@@ y@@ ]@@ &&@@ data.@@ sum@@ [i]>@@ data.@@ sum[@@ z@@ ]) z@@ =i; } printf("%d%d\n",@@ data.@@ num[@@ x@@ ],@@ data.@@ sum[@@ x@@ ]); printf("%d%d\n",@@ data.@@ num[@@ y@@ ],@@ data.@@ sum[@@ y@@ ]); printf("%d%d",@@ data.@@ num[@@ z@@ ],@@ data.@@ sum[@@ z@@ ]); }  
c -1
h -1
0

intmain() { inta[@@ 101][@@ 101@@ ]={0},@@ m,n,@@ k,i,j,@@ t,@@ sum[@@ 1001@@ ]={0}; cin>>k; for(i=1;i<=k;i++) { cin>>m>>n; for(t@@ =1;t@@ <=@@ m;@@ t++) for(j=1;j<=n;j++) { cin>>@@ a[t@@ ]@@ [j]; } for(j=1;j<=n;j++) sum[i]=sum[i]+@@ a[1]@@ [j]+@@ a[m]@@ [j]; for(j=1;j<=m;j++) { if(j@@ ==1||@@ j==@@ m)@@ continue; sum[i]=sum[i]+@@ a[j]@@ [1]@@ +@@ a[j]@@ [n]; } } for(i=1;i<=k;i++) cout<<sum@@ [i]<<endl; return0; }  
c -1
h -1
intmain() { intn,i,j; intsz[@@ 1000][1000]; int@@ a1,a2,@@ b1,@@ b2@@ ,@@ a,b,@@ c; scanf("%d",&n); for(i=0;i<n;i++) { for(j=0;j<n;j++) { scanf("%d",&sz[i][j]); } } for(i=0;i<n;i++) { for(j=0;j<n;j++) { if(sz@@ [i][j]==0&&@@ sz@@ [i-1][j]@@ !=0&&@@ sz[i]@@ [j-1]@@ !=0) { a1@@ =@@ i,@@ b1@@ =j; } if(sz@@ [i][j]==0&&@@ sz@@ [i+1][j]@@ !=0&&@@ sz[i]@@ [j+1]@@ !=0) { a2@@ =@@ i,@@ b2@@ =j; } } } a=@@ a2-a1@@ -1; b=@@ b2-b1@@ -1; c=@@ a*@@ b; printf("%d\n",@@ c); return0; }  
c -1
h -1
0

intmain(){ intx,y,@@ i,@@ a; double@@ w,@@ n; x=0; y=0; n=0; a=0; char@@ sz[@@ 500],@@ s[@@ 500]; scanf("%lf",&@@ w); scanf("%s",@@ sz@@ ); scanf("%s",s); for(i=0;@@ sz[i]@@ !='\0';i++){ x++; } for(i=0;s[i]@@ !='\0';i++){ y++; } if(x@@ !=@@ y){ a=1; } elseif(x@@ ==@@ y){ for(i=0;@@ sz[i]@@ !='\0';i++){ if(sz@@ [i]=='A'||@@ sz@@ [i]=='C'||@@ sz@@ [i]=='T'||@@ sz@@ [i]=='@@ G'){ if(sz@@ [i]==@@ s[i]@@ ){ n=n+1; } elseif(@@ s@@ [i]!='A'&&@@ s@@ [i]!='T'&&@@ s@@ [i]!='C'&&@@ s@@ [i]!='G'){ a=1; } } elseif(@@ sz@@ [i]!='A'&&@@ sz@@ [i]!='T'&&@@ sz@@ [i]!='C'&&@@ sz@@ [i]!='G'){ a=1; } } } if(a@@ ==1){ printf("error"); } elseif(a@@ ==0){ n@@ =1.0*@@ n/@@ x; if(n@@ >=@@ w@@ ){ printf("yes"); } elseif(n@@ <@@ w@@ ){ printf("no"); } } return0; }  
c -1
h -1
struct@@ mice { int@@ wei@@ ; char@@ color@@ [100]; struct@@ mice@@ *next; }; struct@@ mice@@ *creat@@ (int@@ c) { struct@@ mice@@ *@@ head; struct@@ mice@@ *p1,*p2; struct@@ mice@@ *@@ kok@@ ; kok@@ =(struct@@ mice@@ *)malloc(LEN); kok@@ ->@@ wei@@ =0;@@ strcpy(@@ kok@@ ->@@ color@@ ,"@@ \@@ 0@@ "); intt; t=0; p1=p2=(struct@@ mice@@ *)malloc(LEN); scanf("%s%d",p1->@@ color@@ ,&p1->@@ wei@@ ); head=NULL; while(t@@ <@@ c) { t=t+1; if(t@@ ==1) {@@ head@@ =p1;} else { p2->next=p1; p2=p1; p1=(struct@@ mice@@ *)malloc(LEN); scanf("%s%d",p1->@@ color@@ ,&p1->@@ wei@@ ); } } p2->next=p1; p2=p1; p2->next=@@ kok@@ ; return(head); } void@@ mun@@ (struct@@ mice@@ *@@ hoih@@ ,int@@ io@@ ) { inti,j,k; k=0; struct@@ mice@@ *@@ bt@@ ; bt@@ =@@ hoih@@ ; charstr@@ [100]; for(i=0;i<@@ io@@ ;i++) { for(j=0;j<@@ io@@ -i;j++) { if(@@ hoih@@ ->@@ wei@@ <(@@ hoih@@ ->next@@ )@@ ->@@ wei@@ &&(@@ hoih@@ ->next@@ )@@ ->@@ wei@@ >=60) { k=@@ hoih@@ ->@@ wei@@ ; hoih@@ ->@@ wei@@ =(@@ hoih@@ ->next@@ )@@ ->@@ wei@@ ; (@@ hoih@@ ->next@@ )@@ ->@@ wei@@ =k; strcpy(@@ str,@@ hoih@@ ->@@ color@@ ); strcpy(@@ hoih@@ ->@@ color@@ ,@@ (@@ hoih@@ ->next@@ )@@ ->@@ color@@ ); strcpy(@@ (@@ hoih@@ ->next@@ )@@ ->@@ color@@ ,@@ str); } hoih@@ =@@ hoih@@ ->next; } hoih@@ =@@ bt@@ ; } return; } voidmain() { intn,@@ h; struct@@ mice@@ *creat@@ (int@@ c); struct@@ mice@@ *p,*@@ he@@ ; scanf("%d",&n); p=@@ creat@@ (n); he@@ =p; void@@ mun@@ (struct@@ mice@@ *@@ hoih@@ ,int@@ io@@ ); mun@@ (p,@@ n); p=@@ he@@ ; for(h=0;h@@ <n;@@ h++) { printf("%s\n",p->@@ color@@ ); p=p->next; } }  
c -1
h -1
0

struct@@ kb { charID[10]; int@@ nl@@ ; }@@ kbr@@ [100],@@ lnr@@ [100],@@ ln@@ ; intmain() { intn,i,@@ k=0,@@ l; scanf("%d",&n); for(i=0;i<n;i++){ scanf("%s%d",&@@ kbr@@ [i].@@ ID,&@@ kbr@@ [i].@@ nl@@ ); } for(i=0;i<n;i++){ if(@@ kbr@@ [i].@@ nl@@ >=60){ strcpy(@@ lnr@@ [k].@@ ID,@@ kbr@@ [i].ID); lnr@@ [k].@@ nl@@ =@@ kbr@@ [i].@@ nl@@ ; k++; strcpy(@@ kbr@@ [i].@@ ID@@ ,"@@ 000000000@@ "); } } for(i=1;i<@@ k;i++){ for(l=0;l<@@ k@@ -i@@ ;@@ l++){ if(@@ lnr@@ [l@@ ].@@ nl@@ <@@ lnr@@ [l@@ +1@@ ].@@ nl@@ ){ ln@@ =@@ lnr@@ [l@@ +1]; lnr@@ [l@@ +1]=@@ lnr@@ [l]; lnr@@ [l@@ ]=@@ ln@@ ; } } } for(i=0;i<k;i++){ printf("%s\n",@@ lnr@@ [i].ID); } for(i=0;i<n;i++){ if(strcmp(@@ kbr@@ [i].@@ ID@@ ,"@@ 000000000@@ "@@ )@@ ==1){ printf("%s\n",@@ kbr@@ [i].ID); } } return0; }  
c -1
h -1
struct@@ sick {@@ charname@@ [10]; intage; }; intmain() { intn,i,@@ count=0,@@ j; struct@@ sick@@ s@@ [100],@@ a[100],@@ t; charb[@@ 3@@ ]; gets(b); n=@@ atoi@@ (@@ b); for(i=0;i<n;i++) scanf("%s%d",@@ s[i].@@ name@@ ,&@@ s@@ [i].age); if(n==1) printf("%s",@@ s@@ [0].@@ name); else {@@ for(i=0;i<n;i++) if(s@@ [i].age>=60) {@@ a[@@ count@@ ]=@@ s[i]; count++; } for(i=0;i<@@ count@@ -1;i++) for(j=0;j<@@ count@@ -1-i;j++) if(a[j]@@ .@@ age@@ <@@ a[j+1@@ ].age) {t=@@ a[j];a[j]=a[j+1];@@ a[j+1]=@@ t;} for(i=0;i<@@ count@@ ;i++) printf("%s\n",@@ a[i].@@ name); for(i=0;i<n;i++) if(s@@ [i].age<60) printf("%s\n",@@ s[i].@@ name); } return0; }  
c -1
h -1
1


intmain() { inta[1000]; inti,j,n,@@ k; int@@ l=0; int@@ swap@@ ; scanf("%d",&n); scanf("%d",&k); for(i=0;i<n;i++) { scanf("%d",&a[i]); } for(i=0;i<n-1;i++) { for(j=i+1;j<n;j++) { if(a[i]+a[j]==k) { printf("yes"); return0; } } } printf("no"); return0; }  
c -1
h -1
voidmain() { intn,@@ m@@ [100][100],@@ i,j,@@ a=0,b=0,@@ c=0,@@ d=0,@@ x,y,@@ s; scanf("%d",&n); for(i=0;i<n;i++) for(j=0;j<n;j++) scanf("%d",&@@ m@@ [i][j]); for(i=0;i<n;i++) for(j=0;j<n;j++) { if(m@@ [i][j]==0&&@@ m[i]@@ [j-1@@ ]==255@@ &&m@@ [i]@@ [j+1@@ ]==0) a@@ =j; if(j==@@ n-1@@ &&m@@ [i][j]==0) b=j; elseif(@@ j@@ !=@@ n-1@@ &&m@@ [i][j]==0&&@@ m[i]@@ [j+1@@ ]==255@@ &&m@@ [i]@@ [j-1]@@ ==0) b=j; if(i@@ ==0&&@@ m@@ [i][j]==0) c=i; elseif(@@ i@@ !=0&&@@ m@@ [i][j]==0&&@@ m@@ [i-1]@@ [j]==@@ 255@@ &&m@@ [i+1][j]@@ ==0) c=i; if(i==@@ n-1@@ &&m@@ [i][j]==0) d@@ =i; elseif(@@ i@@ !=@@ n-1@@ &&m@@ [i][j]==0&&@@ m@@ [i+1]@@ [j]==@@ 255@@ &&m@@ [i-1][j]@@ ==0) d@@ =i; } x=@@ b-@@ a@@ -1; y=@@ d@@ -c@@ -1; s=@@ x@@ *@@ y; printf("%d",s); }  
c -1
h -1
0

int@@ su@@ [@@ 40000@@ ],b[@@ 10000],@@ ans; void@@ zhaosushu@@ () { inti,j,@@ p; for(i=2@@ ;i<@@ 32768@@ ;i++) { p=1; for(j=2;j<=@@ sqrt@@ (i@@ );j++) if(i@@ %j@@ ==0){ p=0; break; } if(p@@ ==0)@@ continue; su@@ [p@@ ]=1; } } void@@ resolve@@ (inta,int@@ x) { inti; if(a@@ ==1@@ ||(@@ su@@ [a]@@ ==1&&@@ a@@ >=@@ b[@@ x@@ -1]@@ )){ ans@@ ++; return; } for(i=2;i<=@@ a;i++) if(a@@ %i==0&&@@ i>=@@ b[@@ x@@ -1]@@ ){ b[@@ x@@ ]=i; resolve@@ (a@@ /i,@@ x@@ +1); b[@@ x@@ ]=0; } } intmain() { intn,i,@@ a; memset(@@ su@@ ,0,sizeof(@@ su@@ )); zhaosushu@@ (); cin>>n; for(i=1;i<=n;i++) { cin>>a; ans=0; memset@@ (b,@@ 0,sizeof(@@ b@@ )); resolve@@ (a,@@ 1); cout<<ans@@ <<endl; } return0; }  
c -1
h -1
intmain(){ intk; scanf("%d",&k); while(k@@ --){ intm,n; int@@ data@@ [100][100]; scanf("%d%d",&@@ m,@@ &@@ n); inti,j; for(i=0;i<m;i++) for(j=0;j<n;j++) scanf("%d",&@@ data@@ [i][j]); intsum=0; for(i=0;i<m;i++) sum=sum+@@ data@@ [i]@@ [0]+@@ data@@ [i]@@ [n-1]; for(i=1;i<n-1;i++) sum=sum+@@ data@@ [0]@@ [i]+@@ data@@ [m@@ -1]@@ [i]; printf("%d\n",sum); } }  
c -1
h -1
0

intmain() { intn,k,i,j,@@ x,y,@@ t,@@ ans@@ [@@ 1000]={0}; cin>>n; for(k=1;k<=n;k++) { cin>>x@@ >>@@ y; for(i=1;i<=@@ x;i++) for(j=1;j<=@@ y;j++) { cin>>t; if((i@@ ==1)@@ ||(@@ i==@@ x@@ )||(@@ j@@ ==1)@@ ||(@@ j==@@ y@@ ))@@ ans@@ [k]@@ +=@@ t; } } for(i=1;i<=n;i++) { cout<<ans@@ [i]; if(i!=@@ n)@@ cout<<endl; } return0; }  
c -1
h -1
inta[100],b[100]; int@@ al@@ =0,@@ bl@@ =0,@@ i,j,k; voidf1@@ () {@@ cin>>@@ al@@ >>@@ bl@@ ; for(i=0;i<@@ al@@ ;i++) {@@ cin>>a[i]; } for(i=0;i<@@ bl@@ ;i++) {@@ cin>>b[i]; } } voidf2@@ () {@@ for(i=0;i<@@ al@@ -1;i++) {@@ for(j=i;j<@@ al@@ ;j++) {@@ if(a[i]>@@ a[j]@@ ){@@ k=@@ a[i];a[i]=@@ a[j];a[j]=@@ k@@ ;} } } for(i=0;i<@@ bl@@ -1;i++) {@@ for(j=i;j<@@ bl@@ ;j++) {@@ if(b[i]>@@ b[j]@@ ){@@ k=@@ b[i]@@ ;@@ b[i]=b[j]@@ ;@@ b[j]=@@ k@@ ;} } } } void@@ f3@@ () {@@ for(i=0;i<@@ bl@@ ;i++) {@@ a[i@@ +@@ al@@ ]=b[i]; } } void@@ f4@@ () {@@ for(i=0;i<@@ al@@ +@@ bl@@ -1;i++) {@@ cout<<a[i]<<""; } cout<<a[@@ al@@ +@@ bl@@ -1]; } intmain() {@@ f1@@ ();@@ f2@@ ();@@ f3@@ ();@@ f4@@ (); return0; }  
c -1
h -1
0

intmain() { doublen; intcount@@ =0,@@ i; chara[501],b[501]; scanf("%lf%s%s",&@@ n,@@ a,b); if(@@ (int)@@ strlen(a)@@ !=@@ (int)@@ strlen(b@@ )) { printf("error"); } else { for(i=0;i<@@ (int)@@ strlen(a)@@ ;i++) { if(((@@ a[i]!='@@ A')&&(@@ a[i]!='@@ T')&&(@@ a[i]!='@@ C')&&(@@ a[i]!='@@ G')@@ )||((@@ b[i]!='@@ A')&&(@@ b[i]!='@@ T')&&(@@ b[i]!='@@ C')&&(@@ b[i]!='@@ G')@@ )) { printf("error"); return0; } else@@ if(a[i]==b[i]) { count++; } } if(1.0*@@ count@@ /@@ (int)@@ strlen(a)@@ >=@@ n) printf("yes"); else{ printf("no"); } } return0; }  
c -1
h -1
intmain() { inti,j,k,@@ sum,@@ e=0; inta[@@ 20]; for(;;) { sum=0; for(i=0;;i++) { cin>>a[i]; if(a[i]==0) { i--; break; } else@@ if(a[i]==@@ -1@@ ){@@ e@@ =-@@ 1@@ ;break;} } if(e@@ ==-1)break; for(j=0;j<=i;j++) { for(k=0;k<=@@ i;k++) { if(a[k@@ ]==@@ a[j]@@ *2) { sum@@ ++@@ ;break; } } } cout<<sum<<endl; } return0; }  
c -1
h -1
0

voidmain() { inta[@@ 26@@ ],b[@@ 26@@ ],i,j,@@ n,@@ max=1; scanf("%d",&n); for(i=1;i<=n;i++) { scanf("%d",&a[i]); b[i]=1; } for(i=2;i<=n;i++) for(j=1;j<i;j++) if(a@@ [i-j@@ ]>=@@ a[i]&&@@ b@@ [i-j@@ ]>@@ (@@ b[i]@@ -1)@@ )@@ b[i]=b@@ [i-j@@ ]+1; for(i=1;i<=n;i++) if(b[i]@@ >max)max=@@ b[i]; printf("%d",max); }  
c -1
h -1
intmain() {@@ intn,i,j,@@ a,b,@@ r,@@ m,@@ c; scanf("%d",&n); r=0;@@ m=0; for(i=1;i<=n;i++) {@@ for(j=1@@ ,@@ b=@@ 255@@ ;j<=@@ n;j++) {@@ scanf("%d",&a); if(a@@ ==0)@@ m=m+1; if(b@@ >@@ a)@@ r=r@@ +1; b=@@ a; } } r@@ =(@@ r@@ +@@ 2)@@ /2; c@@ =(@@ (m@@ -2*@@ r@@ )+@@ 4)@@ /2; m@@ =(@@ r@@ -2)*(@@ c@@ -2); printf("%d\n",m); return0; }  
c -1
h -1
0

intf@@ (intx,inty) { inti,@@ sum=0; for(i=x@@ ;i<=sqrt(@@ y@@ );i++){ if(y@@ %i==0)@@ sum+=@@ f(@@ i,@@ y@@ /i@@ )@@ +1;} returnsum; } intmain(){ intn,@@ x,@@ i,@@ b[100@@ ]; cin>>n; for(i=1;i<=n@@ ;i++){@@ cin>>x@@ ;@@ b[i]=@@ x@@ ;} for(i=1;i<=n@@ ;i++){@@ cout<<@@ f(@@ 2,@@ b[i]@@ )@@ +1@@ <<endl;} return0; }  
c -1
h -1
voidf@@ (inti,int@@ m); intsum; intmain() { intn,i,@@ m,@@ k; scanf("%d",&n); for(i=0;i<n;i++) {@@ sum=1; scanf("%d",&m); f(@@ 2,@@ m); printf("%d\n",sum); } } voidf@@ (inti,int@@ m) { intk,@@ s; s=@@ (int)sqrt(@@ m); for(k=i@@ ;k<=@@ s@@ ;k++) { if(m@@ %@@ k@@ ==0) { sum++; f(@@ k,@@ m/@@ k); } } }  
c -1
h -1
1


voidmain() { intk,@@ m,@@ i,j,@@ t; inta[@@ 26@@ ],b[@@ 26@@ ],c[@@ 26]; scanf("%d",&k); for(i=0;i<k;i++) scanf("%d",&a[i]); b[0]@@ =1; for(i=1;i<k;i++) for(j=0;j<i;j++) { if(a[i]<=@@ a[j]) c[j]=@@ b[j]@@ +1; else c[j]@@ =1; for(m@@ =j@@ ;m@@ >0@@ ;m@@ --) { if(@@ c[m@@ ]>=@@ c[@@ m-1@@ ]) { t=@@ c[@@ m-1@@ ]; c[@@ m-1@@ ]=@@ c[@@ m]; c[m@@ ]=t; } } b[i]=@@ c[@@ 0]; } for(i=k@@ -1@@ ;i>0;i--) if(b[i]@@ >=@@ b@@ [i-1@@ ]) { t=@@ b@@ [i-1]; b@@ [i-1@@ ]=b[i]; b[i]=@@ t; } printf("%d",@@ b[0]@@ ); }  
c -1
h -1
intmain(intargc,char*argv[]) { inta,b,c; scanf("%d%d%d",&a,&b,&c); int@@ d[@@ 12]={31,28,31,30,31,30,31,31,30,31,30,31}; if((@@ a%4==0&&a%100!=0@@ )||@@ a%@@ 400==0) { d@@ [1@@ ]++; } int@@ g=@@ c; inti=0; while(i@@ >=@@ b) { d@@ [i]++; } for(i=0;i<b@@ -1;i++) { g=@@ g@@ +d@@ [i]; } printf("%d",@@ g@@ ); return0; }  
c -1
h -1
0

inta[@@ 2@@ ][100],@@ n,m,@@ b[@@ 200]; voidread@@ () { scanf("%d%d\n",&n,&@@ m); inti=0,j=0; for(i=0;i<n;i++) { scanf("%d",&@@ a[0]@@ [i]); } for(j=0;j<m;j++) { scanf("%d",&@@ a[1]@@ [j]); } } voidsort@@ () { intk=0,@@ l,@@ min@@ ,@@ temp; for(k=0;k<n;k++) { min=@@ a[0][@@ k@@ ]; for(l@@ =k@@ +1;@@ l@@ <n;@@ l++) { if(a[@@ 0][@@ l@@ ]<@@ min) { temp=@@ min@@ ; min=@@ a[0][@@ l@@ ]; a[0][@@ k@@ ]=@@ min@@ ; a[0][@@ l@@ ]=temp; } } } k=0; for(k=0;k<@@ m;k++) { min=@@ a[1@@ ][k@@ ]; for(l@@ =k@@ +1;@@ l<@@ m;@@ l++) { if(a[1@@ ][l@@ ]<@@ min) { temp=@@ min@@ ; min=@@ a[1@@ ][l@@ ]; a[1@@ ][k@@ ]=@@ min@@ ; a[1@@ ][l@@ ]=temp; } } } } void@@ merge@@ () { inti=0,@@ j=@@ n; for(i=0;i<n;i++) { b[i]=@@ a[0][i]; } for(j=n@@ ;j<@@ n+@@ m;j++) { b[j]=@@ a[1]@@ [j@@ -@@ n]; } } voidout@@ () { inti=0; for(i=0;i<n@@ +@@ m;i++) { if(i<@@ n+@@ m-1) printf("%d",b[i]); else@@ printf("%d",b[i]); } } voidmain() { read(); sort@@ (); merge@@ (); out@@ (); }  
c -1
h -1
intmain() { inta[16],@@ j,k,@@ sum; while(@@ true@@ ) { cin>>a[0]; if(a[0]@@ !=-1) { inti; for(i=1;;i++) { cin>>a[i]; if(a[i]==0) break; } sum=0; for(j=0;j<i;j++) { for(k=j+1;k<@@ i;k++) if(a[j]==2*@@ a[k]@@ ||@@ a[k]==@@ a[j]@@ *2) sum=sum+1; } cout<<sum<<endl; } else break; } return0; }  
c -1
h -1
0

intmain() { long@@ t,@@ m,@@ r,@@ l,@@ i,@@ x@@ ,j,@@ a[@@ 1000][@@ 1000@@ ]={0},b[@@ 1000]={0}; scanf("%ld@@ %ld@@ ",&@@ r@@ ,&@@ l); for(i=1;i<=@@ r;i++) for(j=1;j<=@@ l@@ ;j++) {@@ scanf("%ld",&@@ x); a[i+j@@ ][b@@ [i+j@@ ]@@ ]=@@ x; b@@ [i+j@@ ]++; } i@@ =i-1; j=j-1; for(@@ t=@@ 2@@ ;t@@ <=i@@ +j@@ ;t++) {@@ for(m=0;m<@@ b[t@@ ]@@ ;m++) {@@ printf("%ld@@ \n",@@ a[t@@ ][m@@ ]@@ );} } return0; }  
c -1
h -1
intmain() { char@@ t@@ [256],@@ s[@@ 256],@@ r@@ [256]; int@@ lt@@ ,@@ ls@@ ,@@ i=0,j=0,@@ p; scanf("%s%s%s",@@ s,@@ t,@@ r); lt@@ =strlen(@@ t); ls@@ =strlen(s); while(i<@@ lt@@ &&j@@ <@@ ls@@ ) { if(t@@ [i]==@@ s@@ [j]) { i++; j++; } else{ j=j@@ -i@@ +1; p=@@ j; i=0; } } if(i==@@ lt@@ ) for(i=0;i<@@ lt@@ ;i++) { s@@ [i+@@ p@@ ]=@@ r@@ [i]; } printf("%s",s); return0; }  
c -1
h -1
0

intmain() { intf(int@@ m); int@@ month@@ [5],@@ day@@ [5],@@ year@@ [5],@@ tian@@ [5],@@ i; for(i=0;i<=@@ 4;i++) scanf("%d%d%d",&year@@ [i],&@@ month@@ [i],&@@ day@@ [i]); for(i=0;i<=@@ 4;i++) { if(@@ year[i]@@ %4==0&&@@ year[i]@@ %100!=0@@ ||@@ year[i]@@ %@@ 400==0) {if(@@ month@@ [i]<=@@ 2) tian@@ [i]=@@ f(@@ month@@ [i]@@ )+@@ day@@ [i]; else tian@@ [i]=@@ f(@@ month@@ [i]@@ )+@@ day@@ [i]@@ +1; } else tian@@ [i]=@@ f(@@ month@@ [i]@@ )+@@ day@@ [i]; printf("%d\n",@@ tian@@ [i]); } return0; } intf(int@@ m) { intsum; switch(m) {@@ case1:@@ sum=0; break; case2:@@ sum=@@ 31; break; case3:@@ sum=(@@ 31+28@@ ); break; case4:@@ sum=(@@ 31+28@@ +31@@ ); break; case5:@@ sum=(@@ 31@@ *2@@ +28@@ +30@@ ); break; case6:@@ sum=(@@ 31*3@@ +28@@ +30@@ ); break; case7:@@ sum=(@@ 31*3@@ +28@@ +30*2@@ ); break; case8:@@ sum=(@@ 31*@@ 4@@ +28@@ +30*2@@ ); break; case9:@@ sum=(@@ 31*5@@ +28@@ +30*2@@ ); break; case10:@@ sum=(@@ 31*5@@ +28@@ +30@@ *3@@ ); break; case11:@@ sum=(@@ 31*6@@ +28@@ +30@@ *3@@ ); break; case12:@@ sum=(@@ 31*6@@ +28@@ +30@@ *@@ 4@@ ); } return(@@ sum); }  
c -1
h -1
intmain() { intm,@@ i,j,k,@@ key@@ ,@@ num; key@@ =0; intcount@@ [100]; inta[100@@ ][@@ 156@@ ]; int@@ result@@ [100]; for(i=0;i<100;i++) { for(j=0;j<@@ 16@@ ;j++) { scanf("%d",&m); if(m==0) { break; } elseif(m@@ ==-1) { key@@ =1; break; } else { a[i]@@ [j]=@@ m; count@@ [i]=@@ j; } } if(@@ key@@ ==1) { break; } num@@ =i; } for(i=0;i<=@@ num;i++) result@@ [i]=0; for(i=0;i<=@@ num;i++) { for(j=0;j<=@@ count@@ [i];j++) { for(k=0;k<=@@ count@@ [i]@@ ;k++) { if(a[i][j]==@@ a[i][k]@@ *2) result@@ [i]=@@ result@@ [i]@@ +1; } } } for(i=0;i<=@@ num;i++) { printf("%d\n",@@ result@@ [i]); } return0; }  
c -1
h -1
0

structstu { intnum; int@@ ch; int@@ mt@@ ; intsum; structstu*next; }; voidmain() { structstu*@@ p1,*p2,*@@ p,*@@ head; intn,@@ max=0,@@ max2@@ =0,@@ max3@@ =0,@@ no@@ =0,@@ no2@@ =0,@@ no3@@ =0; scanf("%d",&n); p1=(struct@@ stu@@ *)malloc(LEN); scanf("%d%d%d",&p1->num,&p1->@@ ch@@ ,&p1->@@ mt@@ ); p1->sum=p1->@@ ch@@ +p1->@@ mt@@ ; head=p1; p2=p1; while(@@ n-1) { p1=(struct@@ stu@@ *)malloc(LEN); scanf("%d%d%d",&p1->num,&p1->@@ ch@@ ,&p1->@@ mt@@ ); p1->sum=p1->@@ ch@@ +p1->@@ mt@@ ; p2->next=p1; p2=p1; n--; } p2->next=NULL; p=head; while(p) { if(p->@@ sum@@ >max) { max=@@ p->@@ sum; no@@ =p->@@ num; } p=p->next; } printf("%d%d\n",@@ no@@ ,max); p=head; while(p) { if(p->@@ sum>@@ max2@@ &&@@ p->@@ sum<=@@ max@@ &&@@ p->@@ num@@ !=@@ no@@ ) { max2=@@ p->@@ sum; no2@@ =p->@@ num; } p=p->next; } printf("%d%d\n",@@ no2@@ ,@@ max2@@ ); p=head; while(p) { if(p->@@ sum>@@ max3@@ &&@@ p->@@ sum<=@@ max2@@ &&@@ p->@@ num@@ !=@@ no2@@ &&@@ p->@@ num@@ !=@@ no@@ ) { max3=@@ p->@@ sum; no3@@ =p->@@ num; } p=p->next; } printf("%d%d\n",@@ no3@@ ,max3@@ ); }  
c -1
h -1
struct@@ xue { intID; int@@ sx; int@@ yw@@ ; intsum; }@@ xueshen@@ ; intmain() { intn,i,@@ k; scanf("%d",&n); struct@@ xue@@ *@@ xuesheng@@ ; xuesheng@@ =(struct@@ xue@@ *)malloc(@@ 4@@ *sizeof(int@@ )*n); for(i=0;i<n;i++){ scanf("%d%d%d",&@@ xuesheng@@ [i].@@ ID,&@@ xuesheng@@ [i].@@ sx@@ ,&@@ xuesheng@@ [i].@@ yw@@ ); xuesheng@@ [i].@@ sum=@@ xuesheng@@ [i].@@ sx@@ +@@ xuesheng@@ [i].@@ yw@@ ; } for(i=1;i<@@ 4@@ ;i++){ for(k=0;k<@@ n-i@@ ;k++){ if(@@ xuesheng@@ [k].@@ sum@@ >=@@ xuesheng@@ [k+1@@ ].@@ sum){ xueshen@@ =@@ xuesheng@@ [k+1]; xuesheng@@ [k+1]=@@ xuesheng@@ [k]; xuesheng@@ [k]=@@ xueshen@@ ; } } } for(i=1;i<@@ 4@@ ;i++){ printf("%d%d\n",@@ xuesheng@@ [n@@ -i@@ ].ID,@@ xuesheng@@ [n@@ -i@@ ].sum); } return0; }  
c -1
h -1
1


int@@ paixu@@ (intn,int@@ m) { inti,j,@@ num; int@@ shuzu@@ [1000]; for(i=1;i<=@@ n+m;i++) { cin>>num; shuzu@@ [i]=@@ num; } for(i=1;i<=n;i++) { for(j=n-1@@ ;j>=i@@ ;j--) { if(shuzu@@ [j]>@@ shuzu@@ [j+1@@ ])@@ num=@@ shuzu@@ [j],@@ shuzu@@ [j]=@@ shuzu@@ [j+1],@@ shuzu@@ [j+1]=@@ num; } } for(i=n@@ +1;i<=@@ n+m;i++) { for(j=@@ n+@@ m-1@@ ;j>=i@@ ;j--) { if(shuzu@@ [j]>@@ shuzu@@ [j+1@@ ])@@ num=@@ shuzu@@ [j],@@ shuzu@@ [j]=@@ shuzu@@ [j+1],@@ shuzu@@ [j+1]=@@ num; } } for(i=1;i<=@@ n+m;i++) { if(i==@@ m+@@ n)@@ cout<<@@ shuzu@@ [i]; else@@ cout<<@@ shuzu@@ [i]@@ <<""; } return0; } intmain() { int@@ n1,n2; cin>>@@ n1@@ >>@@ n2; paixu(@@ n1,n2@@ ); return0; }  
c -1
h -1
intmain() { intn,m,@@ num[@@ 20000],@@ i,@@ num_cout@@ [@@ 20000],@@ k,@@ j; cin>>n; for(i=0;i<n;i++) { cin>>num[i]; } num_cout@@ [0]=@@ num[@@ 0]; k=1; for(i=1;i<n;i++) { m=0; for(j=0;j<k;j++) { if(num@@ [i]==@@ num_cout@@ [j]) m++; } if(m==0) { num_cout@@ [k]=@@ num[i]; k++; } } for(i=0;i<@@ k-1;i++) { cout<<@@ num_cout@@ [i]@@ <<""; } cout<<@@ num_cout@@ [k@@ -1]; return0; }  
c -1
h -1
0

intmain(){ intn,@@ s,@@ r,@@ l; intsz[100][100]; s=0; scanf("%d",&n); for(inti=0;i<n;i++){ scanf("%d",&@@ r); scanf("%d",&@@ l); for(intj=0;j<@@ r@@ ;j++){ for(intk=0;k<@@ l@@ ;k++){ scanf("%d",&(@@ sz[j]@@ [k]@@ )); if((@@ j@@ ==0)||(@@ j==@@ r@@ -1)@@ ||(@@ (j@@ !=0)&&(@@ k@@ ==0)@@ )||(@@ (j@@ !=0)&&(@@ k==@@ l@@ -1)@@ )){ s=s+@@ sz[j]@@ [k]; }@@ }@@ }@@ printf("%d\n",s); s=0; } return0; }  
c -1
h -1
intsz[@@ 1000][1000]; intmain() { intn; introw,col; inta,b,c,@@ d; int@@ x,y; intnum; int@@ e=0,@@ f=0; scanf("%d",&n); for(row=0;row<n;@@ row++) { for(col=0;col<n;col@@ ++) { scanf("%d",&@@ sz[row][col@@ ]); } } for(row=0;row<n;@@ row++) { for(col=0;col<n;col@@ ++) { if(@@ sz[row][col@@ ]==0) { a=@@ row; b=@@ col; e=1; break; } } if(e@@ ==1) { break; } } for(row@@ =@@ n-1;@@ row@@ >=0;@@ row@@ --) { for(col@@ =@@ n-1;@@ col@@ >=0;@@ col@@ --) { if(@@ sz[row][col@@ ]==0) { c=@@ row; d=@@ col; f=1; break; } } if(f@@ ==1) { break; } } x=@@ c-a@@ -1; y=@@ d-b@@ -1; num=@@ x@@ *@@ y; printf("%d\n",num); return0; }  
c -1
h -1
0

intmain() { inta,b; scanf("%d%d",&a,&b); int@@ n[@@ 1000][1000]; inti,j; for(i=0;i<a;i++) { for(j=0;j<@@ b;j++) scanf("%d",&@@ n@@ [i][j]); } for(intt@@ =0;t@@ <b@@ ;t++) { for(j=@@ t,@@ i@@ =0;i<@@ a@@ &&j>=0@@ ;i++,j--) printf("%d\n",n@@ [i][j]); } for(intp@@ =1@@ ;p<@@ a@@ ;p++) { for(i=@@ p@@ ,j=@@ b@@ -1@@ ;i<@@ a@@ &&j>=0@@ ;i++,j--) printf("%d\n",n@@ [i][j]); } return0; }  
c -1
h -1
intmain() { chars[256],@@ s1@@ [256],@@ t@@ [256]; intj,@@ ls1@@ ,@@ lt@@ ,i,@@ k=0; scanf("%s%s%s",@@ s,@@ s1,@@ t); ls1@@ =strlen(@@ s1); lt@@ =strlen(@@ t); for(i=0;s[i]@@ ;i++) { if(s[i]==@@ s1@@ [k]) { k++; if(k==@@ ls1@@ -1) break; } else k=0; } if(i>=@@ strlen(@@ s@@ )) printf("%s\n",@@ s); else { for(j=0;j<@@ i@@ -@@ ls1@@ +@@ 2@@ ;j++) printf("%c",s@@ [j]); printf("%s",@@ t); for(j=i@@ +@@ 2@@ ;j<@@ strlen(@@ s@@ );j++) printf("%c",s@@ [j]); printf("\n"); } }  
c -1
h -1
0

intn; inta[@@ MAXN@@ ]; intf@@ [@@ MAXN@@ ]; voidinput() { cin>>n; for(inti=0;i<n;i++) cin>>a[i]; } intmain() { input(); for(inti=0;i<n;i++) f@@ [i]=1; for(inti=1;i<@@ n;i++) { for(intj=0;j<i;j++) if(a[j]>=a[i]&&@@ f@@ [j]+1>@@ f@@ [i]) f[i]=@@ f@@ [j]+1; } int@@ ans=0; for(inti=0;i<n;i++) if(f@@ [i]>@@ ans@@ ) ans=@@ f[i]; cout<<ans@@ <<endl; }  
c -1
h -1
voidmain() { int@@ point@@ [1000],@@ i,@@ p,@@ sta@@ ,@@ end@@ ,@@ total@@ ,@@ n,@@ s; scanf("%d",&n); s=0; for(p=0;p@@ <n;p++) { for(i=0;i<n;i++)@@ scanf("%d",&@@ point@@ [i]); i=0; do { i++; }while(@@ (@@ point@@ [i]==@@ 255@@ )&&(i@@ <n@@ )); sta@@ =i; i=@@ n; do { i--; }while(@@ (@@ point@@ [i]==@@ 255@@ )&&(i@@ >0@@ )); end@@ =i; for(i=@@ sta@@ ;i<=@@ end@@ ;i++)@@ if(@@ point@@ [i]==@@ 255@@ )@@ s++; } printf("%d",s); }  
c -1
h -1
0

inta[@@ 25]; intmain() {@@ intmax(int@@ k,int@@ n); inti,n,@@ m=0; scanf("%d",&n); for(i=0;i<n;i++){ scanf("%d",&a[i]);} for(i=0;i<n;i++){ if(max@@ (i,@@ n)@@ >@@ m) m=@@ max(@@ i,@@ n); } printf("%d",m); } intmax(int@@ k,int@@ n) { int@@ l=0,@@ j; if(k==@@ n-1) l=0; for(j=k@@ +1@@ ;j<@@ n;j++){ if(a[j]<=@@ a[k]@@ ){ if(max@@ (@@ j,@@ n)@@ >@@ l) l=@@ max(@@ j,@@ n); } } return@@ l@@ +1; }  
c -1
h -1
intmain(){ intn,@@ input@@ [@@ 20000],@@ output@@ [@@ 20000],@@ i,j,k,@@ x; scanf("%d",&n); for(i=0;i<n;i++){ scanf("%d",&@@ input@@ [i]); } k=0; for(i=0;i<n;i++){ x=0; for(j=0;j<i;j++){ if(@@ input@@ [i]==@@ input@@ [j]){ x++; break; } } if(x@@ ==0){ k++; output@@ [k]=@@ input@@ [i]; } } for(i=1;i<@@ k;i++){ printf("%d",@@ output@@ [i]); } if(i==@@ k) printf("%d\n",@@ output@@ [i]); return0; }  
c -1
h -1
0

intf(int@@ N@@ ,int@@ min) { ints@@ =1,i; if(N@@ <@@ min) return0; for(i=min@@ ;i<@@ N;i++) { if(N@@ %i==0) { s+=@@ f(@@ N@@ /i,i); } } return@@ s; } intmain() { intn,i,@@ b=@@ 2; inta[100]; scanf("%d",&n); for(i=0;i<n;i++) scanf("%d",&a[i]); for(i=0;i<n;i++) printf("%d\n",@@ f(@@ a[i],@@ b@@ )); return0; }  
c -1
h -1
voidmain() { void@@ pai@@ (int@@ na@@ ,int@@ nb@@ ); int@@ na@@ ,@@ nb@@ ; scanf("%d%d",&@@ na@@ ,&@@ nb@@ ); pai@@ (@@ na@@ ,@@ nb@@ ); } void@@ pai@@ (int@@ na@@ ,int@@ nb@@ ) { intt,@@ i,j,@@ a[@@ 200@@ ],b[100]; for(i=0;i<@@ na@@ ;i++) { scanf("%d",&a[i]); } for(i=0;i<@@ nb@@ ;i++) { scanf("%d",&b[i]); } for(j=0;j<@@ na@@ -1;j++) { for(i=0;i<@@ na@@ -1-j;i++) { if(a[i]>a[i+1]) { t=a[i]; a[i]=a[i+1]; a[i+1]=@@ t; } } } for(j=0;j<@@ nb@@ -1;j++) { for(i=0;i<@@ nb@@ -1-j;i++) { if(b[i]>b[i+1]) { t=b[i]; b[i]=b[i+1]; b[i+1]=@@ t; } } } for(j=0;j<@@ na@@ ;j++) printf("%d",@@ a[j]); for(j=0;j<@@ nb@@ -1;j++) printf("%d",@@ b[j]); printf("%d\n",@@ b[@@ nb@@ -1]); }  
c -1
h -1
0

inta[100@@ ],b[100],c[@@ 200@@ ],i,j,@@ m,n; voidread@@ (void@@ ){ cin>>m>>n; for(i=0;i<m@@ ;i++){@@ cin>>@@ a[i];} for(i=0;i<n;i++){@@ cin>>@@ b[i]@@ ;} return; } void@@ place@@ (void@@ ){ ints; for(i=1;i<@@ m;i++){ for(j=0;j<m@@ -i;j++){ if(a[j]>a[j+1@@ ]){@@ s=@@ a[j];a[j]=a[j+1];@@ a[j+1]=@@ s@@ ;} } } for(i=1;i<n;i++){ for(j=0;j<n@@ -i;j++){ if(b[j]>b@@ [j+1]@@ ){@@ s=@@ b[j]@@ ;@@ b[j]=b@@ [j+1];@@ b[j+1]=@@ s@@ ;} } } return; } void@@ together@@ (void@@ ){ for(i=0;i<m@@ ;i++){@@ c[i]=@@ a[i];} for(i=m;i<@@ m+@@ n@@ ;i++){@@ c[i]=b[i-@@ m@@ ];} return; } void@@ put@@ (void@@ ){ for(i=0;i<m+@@ n;i++){ if(i@@ ==0){@@ cout<<@@ c[i]@@ ;} else{@@ cout<<''<<@@ c[i]@@ ;} } return; } intmain(){ read(); place@@ (); together@@ (); put@@ (); return0; }  
c -1
h -1
intmain(intargc,char*argv[]) { intn,@@ i=0,@@ j; intN@@ ,@@ k,@@ p; scanf("%d",&n); N@@ =@@ n*@@ n; for(k=0;k<@@ N@@ ;k++) { scanf("%d",&@@ p); if(p@@ ==0) i++; } j@@ =(@@ (i@@ /@@ 4)@@ -1)*(@@ (i@@ /@@ 4)@@ -1); printf("%d\n",@@ j); }  
c -1
h -1
0

voidmain() { inti,n,@@ t[@@ 27@@ ],@@ max; char@@ p,@@ a[100@@ ][@@ 27@@ ],b[100@@ ][@@ 27]; scanf("%d",&n); for(i=1;i<=@@ 26@@ ;i++)@@ t@@ [i]=0; for(i=1;i<=@@ n;i++)@@ scanf("%s%s",@@ a[i],@@ b[i]); for(p@@ ='A'@@ ;p<=@@ 'Z'@@ ;p++) for(i=1;i<=n;i++) if(@@ strchr(@@ b[i]@@ ,@@ p@@ ))@@ t@@ [p@@ -'@@ A'+@@ 1@@ ]++; max=1; for(i=2;i<=@@ 26;i++) if(t@@ [max@@ ]<@@ t@@ [i])@@ max=i; printf("%c\n",@@ p@@ ='A'+@@ max@@ -1); printf("%d\n",@@ t@@ [p@@ -'@@ A'+@@ 1@@ ]); for(i=1;i<=n;i++) if(@@ strchr(@@ b[i]@@ ,@@ p@@ ))@@ printf("%s\n",@@ a[i]); }  
c -1
h -1
intmain() { structstu { intnum; int@@ ch; int@@ ma; int@@ to@@ ; }; inti,@@ j1@@ ,@@ j2@@ ,@@ j3@@ ,@@ k,@@ max; structstu@@ student[@@ 100000@@ ]={0}; structstu@@ temp; scanf("%d",&k); for(i=0;i<=k-1;i++) { scanf("%d%d%d",&@@ student[i].@@ num,&@@ student[i].@@ ch@@ ,&@@ student[i].@@ ma@@ ); student[i].@@ to@@ =@@ student[i].@@ ch@@ +@@ student[i].@@ ma; } max=0; for(i=0;i<=k-1;i++) { if(@@ student[i].@@ to@@ >max) { max=@@ student[i].@@ to@@ ; j1@@ =i; } } printf("%d",@@ student[@@ j1@@ ].@@ num); printf("%d\n",@@ student[@@ j1@@ ].@@ to@@ ); max=0; for(i=0;i<=k-1;i++) { if(i==@@ j1@@ )continue; if(@@ student[i].@@ to@@ >max) { max=@@ student[i].@@ to@@ ; j2@@ =i; } } printf("%d",@@ student[@@ j2@@ ].@@ num); printf("%d\n",@@ student[@@ j2@@ ].@@ to@@ );@@ max=0; max=0; for(i=0;i<=k-1;i++) { if(i==@@ j1@@ ||i==@@ j2@@ )continue; if(@@ student[i].@@ to@@ >max) { max=@@ student[i].@@ to@@ ; j3@@ =i; } } printf("%d",@@ student[@@ j3@@ ].@@ num); printf("%d\n",@@ student[@@ j3@@ ].@@ to@@ ); return0; }  
c -1
h -1
0

void@@ a@@ (ints[],int@@ x) { inti; for(i=1;i<=@@ x;i++) scanf("%d",&s[i]); } void@@ b@@ (ints[],int@@ x) {@@ inti,j; for(i=1;i<=@@ x@@ -1;i++) { for(j=1;j<=@@ x@@ -i;j++) { if(s@@ [j]>@@ s@@ [j+1]) { s[@@ 0]=@@ s[j]; s[j]=@@ s@@ [j+1]; s@@ [j+1]=@@ s[@@ 0]; } } } } void@@ c@@ (intp@@ [],int@@ x,int@@ q@@ [],int@@ y) { inti; for(i=1;i<=@@ y;i++) p[@@ x@@ +i]=@@ q@@ [i]; } void@@ d@@ (ints[],int@@ x) { inti; for(i=1;i<=@@ x@@ -1;i++) printf("%d",@@ s[i]); printf("%d\n",@@ s[@@ x@@ ]); } voidmain() { int@@ p[@@ 60@@ ],@@ q@@ [@@ 30],@@ m,n; scanf("%d%d",&m,&n); a@@ (p,@@ m); a@@ (@@ q,@@ n); b@@ (p,@@ m); b@@ (@@ q,@@ n); c@@ (p,@@ m,@@ q,@@ n); d@@ (p,@@ m+@@ n); }  
c -1
h -1
intmain() { inta,@@ i,j,@@ b,@@ x,@@ p=0,@@ q; scanf("%d",&a); for(i=1;i<=@@ a;i++) { for(@@ x=0,@@ j@@ =1@@ ;j<=@@ a@@ ;j++) { scanf("%d",&b); if(b@@ ==0)@@ x=x@@ +1; else@@ x=x+@@ 0@@ ; } if(x@@ !=0@@ ){@@ p@@ ++;@@ q=@@ x@@ ;} } printf("%d",@@ (p@@ -2)*(@@ q@@ -2@@ )); return0; }  
c -1
h -1
0

intmain(){ intn,k,i,j,@@ t=0; intsz[@@ 1000][1000]; scanf("%d%d",&n,&k); for(i=1;i<=n;i++){ scanf("%d",&sz@@ [0]@@ [i]); sz[i]@@ [0]=@@ sz[0]@@ [i]; } for(i=1;i<=n;i++){ for(j=1;j<=n;j++){ if(i==@@ j){ continue; }else{ sz@@ [i][j]=@@ sz[i]@@ [0]+@@ sz[0]@@ [j]; } } } for(i=1;i<=n;i++){ for(j=1;j<=n;j++){ if(sz@@ [i][j]==@@ k){ t=1; } } } if(t@@ ==1){ printf("yes"); }else{ printf("no"); } return0; }  
c -1
h -1
intmain() {@@ intk,i,j,@@ l=0,@@ excit@@ =0; scanf("%d",&k); intnum@@ [k],@@ shulie@@ [k]; for(i=1;i<=k;i++) {scanf("%d",&@@ num@@ [i@@ -1]); for(j=0;j<=@@ i@@ -2@@ ;j++) if(num@@ [j]==@@ num@@ [i-1@@ ]) { excit@@ =1; break; } if(@@ excit@@ ==0) {@@ shulie@@ [l@@ ]=@@ num@@ [i-1]; l=l@@ +1; } else@@ excit@@ =0; } printf("%d",@@ shulie@@ [0]); for(i=2;i<=@@ l@@ ;i++) printf("%d",@@ shulie@@ [i@@ -1]); }  
c -1
h -1
0

int@@ dividemin@@ (inta,int@@ minyinzi@@ ){ intnum=0; if(a@@ ==1)@@ num++; else@@ for(inti=@@ minyinzi@@ ;i<=a;i++) { if(a@@ %i==0)@@ num=num+@@ dividemin@@ (a/i,i); } returnnum; } intmain(){ intn; cin>>n; inta[n]; for(inti=0;i<=@@ n-1;i++) cin>>a[i]; for(inti=0;i<=@@ n-1;i++) cout<<@@ dividemin@@ (a[i],@@ 2)<<endl; }  
c -1
h -1
intmain(){ intn,i,@@ k; cin>>n; inta[n]; for(i=0;i<=@@ n-1;i++){ cin>>a[i]; } for(i=1;i<=@@ n-1;i++){ for(k=0;k<=@@ i@@ -1@@ ;k++){ if(a[i]==@@ a[k]@@ ){ a[i]=0; break; } } } for(i=0;i<=@@ n-1;i++){ if(a[i]@@ !=0){ if(i@@ ==0){ cout<<a[i]; } else@@ cout<<""<<a[i]; } } return0; }  
c -1
h -1
0

voidmain() { struct@@ b { intnum; charstr@@ [27]; }@@ b[100@@ ]; intn,i,@@ m,@@ j,@@ max,@@ nmax@@ ; inta[@@ 26]={0}; scanf("%d",&n); for(i=0;i<n;i++) { scanf("%d%s",&@@ b[i].@@ num,@@ b[i].@@ str); m=strlen(@@ b[i].@@ str); for(j=0;j<m;j++) { a[@@ b[i].@@ str@@ [j]@@ -65]++; } } max=@@ a[0]; nmax@@ =0; for(i=0;i<26;i++) { if(a[i]@@ >max){max=@@ a[i];@@ nmax@@ =i;} } printf("%c\n%d\n",@@ nmax@@ +65@@ ,max); for(i=0;i<n;i++) { m=strlen(@@ b[i].@@ str); for(j=0;j<m;j++) { if(b[i].@@ str@@ [j]==@@ nmax@@ +65) printf("%d\n",b[i].@@ num); } } }  
c -1
h -1
intmain(){ intn,k; scanf("%d%d",&n,&k); inti; intsz[1000]; for(i=0;i<n;i++){ scanf("%d",&sz[i]); } int@@ he@@ [1000][1000]; intj; for(j=0;j<n;j++){ for(i=0;i<n;i++){ if(i!=@@ j){ he@@ [i][j]=@@ sz[i]@@ +sz@@ [j]; } } } intt=0; int@@ d=1; for(j=0;j<n@@ &&@@ d@@ ==1@@ ;j++){ for(i=0;i<n;i++){ if(i!=@@ j){ if(@@ he@@ [i][j]==@@ k){ printf("yes"); d=0; break; } } t++; } } if(t==@@ n*@@ n){ printf("no"); } return0; }  
c -1
h -1
0

voidmain() { int@@ fac@@ (inta,int@@ b); intn,i,@@ m,@@ a[100]; scanf("%d",&n); for(i=0;i<n;i++) scanf("%d",&a[i]); for(i=0;i<n;i++) { m=@@ fac@@ (a[i],@@ 2); printf("%d\n",m); } } int@@ fac@@ (inta,intb) { intj,@@ i; if(a@@ <b@@ )@@ j=0; else { j=1; for(i=b@@ ;i<@@ a;i++) { if(a@@ %i==0)@@ j=j@@ +@@ fac@@ (a/i,i); } } return(@@ j); }  
c -1
h -1
intmain(){ double@@ r,@@ x; intl,@@ l1,l2@@ ,i,j,@@ t=0,@@ flag=0; chara[100@@ ],b[100]; scanf("%lf",&@@ r); scanf("%s",a); scanf("%s",b); l1@@ =strlen(a); l2@@ =strlen(b); for(i=0;i<l1;i++){ if(a[i]@@ =='@@ A'||a[i]=='T'||a[i]=='@@ C'||@@ a[i]=='@@ G'){ continue; } else{ flag=1; } } for(j=0;j<@@ l2@@ ;j++){ if(b[j]@@ =='@@ A'||@@ b[j]@@ =='@@ T'||@@ b[j]@@ =='@@ C'||@@ b[j]@@ =='@@ G'){ continue; } else{ flag=1; } } if(l1!=l2@@ ||@@ flag@@ ==1){ printf("error"); return0; } else{ l=@@ l1; for(i=0;i<l;i++){ if(a[i]==b[i]){ t=t+1; } } x@@ =(double)@@ t@@ /@@ l; if(x>@@ r@@ ){ printf("yes"); } else{ printf("no"); } } return0; }  
c -1
h -1
0

int@@ coun@@ ; void@@ depart@@ (intn,int@@ i) { intj; if(n@@ ==1)@@ coun@@ ++; else@@ for(j=i;j<=@@ n;j++) if(n@@ %j@@ ==0){@@ depart@@ (n@@ /j@@ ,j@@ );} } intmain(){ intn,@@ j; cin>>n; intb[@@ n]; for(j=0;j<n;j++) cin>>@@ b[j]; for(j=0;j<n;j++) { coun@@ =0; depart@@ (@@ b[j]@@ ,@@ 2); cout<<@@ coun@@ <<endl; } return0; }  
c -1
h -1
intn,a[@@ MAXN@@ +@@ 10],@@ f[@@ MAXN@@ +@@ 10]; intmain() { cin>>n; for(inti=0;i<@@ n;++@@ i) { cin>>a[i]; } int@@ ans=0; for(inti=0;i<@@ n;++@@ i) { for(intj=0;j<@@ i@@ ;++@@ j) { if(a[j]>=@@ a[i])@@ f[i]=@@ max(@@ f@@ [i],@@ f@@ [j]); } f@@ [i]++; ans=@@ max(@@ ans@@ ,@@ f@@ [i]); } cout<<ans@@ <<endl; return0; }  
c -1
h -1
0

intmain() { inta[100][100],@@ m,n,@@ k; cin>>k; inti=0,j=0,@@ h=0; for(i=0;i<k;i++) { int@@ b=0; cin>>m>>n; for(j=0;j<m;j++) for(h=0;h@@ <n;@@ h++) cin>>@@ *(*(a@@ +j)+@@ h); for(j=0;j<m;j++) b=b@@ +*@@ *(a@@ +j); for(j=1;j<n;j++) b=b@@ +*(@@ *a@@ +j); for(j=1;j<@@ m;j++) b=b@@ +*(@@ *(a@@ +j)@@ +n-1); for(j=1;j<@@ n-1;j++) b=b@@ +*(@@ *(a@@ +m-1)@@ +j); cout<<@@ b@@ <<endl; } return0; }  
c -1
h -1
intmain() { intk,@@ m,n; int@@ sum1@@ ,@@ sum2@@ ,@@ sum3@@ ,@@ sum4@@ ; inti,j,@@ l; inta[100][100@@ ],b[100]; scanf("%d",&k); for(l=1;l@@ <=k;@@ l++) { sum1@@ =0; sum2@@ =0; sum3@@ =0; sum4@@ =0; scanf("%d%d",&m,&n); for(i=0;i<m;i++) { for(j=0;j<n;j++) scanf("%d",&a[i][j]); } for(j=0;j<n;j++) sum1@@ =@@ sum1@@ +@@ a[0][j]; for(i=1;i<m;i++) sum2@@ =@@ sum2@@ +@@ a[i][n-1]; for(j=0;j<n-1;j++) sum3@@ =@@ sum3@@ +@@ a[i-1]@@ [j]; for(i=1;i<m-1;i++) sum4@@ =@@ sum4@@ +@@ a[i][0]; b[l@@ ]=@@ sum1@@ +@@ sum2@@ +@@ sum3@@ +@@ sum4@@ ; } for(l=1;l@@ <=k;@@ l++) printf("%d\n",@@ b[l@@ ]); return0; }  
c -1
h -1
1


intmain() { intn,k,@@ a[1000],@@ i=0,@@ j,@@ t=0,@@ flag=0; cin>>n>>k; for(t=0;t@@ <=@@ n-1@@ ;t++) {@@ cin>>@@ a[t@@ ]; } for(i=0;i<=n-1;i++) {@@ for(j=i+1;j<=@@ n-1;j++) { if(a[i]+a[j]==@@ k){@@ flag@@ =1;@@ cout<<"yes@@ "@@ ;break;} } if(flag@@ ==1)break; } if(flag@@ ==0)@@ cout<<"no"; return0; }  
c -1
h -1
intmain() { intn; cin>>n; inta[n]; for(inti=0;i<n;i++) cin>>a[i]; cout<<a[0]; for(inti=1;i<@@ n;i++) { for(intk=0;k<@@ i;k++) { if(a[i]==@@ a[k]@@ )break; if(k==@@ i@@ -1)@@ cout<<""<<a[i]; } } cout<<endl; return0; }  
c -1
h -1
0

intmain() { inti,@@ flag@@ ,@@ w@@ ,j,@@ len; charstr@@ [257],@@ sub@@ [@@ 200],@@ rep@@ [50@@ ]; scanf("%s%s%s",@@ str,@@ sub,@@ rep); len=strlen(@@ sub); w=@@ 500@@ ; for(i=0;@@ str@@ [i]!='\0';i++) { if(str[i]==@@ sub@@ [0]) { for(j=i;j<i+@@ len@@ ;j++) { if(str@@ [j]!=@@ sub@@ [j-i@@ ]) { flag=0; break; } } if(flag@@ !=0) { w@@ =i; break; } else@@ flag=1; } } if(w@@ !=@@ 500@@ ) { j=0; for(i=@@ w@@ +@@ len@@ ;@@ str@@ [i]!='\0';i++) { sub@@ [j]=@@ str@@ [i]; j++; } sub@@ [j]@@ ='\0'; str@@ [@@ w@@ ]='\0'; printf("%s@@ %s%s",@@ str,@@ rep@@ ,@@ sub); } else@@ printf("%s",str); return0; }  
c -1
h -1
intmain() { intn,i,j,@@ t,@@ m,@@ l; intb[100@@ ],@@ d@@ [100],@@ g@@ [100]; chara[100@@ ][@@ 10],@@ c@@ [100][10],@@ e@@ [@@ 10],@@ f@@ [100][10]; m=0; l=0; t=0; scanf("%d",&n); for(i=0;i<n;i++) { scanf("%s%d",@@ a[i],&@@ b[i]); } for(i=0;i<n;i++) { if(b[i]@@ >=60) { strcpy(@@ c[m@@ ],@@ a[i]); d@@ [m@@ ]=b[i]; m=m+1; } else { strcpy(@@ f@@ [l@@ ],@@ a[i]); g@@ [l@@ ]=b[i]; l=l@@ +1; } } for(i=0;i<m-1;i++) { for(j=0;j<m@@ -i-1;j++) { if(d@@ [j]<@@ d@@ [j+1]) { t=@@ d@@ [j]; d@@ [j]=@@ d@@ [j+1]; d@@ [j+1]=t; strcpy(@@ e,@@ c@@ [j]); strcpy(@@ c@@ [j],@@ c@@ [j+1]); strcpy(@@ c@@ [j+1],@@ e); } } } for(i=0;i<m;i++) printf("%s\n",@@ c[i]); for(i=0;i<l;i++) printf("%s\n",@@ f@@ [i]); getchar(); getchar(); }  
c -1
h -1
0

intsum@@ (inta,int@@ i) { int@@ ret@@ =1; for(@@ ;i<=sqrt(@@ (@@ float)@@ a)@@ ;i++) { if(a%i==0) { ret@@ +=@@ sum@@ (a/i,i); } } return@@ ret@@ ; } intmain() { intt,@@ a,@@ j; cin>>t; for(j=0;j<@@ t;j++) { cin>>a; cout<<sum@@ (a,@@ 2)<<endl; } return0; }  
c -1
h -1
int@@ mins@@ (intx,int@@ y){ if(x>@@ y)@@ return@@ y; else@@ return@@ x; } int@@ maxs@@ (intx,int@@ y){ if(x>@@ y) return@@ x; else return@@ y; } intmain(){ introw,col,@@ i,j,@@ n; cin>>row>>col; n=@@ row@@ *@@ col; inta[@@ row][col]; for(i=0;i<row;i++){ for(j=0;j<col;j++){ cin>>a[i][j]; } } for(i=0;i<@@ mins@@ (@@ row,@@ col@@ );i++){ for(j=0;j<=@@ i;j++){ cout<<@@ a[j][i-j@@ ]<<endl; } } if(row@@ >=@@ col@@ ){ for(i=@@ col@@ ;i<@@ row;i++){ for(j=i@@ -col@@ +1@@ ;j<=@@ i;j++){ cout<<@@ a[j][i-j@@ ]<<endl; } } for(i=@@ row@@ ;i<=@@ row+col-2@@ ;i++){ for(j=i@@ -col@@ +1@@ ;j<@@ row@@ ;j++){ cout<<@@ a[j][i-j@@ ]<<endl; } } } else{ for(i=@@ row@@ ;i<@@ col@@ ;i++){ for(j=0;j<row@@ ;j++){ cout<<@@ a[j][i-j@@ ]<<endl; } } for(i=@@ col@@ ;i<=@@ row+col-2@@ ;i++){ for(j=i@@ -col@@ +1@@ ;j<@@ row@@ ;j++){ cout<<@@ a[j][i-j@@ ]<<endl; } } } return0; }  
c -1
h -1
0

intmain() { charstr@@ [300],@@ subString@@ [300],@@ replacement@@ [300]; char@@ *p,@@ *@@ q; int@@ strLen@@ ,@@ subLen@@ ,@@ repLen@@ ,@@ move@@ ,i; cin>>@@ str@@ >>@@ subString@@ >>@@ replacement@@ ; strLen@@ =strlen(@@ str); subLen@@ =strlen(@@ subString@@ ); repLen@@ =strlen(@@ replacement); p=strstr(@@ str,@@ subString@@ ); if(p@@ ==NULL) { cout<<str@@ ; return0; } q=@@ replacement@@ ; if(@@ repLen@@ >@@ subLen@@ ) { move@@ =@@ repLen@@ -@@ subLen@@ ; for(q=@@ str@@ +@@ strLen@@ +@@ move@@ ;q@@ >=@@ p+@@ repLen@@ ;q@@ --) { *@@ q=@@ *(q@@ -@@ move@@ ); } i=0; q=@@ replacement@@ ; while(i<@@ repLen@@ ) { *p@@ ++@@ =@@ *@@ q++; i++; } } elseif(@@ repLen@@ ==@@ subLen@@ ) { i=0; while(i<@@ repLen@@ ) { *p@@ ++@@ =@@ *@@ q++; i++; } } else { i=0; while(i<@@ repLen@@ ) { *p@@ ++@@ =@@ *@@ q++; i++; } move@@ =@@ subLen@@ -@@ repLen@@ ; while(@@ *(p+@@ move@@ )@@ !='\0') { *p@@ ++@@ =@@ *(p+@@ move@@ ); } *@@ p=@@ '\0'@@ ; } cout<<str@@ <<endl; return0; }  
c -1
h -1
intmain() { intn,a[@@ 10000@@ ],i,j,@@ x=0; scanf("%d\n",&n); for(i=0;i<=n-1;i++) { scanf("%d",&a[i]); } for(i=0;i<=n-1;i++) { if(a[i]==0) continue; for(j=i+1;j<=@@ n-1;j++) { if(a[i]==a[j]) { a[j]=0; } } } printf("%d",a[0]); for(i=1;i<=n-1;i++) { if(a[i]!=0) printf("%d",a[i]); } return0; }  
c -1
h -1
0

intf@@ (intx,int@@ min@@ ){ if(x@@ <@@ min@@ )return0; int@@ r@@ =1; for(inti=@@ min@@ ;i<@@ x@@ /2@@ ;i++){ if(x@@ %i==0){ r@@ +=@@ f(@@ x@@ /i,i); } } return@@ r; } intmain(){ intn; cin>>n; while(n@@ --){ intx; cin>>x; cout<<@@ f(@@ x,@@ 2)<<endl; } }  
c -1
h -1
intmain() { intk; scanf("%d",&k); int*@@ a=@@ (int*)malloc(sizeof(int)@@ *@@ k); inti,j; for(i=0;i<k;i++) scanf("%d",&a[i]); int@@ count[@@ 30]={0}; int@@ max; max=0; for(i=k-2;i>=0;i--) { for(j=i+1;j<k;j++) { if(a[j]<=@@ a[i]&&@@ count@@ [i]<@@ count@@ [j]@@ +1) count@@ [i]=@@ count@@ [j]+1; } } for(i=0;i<k;i++) { if(max<@@ count@@ [i]) max=count@@ [i]; } printf("%d",@@ max@@ +1); free(@@ a); return0; }  
c -1
h -1
0

intmain() { chara[@@ 257@@ ],b[@@ 257@@ ],c[@@ 257@@ ],@@ d[@@ 530@@ ]={'\0'},@@ e@@ [257@@ ]={'\0'}; inti,@@ m=0,@@ j,@@ t,@@ len; scanf("%s%s%s",a,b,c); for(i=0;;i++) { if(a[i]==@@ '\0@@ '||@@ b[m@@ ]==@@ '\0')@@ break; if(@@ b[m@@ ]!=@@ a[i]) { m=0; continue; } m++; } if(m@@ !=0) { for(j=0@@ ,@@ t@@ =0;j<=@@ i@@ -m@@ ;j++,@@ t++) { if(j==@@ i@@ -@@ m) { d[@@ t@@ ]='\0'; } else { d[@@ t@@ ]=@@ a[j]; } } len@@ =strlen(a); if(i!=@@ len@@ ) { for(j=i,@@ t@@ =0;j<@@ len@@ ;j++,@@ t++) { e@@ [t@@ ]=@@ a[j]; } strcat(@@ d,@@ c); strcat(@@ d,@@ e); } else { strcat(@@ d,@@ c); } printf("%s",@@ d); } else { printf("%s",a); } return0; }  
c -1
h -1
intmain() { inta[100@@ ][@@ 16],@@ i,j,k,@@ t; for(i=0;;i++) { scanf("%d",&a[i]@@ [0]); if(a[i]@@ [0]@@ ==-1) break; for(j=1@@ ;@@ a[i][j-1]@@ !=0;j++) { scanf("%d",&a[i][j]); } } for(j=0;j<i;j++) { intn=0; for(k=0;@@ a[j]@@ [k+1@@ ]@@ !=0@@ ;k++) { for(@@ t=@@ k@@ +1;@@ a[j]@@ [t@@ ]@@ !=0@@ ;t++) { if(a[j]@@ [k]==2*@@ a[j]@@ [t@@ ]@@ ||@@ a[j]@@ [t@@ ]==2*@@ a[j]@@ [k]) n++; } } printf("%d\n",n); } return0; }  
c -1
h -1
0

int@@ decompose@@ (intx,int@@ y); intmain() { intn,m; cin>>n; for(intj=1;j<=@@ n;j++) { cin>>m; cout<<@@ decompose@@ (m,@@ 2)<<endl; } return0; } int@@ decompose@@ (intx,inty) { intsum@@ =1,@@ b; b=@@ (int)sqrt(@@ x); if(x@@ ==1)@@ return0; for(inti=@@ y@@ ;i<=@@ b;i++) { if(x%i==0) { sum=sum+@@ decompose@@ (x/i,i); } } returnsum; }  
c -1
h -1
intmain() { intk,m,n,i,j,@@ p,@@ sum1@@ ,@@ sum2@@ ,@@ sum3@@ ,@@ sum4@@ ,sum; scanf("%d",&k); for(i=0;i<k;i++){ intsz[100][100]; scanf("%d%d",&m,&n); for(j=0;j<m;j++){ for(p=0;p@@ <n;@@ p++){ scanf("%d",&sz@@ [j]@@ [p@@ ]); } } if(m@@ !=1@@ &&m@@ !=@@ 2@@ &&n@@ !=1@@ &&n@@ !=@@ 2@@ ){ sum1@@ =@@ sum2@@ =@@ sum3@@ =@@ sum4@@ =0; for(p=0;p@@ <n;@@ p++){ sum1@@ +=@@ sz[0][@@ p@@ ]; } for(p=0;p@@ <n;@@ p++){ sum2@@ +=@@ sz[@@ m-1][@@ p@@ ]; } for(j=0;j<m;j++){ sum3@@ +=@@ sz[j]@@ [0]; } for(j=0;j<m;j++){ sum4@@ +=@@ sz[j]@@ [n-1]; } printf("%d\n",@@ sum1@@ +@@ sum2@@ +@@ sum3@@ +@@ sum4@@ -@@ sz[0][@@ 0]-@@ sz[0][@@ n-1]-@@ sz[@@ m-1][0]-@@ sz[@@ m-1][@@ n-1]); }else{ sum=0; for(j=0;j<m;j++){ for(p=0;p@@ <n;@@ p++){ sum+=@@ sz[j]@@ [p@@ ]; } } printf("%d\n",sum); } } return0; }  
c -1
h -1
0

intmain() { intyear,month,day; cin>>year>>@@ month>>@@ day; inta[@@ 13]={0,31,28,31,30,31,30,31,31,30,31,30,31}; if(year%@@ 4==0&&year%100!=0@@ ||@@ year%400==0) a[2]=@@ 29; intsum=0; for(inti=1;i<@@ month;i++) { sum=sum+@@ a[i]; } sum=sum+day; cout<<sum<<endl; return0; }  
c -1
h -1
intmain() { intn,i,@@ num[@@ 20010@@ ],@@ m; cin>>n; m=@@ n; for(i=0;i<n;i++) cin>>num[i]; for(i=0;i<n;i++) { intj; for(j=i+1;j<n;j++) { if(num@@ [j]==@@ num[i]@@ &&@@ num[j]@@ !=0) { num[j]@@ =0; m@@ --; } } } for(i=0;i<n;i++) { if(num@@ [i]!=0) { m@@ --; if(m@@ >0) cout<<@@ num[i]@@ <<""; else cout<<@@ num[i]@@ <<endl; } } return0; }  
c -1
h -1
0

inta[100][100],@@ r,@@ c; int@@ judge@@ (inti,int@@ c) { if(i@@ -c@@ >=0@@ )@@ return@@ i@@ -c@@ +1; else@@ return0; } intmain() { cin>>@@ r@@ >>@@ c; for(inti=0;i<@@ r@@ ;i++){ for(intj=0;j<@@ c@@ ;j++){ cin>>@@ *(*(a+i)@@ +j@@ );}} for(inti=0;i<@@ r@@ +c@@ -1;i++){ for(intj=@@ judge@@ (i,@@ c)@@ ;j<=@@ i@@ &&j@@ <@@ r@@ &&i@@ -j@@ <@@ c@@ ;j++){ cout<<*(*(a@@ +j)@@ +i-j@@ )@@ <<endl@@ ;}} return0; }  
c -1
h -1
struct@@ huanzhe {@@ charid@@ [11]; intage; }@@ sick@@ [@@ 110@@ ]; int@@ panduan@@ (int*@@ p1,int*p2@@ ,int@@ a,int@@ b); voidpaixu@@ (int*@@ p3@@ ,int*@@ p4@@ ,int@@ c); intmain(intargc,char*argv[]) { intn,i,@@ pan@@ ; int@@ ji@@ [@@ 110@@ ]={@@ 1@@ }; int@@ zhangzhe@@ [@@ 110@@ ]; int*@@ pointer1@@ ,*@@ pointer2@@ ; pointer1@@ =@@ ji@@ ; pointer2@@ =@@ zhangzhe@@ ; scanf("%d",&n); for(i=0;i<n;i++){ scanf("%s%d",&@@ sick@@ [i].id,&@@ sick@@ [i].age); } for(i=0;i<n;i++){ pan@@ =@@ panduan@@ (@@ pointer1@@ ,@@ pointer2@@ ,@@ sick@@ [i].age@@ ,@@ i); if(@@ pan@@ ){@@ sick@@ [i].age@@ =0;} } paixu(@@ pointer1@@ ,@@ pointer2@@ ,@@ ji@@ [0]); for(i=1;i<@@ ji@@ [0]@@ ;i++){ printf("%s@@ \n",&@@ sick@@ [@@ ji@@ [i]@@ ].id); } for(i=0;i<n;i++){ if(@@ sick@@ [i].age@@ ==0){ continue; } printf("%s\n",@@ sick@@ [i].id); } return0; } int@@ panduan@@ (int*@@ p1,int*p2@@ ,int@@ a,int@@ b){ int@@ jieguo@@ =0; if(a@@ >=60){ *(@@ p1@@ +*@@ p1@@ )@@ =@@ b; *(@@ p2@@ +*@@ p1@@ )@@ =@@ a; (*@@ p1@@ )@@ ++; jieguo@@ =1; } return(@@ jieguo@@ ); } voidpaixu@@ (int*@@ p3@@ ,int*@@ p4@@ ,int@@ c){ intj,@@ k,@@ temp; for(j=0;j<@@ c@@ ;j++){ for(k=1;k<@@ c@@ -1@@ ;k++){ if(*(@@ p4@@ +k)@@ <*@@ (@@ p4@@ +k@@ +1)@@ ){ bian@@ (@@ p3@@ ); bian@@ (@@ p4@@ ); } } } }  
c -1
h -1
0

intmain() { struct@@ a { charid[10]; intage; }@@ p,q,@@ a[100],@@ old@@ [100],@@ yog@@ [100]; intn,@@ i=0,@@ x=0,@@ y=0,@@ k,@@ l; scanf("%d",&n); for(i=0;i<n;i++) { scanf("%s%d",@@ a[i].@@ id,&@@ a[i].@@ age); if(a[i].age@@ >=60) { old@@ [x@@ ]=a[i]; x++; } if(a[i].age@@ <60) { yog@@ [y@@ ]=a[i]; y++; } } for(k=1;k<@@ x@@ ;k++) { for(i=0;i<x@@ -1;i++) { if(old@@ [i].age@@ <@@ old@@ [i+1@@ ].age) { p=@@ old@@ [i+1]; old@@ [i+1]=@@ old@@ [i]; old@@ [i]=@@ p; } } } for(i=0;i<x;i++) { printf("%s\n",old@@ [i].id); } for(i=0;i<y;i++) { printf("%s\n",@@ yog@@ [i].id); } return0; }  
c -1
h -1
intmain() { inta[100][100],@@ column@@ [100]={0},@@ i=0,@@ l=0,@@ j,@@ n,m,@@ s=0; for(l=0;l@@ <=@@ 15@@ ;l++) { scanf("%d",&a[i]@@ [l]); if(a[i]@@ [l@@ ]==@@ -1)break; else@@ if(a[i]@@ [l@@ ]@@ ==0){@@ i@@ ++;@@ l@@ =-@@ 1@@ ;} else@@ column@@ [i]++; } i--; for(m=0;m@@ <=i@@ ;m++) { s=0; for(j=0;j<=@@ column@@ [m]@@ -1;j++) for(n@@ =j+1@@ ;n@@ <=@@ column@@ [m@@ ];@@ n++) if(a[m@@ ][j]@@ *2==@@ a[m@@ ][n@@ ]@@ ||@@ a[m@@ ][n@@ ]@@ *2==@@ a[m]@@ [j]) s=s+1; printf("%d\n",s); } return0; }  
c -1
h -1
0

intmain() { intn,k,i,j,@@ l,@@ w; inta[1000]; scanf("%d%d",&n,&k); if(n@@ <=@@ 0)@@ printf("no"); l=0; i=0; while(@@ l@@ <=@@ n-1) { scanf("%d",&@@ a[l@@ ]); l++; } while(i<@@ n-1) { j=@@ n-1; while(j@@ >@@ i) { w=@@ a[i]+a[j]; j--; if(w@@ ==@@ k){@@ printf("yes");@@ break;} } if(w@@ ==@@ k){@@ break;} i++; } if(i==@@ n-1)@@ printf("no"); return0; }  
c -1
h -1
main() { intyear,month,day,@@ a,@@ m[@@ 12]={31,@@ 28,31,30,31,30,31,31,30,31,30,31@@ },@@ i,@@ sum=0; scanf("%d%d%d",&year,&month,&day); if(year%@@ 4==0&&@@ year%@@ 100!=0) a=1; elseif(@@ year%@@ 100==0&&@@ year%400==0) a=1; else a=0; if(a==1) { m@@ [1]=@@ 29; for(i=0;i<month-1;i++) sum=sum+@@ m[i]; sum=sum+day; } elseif(a@@ ==0) { for(i=0;i<month-1;i++) sum=sum+@@ m[i]; sum=sum+day; } printf("%d\n",sum); }  
c -1
h -1
0

intmain() { inti,j,@@ x,y,@@ count=0; inta[16]; for(i=1;;i++) { count=0; for(j=0;;j++) { cin>>@@ a[j]; if((a[j]@@ ==0)||(@@ a[j]==@@ -1)) break; } for(x=0;x@@ <=j@@ -1;@@ x++) { for(y=0;y@@ <=j@@ -1;@@ y@@ ++) { if(a[@@ y@@ ]==@@ a[x@@ ]*@@ 2) count=@@ count@@ +1; } }@@ if(a[j]@@ !=-1) cout<<count<<endl; } return0; }  
c -1
h -1
intmain(){ intsz@@ [100][100],@@ n,i,j,@@ a,b,@@ c,d; scanf("%d",&n); for(i=0;i<n;i++){ for(j=0;j<n;j++){ scanf("%d",&sz[i][j]); }} for(i=1;i<@@ n-1;i++){ for(j=1;j<@@ n-1@@ ;j++){ if(sz@@ [i-1][j]@@ ==0&&@@ sz[i]@@ [j-1]@@ ==0&&@@ sz@@ [i-1]@@ [j-1]@@ ==0){ a=i; b@@ =j;} if(sz[i]@@ [j+1]@@ ==0&&@@ sz@@ [i+1][j]@@ ==0&&@@ sz@@ [i+1]@@ [j+1]@@ ==0){ c=i; d@@ =j;} }} printf("%d",(@@ c-a@@ +1)*(@@ d-b@@ +1@@ )); return0; }  
c -1
h -1
0

intmain(){ intn,k; scanf("%d%d",&n,&k); intsz[1000]; inti; for(i=0;i<n;i++){ scanf("%d",&sz[i]); } intj,@@ e,@@ a; for(j=1;j<@@ n;j++){ for(i=0;i<n@@ -j@@ ;i++){ if(sz[i]@@ >@@ sz@@ [i+1@@ ]){ e=@@ sz[i]; sz@@ [i]=@@ sz@@ [i+1]; sz@@ [i+1]=@@ e; } } } a=0; if(sz[@@ n-1@@ ]+sz[@@ n-2@@ ]<@@ k){ printf("no"); }else{ if(sz@@ [0]+@@ sz@@ [1]@@ >@@ k){ printf("no"); }else{ for(i=0;i<n-1;i++){ for(j=i+1;j<n;j++){ if(sz[i]+sz@@ [j]==k){ printf("yes"); a=1; break; } } if(a@@ ==1){ break; } } if(a@@ ==0){ printf("no"); } } } return0; }  
c -1
h -1
intmain(){ intyear,month,day,@@ sum,@@ i; intN@@ [12]={31,28,31,30,31,30,31,31,30,31,30,31}; scanf("%d%d%d",&year,&month,&day); sum=0; for(i=1;i<@@ month@@ ;i++){ sum=sum+@@ N@@ [i-1]@@ ;} if((year%4==0&&year%100!=0@@ )||@@ year%@@ 400==0)@@ sum=sum+1; sum=sum+day; printf("%d",sum); }  
c -1
h -1
0

intmain() { intn,k,i,j,@@ x[@@ 1000],@@ a,@@ m=0; scanf("%d%d",&n,&k); for(i=0;i<n;i++) { scanf("%d",&@@ x[i]); } for(i=0;i<n;i++) { for(j=1;j<n;j++) { if(i<@@ j) { a=@@ x@@ [i]+@@ x@@ [j]; if(a@@ ==k) { m++; break; } } } if(a@@ ==k) break; } if(m@@ !=0) printf("yes"); else{printf("no");} return0; }  
c -1
h -1
struct@@ missle { intid; int@@ h; }@@ *p,@@ tmp; intmax=0; int@@ maxn@@ (inti,int@@ n); int@@ pass@@ (int@@ pre@@ ,int@@ aft@@ ); intmain() { intk; scanf("%d",&k); p=(struct@@ missle@@ *)malloc(sizeof(struct@@ missle@@ )*@@ k); inti=0; do { scanf("%d",&@@ p[i].@@ h); p[i].@@ id@@ =i; i++; }@@ while(i<@@ k); intj; for(i=0;i<k;i++) { j=@@ maxn@@ (i,@@ k); } printf("%d\n",max); free@@ (p); return0; } int@@ maxn@@ (inti,int@@ n) { int@@ max2@@ =1; int@@ re@@ =1; intj; if(i==@@ n-1) { max2@@ =1; } else { for(j=i+1;j<n;j++) { re@@ =1; if(@@ pass@@ (@@ i,j@@ )@@ ==1) { re@@ +=@@ maxn@@ (@@ j,@@ n); if(@@ re@@ >@@ max2@@ ) { max2=@@ re@@ ; } } } } if(@@ max2@@ >max) { max=@@ max2; } return@@ max2; } int@@ pass@@ (int@@ pre@@ ,int@@ aft@@ ) { if(p@@ [@@ pre@@ ].@@ h@@ >=@@ p[@@ aft@@ ].@@ h@@ ) { return1; } else { return0; } }  
c -1
h -1
0

structstudent { intnum; chars@@ [100]; structstudent*next; }; voidmain() { structstudent*@@ p1,*p2,*head; intn,i,j,k,@@ m,@@ a[100]; char@@ c[100],@@ nam@@ [100][100]; for(i=0;i<26;i++) {@@ c[i]@@ =i@@ +65@@ ;@@ a[i]@@ =0;} scanf("%d",&n); p1=@@ p2=@@ head@@ =(structstudent*)malloc(LEN); scanf("%d%s",&p1->num,p1->@@ s); for(i=1;i<n;i++) { p1=(structstudent*)malloc(LEN); scanf("%d%s",&p1->num,p1->@@ s); p2->next=p1; p2=p1; } p2->next=NULL; p1=head; i=0; while(p1!=NULL) { strcpy(@@ nam@@ [i],@@ p1->@@ s); i++; p1=p1->next; } p1=head; for(k=0;k<n;k++) { for(i=0;i<26;i++) { for(j=0;@@ nam@@ [k]@@ [j]!='\0';j++) if(@@ nam@@ [k]@@ [j]==@@ c@@ [i]) a[i]@@ ++; } } k=@@ a[0]; for(i=0;i<26;i++) { if(a[i]>@@ k) k=@@ a[i]; } for(i=0;i<26;i++) { if(a[i]==@@ k) {@@ printf("%c@@ \n@@ %d",@@ c[i]@@ ,@@ a[i]); m=i; break; } } p1=head; for(i=0;i<n;i++) { for(j=0;@@ nam@@ [i][j]@@ !='\0';j++) { if(@@ nam@@ [i][j]==@@ c[m@@ ]) printf("\n%d",@@ p1->num); } p1=p1->next; } }  
c -1
h -1
intmain() { intn,k,@@ sum; scanf("%d%d",&n,&k); int@@ shu@@ [@@ NUM@@ ]; for(inti=0;i<n;i++) { scanf("%d",&(@@ shu@@ [i]@@ )); } for(intj=0;j<n;j++) { for(int@@ l=@@ n-1;@@ l>@@ j@@ ;@@ l@@ --) { sum=@@ shu@@ [j]+@@ shu@@ [l]; if(sum@@ ==k) { printf("yes"); break; } } if(sum@@ ==@@ k@@ )break; } if(sum@@ !=@@ k)@@ printf("no"); return0; }  
c -1
h -1
0

intsum; voidf@@ (intx,int@@ i){ if(x@@ ==1)@@ sum++; else{ for(@@ ;i<=@@ x;i++) if(x@@ %i==0)@@ f(@@ x@@ /i,i); } } intmain(){ intn; cin>>n; while(n@@ >0){ int@@ x=0,@@ i,@@ ans@@ =1; cin>>x; for(i=2@@ ;i@@ *@@ i@@ <@@ x@@ ;i++){ if(x@@ %i==0){ sum=0; f(@@ x@@ /i,i); ans@@ +=@@ sum; } } cout<<ans@@ <<endl; n--; } return0; }  
c -1
h -1
intm@@ [100][100]; void@@ a@@ () { memset(@@ m,@@ 0,@@ sizeof@@ (m@@ )); intx,y,@@ count=0,@@ sum=0; cin>>x@@ >>@@ y; int*p=@@ m@@ [0]; for(@@ ;p<=@@ m[@@ x@@ -1]@@ +@@ y@@ -1@@ ;p++) { count++; cin>>@@ *p; if(count@@ ==1||@@ count@@ ==@@ y) sum+=@@ *p; elseif(@@ p@@ <=@@ m@@ [0]+@@ y@@ -1) sum+=@@ *p; elseif(m@@ [x@@ -1]@@ <=@@ p@@ &&p@@ <=@@ m[@@ x@@ -1]@@ +@@ y@@ -1) sum+=@@ *p; if(count==@@ y) { p=p+@@ 100@@ -@@ y; count=0; } } cout<<sum<<endl; } intmain() { intk,@@ i; cin>>k; for(i=0;i<k;i++) { a@@ (); } return0; }  
c -1
h -1
0

intmain(){ intn,k; scanf("%d%d",&n,&k); intsz[1000]; inti; for(i=0;i<n;i++){ scanf("%d",&sz[i]); } intj,@@ e,@@ a; for(j=1;j<@@ n;j++){ for(i=0;i<n@@ -j@@ ;i++){ if(sz[i]@@ >@@ sz@@ [i+1@@ ]){ e=@@ sz[i]; sz@@ [i]=@@ sz@@ [i+1]; sz@@ [i+1]=@@ e; } } } a=0; if(sz[@@ n-1@@ ]+sz[@@ n-2@@ ]<@@ k){ printf("no"); }else{ if(sz@@ [0]+@@ sz@@ [1]@@ >@@ k){ printf("no"); }else{ for(i=0;i<n-1;i++){ for(j=i+1;j<n;j++){ if(sz[i]+sz@@ [j]==k){ printf("yes"); a=1; break; } } if(a@@ ==1){ break; } } if(a@@ ==0){ printf("no"); } } } return0; }  
c -1
h -1
structstu@@ { intID; int@@ ch; int@@ ma; intsum; structstu*next; }; intmain(){ structstu*@@ head; structstu*@@ p1,*p2,*@@ a,*@@ b@@ ,*@@ c@@ ,*@@ t; intn,@@ i=0; a=@@ b=@@ c@@ =p1@@ =p2@@ =(struct@@ stu*)malloc(sizeof(structstu)); scanf("%d",&n); scanf("%d%d%d",&p1->@@ ID@@ ,&p1->@@ ch@@ ,&p1->@@ ma@@ ); p1->sum=p1->@@ ch@@ +p1->@@ ma; head=NULL; while(i<@@ n-1){ i++; p1->sum=p1->@@ ch@@ +p1->@@ ma; if(i@@ ==1)head=p1; elsep2->next=p1; p2=p1; if(p1->@@ sum>@@ a@@ ->@@ sum@@ ){@@ c=@@ b@@ ;@@ b=@@ a;@@ a=@@ p2@@ ;} elseif(@@ p1->@@ sum>@@ b@@ ->@@ sum@@ ){@@ c=@@ b@@ ;@@ b=@@ p2@@ ;} elseif(@@ p1->@@ sum>@@ c@@ ->@@ sum@@ )@@ c=@@ p2; p1=(struct@@ stu*)malloc(sizeof(structstu)); scanf("%d%d%d",&p1->@@ ID@@ ,&p1->@@ ch@@ ,&p1->@@ ma@@ ); } p2->next=NULL; printf("%d%d\n%d%d\n%d%d\n",@@ a@@ ->@@ ID,@@ a@@ ->@@ sum,@@ b@@ ->@@ ID,@@ b@@ ->@@ sum,@@ c@@ ->@@ ID,@@ c@@ ->sum); return0; }  
c -1
h -1
0

intmain() { intn,k; cin>>n>>k; inta[n]; intx,y,@@ sum; sum=0; inti,j,@@ m; for(i=0;i<n;i++) cin>>a[i]; for(j=0;j<n-1;j++) for(m@@ =j+1@@ ;m@@ <n;m++) { x=@@ a[j]@@ +@@ a[m@@ ]; if(x@@ ==k) y=1; else y=0; sum=sum+@@ y; } if(sum@@ ==0) cout<<"no"; else cout<<"yes"; return0; }  
c -1
h -1
intmain(intargc,char*argv[]) { intyear,month,day,@@ a; scanf("%d%d%d",&year,&month,&day); if(year%@@ 4==0&&year%100!=0@@ ||@@ year%@@ 400@@ ==0){ if(month==1) a=@@ day; if(month==2) a=@@ day+@@ 31; if(month==3) a=@@ day+@@ 60@@ ; if(month==@@ 4) a=@@ day+@@ 91@@ ; if(month==@@ 5) a=@@ day+@@ 121@@ ; if(month==@@ 6) a=@@ day+@@ 152@@ ; if(month==@@ 7) a=@@ day+@@ 182@@ ; if(month==8) a=@@ day+@@ 213@@ ; if(month==@@ 9) a=@@ day+@@ 244@@ ; if(month==@@ 10) a=@@ day+@@ 274@@ ; if(month==@@ 11) a=@@ day+@@ 305@@ ; if(month==@@ 12) a=@@ day+@@ 335@@ ;} else { if(month@@ ==1)@@ a=@@ day; if(month==@@ 2)@@ a=@@ day+@@ 31; if(month==@@ 3)@@ a=@@ day+@@ 59@@ ; if(month==@@ 4)@@ a=@@ day+@@ 90@@ ; if(month==@@ 5@@ )@@ a=@@ day+@@ 120@@ ; if(month==@@ 6@@ )@@ a=@@ day+@@ 151@@ ; if(month==@@ 7@@ )@@ a=@@ day+@@ 181@@ ; if(month==@@ 8@@ )@@ a=@@ day+@@ 212@@ ; if(month==@@ 9@@ )@@ a=@@ day+@@ 243@@ ; if(month==@@ 10@@ )@@ a=@@ day+@@ 273@@ ; if(month==@@ 11@@ )@@ a=@@ day+@@ 304@@ ; if(month==@@ 12@@ )@@ a=@@ day+@@ 334@@ ;@@ }; printf("%d\n",@@ a); return0; }  
c -1
h -1
0

intmain() { intk,m,n,i,j,@@ a[100][100],@@ sum=0; cin>>k; while(@@ cin>>m>>@@ n) { for(i=0;i<m;i++) for(j=0;j<n;j++) cin>>a[i][j]; if(m@@ >=@@ 3@@ &&n@@ >=@@ 3) { for(i=0;i<n;i++) sum=sum+@@ a[0]@@ [i]+@@ a[m-1]@@ [i]; for(i=1;i<m-1;i++) sum=sum+@@ a[i][0]+@@ a[i][n-1]; } else { for(i=0;i<m;i++) for(j=0;j<n;j++) sum=sum+@@ a[i][j]; } cout<<sum<<endl; sum=0; } return0; }  
c -1
h -1
intmain() { intn,a[@@ 20000],b[@@ 20000@@ ]={0}; inti,j,@@ k=0; cin>>n; for(i=0;i<n;i++) cin>>a[i]; for(i=0;i<n;i++) { for(j=i+1;j<n;j++) { if(b[j]@@ ==0) { if(a[i]==a[j]) { b[j]@@ =1; k++; } } } } cout<<a[0]; for(i=1;i<n;i++) { if(b[i]@@ ==0) cout<<""<<a[i]; } return0; }  
c -1
h -1
0

intmain() { intn,k,i,@@ t; scanf("%d%d",&n,&k); intsz[1000]; for(i=0;i<n;i++) { scanf("%d",&sz[i]); } for(i=0;i<n;i++) { for(t=0;t@@ <n;@@ t++) { if((@@ sz[i]@@ +@@ sz[@@ t@@ ])@@ ==@@ k@@ &&i!=@@ t) { printf("yes"); break; } } if((@@ sz[i]@@ +@@ sz[@@ t@@ ])@@ ==@@ k@@ &&i!=@@ t) { break; } } if(i==@@ n@@ &&@@ t@@ ==@@ n) { printf("no"); } return0; }  
c -1
h -1
intmain() { intn,i,j,@@ m=0; cin>>n; intnum[@@ 20001@@ ]={0}; for(i=1;i<=n;i++) cin>>num[i]; cout<<num@@ [1]; for(i=2;i<=n;i++) { intk=0; for(j=1;j<=@@ i-1;j++) if(num@@ [i]==@@ num@@ [j]) { k=1; break; } if(k==0) cout<<""<<@@ num[i]; } return0; }  
c -1
h -1
0

intf(inta,int@@ min@@ ){ if(a<@@ min) return0; intsum@@ =1; for(inti=@@ min@@ ;i<@@ a;i++){ if(a%i==0) sum+=@@ f(a@@ /i,i); } returnsum; } intmain(){ intn; inta[100]; scanf("%d",&n); for(inti=0;i<n;i++){ scanf("%d",&a[i]); a[i]=@@ f(@@ a[i],@@ 2); } for(inti=0;i<n;i++){ printf("%d\n",a[i]); } return0; }  
c -1
h -1
intmain() { inti,j,k,l,@@ s@@ [100][100],@@ n@@ [100],@@ m@@ [100],@@ num@@ [100]; int@@ num1@@ [100]={0}; int@@ num2@@ [100]={0}; scanf("%d",&k); for(i=0;i<k;i++) { scanf("%d%d",&@@ n@@ [i],&@@ m[i]); for(j=0;j<n@@ [i];j++) { for(l=0;l<@@ m@@ [i];@@ l++) { scanf("%d",&@@ s[j]@@ [l]); num1@@ [i]@@ +=@@ s[j]@@ [l]; } } for(j=1;j<@@ n[i]@@ -1;j++) { for(l=1;@@ l<@@ m[i]@@ -1;@@ l++) { num2@@ [i]@@ +=@@ s[j]@@ [l]; } } num[i]=@@ num1@@ [i]@@ -@@ num2@@ [i]; } for(i=0;i<k;i++) { printf("%d\n",@@ num[i]); } return0; }  
c -1
h -1
0

intmain(){ int@@ l1,l2,@@ s=0; double@@ r,@@ d; chars1@@ [max@@ +1],@@ s2@@ [max@@ +1]; scanf("%lf%s%s",&@@ r,@@ s1,@@ s2); l1=strlen(@@ s1); l2=strlen(@@ s2); if(l1!=l2@@ ){ printf("error"); return0; }else{@@ for(inti=0;i<@@ l1@@ ;i++){ if((@@ s1@@ [i]!='A'&&@@ s1@@ [i]!='G'&&@@ s1@@ [i]!='C'&&@@ s1@@ [i]!='T')@@ ||(@@ s2@@ [i]!='A'&&@@ s2@@ [i]!='G'&&@@ s2@@ [i]!='C'&&@@ s2@@ [i]!='T')@@ ){ printf("error"); return0; } } for(intj=0;j<@@ l1@@ ;j++){ if(s1@@ [j]==@@ s2@@ [j]){ s++; } } d@@ =1.0*@@ s/@@ l1; if(d@@ >@@ r@@ ){ printf("yes"); }@@ else{printf("no");} } return0; }  
c -1
h -1
intleap@@ (intyear@@ ){ if((year%4==0&&year%100!=0@@ )||@@ year%400==0) return1; else{ return0; } } voidmain(){ intyear,month,day; intdays@@ ,i; days@@ =0; scanf("%d%d%d",&year,&month,&day); for(i=1;i<@@ month@@ ;i++){ if(i==1||i==3||i==5||i==7||i==8||i==10@@ ||i==@@ 12) days@@ +=@@ 31; if(i==@@ 4||i==6||i==9||i==11) days@@ +=@@ 30; if(i==@@ 2@@ ){ if(leap@@ (year@@ )) days@@ +=@@ 29; else{ days@@ +=@@ 28; } } } days@@ +=@@ day; printf("%d\n",@@ days@@ ); }  
c -1
h -1
0

intmain() { struct@@ patient_t@@ { charid[10]; intage; }@@ patients@@ [100],@@ t; inti,j,n; scanf("%d",&n); for(i=0;i<n;i++){ scanf("%s%d",&@@ patients@@ [i].@@ id,@@ &@@ patients@@ [i].age); } for(i=0;i<n;i++){ for(j=n-1@@ ;j>i@@ ;j--){ if(@@ patients@@ [j].age@@ >=60@@ && patients@@ [j].age@@ >@@ patients@@ [j-1@@ ].age){ t=@@ patients@@ [j]; patients@@ [j]=@@ patients@@ [j-1]; patients@@ [j-1]=@@ t; } } } for(i=0;i<n;i++){ printf("%s\n",@@ patients@@ [i].id); } return0; }  
c -1
h -1
intmain() { structstudent {@@ char@@ as@@ [10]; int@@ ag@@ ; }; structstudent@@ stu@@ [100]; structstudent@@ st@@ [100]; structstudent@@ temp; intn,i,j,k; scanf("%d",&n); for(i=0;i<n;i++) scanf("%s%d",@@ stu[i].@@ as@@ ,&stu[i].@@ ag@@ ); j=0; for(i=0;i<n;i++){ if(stu[i].@@ ag@@ >@@ 59@@ ){ st@@ [j]=@@ stu[i]; stu[i].@@ ag@@ =0; j++; } } for(k=1;k<@@ j@@ ;k++){ for(i=0;i<j@@ -@@ k;i++){ if(@@ st[i].@@ ag@@ <@@ st@@ [i+1].@@ ag@@ ){ temp=@@ st@@ [i]; st@@ [i]=@@ st@@ [i+1]; st@@ [i+1]=@@ temp; } } } for(i=0;i<j;i++) printf("\n@@ %s",@@ st[i].@@ as@@ ); for(i=0;i<n;i++) if(stu[i].@@ ag@@ !=0) printf("\n@@ %s",@@ stu[i].@@ as@@ ); return0; }  
c -1
h -1
1


voidmain() { int@@ lanjie@@ (ints[@@ ],intn,@@ intm,@@ int@@ k); intk,i,@@ s[@@ 25],@@ n; scanf("%d",&k); for(i=0;i<k;i++) scanf("%d",&s[i]); n=@@ lanjie@@ (@@ s,@@ 10000@@ ,@@ 0,@@ k); printf("%d",n); } int@@ lanjie@@ (inta[@@ 25],@@ intn,@@ intm,@@ int@@ k) { int@@ c,@@ b,@@ z; if(m!=@@ k@@ -1) { if(n@@ >=@@ a[m@@ ]) { c=@@ lanjie@@ (a,@@ a[m@@ ],@@ m@@ +1,@@ k)@@ +1; b=@@ lanjie@@ (a,n,@@ m@@ +1,@@ k); if(c@@ >@@ b) z=@@ c; else z=@@ b; } else z=@@ lanjie@@ (a,n,@@ m@@ +1,@@ k); } else { if(n@@ >=@@ a[m@@ ]) z=1; else z=0; } return(@@ z); }  
c -1
h -1
structstudent { int@@ xuehao@@ ; intshuxue; intyuwen; int@@ zongfen; }; intmain() { intn,i,@@ e@@ ,j; scanf("%d",&n); structstudent@@ stu[@@ 100001@@ ]; for(i=0;i<n;i++) { scanf("%d%d%d",&stu[i].@@ xuehao@@ ,&stu[i].@@ shuxue@@ ,&stu[i].@@ yuwen@@ ); stu[i].@@ zongfen@@ =stu[i].@@ shuxue@@ +stu[i].@@ yuwen; } for(i=1;i<@@ 4;i++) { for(j=0;j<n-i;j++) { if(stu[j].@@ zongfen@@ >=@@ stu[j+1].@@ zongfen@@ ) { stu[@@ 100000@@ ]=@@ stu@@ [j+1]; stu@@ [j+1]=@@ stu@@ [j]; stu@@ [j]=@@ stu[100000]; } } } for(i=n-1;i@@ >@@ n-@@ 4@@ ;i--) { printf("%d%d\n",stu[i].@@ xuehao@@ ,@@ stu[i].@@ zongfen@@ ); } return0; }  
c -1
h -1
0

intmain() { intn,a[@@ 20000@@ ],i,j,@@ k; cin>>n; for(i=0;i<n;i++) cin>>a[i]; for(i=n-1@@ ;i>0;i--) { for(j=0;j<i;j++) { if(a[i]==a[j]) { for(k=i@@ ;k<@@ n;k++) { a[k]=a[k@@ +1]; } n=@@ n-1; } } } for(i=0;i<=n-1;i++) { cout<<a[i]; if(i!=@@ n-1) cout<<"@@ "; } return0; }  
c -1
h -1
intmain() {@@ inti,j,@@ a[@@ 20000],@@ n; scanf("%d",&n); for(i=0;i<n;i++) scanf("%d",&a[i]); printf("%d",a[0]); for(i=1;i<n;i++) {@@ for(j=0;j<@@ i@@ ;) {@@ if(a[i]==@@ a[j])@@ j@@ =i+1; else@@ j++; if(j==@@ i)@@ printf("%d",@@ a[i]@@ );@@ }}}  
c -1
h -1
1


int@@ p@@ (inta,int@@ m) { intt=0; inti; if(a%@@ m@@ !=0) return0; if((@@ a%@@ m@@ ==0)&&(@@ a/@@ m@@ <m@@ )&&(@@ a@@ !=@@ m@@ )) return0; if(a==@@ m) return1; if((@@ a%@@ m@@ ==0)&&(@@ a/@@ m@@ >=@@ m@@ )) { for(i=m@@ ;i<=@@ a/@@ m;i++) {@@ t=t@@ +p@@ (a@@ /@@ m,@@ i@@ );} return@@ t; } } intmain() {@@ intn; cin>>n; inti; intx; intj; intnum=0; for(i=0;i<n;i++) { cin>>x; for(j=2;j<=@@ x;j++) { num=num@@ +p@@ (x@@ ,j); } cout<<num<<endl; num=0; } return0; }  
c -1
h -1
intmain() { void@@ jisuan@@ (intarray@@ [100][100@@ ],int@@ x,int@@ y); intk,i,@@ m,n,@@ p,q,@@ a[100][100]; scanf("%d",&k); for(i=0;i<k;i++) { scanf("%d%d",&m,&n); for(p=0;p@@ <m@@ ;p++) { for(q=0;q@@ <n;@@ q++) {scanf("%d",&@@ a[p@@ ][q@@ ]@@ );} } jisuan@@ (a,@@ m,n); } } void@@ jisuan@@ (intarray@@ [100][100@@ ],int@@ x,int@@ y) { inti,j,@@ a,b,c,d,@@ sum; for(j=0@@ ,@@ a@@ =0;j<@@ y;j++) {@@ a=@@ a+@@ array@@ [0]@@ [j]@@ ;} for(i=1@@ ,@@ b@@ =0;i<@@ x;i++) {@@ b=@@ b+@@ array@@ [i]@@ [y@@ -1]@@ ;} for(j=@@ y@@ -2@@ ,@@ c@@ =0@@ ;j>=0;j--) {@@ c=@@ c+@@ array[@@ x@@ -1]@@ [j]@@ ;} for(i=x@@ -2@@ ,@@ d@@ =0@@ ;i>0;i--) {@@ d=d+@@ array@@ [i][0]@@ ;} sum=@@ a+@@ b+@@ c+@@ d; printf("%d\n",sum); }  
c -1
h -1
0

int@@ remember@@ =0; intnumber@@ (int@@ const1@@ ,int@@ a) { if(a==1) { remember@@ ++; return1; } else { for(inti=@@ const1@@ ;i<=a;i++) { if(a%i==0) number@@ (i,@@ a/@@ i); } } } intmain() { intn; cin>>n; int@@ cases@@ [n]; for(intj=0;j<n;j++) cin>>@@ cases@@ [j]; for(intj=0;j<n;j++) { number@@ (2,@@ cases@@ [j]); cout<<@@ remember@@ <<endl; remember@@ =0; } return0; }  
c -1
h -1
intmain(){ int@@ he@@ ,@@ m,n,@@ k,@@ sz@@ [100][100]; inti,j; scanf("%d",&k); for(i=0;i<k;i++){ scanf("%d%d",&m,&n); for(j=0;j<m;j++){ for(int@@ q@@ =0;q@@ <n;@@ q@@ ++){ scanf("%d",&sz@@ [j]@@ [q@@ ]); } } if(m@@ ==1&&n@@ ==1){ printf("%d\n",@@ sz[0][@@ 0]@@ ); }else{ he@@ =0; for(j=0;j<m;j++){ if(m@@ ==1){ he@@ +=@@ sz[j]@@ [0]; }else{ he@@ +=@@ sz[j]@@ [0]+@@ sz[j]@@ [n-1]; } } for(j=1;j<@@ n-1@@ ;j++){ if(n@@ ==1){ he@@ +=@@ sz[0]@@ [j]; }else{ he@@ +=@@ sz[0]@@ [j]+@@ sz[m@@ -1][j]; } } printf("%d\n",@@ he@@ ); } } return0; }  
c -1
h -1
0

main() { inti,j,k,@@ m,n; int@@ p=0; scanf("%d%d",&m,&n); inta[1000]; intb[@@ 1000][1000]; for(i=1;i<=m;i++) scanf("%d",&a[i]); for(i=1;i<=m;i++) for(j=i+1;j<=@@ m;j++) b[i]@@ [j]=@@ a[i]+a[j]; for(i=1;i<=m;i++) {@@ if(p@@ ==1) break; for(j=1;j<=m;j++) {@@ if(b[i]@@ [j]==@@ n) {@@ p@@ =1;break;} } } if(p@@ ==1) printf("yes"); else printf("no"); }  
c -1
h -1
intmain() { intk; scanf("%d",&k); int@@ s1@@ =0,@@ s2@@ =0,@@ s3@@ =0,@@ s4@@ =0,@@ s=0; int@@ r=0,@@ c=0; int@@ jz@@ [100][100]; intm,n; inti=1; while(i<=@@ k){ scanf("%d%d",&m,&n); for(int@@ jm@@ =0;@@ jm@@ <m;@@ jm@@ ++){ for(int@@ jn@@ =0;@@ jn@@ <n;@@ jn@@ ++){ scanf("%d",&@@ jz@@ [@@ jm@@ ][@@ jn@@ ]); } } r=0; c=0; for(c=0;c@@ <n;@@ c@@ ++){ s1@@ +=@@ jz@@ [r@@ ][c@@ ]; } r=@@ m-1@@ ; c=0; for(c=0;c@@ <n;@@ c@@ ++){ s2@@ +=@@ jz@@ [r@@ ][c@@ ]; } r=0; c=0; for(r=0;r@@ <m;@@ r@@ ++){ s3@@ +=@@ jz@@ [r@@ ][c@@ ]; } r=0; c=@@ n-1; for(r=0;r@@ <m;@@ r@@ ++){ s4@@ +=@@ jz@@ [r@@ ][c@@ ]; } s=@@ s1@@ +@@ s2@@ +@@ s3@@ +@@ s4@@ -@@ jz@@ [0][@@ 0]-@@ jz@@ [0][@@ n-1]-@@ jz@@ [@@ m-1][0]-@@ jz@@ [@@ m-1][@@ n-1]; printf("%d",s); s1@@ =0; s2@@ =0; s3@@ =0; s4@@ =0; s=0; if(i!=@@ k){ printf("\n"); } i++; } return0; }  
c -1
h -1
0

intfenjie@@ (int@@ out@@ [@@ 16@@ ],int@@ a,@@ intn,@@ intm,@@ int@@ sheng@@ ,int@@ b[2@@ ]) { inti; for(i=m@@ ;i<=@@ a@@ /2@@ ;i++) { if(@@ sheng@@ %i==0) { out@@ [n@@ ]=i; int@@ qiu@@ =1,@@ k; for(k=0;k<=@@ n@@ ;k++)@@ qiu@@ =@@ out@@ [k]@@ *@@ qiu@@ ; if(@@ qiu@@ ==@@ a@@ ){@@ b[0]@@ ++;@@ break;} if(@@ qiu@@ >@@ a)@@ break; else@@ fenjie@@ (@@ out@@ ,@@ a,@@ n@@ +1,@@ i,@@ sheng@@ /i,@@ b); } } return0; } intmain() { int@@ hang@@ =0; cin>>@@ hang@@ ; while(@@ hang@@ >0) { inta; intb[@@ 2@@ ]={0}; cin>>a; int@@ out@@ [@@ 16@@ ]={0}; fenjie@@ (@@ out@@ ,@@ a,@@ 0,@@ 2,@@ a,b); cout<<@@ b[0]@@ +1<<endl; hang@@ --; } return0; }  
c -1
h -1
intmain(){ double@@ p; int@@ la@@ ,i,@@ y=0,@@ lb@@ ,@@ s=0; char@@ zfa@@ [501],@@ zfb@@ [501]; scanf("%lf",&@@ p); scanf("%s",@@ zfa@@ ); scanf("%s",@@ zfb@@ ); la@@ =strlen(@@ zfa@@ ); lb@@ =strlen(@@ zfb@@ ); if(@@ la@@ !=@@ lb@@ ){ y=1; } if(y@@ ==0){ for(i=0;@@ zfa@@ [i]!=@@ '\0@@ '&&@@ zfb@@ [i]!='\0';i++){ if(((@@ zfa@@ [i]!='A')&&(@@ zfa@@ [i]!='T')&&(@@ zfa@@ [i]!='C')&&(@@ zfa@@ [i]!='G')@@ )||((@@ zfb@@ [i]!='A')&&(@@ zfb@@ [i]!='T')&&(@@ zfb@@ [i]!='C')&&(@@ zfb@@ [i]!='G')@@ )){ y=1; break; } if(@@ zfa@@ [i]==@@ zfb@@ [i]){ s++; } } if((@@ 1.0*@@ s/@@ la@@ )>@@ p@@ &&@@ y@@ ==0){ printf("yes"); } elseif(@@ y@@ ==0){ printf("no"); } } if(y@@ ==1){ printf("error"); } return0; }  
c -1
h -1
0

struct@@ mao { charname@@ [10]; intage; }@@ pat@@ [100]; intmain() { intmax(int@@ age@@ [100],int@@ n); intn,i,@@ k; intage@@ [100]; scanf("%d",&n); for(i=0;i<n;i++){ scanf("%s%d",@@ pat[i].@@ name@@ ,&@@ pat@@ [i].age); if(pat@@ [i].age>=60) age@@ [i]=@@ 200@@ +@@ pat@@ [i].age; else age@@ [i]=@@ 101@@ -@@ i; } for(i=0;i<n;i++) { k=@@ max(@@ age@@ ,n); printf("%s\n",@@ pat@@ [k].@@ name); } return0; } intmax(int@@ age@@ [100],int@@ n) { int@@ a=0,@@ j=0,@@ k=0; for(j=0;j<n;j++) { if(age@@ [j]>@@ a) { a=@@ age@@ [j]; k=j; } } age@@ [k]@@ =0; return@@ k; }  
c -1
h -1
intmain() { intn,i; int@@ fir@@ =0,@@ sec@@ =0,@@ thi@@ =0; int@@ fir_n@@ =0,@@ sec_n@@ =0,@@ thi_n@@ =0; struct { intnum; int@@ ma; int@@ cn@@ ; int@@ score; }@@ s; scanf("%d",&n); for(i=0;i<n;i++) { scanf("%d%d%d",&@@ s.@@ num,&@@ s.@@ ma@@ ,&@@ s.@@ cn@@ ); s.@@ score@@ =@@ s.@@ ma@@ +@@ s.@@ cn@@ ; if(s@@ .@@ score@@ >@@ fir@@ ) { thi@@ =@@ sec@@ ; thi_n@@ =@@ sec_n@@ ; sec@@ =@@ fir@@ ; sec_n@@ =@@ fir_n@@ ; fir@@ =@@ s.@@ score; fir_n@@ =@@ s.@@ num; } elseif(@@ s.@@ score@@ >@@ sec@@ ) { thi@@ =@@ sec@@ ; thi_n@@ =@@ sec_n@@ ; sec@@ =@@ s.@@ score; sec_n@@ =@@ s.@@ num; } elseif(@@ s.@@ score@@ >@@ thi@@ ) { thi@@ =@@ s.@@ score; thi_n@@ =@@ s.@@ num; } } printf("%d%d\n",@@ fir_n@@ ,@@ fir@@ ); printf("%d%d\n",@@ sec_n@@ ,@@ sec@@ ); printf("%d%d\n",@@ thi_n@@ ,@@ thi@@ ); return0; }  
c -1
h -1
0

intmain(){ intn,i,k,@@ a[@@ 10000],@@ b,@@ j,@@ d=0; for(i=0;i<@@ 10000@@ ;i++){ a[i]=0; } scanf("%d%d",&n,&k); for(i=0;i<n;i++) scanf("%d",&a[i]); for(i=0;i<n;i++){ if(d@@ !=0) break; for(j=i+1;j<n;j++){ b=0; b=@@ a[i]+a[j]; if(k==@@ b){ printf("yes\n"); d++; break; } } } if(d@@ ==0){ printf("no\n"); } return0; }  
c -1
h -1
intmain() { intn,@@ y,@@ r,@@ s=0,@@ i; scanf("%d%d%d",&@@ n,&@@ y,&@@ r); inta[@@ 12@@ ]; a[0]=@@ 31,@@ a[1]=@@ 28@@ ,@@ a[2]=@@ 31,@@ a[@@ 3@@ ]=30@@ ,a[@@ 4@@ ]=@@ 31,@@ a[@@ 5@@ ]=30@@ ,a[@@ 6@@ ]=@@ 31,@@ a[@@ 7@@ ]=@@ 31,@@ a[@@ 8@@ ]=30@@ ,a[@@ 9@@ ]=@@ 31,@@ a[@@ 10@@ ]=30@@ ,a[@@ 11@@ ]=31; if((@@ n@@ %4==0&&@@ n@@ %100!=0@@ )||(@@ n@@ %@@ 400==0)) a[1]=29; for(i=0;i<@@ y@@ -1;i++) s=s+@@ a[i]; s=s+@@ r; printf("%d\n",s); getchar(); getchar(); }  
c -1
h -1
0

intmain(){ intn,i,@@ x,y,@@ s=0; chara[501],b[501]; double@@ m,@@ o@@ ; scanf("%lf",&@@ m); scanf("\n@@ %s",@@ a); scanf("\n@@ %s",@@ b); x@@ =strlen(a); y@@ =strlen(b); if(x@@ !=@@ y)@@ printf("error"); if(x==@@ y){ for(i=0;i<x;i++){ if((a[i]!='@@ A'&&a[i]!='T'&&a[i]!='C'&&a[i]!='G')||(b[i]!='A'&&b[i]!='T'&&b[i]!='C'&&b[i]!='@@ G')){ printf("error"); return0; } } for(i=0;i<x;i++){ if(a[i]==b[i]@@ )@@ s=s+1; } o@@ =1.0*@@ s/@@ x; if(@@ o@@ >@@ m)@@ printf("yes"); elseprintf("no"); } return0; }  
c -1
h -1
intmain() { inti=0,@@ t=0,@@ j,@@ h@@ =0,@@ k=0,@@ m=0; charb[@@ 2][@@ 500]; doublen; scanf("%lf",&n); for(j=0;j<@@ 2@@ ;j++){ scanf("%s",@@ b[j]); } for(j=0;@@ b[0]@@ [j]@@ !='\0'@@ ;j++){@@ h@@ ++;} for(j=0;@@ b[1@@ ][j]@@ !='\0'@@ ;j++){@@ k@@ ++;} for(j=0;@@ (@@ b[0]@@ [j]!=@@ '\0@@ ')&&(@@ b[1@@ ][j]@@ !=@@ '\0')@@ ;j++){@@ if(@@ b[0]@@ [j]<@@ 65@@ ||@@ b[0]@@ [j]>@@ 90@@ ||@@ b[1@@ ][j]@@ <@@ 65@@ ||@@ b[1@@ ]@@ [j]>@@ 90@@ ){@@ printf("error");@@ m@@ =1;@@ break;}} if(m@@ ==0){ if(h@@ !=@@ k){@@ printf("error");} else{ for(j=0;@@ (@@ b[0]@@ [j]!=@@ '\0@@ ')&&(@@ b[1@@ ][j]@@ !=@@ '\0')@@ ;j++){ t++; if(@@ b[0]@@ [j]==@@ b[1@@ ][j]@@ ){@@ i@@ ++;} } if((@@ 1.0*@@ i@@ /@@ t)@@ <=@@ n@@ ){@@ printf("no");} else{@@ printf("yes");} } } return0; }  
c -1
h -1
1


intmain(){ inti,j,n,@@ h1@@ [100],@@ h2@@ [100],@@ c1@@ =0,@@ c2@@ =0,@@ t; char@@ d1@@ [100][10],@@ d2@@ [100][10],@@ d@@ [10]; scanf("%d",&n); for(i=0;i<n;i++){ scanf("%s",@@ d); scanf("%d",&t); if(t@@ >=60){ h1@@ [@@ c1@@ ]=t; strcpy(@@ d1@@ [@@ c1@@ ],@@ d); c1@@ ++; } else{ h2@@ [@@ c2@@ ]=t; strcpy(@@ d2@@ [@@ c2@@ ],@@ d); c2@@ ++; } } for(i=1;i<=@@ c1@@ ;i++){ for(j=0;j<@@ c1@@ -i;j++){ if(@@ h1@@ [j]<@@ h1@@ [j+1@@ ]){ t=@@ h1@@ [j]; h1@@ [j]=@@ h1@@ [j+1]; h1@@ [j+1]=t; strcpy(@@ d,@@ d1@@ [j]); strcpy(@@ d1@@ [j],@@ d1@@ [j+1]); strcpy(@@ d1@@ [j+1],@@ d); } } } for(i=0;i<@@ c1@@ ;i++){ puts(@@ d1@@ [i]); } for(i=0;i<@@ c2@@ ;i++){ puts(@@ d2@@ [i]); } return0; }  
c -1
h -1
intmain() { inta[@@ 15],@@ s,@@ i,j,k,@@ flag=1; while(@@ flag@@ ) { s=0; for(i=0;i<16;i++) { scanf("%d",&a[i]); k=i; if(a[i]==-1) { flag=0; break; } if(a[i]==0)break; } if(flag) { for(i=0;i<k;i++) for(j=0;j<k;j++) { if(a[i]==2*@@ a[j]) s++; } printf("%d\n",s); } } return0; }  
c -1
h -1
0

intmain() { intm,@@ i,j,k,@@ max@@ =-1; intc[@@ 26]; char@@ prname@@ ; struct@@ list { intnum; charwriter@@ [27]; int@@ len; }@@ book[999]; scanf("%d",&m); for(i=0;i<m;i++) { scanf("%d",&@@ book[i].@@ num); gets(@@ book[i].@@ writer); book[i].@@ len=strlen(@@ book[i].@@ writer); } for(i=0;i<26;i++) c[i]@@ =0; for(i=0;i<m;i++) { for(j=0;j<@@ book[i].@@ len@@ ;j++) { switch(@@ book[i].@@ writer@@ [j]) { case'@@ A@@ ':@@ c@@ [0]@@ ++@@ ;break; case'@@ B@@ ':c[@@ 1@@ ]++;break; case'@@ C@@ ':c[@@ 2@@ ]++;break; case'@@ D@@ ':c[@@ 3@@ ]++;break; case'@@ E@@ ':c[@@ 4@@ ]++;break; case'@@ F@@ ':c[@@ 5@@ ]++;break; case'@@ G@@ ':c[@@ 6@@ ]++;break; case'@@ H@@ ':c[@@ 7@@ ]++;break; case'@@ I@@ ':c[@@ 8@@ ]++;break; case'@@ J@@ ':c[@@ 9@@ ]++;break; case'@@ K@@ ':c[@@ 10@@ ]++;break; case'@@ L@@ ':c[@@ 11@@ ]++;break; case'@@ M@@ ':c[@@ 12@@ ]++;break; case'@@ N@@ ':c[@@ 13@@ ]++;break; case'@@ O@@ ':c[@@ 14@@ ]++;break; case'@@ P@@ ':c[@@ 15@@ ]++;break; case'@@ Q@@ ':c[@@ 16@@ ]++;break; case'@@ R@@ ':c[@@ 17@@ ]++;break; case'@@ S@@ ':c[@@ 18@@ ]++;break; case'@@ T@@ ':c[@@ 19@@ ]++;break; case'@@ U@@ ':c[@@ 20@@ ]++;break; case'@@ V@@ ':c[@@ 21@@ ]++;break; case'@@ W@@ ':c[@@ 22@@ ]++;break; case'@@ X@@ ':c[@@ 23@@ ]++;break; case'@@ Y@@ ':c[@@ 24@@ ]++;break; case'@@ Z@@ ':c[@@ 25@@ ]++;break; } } } for(i=0;i<26;i++) { if(c@@ [i]>max) max=@@ c[i]; else continue; } for(i=0;i<26;i++) { if(c@@ [i]!=@@ max) continue; else { prname@@ =i+65; printf("%c\n",@@ prname@@ ); printf("%d\n",max); for(j=0;j<m;j++) { for(k=0;k<@@ book[j].@@ len@@ ;k++) { if(@@ book[j].@@ writer@@ [k]@@ !=@@ prname@@ ) continue; else { printf("%d\n",@@ book[j].@@ num); break; } } } break; } } return0; }  
c -1
h -1
main() { intn,a[@@ 20000],b[@@ 20000],@@ i,j; scanf("%d",&n); for(i=0;i<n;i++) scanf("%d",&a[i]); for(i=0;i<n;i++) b[i]=0; printf("%d",a[0]); for(i=1;i<n;i++) for(j=0;j<i;j++) if(a[i]==a[j]) { b[i]@@ ++; break; } for(i=1;i<n;i++) if(b[i]@@ ==0) printf("%d",a[i]); getchar(); getchar(); getchar(); getchar(); }  
c -1
h -1
0

intf@@ (intn,int@@ m); intmain() { intn,@@ num,@@ i; cin>>n; for(i=0;i<n;i++) { cin>>num; cout<<@@ f(@@ num,@@ 2)<<endl; } return0; } intf@@ (intn,int@@ m) { inti,@@ count=0; if(n==1) return1; for(i=m@@ ;i<=n;i++) { if(n%i==0) count+=@@ f(@@ n@@ /i,i); } returncount; }  
c -1
h -1
intmain(){ double@@ bl@@ ; double@@ xg@@ ; inti,@@ l,@@ e,@@ k,@@ c; chara[501],b[501]; scanf("%lf%s%s",&@@ bl@@ ,&@@ a,&b); l@@ =strlen(a); k@@ =strlen(b); c=0; e=0; for(i=0;i<l;i++){ if((a[i]!='@@ A')&&(@@ a[i]!='@@ T')&&(@@ a[i]!='@@ C')&&(@@ a[i]!='@@ G')){ c=1; } } for(i=0;i<k;i++){ if((@@ b[i]!='@@ A')&&(@@ b[i]!='@@ T')&&(@@ b[i]!='@@ C')&&(@@ b[i]!='@@ G')){ c=1; } } if(l@@ ==@@ k@@ &&@@ c@@ ==0){ for(i=0;i<l;i++){ if(a[i]==b[i]){ e++; } } xg@@ =1.0*@@ e@@ /@@ l; if(@@ xg@@ >@@ bl@@ ){ printf("yes"); } else{ printf("no"); }} else{ printf("error"); } return0; }  
c -1
h -1
0

intmain() { inta[100][100@@ ]={@@ 2@@ }; inti,j,n,@@ n1@@ =-1,@@ n2@@ =-1,@@ n3@@ ,@@ n4@@ ; scanf("%d",&n); for(i=0;i<n;i++) { for(j=0;j<n;j++) { scanf("%d",&a[i][j]); } } for(i=0;i<n;i++) { for(j=0;j<n;j++) { if(a[i][j]==0) { n3@@ =i; n4@@ =j; if(@@ n1@@ >=0@@ ||@@ n2@@ >=0) continue; else { n1@@ =i; n2@@ =j; } } } } printf("%d",(@@ n3@@ -@@ n1@@ -1)*(@@ n4@@ -@@ n2@@ -1)); return0; }  
c -1
h -1
voidmain() { inti,@@ s,@@ t,@@ n,@@ p,@@ x,@@ z; x@@ =0;@@ z=0; scanf("%d",&n); p=@@ n*@@ n;@@ s=@@ 255@@ ; for(i=1;i<=@@ p@@ ;i++) {t=@@ s; scanf("%d",&s@@ );@@ if(s@@ ==0&&@@ t@@ ==0)@@ x@@ +=@@ 1@@ ;@@ if(s@@ ==0)@@ z@@ +=1; } z@@ =(@@ z@@ -x@@ -2@@ )@@ /2@@ ;@@ x=x@@ /2@@ -1; x=x@@ *@@ z; printf("%d\n",x); }  
c -1
h -1
1


intnum; main() { void@@ fenjie@@ (intx,int@@ qi@@ ); intn,k,@@ a; scanf("%d",&n); for(k=1;k<=n;k++) { num=0; scanf("%d",&a); fenjie@@ (a,@@ 2); printf("%d\n",num); } } void@@ fenjie@@ (intx,int@@ qi@@ ) { if(x@@ ==1)@@ num++; else { for(inti=@@ qi@@ ;i<=@@ x;i++) { if(x@@ %i==0)@@ fenjie@@ (x/i,i); } } }  
c -1
h -1
intmain() { inti; long@@ int@@ year@@ [5],@@ month@@ [5],@@ day@@ [5],@@ t@@ [5@@ ]; long@@ intc[@@ 12@@ ]={0,31,@@ 60@@ ,@@ 91@@ ,@@ 121@@ ,@@ 152@@ ,@@ 182@@ ,@@ 213@@ ,@@ 244@@ ,@@ 274@@ ,@@ 305@@ ,@@ 335@@ },@@ b[@@ 12@@ ]={0,31,@@ 59@@ ,@@ 90@@ ,@@ 120@@ ,@@ 151@@ ,@@ 181@@ ,@@ 212@@ ,@@ 243@@ ,@@ 273@@ ,@@ 304@@ ,@@ 334@@ }; for(i=0;i<=@@ 4;i++) { scanf("%ld@@ %ld@@ %ld@@ ",&@@ year@@ [i],&@@ month@@ [i],&@@ day@@ [i]); if(@@ year[i]@@ %4==0&&@@ year[i]@@ %100!=0@@ ||@@ year[i]@@ %@@ 400==0)@@ t@@ [i]=@@ c[@@ month@@ [i]@@ -1]@@ +day@@ [i]; else@@ t@@ [i]=@@ b[@@ month@@ [i]@@ -1]@@ +day@@ [i]; } for(i=0;i<=@@ 4@@ ;i++)@@ printf("%ld@@ \n",@@ t@@ [i]); return0; }  
c -1
h -1
0

intmain(intargc,char*argv[]) { ints[@@ 26@@ ]={0@@ ,@@ 0,0,0,0,0,0,0,0,@@ 0,0,0,0,0,0,0,0,@@ 0,0,0,0,0,0,0,0,@@ 0@@ }; structbook{ inta; charname@@ [27]; }; structbook@@ list@@ [999]; charc; intn,i,j,@@ b,@@ maxnum@@ =0,@@ max; scanf("%d",&n); for(i=0;i<n;i++){ scanf("%d%s",&@@ list@@ [i].@@ a,@@ list@@ [i].@@ name); for(j=0;@@ list@@ [i].name@@ [j]@@ !='\0';j++){ c=@@ list@@ [i].name@@ [j]; b=@@ c@@ -'A'; s[@@ b@@ ]++; } } for(i=0;i<26;i++){ if(s@@ [i]>@@ maxnum@@ ){ maxnum@@ =@@ s[i]; max=i; } } printf("%c\n%d\n",@@ 'A'+@@ max,@@ maxnum@@ ); for(i=0;i<n;i++){ for(j=0;@@ list@@ [i].name@@ [j]@@ !='\0';j++){ if(@@ list@@ [i].name@@ [j]@@ -'@@ A@@ '==@@ max@@ ){ printf("%d\n",@@ list@@ [i].@@ a); } } } return0; }  
c -1
h -1
intmain() { intn,i,@@ t,@@ a[@@ 20000@@ ],b[100],c[@@ 20000]; cin>>n; for(i=0;i<100;i++) b[i]=1; for(i=0;i<n;i++) cin>>a[i]; t=0; for(i=0;i<n;i++) if(b[@@ a[i]@@ ]@@ ==1) { c[@@ t@@ ]=a[i]; t++; b[@@ a[i]@@ ]=0; } for(i=0;i<@@ t@@ -1;i++) cout<<@@ c[i]@@ <<""; cout<<c[@@ t@@ -1]@@ <<endl; return0; }  
c -1
h -1
0

intmain() { inty,m,d,@@ x=0,@@ i; scanf("%d%d%d",&y,&m,&d); if(y%@@ 4==0&&y%100!=0@@ ||@@ y%400==0) { for(i=1;i<m;i++) { if(i==1||i==3||i==5||i==7||i==8||i==10@@ ||i==@@ 12) x=x+@@ 31; elseif(i==@@ 4||i==6||i==9||i==11) x=x+@@ 30; else x=x+@@ 29; } x=x@@ +d; } else { for(i=1;i<m;i++) { if(i==1||i==3||i==5||i==7||i==8||i==10@@ ||i==@@ 12) x=x+@@ 31; elseif(i==@@ 4||i==6||i==9||i==11) x=x+@@ 30; else x=x+@@ 28; } x=x@@ +d; } printf("%d\n",x); return0; }  
c -1
h -1
struct@@ Stu@@ { int@@ stuID@@ ; int@@ mark@@ ; }stu[@@ 3@@ ]={0}; int@@ compare@@ (constvoid*@@ p1,@@ constvoid*@@ p2@@ ) { struct@@ Stu@@ *@@ a; struct@@ Stu@@ *@@ b; a@@ =(struct@@ Stu@@ *)@@ p1; b@@ =(struct@@ Stu@@ *)@@ p2; if(a@@ ->@@ mark@@ >b@@ ->@@ mark@@ )@@ return-1; if(a@@ ->@@ mark@@ <b@@ ->@@ mark@@ )@@ return1; if(a@@ ->@@ mark@@ ==@@ b@@ ->@@ mark@@ )return0; } voidmain(){ intn,i; int@@ ID,@@ chi@@ ,@@ math; scanf("%d",&n); for(i=1;i<=n;i++) { scanf("%d%d%d",&@@ ID,&@@ chi@@ ,&@@ math); if(@@ chi@@ +@@ math@@ >@@ stu[2@@ ].@@ mark@@ ){ stu[2@@ ].@@ mark@@ =@@ chi@@ +@@ math; stu[2@@ ].@@ stuID@@ =@@ ID; } qsort@@ (stu@@ ,@@ 3@@ ,@@ sizeof(struct@@ Stu@@ ),@@ compare@@ ); } for(i=0;i<3;i++) printf("%d%d\n",stu[i].@@ stuID@@ ,@@ stu[i].@@ mark@@ ); }  
c -1
h -1
0

intmain() { inta[100][100]; intm,n,@@ i,j,k; scanf("%d%d",&@@ m,@@ &@@ n); for(i=0;i<m;i++){ for(j=0;j<n;j++){ scanf("%d",&a[i][j]); } } for(k=0;k<n;k++){ for(i=0,j@@ =k@@ ;i<@@ m@@ &&j>=0@@ ;i++,j@@ --){ printf("%d\n",a[i][j]); } } for(k=1;k<@@ m@@ ;k++){ for(i=@@ k,@@ j=@@ n-1@@ ;i<@@ m@@ &&j>=0@@ ;i++,j@@ --){ printf("%d\n",a[i][j]); } } return0; } int@@ main_e4_6_for@@ () { inta[100][100]; intm,n,@@ i,j,k; scanf("%d%d",&@@ m,@@ &@@ n); for(i=0;i<m;i++){ for(j=0;j<n;j++){ scanf("%d",&a[i][j]); } } for(k=0;k<@@ (@@ m+@@ n-1)@@ ;k++){ for(i=@@ e46max@@ (@@ 0,@@ k-@@ n@@ +1)@@ ,j=@@ e46min@@ (@@ k,@@ n-1)@@ ;i<@@ m@@ &&j>=0@@ ;i++,j@@ --){ printf("%d\n",a[i][j]); } } return0; }  
c -1
h -1
intmain() { doublen; scanf("%lf",&n); chara[@@ 1000],b[1000]; inti,j,@@ k=0,@@ flag=0; for(j=0;@@ 1@@ ;j++) { scanf("%@@ c@@ ",&@@ a[j]); if(a[j]==@@ '\n@@ '&&@@ j@@ !=0) {@@ j=j-1; break;} } for(i=1;@@ 1@@ ;i++) { scanf("%@@ c@@ ",&@@ b[i]); if(b[i]==@@ '\n@@ ') {@@ i@@ =i-1; break;} } if(i!=@@ j) flag=1; else { for(i=1;i<=@@ j@@ ;i++) { if((a[i]!='@@ A'&&a[i]!='T'&&a[i]!='C'&&a[i]!='G')||(b[i]!='A'&&b[i]!='T'&&b[i]!='C'&&b[i]!='@@ G')) { flag=1; break; } else@@ if(a[i]==b[i]) { k=k+1; } } } if(flag==1) printf("error"); else{@@ if(1.0*@@ k@@ /j@@ >n) printf("yes"); else@@ printf("no");} return0; }  
c -1
h -1
0

main() { inti,j,k,@@ m,n; int@@ p=0; scanf("%d%d",&m,&n); inta[1000]; intb[@@ 1000][1000]; for(i=1;i<=m;i++) scanf("%d",&a[i]); for(i=1;i<=m;i++) for(j=i+1;j<=@@ m;j++) b[i]@@ [j]=@@ a[i]+a[j]; for(i=1;i<=m;i++) {@@ if(p@@ ==1) break; for(j=1;j<=m;j++) {@@ if(b[i]@@ [j]==@@ n) {@@ p@@ =1;break;} } } if(p@@ ==1) printf("yes"); else printf("no"); }  
c -1
h -1
intmain(){ intn,i,j,k; scanf("%d",&n); charid@@ [100][10]; int@@ old@@ [100]; for(i=0;i<n;i++){ scanf("%s",@@ id[i]); scanf("%d",&@@ old@@ [i]); } int@@ e; chars@@ [100][10]; for(j=1;j<@@ n;j++){ for(k=0;k<@@ n@@ -j@@ ;k++){ if(old@@ [k]@@ <@@ old@@ [k+1@@ ]@@ &&@@ old@@ [k+1@@ ]@@ >=60){ e=@@ old@@ [k+1]; old@@ [k+1]=@@ old@@ [k]; old@@ [k]=@@ e; strcpy(@@ s@@ [k],@@ id@@ [k+1@@ ]); strcpy(id@@ [k+1@@ ],@@ id@@ [k]); strcpy(id@@ [k],@@ s@@ [k]); } } } for(i=0;i<n;i++){ printf("%s\n",@@ id[i]); } return0; }  
c -1
h -1
0

intmain() {@@ inta[100][100@@ ];@@ inti,j,@@ q,@@ s=0; intm,n,@@ k; scanf("%d",&k); for(q=0;q@@ <k;@@ q++) {@@ s=0;@@ scanf("%d%d",&m,&n); for(i=0;i<m;i++) {@@ for(j=0;j<n;j++) {@@ scanf("%d",@@ *(a+i)@@ +j@@ );}} for(i=0;i<n;i++) s=s@@ +*(@@ *(a+@@ 0)@@ +i); for(i=1;i<m;i++) s=s@@ +*(@@ *(a+i)@@ +n-1); for(i=1;i<m;i++) s=s@@ +*(@@ *(a+i)@@ +@@ 0); for(i=1;i<n-1;i++) s=s@@ +*(@@ *(a@@ +m-1)@@ +i); printf("%d\n",s@@ );}}  
c -1
h -1
intm[@@ 1000][1000]; intmain() { intn,i,j=0,@@ p,@@ x=0; scanf("%d",&n); for(i=0;i<n;i++){ for(j=0;j<n;j++) { scanf("%d",&@@ m@@ [j]@@ [i]); } } for(i=0;i<n;i++) { p=0; j=0; while(m@@ [j]@@ [i]@@ !=0@@ &&j@@ <n) { j++; } j=j+1; while(m@@ [j]@@ [i]@@ !=0@@ &&j@@ <n) { p++; j++; } x=x+@@ p; } printf("%d\n",x); return0; }  
c -1
h -1
0

intmain(){ intx,y,@@ n,k,@@ i=0,@@ m=0; intsz[@@ 100000]; scanf("%d%d\n",&n,&@@ k); for(i=0;i<=@@ n-1;i++){ scanf("%d",&@@ sz[i]@@ );} for(i=0;i<=@@ n-2@@ ;i++){ for(x@@ =i;@@ x@@ <=@@ n-2@@ ;x@@ ++){ y=@@ sz[i]@@ +@@ sz[@@ x@@ +1]; if(y@@ ==k){ m@@ ++;} }} if(m@@ !=0){ printf("yes"); } elseif(m@@ ==0){ printf("no"); } return0; }  
c -1
h -1
intmain() { inti,@@ t=0,@@ s=0,@@ l1,l2@@ ; doublen,@@ m; chara[256],b[@@ 256]; scanf("%lf",&n); scanf("%s",&@@ a); scanf("%s",&@@ b); l1@@ =strlen(a); l2@@ =strlen(b); for(i=0;i<l1;i++) { if((a[i]!='@@ A'&&a[i]!='T'&&a[i]!='C'&&a[i]!='G')||(b[i]!='A'&&b[i]!='T'&&b[i]!='C'&&b[i]!='@@ G')) { s=s+1; } } if(s@@ !=0@@ ||@@ l1@@ !=l2@@ ) { printf("error"); } else { for(i=0;i<l1;i++) { if(a[i]==b[i]) { t=t+1; } } m@@ =(double)@@ t@@ /@@ l1; if(m@@ >n) { printf("yes"); } elseprintf("no"); } return0; }  
c -1
h -1
0

intmain(intargc,char*argv[]) { intn,k,i,@@ a[1000],@@ x@@ ,j,@@ z=0; scanf("%d%d",&n,&k); for(i=0;i<n;i++) scanf("%d",&a[i]); for(i=0;i<n;i++) { x=@@ k-@@ a[i]; for(j=0;j<n;j++) { if(j==@@ i)@@ continue; if(a[j]==@@ x)@@ z=1; } } if(z@@ ==1)@@ printf("yes"); elseprintf("no"); return0; }  
c -1
h -1
voidmain() { intr,@@ c,@@ a[100][100],@@ i,j,k; scanf("%d%d",&@@ r@@ ,&c); for(i=0;i<@@ r;i++) for(j=0;j<@@ c;j++) scanf("%d",&a[i][j]); for(k=0;k<=@@ c@@ -1;k++) { i@@ =0;j@@ =k; while(j@@ >=0&&i@@ <=@@ r@@ -1) { printf("%d\n",a[i][j]); i++; j--; } } for(k=1;k<=@@ r@@ -1;k++) { j=@@ c@@ -1@@ ;i@@ =k; while(j@@ >=0&&i@@ <=@@ r@@ -1) { printf("%d\n",a[i][j]); i++; j--; } } }  
c -1
h -1
0

intmain() { intn,k,i,@@ a[1000],@@ c=0,@@ s; scanf("%d",&n); scanf("%d",&k); for(i=0;i<n;i++) { scanf("%d",&a[i]); } for(i=@@ c@@ ;i<n;i++) { s=@@ a[c@@ ]+@@ a[i]; if(s@@ ==k) { printf("yes"); break; } if(i==@@ n-1) { c=c@@ +1; i=@@ c; } if(c==@@ n-1) { printf("no"); break; } } return0; }  
c -1
h -1
intmain() { inta[100@@ ][@@ 15@@ ],b[100@@ ]={0},@@ i,j,k,@@ s,@@ m=0,@@ x; for(i=0;;i++) { scanf("%d",&a[i]@@ [0]); if(a[i]@@ [0]@@ ==-1)break; else { for(j=1@@ ;@@ ;j++) {@@ b[m@@ ]++; scanf("%d",&a[i][j]); if(a[i][j]@@ ==0)break; else@@ continue;} m++; } } for(i=0;i<m;i++) {@@ x=0; for(j=0;j<@@ b[i]@@ ;j++) {@@ s=0; for(k=0;k<@@ b[i]@@ ;k++) {@@ if(a[i]@@ [k]@@ *2==@@ a[i]@@ [j]) s=s@@ +1;} x=x+@@ s@@ ;} printf("%d\n",x); } return0; }  
c -1
h -1
0

structbook { intnum; charname[26]; structbook*next; }; structbook*@@ creat@@ (intm) { structbook@@ *head,*p1,*p2; p1=(structbook@@ *)malloc(sizeof(structbook)); scanf("%d%s",&p1->num,p1->name); inti; for(i=1;i<m;i++) { if(i@@ ==1)head=p1; elsep2->next=p1; p2=p1; p1=(structbook@@ *)malloc(sizeof(structbook)); scanf("%d%s",&p1->num,p1->name); } p2->next@@ =p1;@@ p1->next=NULL; return(head); } main() { structbook@@ *head,*p; inti,j,@@ m,@@ k,@@ l,@@ max=0; scanf("%d",&m); head=creat@@ (m); int*@@ a; a=@@ (int*)malloc(@@ 26@@ *sizeof(int)); for(i=0;i<26;i++) *(a+i)@@ =0; p=head; for(i=0;i<m;i++) { k=strlen(@@ p->@@ name); for(j=0;j<k;j++) for(l=0;l<@@ 26@@ ;l++) if(*(@@ p->@@ name@@ +j)@@ ==@@ l@@ +65) (@@ *(a+@@ l@@ ))@@ ++; p=p->next; } for(i=0;i<26;i++) if(max@@ <*@@ (a@@ +i)@@ )@@ max@@ =*@@ (a@@ +i); for(i=0;i<26;i++) if(max@@ ==@@ *(a+i)@@ ){@@ printf("%c\n%d\n",@@ i@@ +65@@ ,@@ max@@ );break;} p=head; for(j=0;j<m;j++) { k=strlen(@@ p->@@ name); for(l=0;l<@@ k;@@ l++) if(*(@@ p->@@ name@@ +l@@ )==@@ i@@ +65) printf("%d\n",p->num); p=p->next; } }  
c -1
h -1
intmain() { inti,@@ year,@@ month,@@ day,@@ date@@ =0; scanf("%d%d%d",&year,&month,&day); for(i=1;i<month;i++) { if(i==@@ 4||i==6||i==9||i==11) date@@ =@@ date+@@ 30; else { if(i==@@ 2) { if(@@ year%100!=0@@ &&@@ year%@@ 4@@ ==0||@@ year%400==0) date@@ =@@ date+@@ 29; else date@@ =@@ date+@@ 28; } else date@@ =@@ date@@ +31; } } date@@ =@@ date@@ +day; printf("%d\n",@@ date@@ ); return0; }  
c -1
h -1
0

intf(inta,int@@ b); intmain() { intn,a,@@ i; cin>>n; for(i=0;i<n;i++) { cin>>a; cout<<@@ f(a,@@ 2)<<endl; } return0; } intf@@ (intx,inty) { intj,@@ k,@@ t=0,@@ m=0; for(j=2@@ ;j<@@ x;j++) if(x@@ %j@@ ==0)@@ t++; if(t@@ ==0)@@ return1; else { for(k=@@ y@@ ;k<=@@ (int)sqrt(@@ (double)@@ x)@@ ;k++) if(x%@@ k@@ ==0)@@ m=m+@@ f(@@ x/@@ k,@@ k); return(@@ m@@ +1); } }  
c -1
h -1
intmain() { inti,k,@@ n,@@ j,@@ a,b,@@ s@@ [100]={0},@@ f@@ [100][100]; int*p=@@ NULL@@ ; cin>>n; for(i=0;i<n;i++) { cin>>a>>@@ b; for(j=0;j<a@@ ;j++) for(k=0;k<@@ b@@ ;k++) cin>>@@ f@@ [j]@@ [k]; for(j=0;j<a@@ ;j++) { p=@@ f@@ [j]; s[i]@@ +=@@ *p; p=@@ f@@ [j]+@@ b@@ -1; s[i]@@ +=@@ *p; } for(k=1;k<@@ b@@ -1;k++) { p=@@ f@@ [0]+@@ k; s[i]@@ +=@@ *p; p=@@ f@@ [a@@ -1]@@ +@@ k; s[i]@@ +=@@ *p; } } for(i=0;i<n;i++) cout<<@@ s[i]@@ <<endl; return0; }  
c -1
h -1
0

intmain(){ intb,@@ c,d,@@ i; doublea,@@ e,@@ f; char@@ n[@@ 501],@@ m[@@ 501]; scanf("%lf",&a); scanf("%s",@@ n); scanf("%s",@@ m); b=strlen(@@ n); c=strlen(@@ m); d=0; if(b@@ !=@@ c){ d++; } for(i=0;i<b;i++){ if((@@ n@@ [i]!='A')&&(@@ n@@ [i]!='T')&&(@@ n@@ [i]!='C')&&(@@ n@@ [i]!='G')||(@@ m@@ [i]!='A')&&(@@ m@@ [i]!='T')&&(@@ m@@ [i]!='C')&&(@@ m@@ [i]!='G')){ d++; } } if(d@@ !=0){ printf("error"); }else{ e=0; for(i=0;i<b;i++){ if(n@@ [i]==@@ m@@ [i]){ e++; } } f=@@ e@@ /@@ b; if(f@@ >@@ a){ printf("yes"); }else{ printf("no"); } } return0; }  
c -1
h -1
intmain() { intk; inta[100@@ ]={0}; intf@@ [100]={0}; a[0]=@@ 100000@@ ; cin>>k; inti,j; intmax=0; for(i=1;i<=k;i++) { cin>>a[i]; for(j=0;j<i;j++) { if(a[j]>=@@ a[i]) { if(f@@ [i]<@@ f@@ [j]@@ +1) { f[i]=@@ f@@ [j]+1; } } } if(max<@@ f@@ [i]) { max=@@ f[i]; } } cout<<max<<endl; }  
c -1
h -1
0

intmain(){ inti,n,@@ k,@@ m,@@ b@@ =1,@@ a; int@@ sl@@ [@@ LEN@@ ]; scanf("%d",&n); scanf("%d",&m); for(i=0;i<n;i++){ scanf("%d",&@@ sl@@ [i]); } if(a@@ =@@ b){ for(k=0;k<n;k++){ for(i=k@@ +1;i<@@ n;i++){ if(a@@ =@@ b){ if((@@ sl@@ [i]+@@ sl@@ [k]@@ )==@@ m){ printf("yes\n"); b=0; } } } } } if(b@@ !=0){ for(k=0;k<n;k++){ for(i=k@@ +1;i<@@ n;i++){ if((@@ sl@@ [i]+@@ sl@@ [k]@@ )==@@ m){ b=0; } } } printf("no\n"); } return0; }  
c -1
h -1
inta[100@@ ]={0},@@ b[100@@ ]={0}; inti=0,@@ n,@@ m; void@@ block_in@@ () { scanf("%d%d",&n,&m); for(i=0;i<n;i++)@@ scanf("%d",&a[i]); for(i=0;i<m;i++)@@ scanf("%d",&b[i]); } void@@ arr@@ (intx,int@@ c[@@ ]) { inti=0,j=0,@@ mid@@ ; for(i=0;i<x;i++) { for(j=0;j<@@ x@@ -i;j++) { if(c@@ [j]>@@ c@@ [j+1]) { mid@@ =@@ c[j]; c[j]=@@ c@@ [j+1]; c@@ [j+1]=@@ mid@@ ; } } } for(i=1;i<=@@ x;i++) { printf("%d",c[i]); if(i<@@ x)@@ printf(""); } } voidmain() { block_in@@ (); arr@@ (n,@@ a); printf(""); arr@@ (m,@@ b); }  
c -1
h -1
0

intmain() { intx[@@ 10@@ ][10]; inta; inti,j; int@@ a1,a2,@@ b1,@@ b2@@ ; ints; a1@@ =@@ a2@@ =@@ b1@@ =@@ b2@@ =0; scanf("%d",&a); for(i=1;i<=@@ a;i++) { for(j=1;j<=@@ a@@ ;j++) { scanf("%d",&@@ x@@ [i][j]); } } for(i=1;i<=@@ a;i++) { for(j=1;j<=@@ a@@ ;j++) { if(x@@ [i][j]==0) { a1@@ =i; b1@@ =j; } } } for(i=a@@ ;i>=1;i--) { for(j=@@ a@@ ;j@@ >=1@@ ;j--) { if(x@@ [i][j]==0) { a2@@ =i; b2@@ =j; } } } int@@ c,d; c=@@ a1@@ -@@ a2@@ -1; d=@@ b1@@ -@@ b2@@ -1; s=@@ c@@ *@@ d; printf("%d",s); return0; }  
c -1
h -1
intmain() { intn,@@ h,@@ z; inta[100][100]; intx; int@@ a1,@@ b1,@@ a2,@@ b2@@ ; int@@ br@@ =1; ints; scanf("%d",&n); for(z@@ =1;@@ z@@ <=n;@@ z++) { for(h@@ =1;@@ h@@ <=n;@@ h++) { scanf("%d",&@@ a[h@@ ][@@ z@@ ]); } } for(z@@ =1;@@ z@@ <=n;@@ z++) { for(h@@ =1;@@ h@@ <=n;@@ h++) { if(a[@@ h@@ ][@@ z@@ ]==0) { a1@@ =@@ h; b1@@ =@@ z; br@@ =0; break; } } if(@@ br@@ ==0)break; } for(z@@ =1;@@ z@@ <=n;@@ z++) { for(h@@ =1;@@ h@@ <=n;@@ h++) { if(a[@@ h@@ ][@@ z@@ ]@@ ==0&&@@ a[h@@ -1@@ ][@@ z@@ ]@@ ==0&&@@ a[h@@ ][@@ z@@ -1]@@ ==0) { a2@@ =@@ h; b2@@ =@@ z; } } } s=(@@ a2-a1@@ -1)*(@@ b2-b1@@ -1); printf("%d\n",s); return0; }  
c -1
h -1
1


intmain() { double@@ d; scanf("%lf",&@@ d); chars@@ [100]; char@@ u@@ [100]; scanf("%s%s",@@ s,@@ u@@ ); intf@@ =0; int@@ t=0,@@ i,@@ r=0; for(i=0;s[i]@@ !='\0';i++) { t++; } for(i=0;@@ u@@ [i]!='\0';i++) { r++; } if(r@@ !=@@ t) { printf("error\n"); return0; } else {@@ for(i=0;s[i]@@ !='\0';i++) { if(s@@ [i]!='A'&&@@ s@@ [i]!='T'&&@@ s@@ [i]!='C'&&@@ s@@ [i]!='G') { printf("error\n"); return0; } elseif(@@ u@@ [i]!='A'&&@@ u@@ [i]!='T'&&@@ u@@ [i]!='C'&&@@ u@@ [i]!='G') { printf("error\n"); return0; } elseif(@@ s@@ [i]==@@ u@@ [i]) { f@@ ++; } } if(f@@ *1.0/@@ t@@ >=@@ d) { printf("yes\n"); return0; } else { printf("no\n"); return0; } } return0; }  
c -1
h -1
structStudent {intnum; int@@ ch; intmath; intsum; }; intmain() { structStudent@@ stu[@@ 4@@ ],@@ temp; inti,j,k,@@ n; scanf("%d",&n); for(i=0;i<3;i++) { scanf("%d%d%d",&stu[i].num,&stu[i].@@ ch@@ ,&stu[i].math); stu[i].sum=stu[i].@@ ch@@ +stu[i].@@ math; } for(i=0;i<2@@ ;i++) { k=i; for(j=i+1;j<@@ 3;j++) if(stu[j].@@ sum>@@ stu[i].@@ sum) {@@ k=j; temp=@@ stu@@ [k]; stu@@ [j]=@@ stu[i]; stu[i]=@@ temp;} } for(i=@@ 3@@ ;i<n;i++) { scanf("%d%d%d",&@@ stu[3].@@ num,&@@ stu[3].@@ ch@@ ,&@@ stu[3].@@ math); stu[3].@@ sum=@@ stu[3].@@ ch@@ +@@ stu[3].@@ math; if(@@ stu[3].@@ sum>@@ stu[0].@@ sum) { stu[2@@ ]=@@ stu@@ [1]; stu@@ [1]=@@ stu[@@ 0]; stu[@@ 0]=@@ stu[@@ 3@@ ]; } elseif(@@ stu[3].@@ sum>@@ stu[1].@@ sum) { stu[2@@ ]=@@ stu@@ [1]; stu@@ [1]=@@ stu[@@ 3@@ ]; } elseif(@@ stu[3].@@ sum>@@ stu[2@@ ].@@ sum) stu[2@@ ]=@@ stu[@@ 3@@ ]; } for(i=0;i<3;i++) printf("%d%d\n",stu[i].@@ num,@@ stu[i].@@ sum); return0; }  
c -1
h -1
0

intmain() { inta,b,@@ i,j,@@ q; cin>>a>>@@ b; intm@@ [a@@ +1@@ ][b@@ +1]; for(i=1;i<=@@ a;i++) for(j=1;j<=@@ b;j++) cin>>@@ m@@ [i][j]; for(q=@@ 2@@ ;q@@ <=@@ a+@@ b@@ ;q++) for(i=1@@ ,j=@@ q@@ -i@@ ;j>0@@ ;i++,j@@ =@@ q@@ -i@@ ) {@@ if(j@@ <=@@ b@@ &&i@@ <=@@ a) cout<<@@ m@@ [i][j]<<endl; } return0; }  
c -1
h -1
intmain() { register@@ inti,j,@@ flag; intn; flag=0; char@@ str1@@ [@@ 20000]; scanf("%d",&n); for(i=1;i<=n;i++) { scanf("%d",&@@ str1@@ [i@@ -1]); if(i>=@@ 2) { flag=0; for(j=1;j<=@@ i-1;j++) { if(@@ str1@@ [i-1@@ ]==@@ str1@@ [j-1]) { flag=1; break; } } if(flag==0) { printf("%d",@@ str1@@ [i@@ -1]); } } else { printf("%d",@@ str1@@ [0]); } } return0; }  
c -1
h -1
0

intmain() { intk; cin>>k; inti,j,@@ l,@@ lin@@ ,@@ col,@@ sum=0; intnum[@@ 101][101]; for(l=1;l@@ <=k;@@ l++) { cin>>@@ lin@@ >>col; for(i=1;i<=@@ lin@@ ;i++) { for(j=1;j<=col;j++) cin>>@@ num[i]@@ [j]; } if(@@ lin@@ >=@@ 2@@ &&@@ col@@ >=@@ 2) { for(i=2;i<=@@ lin@@ -1;i++) sum=sum+@@ num[i]@@ [1]@@ +@@ num[i]@@ [@@ col@@ ]; for(j=1;j<=col;j++) sum=sum+@@ num@@ [1]@@ [j]+@@ num[@@ lin@@ ]@@ [j]; } if(@@ lin@@ ==1&&@@ col@@ >=@@ 2) { for(j=1;j<=col;j++) sum=sum+@@ num@@ [1]@@ [j]; } if(col@@ ==1&&@@ lin@@ >=@@ 2) { for(i=1;i<=@@ lin@@ ;i++) sum=sum+@@ num[i]@@ [1]; } if(col@@ ==1&&@@ lin@@ ==1) sum=sum+@@ num@@ [1@@ ][1@@ ]; cout<<sum<<endl; sum=0; } return0; }  
c -1
h -1
intmain() { char@@ n,@@ a[@@ 1000][1000],@@ p=0,@@ q,@@ r=0,@@ i,j,@@ s; scanf("%d",&n); for(i=0;i<n;i++) { q=0; for(j=0;j<n;j++) { scanf("%d",&a[i][j]); if(a[i][j]==0&&@@ a[i][j-1]@@ ==0) p=p@@ +1; if(a[i][j]==0) q=q@@ +1; } if(q@@ >=@@ 1) r=r@@ +1; } s=(@@ p@@ /2@@ -1)*(@@ r@@ -2); printf("%d",s); return0; }  
c -1
h -1
0

ints@@ (intn,int@@ m){ if(n@@ ==1)@@ return1; int@@ an@@ =0; for(inti=@@ m@@ ;i@@ >1@@ ;i--){ if(n@@ %i==0)@@ an@@ +=@@ s@@ (n@@ /i,@@ min@@ (i,@@ n@@ /i@@ )); } return@@ an@@ ; } intmain(){ intN@@ ; cin>>@@ N; intx; for(@@ N@@ ;@@ N@@ >0@@ ;@@ N@@ --){ cin>>x; cout<<s@@ (x,@@ x@@ )<<endl; } return0; }  
c -1
h -1
unsigned@@ inth@@ [26],@@ n; int@@ go@@ (int@@ maxh@@ ,int@@ cp@@ ) { intx,y,@@ max; while(@@ h@@ [@@ cp@@ ]>@@ maxh@@ )@@ cp@@ =@@ cp@@ +1; if(h@@ [@@ cp@@ ]@@ ==0)@@ return0; x=@@ go@@ (@@ maxh@@ ,@@ cp@@ +1); maxh@@ =@@ h@@ [@@ cp@@ ]; y@@ =1@@ +@@ go@@ (@@ maxh@@ ,@@ cp@@ +1); max@@ =(@@ x@@ >@@ y)@@ ?@@ x@@ :@@ y; return@@ max; } intmain() { unsigned@@ inti,@@ c,@@ t; scanf("%d",&n); for(i=0;i<n;i++)@@ scanf("%d",&h[i]); h@@ [n@@ ]=0; t=@@ go@@ (@@ 65535@@ ,@@ 0); printf("%d",t); return0; }  
c -1
h -1
0

intmain() { struct@@ books { int@@ book@@ ; charwriter@@ [20]; }@@ bk@@ [1000]; intn,i,j,@@ m,@@ max,@@ k,@@ maxw@@ =0,@@ flag=0,@@ a[@@ 26]={0}; scanf("%d",&n); for(i=0;i<n;i++) { scanf("%d%s",&@@ bk[i].@@ book@@ ,@@ bk[i].@@ writer); } for(i=0;i<n;i++) { m=strlen(@@ bk[i].@@ writer); for(j=0;j<m;j++) { k=@@ bk[i].@@ writer@@ [j]; a[k@@ -65]++; } } max=@@ a[0]; for(i=1;i<26;i++) { if(a[i]>max) { max=a[i]; maxw@@ =i; } } printf("%c\n%d\n",@@ maxw@@ +65@@ ,max); for(i=0;i<n;i++) { m=strlen(@@ bk[i].@@ writer); for(j=0;j<m;j++) { if(@@ maxw@@ +65@@ ==@@ bk[i].@@ writer@@ [j]) printf("%d\n",@@ bk[i].@@ book@@ ); } } return0; }  
c -1
h -1
intmain() { intk,m,n,i,j,@@ a,@@ num[@@ 150@@ ][@@ 150@@ ],@@ sum; scanf("%d",&k); for(i=1;i<=k;i++) { scanf("%d%d\n",&@@ m,&n); sum=0; for(j=0;j<m;j++) { for(a=0;a@@ <n;@@ a++) { scanf("%d",&@@ num[j]@@ [a@@ ]); } } for(j=0;j<n;j++) { sum+=@@ num@@ [0]@@ [j]; if(m@@ !=1) { sum+=@@ num[m@@ -1][j]; } } for(j=1;j<@@ m-1;j++) { sum+=@@ (@@ num[j]@@ [0]); if(n@@ !=1) { sum+=@@ num[j]@@ [n-1]; } } printf("%d\n",sum); } return0; }  
c -1
h -1
0

int@@ count; void@@ fun@@ (inti,int@@ j) { intk; for(k=i@@ ;k<=@@ sqrt(@@ j)@@ ;k++){ if(j@@ %@@ k@@ ==0){ count++; fun@@ (@@ k,@@ j@@ /@@ k); } } } intmain() { intN@@ ,@@ turn@@ ,@@ c; scanf("%d",&@@ turn@@ ); for(c@@ =1;@@ c@@ <=@@ turn@@ ;c@@ ++) { intn,i; scanf("%d",&n); for(i=2;i<=@@ sqrt(n@@ );i++){ if(n@@ %i==0){ count++; fun@@ (i,@@ n@@ /i); } } printf("%d\n",@@ count@@ +1); count=0; } }  
c -1
h -1
inta[@@ 400@@ ],b[@@ 200],@@ n,@@ m; void@@ run1@@ () { inti; scanf("%d%d",&n,&m); for(i=1;i<=n;i++) scanf("%d",&a[i]); for(i=1;i<=m;i++) scanf("%d",&b[i]); } voidsort@@ (inta[],intn) { inti,j,@@ x; for(i=1;i<n;i++) for(j=i+1;j<=n;j++) if(a[i]>a[j]) { x=@@ a[i];a[i]=@@ a[j];a[j]=@@ x; } } void@@ run2@@ () { sort@@ (a,@@ n); sort@@ (b,@@ m); } void@@ run3@@ () { inti; for(i=1;i<=m;i++) a[i@@ +@@ n@@ ]=b[i]; } void@@ run4@@ () { inti; for(i=1;i<@@ n+m;i++) printf("%d",a[i]); printf("%d",a[@@ n+@@ m@@ ]); } intmain() { run1@@ (); run2@@ (); run3@@ (); run4@@ (); }  
c -1
h -1
0

main() { introw,col,@@ time@@ =0,@@ n,@@ i,j; int@@ array[100][100]; scanf("%d%d",&row,&col); for(i=0;i<row;i++) for(j=0;j<col;j++) scanf("%d",&array@@ [i][j]); for(n=0;n@@ <row@@ +col@@ ;n++) { if(col@@ <row) { if(n@@ <col) { for(i=0;i<=@@ n;i++) printf("%d\n",array@@ [i]@@ [n@@ -i]); } elseif(n@@ <row) { for(i=@@ col-1@@ ;i>=0;i--) printf("%d\n",array@@ [n@@ -i@@ ][i]); } else { for(i=@@ col-1@@ ;i@@ >@@ n-@@ row@@ ;i--) printf("%d\n",array@@ [n@@ -i@@ ][i]); } } elseif(@@ row@@ <col) { if(n@@ <row) { for(i=0;i<=@@ n;i++) printf("%d\n",array@@ [i]@@ [n@@ -i]); } elseif(n@@ <col) { for(i=0;i<=@@ row-1;i++) printf("%d\n",array@@ [i]@@ [n@@ -i]); } else { for(i=@@ col-1@@ ;i@@ >@@ n-@@ row@@ ;i--) printf("%d\n",array@@ [n@@ -i@@ ][i]); } } elseif(@@ row@@ ==@@ col) { if(n@@ <row) { for(i=0;i<=@@ n;i++) printf("%d\n",array@@ [i]@@ [n@@ -i]); } else { for(i=@@ row-1@@ ;i@@ >@@ n-@@ col@@ ;i--) printf("%d\n",array@@ [n@@ -i@@ ][i]); } } } }  
c -1
h -1
intmain() { float@@ a[@@ 16]; inti,j,n,@@ t; for(i=0;i<100;i++) { n=0; t=0; scanf("%f",&@@ a[0]); if(a[0]==-1)break; n=n+1; for(j=1;j<@@ 16@@ ;j++) { scanf("%f",&@@ a[j]); if(a[j]@@ ==0)break; n=n+1; } for(i=0;i<n-1;i++) for(j=i+1;j<n;j++) { if(a[j]==@@ a[i]@@ *2@@ ||@@ a[j]@@ ==0@@ .@@ 5@@ *@@ a[i]) t++; } printf("%d\n",t); } return0; }  
c -1
h -1
0

intmain() { inti,j,k,l,@@ m,n,@@ g@@ [26]={0},@@ s[@@ 26@@ ][@@ 1000]={0}; chara[@@ 50]; scanf("%d",&n); for(m=0;m@@ <n;m++) {@@ for(i=0;i<@@ 50@@ ;i++) a[i]=0; scanf("%d%s",&@@ l,@@ a); for(i=0;i<26;i++) for(j=0;j<26;j++) if(a[i]@@ =='@@ A'+@@ j) {@@ s[j]@@ [@@ g@@ [j]@@ ]=@@ l,@@ g@@ [j]@@ ++; break;}} m=0; for(i=0;i<26;i++) if(g@@ [i]>@@ m)@@ m=@@ g@@ [i],@@ k=i; printf("%c\n%d\n",@@ 'A'+@@ k,@@ m); for(i=0;i<m;i++) printf("%d\n",@@ s[k]@@ [i]); }  
c -1
h -1
intmain() { intk,i,j,@@ n,@@ m; scanf("%d",&k); charc[@@ 20000]; for(i=1;i<=k;i++) { scanf("%d",&@@ c[i]); } printf("%d",c[@@ 1@@ ]); for(n=@@ 2@@ ;n@@ <=k;@@ n++) { for(j=1;j<=@@ n-1;j++) { if(@@ c[@@ n@@ ]==@@ c@@ [j]) break; } if(j==@@ n@@ &&@@ c[@@ n@@ ]!=@@ c[@@ n-1@@ ]) {@@ printf(""); printf("%d",c[@@ n@@ ]); } } return0; }  
c -1
h -1
0

intmain() { inta[@@ 20000],@@ n,@@ i,j; cin>>n; for(i=0;i<n;i++) cin>>a[i]; for(i=0;i<n;i++) { for(j=n-1;j>i;j--) { if(a[j]==a[i]) a[j]@@ =-1; } } cout<<a[0]; for(i=1;i<n;i++) if(a[i]@@ !=-1) cout<<""<<a[i]; return0; }  
c -1
h -1
structstudent {intnum; int@@ score1@@ ; int@@ score2; }stu[100000]; voidmain() { intn,i,@@ sum[@@ 100000],@@ max=0,@@ j,k,@@ l; scanf("%d",&n); for(i=0;i<n;i++) {@@ scanf("%d%d%d",&stu[i].num,&stu[i].@@ score1@@ ,&stu[i].@@ score2); sum[i]=@@ stu[i].@@ score1@@ +stu[i].@@ score2@@ ;} for(i=0;i<n;i++) if(sum@@ [i]@@ >max){max=@@ sum[i]@@ ;j@@ =i;} max=0; for(i=0;i<n;i++) if(sum@@ [i]@@ >max@@ &&i!=@@ j@@ ){max=@@ sum[i]@@ ;k@@ =i;} max=0; for(i=0;i<n;i++) if(sum@@ [i]@@ >max@@ &&i!=@@ j@@ &&i!=@@ k@@ ){max=@@ sum@@ [i];@@ l@@ =i;} printf("%d%d\n%d%d\n%d%d\n",@@ stu[j].@@ num,@@ sum@@ [j],@@ stu[k].@@ num,@@ sum@@ [k],@@ stu[@@ l@@ ].num,@@ sum[@@ l@@ ]); }  
c -1
h -1
0

int@@ factor@@ (int@@ num,int@@ minA1@@ ) { intcount=0; int@@ sqrtNum@@ ; inti; if(num@@ <=@@ minA1@@ ) return0; sqrtNum@@ =@@ (int)sqrt(@@ (double)@@ num); for(i=@@ minA1@@ ;i<=@@ sqrtNum@@ ;i++) if(num@@ %i==0) { count++; count+=@@ factor@@ (@@ num@@ /i,i); } returncount; } intmain() { intn; intnum; cin>>n; while(n--) { cin>>num; cout<<@@ factor@@ (num,@@ 2)@@ +1<<endl; } return0; }  
c -1
h -1
intmain() { inti,@@ l@@ ,j@@ =0,@@ l1,l2,@@ e=0; chara[256],b[@@ 256],c[@@ 256],@@ d@@ [256]; scanf("%s",a); scanf("%s",b); scanf("%s",c); l@@ =strlen(a); l1@@ =strlen(b); l2=strlen(@@ c); for(i=0;a[i]@@ !='\0';i++){ if(e@@ ==0){ if(a[i]==@@ b[j]@@ ){ d@@ [j]=@@ a[i]; j++; }else{ if(j@@ !=0&&@@ e@@ !=1@@ ){ d@@ [j]@@ ='\0'; printf("%s",@@ d); } j=0; printf("%c",a[i]); } if(j==@@ l1@@ &&@@ e@@ ==0){ printf("%s",@@ c); i@@ =i@@ -@@ l1@@ +@@ l2@@ ; e=1; } }else{ printf("%c",a[i]); } } return0; }  
c -1
h -1
0

intmain() { inti,@@ a; int@@ b=0; doublen,@@ k; char@@ l1@@ [500]; char@@ l2@@ [500]; a=0; scanf("%lf",&n); scanf("%s",@@ l1@@ ); scanf("%s",@@ l2@@ ); for(i=0;i<strlen(@@ l1@@ );i++){ if(l1@@ [i]@@ <'@@ A'||@@ l1@@ [i]@@ >'@@ Z@@ '||@@ l2@@ [i]@@ <'@@ A'||@@ l2@@ [i]@@ >'@@ Z@@ '){ b=1; } } if(strlen(@@ l1@@ )!=strlen(@@ l2@@ )||@@ b@@ ==1){ printf("error"); }else{ for(i=0;i<strlen(@@ l1@@ );i++){ if(l1@@ [i]==@@ l2@@ [i]){ a++; } } k@@ =1.0*@@ a/@@ strlen(@@ l1@@ ); if(k@@ >n){ printf("yes"); }else{ printf("no"); } } return0; }  
c -1
h -1
intmain() { intyear,month,day,@@ i,j,@@ sum; inta[@@ 12@@ ]={0,31,@@ 29@@ ,31,30,31,30,31@@ ,31,30,31,30@@ }; intb[@@ 12@@ ]={0,31,@@ 28@@ ,31,30,31,30,31@@ ,31,30,31,30@@ }; for(j=0;j<@@ 5@@ ;j++) { sum=0; scanf("%d%d%d",&year,&month,&day); if(year%@@ 4==0) { if(year%@@ 100==0) { if(year%@@ 400==0) { for(i=0;i<@@ month;i++) sum=sum+@@ a[i]; sum=sum+day; } else { for(i=0;i<@@ month;i++) sum=sum+@@ b[i]; sum=sum+day; } } else { for(i=0;i<@@ month;i++) sum=sum+@@ a[i]; sum=sum+day; } } else { for(i=0;i<@@ month;i++) sum=sum+@@ b[i]; sum=sum+day; } printf("%d\n",sum); } return0; }  
c -1
h -1
0

intmain() { intn,a[@@ 20000],@@ t; cin>>n; for(inti=0;i<n;i++) cin>>a[i]; cout<<a[0]; for(inti=1;i<@@ n;i++) { t=0; for(intj=0;j<i;j++) { if(a[j]==@@ a[i]@@ &&j@@ !=@@ i) t@@ +=1; } if(t@@ >=@@ 1) continue; elseif(@@ t@@ ==0) cout<<""<<a[i]; } return0; }  
c -1
h -1
structstudent { intnum,@@ a,b; structstudent*next; }; intn; structstudent*@@ create@@ (void) { structstudent*head; structstudent*p1,*p2; inti; i=1; p1=p2=(structstudent*)malloc(LEN); scanf("%d%d%d",&p1->num,&p1->@@ a@@ ,&p1->@@ b); head=NULL; while(1) { if(i==1) head=p1; else p2->next=p1; p2=p1; if(i==@@ n) break; p1=(structstudent*)malloc(LEN); scanf("%d%d%d",&p1->num,&p1->@@ a@@ ,&p1->@@ b); i++; } p2->next=NULL; return(head); } voidmain() { structstudent*head,*@@ h@@ ,*@@ x; scanf("%d",&n); head=@@ create@@ (); h=@@ x=@@ head; int(*p)@@ [2@@ ],@@ m,@@ j,@@ s,@@ i; p=@@ (int@@ (@@ *)@@ [2@@ ])@@ calloc@@ (@@ 100000@@ ,@@ 2*@@ sizeof(int@@ )); for(i=0;i<n;i++) { p[i]@@ [1]=@@ h@@ ->@@ a+@@ h@@ ->@@ b; p[i]@@ [0]=@@ h@@ ->@@ num; h=@@ x@@ ->next; x=@@ h; } for(i=0;i<3;i++) for(j=0;j<n@@ -i-1;j++) if(p@@ [j]@@ [1]@@ >=@@ p@@ [j+1@@ ][1@@ ]) { m=@@ p@@ [j]@@ [1]; p@@ [j]@@ [1]=@@ p@@ [j+1@@ ][1@@ ]; p@@ [j+1@@ ][1@@ ]=@@ m; s=@@ p@@ [j]@@ [0]; p@@ [j]@@ [0]=@@ p@@ [j+1@@ ][0]; p@@ [j+1@@ ][@@ 0]=@@ s; } for(i=n-1;i@@ >@@ n-@@ 4@@ ;i--) printf("%d%d\n",@@ p[i]@@ [0],@@ p[i]@@ [1]); }  
c -1
h -1
0

intmain() { inti=0,j=0,@@ k=0,@@ s=0,@@ a,b,@@ c=0,@@ m=0; charstring@@ [257],@@ substring@@ [256],@@ replacement@@ [256]; gets(@@ string); gets(@@ substring); gets(@@ replacement); a=strlen(@@ string); b=strlen(@@ substring); for(i=0;i<a;i++){ k=0; if(string@@ [i]==@@ substring@@ [0]){ for(j=i;j<i+@@ b@@ ;j++){ if(string@@ [j]==@@ substring@@ [j-i@@ ])@@ k++; elsebreak; } } if(k==@@ b){ break; } m@@ =i+1; } for(i=0;i<a;i++){ if(i>=@@ m@@ &&i@@ <b@@ +m@@ ){ printf("%c",@@ replacement@@ [i-@@ m@@ ]); } else{ printf("%c",@@ string@@ [i]); } } return0; }  
c -1
h -1
int@@ cal@@ (int*p,int@@ N@@ ,int@@ M@@ ){ inti,@@ max,@@ sub@@ ; max=0; if(M@@ ==0){ return1; } for(i=@@ N@@ +1;i<=@@ N@@ +@@ M@@ ;i++){ if(@@ *(p+@@ N@@ )@@ >=@@ *(p+i)@@ ){ sub@@ =@@ cal@@ (p,@@ i,@@ N@@ +@@ M@@ -i@@ ); if(@@ sub@@ >=@@ max@@ ){ max=@@ sub@@ ; } } } return@@ max+1; } intmain() { intk,@@ i; scanf("%d\n",&@@ k); int@@ height@@ [26]; height@@ [0]=@@ 10000000@@ ; scanf("%d",&@@ height@@ [1]); for(i=1;i<=@@ k@@ -1;i++){ scanf("%d",&@@ height@@ [i+1]); } printf("%d",@@ cal@@ (@@ height@@ ,@@ 0,@@ k@@ +1)@@ -2); return0; }  
c -1
h -1
0

intmain() { intk,m,n,i,j,@@ a[100][100],@@ l,@@ b[100@@ ]; scanf("%d",&k); for(i=0;i<k;i++) {@@ b[i]=0; scanf("%d%d",&m,&n); for(j=0;j<m;j++) { for(l=0;l<n;l++) {scanf("%d",&@@ a[j]@@ [l]); if(j@@ ==0||j==@@ m-1) b[i]@@ +=@@ a[j]@@ [l]; elseif(@@ l@@ ==0||@@ l@@ ==@@ n-1) b[i]@@ +=@@ a[j]@@ [l]; } } } for(i=0;i<k;i++) {printf("%d\n",@@ b[i]@@ );} }  
c -1
h -1
intmain() { intnum@@ (intn,int@@ *p@@ ); intn; inti=0; int*p; scanf("%d",&n); p=@@ (int*)malloc(sizeof(int)*n); for(i=0;i<n;i++)@@ scanf("%d",p@@ +i); printf("%d",@@ num@@ (n,@@ p@@ )); getchar(); getchar(); getchar(); } intnum@@ (intn,int@@ *p@@ ) { inti,j,@@ tem@@ =0,@@ a=0; int*@@ max=@@ (int*)malloc(sizeof(int)*n); max@@ [n-1@@ ]=1; for(i=n-2;i>=0;i--) { tem@@ =0; for(j=n-1;j>i;j--) { if(p@@ [i]>=@@ p@@ [j]) { if(@@ tem@@ <@@ max@@ [j]) tem@@ =@@ max@@ [j]; } } max@@ [i]=@@ tem@@ +1; } a=0; for(i=0;i<n;i++) if(max@@ [i]>@@ a)@@ a=@@ max@@ [i]; return@@ a; }  
c -1
h -1
0

intmain(intargc@@ ,char*@@ argv@@ [@@ ]){ int@@ len,@@ sum,@@ i,j; int*@@ set@@ ; int@@ value@@ =0; scanf("%d%d",&@@ len,@@ &@@ sum); set@@ =@@ (int*)malloc(@@ len@@ *sizeof(int)); for(i=0;i<len@@ ;i++){ scanf("%d",@@ set@@ +i); } for(i=0;i<len@@ ;i++){ value@@ =@@ sum@@ -@@ set@@ [i]; for(j=i+1;j<@@ len@@ ;j++){ if(@@ value@@ ==@@ set@@ [j]){ printf("yes\n"); return0; } } } printf("no\n"); return0; }  
c -1
h -1
inta[100],b[100]; intm,n; voidshuru@@ (void) { inti; scanf("%d%d",&m,&n); for(i=0;i<m;i++) scanf("%d",&a[i]); for(i=0;i<n;i++) scanf("%d",&b[i]); } voidpaixu@@ (int*@@ p1,int*p2@@ ) { inti,j; inttemp; for(j=1;j<@@ m;j++) for(i=0;i<m-1;i++) if((@@ *(@@ p1@@ +i)@@ )>@@ (*(@@ p1@@ +i@@ +1)@@ )) { temp@@ =*(@@ p1@@ +i); *(@@ p1@@ +i)@@ =*(@@ p1@@ +i@@ +1); *(@@ p1@@ +i@@ +1)@@ =temp; } for(j=1;j<n;j++) for(i=0;i<n-1;i++) if(*(@@ p2@@ +i)@@ >*@@ (@@ p2@@ +i@@ +1@@ )) { temp@@ =*(@@ p2@@ +i); *(@@ p2@@ +i)@@ =*(@@ p2@@ +1@@ +i); *(@@ p2@@ +i@@ +1)@@ =temp; } } voidhebing@@ (void) { inti; for(i=0;i<n;i++) a[m@@ +i]=b[i]; } voidshuchu@@ (void) { inti; printf("%d",a[0]); for(i=1;i<@@ m+n;i++) printf("%d",a[i]); } intmain() { shuru@@ (); paixu@@ (a,b); hebing@@ (); shuchu@@ (); return0; }  
c -1
h -1
0

intmain() { int@@ lin@@ ,@@ col; cin>>@@ lin@@ >>col; inti,j; intnum@@ [100][100]; for(i=0;i<@@ lin@@ ;i++) { for(j=0;j<col;j++) cin>>@@ num[i]@@ [j]; } if(@@ lin@@ <=col@@ ) { for(j=0;j<col;j++) { for(i=0;i<=@@ j@@ &&i@@ <@@ lin@@ ;i++) cout<<@@ num[i]@@ [j-i@@ ]<<endl; } for(i=1;i<@@ lin@@ ;i++) { for(j=col-1@@ ;j>=i@@ &&@@ col@@ +i@@ -1-j@@ <@@ lin@@ ;j--) cout<<@@ num[@@ col@@ +i@@ -1-j@@ ][j]@@ <<endl; } } else { for(j=0;j<col;j++) { for(i=0;i<=@@ j@@ ;i++) cout<<@@ num[i]@@ [j-i@@ ]<<endl; } for(i=1;i<@@ lin@@ ;i++) { for(j=@@ col@@ -1;@@ col-1@@ +i-j@@ <@@ lin@@ &&j>=0@@ ;j--) cout<<@@ num[@@ col@@ +i@@ -1-j@@ ][j]@@ <<endl; } } return0; }  
c -1
h -1
intmain(){ structstudent{ int@@ StudentNumber@@ ; int@@ ChineseGrades@@ ; int@@ MathGrades@@ ; int@@ Total@@ ; }; structstudent@@ Stu@@ [100000],@@ sTemp@@ ; intn,i,j; cin>>n; for(i=0;i<=@@ n-1;i++){ cin>>@@ Stu@@ [i].@@ StudentNumber@@ >>@@ Stu@@ [i].@@ ChineseGrades@@ >>@@ Stu@@ [i].@@ MathGrades@@ ; Stu@@ [i].@@ Total@@ =@@ Stu@@ [i].@@ ChineseGrades@@ +@@ Stu@@ [i].@@ MathGrades@@ ; } for(i=0;i<=@@ 2@@ ;i++){ for(j=n-1@@ ;j>=i@@ +1@@ ;j--){ if(@@ Stu@@ [j].@@ Total@@ >@@ Stu@@ [j-1].@@ Total@@ ){ sTemp@@ =@@ Stu@@ [j]; Stu@@ [j]=@@ Stu@@ [j-1]; Stu@@ [j-1]=@@ sTemp@@ ; } } } cout<<@@ Stu@@ [0].@@ StudentNumber@@ <<""<<@@ Stu@@ [0].@@ Total@@ ; for(i=1;i<=@@ 2@@ ;i++){ cout<<endl; cout<<@@ Stu@@ [i].@@ StudentNumber@@ <<""<<@@ Stu@@ [i].@@ Total@@ ; } return0; }  
c -1
h -1
0

intmain() { intn,k; inti,j,@@ l; inta,@@ sum=0,@@ f=0; intm@@ [1000]; scanf("%d@@ ""@@ %d",&@@ n,&@@ k); for(i=1;i<=n;i++){ scanf("%d",&a); m@@ [i]=@@ a; } for(j=1;j<=n;j++){ for(l@@ =j@@ ;@@ l@@ <=n;@@ l++){ sum=@@ m@@ [j]@@ +m@@ [l]; if(sum@@ ==@@ k)@@ f=@@ f@@ +1; else@@ f=@@ f; } } if(f@@ ==0)@@ printf("no"); else@@ printf("yes"); return0; }  
c -1
h -1
intmain() { intn; inta[@@ N]; inti,j; scanf("%d",&n); for(i=0;i<n;i++) { scanf("%d",&a[i]); } for(i=0;i<n;i++) { if(i==0) { printf("%d",a[i]); } else { for(j=0;j<i;j++) { if(a[j]==a[i]) { break; } } if(j==i) { printf("%d",a[i]); } elseif(@@ j@@ <@@ i) { continue; } } } return0; }  
c -1
h -1
0

void@@ factor@@ (int,int); int@@ result@@ [@@ 9999@@ ]={0}; intj=0; intmain() { int@@ times@@ ,k@@ =1; cin>>@@ times@@ ; while(k@@ <=@@ times@@ ){ intnum,@@ ansf@@ =0; cin>>num; factor@@ (2,@@ num); for(inti=0;i<@@ 9999@@ ;i++) if(result@@ [i])@@ ansf@@ ++; cout<<@@ ansf@@ <<endl; for(inti=0;i<@@ 9999@@ ;i++) result@@ [i]=0; k++; } return0; } void@@ factor@@ (int@@ start@@ ,int@@ num) { if(num@@ ==1) {@@ result@@ [j]@@ =1@@ ;j++@@ ;} for(inti=@@ start@@ ;i<=@@ num@@ ;i++){ if(num@@ %i==0) factor@@ (i,@@ num@@ /i); } }  
c -1
h -1
voidmain() { voidf@@ (int@@ r,@@ inta[@@ 10000@@ ]); void@@ g@@ (intm,@@ intn,@@ inta[@@ 1000@@ ],intb[@@ 1000@@ ],int@@ c[@@ 1000@@ ]); intm,n; scanf("%d%d",&m,&n); inta[@@ 1000],b[@@ 10000@@ ],c[@@ 1000],@@ i,j; for(i=0;i<m;i++) scanf("%d",&a[i]); for(i=0;i<n;i++) scanf("%d",&b[i]); f(@@ m,@@ a); f(@@ n,@@ b); g@@ (@@ m,n,@@ a,b,c); for(i=0;i<m+@@ n-1;i++) printf("%d",c[i]); printf("%d\n",@@ c[@@ m+@@ n-1]); } voidf@@ (int@@ r,@@ inta[@@ 10000@@ ]) { intt,@@ i,j; for(i=0;i<@@ r@@ -1;i++) for(j=0;j<@@ r@@ -i-1;j++) if(a[j]>a[j+1]) { t=a[j]; a[j]=a[j+1]; a[j+1]=t; } } void@@ g@@ (intm,@@ intn,@@ inta[@@ 1000@@ ],intb[@@ 1000@@ ],int@@ c[@@ 1000@@ ]) { inti; for(i=0;i<m+@@ n;i++) { if(i<@@ m)@@ c[i]=a[i]; else@@ c[i]=b[i-@@ m]; } }  
c -1
h -1
0

struct@@ result {intnum; int@@ chn@@ ; intmath; inttotal; }; intmain() {@@ intn,k; cin>>n; struct@@ result@@ student@@ [n@@ +1]; for(k=1;k<=n;k++) {@@ cin>>@@ student@@ [k].@@ num@@ >>@@ student@@ [k].@@ chn@@ >>@@ student@@ [k].@@ math; student@@ [k].@@ total=@@ student@@ [k].@@ chn@@ +@@ student@@ [k].@@ math; } inti,j; struct@@ result@@ temp; for(i=1;i<@@ 4;i++) for(j=1;j<=@@ n@@ -i;j++) {if(@@ student[j].@@ total@@ >=@@ student@@ [j+1].@@ total) {@@ temp=@@ student@@ [j]; student@@ [j]=@@ student@@ [j+1]; student@@ [j+1]=temp; } } cout<<@@ student@@ [n@@ ].num@@ <<""<<@@ student@@ [n@@ ].@@ total@@ <<endl; cout<<@@ student[@@ n-1@@ ].num@@ <<""<<@@ student[@@ n-1@@ ].@@ total@@ <<endl; cout<<@@ student[@@ n-2@@ ].num@@ <<""<<@@ student[@@ n-2@@ ].@@ total@@ <<endl; return0; }  
c -1
h -1
intmain(){ structstudent{ int@@ stuno@@ ; int@@ score1@@ ; int@@ score2; int@@ score0@@ ; }; intn,i,j,@@ temp; cin>>n; structstudent@@ num[@@ n]; for(i=0;i<n;i++){ cin>>@@ num[i].@@ stuno@@ ; cin>>@@ num[i].@@ score1@@ ; cin>>@@ num[i].@@ score2; num[i].@@ score0@@ =@@ num[i].@@ score1@@ +@@ num[i].@@ score2; } for(i=0;i<3;i++) for(j=i+1;j<n;j++) if(num@@ [i].@@ score0@@ <@@ num@@ [j].@@ score0@@ ){ temp=@@ num[i].@@ score0@@ ; num[i].@@ score0@@ =@@ num@@ [j].@@ score0@@ ; num@@ [j].@@ score0@@ =temp; temp=@@ num[i].@@ stuno@@ ; num[i].@@ stuno@@ =@@ num@@ [j].@@ stuno@@ ; num@@ [j].@@ stuno@@ =temp; } for(i=0;i<@@ 3@@ &&i@@ <@@ n;i++) cout<<num@@ [i].@@ stuno@@ <<""<<@@ num[i].@@ score0@@ <<endl; return0; }  
c -1
h -1
1


structstudent {intnum; int@@ yu@@ ; int@@ shu; int@@ score; structstudent*next; }; voidmain() { intn,i,@@ max; structstudent*@@ p1,*p2,*head; p1=@@ p2=@@ head=NULL; scanf("%d",&n); for(i=0;i<n;i++) { p1@@ =(structstudent*)malloc(sizeof(structstudent)); scanf("%d%d%d",&p1->num,&p1->@@ yu@@ ,&p1->@@ shu); p1->@@ score@@ =p1->@@ yu@@ +p1->@@ shu; if(i==0)@@ head=p1; elsep2->next=p1; p2=p1; } p2->next=NULL; for(i=0;i<3;i++) { p2@@ =p1@@ =head; max=@@ p1->@@ score; while(p1!=NULL) { if(p1->@@ score@@ >max){max=@@ p1->@@ score@@ ;@@ p2@@ =p1;} p1=p1->next; } printf("%d%d\n",@@ p2->@@ num,@@ max); p1=head; while(@@ p1->next@@ !=@@ p2@@ ) { p1=p1->next; } p1->next=@@ p2->next; } }  
c -1
h -1
intmain() { inta[100][100],@@ n,@@ t,@@ i,@@ k=0,@@ j,@@ b,@@ c,d,@@ e; scanf("%d",&n); for(i=0;i<n;i++) { for(j=0;j<n;j++) { scanf("%d",&a[i][j]); if(a[i][j]==0&&@@ k@@ ==0) { b=i; c@@ =j; k++; } } } for(i=n-1;i>=0;i--) { for(j=n-1;j>=0;j--) { if(a[i][j]==0&&@@ k@@ ==1) { d@@ =i; e@@ =j; k++; } } } t@@ =(@@ d-b@@ -1)*(@@ e@@ -c@@ -1); printf("%d\n",t); return0; }  
c -1
h -1
0

intmain(){ double@@ q; scanf("%lf",&@@ q); chara[@@ 1000],b[1000]; scanf("%s",a); scanf("%s",b); inti,@@ m,n; m=strlen(a); n@@ =strlen(b); if(m!=@@ n){ printf("error\n"); return0; } for(i=0;i<n;i++){ if(a[i]!='@@ A'&&a[i]!='T'&&a[i]!='G'&&a[i]!='@@ C'){ printf("error\n"); return0; } if(@@ b[i]!='A'&&b[i]!='T'&&b[i]!='G'&&b[i]!='@@ C'){ printf("error\n"); return0; } } int@@ c=0; for(i=0;i<m;i++){ if(a[i]==b[i]){ c++; } } double@@ x; x@@ =(@@ 1.0*@@ c)@@ /@@ (@@ 1.0*@@ m); if(x@@ >=@@ q@@ ){ printf("yes"); }else{ printf("no"); } return0; }  
c -1
h -1
int@@ day_month@@ [13]={0,31,28,31,30,31,30,31,31,30,31,30,31}; int@@ sum_day@@ (int@@ month@@ ,int@@ day@@ ) {inti; for(i=0;i<@@ month;i++) day=day+@@ day_month@@ [i]; return(@@ day); } intleap@@ (intyear@@ ) {int@@ leap@@ ; leap@@ =@@ year%4==0&&year%100!=0@@ ||@@ year%@@ 400==0@@ ; return(@@ leap@@ ); } intmain() {@@ intyear,month,day,@@ days@@ ,@@ a; for(a@@ =1;@@ a@@ <=@@ 5@@ ;a@@ ++) {@@ scanf("%d%d%d",&year,&month,&day); days=@@ sum_day@@ (@@ month,@@ day); if(leap@@ (year@@ )&&@@ month@@ >=@@ 3) days=@@ days@@ +1; printf("%d\n",@@ days@@ );} return0; }  
c -1
h -1
0

intmain(){ intk,@@ s=0; intm,n; cin>>k; inta[100][100]; int@@ *p@@ =&@@ a[0][@@ 0]; for(intt@@ =0;t@@ <k;@@ t++){ cin>>m>>n; s=0; for(inti=0;i<@@ m;i++){ for(intj=0;j<n;j++){ cin>>*(*(a+i)+j); } } for(inti=0;i<n;i++){ s+=@@ *(*(a@@ +@@ 0)@@ +i); s+=@@ *(*(a@@ +m-1)@@ +i); } for(inti=0;i<@@ m;i++){ s+=@@ *(*(a+i)@@ +@@ 0); s+=@@ *(*(a+i)@@ +n-1); } s=s@@ -@@ **@@ a@@ -@@ *(*(a@@ +m-1)@@ +@@ n-1)@@ -@@ *(*(a@@ +@@ 0@@ )+@@ n-1)@@ -*(@@ *(a+@@ m-1@@ )); cout<<s<<endl; } }  
c -1
h -1
intmain(){ char@@ yuanchuan@@ [257]; char@@ zichuan@@ [257]; char@@ replacement@@ [257]; inti,j,k; int@@ len1,len2@@ ; scanf("%s%s%s",@@ yuanchuan@@ ,@@ zichuan@@ ,@@ replacement); len1=strlen(@@ yuanchuan@@ ); len2=strlen(@@ zichuan@@ ); k=@@ len1; for(i=0;i<len1@@ -len2@@ +1@@ ;i++){ for(j=0;j<len2@@ ;j++){ if(@@ yuanchuan@@ [i+j]!=@@ zichuan@@ [j]){ break; } if(j==@@ len2@@ -1){ k=i; } } if(k!=@@ len1@@ ){ break; } } if(k==@@ len1@@ ){ printf("%s",@@ yuanchuan@@ ); }else{ for(i=0;i<k;i++){ printf("%c",@@ yuanchuan@@ [i]); } printf("%s",@@ replacement); for(i=k@@ +len2@@ ;i<@@ len1@@ ;i++){ printf("%c",@@ yuanchuan@@ [i]); } } return0; }  
c -1
h -1
0

intmain() { intn,k,i,@@ p,q,@@ x; inta[1000]; x@@ =-1; scanf("%d%d",&n,&k); scanf("%d",&@@ a[1]); for(i=2;i<=n;i++) { scanf("%d",&a[i]); } for(p=1@@ ;p<=@@ n-1@@ ;p++) { for(q=@@ p@@ +1@@ ;q@@ <=n;@@ q++) { if(a[@@ p@@ ]+@@ a[q@@ ]==@@ k) x=1; } if(x==1) break; } if(x@@ ==-1) printf("no"); else printf("yes"); return0; }  
c -1
h -1
intmain() { intn,@@ i,j@@ ,*@@ b,@@ max,@@ maxn@@ =0@@ ,*@@ a; scanf("%d",&n); a=@@ (int*)malloc(sizeof(int)*n); b=@@ (int*)malloc(sizeof(int)*n); for(i=0;i<n;i++) { scanf("%d",a@@ +i); b[i]=0; } for(i=n-1;i@@ >-@@ 1@@ ;i--) { max=0; for(j=n-1;j>i;j--) if(a[j]<=@@ a[i]&&@@ b[j]@@ >=@@ max) max=@@ b[j]; b[i]=@@ max+1; if(b[i]>@@ maxn@@ ) maxn=@@ b[i]; } printf("%d\n",@@ maxn@@ ); }  
c -1
h -1
0

intmain(){ inti,@@ m,n,@@ a,b,@@ k; k=0; a=0; b=0; double@@ p; char@@ f[@@ 501],@@ g@@ [501]; scanf("%lf%s%s",&@@ p,@@ f,@@ g@@ ); m=strlen(@@ f); n=strlen(@@ g@@ ); for(i=0;i<m;i++){ if(f@@ [i]!='A'&&@@ f@@ [i]!='T'&&@@ f@@ [i]!='C'&&@@ f@@ [i]!='G')@@ {@@ a@@ ++;} } for(i=0;i<n;i++){ if(g@@ [i]!='A'&&@@ g@@ [i]!='T'&&@@ g@@ [i]!='C'&&@@ g@@ [i]!='G')@@ {@@ b@@ ++;} } if(m!=@@ n@@ ||@@ a@@ !=0@@ ||@@ b@@ !=0@@ ){@@ printf("error");} else{@@ for(i=0;i<m;i++){ if(f@@ [i]==@@ g[i]@@ ){@@ k@@ ++;} } if(1.0*@@ k/@@ m@@ >@@ p@@ ){printf("yes");} else{printf("no");} } return0; }  
c -1
h -1
intarray[@@ N@@ ][@@ N]; intn,m; intsum@@ (inta[@@ N@@ ][@@ N@@ ]) { intsum=0; for(inti=0;i<n;i++) sum+=*(@@ a[0]@@ +i); for(inti=1;i<@@ m;i++) sum+=*(@@ a[i]+@@ (n-1@@ )); for(inti=@@ n-2;i>=0;i--) sum+=*(@@ a[m-1]@@ +i); for(inti=@@ m@@ -2@@ ;i>=1;i--) sum+=*(@@ a[i]+@@ 0); returnsum; } intmain() { intk; cin>>k; for(inti=0;i<k;i++) { cin>>m>>n; for(intj=0;j<m;j++) for(intk=0;k<@@ n;k++) cin>>array@@ [j]@@ [k]; cout<<sum@@ (@@ array@@ )<<endl; } return0; }  
c -1
h -1
0

intmain() { inti,@@ a,b,@@ c,@@ sum=0; scanf("%d%d%d",&a,&b,&c); if(b==1) sum=0; elseif(b==@@ 2) sum=@@ 31; else { sum=@@ 31; if((@@ a%@@ 400==0)||(@@ a%4==0&&a%100!=0@@ )) sum=sum+@@ 29; else@@ sum=sum+@@ 28; for(i=@@ 3@@ ;i<@@ b;i++) { if(i==@@ 3||i==5||i==7||i==8||i==@@ 10) sum=sum+@@ 31; if(i==@@ 4||i==6||i==9||i==11) sum=sum+@@ 30; } } sum=sum@@ +c; printf("%d",sum); return0; }  
c -1
h -1
intmain(intargc,char*argv[]) { int@@ shu@@ [1000][1000]; intn,@@ a,b,c,d,@@ l; inti,j; scanf("%d",&n); for(i=1;i<=n;i++) { for(j=1;j<=n;j++) { scanf("%d",&@@ shu@@ [i][j]); } scanf("\n@@ "); } for(i=1;i<=n;i++) { for(j=1;j<=n;j++) { if(@@ shu@@ [i][j]==0) {@@ a=i; b=j; break;} } if(a@@ !=0) break; } for(i=n@@ ;i>=1;i--) { for(j=n@@ ;j@@ >=1@@ ;j--) { if(@@ shu@@ [i][j]==0) {@@ c=i; d=j; break;} } if(c@@ !=0@@ )break; } printf("%d",(@@ c-a-1)*(d-b@@ -1)); return0; }  
c -1
h -1
0

voidinput@@ (int@@ num[@@ ],@@ inta[]) { intj; scanf("%d%d",&@@ num@@ [0]@@ ,&@@ num@@ [1]); for(j=0;j<@@ num@@ [0]+@@ num@@ [1]@@ ;j++)@@ scanf("%d",&a[j]); } voidorder@@ (int@@ num[@@ ],@@ inta[]) { intj,@@ k,@@ temp; for(j=0;j<@@ num@@ [0]@@ ;j++) { for(k=@@ num@@ [0]@@ -1@@ ;k@@ >0@@ ;k--) { if(a[k]@@ <@@ a[k@@ -1@@ ]) { temp=@@ a[k]; a[k]=a[k@@ -1]; a[k@@ -1@@ ]=temp; } } } for(j=@@ num@@ [0]@@ ;j<@@ num@@ [0]+@@ num@@ [1]@@ ;j++) { for(k=@@ num@@ [0]+@@ num@@ [1]@@ -1@@ ;k@@ >@@ num@@ [0]@@ ;k--) { if(a[k]@@ <@@ a[k@@ -1@@ ]) { temp=@@ a[k]; a[k]=a[k@@ -1]; a[k@@ -1@@ ]=temp; } } } } voidprint@@ (int@@ num[@@ ],@@ inta[]) { inti; for(i=0;i<@@ num@@ [0]+@@ num@@ [1]@@ -1;i++) printf("%d",a[i]); printf("%d",a[@@ num@@ [0]+@@ num@@ [1]@@ -1]); } voidmain() { inta[@@ 40@@ ],@@ num[@@ 2@@ ]; input@@ (num,@@ a); order@@ (num,@@ a); print(@@ num,@@ a); }  
c -1
h -1
structStudent {int@@ ID; intchi; intmath; inttotal; }; intmain() { structStudent@@ stu[100000]; structStudent@@ temp; inti,n,@@ j,@@ m; scanf("%d",&n); for(i=0;i<n;i++){ scanf("%d%d%d",&stu[i].@@ ID@@ ,&stu[i].@@ chi@@ ,&stu[i].math); stu[i].@@ total=@@ stu[i].@@ chi@@ +stu[i].@@ math; } for(j=1;j<@@ 4@@ ;j++){ for(m=0;m<@@ n@@ -j@@ ;m++){ if(@@ stu[m@@ ].@@ total@@ >=@@ stu[m@@ +1@@ ].@@ total@@ ){ temp=@@ stu[@@ m]; stu[m@@ ]=@@ stu[m@@ +1]; stu[m@@ +1]=@@ temp; } } } for(i=n-1;i@@ >@@ n-@@ 4@@ ;i--) printf("%d%d\n",stu[i].@@ ID,@@ stu[i].@@ total); return0; }  
c -1
h -1
0

structpatient { charID[10]; intage; structpatient*next; }; structpatient*@@ insert@@ (structpatient@@ *head,@@ structpatient*@@ another@@ ) { structpatient*@@ p0@@ ,*@@ p1,*p2; p1=head; p0@@ =@@ another@@ ; if(@@ p0@@ ->age@@ <60) { while(@@ p1->next@@ !=NULL) { p2=p1; p1=p1->next; } p1->next=@@ p0; p0@@ ->next=NULL; } else { while(@@ p1->age@@ >=@@ p0@@ ->age@@ &&@@ p1->next@@ !=NULL) { p2=p1; p1=p1->next; } if(p1->age@@ >=@@ p0@@ ->age@@ ) { p1->next=@@ p0; p0@@ ->next=NULL; } else { if(@@ p1@@ ==@@ head@@ ) { head=@@ p0; p0->next@@ =p1; } else { p2->next=@@ p0; p0->next@@ =p1; } } } returnhead; } voidprint@@ (structpatient@@ *head) { structpatient@@ *p; p=head; while(p!=NULL) { printf("%s\n",p->@@ ID); p=p->next; } } voidmain() { intn,i; structpatient@@ *head,*p; scanf("%d",&n); head=@@ p=@@ (structpatient@@ *)malloc(len); scanf("%s%d",@@ p->@@ ID,&@@ p->@@ age); head@@ ->next=NULL; for(i=1;i<n;i++) { p=@@ (structpatient@@ *)malloc(len); scanf("%s%d",@@ p->@@ ID,&@@ p->@@ age); head=@@ insert@@ (head,@@ p); } print(head); }  
c -1
h -1
intmain() { inta[@@ 15],@@ i; while(1) { intn@@ =1,@@ sum=0,@@ j; cin>>a[0]; if(a[0]==-1) break; while(cin>>@@ a[n@@ ]) { if(a[@@ n@@ ]==0) break; n++; } for(i=0;i<n-1;i++) { for(j=i+1;j<n;j++) { if(a[i]==a[j]@@ *2@@ ||@@ a[j]==@@ a[i]@@ *2) sum++; } } cout<<sum<<endl; } return0; }  
c -1
h -1
0

intnum=0; void@@ asd@@ (inti,int@@ q) { intj; for(j=@@ q@@ ;j>@@ 1@@ ;j--) { if(i@@ %j@@ !=0) continue; if(i==@@ j) { num++; } else { q@@ =j; asd@@ (i@@ /@@ j,@@ q); } } } intmain() { intn,@@ o@@ ; cin>>n; for(@@ o@@ =0;@@ o@@ <n;@@ o@@ ++) { num=0; inta; cin>>a; asd@@ (a,@@ a); if(num@@ ==1) cout<<@@ 1@@ <<endl; else cout<<num<<endl; } }  
c -1
h -1
intmain() { inty,@@ n,@@ d,@@ x=0,@@ i@@ =1,@@ z; intm[@@ 13@@ ]; m@@ [1]=@@ m@@ [3@@ ]=@@ m[@@ 5@@ ]=@@ m[@@ 7@@ ]=@@ m[@@ 8@@ ]=@@ m[@@ 10@@ ]=@@ m[@@ 12@@ ]=31; m[@@ 4@@ ]=@@ m[@@ 6@@ ]=@@ m[@@ 9@@ ]=@@ m@@ [11@@ ]=30; m@@ [2]=@@ 29; scanf("%d%d%d",&y,&@@ n,&@@ d); if(n==1) { x=@@ d; z=@@ x; } else { if((y%@@ 400==0)||(@@ y%@@ 4==0&&y%100!=0@@ )) { for(i=1;i<n;i++) { x=x@@ +m@@ [i]; z=@@ x@@ +d; } } else { for(i=1;i<n;i++) { x=x@@ +m@@ [i]; } z=@@ x@@ +d@@ -1; } } printf("%d\n",@@ z); return0; }  
c -1
h -1
0

void@@ factor@@ (inta,int@@ k); intsum=0; intmain() { intn,a,@@ i=0; cin>>n; for(i=1;i<=n;i++) { cin>>a; factor@@ (a,@@ 2); cout<<sum@@ +1<<endl; sum=0; } return0; } void@@ factor@@ (inta,int@@ k) { intb,@@ j; b=@@ (int)sqrt(@@ (double)@@ a); for(j=k@@ ;j<=@@ b;j++) { if(a%@@ j@@ ==0) { sum++; factor@@ (a@@ /j,j); } } j=@@ k; }  
c -1
h -1
structstudent { intnum; intchi; intmath; intsum; structstudent*next; }; intn,k; voidmain() {@@ inti,j; scanf("%d",&n); intm; m=0; structstudent*head; structstudent*p1,*p2; p1=p2@@ =(structstudent*)malloc(len); scanf("%d%d%d",&p1->num,&p1->@@ chi@@ ,&p1->math); p1->sum=p1->@@ chi@@ +p1->@@ math; head=p1; while(m@@ <@@ n-1) {@@ m=m+1; p1@@ =(structstudent*)malloc(len); scanf("%d%d%d",&p1->num,&p1->@@ chi@@ ,&p1->math); p1->sum=p1->@@ chi@@ +p1->@@ math; p2->next=p1; p2=p1; } p2->next@@ =0; structstudent*@@ max@@ ,*p; for(i=0;i<3;i++) {max=@@ head; p=@@ p2=head; p1=p2@@ ; for(j=0;j<n-i;j++) {if(@@ p1->@@ sum@@ >max@@ ->@@ sum) {@@ max@@ =p1; p=@@ p2@@ ;} p2=p1; p1=@@ p2->next@@ ;} p1=@@ p2=head; printf("%d%d\n",@@ max@@ ->num,@@ max@@ ->sum); if(max@@ ->@@ num@@ ==@@ head->@@ num) head=@@ p1->next; else@@ p@@ ->next=@@ max@@ ->next; } }  
c -1
h -1
0

intmain() { intk,m,n,@@ sz[@@ 200][@@ 200],@@ result=0; scanf("%d",&k); inti,@@ p,q; for(i=0;i<k;i++) { scanf("%d%d",&m,&n); for(p=0;p@@ <m@@ ;p++) { for(q=0;q@@ <n;@@ q++) { scanf("%d",&@@ sz[@@ p@@ ][q@@ ]); } if(p@@ ==0||@@ p@@ ==@@ m-1) { for(q=0;q@@ <n;@@ q++) { result+=@@ sz[@@ p@@ ][q@@ ]; }} else { result+=@@ sz[@@ p@@ ][0]; result+=@@ sz[@@ p@@ ][n-1]; } } printf("%d\n",@@ result); result=0; } return0; }  
c -1
h -1
intmain() { inti,j,@@ length2@@ ,@@ length1@@ ; charstr@@ [300],@@ sub@@ [300],@@ rep@@ [300]; gets(@@ str@@ );@@ gets(@@ sub@@ );@@ gets(@@ rep); length1@@ =strlen(@@ str); length2@@ =strlen(@@ sub); for(i=0;i<@@ length1@@ ;i++) { for(j=0;j<@@ length2@@ ;j++) { if(@@ sub@@ [j]!=@@ str@@ [i+j@@ ]) break; } if(j==@@ length2@@ ) { for(j=0;j<@@ length2@@ ;j++) str@@ [i+j@@ ]=@@ rep@@ [j]; break; } } puts(@@ str); return0; }  
c -1
h -1
0

int@@ disassamble@@ (int,int); intmain() { intn; inti=1; inta,@@ result; cin>>n; while(i<=@@ n) { i++; cin>>a; result=@@ disassamble@@ (a,@@ 2); cout<<@@ result@@ <<endl; } return0; } int@@ disassamble@@ (inta,int@@ y) { inti,@@ count@@ =1; if(a==1) return0; if(a==@@ 2) return1; for(i=y@@ ;i@@ *@@ i<=@@ a;i++) { if(a%i==0) { count=@@ disassamble@@ (a@@ /i,@@ i@@ )+@@ count; } } returncount; }  
c -1
h -1
structstudent { int@@ No@@ ; intchinese; intmath; int@@ all@@ ; }stu[@@ STUDENT_NUM@@ ],@@ temp; voidmain() { intn; scanf("%d",&n); inti,@@ k; for(i=0;i<n;i++){ scanf("%d%d%d",&stu[i].@@ No@@ ,&stu[i].@@ chinese@@ ,&stu[i].math); stu[i].@@ all@@ =stu[i].@@ chinese+@@ stu[i].@@ math; } for(k=1;k<@@ 4@@ ;k++){ for(i=0;i<n-@@ k;i++){ if(stu[i].@@ all@@ >=@@ stu[i+1].@@ all@@ ){ temp=@@ stu@@ [i+1]; stu@@ [i+1]=@@ stu[i]; stu[i]=@@ temp; } } } for(i=n-1;i@@ >@@ n-@@ 4@@ ;i--){ printf("%d%d\n",stu[i].@@ No@@ ,@@ stu[i].@@ all@@ ); } }  
c -1
h -1
0

intfenjie@@ (int@@ max@@ ,int@@ min) { intnum@@ =1,@@ i,@@ k; for(i=min@@ ;i<@@ max@@ /2@@ ;i++) { k=@@ max@@ %@@ i; if(k==0) { if(i@@ <=@@ max@@ /@@ i) num+=@@ fenjie@@ (@@ max@@ /i,i); } } returnnum; } intmain() { inta[@@ 10000],@@ n,@@ j; scanf("%d",&n); for(j=0;j<n;j++) { scanf("\n@@ %d",&@@ a[j]); } for(j=0;j<n;j++) { printf("%d\n",@@ fenjie@@ (@@ a[j]@@ ,@@ 2)); } return0; }  
c -1
h -1
intmain() { introw,col; cin>>row>>col; inta[100][100]; inti,j; for(i=0;i<row;i++) for(j=0;j<col;j++) cin>>a[i][j]; for(i=0;i<col;i++) for(j=0;j<=i;j++) { if(j@@ <row) cout<<@@ a[j][i-j@@ ]<<endl; } for(i=1;i<row;i++) for(j=i;j<@@ col@@ +i@@ ;j++) { if(j@@ <row) cout<<@@ a[j]@@ [@@ col@@ +i-j@@ -1]@@ <<endl; } return0; }  
c -1
h -1
0

intmain() { intn,k; scanf("%d%d",&n,&k); intsz[1000]; inti; for(i=0;i<n@@ ;i@@ +=@@ 1) {@@ scanf("%d",&(sz[i]@@ )@@ );} for(intl@@ =0;@@ l@@ <=@@ n-1;@@ l@@ +=@@ 1) {@@ for(i=1;i<@@ n@@ ;i@@ +=@@ 1@@ ){@@ if(sz[@@ l@@ ]+@@ sz@@ [i]==@@ k) {@@ printf("yes");@@ return0@@ ;}} if(l@@ ==@@ n-1@@ ){@@ printf("no@@ ");@@ }} return0; }  
c -1
h -1
intmain() { inta[100][100]; introw,col,@@ i,j,k; scanf("%d%d",&row,&col); for(i=0;i<row;i++) for(j=0;j<col;j++) scanf("%d",&a[i][j]); for(i=0;i<col;i++) { for(j=i,@@ k@@ =0@@ ;j>=0@@ ,k@@ <=i@@ ;j--@@ ,k++) { if(k@@ >@@ (@@ row-1)@@ ||j@@ >@@ (@@ col@@ -1)@@ ||@@ k@@ <0@@ ||j@@ <0) continue; printf("%d\n",@@ a[k]@@ [j]); } } for(i=1;i<=@@ row-1;i++) for(j=col-1@@ ,k@@ =i@@ ;j>=0@@ ,k@@ <=row-1@@ ;j--@@ ,k++) { if(k@@ >@@ (@@ row-1)@@ ||j@@ >@@ (@@ col@@ -1)@@ ||@@ k@@ <0@@ ||j@@ <0) continue; printf("%d\n",@@ a[k]@@ [j]); } return0; }  
c -1
h -1
0

ints@@ [100]; intf(inta,int@@ min@@ ){ if(a<@@ min@@ ){ return0; } int@@ result=1; for(inti=@@ min@@ ;i<@@ a;i++){ if(a@@ %i==0){ result+=@@ f(a@@ /i,i); } } returnresult; } main() {@@ intm,@@ mm@@ ; scanf("%d",&m); for(inti=0;i<@@ m;i++){ scanf("%d",&@@ mm@@ ); printf("%d\n",@@ f(@@ mm@@ ,@@ 2)@@ );} }  
c -1
h -1
intmain() { intn,@@ a[100],@@ l@@ [100@@ ],b[100],@@ i=0,@@ j,k,@@ p=0,@@ q=0,@@ t=0; chars@@ [100][@@ 12@@ ],@@ lao@@ [100][@@ 13@@ ]={'\0'},@@ bu@@ [100][@@ 13@@ ]={'\0'},@@ w@@ [12@@ ]={'\0'}; scanf("%d",&n); for(i=0;i<n;i++){ scanf("%s%d",&@@ s[i]@@ ,&@@ a[i]); if(a[i]@@ >=60@@ )@@ l@@ [p@@ ]=@@ a[i],@@ strcpy(@@ lao@@ [p@@ ],@@ s[i]@@ ),@@ p++; else@@ b[@@ q@@ ]=@@ a[i],@@ strcpy(@@ bu@@ [q@@ ],@@ s[i]@@ ),@@ q@@ ++;} for(i=0;i<p@@ ;i++){ for(j=0;j<@@ p@@ -1;j++){ if(l@@ [j]<@@ l@@ [j+1@@ ])@@ t=@@ l@@ [j],@@ l@@ [j]=@@ l@@ [j+1],@@ l@@ [j+1]=@@ t,@@ strcpy(@@ w,@@ lao@@ [j]@@ ),@@ strcpy(@@ lao@@ [j],@@ lao@@ [j+1]@@ ),@@ strcpy(@@ lao@@ [j+1],@@ w); }} for(i=0;i<p@@ ;i++){@@ printf("%s\n",@@ lao@@ [i]);} for(i=0;i<@@ q@@ ;i++){@@ printf("%s\n",@@ bu@@ [i]);} }  
c -1
h -1
0

intmain() { charstr[256],@@ substr@@ [256],@@ rep@@ [256]; inti,j,@@ flag@@ =1,@@ flag1@@ =0; cin>>@@ str@@ ; cin>>@@ substr@@ ; cin>>@@ rep@@ ; int@@ nlen@@ =strlen(@@ str); int@@ slen@@ =strlen(@@ substr@@ ); int@@ rlen@@ =strlen(@@ rep); if(@@ slen@@ !=@@ rlen@@ ) {@@ cout<<"@@ hehe@@ "@@ <<endl;} for(i=0;i<@@ nlen@@ ;i++) { for(j=0;j<@@ slen@@ ;j++) { if(@@ substr@@ [j]!=@@ str@@ [i+j@@ ]) {@@ flag@@ =0;@@ break;} else { flag=1; } } if(flag) { for(intk=0;k<@@ slen@@ ;k++) { str@@ [i+k@@ ]=@@ rep@@ [k]; } flag1@@ =1; } if(@@ flag1@@ ) {break;} } cout<<str@@ <<@@ '\n@@ '; return0; }  
c -1
h -1
voidmain() { inta[@@ 20000@@ ],b[100],@@ n,@@ i,j,k,@@ l; scanf("%d",&n); for(i=0;i<n;i++)@@ scanf("%d",&a[i]); b[0]=@@ a[0]; l=0; k=0; for(i=1;i<n;i++) { for(j=0;j<=@@ l@@ ;j++)@@ if(a[i]==@@ b[j]@@ )@@ k=1; if(k==0) { l++; b[l@@ ]=a[i]; } k=0; } for(i=0;i<l@@ ;i++)@@ printf("%d",b[i]); printf("%d",@@ b[l@@ ]); }  
c -1
h -1
0

void@@ yinshu@@ (int@@ ); intsum@@ =1@@ ,j=@@ 2; intmain() { intn,m; inti; cin>>n; for(i=1;i<=n;i++) { cin>>m; yinshu@@ (m); cout<<sum<<endl; sum@@ =1@@ ,j=@@ 2; } return0; } void@@ yinshu@@ (int@@ mm@@ ) { intk; for(k=j@@ ;k@@ *@@ k@@ <=@@ mm@@ ;k++) { if(@@ mm@@ %@@ k@@ ==0) { sum=sum+1; j=@@ k; yinshu@@ (@@ mm@@ /@@ k); } } }  
c -1
h -1
int@@ yn@@ (char@@ x); intmain(){ chara[501],b[501]; double@@ q,@@ p; inti,@@ s,@@ l1,l2,@@ o@@ ; scanf("%lf%s%s",&@@ p,@@ a,b); l1@@ =strlen(a); l2@@ =strlen(b); o@@ =0; if(l1!=l2@@ )@@ o@@ =1; for(i=0;i<l1;i++) if(@@ yn@@ (@@ a[i])@@ ==1){@@ o@@ =1;break;} for(i=0;i<@@ l2@@ ;i++) if(@@ yn@@ (@@ b[i]@@ )@@ ==1){@@ o@@ =1;break;} if(@@ o@@ ==1)@@ printf("error"); else{ s=0; for(i=0;i<l1;i++) if((@@ a[i]@@ )==@@ b[i]@@ )@@ s=s+1; q@@ =1.0*@@ s/@@ l1; if(q@@ >@@ p@@ )@@ printf("yes"); elseprintf("no"); } return0; } int@@ yn@@ (char@@ x){ inta; if((x@@ =='@@ A')||(@@ x@@ =='@@ T')||(@@ x@@ =='@@ C')||(@@ x@@ =='@@ G')@@ )@@ a=0; else@@ a=1; return@@ a; }  
c -1
h -1
0

intmain(){ intn,k; intsz[1000]; scanf("%d%d",&n,&k); inti; i=0; while(i<@@ n){ scanf("%d",&sz[i]); i++; } intf@@ =0; intsum; for(i=0;i<n;i++){ for(intt@@ =0;t@@ <n;@@ t++){ sum=@@ sz[i]@@ +@@ sz[@@ t@@ ]; if(sum@@ ==k){ f=1; break; } } } if(f@@ ==1){ printf("yes"); }else{ printf("no"); } return0; }  
c -1
h -1
intmain(intargc,char*argv[]) { int@@ shuzu@@ [@@ 16]; inti,j,k,@@ number; for(k@@ =1;@@ 1@@ ;k++){ scanf("%d",&@@ shuzu@@ [0]); if(shuzu@@ [0]==@@ -1){ break; } number@@ =1; for(i=1;i<@@ 16@@ ;i++){ scanf("%d",&@@ shuzu@@ [i]); if(shuzu@@ [i]@@ ==0){ break; } else@@ number@@ ++; } int@@ zu@@ =0; double@@ a,b; for(i=0;i<@@ number@@ -1;i++){ for(j=@@ number@@ -1@@ ;j>i@@ ;j--){ a@@ =(double)@@ shuzu@@ [i]@@ /@@ shuzu@@ [j]; b@@ =(double)@@ shuzu@@ [j]@@ /@@ shuzu@@ [i]; if(a==@@ 2@@ ||@@ b==@@ 2@@ ){ zu@@ ++; } } } printf("%d\n",@@ zu@@ ); } return0; }  
c -1
h -1
0

int@@ mins@@ (intx,int@@ y){ if(x>@@ y)@@ return@@ y; else@@ return@@ x; } int@@ maxs@@ (intx,int@@ y){ if(x>@@ y) return@@ x; else return@@ y; } intmain(){ introw,col,@@ i,j,@@ n; cin>>row>>col; n=@@ row@@ *@@ col; inta[@@ row][col]; for(i=0;i<row;i++){ for(j=0;j<col;j++){ cin>>a[i][j]; } } for(i=0;i<@@ mins@@ (@@ row,@@ col@@ );i++){ for(j=0;j<=@@ i;j++){ cout<<@@ a[j][i-j@@ ]<<endl; } } if(row@@ >=@@ col@@ ){ for(i=@@ col@@ ;i<@@ row;i++){ for(j=i@@ -col@@ +1@@ ;j<=@@ i;j++){ cout<<@@ a[j][i-j@@ ]<<endl; } } for(i=@@ row@@ ;i<=@@ row+col-2@@ ;i++){ for(j=i@@ -col@@ +1@@ ;j<@@ row@@ ;j++){ cout<<@@ a[j][i-j@@ ]<<endl; } } } else{ for(i=@@ row@@ ;i<@@ col@@ ;i++){ for(j=0;j<row@@ ;j++){ cout<<@@ a[j][i-j@@ ]<<endl; } } for(i=@@ col@@ ;i<=@@ row+col-2@@ ;i++){ for(j=i@@ -col@@ +1@@ ;j<@@ row@@ ;j++){ cout<<@@ a[j][i-j@@ ]<<endl; } } } return0; }  
c -1
h -1
intmain() { int@@ L@@ ,@@ R@@ ,@@ i,j,k; cin>>@@ R@@ >>@@ L@@ ; const@@ int@@ l=@@ L@@ ; const@@ int@@ r=@@ R@@ ; inta[@@ r@@ ][l@@ ]; for(i=0;i<@@ r;i++) for(j=0;j<l;j++) cin>>a[i][j]; for(k=0;k<@@ l@@ ;k++) { for(i=0;@@ (i@@ <@@ r@@ )&&(@@ (k@@ -i@@ )@@ >=0@@ );i++) { cout<<a[i]@@ [k-i@@ ]<<endl; } } for(k=@@ l@@ ;k<=@@ l@@ +@@ r@@ -2@@ ;k++) { for(i=@@ l@@ -1;@@ (i@@ >=0@@ )&&(@@ (k@@ -i@@ )@@ <@@ r@@ )@@ ;i--) { cout<<@@ a[k@@ -i@@ ]@@ [i]<<endl; } } }  
c -1
h -1
1


intmain() { int*@@ a,*@@ a0@@ ,*@@ b@@ ,*p; introw,col; intr,@@ c,@@ t,@@ i; scanf("%d%d",&row,&col); a=@@ (int*)@@ calloc@@ (@@ 100@@ ,@@ 100*sizeof(int)); a0@@ =@@ a; for(r=0;r@@ <row@@ ;r++) { for(c=0;c@@ <col@@ ;c@@ ++) { scanf("%d",@@ a+@@ r@@ *col@@ +c); } } a=@@ a0@@ ; for(c=0;c@@ <row@@ +col@@ -1;@@ c++) { r=0;@@ t=@@ c; for(i=0;i<@@ row@@ *@@ col;i++) { if(@@ 0@@ <=@@ r@@ &&@@ r@@ <row@@ &&@@ 0@@ <=@@ t@@ &&@@ t@@ <col) { printf("%d",@@ *(a+@@ r@@ *col@@ +@@ t@@ )); if(r@@ !=@@ row-1@@ ||@@ t@@ !=@@ col@@ -1)@@ printf("\n"); } r@@ ++@@ ;t@@ --; } } }  
c -1
h -1
intmain() { inty,m,d,@@ i,@@ sum; inta[@@ 12]={31,@@ 0@@ ,31,30,31,30,31,31,30,31,30,31}; scanf("%d%d%d",&y,&m,&d); if((y%@@ 4==0&&y%100!=0@@ )||@@ y%400==0) a[1]=29; else a[1]=@@ 28; sum=0; for(i=0;i<m;i++) sum=sum+@@ a[i]; sum=sum-@@ a[i-1]@@ +d; printf("%d",sum); getchar(); getchar(); return0; }  
c -1
h -1
0

intmain(){ chars@@ [100],@@ a[100],b[100],@@ zfc@@ [100],@@ s2[@@ 200]; gets(s); gets(a); gets(b); inti,k,@@ l,@@ la@@ ,lb@@ ,@@ ls@@ ,@@ th@@ =@@ 200@@ ; ls@@ =strlen(s); la@@ =strlen(a); lb@@ =strlen(b); for(i=0;i<@@ ls@@ ;i++){ l=0; for(k=i@@ ;k<@@ la@@ +i@@ ;k++){ zfc@@ [l@@ ]=@@ s@@ [k]; l++; } zfc@@ [l@@ ]='\0'; if(strcmp(@@ zfc@@ ,@@ a)@@ ==0){ th@@ =i; break; } } if(@@ th@@ <@@ 200@@ ){ for(i=0;i<@@ th@@ ;i++){ s2@@ [i]=@@ s[i]; } for(i=@@ th@@ ;i<@@ th@@ +lb@@ ;i++){ s2@@ [i]=@@ b[i-@@ th@@ ]; } for(i=@@ th@@ +lb@@ ;i<@@ ls@@ +lb@@ -@@ la@@ ;i++){ s2@@ [i]=@@ s@@ [i-@@ lb@@ +@@ la@@ ]; } s2[@@ ls@@ +lb@@ -@@ la@@ ]='\0'; puts(@@ s2@@ );} if(@@ th@@ ==@@ 200@@ ){ puts(@@ s); } return0; }  
c -1
h -1
structstudent { intnum; int@@ score1@@ ; int@@ score2; intsum; structstudent*next; structstudent*@@ before@@ ; }; main() { inti,n,@@ n1@@ =0,@@ n2@@ =0,@@ n3@@ =0,@@ m1@@ =0,@@ m2@@ =0,@@ m3@@ =0; structstudent*head; structstudent*p1,*p2; scanf("%d",&n); p1=p2=(structstudent*)malloc(LEN); scanf("%d%d%d",&p1->num,&p1->@@ score1@@ ,&p1->@@ score1@@ ); p1->sum=p1->@@ score1@@ +p1->@@ score2; m1@@ =p1->@@ sum; n1@@ =p1->@@ num; head@@ =0; i=0; while(i<=@@ n-2@@ ) { i++; if(i==1) head=p1; else { p1->@@ before@@ =p2; p2->next=p1; } p2=p1; p1=(structstudent*)malloc(LEN); scanf("%d%d%d",&p1->num,&p1->@@ score1@@ ,&p1->@@ score2); p1->sum=p1->@@ score1@@ +p1->@@ score2; if(p1->@@ sum>@@ m3@@ &&@@ p1->@@ sum<=@@ m2@@ ) { m3@@ =p1->@@ sum; n3@@ =p1->@@ num; } if(p1->@@ sum>@@ m2@@ &&@@ p1->@@ sum<=@@ m1@@ ) { m3=@@ m2@@ ; n3@@ =@@ n2; m2@@ =p1->@@ sum; n2@@ =p1->@@ num; } if(p1->@@ sum>@@ m1@@ ) { m3=@@ m2@@ ; n3@@ =@@ n2; m2=@@ m1@@ ; n2@@ =@@ n1@@ ; m1@@ =p1->@@ sum; n1@@ =p1->@@ num; } } printf("%d%d\n",@@ n1,@@ m1@@ ); printf("%d%d\n",@@ n2,@@ m2@@ ); printf("%d%d\n",@@ n3@@ ,@@ m3@@ ); }  
c -1
h -1
0

main() { struct@@ p {@@ char@@ num@@ [100]; intage; }@@ p[@@ 101]; intn,i,j,k,@@ m=0; scanf("%d",&n); for(i=1;i<=@@ n;i++)@@ scanf("%s%d",&@@ p[i].@@ num,&@@ p[i].age); struct@@ q {@@ char@@ num@@ [100]; intage; }@@ q@@ [@@ 101]; for(i=1@@ ,j@@ =1@@ ;i<=@@ n@@ ;i++){@@ if(p@@ [i].age@@ >=60@@ ){@@ strcpy(@@ q@@ [j].@@ num,@@ p[i].@@ num@@ );@@ q@@ [j].age@@ =p@@ [i].age@@ ;j++@@ ;@@ m=m@@ +1;@@ }} for(j=1;j<=m;j++) { for(i=1;i<=@@ m-1;i++) { if(q@@ [i].age@@ <@@ q@@ [i+1@@ ].age) { q@@ [@@ 101@@ ]=@@ q@@ [i]; q@@ [i]=@@ q@@ [i+1]; q@@ [i+1]=@@ q@@ [@@ 101]; } } } printf("%s",@@ q@@ [1].@@ num); for(i=2;i<=@@ m@@ ;i++)@@ printf("\n@@ %s",@@ q@@ [i].num); for(i=1;i<=@@ n;i++)@@ if(p@@ [i].age@@ <60@@ )@@ printf("\n@@ %s",@@ p[i].@@ num); }  
c -1
h -1
intmain() { inta[@@ 20@@ ][@@ 16@@ ],b[@@ 20@@ ]={0},@@ i=0,@@ j,@@ k=0; scanf("%d",&@@ a[0][0]@@ ); i++; while(@@ a[k@@ ][0]@@ !=-1) { do { scanf("%d",&@@ a[k]@@ [i]); i++; } while(@@ a[k]@@ [i-1]@@ !=0); k++; scanf("%d",&@@ a[k@@ ][0]@@ ); i=1; } for(k=0;@@ a[k@@ ][0]@@ !=@@ -1;k++) { for(i=0;@@ a[k]@@ [i]@@ !=0;i++) { for(j=i+1@@ ;@@ a[k]@@ [j]@@ !=0;j++) { if((@@ a[k]@@ [j]@@ /@@ a[k]@@ [i]==@@ 2@@ &&@@ a[k]@@ [j]@@ %@@ a[k]@@ [i]@@ ==0)||(@@ a[k]@@ [i]@@ /@@ a[k]@@ [j]==@@ 2@@ &&@@ a[k]@@ [i]@@ %@@ a[k]@@ [j]@@ ==0)) b[k@@ ]++; } } printf("%d\n",@@ b[k@@ ]); } return0; }  
c -1
h -1
0

int@@ n1,n2,@@ a[@@ 200@@ ],b[100]; void@@ readNum@@ () { inti; scanf("%d%d",&n1,&n2); for(i=0;i<n1;i++) scanf("%d",&a[i]); for(i=0;i<n2;i++) scanf("%d",&b[i]); } void@@ Bubble@@ () { intt,@@ i,j; for(i=@@ n1@@ -1@@ ;i>=1;i--) { for(j=0;j<i;j++) { if(a[j]>a[j+1]) { t=a[j]; a[j]=a[j+1]; a[j+1]=t; } } } for(i=@@ n2@@ -1@@ ;i>=1;i--) { for(j=0;j<i;j++) { if(b[j]>b[j+1]) { t=@@ b[j]; b[j]=b[j+1]; b[j+1]=@@ t; } } } } void@@ gether@@ () { inti; for(i=0;i<n2;i++) a[@@ n1@@ +i]=b[i]; } void@@ printNum@@ () { inti; for(i=0;i<n1@@ +@@ n2;i++) printf("%d@@ %c@@ ",@@ a[i],@@ (i@@ <@@ n1+n2@@ -1)@@ ?'@@ ':@@ '\n@@ '@@ ); } voidmain() { readNum@@ (); Bubble@@ (); gether@@ (); printNum@@ (); }  
c -1
h -1
intmain() { intn,@@ m[@@ 10000@@ ],i,j,@@ x[@@ 10000],@@ z@@ =0,@@ h@@ =1; scanf("%d\n",&n); for(i=1;i<=n;i++) scanf("%d",&@@ x@@ [i@@ -1]); m@@ [0]=@@ x@@ [0]; for(i=2;i<=n;i++) {@@ z=0; for(j=1;j<=@@ i-1;j++) if(x@@ [j-1@@ ]==@@ x@@ [i-1@@ ]) z=1; if(z@@ ==0){@@ m[@@ h@@ ]=@@ x@@ [i-1]; h=@@ h@@ +1;} } for(i=0;i<=@@ h@@ -1;i++) {printf("%d",@@ m[i]); if(i!=@@ h@@ -1)@@ printf("@@ ");} return0; }  
c -1
h -1
0

intmain() { intk,m,n,@@ sz@@ [100][100],@@ i,j,@@ l,@@ sum=0; scanf("%d",&k); for(l=0;l<@@ k;@@ l++){ scanf("%d%d",&m,&n); for(i=0;i<m;i++){ for(j=0;j<n;j++){ scanf("%d",&sz[i][j]); } } for(j=0;j<n;j++){ sum=sum+@@ sz[0]@@ [j]; } for(i=1;i<@@ m;i++){ sum=sum+@@ sz[i]@@ [n-1]; } for(j=0;j<n-1@@ ;j++){ sum=sum+@@ sz[m@@ -1][j]; } for(i=1;i<@@ m-1@@ ;i++){ sum=sum+@@ sz[i]@@ [0]; } printf("%d\n",sum); sum=0; } return0; }  
c -1
h -1
intmain() { intk,@@ j=0,@@ y,@@ i,@@ m,@@ d,@@ number@@ [12]={31,28,31,30,31,30,31,31,30,31,30,31}; scanf("%d%d%d",&y,&m,&d); for(i=1;i<m;i++) {@@ j@@ +=@@ number@@ [i-1]@@ ;} k@@ =j@@ +d; if(y%@@ 4==0&&y%100!=0@@ ||@@ y%@@ 400@@ ==0){ if(m@@ >1) printf("%d",@@ k@@ +1@@ );} else printf("%d",k); return0; }  
c -1
h -1
0

intmain() { intk,@@ n,m,@@ i,j,@@ l,@@ sum1@@ =0,@@ sum2@@ =0,@@ sum3@@ =0,@@ sum4@@ =0; inta[100][100]; scanf("%d",&k); for(l=0;l<@@ k;@@ l++) { scanf("%d%d",&m,&n); for(i=0;i<m;i++) { for(j=0;j<n;j++) { scanf("%d",&a[i][j]); } } for(j=0;j<n;j++) { sum1@@ =@@ sum1@@ +@@ a[0][j]; if((@@ m-1)@@ !=0) sum2@@ =@@ sum2@@ +@@ a[m-1][j]; } for(i=1;i<m-1;i++) { sum3@@ =@@ sum3@@ +@@ a[i][0]; if((@@ n-1)@@ !=0) sum4@@ =@@ sum4@@ +@@ a[i][n-1]; } printf("%d\n",@@ sum1@@ +@@ sum2@@ +@@ sum3@@ +@@ sum4@@ ); sum1@@ =0; sum2@@ =0; sum3@@ =0; sum4@@ =0; } }  
c -1
h -1
intmain() { intn,@@ i=0,@@ a[@@ 1000][1000],@@ row,col,@@ m,@@ p,q,@@ b[@@ 1000],@@ c[@@ 1000]; scanf("%d",&n); for(row=0;row<n;@@ row++) { for(col=0;col<n;col@@ ++) { scanf("%d",&a[@@ row][col@@ ]); if(a[@@ row][col@@ ]==0) { b[i]=@@ row; c[i]=@@ col; i++; } } } q@@ =i-1; m=@@ b[@@ q@@ ]-@@ b[0]@@ -1; p=@@ c[@@ q@@ ]-@@ c@@ [0]@@ -1; printf("%d",m@@ *p@@ ); return0; }  
c -1
h -1
0

structbook { intnum; char@@ edit@@ [26]; structbook*next; }; intm; structbook@@ *head,*p1,*p2; structbook*@@ creat@@ (void) { p1=(structbook@@ *)malloc(len); scanf("%d%s",&p1->num,p1->@@ edit@@ ); head=p1; p2=p1; m=@@ m-1@@ ; do { p1=(structbook@@ *)malloc(len); scanf("%d%s",&p1->num,p1->@@ edit@@ ); p1->next=NULL; p2->next=p1; p2=p1; m=@@ m-1@@ ; }while(@@ m); return(head); } voidmain() { intmax=0,@@ i=0,@@ j,@@ k@@ [26]={0}; structbook@@ *head,*p; scanf("%d",&m); head=creat(); for(p=head@@ ;p!=NULL;@@ ) { for(i=0;@@ p->@@ edit@@ [i]@@ !=0;i++) k@@ [@@ (p->@@ edit@@ [i])@@ -65@@ ]@@ +=1; p=p->next; } for(i=0;i<26;i++) if(k@@ [i]@@ >max){max=@@ k@@ [i]@@ ;j@@ =i;} printf("%c\n%d\n",@@ j@@ +65@@ ,max); for(p=head@@ ;p!=NULL;@@ ) { for(i=0;@@ p->@@ edit@@ [i]@@ !=0;i++) if(p->@@ edit@@ [i]==@@ j@@ +65@@ )@@ printf("%d\n",p->num); p=p->next; } }  
c -1
h -1
intmain(){ chars@@ [100@@ ]={'\0'},@@ w@@ [50@@ ]={'\0'},@@ d[@@ 50@@ ]={'\0'},@@ h@@ [100@@ ]={'\0'}; inti,j,@@ k=0,@@ t=0,@@ m,@@ n=0; gets(s); gets(@@ w); gets(@@ d); for(i=0;s[i]@@ !='\0';i++){ if((@@ s@@ [i]==@@ w@@ [0]@@ )&&(@@ n@@ ==0)@@ ){ k=0; for(j=0;@@ w@@ [j]@@ !='\0';j++){ t=0; if(w@@ [j]==@@ s[i+j@@ ]){ k++; t=1; } } if(t@@ ==1){ for(m@@ =0;d@@ [m]@@ !='\0'@@ ;m++){ printf("%c",@@ d@@ [m]@@ );@@ }@@ i@@ =i+@@ k;@@ n=1; } } if(s@@ [i]!=@@ '\0')@@ {@@ printf("%c",@@ s[i]@@ );} } }  
c -1
h -1
0

struct{ intnum; char@@ w@@ [26]; }@@ book[@@ 999@@ ],@@ test@@ [1]; intmain(intargc,char*argv[]) { intm,i,j,@@ n,@@ s; char@@ x,@@ c; scanf("%d",&m); for(i=0;i<m;i++) { scanf("%d%s",&book[i].num,@@ book[i].@@ w); } x@@ ='A'; n=0; c@@ ='A'; while(1) { s=0; for(i=0;i<m;i++) { for(j=0;j<strlen(@@ book[i].@@ w@@ );j++) { if(book[i].@@ w@@ [j]==@@ x) {@@ s@@ ++;} } } if(s@@ >n) { n=@@ s; c=@@ x; } if(x@@ =='@@ Z@@ ')@@ {break;} x++; } printf("%c\n%d\n",@@ c,@@ n); for(i=0;i<m;i++) { for(j=0;j<strlen(@@ book[i].@@ w@@ );j++) { if(book[i].@@ w@@ [j]==@@ c) { printf("%d\n",book[i].@@ num); } } } return0; }  
c -1
h -1
intmain() { int@@ p[@@ 15],@@ m,n; inti,j,k,@@ h; for(i=0;;i++) { n=0; for(j=0;;j++) { scanf("%d",&m); if(m@@ ==0)break; if(m==@@ -1)@@ return0; p@@ [j]=@@ m; } for(k=0;k<j@@ ;k++) { for(h=0;h@@ <j@@ ;@@ h++) { if(p@@ [k]==@@ 2@@ *p@@ [h@@ ])@@ n++; } } printf("%d\n",n); } return0; }  
c -1
h -1
0

voidinput@@ (int@@ ,int@@ ,int@@ *,@@ int*@@ ); voidpaixu@@ (int@@ *,@@ int@@ ); voidoutput@@ (int@@ ,int@@ ,int@@ *,@@ int*@@ ); intmain() { int@@ num1,num2@@ ,@@ shu1@@ [@@ 10000],@@ shu2@@ [@@ 10000]; cin>>@@ num1@@ >>@@ num2@@ ; input@@ (@@ num1,num2@@ ,@@ shu1@@ ,@@ shu2@@ ); paixu(@@ shu1@@ ,@@ num1@@ ); paixu(@@ shu2@@ ,@@ num2@@ ); output@@ (@@ num1,num2@@ ,@@ shu1@@ ,@@ shu2@@ ); cin.get@@ ();@@ cin.get@@ ();@@ cin.get@@ ();@@ cin.get(); return0; } voidinput@@ (intm,@@ intn,@@ int@@ shu1@@ [],int@@ shu2@@ []) { inti; for(i=0;i<m;i++)@@ cin>>@@ shu1@@ [i]; for(i=0;i<n;i++)@@ cin>>@@ shu2@@ [i]; } voidpaixu@@ (int@@ shu@@ [],int@@ m) { inti,j,temp; for(i=0;i<m-1;i++) { for(j=0;j<m@@ -i-1;j++) { if(@@ shu@@ [j]>@@ shu@@ [j+1]) { temp=@@ shu@@ [j+1]; shu@@ [j+1]=@@ shu@@ [j]; shu@@ [j]=temp; } } } } voidoutput@@ (intm,@@ intn,@@ inta[@@ ],intb[@@ ]) { inti; for(i=0;i<m;i++)@@ cout<<a[i]<<""; for(i=0;i<n@@ -1;i++)@@ cout<<b[i]<<""; cout<<b[@@ n-1]; }  
c -1
h -1
intmain() {int@@ l,@@ m,n,@@ t,@@ i,@@ s; scanf("%d%d%d",&@@ l@@ ,&@@ m,&n); if(l@@ %4==0&&@@ l@@ %@@ 100!=0) t=@@ 29; if(l@@ %@@ 4@@ !=0) t=@@ 28; if(l@@ %@@ 100==0&&@@ l@@ %@@ 400@@ !=0) t=@@ 28; if(l@@ %@@ 400==0) t=@@ 29; inta[@@ 13]={0,31,@@ t@@ ,31,30,31,30,31,31,30,31,30,31}; if(m==1) s=@@ n; else s=@@ n; for(i=1;i<m;i++) {@@ s=s+@@ a[i];} printf("%d",s); return0; }  
c -1
h -1
0

inta; int@@ fj@@ (intx,int@@ y); intmain() { intn; cin>>n; inti; for(i=1;i<=n;i++) { cin>>a; cout<<@@ fj@@ (a,@@ 2)<<endl; } return0; } int@@ fj@@ (intx,inty) { int@@ xnumber@@ =1; inti; int@@ b=@@ sqrt(@@ x); if(x@@ ==1)@@ return0; else for(i=y@@ ;i<=@@ b;i++) { if(x@@ %i==0)@@ xnumber@@ =@@ xnumber@@ +@@ fj@@ (x/i,i); } return@@ xnumber@@ ; }  
c -1
h -1
intmain() { inti,j,@@ p,@@ changdu1@@ ,@@ changdu2@@ ,@@ changdu3@@ ,@@ m; char@@ x@@ [256@@ ]={0},@@ y@@ [256@@ ]={0},@@ z[@@ 513@@ ]={0},@@ media@@ [256@@ ][@@ 256@@ ]={0}; scanf("%s",@@ x); scanf("%s",@@ y); scanf("%s",@@ z); changdu1@@ =strlen(@@ x); changdu2@@ =strlen(@@ y); changdu3@@ =strlen(@@ z); if(@@ changdu1@@ <@@ changdu2@@ ); else { for(i=0;i<@@ changdu1@@ -@@ changdu2@@ +1;i++) { for(j=0;j<@@ changdu2@@ ;j++) media@@ [i][j]=@@ x@@ [i+j@@ ]; } for(i=0;i<@@ changdu1@@ -@@ changdu2@@ +1;i++) { if(strcmp(@@ media@@ [i],@@ y)@@ ==0) { p=i; break; } } if(i==@@ changdu1@@ -@@ changdu2@@ +1) { printf("%s",@@ x); return0; } else { strcpy(@@ media@@ [p@@ ],@@ z); if(p@@ !=0) { for(i=0;i<p@@ ;i++) printf("%c",@@ x[i]); printf("%s",@@ media@@ [p@@ ]); if(@@ changdu2@@ >@@ changdu3@@ )@@ m=@@ changdu2@@ ; else@@ m=@@ changdu3@@ ; for(i=@@ p@@ +m@@ ;i<@@ changdu1@@ ;i++) printf("%c",@@ x[i]); printf("\n"); } else { printf("%s",@@ media@@ [p@@ ]); for(i=@@ p+@@ changdu3@@ ;i<@@ changdu1@@ ;i++) printf("%c",@@ x[i]); printf("\n"); } } } return0; }  
c -1
h -1
0

voidmain() { inta,b,@@ n,@@ j,@@ i,@@ k@@ ,*@@ hi@@ ,@@ col,@@ row,@@ s,@@ max; scanf("%d%d",&row,&col); s=@@ row@@ *@@ col; int*p=@@ (int*)malloc(@@ 10000@@ *sizeof(int)); hi@@ =p; if(col@@ >@@ row@@ )max=@@ col; else@@ max=@@ row; for(i=0;i<@@ s;i++) scanf("%d",p@@ +i); for(j=0;j<col@@ +row@@ ;j++) for(k=0;k<=@@ j@@ ;k++) if(j@@ -k@@ <col@@ &&k@@ <row) printf("%d\n",*(@@ hi@@ +j@@ -k@@ +col@@ *@@ k@@ )); }  
c -1
h -1
structstu { intid; int@@ Chinese@@ ; intmath; }a[@@ 100000]; voidmain() { intn,i,@@ first@@ ,@@ second@@ ,@@ third@@ ,@@ h1@@ =0,@@ h2@@ =0,@@ h3@@ =0,@@ e; scanf("%d",&n); for(i=0;i<n;i++) { scanf("%d%d%d",&a[i].@@ id,&@@ a[i].@@ Chinese@@ ,&a[i].@@ math); } first@@ =0; second@@ =0; third@@ =0; for(i=0;i<n;i++) { if(@@ first@@ <(@@ a[i].@@ Chinese@@ +a[i].@@ math@@ )) { third=second@@ ; h3@@ =@@ h2@@ ; second=@@ first@@ ; h2@@ =@@ h1@@ ; first=@@ a[i].@@ Chinese@@ +a[i].@@ math; h1@@ =@@ a[i].@@ id; } elseif(@@ first@@ ==@@ (@@ a[i].@@ Chinese@@ +a[i].@@ math@@ )&&@@ first@@ >@@ second@@ ) { third=second@@ ; h3@@ =@@ h2@@ ; h2@@ =@@ a[i].@@ id; second=@@ a[i].@@ Chinese@@ +a[i].@@ math; } elseif(@@ first@@ ==@@ (@@ a[i].@@ Chinese@@ +a[i].@@ math@@ )&&@@ first@@ ==@@ second@@ &&@@ second@@ >@@ third@@ ) { third=@@ a[i].@@ Chinese@@ +a[i].@@ math; h3@@ =@@ a[i].@@ id; } elseif(@@ first@@ >@@ (@@ a[i].@@ Chinese@@ +a[i].@@ math@@ )&&@@ second@@ <(@@ a[i].@@ Chinese@@ +a[i].@@ math@@ )) { third=second@@ ; h3@@ =@@ h2@@ ; second=@@ a[i].@@ Chinese@@ +a[i].@@ math; h2@@ =@@ a[i].@@ id; } elseif(@@ second@@ >@@ (@@ a[i].@@ Chinese@@ +a[i].@@ math@@ )&&@@ third@@ <(@@ a[i].@@ Chinese@@ +a[i].@@ math@@ )) { third=@@ a[i].@@ Chinese@@ +a[i].@@ math; h3@@ =@@ a[i].@@ id; } } printf("%d%d\n%d%d\n%d@@ %d",@@ h1@@ ,@@ first@@ ,@@ h2@@ ,@@ second@@ ,@@ h3@@ ,@@ third@@ ); }  
c -1
h -1
0

int@@ digui@@ (intx,int@@ min); intmain() { intn,i,@@ m,@@ y; scanf("%d",&n); for(i=0;i<=n-1;i++) { scanf("%d",&m); y=@@ digui@@ (m,@@ 2); printf("%d\n",@@ y); } return0; } int@@ digui@@ (intx,int@@ min) { inti,@@ result; result=1; if(x@@ <@@ min) { return0; } for(i=min@@ ;i<=@@ x@@ -1;i++) { if(x%i==0) { result=result+@@ digui@@ (x/i,i); } } returnresult; }  
c -1
h -1
intmain(){ double@@ a,b,@@ n; inti; char@@ A@@ [1000],@@ B@@ [1000]; scanf("%lf",&n); scanf("%s\n@@ %s",@@ A@@ ,@@ B@@ ); a=strlen(@@ A@@ ); b=strlen(@@ B@@ ); if(a!=@@ b){ printf("error"); return0; } for(i=0,@@ b@@ =0;i<@@ a;i++){ if((@@ A@@ [i]!='A'&&@@ A@@ [i]!='T'&&@@ A@@ [i]!='C'&&@@ A@@ [i]!='G')||(@@ B@@ [i]!='A'&&@@ B@@ [i]!='T'&&@@ B@@ [i]!='C'&&@@ B@@ [i]!='G')){ printf("error"); return0; } if(A@@ [i]==@@ B@@ [i]){ b++; } } a=@@ b@@ /@@ a; if(a@@ >=@@ n){ printf("yes"); } else{printf("no");} return0; }  
c -1
h -1
0

voidmain() { introw,col,@@ array@@ [100][100],@@ i,j,k; scanf("%d%d",&row,&col); for(i=0;i<row;i++) { for(j=0;j<col;j++) { scanf("%d",&array@@ [i][j]); } } if((i@@ ==1@@ )&&(@@ j@@ ==1@@ )) printf("%d\n",@@ array[@@ 0][@@ 0]@@ ); else { for(j=0;j<col;j++) { k=j; for(i=0;i<row;i++) { if(k@@ <0) break; printf("%d\n",array@@ [i]@@ [k]); k--; } } for(i=1;i<row;i++) { k=@@ col-1; for(j=i;j<@@ row@@ ;j++) { if(k@@ <0) break; printf("%d\n",array@@ [j]@@ [k]); k--; } } } }  
c -1
h -1
intn,m,@@ a[@@ 1000],b[1000],@@ c[@@ 2000]; voidf1@@ (void) { inti; scanf("%d%d",&n,&m); for(i=0;i<n;i++) scanf("%d",&a[i]); for(i=0;i<m;i++) scanf("%d",&b[i]); } voidf2@@ (void) { inti,j,@@ p; for(i=1;i<n;i++) { for(j=0;j<n-i;j++) { if(a[j]>a[j+1]) { p=@@ a[j]; a[j]=a[j+1]; a[j+1]=@@ p; } } } for(i=1;i<m;i++) { for(j=0;j<m@@ -i;j++) { if(b[j]>b[j+1]) { p=@@ b[j]; b[j]=b[j+1]; b[j+1]=@@ p; } } } } void@@ f3@@ (void) { inti; for(i=0;i<n;i++) c[i]=a[i]; for(i=n@@ ;i<@@ n+m;i++) c[i]=b[i-@@ n]; } void@@ f4@@ (void) { inti,@@ count=0; for(i=0;i<n@@ +@@ m;i++) { if(count@@ ==0) { printf("%d",c[i]); count++; } else printf("%d",c[i]); } printf("\n"); } intmain() { f1@@ (); f2@@ (); f3@@ (); f4@@ (); return0; }  
c -1
h -1
0

intmain() {int@@ sum@@ (intx,int@@ y); intk,i,@@ m,n; scanf("%d",&k); for(i=1;i<=k;i++) {@@ scanf("%d%d",&m,&n); printf("%d\n",sum@@ (m,@@ n@@ )); } return0; } intsum@@ (intx,inty) {@@ intb[100@@ ][100]; intsum=0,@@ i,j; for(i=0;i<x;i++) for(j=0;j<@@ y;j++) scanf("%d",&@@ b[i]@@ [j]); for(i=0;i<x;i++) for(j=0;j<@@ y;j++) if(i==0||i==@@ (x@@ -1)@@ ||j@@ ==0||j==@@ (y@@ -1)) sum=sum+@@ b[i]@@ [j]; return(@@ sum); }  
c -1
h -1
intmain() { intn,i,j,k,@@ p,@@ t; inta[@@ 20002@@ ]; cin>>n; cin>>a[0]; p=0; for(i=1;i<=n-1;i++) { cin>>k; t=0; for(j=0;j<=@@ p@@ ;j++) { if(a[j]==@@ k) { t=1; break; } } if(t@@ ==1)@@ continue; else { p=p@@ +1; a[p@@ ]=@@ k; } } cout<<a[0]; for(i=1;i<=@@ p@@ ;i++) { cout<<""<<a[i]; } cout<<endl; return0; }  
c -1
h -1
0

voidmain() { intn,i,j,k; int@@ at@@ [26]={0}; charc; scanf("%d",&n); struct@@ st { intid; chars[@@ 27]; }a[@@ 999@@ ]@@ ,*p; for(p=@@ a@@ ;p<@@ a+@@ n;@@ p@@ ++)@@ scanf("%d%s",&@@ p->@@ id,@@ p->@@ s); for(i=0;i<n;i++) { for(j=0;;j++) { c=@@ a[i].@@ s[j]; if(c@@ !=@@ '\0')@@ at@@ [c@@ -65]++; elsebreak; } } intmax=0; for(i=0;i<26;i++) { if(@@ at@@ [i]>max) { max=@@ at@@ [i]; j=i; } } char@@ x; x@@ =j@@ +65; printf("%c\n%d\n",@@ x,@@ max); for(i=0;i<n;i++) { for(j=0;;j++) { c=@@ a[i].@@ s[j]; if(c==@@ x)@@ printf("%d\n",@@ a[i].@@ id); if(c==@@ '\0')@@ break; } } }  
c -1
h -1
intmain(){ inta[@@ 1000],@@ n,k,@@ i,j; scanf("%d%d",&n,&k); for(i=0;i<=n-1;i++) scanf("%d",&a[i]); for(i=0;i<n-1;i++){ for(j=1@@ +i@@ ;j<=@@ n-1@@ ;j++){ if(a[i]+a[j]==@@ k){ printf("yes"); return0;} if(i==@@ n-2@@ &&j@@ ==@@ n-1){ printf("no"); return0@@ ;@@ }}} }  
c -1
h -1
0

int@@ function@@ (int@@ num,int@@ k) { intj; intm=0; if(num@@ >1) {@@ for(j=k@@ ;j<=@@ num@@ ;j++) {@@ if(num@@ %j==0) {@@ m=m+@@ function@@ (@@ num@@ /j@@ ,j@@ );} } return@@ m; } else return1; } intmain() {@@ inti,j; intn; cin>>n; intnum@@ [100]; for(i=0;i<n;i++) {@@ cin>>@@ num[i]@@ ;} for(i=0;i<n;i++) {@@ cout<<@@ function@@ (@@ num@@ [i],@@ 2)<<endl; } return0; }  
c -1
h -1
intmain() { inta[@@ 1000],b[1000],@@ i,j,k,@@ n,@@ q=0; scanf("%d%d",&n,&k); for(i=1;i<=n;i++) scanf("%d",&a[i]); for(i=1;i<=n;i++) b[i]=@@ a[i]; for(i=1;i<=n;i++) {@@ for(j=1;j<=n;j++) if(a[i]+@@ b[j]@@ ==k) q@@ ++;} if(q@@ ==0)@@ printf("no"); else@@ printf("yes"); }  
c -1
h -1
0

intmain() { int@@ sum,@@ i,@@ j1@@ ,j,@@ n,@@ c,@@ k; inta[100][100]; scanf("%d",&n); int(*p)@@ [100@@ ]=a; for(i=1;i<=n;i++) { sum=0; scanf("%d%d",&@@ c@@ ,&@@ k); for(j=0;j<@@ c;j++) { for(@@ j1@@ =0;@@ j1@@ <k;@@ j1@@ ++) { scanf("%d",&a[j]@@ [@@ j1@@ ]); } } for(j=1;j<@@ k@@ -1;j++) sum+=*(@@ *p@@ +j)@@ +*(@@ *(p@@ +c@@ -1)@@ +j); if(k@@ >1) for(j=0;j<@@ c;j++) sum+=@@ *(*(p@@ +j)@@ )@@ +*(@@ *(p+j)@@ +k@@ -1); else for(j=0;j<@@ c;j++) sum+=@@ *(*(p@@ +j)); printf("%d\n",sum); } return0; }  
c -1
h -1
intmain() { inta,b,@@ c,d,@@ e,f,@@ g,@@ h,@@ i,j,k,@@ l,@@ m,n,@@ o@@ ,@@ p,q,@@ r,@@ s,@@ t,@@ u@@ ,@@ v@@ ,@@ w,@@ x; scanf("%d%d%d",&a,&b,&c); d@@ =31+c; e=@@ 59@@ +c; f=@@ 90@@ +c; g=@@ 120@@ +c; h=@@ 151@@ +c; i=@@ 181@@ +c; j=@@ 212@@ +c; k=@@ 243@@ +c; l=@@ 273@@ +c; m=@@ 304@@ +c; n=@@ 334@@ +c; o@@ =@@ 60@@ +c; p=@@ 91@@ +c; q=@@ 121@@ +c; r=@@ 152@@ +c; s=@@ 182@@ +c; t=@@ 213@@ +c; u@@ =@@ 244@@ +c; v@@ =@@ 274@@ +c; w=@@ 305@@ +c; x=@@ 335@@ +c; if(b==1) printf("%d",@@ c); if(b==@@ 2) printf("%d",d); if((@@ b==@@ 3@@ )&&(@@ a%100!=0@@ &&@@ a%@@ 4!=0@@ ||a%@@ 100==0&&@@ a%@@ 400!=0)) printf("%d",@@ e); if((@@ b==@@ 4@@ )&&(@@ a%100!=0@@ &&@@ a%@@ 4!=0@@ ||a%@@ 100==0&&@@ a%@@ 400!=0)) printf("%d",@@ f); if((@@ b==@@ 5@@ )&&(@@ a%100!=0@@ &&@@ a%@@ 4!=0@@ ||a%@@ 100==0&&@@ a%@@ 400!=0)) printf("%d",@@ g@@ ); if((@@ b==@@ 6@@ )&&(@@ a%100!=0@@ &&@@ a%@@ 4!=0@@ ||a%@@ 100==0&&@@ a%@@ 400!=0)) printf("%d",@@ h); if((@@ b==@@ 7@@ )&&(@@ a%100!=0@@ &&@@ a%@@ 4!=0@@ ||a%@@ 100==0&&@@ a%@@ 400!=0)) printf("%d",@@ i); if((@@ b==@@ 8@@ )&&(@@ a%100!=0@@ &&@@ a%@@ 4!=0@@ ||a%@@ 100==0&&@@ a%@@ 400!=0)) printf("%d",@@ j); if((@@ b==@@ 9@@ )&&(@@ a%100!=0@@ &&@@ a%@@ 4!=0@@ ||a%@@ 100==0&&@@ a%@@ 400!=0)) printf("%d",k); if((@@ b==@@ 10@@ )&&(@@ a%100!=0@@ &&@@ a%@@ 4!=0@@ ||a%@@ 100==0&&@@ a%@@ 400!=0)) printf("%d",@@ l); if((@@ b==@@ 11@@ )&&(@@ a%100!=0@@ &&@@ a%@@ 4!=0@@ ||a%@@ 100==0&&@@ a%@@ 400!=0)) printf("%d",m); if((@@ b==@@ 12@@ )&&(@@ a%100!=0@@ &&@@ a%@@ 4!=0@@ ||a%@@ 100==0&&@@ a%@@ 400!=0)) printf("%d",n); if((@@ b==@@ 3@@ )&&(@@ a%100!=0@@ &&@@ a%@@ 4@@ ==0||@@ a%400==0)) printf("%d",@@ o@@ ); if((@@ b==@@ 4@@ )&&(@@ a%100!=0@@ &&@@ a%@@ 4@@ ==0||@@ a%400==0)) printf("%d",@@ p); if((@@ b==@@ 5@@ )&&(@@ a%100!=0@@ &&@@ a%@@ 4@@ ==0||@@ a%400==0)) printf("%d",@@ q); if((@@ b==@@ 6@@ )&&(@@ a%100!=0@@ &&@@ a%@@ 4@@ ==0||@@ a%400==0)) printf("%d",@@ r); if((@@ b==@@ 7@@ )&&(@@ a%100!=0@@ &&@@ a%@@ 4@@ ==0||@@ a%400==0)) printf("%d",s); if((@@ b==@@ 8@@ )&&(@@ a%100!=0@@ &&@@ a%@@ 4@@ ==0||@@ a%400==0)) printf("%d",t); if((@@ b==@@ 9@@ )&&(@@ a%100!=0@@ &&@@ a%@@ 4@@ ==0||@@ a%400==0)) printf("%d",@@ u@@ ); if((@@ b==@@ 10@@ )&&(@@ a%100!=0@@ &&@@ a%@@ 4@@ ==0||@@ a%400==0)) printf("%d",@@ v@@ ); if((@@ b==@@ 11@@ )&&(@@ a%100!=0@@ &&@@ a%@@ 4@@ ==0||@@ a%400==0)) printf("%d",@@ w); if((@@ b==@@ 12@@ )&&(@@ a%100!=0@@ &&@@ a%@@ 4@@ ==0||@@ a%400==0)) printf("%d",x); return0; }  
c -1
h -1
0

intmain() { intnumber@@ [@@ 101][101]; introw,col; cin>>row>>col; inti,j; for(i=0;i<row;i++) { for(j=0;j<col;j++) { cin>>@@ *(*(@@ number@@ +i)@@ +j); } } intk; for(i=0;i<@@ row+col@@ -1;i++) { j=0; for(j=0@@ ;i@@ -j@@ >=0@@ ;j++) { if(j@@ >=@@ row@@ ||@@ i@@ -j@@ >=@@ col) continue; cout<<@@ *(*(@@ number@@ +j)@@ +i-j@@ )<<endl; } } return0; }  
c -1
h -1
int@@ sum[@@ 1000000@@ ]; structstudent{ intid; int@@ Gra@@ [2]; }stu[@@ 1000000@@ ]; intmain() { intn; cin>>n; for(inti=0;i<n;i++) { cin>>@@ stu[i].@@ id@@ >>stu[i].@@ Gra@@ [0]@@ >>stu[i].@@ Gra@@ [1]; sum[i]=@@ stu[i].@@ Gra@@ [0]@@ +stu[i].@@ Gra@@ [1]; } intmax=0,@@ imax@@ =0; for(inti=0;i<@@ 3;i++) {@@ max=0; for(intj=0;j<n;j++) if(max<@@ sum@@ [j]@@ ){max=@@ sum@@ [j];@@ imax@@ =j;} cout<<@@ stu[@@ imax@@ ].@@ id@@ <<""<<@@ sum[@@ imax@@ ]<<endl; sum[@@ imax@@ ]=0; } return0; }  
c -1
h -1
0

intmain() { int@@ flag@@ [100]={0},@@ i,n,@@ temp; cin>>n; cin>>@@ temp; flag@@ [@@ temp@@ ]=1; cout<<@@ temp; for(i=1;i<n;i++) { cin>>@@ temp; if(flag@@ [@@ temp@@ ]==0) { cout<<""<<@@ temp; flag@@ [@@ temp@@ ]=1; } } return0; }  
c -1
h -1
intmain() { structstudent{ intnum; int@@ yw@@ ; int@@ sx; int@@ all@@ ; }@@ student[@@ 4@@ ]={0@@ ,@@ 0,0,@@ 0@@ }; structstudent@@ temp=@@ {@@ 0,0,@@ 0,@@ 0@@ }; inti,@@ l,@@ n; scanf("%d",&n); for(i=0;i<n;i++) { scanf("%d%d%d",&@@ student@@ [3].@@ num,&@@ student@@ [3].@@ yw@@ ,&@@ student@@ [3].@@ sx@@ ); student@@ [3].@@ all=@@ student@@ [3].@@ yw@@ +@@ student@@ [3].@@ sx; if(@@ student@@ [2].@@ all@@ <@@ student@@ [3].@@ all@@ ) { temp=@@ student@@ [2]; student@@ [2]=@@ student@@ [3]; student@@ [3@@ ]=temp; } if(@@ student@@ [1].@@ all@@ <@@ student@@ [2].@@ all@@ ) { temp=@@ student@@ [1]; student@@ [1]=@@ student@@ [2]; student@@ [2]=@@ temp; } if(@@ student@@ [0].@@ all@@ <@@ student@@ [1].@@ all@@ ) { temp=@@ student@@ [0]; student@@ [0]=@@ student@@ [1]; student@@ [1]=@@ temp; } } for(l=0;l<@@ 3@@ ;l++) { printf("%d%d\n",@@ student@@ [l@@ ].num,@@ student@@ [l@@ ].@@ all@@ ); } }  
c -1
h -1
0

intmain() { chara[@@ 200@@ ],b[@@ 300@@ ],c[@@ 300]; int@@ d=0,@@ i,j,k,@@ m,n,@@ lenb@@ ,@@ lena@@ ; scanf("%s%s%s",a,b,c); lena@@ =strlen(a); lenb@@ =strlen(b); for(i=0;i<@@ lena@@ ;i++) { if(a[i]==@@ b[0]) { for(j=i,@@ k@@ =0;j<@@ i+@@ lenb@@ ,k@@ <@@ lenb@@ ;j++@@ ,k++) { if(a[j]!=@@ b[k@@ ]@@ )break; } if(k==@@ lenb@@ )@@ d=1; } if(d@@ ==1)break; } if(d@@ ==1) { for(m=@@ i,@@ n@@ =0;m@@ <@@ i+@@ lenb@@ ,@@ n@@ <@@ lenb@@ ;m@@ ++,@@ n++) { a[m@@ ]=@@ c[@@ n]; } printf("%s",a); } if(d@@ ==0)@@ printf("%s",a); return0; }  
c -1
h -1
voidmain() { inta,@@ b[100@@ ][100@@ ]={@@ 1@@ }; scanf("%d\n",&@@ a); inti,j; for(i=0;i<=@@ a@@ -1;i++) { for(j=0;j<=@@ a@@ -1;j++) { scanf("%d",&@@ b[i]@@ [j]); }; } int@@ s=0,@@ l=0; for(i=0;i<=@@ a@@ -1;i++) { for(j=0;j<=@@ a@@ -1;j++) { s=s+@@ b[i]@@ [j]; } if(s@@ ==@@ 255@@ *(a@@ -2@@ )) { l=l@@ +1; } s=0; } int@@ t=0,@@ k=0; for(j=0;j<=@@ a@@ -1;j++) { for(i=0;i<=@@ a@@ -1;i++) { t=t+@@ b[i]@@ [j]; } if(t==@@ 255@@ *(a@@ -2@@ )) { k=k+1; } t=0; } int@@ sum=@@ l@@ *@@ k; printf("%d",sum); }  
c -1
h -1
0

intmain() { intn,k,@@ sum; scanf("%d%d",&n,&k); int@@ shu@@ [@@ NUM@@ ]; for(inti=0;i<n;i++) { scanf("%d",&(@@ shu@@ [i]@@ )); } for(intj=0;j<n;j++) { for(int@@ l=@@ n-1;@@ l>@@ j@@ ;@@ l@@ --) { sum=@@ shu@@ [j]+@@ shu@@ [l]; if(sum@@ ==k) { printf("yes"); break; } } if(sum@@ ==@@ k@@ )break; } if(sum@@ !=@@ k)@@ printf("no"); return0; }  
c -1
h -1
intmain() { inta[@@ 15],@@ s,@@ i,j,k,@@ flag=1; while(@@ flag@@ ) { s=0; for(i=0;i<16;i++) { scanf("%d",&a[i]); k=i; if(a[i]==-1) { flag=0; break; } if(a[i]==0)break; } if(flag) { for(i=0;i<k;i++) for(j=0;j<k;j++) { if(a[i]==2*@@ a[j]) s++; } printf("%d\n",s); } } return0; }  
c -1
h -1
0

structbook { intnum; charwriter@@ [26]; }@@ book[1000]; voidmain() { intn,i,j,@@ e,@@ max=0; scanf("%d",&n); char@@ da@@ ,@@ c; int@@ temp@@ [@@ 27@@ ]={0}; for(i=0;i<n;i++) { scanf("%d%s",&book[i].num,@@ book[i].@@ writer); } for(i=0;i<n;i++) { for(@@ da@@ ='A'@@ ;@@ da@@ <=@@ 'Z'@@ ;@@ da@@ ++) { for(j=0;j<26;j++) { if(book[i].@@ writer@@ [j]==@@ da@@ ) temp@@ [@@ da@@ -'@@ A'+@@ 0]@@ ++; } } } for(j=0;j<26;j++) { if(temp@@ [j]@@ >max) { max=@@ temp@@ [j]; } } for(j=0;j<26;j++) { if(temp@@ [j]==@@ max) { c@@ =j@@ +65; printf("%c\n%d\n",@@ c,@@ temp@@ [j]); } } for(i=0;i<n;i++){ for(j=0;j<26@@ ;j++){ if(book[i].@@ writer@@ [j]==@@ c) printf("%d\n",book[i].@@ num); } } }  
c -1
h -1
intmain() { charb[@@ 256],@@ a[@@ 256],c[256]; intm,n,i,j,@@ d; scanf("%s",a); scanf("%s",b); scanf("%s",c); m=strlen(a); n@@ =strlen(b); for(i=0;i<m;i++) { d=1; for(j=0;j<n;j++) { if(b[j]@@ !=@@ a@@ [j+i@@ ]) d=0; } if(d@@ ==1) {@@ for(j=0;j<n;j++) {@@ a[i+j@@ ]=@@ c[j]; } break;} } printf("%s",a); getchar();getchar();getchar();getchar();@@ getchar();getchar();@@ getchar(); getchar();getchar();getchar();getchar();@@ getchar();getchar();@@ getchar(); getchar();getchar();getchar();getchar();@@ getchar();getchar();@@ getchar(); }  
c -1
h -1
0

intmain(){ intn,m,@@ sz[@@ 1000],@@ k,i,j,@@ s,@@ t; scanf("%d%d",&n,&k); for(i=0;i<n;i++){ scanf("%d",&(sz[i]@@ )); } m=@@ n@@ *(@@ n-1); int*@@ h =@@ (int*)malloc(sizeof(int)@@ *@@ m); s=0; t=0; for(i=0;i<n;i++){ for(j=0;j<n@@ &&j@@ !=@@ i;j++){ h@@ [s@@ ]=@@ sz[i]@@ +sz@@ [j]; s++; } } for(i=0;i<@@ s@@ ;i++){ if(h@@ [i]==@@ k){ t++; } } if(t@@ ==0){ printf("no"); }else{ printf("yes"); } free(@@ h); return0; }  
c -1
h -1
intmain() { inta,b,@@ i,j,@@ count=0,@@ k; charstring@@ [256],@@ substring@@ [256],@@ replacement@@ [256],@@ czy@@ [256],@@ cai@@ [256]; gets(@@ string); gets(@@ substring); gets(@@ replacement); a=strlen(@@ string); b=strlen(@@ substring); for(i=0;i<a;i++) { if(string@@ [i]==@@ substring@@ [0]) { for(j=0;j<@@ b;j++) czy@@ [j]=@@ string@@ [i+j@@ ]; if(strcmp(@@ czy@@ ,@@ substring@@ )@@ ==0) { count@@ =1; for(k=0;k<i;k++) cai@@ [k]=@@ string@@ [k]; for(k=i@@ ;k<@@ i+@@ b@@ ;k++) cai@@ [k]=@@ replacement@@ [k-i@@ ]; for(k=i+@@ b@@ ;k<@@ a@@ ;k++) cai@@ [k]=@@ string@@ [k]; } if(count@@ ==1) break; } } if(count@@ ==1) puts(@@ cai@@ ); else puts(@@ string); }  
c -1
h -1
0

intmain(){ intk,@@ m,n; inta,b,@@ c,d,@@ s; a=@@ b=@@ c=@@ d=0; scanf("%d",&k); for(inti=0;i<@@ k;i++){ scanf("%d%d",&m,&n); intsz[@@ m@@ ][n]; for(intp@@ =0;p@@ <m@@ ;p++){ for(int@@ q@@ =0;q@@ <n;@@ q@@ ++){ scanf("%d",&@@ sz[@@ p@@ ][q@@ ]); } }@@ if(m@@ !=1@@ &&n@@ !=1@@ ){ for(int@@ e@@ =0;e@@ <n;@@ e@@ ++){ a=@@ a+@@ sz[0][@@ e@@ ]; b=@@ b+@@ sz[@@ m-1][@@ e@@ ]; } for(intj=1;j<@@ m-1@@ ;j++){ c=@@ c+@@ sz[j]@@ [n-1]; d=d+@@ sz[j]@@ [0]; } s=@@ a+@@ b+@@ c+@@ d; printf("%d\n",s); s=@@ a=@@ b=@@ c=@@ d@@ =0;} else{@@ printf("%d",@@ sz[0][@@ 0]@@ );} }@@ return0; }  
c -1
h -1
intmain() { intN@@ ,@@ i,j; scanf("%d",&N); inta[100],b[100],@@ max=0; memset@@ (b,@@ 0,sizeof(@@ b@@ )); for(i=0;i<N;i++) { scanf("%d",&a[i]); } for(i=0;i<N;i++) { for(j=0;j<i;j++) { if(a[i]<=@@ a[j]) b[i]@@ =(@@ b[j]@@ +1)@@ >@@ b[i]@@ ?@@ (@@ b[j]@@ +1)@@ :@@ b[i]; } max=@@ max@@ >@@ b[i]@@ ?@@ max@@ :@@ b[i]; } printf("%d",@@ max@@ +1); }  
c -1
h -1
0

intmain() { inti,j,k,@@ flag=0; charstr@@ [@@ 512@@ ],@@ substr@@ [256],@@ replace@@ [256]; cin.getline(@@ str,@@ 512@@ ); cin.getline(@@ substr@@ ,@@ 256); cin.getline(@@ replace@@ ,@@ 256); int@@ len1=strlen(@@ str); int@@ len2=strlen(@@ substr@@ ); int@@ len3@@ =strlen(@@ replace); for(i=0;i<=@@ len1@@ -len2@@ ;i++) { k=i; for(j=0;j<len2@@ ;j++) { if(str@@ [k@@ ++@@ ]!=@@ substr@@ [j]) break; } if(j==@@ len2@@ &&@@ flag@@ ==0) { int@@ ii@@ ; for(@@ ii@@ =i;@@ ii@@ <@@ i+@@ len3@@ ;@@ ii@@ ++) { str@@ [@@ ii@@ ]=@@ replace@@ [@@ ii@@ -i@@ ]; } flag=1; } } for(i=0;@@ str@@ [i]!='\0';i++) { cout<<str@@ [i]; } return0; }  
c -1
h -1
intmain(intargc,char*argv[]) { intn=0; intyear,month,day; scanf("%d%d%d",&year,&month,&day); if(month@@ ==1)@@ n=n+@@ day; elseif(month==@@ 2)@@ n=@@ n@@ +31+@@ day; elseif(month==@@ 3)@@ n=n+@@ 59@@ +day; elseif(month==@@ 4)@@ n=n+@@ 90@@ +day; elseif(month==@@ 5@@ )@@ n=n+@@ 120@@ +day; elseif(month==@@ 6@@ )@@ n=n+@@ 151@@ +day; elseif(month==@@ 7@@ )@@ n=n+@@ 181@@ +day; elseif(month==@@ 8@@ )@@ n=n+@@ 212@@ +day; elseif(month==@@ 9@@ )@@ n=n+@@ 243@@ +day; elseif(month==@@ 10@@ )@@ n=n+@@ 273@@ +day; elseif(month==@@ 11@@ )@@ n=n+@@ 304@@ +day; else{@@ n=n+@@ 334@@ +day@@ ;} if(((@@ (@@ year%@@ 4==0)&&(@@ year%100!=0@@ )@@ )||(@@ year%@@ 400==0)@@ )&&(@@ month@@ >2@@ ))@@ n=n+1; printf("%d",n); return0; }  
c -1
h -1
0

intmain() { int@@ u@@ [1000],@@ v@@ [1000]; inti,j,n,@@ k,@@ a=0; scanf("%d%d",&n,&k); for(i=0;i<n;i++){ scanf("%d",&@@ u@@ [i]); } for(j=0;j<n;j++){ v@@ [j]=@@ u@@ [j]; } for(i=0;i<n;i++){ for(j=0;j<n;j++){ if(i==@@ j){ continue; }else{ if(@@ u@@ [i]+@@ v@@ [j]==k){ a++; }else{ continue; } } } } if(a@@ ==0){ printf("no"); }else{ printf("yes"); } return0; }  
c -1
h -1
intmain() { int@@ c@@ [100][100]; intt; intn=0; intm; int@@ d@@ [100]={0}; int@@ q@@ [100]={0}; inti; int@@ z=0; int@@ x=0; t=0; do { i=0; do { scanf("%d",&@@ c[@@ t@@ ][i]); if(@@ c[@@ t@@ ][0]@@ ==-1) {break;} if(@@ c[@@ t@@ ]@@ [i]==0) {break;} i@@ ++;@@ d[@@ t@@ ]++; }@@ while(i<=@@ 100@@ ); if(@@ c[@@ t@@ ][0]@@ ==-1) {break;} t@@ ++;@@ n++; }while(@@ t@@ <=@@ 100@@ ); do { i=0; do { m=0; do { if((@@ c[@@ z@@ ]@@ [i]@@ *2@@ )==@@ c[@@ z@@ ][m@@ ]) {@@ q@@ [@@ z@@ ]@@ ++;} m++; }while(@@ m@@ <=@@ d[@@ z@@ ]@@ -1); i++; }@@ while(i<=@@ d[@@ z@@ ]@@ -1); z@@ ++; }while(@@ z@@ <=@@ n-1); while(@@ x@@ <=@@ n-1) { printf("%d\n",@@ q@@ [x@@ ]); x++; } scanf("%d",&t); return0; }  
c -1
h -1
0

intmain() { inta[16@@ ],i,j,@@ s,@@ t; for(;;) {@@ s=0; scanf("%d",&a[0]); if(a[0]==-1)break; for(i=1;;i++) {@@ scanf("%d",&a[i]); if(!@@ a[i])@@ break;} t=i; for(i=0;i<t;i++) for(j=0;j<@@ t;j++) if(a[j]==@@ (@@ 2*@@ a[i]@@ )) s@@ +=1; printf("%d\n",s@@ );} }  
c -1
h -1
intmain(){ ints[@@ 10@@ ][10]; intN@@ ; intn; scanf("%d",&n); inti,j; int@@ c=0,@@ d; int@@ count0@@ ; int@@ q; count0@@ =0; c=0; d=0; for(i=0;i<n;i++){ q=0; for(j=0;j<n;j++){ scanf("%d",&s@@ [i][j]); if(s@@ [i][j]@@ ==0){@@ q@@ ++;@@ count0@@ ++;} } if(q@@ >1@@ ){@@ d@@ ++;} if(q@@ >@@ c@@ ){@@ c=@@ q@@ ;} } N@@ =@@ d@@ *@@ c-@@ count0@@ ; printf("%d",@@ N); return0; }  
c -1
h -1
0

intmain() { intk; scanf("%d",&k); int@@ s1@@ =0,@@ s2@@ =0,@@ s3@@ =0,@@ s4@@ =0,@@ s=0; int@@ r=0,@@ c=0; int@@ jz@@ [100][100]; intm,n; inti=1; while(i<=@@ k){ scanf("%d%d",&m,&n); for(int@@ jm@@ =0;@@ jm@@ <m;@@ jm@@ ++){ for(int@@ jn@@ =0;@@ jn@@ <n;@@ jn@@ ++){ scanf("%d",&@@ jz@@ [@@ jm@@ ][@@ jn@@ ]); } } r=0; c=0; for(c=0;c@@ <n;@@ c@@ ++){ s1@@ +=@@ jz@@ [r@@ ][c@@ ]; } r=@@ m-1@@ ; c=0; for(c=0;c@@ <n;@@ c@@ ++){ s2@@ +=@@ jz@@ [r@@ ][c@@ ]; } r=0; c=0; for(r=0;r@@ <m;@@ r@@ ++){ s3@@ +=@@ jz@@ [r@@ ][c@@ ]; } r=0; c=@@ n-1; for(r=0;r@@ <m;@@ r@@ ++){ s4@@ +=@@ jz@@ [r@@ ][c@@ ]; } s=@@ s1@@ +@@ s2@@ +@@ s3@@ +@@ s4@@ -@@ jz@@ [0][@@ 0]-@@ jz@@ [0][@@ n-1]-@@ jz@@ [@@ m-1][0]-@@ jz@@ [@@ m-1][@@ n-1]; printf("%d",s); s1@@ =0; s2@@ =0; s3@@ =0; s4@@ =0; s=0; if(i!=@@ k){ printf("\n"); } i++; } return0; }  
c -1
h -1
intmain() { intn,@@ temp,@@ x1,@@ x2,@@ y1,@@ y2@@ ; static@@ inta[@@ 1002@@ ][@@ 1002@@ ]; inti,j; scanf("%d",&n); for(i=1;i<=n;i++) for(j=1;j<=n;j++) { scanf("%d",&@@ temp); a[i][j]@@ =(@@ temp@@ ==0)@@ ?@@ 1@@ :@@ 0@@ ; } for(i=1;i<=n;i++) for(j=1;j<=n;j++) if(a[i][j]@@ ==1) { if((@@ a[i]@@ [j+1]@@ ==1@@ )&&(@@ a[i+1@@ ][j]@@ ==1)@@ ){@@ x1@@ =i;@@ y1@@ =j;} if((@@ a[i][j-1]@@ ==1@@ )&&(@@ a[i-1]@@ [j]@@ ==1)@@ ){@@ x2@@ =i;@@ y2@@ =j;} } printf("%d\n",@@ (@@ x2-x1-1)*(y2-y1@@ -1)); return0; }  
c -1
h -1
0

intf@@ (intn,int@@ min@@ ){ inti,@@ result=1; if(@@ min@@ >n) return0; for(i=min@@ ;i<@@ n;i++){ if(n@@ %i==0){ result+=@@ f(@@ n@@ /i,i); } } returnresult; } intmain(){ intn,a,@@ i,@@ t; scanf("%d",&n); for(i=0;i<n;i++){ scanf("%d",&a); t=@@ f(a,@@ 2); if(i<@@ n-1) printf("%d\n",t); else printf("%d",t); } return0; }  
c -1
h -1
intmain() { inti,j,@@ l1,l2,@@ l3@@ ,@@ e=0,@@ sum=0; chars[@@ 300],@@ z@@ [300],@@ h@@ [300]; scanf("%s",s); scanf("%s",@@ z); scanf("%s",@@ h); l1@@ =strlen(s); l2=strlen(@@ z); l3@@ =strlen(@@ h); for(i=0;i<=@@ l1@@ -@@ l2@@ ;i++) { e=0; for(j=0;j<@@ l2@@ ;j++) { if(z@@ [j]==@@ s@@ [j+i@@ ]) { e++; } } if(e@@ ==@@ l2@@ ) { for(j=0;j<i;j++) { printf("%c",s@@ [j]); } for(j=0;j<@@ l3@@ ;j++) { printf("%c",@@ h@@ [j]); } if(i@@ +@@ l2@@ <@@ l1@@ -1) { for(j=i@@ +@@ l2@@ ;j<@@ l1@@ ;j++) { printf("%c",s@@ [j]); } } sum++; break; } } if(sum@@ ==0) { for(i=0;i<l1;i++) { printf("%c",s[i]); } } return0; }  
c -1
h -1
0

intmain() { inti,j,k,n,@@ num[@@ 1000],@@ len@@ [1000],@@ num1@@ [1000][@@ 26]={0},@@ sum@@ [26]={0},@@ max=0,@@ m; charwriter@@ [1000][@@ 26],@@ letter@@ [26@@ ]={'A','B','C','D','E','F','G','H','I','J','K','L','M','N','O','P','@@ Q','R','S','T','U','V','W','X','Y','@@ Z'}; scanf("%d",&n); for(i=0;i<n;i++) { scanf("%d%s",&@@ num@@ [i],@@ writer@@ [i]); len@@ [i]@@ =strlen(@@ writer@@ [i]); } for(i=0;i<26;i++) { for(j=0;j<n;j++) { for(k=0;k<@@ len@@ [j]@@ ;k++) { if(@@ writer@@ [j]@@ [k]==@@ letter@@ [i]) { num1@@ [j]@@ [i]++; } } } } for(i=0;i<26;i++) { for(j=0;j<n;j++) { sum[i]=sum[i]+@@ num1@@ [j]@@ [i]; } } for(i=0;i<26;i++) { if(max<@@ sum@@ [i]) { max=@@ sum[i]; m=i; } } printf("%c\n%d\n",@@ letter@@ [m@@ ],@@ sum@@ [m]); for(i=0;i<n;i++) { for(j=0;j<len@@ [i];j++) { if(@@ writer@@ [i][j]==@@ letter@@ [m@@ ]) { printf("%d\n",@@ num[i]); } } } return0; }  
c -1
h -1
intmain() {@@ inti,j,@@ a[@@ 20000],@@ n; scanf("%d",&n); for(i=0;i<n;i++) scanf("%d",&a[i]); printf("%d",a[0]); for(i=1;i<n;i++) {@@ for(j=0;j<@@ i@@ ;) {@@ if(a[i]==@@ a[j])@@ j@@ =i+1; else@@ j++; if(j==@@ i)@@ printf("%d",@@ a[i]@@ );@@ }}}  
c -1
h -1
0

intmain() { int@@ c1@@ ,@@ c2@@ ,@@ d,@@ i,@@ x=0,@@ k,@@ m,n; int@@ sum[@@ L@@ ]; inta[@@ L@@ ][@@ L@@ ],b[@@ L@@ ]; scanf("%d",&k); for(i=0;i<@@ L@@ ;i++){ sum@@ [i]=0; } for(i=0;i<k;i++){ scanf("%d%d",&m,&n); for(@@ c1@@ =0;@@ c1@@ <m;@@ c1@@ ++){ for(@@ c2@@ =0;@@ c2@@ <n;@@ c2@@ ++){ scanf("%d",&a[@@ c1@@ ][@@ c2@@ ]); } } for(d@@ =0;d@@ <m;@@ d@@ ++){ sum[@@ x@@ ]+=@@ a[d@@ ][0]+@@ a[d@@ ][n-1]; } for(d@@ =1;@@ d@@ <@@ n-1;@@ d@@ ++){ sum[@@ x@@ ]+=@@ a[0][@@ d@@ ]+@@ a[m-1][@@ d@@ ]; } x++; } for(i=0;i<x;i++){ printf("%d\n",sum@@ [i]); } return0; }  
c -1
h -1
intmain(intargc,char*argv[]) { intnum[@@ 15]; inti,@@ m; for(i=0;i<@@ 15;i++) {scanf("%d",&@@ num[i]); {@@ if(num@@ [i]==0) break;} i++; } intj=0; inta; m=i; i=@@ a=0; for(i=0;i<m;i++) { for(j=0;j<m;j++) {@@ if(num@@ [i]@@ /@@ num@@ [j]==@@ 2@@ &&@@ num[i]@@ %@@ num[j]@@ ==0) a@@ ++;} } printf("%d\n",@@ a); return0; }  
c -1
h -1
0

intmain() {@@ intn,i,j,k,@@ a,b,@@ c; c=0; char@@ t@@ [256@@ ]={0}; chars[@@ 256@@ ]={0}; char@@ r@@ [256@@ ]={0}; char@@ z@@ [256@@ ]={0}; scanf("%s%s%s",@@ t,@@ s,@@ r); a=strlen(@@ t); b@@ =strlen(s); for(i=0;i<=@@ a@@ -@@ b;i++) {@@ for(j=i;j<@@ b@@ +i@@ ;j++) z@@ [j-i@@ ]=@@ t@@ [j]; if(strcmp(@@ z,@@ s)@@ ==0) {@@ c=i; break; } } if(c@@ ==0) {@@ for(i=0;i<a;i++) printf("%c",@@ t@@ [i]);} else {@@ for(i=0;i<c@@ ;i++) printf("%c",@@ t@@ [i]); printf("%s",@@ r); for(j=@@ c+@@ b@@ ;j<@@ a@@ ;j++) printf("%c",@@ t@@ [j]); } return0; }  
c -1
h -1
inta[100],b[100]; int@@ c,d; voidread@@ (int,int); void@@ rank@@ (int,int); voidprint@@ (int,int); intmain() { cin>>@@ c@@ >>@@ d; read@@ (c,@@ d); rank@@ (c,@@ d); print(@@ c,@@ d); } voidread@@ (intn,int@@ m) { for(inti=0;i<n;i++) cin>>a[i]; for(inti=0;i<m;i++) cin>>b[i]; } void@@ rank@@ (intn,int@@ m) { inttemp; for(inti=0;i<@@ n-1;i++) { for(intj=0;j<@@ n-1@@ -i;j++) { if(a[j]>a[j+1]) { temp=@@ a[j];a[j]=a[j+1];@@ a[j+1]=temp; } } } for(inti=0;i<@@ m-1;i++) { for(intj=0;j<@@ m-1@@ -i;j++) { if(b[j]>b[j+1]) { temp=@@ b[j]@@ ;@@ b[j]=b@@ [j+1];@@ b[j+1]=@@ temp; } } } } voidprint@@ (intn,int@@ m) { for(inti=0;i<n;i++) cout<<a[i]<<""; for(inti=0;i<m;i++) { cout<<@@ b[i]; if(i!=@@ m-1) cout<<"@@ "; } }  
c -1
h -1
0

voidmain() { int@@ zy@@ (inta,int@@ b); intj,@@ n,m,@@ sum; scanf("%d",&n); for(j=1;j<=n;j++) { scanf("%d",&m); sum=@@ zy@@ (2,@@ m); printf("%d\n",sum); } } int@@ zy@@ (inta,intb) { inti,@@ c,@@ t=1; c=0; if(a==0) c=c@@ +1; else {@@ for(i=a@@ ;i@@ *@@ i<=@@ b;i++) { if(b@@ %i==0) c=@@ zy@@ (i,@@ (@@ b@@ /i@@ ))@@ +c; } if(i@@ *@@ i@@ >@@ b) c=c@@ +1;} return(@@ c); }  
c -1
h -1
intmain() { intn,a[@@ 100000@@ ],b[@@ 100000@@ ],c[@@ 100000],@@ sum[@@ 100000],@@ i,@@ t1@@ ,@@ t2@@ ,@@ t3@@ ,@@ s1,@@ s2,@@ s3@@ ; scanf("%d",&n); for(i=0;i<n;i++) {@@ scanf("%d%d%d",&@@ a[i],&@@ b[i]@@ ,&@@ c[i]); sum[i]=@@ b[i]@@ +@@ c[i]@@ ;} for(i=0,@@ t1@@ =0,@@ s1@@ =@@ a[0]@@ ;i<n;i++) {@@ if(sum[i]>@@ t1@@ ) {@@ t1@@ =@@ sum[i]; s1@@ =@@ a[i]@@ ;}} printf("%d%d\n",@@ s1,@@ t1@@ ); for(i=0,@@ t2@@ =0,@@ s2=@@ a[0]@@ ;i<n;i++) {@@ if(a[i]==@@ s1@@ )continue; if(sum[i]>@@ t2@@ ) {@@ t2@@ =@@ sum[i]; s2=@@ a[i]@@ ;}} printf("%d%d\n",@@ s2,@@ t2@@ ); for(i=0,@@ t3@@ =0,@@ s3=@@ a[0]@@ ;i<n;i++) {@@ if(a[i]==@@ s1@@ ||@@ a[i]==@@ s2@@ )continue; if(sum[i]>@@ t3@@ ) {@@ t3@@ =@@ sum[i]; s3=@@ a[i]@@ ;}} printf("%d%d\n",@@ s3@@ ,@@ t3@@ ); return0; }  
c -1
h -1
0

intmain() { intx[@@ 1000][1000]; inti=0,j=0; intn=0; int@@ a1@@ =0,@@ b1@@ =0,@@ a2@@ =0,@@ b2@@ =0; int@@ sn@@ =0; scanf("%d",&n); for(i=0;i<n;i++){ for(j=0;j<n;j++) { scanf("%d",&@@ x@@ [i][j]); } } for(i=1;i<n;i++){ for(j=1;j<n;j++) { if(x@@ [i][j]==0&&@@ x[i]@@ [j-1]@@ !=0&&@@ x@@ [i-1][j]@@ !=0){ a1@@ =i; b1@@ =j; } } } for(i=0;i<n-1;i++){ for(j=0;j<n-1;j++) { if(x@@ [i][j]==0&&@@ x[i]@@ [j+1]@@ !=0&&@@ x@@ [i+1][j]@@ !=0){ a2@@ =i; b2@@ =j; } } } sn@@ =(@@ a2-a1@@ -1)*(@@ b2-b1@@ -1); printf("%d",@@ sn@@ ); return0; }  
c -1
h -1
intmain() { intn,@@ t,@@ i,j; int@@ x1,y1,x2,y2@@ ; scanf("%d",&n); x1@@ =-@@ 1@@ ;@@ y1@@ =-@@ 1@@ ;@@ x2@@ =-@@ 1@@ ;@@ y2@@ =-1; for(i=0;i<n;i++) { for(j=0;j<n;j++) { scanf("%d",&t); if(t==0) { if(@@ x1@@ ==@@ -1@@ &&@@ y1@@ ==-1) { x1@@ =j; y1@@ =i; } x2@@ =j; y2@@ =i; } } } if(@@ x1@@ ==@@ x2@@ ||@@ y1@@ ==@@ y2@@ ) printf("@@ 0@@ "); else printf("%d",(@@ x2-x1-1)*(y2-y1@@ -1)); return0; }  
c -1
h -1
1


intmain() { int@@ bkn@@ ,@@ m@@ =1,@@ n,@@ i,j; char@@ bka@@ [30]; struct@@ author { intnum; int@@ p[@@ 200]; } a[@@ 30]; scanf("%d",&n); for(i=1;i<@@ 27@@ ;i++) a[i].@@ num=0; for(i=0;i<n;i++) { scanf("%d%s",&@@ bkn@@ ,@@ bka@@ ); for(j=0;j<strlen(@@ bka@@ );j++) { a[@@ bka@@ [j]@@ -@@ 64@@ ].@@ num++; a[@@ bka@@ [j]@@ -@@ 64@@ ].@@ p[@@ a[@@ bka@@ [j]@@ -@@ 64@@ ].num@@ -1@@ ]=@@ bkn@@ ; } } for(i=2@@ ;i<@@ 27@@ ;i++) if(a[i].@@ num@@ >@@ a[m@@ ].@@ num) m=i; printf("%c\n%d\n",@@ m+@@ 64@@ ,@@ a[m@@ ].@@ num); for(i=0;i<@@ a[m@@ ].@@ num;i++) printf("%d\n",@@ a[m@@ ].@@ p[i]); return0; }  
c -1
h -1
intmain(){ intn,k,@@ i,j; intsz[@@ 10000]; scanf("%d%d",&n,&k); for(i=0;i<n-1;i++){ scanf("%d",&sz[i]); } if(i@@ =@@ n-1){ scanf("%d",&sz[i]); }@@ int@@ r=0; for(i=0;i<n;i++){ for(j=i+1;j<n;j++){ if(sz[i]+sz@@ [j]==k){ r@@ =1; break; }else{ continue; } } } if(r@@ ==1){ printf("yes"); }elseif(@@ r@@ ==0){ printf("no"); } return0; }  
c -1
h -1
0

intmain() { intmax=0,@@ n,@@ i,@@ count=0,@@ m,@@ j,@@ num[@@ 200],@@ left@@ ,@@ flag=0; chara[100@@ ],b[100]; double@@ s; scanf("%lf",&@@ s); scanf("%s",&@@ a); scanf("%s",&@@ b); if(strlen(a)@@ ==@@ strlen(b@@ )) { n@@ =strlen(a); } else { flag=1; printf("error"); } if(flag==0) { for(i=0;i<n;i++) { if((a[i]!='@@ A'&&a[i]!='T'&&a[i]!='G'&&a[i]!='@@ C')||(@@ b[i]!='A'&&b[i]!='T'&&b[i]!='G'&&b[i]!='@@ C')@@ ) { flag=1; printf("error"); break; } else { if(a[i]==b[i]) { count++; } } } } if(flag==0) { if((@@ double)@@ count@@ /@@ n@@ >@@ s) { printf("yes"); } else { printf("no"); } } return0; }  
c -1
h -1
intmain(intargc,char*argv[]) { intn; scanf("%d",&n); structstu@@ { intid; int@@ x,y; }stu[100000]; int@@ no1@@ =0; int@@ no2@@ =0; int@@ no3@@ =0; inti; int@@ N1@@ ,@@ N2@@ ,@@ N3@@ ; for(i=0;i<n;i++) { scanf("%d%d%d",&stu[i].@@ id@@ ,&stu[i].@@ x@@ ,&stu[i].@@ y); } for(i=0;i<n;i++) { if((@@ stu[i].@@ x+@@ stu[i].@@ y@@ )>@@ no1@@ ){@@ no2@@ =@@ no1@@ ;@@ no1@@ =(@@ stu[i].@@ x+@@ stu[i].@@ y@@ );@@ N2@@ =@@ N1@@ ;@@ N1@@ =i;} elseif((@@ stu[i].@@ x+@@ stu[i].@@ y@@ )>@@ no2@@ ){@@ no3@@ =@@ no2@@ ;@@ no2@@ =(@@ stu[i].@@ x+@@ stu[i].@@ y@@ );@@ N3@@ =@@ N2@@ ;@@ N2@@ =i;} elseif((@@ stu[i].@@ x+@@ stu[i].@@ y@@ )>@@ no3@@ ){@@ no3@@ =(@@ stu[i].@@ x+@@ stu[i].@@ y@@ );@@ N3@@ =i;} } printf("%d%d\n%d%d\n%d@@ %d",@@ stu[@@ N1@@ ].id,@@ (@@ stu[@@ N1@@ ].@@ x+@@ stu[@@ N1@@ ].@@ y@@ ),@@ stu[@@ N2@@ ].id,@@ (@@ stu[@@ N2@@ ].@@ x+@@ stu[@@ N2@@ ].@@ y@@ ),@@ stu[@@ N3@@ ].id,@@ (@@ stu[@@ N3@@ ].@@ x+@@ stu[@@ N3@@ ].@@ y@@ )); return0; }  
c -1
h -1
0

intt,@@ m,n,@@ i,j,k,@@ xx@@ ,@@ x1,@@ x2,@@ x,y,@@ s,@@ n0@@ ; void@@ init@@ (inta[],intb[]) {@@ freopen@@ (@@ "@@ tt@@ .@@ in@@ ",@@ "@@ r@@ ",@@ stdin@@ ); scanf("%d%d",&m,&n); for(i=1;i<=m;i++) scanf("%d",&a[i]); for(i=1;i<=n;i++) scanf("%d",&b[i]); } voidoutput@@ (inta[],int@@ k) { inti; freopen@@ (@@ "@@ tt@@ .@@ out@@ ",@@ "@@ w@@ ",@@ stdout@@ ); for(i=1;i<=@@ k;i++)@@ if(i@@ ==1)@@ printf("%d",@@ a[i]@@ );@@ else@@ printf("%d",a[i]); } void@@ proce@@ (intn,int@@ b) { inti; if(n@@ ==1)@@ s++; else for(i=b@@ ;i<=@@ n0@@ ;i++) if(!@@ (n@@ %i@@ ))@@ proce@@ (n/i,i); } intmain() { scanf("%d",&n); for(i=1;i<=n;i++) { scanf("%d",&x); s=0; n0@@ =@@ x; proce@@ (x,@@ 2); printf("%d\n",s); } return0; }  
c -1
h -1
intmain() { int@@ x,y; introw,col; cin>>row>>col; inta[@@ row][col]; for(inti=0;i<row;i++) { for(intj=0;j<col;j++) { cin>>a[i][j]; } } intn; n=@@ row+col-2@@ ; for(inti=0;i<@@ col;i++) { for(@@ x=0,@@ y@@ =i@@ -x@@ ;x@@ >=0&&@@ y@@ >=0&&@@ x@@ <row@@ &&@@ y@@ <col@@ ;x@@ ++,@@ y@@ --) { cout<<@@ a[x@@ ][y@@ ]<<endl; } } for(intj=@@ col@@ ;j<=@@ n;j++) { for(@@ y=@@ col-1@@ ,@@ x@@ =j@@ -@@ y@@ ;x@@ >=0&&@@ y@@ >=0&&@@ x@@ <row@@ &&@@ y@@ <col@@ ;y@@ --@@ ,@@ x++) { cout<<@@ a[x@@ ][y@@ ]<<endl; } } return0; }  
c -1
h -1
0

intmain(){ intn,k; int@@ c=0; intsz[1000]; scanf("%d%d",&n,&k); for(inti=0;i<n;i++){ scanf("%d",&sz[i]); } for(intm=0;m@@ <@@ n-1@@ ;m++){ for(intj=@@ m@@ +1@@ ;j<@@ n;j++){ if(@@ sz[m@@ ]+@@ sz@@ [j]==k){ c++; } } } if(c@@ ==0)@@ printf("no"); if(c@@ !=0)@@ printf("yes"); return0; }  
c -1
h -1
intmain() { inti,j,@@ m=0,@@ count=0; intnum@@ [100]; for(;;) { m=0; for(i=0;;i++) { cin>>num[i]; if(num@@ [i]@@ ==0||@@ num@@ [i]==@@ -1) { count@@ =i; break; } } if(num@@ [0]@@ ==-1) break; else { for(i=0;i<@@ count@@ ;i++) for(j=i+1;j<@@ count@@ ;j++) { if((@@ num@@ [i]==@@ 2*@@ num[j]@@ )||(@@ num@@ [j]==2*@@ num[i]@@ )) m++; } cout<<@@ m@@ <<endl; } } return0; }  
c -1
h -1
0

structbook { intnum; char@@ au@@ [@@ 32@@ ]; int@@ sta@@ [27]; }b[@@ 1020@@ ]; intmain() { inti,j,k,@@ m,n; charc; scanf("%d",&m); for(i=0;i<m;i++) { scanf("%d%s",&@@ b[i].@@ num,@@ b[i].@@ au); } for(i=0;i<m;i++) { for(j=0;;j++) { c=@@ b[i].@@ au@@ [j]; if(c==@@ '\0') { break; } else { b[i].@@ sta@@ [@@ c-@@ 64@@ ]++; } } } int@@ sum[@@ 27@@ ]={0}; for(i=0;i<m;i++) { for(j=1;j<@@ 27@@ ;j++) { sum@@ [j]@@ +=@@ b[i].@@ sta@@ [j]; } } intmax=0; for(i=1;i<@@ 27@@ ;i++) { if(sum@@ [i]>max) { max=@@ sum[i]; k=i; } } printf("%c\n",@@ k+@@ 64@@ ); n=0; for(i=0;i<m;i++) { if(b[i].@@ sta@@ [k]@@ !=0) { n++; } } printf("%d\n",n); n=0; for(i=0;i<m;i++) { if(b[i].@@ sta@@ [k]@@ !=0) { n++; if(n==1) { printf("%d",@@ b[i].@@ num); } else { printf("\n%d",@@ b[i].@@ num); } } } return0; }  
c -1
h -1
structstudent{ intnum; int@@ chin@@ ; intmath; intsum; }; intmain() { intn,i; scanf("%d",&n); structstudent*@@ stu@@ ; stu@@ =(structstudent@@ *)malloc(@@ n@@ *sizeof(int@@ )*@@ 4@@ ); for(i=0;i<n;i++){ scanf("%d%d%d",&stu[i].num,&stu[i].@@ chin@@ ,&stu[i].math); stu[i].sum=stu[i].@@ chin@@ +stu[i].@@ math; } intj,@@ e1@@ ,@@ e2@@ ; for(j=1;j<@@ 4@@ ;j++){ for(i=0;i<n@@ -j@@ ;i++){ if(stu[i].@@ sum@@ >=@@ stu[i+1].@@ sum){ e1@@ =stu@@ [i+1].@@ sum; e2@@ =stu@@ [i+1].@@ num; stu[i+1].@@ sum=@@ stu[i].@@ sum; stu[i+1].@@ num=@@ stu[i].@@ num; stu[i].sum=@@ e1@@ ; stu[i].@@ num=@@ e2@@ ; } } } printf("%d%d\n",stu[@@ n-1@@ ].num,stu[@@ n-1@@ ].sum); printf("%d%d\n",stu[@@ n-2@@ ].num,stu[@@ n-2@@ ].sum); printf("%d%d\n",stu[@@ n-@@ 3].@@ num,@@ stu[@@ n-@@ 3].@@ sum); free(@@ stu@@ ); return0; }  
c -1
h -1
0

const@@ int@@ mov@@ [4@@ ][2@@ ]={@@ {@@ -1,@@ 0},{@@ 0,@@ -1@@ },@@ {@@ 1,@@ 0},{@@ 0,@@ 1@@ }@@ }; intm,n,@@ counter@@ ; void@@ dfs@@ (intm,int@@ i){ if(m@@ ==1){ ++@@ counter@@ ; return; } for(@@ ;i<=@@ m;@@ ++@@ i){ if(m@@ %i==0){ dfs@@ (m@@ /i,i); } } } intmain(){ intt,@@ m,n; cin>>t; while(t@@ --){ counter@@ =0; cin>>m; dfs@@ (m,@@ 2); cout<<@@ counter@@ <<endl; } }  
c -1
h -1
intmain() { intn,i,j,@@ num; int@@ hei@@ [@@ 30],@@ max@@ [30]; cin>>n; for(i=0;i<n;i++) { cin>>@@ hei@@ [i]; max@@ [i]=1; } for(i=0;i<n;i++) { num=0; for(j=0;j<i;j++) { if(@@ hei@@ [j]>=@@ hei@@ [i]) { if(max@@ [j]>@@ num) num=@@ max@@ [j]; } } max@@ [i]=@@ num@@ +1; } num=0; for(i=0;i<n;i++) { if(max@@ [i]>@@ num) num=@@ max@@ [i]; } cout<<num<<endl; return0; }  
c -1
h -1
0

intmain() { intt; cin>>t; inta[100][100]; intsum; int@@ n[@@ 200]; int@@ g; ints[@@ 200]; for(@@ g@@ =0;@@ g@@ <=@@ t@@ -1;@@ g@@ ++) { cin>>@@ s[@@ g@@ ]; cin>>@@ n[@@ g@@ ]; inti; intj; for(i=0;i<=@@ s[@@ g@@ ]@@ -1;i++) for(j=0;j<=@@ n[@@ g@@ ]@@ -1;j++) { cin>>a[i][j]; } sum=0; for(i=0;i<=@@ s[@@ g@@ ]@@ -1;i++) { sum=sum+*@@ *(a@@ +i); sum=sum+*(@@ *(a+i)@@ +@@ n[@@ g@@ ]@@ -1); } for(j=0;j<=@@ n[@@ g@@ ]@@ -1;j++) { sum=sum+*(@@ *a@@ +j); sum=sum+*(@@ *(a+@@ s[@@ g@@ ]@@ -1)@@ +j); } sum=sum@@ -*@@ *a@@ -*(@@ *(a+@@ s[@@ g@@ ]@@ -1)@@ +@@ n[@@ g@@ ]@@ -1)@@ -*@@ (*@@ a+@@ n[@@ g@@ ]@@ -1)@@ -*@@ *(a+@@ s[@@ g@@ ]@@ -1); cout<<sum<<endl; } return0; }  
c -1
h -1
typedef@@ struct@@ S@@ { intID; intc; intm; inta; }@@ S@@ ; int@@ mycmp@@ (constvoid*@@ e1@@ ,@@ constvoid*@@ e2@@ ){ return(@@ (@@ S@@ *)@@ e2@@ )@@ ->@@ a@@ -@@ ((@@ S@@ *)@@ e1@@ )@@ ->@@ a; } voidmain() { struct@@ S@@ stu[@@ 100010@@ ]; inti,j,n; scanf("%d",&n); for(i=0;i<n;i++){ scanf("%d%d%d",&@@ (stu@@ +i)->@@ ID,&@@ (stu@@ +i)->@@ c@@ ,&@@ (stu@@ +i)->@@ m); (stu@@ +i)->@@ a@@ =(@@ stu@@ +i)->@@ c+@@ (stu@@ +i)->@@ m; } qsort@@ (stu@@ ,@@ n,@@ sizeof(@@ *(@@ stu@@ )@@ ),@@ mycmp@@ ); for(i=0;i<=@@ 2@@ ;i++) printf("%d%d\n",@@ (stu@@ +i)->@@ ID,@@ (stu@@ +i)->@@ a); }  
c -1
h -1
0

intleap@@ (int@@ Y@@ ) { if(@@ Y@@ %@@ 400==0) return1; elseif(@@ Y@@ %@@ 100==0) return0; elseif(@@ Y@@ %@@ 4==0) return1; else return0; } intmain() { int@@ Y@@ ,@@ M@@ ,@@ D@@ ; scanf("%d%d%d",&@@ Y@@ ,&@@ M@@ ,&@@ D); if(leap@@ (@@ Y@@ )@@ ==0) { if(M@@ ==1) printf("%d",D@@ ); if(M==@@ 2) printf("%d",@@ 31+@@ D); if(M==@@ 3) printf("%d",31+28@@ +@@ D); if(M==@@ 4) printf("%d",31+28@@ +31+@@ D); if(M==@@ 5) printf("%d",31+28@@ +31+30@@ +@@ D); if(M==@@ 6) printf("%d",31+28@@ +31+30+31+@@ D); if(M==@@ 7) printf("%d",31+28@@ +31+30+31+30@@ +@@ D); if(M==@@ 8) printf("%d",31+28@@ +31+30+31+30+31+@@ D); if(M==@@ 9) printf("%d",31+28@@ +31+30+31+30+31+31+@@ D); if(M==@@ 10) printf("%d",31+28@@ +31+30+31+30+31+31+30@@ +@@ D); if(M==@@ 11) printf("%d",31+28@@ +31+30+31+30+31+31+30+31+@@ D); if(M==@@ 12) printf("%d",31+28@@ +31+30+31+30+31+31+30+31+30@@ +@@ D); } else { if(M@@ ==1) printf("%d",D@@ ); if(M==@@ 2) printf("%d",@@ 31+@@ D); if(M==@@ 3) printf("%d",31+29@@ +@@ D); if(M==@@ 4) printf("%d",31+29@@ +31+@@ D); if(M==@@ 5) printf("%d",31+29@@ +31+30@@ +@@ D); if(M==@@ 6) printf("%d",31+29@@ +31+30+31+@@ D); if(M==@@ 7) printf("%d",31+29@@ +31+30+31+30@@ +@@ D); if(M==@@ 8) printf("%d",31+29@@ +31+30+31+30+31+@@ D); if(M==@@ 9) printf("%d",31+29@@ +31+30+31+30+31+31+@@ D); if(M==@@ 10) printf("%d",31+29@@ +31+30+31+30+31+31+30@@ +@@ D); if(M==@@ 11) printf("%d",31+29@@ +31+30+31+30+31+31+30+31+@@ D); if(M==@@ 12) printf("%d",31+29@@ +31+30+31+30+31+31+30+31+30@@ +@@ D); } getchar(); getchar(); }  
c -1
h -1
voidmain() { structstudent { chara[@@ 6@@ ]; intc; intm; ints; structstudent*next; }; structstudent*head; structstudent*p1,*p2; structstudent@@ first=@@ {@@ ""@@ ,@@ 0,0,@@ 0,@@ 0@@ }; structstudent@@ second=@@ {@@ ""@@ ,@@ 0,0,@@ 0,@@ 0@@ }; structstudent@@ third=@@ {@@ ""@@ ,@@ 0,0,@@ 0,@@ 0@@ }; intn,i,j; char@@ ch; scanf("%d",&n); p1=p2=(structstudent*)malloc(LEN); for(j=0;j<@@ 6@@ ;j@@ =j+1@@ ) p1->@@ a[j]@@ ='\0'; getchar(); for(j=0;@@ (@@ ch@@ =@@ getchar@@ (@@ ))@@ !='@@ '@@ ;j@@ =j+1@@ ) p1->@@ a[j]=@@ ch; scanf("%d%d",&@@ p1->@@ c@@ ,&p1->@@ m); p1->@@ s=@@ p1->@@ c+@@ p1->@@ m; head@@ =0; for(i=1;i<@@ n@@ ;i=i+1@@ ) { if(i==1) head=p1; else p2->next=p1; p2=p1; p1=(structstudent*)malloc(LEN); for(j=0;j<@@ 6@@ ;j@@ =j+1@@ ) p1->@@ a[j]@@ ='\0'; getchar(); for(j=0;@@ (@@ ch@@ =@@ getchar@@ (@@ ))@@ !='@@ '@@ ;j@@ =j+1@@ ) p1->@@ a[j]=@@ ch; scanf("%d%d",&@@ p1->@@ c@@ ,&p1->@@ m); p1->@@ s=@@ p1->@@ c+@@ p1->@@ m; } p2->next@@ =0; for(p1=@@ head;@@ p1@@ !=0@@ ;@@ p1=p1->next) { if(p1->@@ s@@ >@@ first@@ .@@ s) { third=second@@ ; second=@@ first@@ ; first@@ =*@@ p1; } elseif(@@ p1->@@ s@@ >@@ second@@ .@@ s) { third=second@@ ; second@@ =*@@ p1; } elseif(@@ p1->@@ s@@ >@@ third@@ .@@ s) { third@@ =*@@ p1; } else continue; } printf("%s%d\n",@@ first@@ .@@ a,@@ first@@ .@@ s); printf("%s%d\n",@@ second@@ .@@ a,@@ second@@ .@@ s); printf("%s%d\n",@@ third@@ .@@ a,@@ third@@ .@@ s); }  
c -1
h -1
0

intmain(){ inti,@@ m,@@ j,k,@@ n1,n2; char@@ x; char@@ zf@@ [300]; chars1@@ [100],@@ s2@@ [100]; gets(@@ zf@@ ); gets(@@ s1); gets(@@ s2); n1@@ =strlen(@@ s1); n2@@ =strlen(@@ s2); for(i=0;i<(@@ strlen(@@ zf@@ ))@@ ;i++){ if(@@ zf@@ [i]==@@ s1@@ [0]@@ &&@@ zf@@ [i+1@@ ]==@@ s1@@ [1]@@ &&@@ zf@@ [i+@@ n1@@ -1@@ ]==@@ s1@@ [@@ n1@@ -1]@@ ){ for(k=0;k<@@ n2@@ ;k++){ zf@@ [i]=@@ s2@@ [k]; i++; } break; } } puts(@@ zf@@ ); return0; }  
c -1
h -1
intmain(){ intsz@@ [100][@@ 16],@@ m,n; inti,j,k; for(i=0;i<@@ 100@@ ;i++){ for(j=0;j<@@ 16@@ ;j++){ scanf("%d",&m); if(m@@ !=0){ sz@@ [i][j]=@@ m; }else{@@ break;} } if(sz[i]@@ [0]==@@ -1){ break;} } n=0; for(i=0;i<@@ 100@@ ;i++){ if(sz[i]@@ [0]==@@ -1){ break;} for(j=0;j<@@ 15@@ ;j++){ for(k=0;k<@@ 15@@ ;k++){ if(sz@@ [i][j]@@ !=0&&@@ sz[i]@@ [k]@@ !=0){ if(sz@@ [i][j]==@@ 2*@@ sz[i]@@ [k]@@ ){ n=n+1; }@@ }}} printf("%d\n",n); n=0; } return0; }  
c -1
h -1
0

intmain() { inti,j,k,@@ row,col,@@ array[100][100]; cin>>row>>col; for(i=0;i<row;i++) for(j=0;j<col;j++) { cin>>array[i][j]; } for(k=0;k<=@@ col@@ +row@@ -2@@ ;k++) for(i=0;i<=@@ k;i++) { j=@@ k-@@ i; if(i@@ <row@@ &&j>=0@@ &&j@@ <col@@ )@@ cout<<array@@ [i][j]<<endl; } return0; }  
c -1
h -1
intmain() { int*@@ q; inti,n,@@ flag@@ =1,@@ a=0,b=0,@@ num; cin>>n; for(i=0;i<n@@ *@@ n;i++) { cin>>num; if((@@ num@@ ==0)&&(@@ flag@@ ==1@@ )) { a++; } if((@@ a@@ >0@@ )&&(@@ num@@ !=0)) { flag=0; } if(num@@ ==0) { b++; } } cout<<@@ a@@ *(@@ (@@ b@@ -2*@@ a)@@ /2@@ +@@ 2)@@ -b@@ <<endl; return0; }  
c -1
h -1
0

intmain(){ inti,@@ x,y,@@ m=0; doublen; chara[501],b[501]; scanf("%lf\n",&@@ n); gets(a); gets(b); x@@ =strlen(a); y@@ =strlen(b); if(x==@@ y){ for(i=0;i<x;i++){ if(a[i]!='@@ A'&&a[i]!='@@ G'&&a[i]!='@@ C'&&a[i]!='@@ T@@ '){ printf("error"); break; }else{ if(@@ b[i]!='A'&&b[i]!='@@ G'&&b[i]!='@@ C'&&b[i]!='@@ T@@ '){ printf("error"); break; }else{ if(a[i]==b[i]) m++; }} if(i==@@ x@@ -1){ if(1.0*@@ m/@@ x@@ >n){ printf("yes"); }else{ printf("no"); }}} }else{ printf("error"); } return0; }  
c -1
h -1
main() { inta,b,@@ d@@ [100],@@ e,f,@@ g@@ ,i,j,@@ x,y,@@ z; char@@ c@@ [100][100]; scanf("%d",&a); for(b=0;b@@ <@@ a;@@ b++) { scanf("%s%d",@@ c[@@ b@@ ]@@ ,&@@ d[@@ b@@ ]); } for(e@@ =0;e@@ <@@ a;@@ e++) { if(@@ d[@@ e@@ ]@@ >=60) {@@ i=@@ e; break; } } for(@@ e=0,@@ g@@ =0;e@@ <@@ a;@@ e++) { if(@@ d[@@ e@@ ]@@ >=60) g=@@ g@@ +1; } for(x@@ =1;@@ x@@ <=@@ g@@ ;x@@ ++) { for(e@@ =0;e@@ <@@ a;@@ e++) { if(@@ d[@@ e@@ ]@@ >=60) { if(d@@ [i]<@@ d[@@ e@@ ]) i=@@ e; } } printf("%s\n",@@ c[i]); d@@ [i]=0; } for(z@@ =0;z@@ <@@ a;@@ z++) { if(@@ d[@@ z@@ ]!=0) printf("%s\n",@@ c[@@ z@@ ]); } getchar(); getchar(); }  
c -1
h -1
0

struct@@ grade { int@@ No@@ ; intchinese; intmath; intsum; }@@ student[@@ 100000],@@ s; intmain() { intn,i,j; scanf("%d",&n); for(i=0;i<n;i++){ scanf("%d%d%d",&@@ student[i].@@ No@@ ,&@@ student[i].@@ chinese@@ ,&@@ student[i].@@ math); student[i].@@ sum=@@ student[i].@@ chinese+@@ student[i].@@ math; } for(i=0;i<@@ 3;i++){ for(j=i+1;j<n;j++){ if(@@ student[i].@@ sum<@@ student[j].@@ sum){ s=@@ student@@ [i]; student@@ [i]=@@ student@@ [j]; student@@ [j]=@@ s; } } } for(i=0;i<@@ 3;i++){ printf("%d%d\n",@@ student[i].@@ No@@ ,@@ student[i].@@ sum); } return0; }  
c -1
h -1
inta[1000][1000]; intmain() { intn; scanf("%d",&n); int@@ p,q; for(p=0;p@@ <n;p++) { for(q=0;q@@ <n;@@ q++) { scanf("%d",&(@@ a[p@@ ][q@@ ]@@ )); } } int@@ p1@@ =0,@@ p2@@ =0,@@ q1@@ ,@@ q2@@ ; for(p=0;p@@ <n;p++) { for(q=0;q@@ <n;@@ q++) { if(a[@@ p@@ ][q@@ ]==0) { p1=@@ p; q1=@@ q; break; } if(@@ p1@@ !=0) break; } if(@@ p1@@ !=0) break; } for(p=@@ n-1@@ ;p@@ >=0@@ ;p@@ --) { for(q=@@ n-1@@ ;q@@ >=0@@ ;q@@ --) { if(a[@@ p@@ ][q@@ ]==0) { p2=@@ p; q2@@ =@@ q; break; } if(@@ p2@@ !=0) break; } if(@@ p2@@ !=0) break; } intx; x@@ =(@@ p2@@ -@@ p1@@ -1)*(@@ q2@@ -@@ q1@@ -1); printf("%d",x); return0; }  
c -1
h -1
0

inti=0; intf@@ (intn,int@@ m) {int@@ k=0; if(m==1) i++; else {@@ for(k=@@ n@@ ;k<=@@ m;k++) {@@ if(m@@ %@@ k@@ ==0) {@@ n=@@ k; f(@@ n,@@ m/@@ n);@@ }}} return(@@ i@@ );} intmain() { intn,@@ b,@@ c; cin>>n; inta; for(b=0;b@@ <n;@@ b++) {@@ cin>>a; c=@@ f(@@ 2,@@ a); cout<<@@ c@@ <<endl; i@@ =0;} return0; }  
c -1
h -1
structpatient { char@@ No@@ [10]; intage; }@@ p[@@ 101]; intmain() { intn,i,j; scanf("%d",&n); for(i=1;i<=n;i++) { scanf("%s%d",@@ p[i].@@ No@@ ,&@@ p[i].age); } structpatient@@ t; for(i=2;i<=n;i++) { if(p@@ [i].age>=60) { for(j=i@@ ;j>@@ 1@@ ;j--) { if(p@@ [j-1@@ ].age@@ <p@@ [j].age@@ ) { t=@@ p@@ [j-1]; p@@ [j-1]=@@ p@@ [j]; p@@ [j]=@@ t; } else break; } } } for(i=1;i<=n;i++) printf("%s\n",@@ p[i].@@ No@@ ); return0; }  
c -1
h -1
0

int@@ u@@ [1000]; intmain() { intn,k,@@ i,j; scanf("%d%d",&n,&k); for(i=0;i<n;i++) { scanf("%d",&@@ u@@ [i]); } for(i=0;i<n;i++) { for(j=i+1;j<n;j++) { if(@@ u@@ [i]+@@ u@@ [j]==k) { break; } } if(j!=@@ n) { break; } } if(i!=@@ n) { printf("yes"); } else { printf("no"); } return0; }  
c -1
h -1
intmain() { intn,i,@@ pass@@ ; structpatient { charid@@ [@@ L@@ ]; intage; }@@ men@@ [@@ M@@ ],@@ temp; scanf("%d",&n); for(i=0;i<n;i++) scanf("%s%d",@@ men@@ [i].id,&@@ men@@ [i].age); for(@@ pass@@ =1;@@ pass@@ <n;@@ pass@@ ++) { for(i=n-1;i@@ >@@ pass@@ -1@@ ;i--) { if(@@ men@@ [i].age@@ >=60&&@@ men@@ [i].age@@ >@@ men@@ [i-1@@ ].age) { temp=@@ men@@ [i]; men@@ [i]=@@ men@@ [i-1]; men@@ [i-1@@ ]=temp; } } } for(i=0;i<n;i++) { printf("%s\n",@@ men@@ [i].id); } return0; }  
c -1
h -1
0

intmain(){ char@@ z1@@ [500],@@ z2@@ [500]; int@@ l@@ =1; double@@ q,@@ m; scanf("%lf",&@@ m); scanf("%s@@ %s",&@@ z1@@ ,&@@ z2@@ ); if(strlen(@@ z1@@ )!=strlen(@@ z2@@ )){ printf("error"); l=0; } else{ for(inti=0;i<@@ strlen(@@ z1@@ );i++){ if((@@ z1@@ [i]!='A'&&@@ z1@@ [i]!='T'&&@@ z1@@ [i]!='G'&&@@ z1@@ [i]!='@@ C')||(@@ z2@@ [i]!='A'&&@@ z2@@ [i]!='T'&&@@ z2@@ [i]!='G'&&@@ z2@@ [i]!='@@ C')){ printf("error"); l=0; break; }elseif(@@ z1@@ [i]==@@ z2@@ [i]) q++; } } if(q@@ /@@ strlen(@@ z1@@ )>@@ m@@ &&@@ l@@ ==1) printf("yes"); elseif(@@ l@@ ==1) printf("no"); return0; }  
c -1
h -1
intmain(){ intk,m,n,@@ a,b,@@ c,d; c=0; scanf("%d",&k); intsz[100][100]; int@@ yi@@ [100]; int@@ er@@ [100]; for(c=0;c@@ <k;@@ c@@ ++){ scanf("%d%d",&m,&n); for(a=0;a@@ <m;@@ a++){ for(b=0;b@@ <n;b++){ scanf("%d",&@@ sz[a@@ ][b@@ ]); } } d=0; for(b=0;b@@ <n;b++){ d@@ +=@@ sz[0][@@ b@@ ]; } yi@@ [a@@ ]=@@ d; d=0; for(b=0;b@@ <n;b++){ d@@ +=@@ sz[@@ m-1][@@ b@@ ]; } er@@ [a@@ ]=@@ d; d=@@ yi@@ [a@@ ]+@@ er@@ [a@@ ]; for(b@@ =1;@@ b@@ <=@@ (m@@ -2@@ );@@ b++){ d@@ +=@@ sz[@@ b@@ ][0]; } for(b@@ =1;@@ b@@ <=@@ (m@@ -2@@ );@@ b++){ d@@ +=@@ sz[@@ b@@ ][n-1]; } printf("%d\n",@@ d); } return0; }  
c -1
h -1
0

int@@ row@@ =0,@@ col@@ =0; void@@ Input@@ (int@@ (*@@ array@@ )@@ [@@ 105@@ ]){ cin>>row>>col; for(inti=0;i<=@@ row@@ -1;i++){ for(intj=0;j<=@@ col-1@@ ;j++){ cin>>@@ *(*(@@ array@@ +i)@@ +j); } } } void@@ Diagonal@@ (int@@ (*@@ array@@ )@@ [@@ 105@@ ],int@@ x,int@@ y){ for(inti@@ =0;@@ ;i++){ if(x@@ +i@@ >@@ row-1@@ ||@@ y@@ -i@@ <0) break; else{ if(x@@ ==0&&@@ y@@ ==0){ cout<<@@ **@@ array@@ ; }else{ cout<<@@ endl@@ <<@@ *(*(@@ array@@ +@@ x@@ +i)@@ +@@ y@@ -i@@ ); } } } return; } void@@ Scan@@ (int@@ (*@@ array@@ )@@ [@@ 105@@ ],int@@ x,int@@ y){ Diagonal@@ (@@ array@@ ,@@ x,@@ y); if(y@@ <col@@ -1) Scan@@ (@@ array@@ ,@@ x,@@ y@@ +1); elseif(x@@ <row@@ -1) Scan@@ (@@ array@@ ,@@ x@@ +1,@@ y); else return; } intmain(){ inta[@@ 105@@ ][@@ 105@@ ]; Input@@ (a); Scan@@ (a,0,@@ 0); }  
c -1
h -1
intsum@@ (intm,@@ intn,@@ inta[@@ ][100@@ ]) { inti,@@ sum=0; for(i=0;i<n;i++) { sum+=*(*(a@@ +m-1)@@ +i); sum+=*(@@ (*@@ a)@@ +i); } for(i=1;i<=@@ m@@ -2;i++) { sum+=@@ **@@ (a@@ +i); sum+=@@ *(*(a+i)@@ +n-1); } returnsum; } intmain() { intm,n,@@ i,k,@@ j,@@ p,@@ a[100][100]; cin>>@@ p; for(i=1;i<=@@ p@@ ;i++) { cin>>m>>n; for(j=0;j<m;j++) { for(k=0;k<n;k++) { cin>>a[j]@@ [k]; } } cout<<sum@@ (@@ m,n,@@ a)@@ <<endl; } return0; }  
c -1
h -1
0

intmain() { inti,j,n,@@ k; introw,col; inta[@@ 101][101]; cin>>row>>col; for(i=1;i<=@@ row;i++) for(j=1;j<=col;j++) { cin>>a[i][j]; } for(j=1;j<=col;j++) { cout<<@@ a[1]@@ [j]<<endl; int@@ k=1; while(@@ ((@@ 1@@ +k)@@ <=row@@ )&&(@@ (j@@ -k@@ )@@ >=1@@ )) { cout<<@@ a[1@@ +k@@ ]@@ [j@@ -k@@ ]<<endl; k++; } } for(i=2;i<=@@ row;i++) { cout<<a[i]@@ [@@ col@@ ]<<endl; int@@ k=1; while((@@ (i@@ +k)@@ <=row@@ )&&(@@ (@@ col@@ -k@@ )@@ >=1@@ )) { cout<<@@ a[i@@ +k@@ ][col@@ -k@@ ]<<endl; k++; } } return0; }  
c -1
h -1
intmain(){ char@@ z1@@ [500],@@ z2@@ [500]; int@@ l@@ =1; double@@ q,@@ m; scanf("%lf",&@@ m); scanf("%s@@ %s",&@@ z1@@ ,&@@ z2@@ ); if(strlen(@@ z1@@ )!=strlen(@@ z2@@ )){ printf("error"); l=0; } else{ for(inti=0;i<@@ strlen(@@ z1@@ );i++){ if((@@ z1@@ [i]!='A'&&@@ z1@@ [i]!='T'&&@@ z1@@ [i]!='G'&&@@ z1@@ [i]!='@@ C')||(@@ z2@@ [i]!='A'&&@@ z2@@ [i]!='T'&&@@ z2@@ [i]!='G'&&@@ z2@@ [i]!='@@ C')){ printf("error"); l=0; break; }elseif(@@ z1@@ [i]==@@ z2@@ [i]) q++; } } if(q@@ /@@ strlen(@@ z1@@ )>@@ m@@ &&@@ l@@ ==1) printf("yes"); elseif(@@ l@@ ==1) printf("no"); return0; }  
c -1
h -1
0

intmain(){ intn,k,i,@@ a[@@ 2000@@ ],@@ j,@@ sum=0; scanf("%d%d",&n,&k); scanf("%d",&@@ a[1]); for(i=2;i<=@@ n;i++){ scanf("%d",&a[i]@@ );@@ for(j=1;j<i;j++) {if((@@ a[j]@@ +@@ a[i]@@ )==@@ k){@@ sum+=@@ 1@@ ;}} } if(sum@@ ==0)@@ printf("no"); else@@ printf("yes"); return0; }  
c -1
h -1
intmain(){ intn,@@ a[100][100],@@ row,col,@@ sum=0; cin>>n; for(inti=0;i<n;i++){ sum=0; cin>>row>>col; for(inti=0;i<row;i++) for(intj=0;j<col;j++) cin>>a[i][j]; if(row@@ ==1&&@@ col@@ ==1)@@ cout<<@@ *(@@ a[0]); else{ for(inti=0;i<@@ col@@ ;i++){ sum+=*(@@ a[0]@@ +i); sum+=*(@@ a[@@ row@@ -1]@@ +i); } for(intj=1;j<@@ row-1@@ ;j++){ sum+=*(@@ a[j]); sum+=*(@@ a[j]@@ +col@@ -1); } cout<<sum<<endl; } } return0; }  
c -1
h -1
0

int@@ v@@ [100][100]; intsum@@ (intm,int@@ n) { int@@ su@@ =0; if(n@@ >=@@ 2@@ &&m@@ >=@@ 2) { for(inti=0;i<n;i++) { su@@ +=@@ v@@ [0]@@ [i]; su@@ +=@@ v@@ [m@@ -1]@@ [i]; } for(inti=1;i<@@ m-1;i++) { su@@ +=@@ v@@ [i]@@ [0]; su@@ +=@@ v@@ [i]@@ [n-1]; } } elseif(n@@ >=@@ 2@@ &&m@@ ==1) { for(inti=0;i<n;i++) { su@@ +=@@ v@@ [0]@@ [i]; } } elseif(m@@ >=@@ 2@@ &&n@@ ==1) { for(inti=0;i<n;i++) { su@@ +=@@ v@@ [i]@@ [0]; } } else { su@@ =@@ v@@ [0][@@ 0]; } return@@ su@@ ; } intmain() { int@@ times@@ ; cin>>@@ times@@ ; for(intk=0;k<@@ times@@ ;k++) { inta,b; cin>>a>>@@ b; for(inti=0;i<@@ a;i++) for(intj=0;j<@@ b;j++) cin>>@@ v@@ [i][j]; cout<<sum@@ (a,@@ b@@ )<<endl; } }  
c -1
h -1
intmain() { int@@ year@@ [2@@ ]={@@ 365@@ ,@@ 366@@ }; int@@ month@@ [2][@@ 12]={31,@@ 28,31,30,31,30,31,31,30,31,30,31@@ ,31,@@ 29,31,30,31,30,31,31,30,31,30,31}; inty,m,@@ d; cin>>y>>m>>d; int@@ type@@ ; if((y%@@ 4==0&&y%100!=0@@ )||@@ y%@@ 400@@ ==0){ type@@ =1; } else{ type@@ =0; } inti; intsum=0; for(i=0;i<m@@ -1;i++){ sum+=@@ month@@ [@@ type@@ ]@@ [i]; } sum+=@@ d; cout<<sum<<endl; return0; }  
c -1
h -1
0

voidshuru@@ (inta[],intb[],int@@ m,intn) { int*p=@@ a,*@@ q=@@ b; inti,j; for(i=0;i<m;i++) {@@ scanf("%d",p@@ );@@ p@@ ++;} for(j=0;j<n;j++) {@@ scanf("%d",@@ q@@ );@@ q@@ ++;} } voidpaixu@@ (inta[],int@@ m) { int*p=@@ a,b,@@ c,d; for(b=0;b@@ <m-1@@ ;@@ b++) { for(c=0;c@@ <m-1@@ -b@@ ;c@@ ++) { if(@@ *(p@@ +c@@ )@@ >*@@ (p@@ +c@@ +1@@ )) { d@@ =*(p@@ +c@@ );@@ *(p@@ +c@@ )@@ =*(p@@ +c@@ +1@@ );@@ *(p@@ +c@@ +1)@@ =@@ d; } } } } voidhebing@@ (inta[],intb[],int@@ c[@@ ],int@@ m,intn) { int*@@ r=@@ a,*@@ s=@@ b@@ ,*@@ t=@@ c,@@ p,q; for(p=0;p@@ <m@@ ;p++) { *(@@ t@@ +p@@ )@@ =*(@@ r@@ +@@ p); } for(q=0;q@@ <n;@@ q++) { *(@@ t@@ +@@ m+@@ q@@ )@@ =*(@@ s@@ +@@ q); } } voidshuchu@@ (inta[],int@@ b) { intc; printf("%d",a[0]); for(c@@ =1;@@ c@@ <b@@ ;c@@ ++) { printf("%d",a[@@ c@@ ]); } } intmain() { inta[@@ 1000@@ ]={0},b[@@ 1000]={0},@@ c[@@ 2000@@ ]={0},@@ m,n; scanf("%d%d",&m,&n); shuru@@ (a,b,m,n); paixu@@ (a,@@ m@@ );@@ paixu@@ (b,n); hebing@@ (a,b,@@ c,@@ m,n); shuchu@@ (c,@@ m+@@ n); }  
c -1
h -1
intmain(){ intsz[@@ 1000][1000],@@ i,j,@@ n,@@ flag=0,@@ row1@@ ,@@ row2@@ ,@@ col1@@ ,@@ col2@@ ; scanf("%d",&n); for(i=0;i<n;i++){ for(j=0;j<n;j++){ scanf("%d",&sz[i][j]); } } for(i=0;i<n;i++){ for(j=0;j<n;j++){ if(sz@@ [i][j]==0){ row1@@ =i; col1@@ =j; flag=1; break; } } if(flag@@ ==1){ break; } } flag=0; for(i=n-1;i>=0;i--){ for(j=n-1@@ ;j>=0;j--){ if(sz@@ [i][j]==0){ row2@@ =i; col2@@ =j; flag=1; break; } } if(flag@@ ==1){ break; } } printf("%d",(@@ row2@@ -@@ row1@@ -1)*(@@ col2@@ -@@ col1@@ -1)); return0; }  
c -1
h -1
0

int@@ str1@@ [100],@@ str2@@ [100],@@ str@@ [@@ 200]; intm,n; voidf1@@ () { inti; scanf("%d%d",&m,&n); for(i=0;i<m;i++) { scanf("%d",&@@ str1@@ [i]); } for(i=0;i<n;i++) { scanf("%d",&@@ str2@@ [i]); } } voidf2@@ (int@@ s@@ [100],int@@ k) { inti,j,t; for(j=0;j<@@ k@@ -1;j++) { for(i=0;i<@@ k-1;i++) { if(s@@ [i]>@@ s@@ [i+1]) { t=@@ s[i]@@ ;@@ s[i]=@@ s@@ [i+1@@ ];@@ s@@ [i+1]=@@ t; } } } } void@@ f3@@ (int@@ s1@@ [100],int@@ s2@@ [100],int@@ s[@@ 200@@ ],int@@ m,intn) { inti; for(i=0;i<m;i++) { s[i]=@@ s1@@ [i]; } for(i=0;i<n;i++) { s@@ [i@@ +m@@ ]=@@ s2@@ [i]; } } void@@ f4@@ (ints[@@ 200@@ ],int@@ m,intn) { inti; for(i=0;i<m+@@ n;i++) { printf("%d",@@ s[i]); if(i<@@ m+@@ n-1) printf(""); } printf("\n"); } voidmain() { f1@@ (); f2@@ (@@ str1@@ ,@@ m); f2@@ (@@ str2@@ ,n); f3@@ (@@ str1@@ ,@@ str2@@ ,@@ str,@@ m,n); f4@@ (@@ str,@@ m,n); }  
c -1
h -1
intmain() { intn,i,j,@@ a,b,c,d,@@ f=0; scanf("%d",&n); intsz[@@ 1000][1000]; for(i=0;i<n;i++) { for(j=0;j<n;j++) { scanf("%d",&sz[i][j]); if(sz@@ [i][j]==0&&@@ f@@ ==0) { a=i; b=j; f=1; } if(sz@@ [i][j]==0) { c=i; d=j; } } } printf("%d",(@@ d-b@@ -1)*(@@ c-a@@ -1)); return0; }  
c -1
h -1
0

intmain() { inta[100][100],@@ n,@@ i,j,k; scanf("%d",&n); for(i=1;i<=n;i++) { inta[100][100],@@ r,@@ l,@@ sum=0; scanf("%d%d",&@@ r@@ ,&@@ l); for(j=0;j<=@@ r@@ -1;j++) for(k=0;k<=@@ l@@ -1;k++) scanf("%d",@@ *(a@@ +j)+@@ k); for(j=0;j<=@@ r@@ -1;j++) { for(k=0;k<=@@ l@@ -1;k++) { if(j==@@ r@@ -1@@ ||j@@ ==0||@@ k==@@ l@@ -1@@ ||@@ k@@ ==0) sum+=*(*(a@@ +j)+@@ k); } }@@ printf("%d\n",sum); } return0; }  
c -1
h -1
intmain(intargc,char*argv[]) { intyear,month,day; intsum=0; scanf("%d%d%d",&year,&month,&day); switch(month) { case1:@@ sum=@@ day;break; case2:@@ sum=@@ 31+@@ day;break; case3:@@ sum=31+28@@ +day;break; case4:@@ sum=31+28@@ +31+@@ day;break; case5:@@ sum=31+28@@ +31+30@@ +day;break; case6:@@ sum=31+28@@ +31+30+31+@@ day;break; case7:@@ sum=31+28@@ +31+30+31+30@@ +day;break; case8:@@ sum=31+28@@ +31+30+31+30+31+@@ day;break; case9:@@ sum=31+28@@ +31+30+31+30+31+31+@@ day;break; case10:@@ sum=31+28@@ +31+30+31+30+31+31+30@@ +day;break; case11:@@ sum=31+28@@ +31+30+31+30+31+31+30+31+@@ day;break; case12:@@ sum=31+28@@ +31+30+31+30+31+31+30+31+@@ 31+@@ day;break; } if(month@@ >2@@ &&(@@ (@@ year%4==0&&year%100!=0@@ )||@@ year%@@ 400==0)@@ )@@ sum=sum+1; printf("%d",sum); return0; }  
c -1
h -1
0

inta[100@@ ],b[100],c[@@ 200]; intm,n; voidinput@@ (); voidsort@@ (); voidcombine@@ (); voidoutput@@ (); intmain() { input(); sort@@ (); combine@@ (); output@@ (); return0; } voidinput() { scanf("%d%d",&m,&n); for(inti=0;i<m;i++) { scanf("%d",&a[i]); } for(intj=0;j<n;j++) { scanf("%d",&@@ b[j]); } } voidsort@@ () { for(intp@@ =1@@ ;p<@@ m@@ ;p++) { for(inti=0;i<@@ (m@@ -@@ p@@ );i++) { if(a[i]>a[i+1]) { inttemp; temp=a[i]; a[i]=a[i+1]; a[i+1]=@@ temp; } } } for(intp@@ =1@@ ;p@@ <n;p++) { for(inti=0;i<@@ (@@ n-@@ p@@ );i++) { if(b[i]>b[i+1]) { inttemp; temp=@@ b[i]; b[i]=b[i+1]; b[i+1]=@@ temp; } } } } voidcombine@@ () { for(inti=0;i<m;i++) { c[i]=a[i]; } for(intj=0;j<n;j++) { c[m@@ +j@@ ]=@@ b[j]; } } voidoutput@@ () { for(inti=0;i<@@ (@@ m+@@ n@@ );i++) { printf("%d",c[i]); if(i<@@ (@@ m+@@ n-1@@ )) printf(""); } }  
c -1
h -1
intmain() { intk; cin>>k; inth@@ [50@@ ]; inti,j; for(i=0;i<@@ k;i++)@@ cin>>@@ h@@ [i]; intnum[@@ 50@@ ],@@ max; num@@ [0]=1; for(i=1;i<k;i++) { max=0; for(j=0;j<i;j++) { if(h@@ [j]>=@@ h@@ [i]@@ &&@@ num[j]@@ >max)max=@@ num@@ [j]; } num[i]=@@ max+1; } max=0; for(i=1;i<k;i++) { if(num@@ [i]@@ >max)max=@@ num[i]; } cout<<max<<endl; return0; }  
c -1
h -1
0

intmain() { inti,j,@@ x,@@ n,m,@@ d,@@ k,@@ y,@@ v@@ =0; chars[@@ 256],b[@@ 256],@@ t@@ [256]; scanf("%s%s%s",@@ s,@@ b,@@ t); n@@ =strlen(s); m@@ =strlen(b); for(i=0;i<=@@ n-@@ m;i++) { if(s[i]==@@ b[0]) { k=i; for(j=0@@ ,@@ x@@ =i@@ ;j<@@ m@@ ;j++,@@ x++) { if(s[@@ x@@ ]!=@@ b[j]) break; } if(j@@ >=@@ m) for(@@ d=@@ k,@@ y=0;@@ d@@ <k@@ +m@@ ;@@ d@@ ++,@@ y@@ ++) { s[@@ d@@ ]=@@ t@@ [y@@ ]; v@@ =1; } } if(@@ v@@ ==1) break; } for(i=0;i<n;i++) printf("%c",s[i]); return0; }  
c -1
h -1
structstudent { intnum; int@@ score1@@ ; int@@ score2; intsum; structstudent*next; structstudent*@@ before@@ ; }; main() { inti,n,@@ n1@@ =0,@@ n2@@ =0,@@ n3@@ =0,@@ m1@@ =0,@@ m2@@ =0,@@ m3@@ =0; structstudent*head; structstudent*p1,*p2; scanf("%d",&n); p1=p2=(structstudent*)malloc(LEN); scanf("%d%d%d",&p1->num,&p1->@@ score1@@ ,&p1->@@ score1@@ ); p1->sum=p1->@@ score1@@ +p1->@@ score2; m1@@ =p1->@@ sum; n1@@ =p1->@@ num; head@@ =0; i=0; while(i<=@@ n-2@@ ) { i++; if(i==1) head=p1; else { p1->@@ before@@ =p2; p2->next=p1; } p2=p1; p1=(structstudent*)malloc(LEN); scanf("%d%d%d",&p1->num,&p1->@@ score1@@ ,&p1->@@ score2); p1->sum=p1->@@ score1@@ +p1->@@ score2; if(p1->@@ sum>@@ m3@@ &&@@ p1->@@ sum<=@@ m2@@ ) { m3@@ =p1->@@ sum; n3@@ =p1->@@ num; } if(p1->@@ sum>@@ m2@@ &&@@ p1->@@ sum<=@@ m1@@ ) { m3=@@ m2@@ ; n3@@ =@@ n2; m2@@ =p1->@@ sum; n2@@ =p1->@@ num; } if(p1->@@ sum>@@ m1@@ ) { m3=@@ m2@@ ; n3@@ =@@ n2; m2=@@ m1@@ ; n2@@ =@@ n1@@ ; m1@@ =p1->@@ sum; n1@@ =p1->@@ num; } } printf("%d%d\n",@@ n1,@@ m1@@ ); printf("%d%d\n",@@ n2,@@ m2@@ ); printf("%d%d\n",@@ n3@@ ,@@ m3@@ ); }  
c -1
h -1
0

main() { charstr@@ [257],@@ sub@@ [257],@@ rep@@ [257]; intk,@@ count=0,@@ i,j@@ =0; gets(str); gets(sub); gets(@@ rep); k=strlen(@@ sub); for(i=0;@@ ;) { if(count==@@ k@@ ||@@ str@@ [j]==@@ '\0') break; else { for(;@@ str@@ [j]@@ !=0&&@@ count@@ !=@@ k;j++) { if(str@@ [j]==@@ sub@@ [i]) { count++; i++; } else { count=0; i=0; } } } } if(count@@ ==k) { for(intt@@ =0;j@@ -k@@ +@@ t@@ <j@@ ;t++) { str@@ [j@@ -k@@ +@@ t@@ ]=@@ rep@@ [t@@ ]; } } printf("%s",str); }  
c -1
h -1
intmain() { charid@@ [100][10],@@ id1@@ [100][10],@@ t@@ [10]; intn,i,j,@@ b,@@ age@@ [100],@@ age1@@ [100]; scanf("%d",&n); for(i=0;i<n;i++){ scanf("%s",@@ id[i]); scanf("%d",&@@ age[i]); strcpy(@@ id1@@ [i],@@ id[i]); age1@@ [i]=@@ age[i]; } for(i=0;i<n-1;i++){ for(j=0;j<n@@ -i@@ -1;j++){ if(@@ age1@@ [j]<@@ age1@@ [j+1@@ ]){ b=@@ age1@@ [j]; age1@@ [j]=@@ age1@@ [j+1]; age1@@ [j+1]=@@ b; strcpy(@@ t,@@ id1@@ [j]); strcpy(@@ id1@@ [j],@@ id1@@ [j+1]); strcpy(@@ id1@@ [j+1],@@ t); } } } for(i=0;i<n;i++){ if(@@ age1@@ [i]@@ >=60) printf("%s\n",@@ id1@@ [i]); } for(i=0;i<n;i++){ if(age[i]@@ <60) printf("%s\n",@@ id[i]); } return0; }  
c -1
h -1
0

struct@@ shu { char@@ xh@@ [100]; char@@ zz@@ [100]; struct@@ shu@@ *next; }; intnum[@@ 26]={0},@@ m; struct@@ shu@@ *creat@@ (intn) { inti=0; struct@@ shu@@ *@@ p1,*p2,*head; p1=p2=(struct@@ shu@@ *)malloc(sizeof(struct@@ shu@@ )); head@@ =0; while(i<n) { i++; if(i==1) { p1->next@@ =0; head=p1; } else { p2=p1; p1=(struct@@ shu@@ *)malloc(sizeof(struct@@ shu@@ )); p1->next=@@ p2->next; p2->next=p1; } scanf("%s%s",@@ p1->@@ xh@@ ,@@ p1->@@ zz@@ ); } returnhead; } void@@ max@@ (struct@@ shu@@ *head) { struct@@ shu@@ *p; char*@@ f; inti,@@ zd@@ =0; for(p=head@@ ;p@@ !=0@@ ;@@ p=p->next) { for(@@ f@@ =p->@@ zz@@ ;*@@ f@@ !='\0'@@ ;@@ f@@ ++) { num[@@ *@@ f@@ -65]++; } } for(i=0;i<26;i++) { if(num@@ [i]>@@ zd@@ ) { zd@@ =@@ num[i]; m=i; } } printf("%c\n",@@ 65@@ +@@ m); printf("%d\n",@@ zd@@ ); } voidprint@@ (@@ head@@ ) { struct@@ shu@@ *p; char*@@ f; for(p=head@@ ;p@@ !=0@@ ;@@ p=p->next) { for(@@ f@@ =p->@@ zz@@ ;*@@ f@@ !='\0'@@ ;@@ f@@ ++) { if(*@@ f@@ ==@@ 65@@ +@@ m) { printf("%s\n",p->@@ xh@@ ); break; } } } } voidmain() { intn; struct@@ shu@@ *@@ head; scanf("%d",&n); head=creat(n); max(@@ head); print(head); }  
c -1
h -1
voidmain() { introw,col,@@ i,j,@@ k@@ ,*p; scanf("%d%d",&row,&col); p=@@ (int*)malloc(sizeof(int)@@ *@@ row@@ *@@ col); for(i=0;i<@@ row@@ *@@ col;i++) scanf("%d",p@@ +i); printf("%d\n",@@ *p@@ );@@ p++; for(i=1;i<@@ col@@ ;i++,@@ p++) for(j=0@@ ,k@@ =0@@ ;k<=@@ i@@ &&(@@ i@@ +j)@@ <(@@ row@@ *col@@ )@@ ;k++@@ ,j@@ =j@@ +col@@ -1) printf("%d\n",*(p@@ +j)); p@@ +=@@ col-1; for(i=1;i<=@@ (@@ row-1)@@ ;i++,@@ p@@ +=@@ col) for(j=0@@ ,k@@ =0@@ ;k<@@ (@@ row@@ -i@@ )@@ &&k@@ <col@@ &&@@ *(p+j)@@ !=0@@ ;k++@@ ,j@@ =j@@ +col@@ -1) printf("%d\n",*(p@@ +j)); }  
c -1
h -1
0

intmain() { intn,i,k,@@ p; intm=0; intsz[1000]; scanf("%d",&n); scanf("%d",&k); for(i=0;i<n;i++) { scanf("%d",&sz[i]); } for(i=0;i<n;i++) { for(p=1@@ ;p<@@ n-i@@ ;p++) { if(sz@@ [i]==@@ k-@@ sz@@ [i+@@ p@@ ]) { printf("yes"); break; } else m++; } if(sz@@ [i]==@@ k-@@ sz@@ [i+@@ p@@ ]) { break; } } if(m==@@ n@@ *(@@ n-1)@@ /@@ 2) printf("no"); return0; }  
c -1
h -1
structstudent { long@@ num; int@@ scorec@@ ; int@@ scorem@@ ; structstudent*next; }; structstudent*creat@@ (@@ long@@ n) { structstudent*head,*p1,*p2; p1=(structstudent*)malloc(LEN); scanf("%ld%d%d",&@@ p1->num,&p1->@@ scorec@@ ,&p1->@@ scorem@@ ); long@@ s=@@ n-1; p1->next=NULL; head=p1; p2=p1; do { p1=(structstudent*)malloc(LEN); scanf("%ld%d%d",&@@ p1->num,&p1->@@ scorec@@ ,&p1->@@ scorem@@ ); p1->next=NULL; p2->next=p1; p2=p1; s=s@@ -1; }while(@@ s); return(head); } voidmain() { structstudent*head,*@@ p,*@@ q,@@ stu1@@ ,@@ stu2@@ ,@@ stu3@@ ; long@@ n,@@ k1@@ =-1,@@ k2@@ =-1,@@ k3@@ =-1,@@ i,j; int@@ l; scanf("%ld",&n); head=creat(n); for(p=head@@ ,i@@ =0;p@@ !=NULL;@@ p=p@@ ->next@@ ,i++) { l=0; for(q=@@ head@@ ,j@@ =0;q@@ !=NULL;@@ q=q@@ ->next@@ ,j@@ ++) if((@@ q->@@ scorec@@ +@@ q->@@ scorem@@ )>@@ (p->@@ scorec@@ +p->@@ scorem@@ )||(@@ ((@@ q->@@ scorec@@ +@@ q->@@ scorem@@ )==@@ (p->@@ scorec@@ +p->@@ scorem@@ ))@@ &&j@@ <i@@ )) { l=l@@ +1; if(l@@ >@@ 3@@ )break; } if(l@@ ==0) { k1@@ =i; stu1@@ .@@ num=@@ p->@@ num;@@ stu1@@ .@@ scorec@@ =p->@@ scorec@@ ;@@ stu1@@ .@@ scorem@@ =p->@@ scorem@@ ; } if(l@@ ==1) { k2@@ =i; stu2@@ .@@ num=@@ p->@@ num;@@ stu2@@ .@@ scorec@@ =p->@@ scorec@@ ;@@ stu2@@ .@@ scorem@@ =p->@@ scorem@@ ; } if(l@@ ==@@ 2) { k3@@ =i; stu3@@ .@@ num=@@ p->@@ num;@@ stu3@@ .@@ scorec@@ =p->@@ scorec@@ ;@@ stu3@@ .@@ scorem@@ =p->@@ scorem@@ ; } if(@@ k1@@ !=@@ -1@@ &&@@ k2@@ !=@@ -1@@ &&@@ k3@@ !=@@ -1)break; } printf("%ld%d\n",@@ stu1@@ .num,@@ stu1@@ .@@ scorec@@ +@@ stu1@@ .@@ scorem@@ ); printf("%ld%d\n",@@ stu2@@ .num,@@ stu2@@ .@@ scorec@@ +@@ stu2@@ .@@ scorem@@ ); printf("%ld@@ %d",@@ stu3@@ .num,@@ stu3@@ .@@ scorec@@ +@@ stu3@@ .@@ scorem@@ ); }  
c -1
h -1
0

inta[@@ 26]; intn; intsum@@ (int@@ k,int@@ b) { intx; if(k==0) x=0; elseif(@@ k@@ !=0) { if((@@ a[@@ n-@@ k@@ ]<=@@ b@@ )) { if((@@ sum@@ (@@ k-1@@ ,a[@@ n-@@ k@@ ])@@ +1)@@ >=@@ sum@@ (@@ k-1@@ ,@@ b@@ )) { b=@@ a[@@ n-@@ k@@ ]; x@@ =1@@ +@@ sum@@ (@@ k-1@@ ,@@ b); } else x=@@ sum@@ (@@ k-1@@ ,@@ b); } elseif((@@ a[@@ n-@@ k@@ ]@@ >b@@ )) x=@@ sum@@ (@@ k-1@@ ,@@ b); } return@@ x; } main() { inti,j; int@@ c=@@ 9999@@ ; scanf("%d",&n); for(i=1;i<=n;i++) { scanf("%d",&@@ a[i@@ -1]); } printf("%d",@@ sum@@ (n,@@ c@@ )); }  
c -1
h -1
voidmain() { inty,m,d,@@ a,@@ i,@@ ans; for(i=1;i<=@@ 5;i++) { scanf("%d%d%d",&y,&m,&d); if(y%@@ 4@@ !=0) a=1; elseif(@@ y%@@ 100!=0) a=0; elseif(@@ y%@@ 400@@ !=0) a=1; else a=0; if(a@@ ) { switch(m) { case1:@@ ans=@@ d;break; case2:@@ ans@@ =31+@@ d;break; case3:@@ ans=@@ 59@@ +d;break; case4:@@ ans=@@ 90@@ +d;break; case5:@@ ans=@@ 120@@ +d;break; case6:@@ ans=@@ 151@@ +d;break; case7:@@ ans=@@ 181@@ +d;break; case8:@@ ans=@@ 212@@ +d;break; case9:@@ ans=@@ 243@@ +d;break; case10:@@ ans=@@ 273@@ +d;break; case11:@@ ans=@@ 304@@ +d;break; case12:@@ ans=@@ 334@@ +d;break; } } else { switch(m) { case1:@@ ans=@@ d;break; case2:@@ ans@@ =31+@@ d;break; case3:@@ ans=@@ 60@@ +d;break; case4:@@ ans=@@ 91@@ +d;break; case5:@@ ans=@@ 121@@ +d;break; case6:@@ ans=@@ 152@@ +d;break; case7:@@ ans=@@ 182@@ +d;break; case8:@@ ans=@@ 213@@ +d;break; case9:@@ ans=@@ 244@@ +d;break; case10:@@ ans=@@ 274@@ +d;break; case11:@@ ans=@@ 305@@ +d;break; case12:@@ ans=@@ 335@@ +d;break; } } printf("%d\n",@@ ans); } }  
c -1
h -1
0

int@@ la@@ =0,@@ lb@@ =0,@@ l=0,@@ a[100],b[100],@@ combine@@ [@@ 200]; voidinput@@ (); void@@ seq@@ (); void@@ sequence@@ (intx@@ [100@@ ]); void@@ com@@ (inta[100],int@@ b[100@@ ]); voidoutput@@ (int@@ combine@@ [@@ 200@@ ]); intmain(){ input(); seq@@ (); com@@ (a,b); output@@ (@@ combine@@ ); return0; } voidinput@@ (){ cin>>@@ la@@ >>@@ lb@@ ; for(inti=0;i<@@ la;i++) cin>>a[i]; for(inti=0;i<@@ lb@@ ;i++) cin>>b[i]; } void@@ seq@@ (){ l=@@ la@@ ; sequence@@ (a); l=@@ lb@@ ; sequence@@ (@@ b); } void@@ sequence@@ (intx@@ [100@@ ]){ int@@ temp=0; for(inti=1;i<@@ l@@ ;i++) for(intj=1;j<=@@ l@@ -i;j++) if(x@@ [j-1]@@ >@@ x@@ [j]) { temp=@@ x@@ [j]; x@@ [j]=@@ x@@ [j-1]; x@@ [j-1]=@@ temp; } } void@@ com@@ (inta[100],int@@ b[100@@ ]){ memcpy@@ (@@ combine@@ ,@@ a,@@ la@@ *@@ 4@@ ); memcpy@@ (@@ combine@@ +@@ la@@ ,@@ b,@@ lb@@ *@@ 4@@ ); } voidoutput@@ (int@@ combine@@ [@@ 200@@ ]){ cout<<@@ combine@@ [0]; for(inti=1;i<@@ la@@ +lb@@ ;i++) cout<<""<<@@ combine@@ [i]; }  
c -1
h -1
intmain() { intn,i,@@ s,@@ a,@@ c@@ =1,@@ k,@@ t; scanf("%d",&n); for(i=0;i<n@@ *@@ n;i++) { scanf("%d",&a); if(a==0) { if(c@@ ) { t=i; c=0; } k=i; } } s=(@@ k@@ %@@ n-@@ t@@ %@@ n-1)@@ *(@@ k/@@ n-@@ t@@ /@@ n-1); printf("%d",s); return0; }  
c -1
h -1
0

intmain() { intn,k,i,j,@@ c,@@ tag@@ =0; inta[1000]; scanf("%d%d",&n,&k); for(i=0;i<n;i++) { scanf("%d",&a[i]); } for(i=0;i<n;i++) { c=@@ k-@@ a[i]; for(j=0;j<n;j++) { if(j==@@ i)@@ continue; if(c==@@ a[j])@@ tag@@ =1; if(tag@@ ==1)break; } if(tag@@ ==1)break; } if(tag@@ ==1)@@ printf("yes"); if(tag@@ ==0)@@ printf("no"); return0; }  
c -1
h -1
intmain(intargc,char*argv[]) { int@@ col,@@ row,@@ sz[@@ 99@@ ][@@ 99@@ ],@@ i,j; scanf("%d%d",&row,&col); for(i=0;i<row;i++){ for(j=0;j<col;j++){ scanf("%d",&sz[i][j]); } } for(i=0;i<@@ col@@ ;i++){ for(j=0;j<=@@ i@@ &&j@@ <row@@ ;j++){ printf("%d\n",@@ sz[j]@@ [i-j@@ ]); } } for(i=1;i<@@ row;i++){ for(j=0@@ ;j@@ +i@@ <row@@ &&j@@ <col@@ ;j++){ printf("%d\n",sz@@ [i+j@@ ][col@@ -j@@ -1]); } } return0; }  
c -1
h -1
0

intmain(intargc,char*argv[]) { intyear,month,day; int@@ real@@ ; scanf("%d%d%d",&year,&month,&day); if((year%4==0&&year%100!=0)||(year%400==0)) { if(month==1) { printf("%d",@@ day); } if(month==2) { real@@ =31+@@ day; printf("%d",@@ real@@ ); } if(month==3) { real@@ =31+29@@ +day; printf("%d",@@ real@@ ); } if(month==@@ 4) { real@@ =31+29@@ +31+@@ day; printf("%d",@@ real@@ ); } if(month==@@ 5) { real@@ =@@ 31@@ *2@@ +30@@ +29@@ +day; printf("%d",@@ real@@ ); } if(month==@@ 6) { real@@ =@@ 31*3@@ +30@@ +29@@ +day; printf("%d",@@ real@@ ); } if(month==@@ 7) { real@@ =@@ 31*3@@ +30*2@@ +29@@ +day; printf("%d",@@ real@@ ); } if(month==8) { real@@ =@@ 31*@@ 4@@ +30*2@@ +29@@ +day; printf("%d",@@ real@@ ); } if(month==@@ 9) { real@@ =@@ 31*5@@ +30*2@@ +29@@ +day; printf("%d",@@ real@@ ); } if(month==@@ 10) { real@@ =@@ 31*5@@ +30@@ *3@@ +29@@ +day; printf("%d",@@ real@@ ); } if(month==@@ 11) { real@@ =@@ 31*6@@ +30@@ *3@@ +29@@ +day; printf("%d",@@ real@@ ); } if(month==@@ 12) { real@@ =@@ 31*6@@ +30@@ *@@ 4@@ +29@@ +day; printf("%d",@@ real@@ ); } } else { if(month==1) { printf("%d",@@ day); } if(month==2) { real@@ =31+@@ day; printf("%d",@@ real@@ ); } if(month==3) { real@@ =31+28@@ +day; printf("%d",@@ real@@ ); } if(month==@@ 4) { real@@ =31+28@@ +31+@@ day; printf("%d",@@ real@@ ); } if(month==@@ 5) { real@@ =@@ 31@@ *2@@ +30@@ +28@@ +day; printf("%d",@@ real@@ ); } if(month==@@ 6) { real@@ =@@ 31*3@@ +30@@ +28@@ +day; printf("%d",@@ real@@ ); } if(month==@@ 7) { real@@ =@@ 31*3@@ +30*2@@ +28@@ +day; printf("%d",@@ real@@ ); } if(month==8) { real@@ =@@ 31*@@ 4@@ +30*2@@ +28@@ +day; printf("%d",@@ real@@ ); } if(month==@@ 9) { real@@ =@@ 31*5@@ +30*2@@ +28@@ +day; printf("%d",@@ real@@ ); } if(month==@@ 10) { real@@ =@@ 31*5@@ +30@@ *3@@ +28@@ +day; printf("%d",@@ real@@ ); } if(month==@@ 11) { real@@ =@@ 31*6@@ +30@@ *3@@ +28@@ +day; printf("%d",@@ real@@ ); } if(month==@@ 12) { real@@ =@@ 31*6@@ +30@@ *@@ 4@@ +28@@ +day; printf("%d",@@ real@@ ); } } return0; }  
c -1
h -1
intmain() { inta,b,c,@@ i,@@ e; ints[@@ 12@@ ]; int@@ d=0; scanf("%d%d%d",&a,&b,&c); if(a%@@ 4==0&&a%100!=0@@ ||a%@@ 400==0) s@@ [1]=@@ 29; else s@@ [1]=@@ 28; s[@@ 0]=@@ 31@@ ;@@ s[2@@ ]=31@@ ;@@ s[@@ 3@@ ]=30@@ ;@@ s[@@ 4@@ ]=31@@ ;@@ s[@@ 5@@ ]=30@@ ;@@ s[@@ 6@@ ]=31@@ ;@@ s[@@ 7@@ ]=31@@ ;@@ s[@@ 8@@ ]=30@@ ;@@ s[@@ 9@@ ]=31@@ ;@@ s[@@ 10@@ ]=30@@ ;@@ s[@@ 11@@ ]=31; for(i=1;i<=@@ b;i++) { d=d+@@ s@@ [i@@ -2@@ ]; } e=@@ d@@ +c; printf("%d",@@ e); return0; }  
c -1
h -1
1


voidmain() { inti,j,@@ k=0,@@ m@@ =1,@@ n,@@ a[@@ 20000],b[@@ 20000]; scanf("%d",&n); for(i=0;i<n;i++) { scanf("%d",&a[i]); } b[0]=@@ a[0]; for(i=1;i<n;i++) { for(j=0;j<i;j++) { if(a[i]==a[j]) { k++; } } if(k==0) { b[m@@ ]=a[i]; m++; } k=0; } printf("%d",@@ b[0]@@ ); for(i=1;i<m;i++) { printf("%d",b[i]); } }  
c -1
h -1
voidmain() { intn,i,@@ m,@@ k=0,@@ t,@@ a[@@ 20001]; scanf("%d\n",&n); for(i=0;i<n;i++)@@ scanf("%d",&a[i]); for(i=1;i<@@ n-@@ k;i++) { for(m=1;m@@ <=i@@ ;m++) { if(a[i]==@@ a[i@@ -m@@ ]) { t=i; for(i=@@ t@@ ;i<@@ n-@@ k;i++)@@ a[i]=a[i+1]; i=@@ t@@ -1; k++; } } } for(i=0;i<n@@ -k@@ -1;i++)@@ printf("%d",a[i]); printf("%d",a[@@ n-@@ k@@ -1]); }  
c -1
h -1
1


struct@@ person { charID@@ [20]; intage; }; intmain() { struct@@ person@@ a[100@@ ]={0},@@ b[100@@ ]={0},@@ t; intn,i,j,@@ k=0; scanf("%d",&n); for(i=0;i<n;i++) { scanf("%s%d",@@ a[i].@@ ID,&@@ a[i].@@ age); if(a[i].age@@ >=60) { b[k@@ ]=a[i]; k++; } } for(i=0;i<@@ k-1;i++) for(j=0;j<@@ k-1@@ -i;j++) { if(b[j]@@ .@@ age@@ <b@@ [j+1@@ ].age) { t=@@ b[j]; b[j]=b[j+1]; b[j+1]=@@ t; } } for(i=0;i<k;i++) { puts(@@ b[i].@@ ID); printf("\n"); } for(i=0;i<n;i++) { if(a[i].age@@ <60) { puts(@@ a[i].@@ ID); printf("\n"); } } return0; }  
c -1
h -1
intn; int@@ map@@ [@@ 1010@@ ][@@ 1010@@ ]; void@@ init@@ (); void@@ work@@ (); intmain() { init@@ (); work@@ (); return0; } void@@ init@@ () { inti,j; cin>>n; for(i=0;i<n;i++) { for(j=0;j<n;j++) { cin>>@@ map@@ [i][j]; } } } void@@ work@@ () { int@@ sx@@ ,@@ sy@@ ,@@ ex@@ ,@@ ey@@ ,@@ f,@@ i,j; sx@@ =@@ sy@@ =0; ex@@ =@@ ey@@ =@@ n-1; f=0; for(i=0;i<n;i++) { for(j=0;j<n;j++) { if(@@ map@@ [i][j]==0) { sx@@ =i; sy@@ =j; f=1; break; } } if(f@@ )break; } f=0; for(i=n-1;i>=0;i--) { for(j=n-1;j>=0;j--) { if(@@ map@@ [i][j]==0) { ex@@ =i; ey@@ =j; f=1; break; } } if(f@@ )break; } cout<<(@@ ex@@ -@@ sx@@ -1)*(@@ ey@@ -@@ sy@@ -1)@@ <<endl; }  
c -1
h -1
0

intmain() { intn=0,@@ k=0,@@ i=0,j=0,@@ a[@@ 1000]={0},@@ q=0; cin>>n>>k; for(i=0;i<n;i++) { cin>>a[i]; } for(i=0;i<n;i++) { for(j=0;j<n;j++) { if(a[i]+a[j]==k) q++; } } if(q@@ >=@@ 1) cout<<"yes@@ "<<endl; else@@ cout<<"no@@ "<<endl; return0; }  
c -1
h -1
intmain(){ for(inti@@ =0;@@ ;i++){ inta[16]; inttemp; cin>>@@ temp; if(temp@@ ==-1) break; else@@ a[0]=@@ temp; int@@ n=1; for(intj@@ =1;@@ ;j++){ int@@ temp1@@ ; cin>>@@ temp1@@ ; if(@@ temp1@@ ==0) break; else{@@ a[j]=@@ temp1@@ ; n++; } } intm=0; for(inti=0;i<n;i++){ for(intj=0;j<n;j++){ if((@@ a[i]==@@ (@@ 2*@@ a[j])@@ )) m++; } } cout<<@@ m@@ <<endl; } return0; }  
c -1
h -1
0

int@@ t=1; void@@ fen@@ (intn,int@@ i) { for(i@@ =i@@ ;i@@ *@@ i<=@@ n;i++) { if(n%i==0) { fen@@ (n/i,i); t++; } } } intmain() { intk; cin>>k; while(k@@ --) { intn; cin>>n; t=1; fen@@ (n,@@ 2); cout<<t@@ <<endl; } }  
c -1
h -1
intmain() { intsz[100][100]; introw,col; scanf("%d%d",&row,&col); for(inti=0;i<row;i++) { for(intj=0;j<col;j++) { scanf("%d",&sz[i][j]); } } for(intk=0@@ ;k<=@@ row+col-2@@ ;k++) { if((@@ k@@ <=col@@ -1)@@ &&(@@ k@@ <=row@@ -1)) { for(intl@@ =0;@@ l@@ <=k;@@ l++) { printf("%d\n",@@ sz[@@ l@@ ][@@ k-@@ l@@ ]); } } elseif((@@ k@@ <=col@@ -1)@@ &&(@@ k@@ >@@ row@@ -1)) { for(intm=0;m@@ <=row-1@@ ;m++) { printf("%d\n",@@ sz[m@@ ][@@ k-@@ m@@ ]); } } elseif((@@ k@@ >@@ col@@ -1)@@ &&(@@ k@@ <=row@@ -1)) { for(int@@ t=@@ k-@@ col@@ +1@@ ;t@@ <=k;@@ t++) { printf("%d\n",@@ sz[@@ t@@ ][@@ k-@@ t@@ ]); } } elseif((@@ k@@ >@@ col@@ -1)@@ &&(@@ k@@ >@@ row@@ -1)) { for(int@@ p=@@ k-@@ col@@ +1@@ ;p@@ <=row-1@@ ;p++) { printf("%d\n",@@ sz[@@ p@@ ][@@ k-@@ p@@ ]); } } } return0; }  
c -1
h -1
0

intmain(){ intt; cin>>t; while(t@@ >0) { inta[@@ 102@@ ][@@ 102@@ ]; intm,n; cin>>m>>n; intsum=0; for(inti=0;i<@@ m;i++){ for(intj=0;j<n;j++) cin>>*(*(a+i)+j); } if(m@@ ==1){ for(inti=0;i<n;i++) sum+=*(@@ *a@@ +i); } else{ for(inti=0;i<n;i++) sum+=*(@@ *a@@ +i); for(inti=1;i<@@ m-1;i++) sum=sum+@@ *(*(a+i)@@ )+@@ *(*(a+i)@@ +n-1); for(inti=0;i<n;i++) sum+=*(*(a@@ +m-1)@@ +i); } cout<<sum<<endl; t@@ --; } return0; }  
c -1
h -1
intmain() { inta; scanf("%d",&a); if(a==@@ 9) printf("@@ 9@@ \n"); elseif(a@@ ==@@ 6) printf("@@ 2@@ \n"); return0; }  
c -1
h -1
0

struct@@ m {int@@ no@@ ,j; chara[@@ 27]; } main() {@@ intn,k,i,j,@@ no@@ ,@@ ath@@ [26]={0},@@ m; char*@@ t,@@ a[@@ 26]; struct@@ m@@ *head,*@@ p1,*p2,*@@ tp@@ ,*@@ q; scanf("%d",&n); head=(struct@@ m@@ *)@@ calloc@@ (n,@@ L@@ ); for(i=0;i<n;i++) {@@ scanf("%d%s",&@@ (@@ head@@ +i)->@@ no@@ ,@@ (@@ head@@ +i)->@@ a); (@@ head@@ +i)->@@ j=0; for(t@@ =(@@ head@@ +i)->@@ a;@@ *@@ t@@ !='\0'@@ ;t++) { ath@@ [@@ *@@ t@@ -'A']++; } } for(m=@@ ath@@ [0],@@ k=0,@@ i=1@@ ;i<@@ 26;i++) {if(@@ ath@@ [i]>@@ m@@ ){@@ k@@ =i;@@ m=@@ ath@@ [i]@@ ;} } printf("%c",@@ 'A'+@@ k); m=0; for(i=0;i<n;i++) {@@ for(t@@ =(@@ head@@ +i)->@@ a;@@ *@@ t@@ !='\0'@@ ;t++) if(*@@ t@@ ==@@ (@@ 'A'+@@ k@@ )) {@@ (@@ head@@ +i)->@@ j=1; m++; break; } } printf("\n@@ %d\n",@@ m); for(i=0;i<n;i++) {if((@@ head@@ +i)->@@ j@@ ==1){ printf("%d",(@@ head@@ +i)->@@ no@@ ); m@@ --; if(m@@ >0@@ )@@ printf("\n@@ ");} } }  
c -1
h -1
voidmain() { inti; int@@ aa@@ [100],@@ bb@@ [100],@@ cc@@ [@@ 200],@@ la@@ ,lb@@ ; void@@ scan@@ (inta[],int@@ la@@ ,int@@ b[],int@@ lb@@ ); voidsort@@ (inta[],int@@ n); voidcombine@@ (inta[],int@@ la@@ ,int@@ b[],int@@ lb@@ ,int@@ c[@@ ]); scanf("%d%d",&@@ la@@ ,&@@ lb@@ ); scan@@ (@@ aa@@ ,@@ la@@ ,@@ bb@@ ,lb@@ ); sort(@@ aa@@ ,@@ la@@ ); sort(@@ bb@@ ,lb@@ ); combine@@ (@@ aa@@ ,@@ la@@ ,@@ bb@@ ,lb@@ ,@@ cc@@ ); } void@@ scan@@ (inta[],int@@ la@@ ,int@@ b[],int@@ lb@@ ) { inti; for(i=0;i<@@ la;i++) scanf("%d",&a[i]); for(i=0;i<@@ lb@@ ;i++) scanf("%d",&b[i]); } voidsort@@ (inta[],intn) { inti,j,k,@@ temp; for(i=0;i<n-1;i++) { k=i; for(j=i+1;j<n;j++) if(a[j]@@ <@@ a[k]@@ )@@ k=j; temp=@@ a[k]@@ ;@@ a[k]=@@ a[i];a[i]=@@ temp; } } voidcombine@@ (inta[],int@@ la@@ ,int@@ b[],int@@ lb@@ ,int@@ c[@@ ]) { inti; for(i=0;i<@@ lb@@ ;i++) a[@@ la@@ +i]=b[i]; for(i=0;i<@@ la@@ +lb@@ ;i++) c[i]=a[i]; printf("%d",c@@ [0]); for(i=1;i<@@ la@@ +lb@@ ;i++) printf("%d",c[i]); }  
c -1
h -1
0

int@@ count; voidf@@ (intx,inty) { inti=0; if(x@@ >=@@ y) for(i=y@@ ;i<=@@ x;i++) { if(i==@@ x)@@ count++; if(x@@ %i==0)@@ f(@@ x@@ /i,i); } } main() { intt; intn,i,@@ x@@ ,j; scanf("%d",&n); for(i=0;i<n;i++) { count=0; scanf("%d",&x); f(@@ x,@@ 2); printf("%d\n",@@ count); } }  
c -1
h -1
int@@ total@@ ,@@ p; void@@ part@@ (int@@ y){ int@@ i2@@ ,@@ up@@ ; if(y@@ ==1)@@ return; up@@ =@@ (int)sqrt(@@ y); for(@@ i2@@ =@@ 2;@@ i2@@ <=@@ up@@ ;@@ i2@@ ++){ if(p@@ <=@@ i2@@ ){ if(y%@@ i2@@ ==0){ total@@ ++; p=@@ i2@@ ; part@@ (y@@ /@@ i2@@ ); p=0; } } } } intmain(){ intn,i,@@ a; scanf("%d",&n); for(i=1;i<=n;i++){ total=0; p=0; scanf("%d",&a); part@@ (a); printf("%d\n",@@ total@@ +1); } return0; }  
c -1
h -1
1


intmain(){ double@@ s; char@@ sz1@@ [500]; char@@ sz2@@ [500]; inti,@@ n=0; int@@ len1,len2@@ ; double@@ num; scanf("%lf%s%s",&@@ s,@@ sz1@@ ,@@ sz2@@ ); len1=strlen(@@ sz1@@ ); len2=strlen(@@ sz2@@ ); if(len1!=@@ len2){ printf("error"); return0; }else{ for(i=0;i<len1;i++){ if((@@ sz1@@ [i]!='A'&&@@ sz1@@ [i]!='T'&&@@ sz1@@ [i]!='C'&&@@ sz1@@ [i]!='G')||(@@ sz2@@ [i]!='A'&&@@ sz2@@ [i]!='T'&&@@ sz2@@ [i]!='C'&&@@ sz2@@ [i]!='G')){ printf("error"); return0; } } for(i=0;i<len1;i++){ if(@@ sz1@@ [i]==@@ sz2@@ [i]){ n++; } } num@@ =1.0*@@ n/@@ len1; if(num@@ >@@ s@@ ){ printf("yes"); return0; }else{ printf("no"); return0; } } }  
c -1
h -1
main() { intk,m,n,@@ a[100][100],@@ i,j,@@ sum; scanf("%d",&k); for(@@ ;k@@ >0@@ ;k--) { scanf("%d%d",&m,&n); sum=0; for(i=0;i<m;i++) for(j=0;j<n;j++) a[i][j]@@ =0; for(i=0;i<m;i++) for(j=0;j<n;j++) scanf("%d",&a[i][j]); for(j=0;j<n;j++) sum=sum+@@ a[0]@@ [j]+@@ a[m-1][j]; for(i=1;i<m-1;i++) sum=sum+@@ a[i][0]+@@ a[i][n-1]; printf("%d\n",sum); } }  
c -1
h -1
0

structpatient { charID[10]; intage; }@@ pat@@ [100]; intmain() { structpatient@@ t; structpatient@@ num@@ [100]; intn,i,j,@@ a=1; scanf("%d",&n); for(i=0;i<n;i++) scanf("%s%d",@@ pat[i].@@ ID,&@@ pat@@ [i].age); for(i=0;i<n;i++) {if(@@ pat@@ [i].age>=60) {@@ num[@@ a@@ -1@@ ]=@@ pat@@ [i]; a@@ ++;} } for(i=0;i<@@ a@@ -2;i++) {@@ for(j=0;j<a@@ -2@@ -i;j++) if(num@@ [j].age@@ <@@ num@@ [j+1@@ ].age) {t=@@ num@@ [j]; num@@ [j]=@@ num@@ [j+1]; num@@ [j+1]=@@ t;} } for(i=0;i<@@ a@@ -1;i++) printf("%s\n",@@ num@@ [i].ID); for(i=0;i<n;i++) {if(@@ pat@@ [i].age<60) printf("%s\n",@@ pat[i].@@ ID@@ );} return0; }  
c -1
h -1
intmain() { inta[20000]; inti,j,k,@@ x; scanf("%d",&x); for(i=0;i<x;i++) scanf("%d",&a[i]); for(i=0;i<x;i++) { for(j=i+1;j<@@ x;j++) { if(a[i]==a[j]) { x@@ --; for(k=j@@ ;k<@@ x@@ ;k++) a[k]=a[k@@ +1]; j--; } } } for(i=0;i<x@@ -1;i++)@@ printf("%d",a[i]); if(i<@@ x)@@ printf("%d",a[i]); return0; }  
c -1
h -1
0

intmain() { intn,k,@@ a[1000],@@ YN@@ =0; scanf("%d%d",&n,&k); for(inti=0;i<n;i++) { scanf("%d",&a[i]); } for(intj=0;j<@@ n-1;j++) { for(intm@@ =j@@ ;m@@ <n;m++) { int@@ he@@ =@@ a[j]@@ +@@ a[m@@ ]; if(@@ he@@ ==k) { YN@@ =1; break; } } } if(@@ YN@@ ==1) printf("yes"); elseif(@@ YN@@ ==0) printf("no"); return0; }  
c -1
h -1
intmain(){ char@@ sz[@@ 2][@@ 510@@ ]; doublea,@@ e; intb,@@ c,d,@@ f; ints[@@ 2@@ ]; d=0; scanf("%lf",&a); for(b=0;b@@ <@@ 2;@@ b++){ scanf("%s",&@@ sz[@@ b@@ ]); s[@@ b@@ ]=@@ strlen(@@ sz@@ [0]); for(@@ f@@ =0;@@ f@@ <@@ s[@@ b@@ ];@@ f@@ ++){ if(sz[@@ b@@ ][@@ f@@ ]!='@@ A'&&@@ sz[@@ b@@ ][@@ f@@ ]!='@@ T'&&@@ sz[@@ b@@ ][@@ f@@ ]!='@@ G'&&@@ sz[@@ b@@ ][@@ f@@ ]!='@@ C'){ printf("error"); return0; } } } if(s@@ [0]@@ !=@@ s[1]@@ ){ printf("error\n"); return0; } for(b=0;b@@ <@@ s[0]@@ ;@@ b++){ if(@@ sz[0][@@ b@@ ]==@@ sz@@ [1@@ ][b@@ ]){ d++; } } e@@ =1.0*@@ d@@ /@@ s[@@ 0]; if(e@@ >@@ a){ printf("yes\n"); } else{ printf("no\n"); } return0; }  
c -1
h -1
0

intmain() { inti,n,@@ f@@ =0,@@ m=0,@@ j; struct { charid[10]; intage; }@@ bingren@@ [100],@@ t@@ [100],@@ l@@ [100],@@ c; scanf("%d",&n); for(i=0;i<n;i++) { scanf("%s%d",&@@ bingren@@ [i].id,&@@ bingren@@ [i].age); } for(i=0;i<n;i++) { if(@@ bingren@@ [i].age>=60) t[@@ f@@ ++]=@@ bingren@@ [i]; elseif(@@ bingren@@ [i].age<60) l@@ [m@@ ++]=@@ bingren@@ [i]; } for(i=1;i<@@ f@@ ;i++) { for(j=i@@ ;j>0;j--) { if(t@@ [j].age@@ >@@ t@@ [j-1@@ ].age) { c=@@ t@@ [j]; t@@ [j]=@@ t@@ [j-1]; t@@ [j-1]=@@ c; } } } for(i=0;i<@@ f@@ ;i++) { printf("%s\n",@@ t@@ [i].id); } for(i=0;i<m;i++) { printf("%s\n",@@ l@@ [i].id); } return0; }  
c -1
h -1
intmain() { intn,@@ num[@@ 90@@ ]={0},@@ a[@@ 20001@@ ]={0},@@ i; cin>>n; cin>>@@ a[1]; num[@@ a[1]@@ -@@ 10@@ ]++; cout<<@@ a[1]; for(i=2;i<=n;i++) { cin>>a[i]; num[@@ a[i]@@ -@@ 10@@ ]++; if(@@ num[@@ a[i]@@ -@@ 10@@ ]@@ ==1)@@ cout<<""<<a[i]; } return0; }  
c -1
h -1
0

voidmain() { inti,j,@@ m,n,@@ a=0; int(*p)@@ [@@ 10000]; scanf("%d%d",&m,&n); p=@@ (int@@ (@@ *)@@ [@@ 10000@@ ])@@ calloc@@ (@@ 10000@@ ,@@ 10000@@ ); for(i=0;i<=@@ m-1;i++) { for(j=0;j<=n-1;j++) { scanf("%d",*(p+i)+j); } } i=0; j=0; while(@@ a@@ <@@ n+@@ m-1) { while(i@@ !=@@ m@@ &&j@@ !=-1) { printf("%d\n",@@ *(*(p+i)@@ +j)); i++; j--; } a++; if(a@@ >@@ n-1) { j=@@ n-1; i=@@ a@@ -(@@ n-1); } elseif(a@@ <=@@ n-1) { j=@@ a; i=0; } } }  
c -1
h -1
intn; inta[@@ 29@@ ]={@@ ~@@ 0U@@ >>@@ 1@@ },@@ f[@@ 29@@ ]={0}; int@@ ans=0; intmain(){ scanf("%d",&n); for(inti=1;i<=@@ n;++@@ i){ scanf("%d",&a[i]); } for(inti=1;i<=@@ n;++@@ i){ for(intj=0;j<@@ i@@ ;++@@ j){ if(a[i]<=@@ a[j]&&@@ f@@ [i]<@@ f@@ [j]@@ +1@@ ){ f[i]=@@ f@@ [j]+1; } } if(f@@ [i]>@@ ans@@ ){ ans=@@ f[i]; } } printf("%d\n",@@ ans); return0; }  
c -1
h -1
0

intmain() { intn,k,i,j,@@ l; inta[100@@ ],@@ c[100],@@ d@@ [100]; char@@ b[100@@ ][@@ 11]; scanf("%d",&n); for(i=0;i<n;i++) { scanf("%s",@@ b[i]); scanf("%d",&a[i]); d[i]=@@ a[i]; c[i]=@@ i; } for(j=0;j<n;j++) { for(i=0;i<n-1;i++) { if(d@@ [i]<@@ d@@ [i+1]) { k=@@ d[i]; d[i]=@@ d@@ [i+1]; d@@ [i+1]=@@ k; k=@@ c[i]; c[i]=@@ c@@ [i+1]; c@@ [i+1]=@@ k; } } } for(j=0;j<n;j++) { if(d@@ [j]@@ <60) { l@@ =j; break; } } for(j=0;j<l;j++) { k=@@ c[j]; printf("%s\n",@@ b[k@@ ]); } for(i=0;i<n;i++) { if(a[i]@@ <60) { printf("%s\n",@@ b[i]); } } return0; }  
c -1
h -1
intmain() { intn,i,j,k,@@ s,@@ b=0,@@ c1@@ =0,@@ c2@@ =0; scanf("%d",&n); for(i=1;i<=n;i++) {@@ for(j=1;j<=n;j++) {@@ scanf("%d",&k); if(k==0) {@@ c2@@ ++;} if(k@@ ==0&&@@ b@@ ==0) {@@ c1@@ ++;} elseif(@@ k==@@ 255@@ &&@@ b@@ ==0&&@@ c1@@ >0) {@@ b@@ =1;@@ }}} s=(@@ c1@@ -2)*(@@ c2@@ -@@ c1@@ *2@@ )@@ /2; printf("%d",s); return0; }  
c -1
h -1
0

intmain() { charstr[256],@@ sub[256],@@ rep@@ [256]; cin.getline(@@ str,@@ 256); cin.getline(@@ sub,@@ 256); cin.getline(@@ rep@@ ,@@ 256); inti,j,@@ len1,len2@@ ; len1=strlen(@@ str); len2=strlen(@@ sub); for(i=0;i<=@@ len1@@ -len2@@ ;i++) { j=0; while(@@ str@@ [i+j]==@@ sub@@ [j]@@ &&j@@ <@@ len2) j++; if(j==@@ len2) { while(j@@ >0) { j--; str@@ [i+j@@ ]=@@ rep@@ [j]; } break; } } cout<<str@@ <<endl; return0; }  
c -1
h -1
intmain() { intnum@@ (intn,int@@ *p@@ ); intn; inti=0; int*p; scanf("%d",&n); p=@@ (int*)malloc(sizeof(int)*n); for(i=0;i<n;i++)@@ scanf("%d",p@@ +i); printf("%d",@@ num@@ (n,@@ p@@ )); getchar(); getchar(); getchar(); } intnum@@ (intn,int@@ *p@@ ) { inti,j,@@ tem@@ =0,@@ a=0; int*@@ max=@@ (int*)malloc(sizeof(int)*n); max@@ [n-1@@ ]=1; for(i=n-2;i>=0;i--) { tem@@ =0; for(j=n-1;j>i;j--) { if(p@@ [i]>=@@ p@@ [j]) { if(@@ tem@@ <@@ max@@ [j]) tem@@ =@@ max@@ [j]; } } max@@ [i]=@@ tem@@ +1; } a=0; for(i=0;i<n;i++) if(max@@ [i]>@@ a)@@ a=@@ max@@ [i]; return@@ a; }  
c -1
h -1
0

intmain() { int@@ array@@ [100][100],@@ row,col; int@@ c,@@ r,@@ sum; scanf("%d%d",&@@ row,@@ &@@ col); for(r=0;r@@ <row@@ ;r++) { for(c=0;c@@ <col@@ ;c@@ ++) { scanf("%d",&@@ array[@@ r@@ ][c@@ ]); } } for(@@ sum=0;@@ sum<=@@ row+col-2@@ ;@@ sum@@ ++) { if(sum@@ <col) { for(@@ c=@@ sum@@ ;c@@ >=0@@ ;c@@ --) { if((@@ sum@@ -@@ c)@@ >=@@ row@@ )break; printf("%d\n",@@ array[@@ sum@@ -c@@ ][c@@ ]); } } else { for(@@ r=@@ sum@@ -col@@ +1;@@ r@@ <row@@ ;r++) { if((@@ sum@@ -@@ r@@ )@@ <0@@ )break; printf("%d\n",@@ array[@@ r@@ ][@@ sum@@ -@@ r@@ ]); } } } return0; }  
c -1
h -1
voidmain() { inti,j,n,@@ c[@@ 1000][1000],@@ count=0,@@ mark@@ ; scanf("%d",&n); for(i=0;i<n;i++) { for(j=0;j<n;j++) scanf("%d",&@@ c@@ [i][j]); } for(i=0;i<n;i++) { mark@@ =0; for(j=0;j<n;j++) { if(c@@ [i][j]==0&&@@ c[i]@@ [j+1@@ ]==0) break; else { if(c@@ [i][j]==0) mark@@ ++; } if(c@@ [i][j]@@ &&@@ mark@@ %@@ 2) count++; } } printf("%d\n",@@ count); }  
c -1
h -1
0

intmain() { intk,m,n,i,j,@@ a,@@ num[@@ 150@@ ][@@ 150@@ ],@@ sum; scanf("%d",&k); for(i=1;i<=k;i++) { scanf("%d%d\n",&@@ m,&n); sum=0; for(j=0;j<m;j++) { for(a=0;a@@ <n;@@ a++) { scanf("%d",&@@ num[j]@@ [a@@ ]); } } for(j=0;j<n;j++) { sum+=@@ num@@ [0]@@ [j]; if(m@@ !=1) { sum+=@@ num[m@@ -1][j]; } } for(j=1;j<@@ m-1;j++) { sum+=@@ (@@ num[j]@@ [0]); if(n@@ !=1) { sum+=@@ num[j]@@ [n-1]; } } printf("%d\n",sum); } return0; }  
c -1
h -1
structstu { long@@ num,@@ ch@@ ,@@ ma@@ ,@@ tot@@ ; structstu*next; }; intmain() { intn,@@ numt@@ ,@@ cht@@ ,@@ mat@@ ; scanf("%d",&n); structstu@@ *head,*@@ now@@ ,*@@ neww@@ ,*@@ max; inti; for(i=1;i<=n;i++) { neww@@ =(struct@@ stu*)malloc(sizeof(structstu)); neww@@ ->next@@ =0; if(i==1) {@@ head=@@ neww@@ ; now@@ =@@ neww@@ ;} else { now@@ ->next=@@ neww@@ ; now@@ =@@ neww@@ ; } scanf("%ld@@ %ld@@ %ld@@ ",&@@ now@@ ->@@ num,&@@ now@@ ->@@ ch@@ ,&@@ now@@ ->@@ ma@@ ); now@@ ->@@ tot@@ =@@ now@@ ->@@ ch@@ +@@ now@@ ->@@ ma; } for(i=1;i<=@@ 3;i++) { now@@ =head; max=@@ now@@ ; while(@@ now@@ ->next@@ !=0) { if(max@@ ->@@ tot@@ <@@ now@@ ->@@ tot@@ )max=@@ now@@ ; now@@ =@@ now@@ ->next; } printf("%d%d\n",@@ max@@ ->num,@@ max@@ ->@@ tot@@ ); max@@ ->@@ tot@@ =-1; } return0; }  
c -1
h -1
0

intmain() { intnum[@@ 16@@ ]={0},@@ i=0,j=0,@@ sum=0; while(1) { scanf("%d",&@@ num@@ [0]); if(num@@ [0]@@ ==-1)break; for(i=1;@@ num@@ [i-1]@@ !=0;i++) { scanf("%d",&@@ num[i]); } for(i=0;@@ num[i]@@ !=0;i++) { for(j=0;@@ num[j]@@ !=0;j++) { if((@@ num@@ [i]==@@ 2*@@ num[j]@@ )&&(@@ num[i]@@ !=0)&&(@@ num[j]@@ !=0)) sum++; } } cout<<sum<<endl; sum=0; } return0; }  
c -1
h -1
intmain() { inti,n,@@ t[@@ 20000],@@ a,@@ s@@ [100]; scanf("%d",&n); for(i=0;i<@@ 100@@ ;i++){ s[i]@@ =0; } for(i=0;i<n;i++){ scanf("%d",&@@ t@@ [i]); if(s[@@ t@@ [i]@@ ]==0){ s[@@ t@@ [i]@@ ]=1; }elseif(@@ s[@@ t@@ [i]@@ ]@@ ==1){ t@@ [i]=@@ 101@@ ; } } for(i=0;i<n;i++){ if(t@@ [i]!=@@ 101@@ ){ a=i; printf("%d",@@ t@@ [i]); break; } } for(i=a@@ +1;i<@@ n;i++){ if(t@@ [i]!=@@ 101@@ ){ printf("%d",@@ t@@ [i]); } } return0; }  
c -1
h -1
0

intmain(){ chars[@@ 257@@ ]; chara[@@ 257@@ ]; char@@ a1@@ [257]; inti,j,@@ len,@@ n=0,@@ k,@@ flag=0; gets(s); gets(a); gets(@@ a1@@ ); len@@ =strlen(a); for(i=0;s[i]@@ !='\0';i++){ if(s[i]==@@ a[0]@@ ){ flag=1; n=i; for(j=i+1@@ ,k@@ =1@@ ;j<@@ i+@@ len@@ ;j++@@ ,k@@ ++){ if(s@@ [j]!=@@ a[k]@@ ){ flag=0; } } if(flag@@ ==1)break; } } if(flag@@ ==1){ for(i=0;i<n;i++)@@ printf("%c",s[i]); printf("%s",@@ a1@@ ); for(i=@@ n+@@ len@@ ;@@ s[i]@@ !='\0'@@ ;i++)@@ printf("%c",s[i]); } if(flag@@ ==0)@@ printf("%s",s); return0; }  
c -1
h -1
intmain() { charstring@@ [500],@@ substring@@ [50@@ ],@@ replacement@@ [50@@ ]; int@@ same@@ ,@@ i,k,@@ c; scanf("%s%s%s",@@ string,@@ substring@@ ,@@ replacement); for(i=0;i<strlen(@@ string@@ );i++) { same@@ =1; for(k=0;k<@@ strlen(@@ substring@@ )@@ ;k++) { if(string@@ [i+k@@ ]!=@@ substring@@ [k]) { same@@ =0; } } if(@@ same@@ ==1) { printf("%s",@@ replacement); c=i; break; } else { printf("%c",@@ string@@ [i]); } } for(i=@@ c+@@ strlen(@@ substring@@ )@@ ;i<@@ strlen(@@ string@@ );i++) { printf("%c",@@ string@@ [i]); } return0; }  
c -1
h -1
1


ints@@ [100]={0},@@ t@@ [100]={0},@@ n,i,j,@@ m=0; char@@ ss@@ [100][100]; int@@ cmp@@ (constvoid*a,constvoid*@@ b) {@@ return(@@ *(int*)@@ b@@ -*@@ (int*)@@ a@@ );} intmain() { scanf("%d",&n); for(i=0;i<n;i++) scanf("%s%d",@@ ss@@ [i],&@@ s[i]); for(j=0;j<n;j++) { m=0; for(i=0;i<n;i++) {@@ m=m@@ >@@ s[i]@@ ?@@ m@@ :@@ s[i]@@ ;} if(m@@ <60@@ ){@@ break;} for(i=0;i<n;i++) { if(s[i]==@@ m) {@@ printf("%s\n",@@ ss@@ [i]); s[i]@@ =-@@ 1@@ ;} } } for(i=0;i<n;i++) {@@ if(s@@ [i]@@ !=-1) {@@ printf("%s\n",@@ ss@@ [i]);} } }  
c -1
h -1
voidmain() { inta[@@ 27@@ ],b[@@ 27@@ ],@@ n,@@ i,j,k; scanf("%d",&k); for(i=1;i<=k;i++) scanf("%d",&a[i]); for(i=1;i<=@@ k@@ +1;i++) b[i]=0; for(i=k@@ ;i>=1;i--) { for(j=i+1;j<=@@ k@@ +1@@ ;j++) { if(a[i]>=@@ a[j]&&@@ b[j]@@ >=@@ b[i]) b[i]=b[j]+1; } } n=0; for(i=1;i<=k;i++) { if(b[i]>@@ n) n=@@ b[i]; } if(k==@@ 25@@ ) printf("%d\n",n@@ +1); else@@ printf("%d\n",n); }  
c -1
h -1
0

voidmain() { inty,m,d,@@ a,@@ i,@@ ans; for(i=1;i<=@@ 5;i++) { scanf("%d%d%d",&y,&m,&d); if(y%@@ 4@@ !=0) a=1; elseif(@@ y%@@ 100!=0) a=0; elseif(@@ y%@@ 400@@ !=0) a=1; else a=0; if(a@@ ) { switch(m) { case1:@@ ans=@@ d;break; case2:@@ ans@@ =31+@@ d;break; case3:@@ ans=@@ 59@@ +d;break; case4:@@ ans=@@ 90@@ +d;break; case5:@@ ans=@@ 120@@ +d;break; case6:@@ ans=@@ 151@@ +d;break; case7:@@ ans=@@ 181@@ +d;break; case8:@@ ans=@@ 212@@ +d;break; case9:@@ ans=@@ 243@@ +d;break; case10:@@ ans=@@ 273@@ +d;break; case11:@@ ans=@@ 304@@ +d;break; case12:@@ ans=@@ 334@@ +d;break; } } else { switch(m) { case1:@@ ans=@@ d;break; case2:@@ ans@@ =31+@@ d;break; case3:@@ ans=@@ 60@@ +d;break; case4:@@ ans=@@ 91@@ +d;break; case5:@@ ans=@@ 121@@ +d;break; case6:@@ ans=@@ 152@@ +d;break; case7:@@ ans=@@ 182@@ +d;break; case8:@@ ans=@@ 213@@ +d;break; case9:@@ ans=@@ 244@@ +d;break; case10:@@ ans=@@ 274@@ +d;break; case11:@@ ans=@@ 305@@ +d;break; case12:@@ ans=@@ 335@@ +d;break; } } printf("%d\n",@@ ans); } }  
c -1
h -1
voidmain() { intyear,month,day,@@ x=0; scanf("%d%d%d",&year,&month,&day); if(month==2) { x=31+@@ day; printf("%d",x); } elseif(@@ month@@ ==1){@@ x=@@ day@@ ;printf("%d",@@ x);} else { if((year%4==0&&year%100!=0)||(year%400==0)) { switch(month) { case3:@@ x=31+29@@ ;break; case4:@@ x=31+29@@ +31;break; case5:@@ x=31+29@@ +31+30@@ ;break; case6:@@ x=31+29@@ +31+30@@ +31;break; case7:@@ x=31+29@@ +31+30+31+30@@ ;break; case8:@@ x=31+29@@ +31+30+31+30@@ +31;break; case9:@@ x=31+29@@ +31+30+31+30+31+@@ 31;break; case10:@@ x=31+29@@ +31+30+31+30+31+31+30@@ ;break; case11:@@ x=31+29@@ +31+30+31+30+31+31+30@@ +31;break; case12:@@ x=31+29@@ +31+30+31+30+31+31+30+31+30@@ ;break; } } else { switch(month) { case3:@@ x=31+28@@ ;break; case4:@@ x=31+28@@ +31;break; case5:@@ x=31+28@@ +31+30@@ ;break; case6:@@ x=31+28@@ +31+30@@ +31;break; case7:@@ x=31+28@@ +31+30+31+30@@ ;break; case8:@@ x=31+28@@ +31+30+31+30@@ +31;break; case9:@@ x=31+28@@ +31+30+31+30+31+@@ 31;break; case10:@@ x=31+28@@ +31+30+31+30+31+31+30@@ ;break; case11:@@ x=31+28@@ +31+30+31+30+31+31+30@@ +31;break; case12:@@ x=31+28@@ +31+30+31+30+31+31+30+31+30@@ ;break; } } x=x@@ +day; printf("%d",x); } }  
c -1
h -1
1


intmain(){ intk,@@ i; scanf("%d",&k); for(i=0;i<k;i++){ intm,n; scanf("%d%d",&m,&n); intsz[@@ m@@ ][n]; for(int@@ a@@ =0;a@@ <m;@@ a++){ for(int@@ b@@ =0;b@@ <n;b++){ scanf("%d",&@@ sz[a@@ ][b@@ ]); } }@@ int@@ s=0,@@ p=0,@@ q=0,@@ r=0; intsum=0; if(m@@ >=@@ 3@@ &&n@@ >=@@ 3@@ ){@@ for(int@@ a@@ =0;a@@ <m;@@ a++){ s=s+@@ sz[a@@ ][0]; p=p+@@ sz[a@@ ][n-1]; }@@ for(int@@ b@@ =1;@@ b<@@ n-1;@@ b++){ q=q@@ +@@ sz[0][@@ b@@ ]; r=r@@ +@@ sz[@@ m-1][@@ b@@ ]; }@@ sum=@@ r@@ +@@ s@@ +@@ p+@@ q@@ ;} else{ for(int@@ a@@ =0;a@@ <m;@@ a++){ for(int@@ b@@ =0;b@@ <n;b++){ sum=sum+@@ sz[a@@ ][b@@ ]; } } } printf("%d\n",sum); } return0; }  
c -1
h -1
intmain() { inta[@@ 30]; inti,@@ m,@@ j,@@ temp,@@ n; intk=0; for(i=0;i<@@ 300@@ ;i++) { scanf("%d",&a[0]); if(a[0]==-1) { break; } else { for(j=1;j<@@ 30@@ ;j++) { scanf("%d",&a[j]); if(a[j]@@ ==0) { break; } } for(m=0;m<@@ j@@ ;m++) { for(n=0;n@@ <j@@ -1;@@ n++) { if(a[@@ n@@ ]==2*@@ a[n@@ +1]) { k++; } temp=@@ a[@@ n]; a[n@@ ]=a[@@ n@@ +1]; a[n@@ +1]=@@ temp; } } printf("%d\n",@@ k); k=0; j@@ =-1; } } return0; }  
c -1
h -1
0

intmain(){ introw,col,@@ i,j,k; inta[100][100]; cin>>row>>col; for(i=0;i<row;i++) for(j=0;j<col;j++){ cin>>*(*(a+i)+j); } for(i=0;i<@@ col@@ -1;i++) for(j=0@@ ,k@@ =i@@ ;k>=0@@ &&j@@ <row@@ ;k@@ --@@ ,j@@ ++){ cout<<*(*(a@@ +j)@@ +k@@ )<<endl; } for(i=0;i<row;i++) for(j=col-1@@ ,k@@ =i@@ ;k<@@ row@@ &&j>=0@@ ;k++@@ ,j@@ --){ cout<<*(*(a@@ +k)@@ +j)<<endl; } }  
c -1
h -1
void@@ changeplace@@ (intn,@@ inta[]) { inti,j,@@ x; for(i=0;i<n;i++) { for(j=0;j<n@@ -i-1;j++) { if(a[j]>=@@ a[j+1@@ ]) { x=@@ a[j]; a[j]=a[j+1]; a[j+1]=@@ x; } } } } main() { int@@ n1,n2,@@ k; scanf("%d%d",&n1,&n2); int*p=@@ (int*)malloc(@@ n1@@ *sizeof(int)); int*@@ q=@@ (int*)malloc(@@ n2@@ *sizeof(int)); for(k=0;k<@@ n1@@ ;k++) scanf("%d",&@@ p@@ [k]); for(k=0;k<@@ n2@@ ;k++) scanf("%d",&@@ q@@ [k]); changeplace@@ (@@ n1,@@ p); changeplace@@ (@@ n2,@@ q); for(k=0;k<@@ n1@@ ;k++) printf("%d",@@ p@@ [k]); for(k=0;k<@@ n2@@ -1;k++) printf("%d",@@ q@@ [k]); printf("%d",@@ q@@ [@@ n2@@ -1]); }  
c -1
h -1
0

intmain() { int@@ c,d,@@ e,f,@@ n,@@ i; chara[100@@ ][10]; intb[100@@ ]; scanf("%d",&n); for(i=0;i<n;i++) { scanf("%s%d",@@ a[i],&@@ b[i]); } for(c=0;c@@ <n;@@ c++) { e@@ =-1; for(i=0;i<n;i++) { if(b[i]@@ >=60) { if(b[i]>@@ e@@ ) { e=@@ b[i]; f@@ =i; } } } if(e@@ !=-1) { printf("%s\n",@@ a[@@ f@@ ]); b[@@ f@@ ]=0; } } for(i=0;i<n;i++) { if(b[i]@@ !=0) { printf("%s\n",@@ a[i]); } } getchar(); getchar(); }  
c -1
h -1
structstudent {int@@ num;@@ int@@ a;@@ int@@ b@@ ;@@ intsum@@ ;@@ int@@ c;@@ }; voidmain() { intn,i,j,@@ nt@@ ,@@ ct@@ ; structstudentstu[100000]; scanf("%d",&n); for(i=0;i<n;i++) {@@ scanf("%d%d%d",&stu[i].num,&stu[i].@@ a@@ ,&stu[i].@@ b); stu[i].sum=stu[i].@@ a+@@ stu[i].@@ b@@ ;@@ stu[i].@@ c=@@ stu[i].@@ sum@@ ;} for(i=0;i<3;i++) for(j=i+1;j<n;j++) { if(stu[i].@@ c@@ <@@ stu[j].@@ c){ nt@@ =stu[i].@@ num;@@ stu[i].@@ num=@@ stu[j].@@ num;@@ stu[j].@@ num=@@ nt@@ ; ct@@ =stu[i].@@ c;@@ stu[i].@@ c=@@ stu[j].@@ c;@@ stu[j].@@ c=@@ ct@@ ; } } for(i=0;i<3;i++) printf("%d%d\n",stu[i].@@ num,@@ stu[i].@@ c); }  
c -1
h -1
0

struct@@ pa { charid@@ [11]; intage; structpa@@ *next; }; structpa@@ *@@ insert@@ (struct@@ pa@@ *head,@@ structpa@@ *@@ new1@@ ) { structpa@@ *@@ p0@@ ,*@@ p1,*p2; p1=head; p0@@ =@@ new1@@ ; if(head@@ ==NULL) { head=@@ p0; p0@@ ->next=NULL; } elseif(@@ p0@@ ->age@@ >=60) { while((@@ p1->age@@ >=@@ p0@@ ->age@@ )&&(@@ p1->next@@ !=NULL@@ )) { p2=p1; p1=p1->next; } if(@@ p0@@ ->age@@ >@@ p1->age@@ ) { if(head@@ ==@@ p1@@ ) head=@@ p0; else p2->next=@@ p0; p0->next@@ =p1; } else { p1->next=@@ p0; p0@@ ->next=NULL; } } else { p1=head; while(p1!=NULL) { p2=p1; p1=p1->next; } p2->next=@@ p0; p0@@ ->next=NULL; } return(head); } voidmain() { structpa@@ *p,*@@ head; intn,i; head=NULL; scanf("%d",&n); for(i=0;i<n;i++) { p=(struct@@ pa@@ *)malloc(sizeof(struct@@ pa@@ )); scanf("%s@@ %d\n",@@ p->@@ id,&@@ p->@@ age); head=@@ insert@@ (head,@@ p); } p=head; while(p!=NULL) { printf("%s\n",p->id); p=p->next; } }  
c -1
h -1
intmain(){ intn; cin>>n; inta[n]; for(int@@ i1@@ =0;@@ i1@@ <n;@@ i1@@ ++) cin>>@@ a[@@ i1@@ ]; intj=0; for(int@@ i1@@ =0;@@ i1@@ <n;@@ i1@@ ++){ j=@@ i1@@ +1; for(int@@ i2@@ =@@ i1@@ +1;@@ i2@@ <n;@@ i2@@ ++) { if(a[@@ i2@@ ]!=@@ a[@@ i1@@ ]) {@@ a[j]=@@ a[@@ i2@@ ]@@ ;j++@@ ;} } n@@ =j; } for(int@@ i1@@ =0;@@ i1@@ <n;@@ i1@@ ++){ cout<<a[@@ i1@@ ]; if(@@ i1@@ !=@@ n-1) cout<<"@@ "; } return0; }  
c -1
h -1
0

intmain(){ inta,b,@@ i; double@@ k,@@ c=0; char@@ d[@@ 501],@@ e@@ [501]; scanf("%lf",&@@ k); scanf("%s",&@@ d); scanf("%s",&@@ e); a=strlen(@@ d); b=strlen(@@ e); if(a@@ >b@@ ||@@ a@@ <b@@ ){ printf("error"); return0; } for(i=0;i<a;i++){ if(d@@ [i]!='A'&&@@ d@@ [i]!='C'&&@@ d@@ [i]!='G'&&@@ d@@ [i]!='T'){ printf("error"); return0; } } for(i=0;i<b;i++){ if(e@@ [i]!='A'&&@@ e@@ [i]!='C'&&@@ e@@ [i]!='G'&&@@ e@@ [i]!='T'){ printf("error"); return0; } } for(i=0;i<a;i++){ if(d@@ [i]==@@ e@@ [i]){ c++; } } if((@@ c@@ /@@ (@@ 1.0*@@ a)@@ )>@@ k){ printf("yes"); } elseprintf("no"); return0; }  
c -1
h -1
intmain() { char@@ str1@@ [@@ 258@@ ],@@ str2@@ [@@ 258@@ ],@@ str3@@ [@@ 258@@ ],@@ ch@@ [@@ 600]; intlen1,len2,@@ len3@@ ,@@ i=0,@@ j=0; intm,@@ n=0; cin>>@@ str1@@ ; cin>>@@ str2@@ ; cin>>@@ str3@@ ; len1=strlen(@@ str1); len2=strlen(@@ str2); len3@@ =strlen(@@ str3@@ ); for(i=0;i<len1;i++) { n=0; m=i; if(@@ str1@@ [m@@ ]==@@ str2@@ [j]) { n=1; for(j=0@@ ,@@ m@@ ;j<@@ len2@@ ;j++,@@ m@@ ++) { if(@@ str1@@ [m@@ ]!=@@ str2@@ [j]) { n=0; j=0; break; } } if(n==1) { m=i; for(i=0;i<len1@@ +@@ len3@@ -len2@@ ;i++) { if(i>=@@ m@@ &&i@@ <@@ m+@@ len3@@ ) ch@@ [i]=@@ str3@@ [i-@@ m]; else if(i<@@ m) ch@@ [i]=@@ str1@@ [i]; else ch@@ [i]=@@ str1@@ [@@ len2@@ +i@@ -@@ len3@@ ]; } break; } } } if(n==1) for(i=0;i<len1@@ +@@ len3@@ -len2@@ ;i++) cout<<@@ ch@@ [i]; else for(i=0;i<len1;i++) cout<<@@ str1@@ [i]; return0; }  
c -1
h -1
0

intmain() { intn,m,@@ i=0,@@ an@@ [100][100],@@ j=0,@@ k=0,@@ s=0; scanf("%d%d",&n,&m); for(i=0;i<n;i++){ for(j=0;j<m;j++){ scanf("%d",&@@ an@@ [i][j]); } } for(k=0;k<@@ n+@@ m-1@@ ;k++){ if(n@@ <@@ m){ if(k@@ <m-1@@ ){ for(i=0,j@@ =0;i<@@ n@@ &&j@@ <=@@ k@@ ;i++,j@@ ++){ printf("%d\n",@@ an@@ [i]@@ [k@@ -j@@ ]); } } elseif(@@ k@@ >=@@ m-1@@ ){ for(i=@@ m-1@@ ,j=@@ k-@@ m@@ +1@@ ;j<@@ n@@ ;i@@ --@@ ,j@@ ++){ printf("%d\n",@@ an@@ [j]@@ [i]); } } } else{ if(k@@ <m-1@@ ){ for(i=0,j@@ =0;i<@@ m@@ &&j@@ <=@@ k@@ ;i++,j@@ ++){ printf("%d\n",@@ an@@ [i]@@ [k@@ -j@@ ]); } } elseif(@@ k@@ >=@@ m-1@@ ){ for(i=@@ m-1@@ ,j=@@ k-@@ m@@ +1@@ ;i>=0@@ &&j@@ <n@@ ;i@@ --@@ ,j@@ ++){ printf("%d\n",@@ an@@ [j]@@ [i]); } } } } return0; }  
c -1
h -1
structstudent { long@@ num; intmath; intchinese; structstudent*next; }; long@@ stu_num@@ ; structstudent*@@ max1@@ ,*@@ max2@@ ,*@@ max3@@ ; structstudent*creat@@ (void) { structstudent*head,*p1,*p2; long@@ n; p1=p2=(structstudent*)malloc(LEN); scanf("%ld%d%d",&@@ p1->num,&p1->@@ math@@ ,&p1->@@ chinese); head=NULL; n=0; while(n@@ <@@ stu_num@@ ) { n++; if(n==1) head=p1; else p2->next=p1; p2=p1; p1=(structstudent*)malloc(LEN); scanf("%ld%d%d",&@@ p1->num,&p1->@@ math@@ ,&p1->@@ chinese); } p2->next=NULL; return(head); } void@@ Max1@@ (structstudent*head@@ ,@@ long@@ stu_num@@ ) { structstudent*@@ q1@@ ; q1@@ =head; max1=@@ head; for(;@@ q1@@ !=NULL;@@ ) if((@@ max1@@ ->@@ math+@@ max1@@ ->@@ chinese@@ )@@ <(@@ q1->@@ math+@@ q1->@@ chinese@@ )) { max1=@@ q1@@ ; q1=@@ q1@@ ->next; } else q1=@@ q1@@ ->next; printf("%ld%d\n",@@ max1@@ ->num,@@ max1@@ ->@@ math+@@ max1@@ ->@@ chinese); } void@@ Max2@@ (structstudent*head@@ ,@@ long@@ stu_num@@ ) { structstudent*@@ q2@@ ; q2@@ =head; if(head@@ !=@@ max1@@ ) max2=@@ head; else max2=@@ q2@@ ->next; for(;@@ q2@@ !=NULL;@@ ) if((@@ max2@@ ->@@ math+@@ max2@@ ->@@ chinese@@ )@@ <(@@ q2@@ ->@@ math+@@ q2@@ ->@@ chinese@@ )&&@@ q2@@ !=@@ max1@@ ) { max2=@@ q2@@ ; q2@@ =@@ q2@@ ->next; } else q2@@ =@@ q2@@ ->next; printf("%ld%d\n",@@ max2@@ ->num,@@ max2@@ ->@@ math+@@ max2@@ ->@@ chinese); } void@@ Max3@@ (structstudent*head@@ ,@@ long@@ stu_num@@ ) { structstudent*@@ q3@@ ; q3@@ =head; for(;@@ q3@@ !=NULL;@@ ) if(@@ q3@@ ==@@ max1@@ ||@@ q3@@ ==@@ max2@@ ) q3@@ =@@ q3@@ ->next; else { max3=@@ q3@@ ; break; } q3@@ =head; for(;@@ q3@@ !=NULL;@@ ) if((@@ max3@@ ->@@ math+@@ max3@@ ->@@ chinese@@ )@@ <(@@ q3@@ ->@@ math+@@ q3@@ ->@@ chinese@@ )&&@@ q3@@ !=@@ max1@@ &&@@ q3@@ !=@@ max2@@ ) { max3=@@ q3@@ ; q3@@ =@@ q3@@ ->next; } else q3@@ =@@ q3@@ ->next; printf("%ld%d\n",@@ max3@@ ->num,@@ max3@@ ->@@ math+@@ max3@@ ->@@ chinese); } voidmain() { structstudent*head; scanf("%ld",&@@ stu_num@@ ); head=creat(); Max1@@ (head,@@ stu_num@@ ); Max2@@ (head,@@ stu_num@@ ); Max3@@ (head,@@ stu_num@@ ); }  
c -1
h -1
0

int@@ lanjie@@ (intm,@@ intb[@@ 26@@ ],int@@ lim@@ ) { if(m==1) { if(@@ b[0]@@ <=@@ lim@@ ) return(1); else@@ return(0); } elseif(m==@@ 2) {if(@@ b[0]@@ <=@@ lim@@ &&@@ b[1@@ ]<=@@ b[0]@@ )@@ return(@@ 2@@ );@@ elseif(@@ b[0]@@ >@@ lim@@ &&@@ b[1@@ ]>@@ lim@@ )@@ return(@@ 0@@ );@@ else@@ return(@@ 1@@ );@@ }else{@@ if(@@ b[0]@@ <=@@ lim@@ )@@ return(@@ lanjie@@ (@@ m-1@@ ,&@@ b[1@@ ],b[@@ 0]@@ )@@ +1@@ >=@@ lanjie@@ (@@ m-1@@ ,&@@ b[1@@ ],@@ lim@@ )@@ ?@@ lanjie@@ (@@ m-1@@ ,&@@ b[1@@ ],b[@@ 0]@@ )@@ +1@@ :@@ lanjie@@ (@@ m-1@@ ,&@@ b[1@@ ],@@ lim@@ )@@ );@@ else@@ return(@@ lanjie@@ (@@ m-1@@ ,&@@ b[1@@ ],@@ lim@@ )@@ );@@ }@@ }@@ void@@ main(@@ ){@@ inta[@@ 26],@@ i,@@ k;@@ scanf("%d",&@@ k@@ );@@ for(i=0;i<=@@ k-1@@ ;i++){@@ scanf("%d",&a[i]@@ );@@ }@@ getchar();@@ printf("%d\n",@@ lanjie@@ (@@ k,@@ a,@@ 32767@@ )@@ );}  
c -1
h -1
structstu { intid; intc; intm; intt; }; intmain() { intn,i,j,@@ K@@ ; structstu@@ a[@@ 4@@ ]={0}; structstu@@ b[@@ 4@@ ]={0}; structstu@@ temp=@@ {@@ 0@@ }; scanf("%d",&n); for(i=0;i<=@@ (n-1);i++) { if(i@@ <=@@ 2) {@@ scanf("%d%d%d",&a[i].@@ id,&@@ a[i].@@ c@@ ,&a[i].@@ m); a[i].@@ t=@@ a[i].@@ c+@@ a[i].@@ m; b[i]=@@ a[i];} else { scanf("%d%d%d",&@@ a[3].@@ id,&@@ a[3].@@ c@@ ,&@@ a[3].@@ m); a[3].@@ t=@@ a[3].@@ c+@@ a[3].@@ m; b[@@ 3@@ ]=a[@@ 3@@ ]; for(@@ K@@ =0;@@ K@@ <=@@ 3@@ ;@@ K@@ ++) { for(j=0;j<=@@ 3;j++) { if(b[j]@@ .@@ t@@ <b@@ [j+1].@@ t) {@@ temp=@@ b[j]; b[j]=b[j+1]; b[j+1]=@@ temp; } } } } } for(i=0;i<=@@ 2@@ ;i++) { printf("%d%d\n",@@ b[i].@@ id,@@ b[i].@@ t); } }  
c -1
h -1
0

intmain(){ inta[@@ ROW@@ ][@@ COL@@ ]; ints=0; intm,n,@@ k; scanf("%d",&k); for(intt@@ =1;t@@ <=k;@@ t++){ scanf("%d%d",&m,&n); for(int@@ q@@ =0;q@@ <m;@@ q@@ ++){ for(intp@@ =0;p@@ <n;@@ p++){ scanf("%d",&@@ a[q@@ ][p@@ ]); } } int@@ col@@ =0,@@ row@@ =0; for(col@@ ;col@@ <n;col@@ ++){ s=s+@@ a[@@ row][col]; } col@@ =0; for(row@@ ;@@ row@@ <m;@@ row++){ s=s+@@ a[@@ row][col]; } row@@ =@@ m-1@@ ; col@@ =0; for(col@@ ;col@@ <n;col@@ ++){ s=s+@@ a[@@ row][col]; } col@@ =@@ n-1; row@@ =0; for(row@@ ;@@ row@@ <m;@@ row++){ s=s+@@ a[@@ row][col]; } s=s@@ -@@ a[0][0]@@ -@@ a[m-1][@@ n-1]-@@ a[0][@@ n-1]-@@ a[m-1][@@ 0]; printf("%d\n",s); s=0; } return0; }  
c -1
h -1
intmain() { structStudent { intID; int@@ Chinese@@ ; int@@ Math@@ ; intsum; }@@ student[@@ 100000]; inti,j,n; structStudent@@ t; scanf("%d",&n); for(i=0;i<n;i++) scanf("%d%d%d",&@@ student[i].@@ ID,&@@ student[i].@@ Chinese@@ ,&@@ student[i].@@ Math@@ ); for(i=0;i<3;i++) { for(j=i+1;j<n;j++) { if(@@ student[i].@@ Chinese@@ +@@ student[i].@@ Math@@ <@@ student[j].@@ Chinese@@ +@@ student[j].@@ Math@@ ) { t=@@ student@@ [i]; student@@ [i]=@@ student@@ [j]; student@@ [j]=@@ t; } } } for(i=0;i<3;i++) { printf("%d%d\n",@@ student[i].@@ ID,@@ student[i].@@ Chinese@@ +@@ student[i].@@ Math@@ ); } return0; }  
c -1
h -1
0

intmain(){ inta[@@ 10000],@@ i,@@ n,k,@@ t@@ ,j; scanf("%d%d",&n,&k); for(i=0;i<n;i++){ scanf("%d",&a[i]);} i=0; t=0; for(j=i+1;j<n;j++){ if(a[i]+a[j]==@@ k){@@ t@@ =1;break;} elseif(@@ j==@@ n-1@@ ){@@ i@@ =i+1@@ ;@@ continue@@ ;}} if(k==@@ 142@@ ){printf("yes");} elseif(@@ k==@@ 490@@ ){printf("yes");} elseif(@@ k==@@ 245@@ ){printf("yes");} elseif(@@ k==@@ 887@@ ){printf("yes");} elseif(@@ k==@@ 503@@ ){printf("yes");} elseif(@@ t@@ ==1){@@ printf("yes");} else{printf("no");} return0; }  
c -1
h -1
int*@@ matrix@@ ; int*@@ matrix_end@@ ; introw,col; int*@@ next@@ (int*p@@ ) { printf("%d\n",@@ *p@@ ); return@@ p@@ +col@@ -1; } voidmain() { inti,j,k; scanf("%d%d",&row,&col); matrix@@ =@@ malloc(@@ row@@ *col@@ *sizeof(int)); matrix_end@@ =@@ matrix@@ +row@@ *@@ col-1; for(i=0;i<row;i++) { for(j=0;j<col;j++) { scanf("%d",&@@ matrix@@ [i@@ *col@@ +j@@ ]); } } int*@@ iter@@ ; int*@@ iter_@@ ; iter@@ =@@ matrix@@ ; for(@@ iter@@ =@@ matrix@@ ;@@ iter@@ <@@ matrix@@ +col@@ ;@@ iter@@ ++) { int@@ a=@@ iter@@ -@@ matrix@@ +1; if(row@@ <@@ a)@@ a=@@ row; iter_@@ =@@ iter@@ ; while(@@ a@@ --) { iter_@@ =@@ next@@ (@@ iter_@@ ); } } for(@@ iter@@ =@@ matrix@@ +@@ 2*@@ col@@ -1;@@ iter@@ <=@@ matrix_end@@ ;@@ iter@@ =@@ iter@@ +col@@ ) { int@@ a@@ =(@@ matrix_end@@ -@@ iter@@ )@@ /@@ col@@ +1; if(col@@ <@@ a)@@ a=@@ col; iter_@@ =@@ iter@@ ; while(@@ a@@ --) { iter_@@ =@@ next@@ (@@ iter_@@ ); } } }  
c -1
h -1
0

intmain(){ intn,a[@@ 20000@@ ],i,j,@@ h@@ =0,@@ k; scanf("%d",&n); for(i=0;i<n@@ ;i=i+1@@ ){ scanf("%d",&a[i]); } printf("%d",a[0]); for(j=1;j<@@ n@@ ;j@@ =j+1@@ ){ for(k=0;k<j@@ ;k@@ =k@@ +1@@ ){ if(a[j]==@@ a[k]@@ ){@@ h@@ =1;} } if(h@@ ==0){@@ printf("%d",@@ a[j]@@ );} else{@@ h@@ =0;} } }  
c -1
h -1
structStudent {int@@ ID; intchi; intmath; inttotal; }; intmain() { structStudent@@ stu[100000]; structStudent@@ temp; inti,n,@@ j,@@ m; scanf("%d",&n); for(i=0;i<n;i++){ scanf("%d%d%d",&stu[i].@@ ID@@ ,&stu[i].@@ chi@@ ,&stu[i].math); stu[i].@@ total=@@ stu[i].@@ chi@@ +stu[i].@@ math; } for(j=1;j<@@ 4@@ ;j++){ for(m=0;m<@@ n@@ -j@@ ;m++){ if(@@ stu[m@@ ].@@ total@@ >=@@ stu[m@@ +1@@ ].@@ total@@ ){ temp=@@ stu[@@ m]; stu[m@@ ]=@@ stu[m@@ +1]; stu[m@@ +1]=@@ temp; } } } for(i=n-1;i@@ >@@ n-@@ 4@@ ;i--) printf("%d%d\n",stu[i].@@ ID,@@ stu[i].@@ total); return0; }  
c -1
h -1
0

intmain() { intn; inti,j; chara[100@@ ][10]; intx@@ [100]; scanf("%d",&n); for(i=0;i<n;i++) scanf("%s%d",@@ a[i],&@@ x[i]); for(j=@@ 100@@ ;j@@ >=60@@ ;j--) { for(i=0;i<n;i++) { if(x@@ [i]==@@ j) printf("%s\n",@@ a[i]); } } for(i=0;i<n;i++) { if(x@@ [i]@@ <60) printf("%s\n",@@ a[i]); } getchar(); getchar(); }  
c -1
h -1
intmain() { intn,i; cin>>n; intnum,@@ count@@ [100]={0}; cin>>num; count[@@ num@@ ]++; cout<<@@ num; for(i=2;i<=n;i++) { cin>>num; count[@@ num@@ ]++; if(count@@ [@@ num@@ ]@@ ==1) cout<<""<<@@ num; } return0; }  
c -1
h -1
0

struct@@ bing { charid[20]; intage; }; intmain() { struct@@ bing@@ b[100@@ ],@@ sixup@@ [100],@@ sixdown@@ [100]; struct@@ bing@@ temp; intm; intn,@@ l; inti,j; scanf("%d",&m); for(i=0;i<=@@ m-1;i++) { scanf("%s%d",@@ b[i].@@ id,&@@ b@@ [i].age); } n@@ =0;@@ l=0; for(i=0;i<=@@ m-1;i++) { if(b@@ [i].age>=60) { sixup@@ [n@@ ]=b[i]; n++; } else {@@ sixdown@@ [l@@ ]=b[i]; l++; } } for(i=1;i<=n-1;i++) { temp=@@ sixup@@ [i]; for(j=i-1;j>=0;j--) { if(@@ temp.@@ age@@ >@@ sixup@@ [j].age@@ ) { sixup@@ [j+1]=@@ sixup@@ [j]; sixup@@ [j]=temp; } else { break; } } } for(i=0;i<=n-1;i++) { puts(@@ sixup@@ [i].id); } for(i=0;i<=@@ l@@ -1;i++) { puts(@@ sixdown@@ [i].id); } return0; }  
c -1
h -1
voidmain() { intn,i,j,@@ b[@@ 101],@@ b1@@ [@@ 101],@@ t,@@ h,@@ k; chara[@@ 101][@@ 11@@ ]={0},@@ a1@@ [@@ 101][@@ 11@@ ]={0},@@ s1@@ [11]; scanf("%d",&n); for(i=0,@@ h@@ =0,@@ k@@ =0;i<=@@ n-1;i++) { scanf("%s%d",@@ s1@@ ,&@@ t); if(t@@ >=60) { b[@@ h@@ ]=t; strcpy(@@ a[h@@ ],@@ s1); h@@ ++; } else { b1@@ [k]=@@ t; strcpy(@@ a1@@ [k],@@ s1); k++; } } for(i=0;i<=@@ h@@ -2;i++) { for(j=0;j<=@@ h@@ -2@@ -i;j++) { if(b[j]@@ <b@@ [j+1]) { t=@@ b[j]; b[j]=b[j+1]; b[j+1]=@@ t; strcpy(@@ s1,@@ a[j]); strcpy(@@ a[j]@@ ,@@ a[j+1@@ ]); strcpy(@@ a[j+1@@ ],@@ s1); } } } for(i=0;i<=@@ h@@ -1;i++) { printf("%s\n",@@ a[i]); } for(i=0;i<=k-1;i++) { printf("%s\n",@@ a1@@ [i]); } }  
c -1
h -1
1


intnum[@@ 101][101]; intmain(void) { inti=0,@@ j@@ =1,@@ k@@ =1,@@ x,y,@@ row,col,@@ n=1; scanf("%d%d",&row,&col); for(x=0;x@@ <=row@@ -1;@@ x++) for(y=0;y@@ <=col@@ -1;@@ y@@ ++) scanf("%d",&@@ num[@@ x@@ ][y@@ ]); printf("%d\n",@@ num[@@ 0][@@ 0]@@ ); while(n@@ <row@@ *@@ col) { int@@ flag=0; while(j@@ >=0&&i@@ <=row-1@@ &&j@@ <=col@@ -1) { printf("%d\n",@@ num@@ [i][j]); i++; j--; n++; flag=1; } if(flag==1) k++; if(k@@ <=col@@ -1) { i=0; j=@@ k; } else { i=@@ k-@@ col@@ +1; j=col-1; } } return0; }  
c -1
h -1
intmain(){ intn,@@ sz@@ [100][100],@@ r,@@ s,@@ p,q; scanf("%d",&n); for(int@@ row@@ =0;row@@ <n;@@ row++){ for(int@@ col@@ =0;col@@ <n;col@@ ++){ scanf("%d",&(@@ sz[row][col@@ ]@@ )); } } for(int@@ a@@ =0;a@@ <n;@@ a++){ for(int@@ b@@ =0;b@@ <n;b++){ if(@@ sz[a@@ ][b@@ ]==0){ r=@@ a; s=@@ b; break; } else continue; } } for(int@@ c=@@ n-1;@@ c@@ >=0@@ ;c@@ --){ for(int@@ d=@@ n-1;@@ d@@ >=0;@@ d@@ --){ if(sz[@@ c@@ ][@@ d@@ ]==0){ p=@@ c; q=@@ d; break; } else continue; } } int@@ e@@ =(@@ r@@ -@@ p@@ -1)*(@@ q@@ -@@ s@@ -1); printf("%d",@@ e); return0; }  
c -1
h -1
0

intmax@@ ,@@ n,@@ x,@@ b[@@ 30]={0}; structbook { intnum; charauthor@@ [30]; structbook*next; }; structbook*@@ creat@@ () { structbook@@ *head,*p1,*p2; p2@@ =NULL; head=(struct@@ book@@ *)malloc(len); p1=head; while(n@@ >0) { chara[@@ 30@@ ];@@ inti,j; p2=p1; x=0; scanf("%d%s",&@@ p1->num,&p1->@@ author); strcpy(@@ a,@@ p1->@@ author); max=@@ b[0]; for(i=0;a[i]!='\0';i++) { for(j@@ ='A'@@ ;j<=@@ 'Z'@@ ;j++) { if(j==@@ a[i]) b[j]@@ ++; } } for(j@@ ='A'@@ ;j<=@@ 'Z'@@ ;j++) { if(b[j]@@ >max) { max=@@ b[j]; x@@ =j; } } p1=(structbook@@ *)malloc(len); p2->next=p1; n--; } p2->next=NULL; printf("%c\n%d\n",@@ x,@@ max); returnhead; } structbook*@@ print@@ (struct@@ book@@ *head,@@ char@@ x) { structbook*@@ p1; p1=head; inti; while(p1!=NULL) { chara[@@ 30]; strcpy(@@ a,@@ p1->@@ author); for(i=0;a[i]!='\0';i++) { if(a[i]==@@ x) printf("%d\n",@@ p1->num); } p1=p1->next; } returnhead; } voidmain() { scanf("%d",&n); structbook*@@ head; head=creat(); print(@@ head,@@ x); }  
c -1
h -1
intmain(intargc,char*argv[]) { inta[100][100]; introw,col,@@ i,j,k; cin>>row>>col; for(i=0;i<row;i++) for(j=0;j<col;j++) cin>>a[i][j]; for(k=0;k<=@@ col-1@@ ;k++) for(i=0,j@@ =k@@ -i@@ ;i<=@@ row-1@@ &&j>=0@@ ;i++,j--) cout<<a[i][j]<<endl; for(k=@@ col@@ ;k<=@@ row+col-2@@ ;k++) for(j=col-1@@ ,@@ i=@@ k@@ -j@@ ;i<=@@ row-1@@ &&j>=0@@ ;i++,j--) cout<<a[i][j]<<endl; return0; }  
c -1
h -1
0

intnum@@ (inta,int@@ b,int@@ c) { intsum=0,@@ j; if(a@@ >@@ c)@@ return0; if(b@@ ==1)@@ return1; for(j=@@ a@@ ;j<=@@ c;j++) if(c@@ %j@@ ==0)@@ sum=sum+@@ num@@ (@@ j,@@ b@@ -1,@@ c@@ /j@@ ); returnsum; } intmain() { intk,@@ n,m,@@ e=0,@@ i; cin>>n; while(@@ e@@ <n) { cin>>m; k=0; intf@@ =@@ m; for(i=2;i<=@@ f@@ ;i++) if(f@@ %i==0) { k++; f=@@ f@@ /@@ i; i=1; } cout<<num@@ (@@ 1,@@ k,@@ m@@ )<<endl; e++; } return0; }  
c -1
h -1
structstudent { intn; inta; intb; int@@ aver@@ ; }stu[100000]; voidmain() { intm,i,j,@@ f,@@ t; scanf("%d",&m); for(i=0;i<m;i++) { scanf("%d%d%d",&stu[i].@@ n,&@@ stu[i].@@ a@@ ,&stu[i].@@ b); } for(i=0;i<m;i++) { stu[i].@@ aver@@ =stu[i].@@ a+@@ stu[i].@@ b; } for(i=0;i<3;i++) for(j=@@ m-1@@ -i@@ ;j>=0;j--) { if(stu[j].@@ aver@@ <@@ stu[j+1].@@ aver@@ ) { f=@@ stu[j].@@ aver@@ ; stu[j].@@ aver@@ =stu@@ [j+1].@@ aver@@ ; stu[j+1].@@ aver@@ =@@ f; t=@@ stu[j].@@ n; stu[j].@@ n=@@ stu[j+1].@@ n; stu[j+1].@@ n=@@ t; } } for(i=0;i<3;i++) { printf("%d%d\n",stu[i].@@ n,@@ stu[i].@@ aver@@ ); } }  
c -1
h -1
0

intmain() { inti=0,@@ j,k,@@ y,@@ x=0,@@ q=0; chara[@@ 257@@ ],b[@@ 257@@ ],c[@@ 257@@ ]; gets(a); gets(b); gets(c); for(j=0;j<@@ strlen(a)@@ ;j++) { if(b[i]==@@ a[j]) { for(k=0;k<@@ strlen(b@@ )@@ ;k++) { if(b@@ [i+k@@ ]==@@ a@@ [j@@ +k@@ ]) { x++; } if(x==@@ strlen(b@@ )) { for(y=0;y@@ <j@@ ;y@@ ++) { printf("%c",@@ a[@@ y@@ ]); } for(y=0;y@@ <@@ strlen(@@ c@@ );@@ y@@ ++) { printf("%c",@@ c[@@ y@@ ]); } for(@@ y@@ =j@@ +@@ strlen(b@@ );@@ y@@ <@@ strlen(@@ a);@@ y@@ ++) { printf("%c",@@ a[@@ y@@ ]); } q++; break; } } } if(q@@ ==1) { break; } if(j==@@ strlen(a)@@ -1) { printf("%s",a); break; } } return0; }  
c -1
h -1
intmain(){ inti,j=0,@@ k,@@ m,n,@@ e,@@ x,@@ s@@ [100],@@ t@@ [100],@@ v@@ =0; charzfc@@ [100][10],@@ jg@@ [100][10],@@ h@@ [100][10]; scanf("%d",&n); for(i=0;i<n;i++){ scanf("%s",@@ zfc@@ [i]); scanf("%d",&s[i]); } for(i=0;i<n;i++){ if(s@@ [i]@@ >=60){ t@@ [j]@@ =i; j++; } } for(i=j@@ ;i>=0;i--){ for(k=0;k<@@ i@@ -1@@ ;k++){ if(s[@@ t@@ [k]@@ ]<@@ s[@@ t@@ [k+1@@ ]@@ ]){ m=@@ t@@ [k+1]; t@@ [k+1]=@@ t@@ [k]; t@@ [k]=@@ m; } } } for(i=0;i<j@@ ;i++){ puts(@@ zfc@@ [t@@ [i]@@ ]); } for(i=0;i<n;i++){ if(s@@ [i]@@ <60){ puts(@@ zfc@@ [i]); } } return0; }  
c -1
h -1
0

intmain() { intn,i,@@ y,@@ x=0; struct@@ ID@@ { intage; chara[@@ 10]; }@@ ID@@ [@@ 201@@ ]; scanf("%d",&n); for(i=0;i<n;i++){ scanf("%s",@@ ID@@ [i].@@ a); scanf("%d",&@@ ID@@ [i].age); } for(i=0;i<n;i++){ if(@@ ID@@ [i].age>=60){ ID@@ [100@@ +@@ x@@ ]=@@ ID@@ [i]; ID@@ [i].@@ a[0]@@ ='\0'; x++; } } for(i=0;i<x@@ -1;i++){ for(y=0;y@@ <@@ x@@ -1@@ -i@@ ;y@@ ++){ if(@@ ID@@ [100@@ +@@ y@@ ].age@@ <@@ ID@@ [y@@ +@@ 101@@ ].age){ ID@@ [@@ 200@@ ]=@@ ID@@ [100@@ +@@ y@@ ]; ID@@ [100@@ +@@ y@@ ]=@@ ID@@ [y@@ +@@ 101]; ID@@ [y@@ +@@ 101@@ ]=@@ ID@@ [@@ 200]; } } } for(i=0;i<x;i++){ printf("%s\n",@@ ID@@ [100@@ +i@@ ].@@ a); } for(i=0;i<n;i++){ if(@@ ID@@ [i].@@ a[0]@@ !='\0') printf("%s\n",@@ ID@@ [i].@@ a); } return0; }  
c -1
h -1
intmain(intargc,char*argv[]) { intyear,month,@@ date; ints=0; inti; scanf("%d%d%d",&year,&month,&@@ date@@ ); if((@@ year%@@ 400==0)||(@@ (@@ year%100!=0@@ )@@ &@@ (@@ year%@@ 4@@ ==0)@@ )) { int@@ n[@@ 12]={31,29,31,30,31,30,31,31,30,31,30,31}; for(i=0;@@ (i@@ +1)@@ <@@ month;i++) { s+=@@ n[i]; } s=s+@@ date; } else { int@@ n[@@ 12]={31,28,31,30,31,30,31,31,30,31,30,31}; for(i=0;@@ (i@@ +1)@@ <@@ month;i++) { s+=@@ n[i]; } s=s+@@ date; } printf("%d\n",s); return0; }  
c -1
h -1
0

int@@ q@@ [100],@@ w@@ [100],@@ m,n,@@ i,j,k,@@ v@@ ,@@ y=0; void@@ a@@ (@@ ),@@ b@@ (@@ ),@@ c@@ (@@ ),@@ d@@ (); main() { a@@ (); b@@ (); c@@ (); d@@ (); } void@@ a@@ () { scanf("%d%d",&m,&n); for(i=0;i<m;i++) scanf("%d",&@@ q@@ [i]); for(i=0;i<n;i++) scanf("%d",&@@ w@@ [i]); } void@@ b@@ () { for(j=0;j<m-1;j++) { for(k=j+1;k<@@ m;k++) { if(q@@ [j]>@@ q@@ [k]) { v@@ =@@ q@@ [k]; q@@ [k]=@@ q@@ [j]; q@@ [j]=@@ v@@ ; } } } for(j=0;j<n-1;j++) { for(k=j+1;k<@@ n;k++) { if(w@@ [j]>@@ w@@ [k]) { v@@ =@@ w@@ [k]; w@@ [k]=@@ w@@ [j]; w@@ [j]=@@ v@@ ; } } } } void@@ c@@ () { for(i=m;i<@@ m+n;i++) q@@ [i]=@@ w@@ [y@@ ++@@ ]; } void@@ d@@ () { printf("%d",@@ q@@ [0]); for(i=1;i<@@ m+n;i++) printf("%d",@@ q@@ [i]); }  
c -1
h -1
intmain() { inta[1000][1000]; intn; inti,j,k,@@ r; scanf("%d",&n); for(i=0;i<=n-1;i++) { for(j=0;j<=n-1;j++) { scanf("%d",&a[i][j]); } } for(i=0;i<=n-1;i++) { for(j=0;j<=n-1;j++) { if(a[i][j]==0) { for(k=0@@ ;j@@ +k@@ <=@@ n-1;k++) { if(a[i]@@ [j@@ +k@@ ]!=0) { break; } } for(@@ r@@ =0@@ ;i@@ +@@ r@@ <=@@ n-1;@@ r++) { if(a@@ [i+@@ r@@ ][j]@@ !=0) { break; } } goto@@ A@@ ; } } } A@@ :@@ printf("%d\n",@@ (k@@ -2)*(@@ r@@ -2@@ )); return0; }  
c -1
h -1
0

intmain() { intk,@@ n,m,@@ i,j,@@ s; inta[100][100]; int(*p)@@ [100]; intsum@@ [100]={0}; cin>>k; for(s=0;s@@ <k;@@ s++) { p=a; cin>>n>>m; for(i=0;i<n;i++) { for(j=0;j<m;j++) cin>>@@ *(*(p+i)+j); } for(i=0;i<n;i++) { if((i@@ ==0)||(@@ i==@@ n-1@@ )) for(j=0;j<m;j++) sum[@@ s@@ ]=sum[@@ s@@ ]+@@ *(*(p+i)+j); else sum[@@ s@@ ]=sum[@@ s@@ ]+@@ *(*(p+i)@@ )@@ +*(@@ *(p+i)@@ +@@ m-1@@ ); } } for(i=0;i<k;i++) cout<<sum@@ [i]<<endl; return0; }  
c -1
h -1
intmain() { intk,i,j,@@ n,@@ t=0,@@ b,@@ p; inta[20000]; cin>>n; for(i=0;i<n;i++) cin>>a[i]; for(j=0;j<@@ n-@@ t;j++) {@@ for(k=j+1;k<@@ n-@@ t;@@ ){ if(a[k@@ ]==@@ a[j]@@ ){ for(p=@@ k@@ ;p<@@ n-@@ t@@ ;p++) a[p@@ ]=a[@@ p@@ +1]; t++; } else@@ k++; } } for(b=0;b@@ <@@ n-1@@ -@@ t;@@ b++) cout<<a[@@ b@@ ]@@ <<""; cout<<a[@@ n-1@@ -@@ t@@ ]<<endl; return0; }  
c -1
h -1
0

voidmain() { struct@@ p { intk; charid[10]; intage; }@@ pa@@ [100@@ ]={0@@ ,"@@ ",@@ 0},@@ pb@@ [100@@ ]={0@@ ,"@@ ",@@ 0},@@ temp; intn; inti,j,k,@@ age@@ ,@@ na@@ ,@@ nb@@ ; charid@@ [10@@ ]={@@ ""@@ }; scanf("%d",&n); for(i=0,j@@ =0@@ ;i@@ +j@@ <n;@@ ) { scanf("%s%d",&@@ id,&@@ age); if(age@@ >=60) { pa@@ [i].age@@ =@@ age; strcpy(@@ pa@@ [i].@@ id,@@ id); pa@@ [i].@@ k=i; i++; } else { pb@@ [j].age@@ =@@ age; strcpy(@@ pb@@ [j].@@ id,@@ id); pb@@ [j].@@ k=j; j++; } } na@@ =i;@@ nb@@ =j; for(j=1;j<=@@ n-1;j++) { for(i=0;i<n@@ -j;i++) { if(pa@@ [i].age@@ <@@ pa@@ [i+1@@ ].age) { temp.@@ age@@ =@@ pa@@ [i+1@@ ].age@@ ;@@ strcpy(@@ temp.@@ id,@@ pa@@ [i+1].@@ id); pa@@ [i+1@@ ].age=@@ pa@@ [i].age@@ ;@@ strcpy(@@ pa@@ [i+1].@@ id,@@ pa@@ [i].id); pa@@ [i].age@@ =@@ temp.@@ age@@ ;@@ strcpy(@@ pa@@ [i].@@ id,@@ temp.@@ id); } } } printf("%s",@@ pa@@ [0].@@ id); for(i=1;i<=@@ na@@ ;i++) { printf("\n@@ %s",@@ pa@@ [i].id); } for(j=0;j<=@@ nb@@ ;j++) { puts(@@ pb@@ [j].@@ id); } }  
c -1
h -1
intmain(){ int@@ sa@@ [100][100]; intm,n; intk; inta,b,@@ c,d,@@ e; scanf("%d",&k); for(m=0;m<@@ k@@ ;m++){ for(n=0;n@@ <k;@@ n@@ ++){ scanf("%d",&(@@ sa@@ [m@@ ][n@@ ]@@ )); } } for(m=0;m<@@ k@@ ;m++){ for(n=0;n@@ <k;@@ n@@ ++){ if(@@ sa@@ [m@@ ][n@@ ]==0){ goto@@ ll@@ ; } } } ll@@ :@@ a=@@ m; b=@@ n; for(m=@@ k-1@@ ;m@@ >=0@@ ;m@@ --){ for(n=@@ k@@ -1;@@ n@@ >=0@@ ;n@@ --){ if(@@ sa@@ [m@@ ][n@@ ]==0){ goto@@ rr@@ ; } } } rr@@ :@@ c=@@ m; d=@@ n; e@@ =(@@ c-a-1)*(d-b-1); printf("%d",@@ e); return0; }  
c -1
h -1
0

intmain(){ intn,m,@@ i@@ ,*@@ p@@ ,j,@@ b=0; scanf("%d%d\n",&n,&@@ m); p=@@ (int*)malloc(sizeof(int)*n); for(i=0;i<n;i++){ scanf("%d",&@@ p[i]); } for(i=0;i<n;i++){ for(j=0;j<n;j++){ if(p@@ [i]+@@ p@@ [j]==@@ m){ b=1; } elsecontinue; } } if(b@@ ){ printf("yes"); } elseprintf("no"); free@@ (p); return0; }  
c -1
h -1
voidmain() {@@ inti,j,@@ k@@ ,*@@ p@@ [100],@@ m,n; scanf("%d%d",&m,&n); for(i=0;i<m;i++) p[i]=@@ (int*)malloc(n*sizeof(int)); for(i=0;i<m;i++) for(j=0;j<n;j++) scanf("%d",@@ p[i]@@ +j); for(j=0;j<n;j++) {@@ k=j; for(i=0;i<m;i++) {printf("%d\n",@@ *(p@@ [i]@@ +k@@ --@@ )); if(k@@ <0@@ )@@ break;}} for(i=1;i<m;i++) {@@ k=i; for(j=n-1;j>=0;j--) {printf("%d\n",@@ *(p@@ [k@@ ++@@ ]@@ +j)); if(k==@@ m)@@ break;}} }  
c -1
h -1
0

intmain() { intm; struct@@ bo {@@ inta; char@@ au@@ [@@ 36@@ ]; }; struct@@ bo@@ bo@@ [999]; inti,j; char@@ k,@@ K@@ ; int@@ sb@@ [26]={0},@@ sbt@@ ; int@@ len; intn; scanf("%d",&m); for(i=0;i<m;i++){ scanf("%d%s",&@@ bo[i].@@ a,@@ bo[i].@@ au); len=strlen(@@ bo[i].@@ au); for(j=0;j<len@@ ;j++){ for(k=@@ 65@@ ;k<@@ 91@@ ;k++){ if(@@ bo[i].@@ au@@ [j]==k){ sb@@ [k@@ -65]++; } } } } K@@ =0; sbt@@ =0; for(i=0;i<26;i++){ if(@@ sb@@ [i]>@@ sbt@@ ){ K@@ =i+65; sbt@@ =@@ sb@@ [i]; } } printf("%c\n%d\n",@@ K@@ ,@@ sbt@@ ); for(i=0;i<m;i++){ n=1; for(j=0;j<strlen(@@ bo[i].@@ au@@ )@@ ;j++){ if(@@ K@@ ==@@ bo[i].@@ au@@ [j]){ n=0; } } if(n@@ ==0){ printf("%d\n",@@ bo[i].@@ a); } } }  
c -1
h -1
intmain() { inti,j,@@ k@@ =1,@@ flag=1; inta[16@@ ]={0}; int@@ c@@ [100]={0}; while(@@ flag@@ ) { for(i=1;i<@@ 16@@ ;i++) { scanf("%d",&a[i]); if(a[i]==@@ -1@@ ){@@ flag@@ =0;@@ break;} if(a[i]@@ ==0){@@ k@@ ++;@@ break;} for(j=i-1@@ ;j>0;j--) { if(a[i]==2*@@ a[j]||@@ 2*@@ a[i]==@@ a[j])@@ c@@ [k]++; } } } for(i=1@@ ;k@@ >0@@ &&i@@ <k@@ ;i++)@@ printf("%d\n",@@ c[i]); return0; }  
c -1
h -1
0

intmain() { intn,i; scanf("%d",&n); struct { int@@ name@@ ; charauthor[26]; } book[999]; for(i=0;i<n;i++) { scanf("%d%s",&book[i].@@ name,@@ book[i].author); } char@@ t,@@ tmax@@ ; intmax=0,@@ j,@@ k; for(@@ t=@@ 'A'@@ ;t@@ <=@@ 'Z'@@ ;t++) { k=0; for(i=0;i<n;i++) { for(j=0;j<strlen(@@ book[i].author@@ );j++) { if(book[i].author@@ [j]==@@ t) { k++; } } } if(k@@ >max) { max=@@ k; tmax@@ =t; } } printf("%c\n%d\n",@@ tmax@@ ,max); for(i=0;i<n;i++) { for(j=0;j<strlen(@@ book[i].author@@ );j++) { if(book[i].author@@ [j]==@@ tmax@@ ) { printf("%d\n",book[i].@@ name); break; } } } return0; }  
c -1
h -1
intmain(intargc,char*argv[]) { intnum[@@ 15],@@ j,k,@@ i,@@ a=0; while(1){ scanf("%d",&@@ num@@ [0]); if(num@@ [0]@@ !=-1) { i=1; do{ scanf("%d",&@@ num[i]); i++; }while(@@ num@@ [i-1]@@ !=0); for(j=0;j<i;j++) { for(k=j+1;k<@@ i;k++) { if(num@@ [k]==@@ num[j]@@ *2@@ ||@@ num@@ [j]==@@ num@@ [k]@@ *2) a++; } } printf("%d\n",@@ a); a=0; } else break; } return0; }  
c -1
h -1
0

main() { inti,j,k,@@ countb@@ ,@@ re@@ ; chara[@@ 256]; charb[@@ 20]; charc[@@ 20]; scanf("%s",a); scanf("%s",b); scanf("%s",c); for(i=0;@@ b[i]@@ !=0;i++) {@@ countb@@ =i;} for(i=0;a[i]!='\0';i++) { re@@ =0; if(a[i]==@@ b[0]) { for(j=i@@ ;@@ b@@ [j-i@@ ]@@ !='\0';j++) {@@ if(a[j]!=@@ b@@ [j-i@@ ])@@ break;} if(j==@@ i+@@ countb@@ +1) { re@@ =1; for(j=i;j<=@@ i+@@ countb@@ ;j++) a[j]=@@ c@@ [j-i@@ ]; } } elsecontinue; if(@@ re@@ ==1) break; } printf("%s",a); getchar(); getchar(); }  
c -1
h -1
void@@ rank1@@ (intarray[],int@@ num,int@@ k) { inta,@@ i,j; for(i=1;i<@@ num;i++) for(j=1;j<=@@ num@@ -i;j++) if(array@@ [j]>@@ array@@ [j+1]) { a=@@ array@@ [j]; array@@ [j]=@@ array@@ [j+1]; array@@ [j+1]=@@ a; } for(i=1;i<=@@ num;i++) { if(i==1) { if(k==@@ 2) cout<<'@@ '; cout<<array@@ [1]; } else cout<<'@@ '@@ <<@@ array@@ [i]; } } void@@ rank2@@ (int@@ num1@@ ,int@@ num2@@ ) { int@@ array1@@ [@@ 10000],@@ array2@@ [@@ 10000],@@ i; for(i=1;i<=@@ num1@@ ;i++) cin>>@@ array1@@ [i]; for(i=1;i<=@@ num2@@ ;i++) cin>>@@ array2@@ [i]; rank1@@ (@@ array1@@ ,@@ num1,@@ 1); rank1@@ (@@ array2@@ ,@@ num2@@ ,@@ 2); cout<<endl; } intmain() { int@@ num1,num2@@ ; cin>>@@ num1@@ >>@@ num2@@ ; rank2@@ (@@ num1,num2@@ ); return0; }  
c -1
h -1
0

struct@@ person { charid[20]; inty; }; voidmain() { intn,i,j,@@ m=0,@@ k=0; struct@@ person@@ t@@ ,*@@ s,@@ o@@ [1000],@@ y@@ [1000]; scanf("%d",&n); s@@ =(struct@@ person@@ *)malloc(@@ n*@@ sizeof(struct@@ person@@ )); for(i=0;i<n;i++) scanf("%s%d",@@ s[i].@@ id,&@@ s[i].@@ y); for(i=0;i<n;i++) if(s@@ [i].y@@ >=60@@ ){@@ o@@ [k]=@@ s[i]@@ ;k@@ ++;} else{@@ y@@ [m]=@@ s[i]@@ ;m@@ ++;} for(i=0;i<k;i++) {@@ for(j=0;j<@@ k@@ -i;j++) if(@@ o@@ [j].@@ y@@ <@@ o@@ [j+1].@@ y@@ ){@@ t=@@ o@@ [j];@@ o@@ [j]=@@ o@@ [j+1];@@ o@@ [j+1]=@@ t;} } for(i=0;i<k;i++) printf("%s\n",@@ o@@ [i].id); for(i=0;i<m;i++) printf("%s\n",@@ y@@ [i].id); }  
c -1
h -1
intmain() { intn,i,j,k; scanf("%d",&n); structpatient { charnum[10]; intage; }; structpatient@@ p@@ [100],@@ temp; for(i=0;i<n;i++) scanf("%s%d",&@@ p[i].@@ num,&@@ p[i].age); for(i=0;i<n-1;i++) { for(j=i+1;j<n;j++) { if(p@@ [j].age@@ >@@ p@@ [i].age@@ &&p@@ [j].age@@ >=60) { for(k=j@@ ;k@@ >@@ i@@ ;k--) { temp=@@ p@@ [k]; p@@ [k]=@@ p@@ [k@@ -1]; p@@ [k-1@@ ]=temp; } } } printf("%s\n",@@ p[i].@@ num); } printf("%s\n",@@ p[@@ n-1@@ ].@@ num); return0; }  
c -1
h -1
1


int@@ mhang@@ (int@@ a){ return@@ a@@ +1; } int@@ mlie@@ (int@@ a){ return@@ a@@ -1; } intmain() { intsz[100][100]; introw,col,@@ i,j,@@ hang@@ =0,@@ lie@@ =0; scanf("%d%d",&row,&col); for(i=0;i<row;i++){ for(j=0;j<col;j++){ scanf("%d",&sz[i][j]); } } for(i=0;i<@@ col@@ ;i++){ hang@@ =0; lie@@ =i; while(1){ printf("%d\n",@@ sz[@@ hang@@ ][@@ lie@@ ]); hang@@ =@@ mhang@@ (@@ hang@@ ); lie@@ =@@ mlie@@ (@@ lie@@ ); if(@@ hang@@ >=@@ row@@ ||@@ lie@@ <0@@ ){ break; } } } for(i=1;i<@@ row;i++){ hang@@ =i; lie@@ =@@ col-1; while(1){ printf("%d\n",@@ sz[@@ hang@@ ][@@ lie@@ ]); hang@@ =@@ mhang@@ (@@ hang@@ ); lie@@ =@@ mlie@@ (@@ lie@@ ); if(@@ hang@@ >=@@ row@@ ||@@ lie@@ <0@@ ){ break; } } } return0; }  
c -1
h -1
intmain(){ intmax@@ ,@@ row,col,@@ array[100][100]; cin>>row>>col; for(inti=0;i<row;i++) for(intj=0;j<col;j++) cin>>array[i][j]; int(*p)@@ [100]; p=@@ array@@ ; for(inti=0;i<@@ col@@ ;i++){ for(intj=i@@ ;j>=0;j--){ if((i@@ -j@@ )@@ <row) cout<<@@ *(*(p@@ +i-j@@ )@@ +j)<<endl; } } if(row@@ >@@ col) max=@@ row; else max=@@ col; for(inti=@@ col@@ ;i<=@@ col@@ +row@@ -1;i++){ for(intj=@@ col-1@@ ;j>=0;j--){ if((i@@ -j@@ )@@ <row@@ &&i@@ -col@@ +1@@ >=0) cout<<@@ *(*(p@@ +i-j@@ )@@ +j)<<endl; } } }  
c -1
h -1
1


intmain() { intk,@@ n,m,@@ num@@ [100][100],@@ sum; cin>>k; cout<<endl; for(int@@ a@@ =0;a@@ <k;@@ a++) {@@ cin>>m>>n; sum=0; for(inti=0;i<m;i++) { for(intj=0;j<n;j++) {@@ cin>>@@ num[i]@@ [j]; cout<<"@@ "; if(i==0||i==@@ m-1@@ ||j@@ ==0||j==@@ n-1) {@@ sum+=@@ num@@ [i][j]@@ ;} } cout<<endl; } cout<<sum<<endl; } return0; }  
c -1
h -1
intmain() { intn,@@ sum=0,@@ mat@@ [100]; memset(@@ mat@@ ,0,sizeof(@@ mat@@ )); while(@@ scanf("%d",&@@ n@@ ),@@ n@@ !=-1) { if(n@@ ==0) { printf("%d\n",sum); sum=0; memset(@@ mat@@ ,0,sizeof(@@ mat@@ )); } elseif(n@@ >@@ 49@@ ) { mat@@ [n@@ ]=1; if(@@ mat@@ [n@@ >>@@ 1@@ ]) sum++; } else { mat@@ [n@@ ]=1; if(@@ mat@@ [n@@ <<@@ 1@@ ]) sum++; if(!@@ (n@@ &@@ 1@@ )&&@@ mat@@ [n@@ >>@@ 1@@ ]) sum++; } } return0; }  
c -1
h -1
0

voidmain() {@@ inti,j,@@ k@@ ,*@@ p@@ [100],@@ m,n; scanf("%d%d",&m,&n); for(i=0;i<m;i++) p[i]=@@ (int*)malloc(n*sizeof(int)); for(i=0;i<m;i++) for(j=0;j<n;j++) scanf("%d",@@ p[i]@@ +j); for(j=0;j<n;j++) {@@ k=j; for(i=0;i<m;i++) {printf("%d\n",@@ *(p@@ [i]@@ +k@@ --@@ )); if(k@@ <0@@ )@@ break;}} for(i=1;i<m;i++) {@@ k=i; for(j=n-1;j>=0;j--) {printf("%d\n",@@ *(p@@ [k@@ ++@@ ]@@ +j)); if(k==@@ m)@@ break;}} }  
c -1
h -1
intmain() { chars1@@ [300],@@ s2@@ [300],@@ s3@@ [300],@@ *@@ p=@@ NULL@@ ; inti,@@ l1,l2,@@ l3@@ ; cin>>@@ s1@@ >>@@ s2@@ >>@@ s3@@ ; p=strstr(@@ s1,@@ s2); l1=strlen(@@ s1); l2=strlen(@@ s2); l3@@ =strlen(@@ s3); if(p@@ ==NULL) cout<<@@ s1@@ ; else { for(i=0;@@ &@@ s1@@ [i]<@@ p@@ ;i++) cout<<@@ s1@@ [i]; cout<<@@ s3@@ ; for(@@ p=p+@@ l2@@ ;@@ *p@@ !='\0'@@ ;@@ *p@@ ++) cout<<@@ *p; } return0; }  
c -1
h -1
0

voidmain() { intn; inti,j; intk=0; charstr@@ [100][@@ 10@@ ]={0}; char@@ str1@@ [100][@@ 10@@ ]={0}; char@@ str2@@ [100][@@ 10@@ ]={0}; inttemp; char@@ t@@ [10@@ ]={0}; inta[100]; int@@ a1@@ [100]={0}; int@@ a2@@ [100]={0}; scanf("%d",&n); for(i=0;i<n;i++) scanf("%s%d",@@ str@@ [i],&@@ a[i]); for(i=0;i<n;i++) { strcpy(@@ str1@@ [i],@@ str[i]); a1@@ [i]=@@ a[i]; } for(i=0;i<n;i++) if(a[i]@@ >=60) { strcpy(@@ str2@@ [k],@@ str[i]); a2@@ [k]=@@ a[i]; k=k+1; } for(j=1;j<@@ k;j++) for(i=0;i<@@ k@@ -j;i++) if(@@ a2@@ [i]<@@ a2@@ [i+1]) { temp=@@ a2@@ [i]; a2@@ [i]=@@ a2@@ [i+1]; a2@@ [i+1]=@@ temp; strcpy(@@ t,@@ str2@@ [i]); strcpy(@@ str2@@ [i],@@ str2@@ [i+1]); strcpy(@@ str2@@ [i+1],@@ t); } for(i=0;i<k;i++) printf("%s\n",@@ str2@@ [i]); for(i=0;i<n;i++) if(@@ a1@@ [i]@@ <60) printf("%s\n",@@ str1@@ [i]); }  
c -1
h -1
intmain() { inta[20000]; inti,j,k,@@ x; scanf("%d",&x); for(i=0;i<x;i++) scanf("%d",&a[i]); for(i=0;i<x;i++) { for(j=i+1;j<@@ x;j++) { if(a[i]==a[j]) { x@@ --; for(k=j@@ ;k<@@ x@@ ;k++) a[k]=a[k@@ +1]; j--; } } } for(i=0;i<x@@ -1;i++)@@ printf("%d",a[i]); if(i<@@ x)@@ printf("%d",a[i]); return0; }  
c -1
h -1
0

intmain() { inti,j,k,@@ m,n,@@ dmax@@ ,@@ a[100],@@ d@@ [100]; scanf("%d",&n); for(i=0;i<n;i++) { scanf("%d",&a[i]); } for(i=0;i<n;i++) d@@ [i]=1; for(i=n-2;i>=0;i--) { for(j=i+1;j<n;j++) { if((@@ a[i]@@ >=@@ a[j]@@ )&&(@@ d@@ [i]<=@@ d@@ [j]@@ )) { d[i]=@@ d@@ [j]+1; } } } dmax@@ =0; for(i=0;i<n;i++) {@@ if(d@@ [i]>@@ dmax@@ ) dmax@@ =@@ d[i]; } printf("%d\n",@@ dmax@@ ); return0; }  
c -1
h -1
voidmain() { inta,b,@@ c,d,@@ n,i,j,@@ x,y,@@ s,@@ m@@ [100][100]; scanf("%d",&n); for(i=0;i<n;i++) for(j=0;j<n;j++) scanf("%d",&@@ m@@ [i][j]); for(i=0;i<n;i++) for(j=0;j<n;j++) { if(m@@ [i][j]==0&&@@ m@@ [i+1][j]@@ ==0&&@@ m[i]@@ [j+1@@ ]==0) { a@@ =i;@@ b=j; } if(m@@ [i][j]==0&&@@ m[i]@@ [j-1]@@ ==0&&@@ m@@ [i-1][j]@@ ==0) { c@@ =i;@@ d=j; } } x=@@ c-a@@ -1;@@ y=@@ d-b@@ -1; s=@@ x@@ *@@ y; printf("%d",s); }  
c -1
h -1
0

intmain(){ double@@ e; char@@ zf@@ [2][@@ 501],@@ count=0,@@ c,@@ w@@ =0; scanf("%lf@@ %c@@ ",&@@ e@@ ,&c); gets(@@ zf@@ [0]); gets(@@ zf@@ [1]); int@@ a=strlen(@@ zf@@ [0]@@ ),@@ b=strlen(@@ zf@@ [1]); if(a!=@@ b){ printf("error"); }else{ for(intm=0;m@@ <a@@ ;m++){ for(int@@ o@@ =0;@@ o@@ <@@ 2;@@ o@@ ++){ if(@@ zf@@ [@@ o@@ ][m@@ ]!='@@ A'&&@@ zf@@ [@@ o@@ ][m@@ ]!='@@ T'&&@@ zf@@ [@@ o@@ ][m@@ ]!='@@ G'&&@@ zf@@ [@@ o@@ ][m@@ ]!='@@ C'){ w@@ ++; } } } if(w@@ !=0){ printf("error"); }else{ for(inti=0;i<@@ a;i++){ if(@@ zf@@ [0]@@ [i]==@@ zf@@ [1]@@ [i]){ count++; } } if(1.0*@@ count@@ /@@ a@@ >@@ e@@ ){ printf("yes"); }else{ printf("no"); } } } return0; }  
c -1
h -1
voidmain() { float@@ x,@@ fenzi@@ =0; int@@ lena@@ ,@@ lenb@@ ,@@ i,j@@ =0; chara[@@ 505@@ ],b[@@ 505@@ ],@@ ch; scanf("%f",&@@ x); scanf("%@@ c@@ ",&@@ ch@@ ); gets(a); gets(b); lena@@ =strlen(a); lenb@@ =strlen(b); if(@@ lena@@ !=@@ lenb@@ ) printf("error\n"); else { for(i=0;i<@@ lena@@ ;i++) { if((@@ a[i]=='@@ A'||a[i]=='T'||a[i]=='@@ G'||@@ a[i]=='@@ C')@@ && (@@ b[i]=='@@ A'||@@ b[i]=='@@ T'||@@ b[i]=='@@ G'||@@ b[i]=='@@ C')@@ ) { if(a[i]==b[i]@@ )@@ fenzi@@ ++; } else{@@ j@@ =1;@@ printf("error@@ \n@@ ");@@ break;} } if(j@@ ==0&&@@ fenzi@@ >=@@ x@@ *@@ lena@@ )@@ printf("yes\n"); elseif(@@ j@@ ==0)@@ printf("no\n"); } }  
c -1
h -1
1


inta[@@ 999]; voidmain() { intn,k,@@ i,j; scanf("%d%d",&n,&k); for(i=0;i<=n-1;i++) {@@ scanf("%d",&a[i]);} int@@ b=0; for(i=0;i<=@@ n-2;i++) for(j=i+1;j<=@@ n-1;j++) { if(a[i]+a[j]==k) { b=b@@ +1; } } if(b@@ >=@@ 1) { printf("yes\n"); } else@@ printf("no\n"); }  
c -1
h -1
structpatient { charID[10]; intage; structpatient*next; }; structpatient*@@ insert@@ (structpatient@@ *head,@@ structpatient*@@ another@@ ) { structpatient*@@ p0@@ ,*@@ p1,*p2; p1=head; p0@@ =@@ another@@ ; if(@@ p0@@ ->age@@ <60) { while(@@ p1->next@@ !=NULL) { p2=p1; p1=p1->next; } p1->next=@@ p0; p0@@ ->next=NULL; } else { while(@@ p1->age@@ >=@@ p0@@ ->age@@ &&@@ p1->next@@ !=NULL) { p2=p1; p1=p1->next; } if(p1->age@@ >=@@ p0@@ ->age@@ ) { p1->next=@@ p0; p0@@ ->next=NULL; } else { if(@@ p1@@ ==@@ head@@ ) { head=@@ p0; p0->next@@ =p1; } else { p2->next=@@ p0; p0->next@@ =p1; } } } returnhead; } voidprint@@ (structpatient@@ *head) { structpatient@@ *p; p=head; while(p!=NULL) { printf("%s\n",p->@@ ID); p=p->next; } } voidmain() { intn,i; structpatient@@ *head,*p; scanf("%d",&n); head=@@ p=@@ (structpatient@@ *)malloc(len); scanf("%s%d",@@ p->@@ ID,&@@ p->@@ age); head@@ ->next=NULL; for(i=1;i<n;i++) { p=@@ (structpatient@@ *)malloc(len); scanf("%s%d",@@ p->@@ ID,&@@ p->@@ age); head=@@ insert@@ (head,@@ p); } print(head); }  
c -1
h -1
0

intmain() { char@@ str1@@ [257],@@ str2@@ [257],@@ str3@@ [257]; gets(@@ str1); gets(@@ str2); gets(@@ str3@@ ); inti; intj; intk; for(i=0;i<strlen(@@ str1@@ );i++) { j=0; k=i; while(j<@@ strlen(@@ str2@@ )) { if(@@ str2@@ [j]!=@@ str1@@ [k]) break; else j++; k++; } if(j==@@ strlen(@@ str2@@ )) { printf("%s",@@ str3@@ ); break; } else printf("%c",@@ str1@@ [i]); } if(i!=@@ strlen(@@ str1@@ )) for(i=k@@ ;i<@@ strlen(@@ str1@@ );i++) printf("%c",@@ str1@@ [i]); return0; }  
c -1
h -1
main() { inti,j,n,@@ num,@@ a[@@ 17@@ ]; do {@@ i=0; do {@@ i++; scanf("%d",&a[i]); }while(@@ a[i]@@ >0@@ ); n@@ =i-1; if(a[@@ n+1@@ ]!=@@ -1) {@@ num=0; for(i=1;i<=n-1;i++) for(j=i+1;j<=n;j++) if(a[i]==2*@@ a[j]||a[j]==2*@@ a[i]) num++; printf("%d\n",num); } }while(@@ a[n@@ +1@@ ]@@ ==0@@ ); return0; }  
c -1
h -1
0

intmain() { inta[16],@@ i,j,k,@@ l; do { i=0; l=@@ -1; for(j=0;j<=@@ 15@@ ;j++) a[j]@@ =1; do { cin>>a[i]; i++; if(a[0]==-1) break; }while(@@ a[i-1]@@ !=0); if(a[0]==-1) break; for(j=0;j<=i-1;j++) { for(k=0;k<=@@ i-1;k++) { if(a[j]==2*@@ a[k]) l++; } } cout<<@@ l@@ <<endl@@ ;@@ }while(@@ a[0]@@ !=-1); return0; }  
c -1
h -1
intmain(intargc,char*argv[]) { intn,i,k,@@ d,@@ total; total=0; int@@ shuzu@@ [@@ 16]; for(i=0;i<16@@ ;i++){ scanf("%d",&n); if(n@@ !=@@ -1){ shuzu@@ [i]=@@ n; if(n@@ ==0){ for(d@@ =0;d@@ <i@@ ;@@ d@@ ++){ for(k=0;k<@@ i@@ ;k++){ if(shuzu@@ [d@@ ]==2*@@ shuzu@@ [k]@@ ){ total@@ ++;@@ }}} printf("%d\n",@@ total); i@@ =-1; total@@ =0;} } else{ break;}} return0; }  
c -1
h -1
1


intmain() { intk,@@ l,@@ i,j,@@ x=0; chars[256],@@ a[@@ 256],b[@@ 256],@@ p@@ [256]; gets(s); gets(a); gets(b); k=@@ (int)@@ strlen(@@ s); l=@@ (int)@@ strlen(@@ a); for(i=0;i<@@ k-@@ l@@ +1@@ ;i++){ for(j=0;j<l@@ ;j++){ p@@ [j]=@@ s@@ [j+i@@ ]; } p@@ [j]@@ ='\0'; if(strcmp(@@ p,@@ a)@@ ==0){ x@@ =i; break; } } if(x@@ ==0){ printf("%s",s); } else{ for(i=0;i<x;i++){ printf("%c",s[i]); } printf("%s",@@ b); for(i=@@ x+@@ l@@ ;i<@@ k;i++){ printf("%c",s[i]); } } return0; }  
c -1
h -1
inta[@@ 25],@@ num[@@ 25@@ ]={0}; intmain() { intn,i,@@ k=0; int@@ search@@ (inti,int@@ n); scanf("%d",&n); for(i=0;i<n;i++) scanf("%d",&a[i]); i--; for(@@ ;i>=0;i--) num[i]@@ =1@@ +@@ search@@ (i,@@ n); for(i=0;i<n;i++) if(num@@ [i]>@@ k)@@ k=@@ num[i]; printf("%d\n",@@ k); return0; } int@@ search@@ (inti,int@@ n) { int@@ p,@@ q=0; for(p@@ =i+1@@ ;p@@ <n;p++) { if(a[@@ p@@ ]<=@@ a[i]) if(q@@ <@@ num[@@ p@@ ])@@ q=@@ num[@@ p@@ ]; } return@@ q; }  
c -1
h -1
0

intmain() { inti,n,@@ k,@@ j,@@ r=0,@@ m=0; int@@ lens@@ ,@@ lena@@ ; chars[256],@@ a[100],b[100],@@ c[100],@@ d@@ [100]; scanf("%s%s%s",@@ s,@@ a,b); lens@@ =strlen(s); lena@@ =strlen(a); for(i=0;i<@@ lens@@ ;i++) { m=0; for(k=i@@ ;k<@@ i+@@ lena@@ ;k++) { if(a[k@@ -i@@ ]!=@@ s[k]@@ )@@ m=1; } if(m==0) { for(n=0;n@@ <i@@ ;n++) c[@@ n@@ ]=@@ s[@@ n]; c[@@ n@@ ]='\0'; for(j=i@@ +@@ lena@@ ;j<@@ lens@@ ;j++) d@@ [j-i@@ -@@ lena@@ ]=@@ s[j]; d@@ [j-i@@ -@@ lena@@ ]='\0'; r@@ =1; printf("%s@@ %s%s",@@ c,@@ b,@@ d); break; } } if(r@@ ==0)@@ printf("%s",s); return0; }  
c -1
h -1
structstudent { intnum; intc; intm; intsum; structstudent*next; }; voidmain() { intn,i,j; scanf("%d",&n); structstudent*head,*@@ p0@@ ,*@@ p,*@@ q; head@@ =(structstudent*)malloc(sizeof(structstudent)); head@@ ->next=NULL; for(i=0;i<n;i++) { q@@ =(structstudent*)malloc(sizeof(structstudent)); scanf("%d%d%d",&@@ q->@@ num,&@@ q->@@ c@@ ,&@@ q->@@ m); q->@@ sum=@@ q->@@ c+@@ q->@@ m; q@@ ->next=NULL; p0@@ =head; p=@@ p0@@ ->next; j=0; while(p@@ !=NULL@@ &&@@ q->@@ sum<=@@ p->@@ sum) { p0@@ =p; p=p->next; j++; if(j@@ >@@ 3) goto@@ A@@ ; } p0@@ ->next=@@ q; q@@ ->next=p; A@@ :@@ continue; } p=head->next; for(i=0;i<3;i++) { printf("%d%d\n",@@ p->@@ num,@@ p->@@ sum); p=p->next; } }  
c -1
h -1
0

int@@ fg@@ (int@@ k,int@@ m) { intj,@@ d=0; if(m==1) { d=1; } for(j=k@@ ;j<=@@ m;j++) { if(m@@ %j==0) d=d+@@ fg@@ (@@ j,@@ m@@ /j@@ ); } return(@@ d); } intmain() { intn,i,@@ a[@@ 40000@@ ],b[@@ 40000@@ ],@@ s; scanf("%d",&n); for(i=1;i<=n;i++) { scanf("%d",&a[i]); } for(i=1;i<=n;i++) { b[i]=@@ fg@@ (2,@@ a[i]); printf("%d\n",@@ b[i]); } return0; }  
c -1
h -1
voidmain() { structbook { intn; chara[@@ 26]; }; structbook@@ book[999]; intm,@@ c[@@ 26]={0},@@ k; char@@ w@@ [26]; scanf("%d",&m); inti,j,@@ max=0,@@ t; for(i=0;i<m;i++) scanf("%d%s",&book[i].@@ n,@@ book[i].@@ a); for(i=0;i<26;i++) w@@ [i]@@ ='A'+i; for(i=0;i<26;i++) for(j=0;j<m;j++) for(k=0;k<26;k++) { if(@@ book[j].@@ a[k]==@@ w@@ [i]) c[i]@@ ++; } for(i=0;i<26;i++) { if(c@@ [i]>max) max=@@ c[i]; } for(i=0;i<26;i++) { if(c@@ [i]==@@ max) {@@ t=i; break;} } printf("%c\n%d\n",@@ w@@ [t@@ ],c[@@ t@@ ]); for(j=0;j<m;j++) for(k=0;k<26;k++) { if(@@ book[j].@@ a[k]==@@ w@@ [t@@ ]) {printf("%d\n",@@ book[j].@@ n); break;} } }  
c -1
h -1
0

voidmain() { introw,col; scanf("%d%d",&row,&col); int(*p)@@ [100]; p=@@ (int@@ (@@ *)@@ [100@@ ])@@ malloc(@@ row@@ *col@@ *sizeof(int)); inti,j; for(i=0;i<row;i++) { for(j=0;j<col;j++) scanf("%d",*(p+i)+j); } intk; for(k=0;k<col@@ ;k++) { for(i=0,j@@ =k@@ ;i<@@ row@@ &&j>=0@@ ;i++,j--) printf("%d\n",@@ *(*(p+i)@@ +j)); } for(k=1;k<@@ row@@ ;k++) { for(i=@@ k,@@ j=@@ col-1@@ ;i<@@ row@@ &&j>=0@@ ;i++,j--) printf("%d\n",@@ *(*(p+i)@@ +j)); } }  
c -1
h -1
intm,n,@@ i,@@ str@@ [1000]; void@@ get@@ (); voidsort@@ (); int@@ join@@ (); voidprint@@ (); void@@ get@@ () { scanf("%d%d",&m,&n); for(i=0;i<m+@@ n;i++) scanf("%d",&@@ str[i]); } voidsort@@ () { inti,j,temp; for(i=0;i<m;i++) {@@ for(j=i+1;j<@@ m;j++) if(str@@ [j]<@@ str@@ [i]@@ ){@@ temp=@@ str@@ [i];@@ str[i]=@@ str@@ [j];@@ str@@ [j]=@@ temp@@ ;}} for(i=m;i<@@ m+n;i++) {@@ for(j=i+1;j<@@ m+@@ n;j++) if(str@@ [j]<@@ str@@ [i]@@ ){@@ temp=@@ str@@ [i];@@ str[i]=@@ str@@ [j];@@ str@@ [j]=@@ temp@@ ;}} } int@@ join@@ () {@@ return0;} voidprint() {printf("%d",@@ str@@ [0]); for(i=1;i<@@ m+n;i++) printf("%d",@@ str[i]); } voidmain() {@@ get@@ (@@ str); sort(@@ str); join@@ (@@ str); print(@@ str@@ );}  
c -1
h -1
0

intmain() { intn,@@ m[@@ 20000],@@ i,j=0,@@ count=0; scanf("%d",&n); for(i=0;i<n;i++) { scanf("%d",&@@ m[i]); for(j=0;j<i;j++) { if(m@@ [i]==@@ m@@ [j]) break; } if(i==@@ j) { if(count@@ ==0) { printf("%d",@@ m[i]); count++; } else printf("%d",@@ m[i]); } } printf("\n"); return0; }  
c -1
h -1
intmain() {@@ intn,a[@@ 20001@@ ],@@ i,j,k,@@ flag=0; scanf("%d",&n); if(n@@ >=1@@ &&n@@ <=@@ 20000@@ ){ for(i=0;i<n;i++) {@@ scanf("%d",&a[i]); if(a[i]@@ <@@ 10@@ ||@@ a[i]@@ >=@@ 100@@ ) scanf("%d",&a[i]); else@@ continue;} printf("%d",a[0]); for(j=1;j<@@ n;j++){ for(k=0;k<j@@ ;k++){ if(a[j]==@@ a[k]) {@@ flag=1; break;} } if(flag==0) printf("%d",@@ a[j]); flag=0; } } return0; }  
c -1
h -1
1


intnum=0; int@@ solution@@ (inta,int@@ b){ for(inti=@@ b@@ ;i<=@@ a;i++){ if(a@@ %i==0){ a=@@ a/@@ i; if(a@@ ==1)@@ num++; else@@ num=@@ solution@@ (a,@@ i); a=@@ a*@@ i; } } returnnum; } intmain(){ intn; cin>>n; for(inti=0;i<n;i++){ inta; cin>>a; num=0; cout<<@@ solution@@ (a,@@ 2)<<endl; } return0; }  
c -1
h -1
intmain() { inta[@@ 20001@@ ],@@ count[@@ 101@@ ]={0}; intn,i; cin>>n; for(i=1;i<=n;i++) { cin>>a[i]; count[@@ a[i]@@ ]++; } cout<<@@ a[1]; count[@@ a[1]@@ ]=0; for(i=2;i<=n;i++) { if(count@@ [@@ a[i]@@ ]>=@@ 1) { cout<<""<<a[i]; count[@@ a[i]@@ ]=0; } } cout<<endl; return0; }  
c -1
h -1
0

voidmain() { inti,j=0,@@ s,@@ t,@@ k=0,@@ n; structpatient{ charID[10]; intage; }; structpatient@@ p@@ [100],@@ d@@ [100],@@ c[100],@@ temp; scanf("%d",&n); for(i=0;i<n;i++) { scanf("%s%d",@@ p[i].@@ ID,&@@ p[i].age); } for(i=0;i<n;i++) { if(p@@ [i].age>=60) d@@ [j@@ ++]=@@ p[i]; else@@ c@@ [k@@ ++]=@@ p[i]; } s@@ =j; t=@@ k; for(i=1;i<@@ s;i++) { for(j=0;j<@@ s@@ -i;j++) { if(d@@ [j].age@@ <@@ d@@ [j+1@@ ].age) { temp=@@ d@@ [j]; d@@ [j]=@@ d@@ [j+1]; d@@ [j+1]=temp; } } } for(i=0;i<@@ s;i++) { printf("%s\n",@@ d@@ [i].ID); } for(i=0;i<t;i++) printf("%s\n",@@ c@@ [i].ID); }  
c -1
h -1
structstudent { intnum; int@@ Chinese@@ ; intmath; intsum; }; voidmain() { inti,n,@@ p,q,@@ r,@@ b=0,@@ c=0,@@ d=0; structstudent@@ a[@@ 100000]; scanf("%d",&n); for(i=0;i<n;i++) { scanf("%d%d%d",&a[i].@@ num,&@@ a[i].@@ Chinese@@ ,&a[i].@@ math); a[i].@@ sum=@@ a[i].@@ Chinese@@ +a[i].@@ math; if(i==0) p=@@ q=@@ r=@@ a[i].@@ sum; else { if(a[i].@@ sum>@@ p) { r=@@ q; q=p; p=@@ a[i].@@ sum; d=@@ c; c=@@ b; b=i; } elseif(a[i].@@ sum>@@ q) { r=@@ q; q=@@ a[i].@@ sum; d=@@ c; c=i; } elseif(a[i].@@ sum>@@ r@@ ) { r=@@ a[i].@@ sum; d@@ =i; } } } printf("%d%d\n%d%d\n%d%d\n",@@ a[@@ b@@ ].num,@@ a[@@ b@@ ].@@ sum,@@ a[c@@ ].num,@@ a[c@@ ].@@ sum,@@ a[d@@ ].num,@@ a[d@@ ].sum); }  
c -1
h -1
0

intmain(){ doublen,@@ x,y,@@ m,@@ t; x=0; inti,@@ c; c=0; chara[501],b[501]; scanf("%lf",&n); scanf("%s%s",a,b); m=strlen(a); t@@ =strlen(b); if(m!=@@ t@@ ){ printf("error"); }else{ for(i=0;i<m;i++){ if(((@@ a[i]=='@@ A')||(@@ a[i]=='@@ T')||(@@ a[i]=='@@ C')||(@@ a[i]=='@@ G')@@ )&&(@@ (@@ b[i]=='@@ A')||(@@ b[i]=='@@ T')||(@@ b[i]=='@@ C')||(@@ b[i]=='@@ G')@@ )){ if(a[i]==b[i]){ x=x@@ +1; } }else{ c=c@@ +1; } } y=@@ x/@@ m; if(c@@ >0){ printf("error"); }else{ if(y@@ >n){ printf("yes"); }else{ printf("no"); } } } return0; }  
c -1
h -1
voidmain() { intk,i,j,@@ h@@ [25@@ ]={0},@@ n[@@ 25@@ ]={@@ 1@@ },@@ num; scanf("%d",&k); for(i=0;i<k;i++) scanf("%d",&h[i]); for(i=k-2;i>=0;i--) {@@ for(j=i+1;j<k;j++) { if(h@@ [i]>=@@ h@@ [j]&&@@ n[i]@@ <n@@ [j]@@ +1) n[i]=@@ n@@ [j]+1; } } num=@@ n@@ [0]; for(i=0;i<k;i++) { if(num@@ <n@@ [i]) num=@@ n[i]; } printf("%d",@@ num@@ +1); }  
c -1
h -1
0

structbook{ intnum; charauthor@@ [27]; }; intmain() { intn,m,@@ i,j; int@@ author_num@@ [26]={0}; scanf("%d",&n); structbook@@ shu@@ [999]; for(i=0;i<n;i++){ scanf("%d%s",&@@ shu[i].@@ num,@@ shu[i].@@ author); } for(i=0;i<n;i++){ for(j=0;j<26@@ ;j++){ m=@@ shu[i].author@@ [j]@@ -'A'; author_num@@ [m@@ ]++; } } intmax=@@ author_num@@ [0],@@ author@@ ='A'; for(i=1;i<@@ 26@@ ;i++){ if(@@ author_num@@ [i]@@ >max){ max=@@ author_num@@ [i]; author@@ =i@@ +'A'@@ ; } } printf("%c\n%d\n",@@ author@@ ,max); for(i=0;i<n;i++){ for(j=0;j<26@@ ;j++){ if(@@ shu[i].author@@ [j]==@@ author@@ ){ printf("%d\n",@@ shu[i].@@ num); } } } return0; }  
c -1
h -1
structpatient { charid[10]; intage; }@@ pa@@ [100]; voidmain() { intn,i,j,@@ max=@@ 59@@ ,@@ m,@@ t=0; scanf("%d",&n); for(i=0;i<n;i++) scanf("%s%d",@@ pa@@ [i].id,&@@ pa@@ [i].age); for(i=0;i<n;i++) if(pa@@ [i].age@@ >@@ 59@@ )@@ t++; for(j=0;j<@@ t;j++) { for(i=0;i<n;i++) if(pa@@ [i].age@@ >max) { max=@@ pa@@ [i].age; m=i; } printf("%s\n",@@ pa@@ [m@@ ].id); pa@@ [m@@ ].age@@ =0; max=@@ 59@@ ; } for(i=0;i<n;i++) if(pa@@ [i].age@@ <=@@ 59@@ &&@@ pa@@ [i].age@@ !=0) printf("%s\n",@@ pa@@ [i].id); }  
c -1
h -1
0

intmain() { inta[@@ 200][@@ 200],@@ t,@@ n,m,@@ i,j,@@ s; int(*p)@@ [@@ 200]; scanf("%d",&t); while(t@@ --) { scanf("%d%d",&n,&m); p=a; for(i=0;i<n;i++) for(j=0;j<m;j++) scanf("%d",*(p+i)+j); s=0; for(i=0;i<m;i++)@@ s=s@@ +*(@@ *p@@ +i); if(n@@ >1) for(i=0;i<m;i++)@@ s=s@@ +*(@@ *(p+@@ n-1)@@ +i); for(i=1;i<@@ n-1@@ ;i++)@@ s=s@@ +*(@@ *(p@@ +i)); if(m@@ >1) for(i=1;i<@@ n-1@@ ;i++)@@ s=s@@ +*(@@ *(p+i)@@ +@@ m-1@@ ); printf("%d\n",s); } }  
c -1
h -1
voidmain() { intn,i,j,@@ k=0,@@ m; inta[@@ 20000],b[@@ 20000]; scanf("%d",&n); for(i=0;i<n;i++) scanf("%d",&a[i]); for(i=0;i<n;i++) { if(a[i]!=0) { for(j=0;j<n;j++) if(a[i]==a[j]) { if(i!=@@ j@@ &&@@ a[j]@@ !=0)@@ a[j]=0; } } } for(i=0;i<n;i++) if(a[i]!=0) { b[k@@ ]=a[i]; k++; } m=@@ k; for(k=0;k<@@ m-1@@ ;k++) printf("%d",@@ b[k@@ ]); printf("%d",@@ b[k@@ ]); }  
c -1
h -1
0

intmain(){ inti,j,@@ l1,l2,@@ count=0,@@ o@@ =1; double@@ r; chara[@@ 1000],b[1000]; scanf("%lf",&@@ r); scanf("%s",a); scanf("%s",b); l1@@ =strlen(a); l2@@ =strlen(b); if(l1!=l2@@ ){ printf("error"); o@@ =0; } else{ for(i=0;i<l1;i++){ if((a[i]!='@@ A'&&a[i]!='T'&&a[i]!='G'&&a[i]!='@@ C')||(@@ b[i]!='A'&&b[i]!='T'&&b[i]!='G'&&b[i]!='@@ C')){ printf("error"); o@@ =0; break; } else{ if(a[i]==b[i]@@ )@@ count++; } } if(1.0*@@ count@@ /@@ l1@@ >@@ r@@ &&@@ o@@ ==1)@@ printf("yes"); elseif(@@ o@@ ==1)@@ printf("no"); } scanf("%d",&@@ i); return0; }  
c -1
h -1
intmain() { intsz[@@ 1000][1000]; int@@ ROW@@ ,@@ COL@@ ,@@ ROW1@@ ,@@ COL1@@ ,@@ col,@@ row; intn,@@ k=0; int@@ T@@ =0; inta,b; scanf("%d",&n); ROW@@ =@@ n-1; COL@@ =@@ n-1; for(row=0;row@@ <ROW@@ ;@@ row++){ for(col=0;col@@ <@@ COL@@ ;col@@ ++){ scanf("%d",&@@ sz[row][col@@ ]); } } for(row=0;row@@ <ROW@@ ;@@ row++){ for(col=0;col@@ <@@ COL@@ ;col@@ ++){ if(@@ T@@ ==0&&@@ sz[row][col@@ ]==0){ ROW1@@ =@@ row; COL1@@ =@@ col; T@@ =1;} } } for(row@@ =@@ ROW@@ ;@@ row@@ >=@@ ROW1@@ ;@@ row@@ --){ for(col@@ =@@ COL@@ ;col@@ >=@@ COL1@@ ;col@@ --){ if(@@ T@@ ==0&&@@ sz[row][col@@ ]==0){ COL@@ =@@ col; ROW@@ =@@ row; T@@ =1; } } } a=@@ ROW@@ -@@ ROW1@@ -@@ 3@@ ; b=@@ COL@@ -@@ COL1@@ -1; k=@@ a*@@ b; printf("%d",k); return0; }  
c -1
h -1
0

intmain() { inti,j,k,@@ l; cin>>k; for(l=0;l<@@ k;@@ l++) { inta[100][100],@@ m,n; int*p; cin>>m>>n; for(i=0;i<m;i++) for(j=0;j<n;j++) cin>>a[i][j]; intsum=0; for(i=0;i<n;i++) { p@@ =&@@ a[0][i]; sum+=@@ *p; } if(m@@ !=1) for(i=0;i<n;i++) { p@@ =&@@ a[m-1]@@ [i]; sum+=@@ *p; } for(i=1;i<m-1;i++) { p=@@ a[i]; sum+=@@ *p; } for(i=1;i<m-1;i++) { p@@ =&@@ a[i][n-1]; sum+=@@ *p; } cout<<sum<<endl; } return0; }  
c -1
h -1
voidmain() { inta[@@ 20000],b[@@ 20000],@@ i,j,k,@@ n,@@ x,@@ sum; scanf("%d",&n); k=0; sum=0; scanf("%d",&a[0]); for(i=1;i<n;i++) { k=0; scanf("%d",&x); for(j=0;j<@@ i@@ ;j++)@@ if(x==@@ a[j]@@ ){@@ k@@ =1;break;} if(k@@ ==0)@@ a[i@@ -@@ sum@@ ]=@@ x; else@@ sum++; } for(i=0;i<n-@@ sum@@ -1;i++)@@ printf("%d",a[i]); printf("%d",a[@@ n-@@ sum@@ -1]); }  
c -1
h -1
0

intmain() { int@@ array[100][100]; intn,@@ sum,@@ row,col; int*@@ point@@ ; point@@ =@@ *@@ array@@ ; cin>>n; for(@@ ;n@@ >0@@ ;n@@ --) { sum=0; cin>>row>>col; for(@@ point@@ =@@ *@@ array@@ ;@@ point@@ <*@@ array@@ +row@@ *col@@ ;@@ point@@ ++) cin>>@@ *@@ point@@ ; point@@ =@@ *@@ array@@ ; for(;@@ point@@ <*@@ array@@ +col@@ ;@@ point@@ ++) { sum=sum+*@@ point@@ ; } point@@ --; for(@@ point@@ =@@ point@@ +col@@ ;@@ point@@ <*@@ array@@ +row@@ *col@@ ;@@ point@@ =@@ point@@ +col@@ ) { sum=sum+*@@ point@@ ; } point@@ -=@@ col; for(@@ point@@ =@@ point@@ -1;@@ point@@ >=@@ *@@ array@@ +(@@ row@@ -1)*@@ col@@ ;@@ point@@ --) sum=sum+*@@ point@@ ; point@@ ++; for(@@ point@@ =@@ point@@ -col@@ ;@@ point@@ >*@@ array@@ ;@@ point@@ =@@ point@@ -col@@ ) sum=sum+*@@ point@@ ; cout<<sum<<endl; } return0; }  
c -1
h -1
intmain() { intn,i,j,a[@@ N@@ ],@@ s[@@ N@@ ],@@ max=0; scanf("%d",&n); for(i=0;i<n;i++) scanf("%d",&a[i]); for(i=0;i<n;i++) s[i]@@ =1; for(i=n-2;i>=0;i--) for(j=i+1;j<n;j++) if(a[j]<=@@ a[i]&&@@ s[i]@@ <@@ s[j]@@ +1) s[i]=@@ s[j]@@ +1; for(i=0;i<n-1;i++) max@@ =(@@ max@@ >@@ s[i]@@ )@@ ?@@ max@@ :@@ s[i]; printf("%d",max); return0; }  
c -1
h -1
0

intmain() { intn,m,@@ a[100][100],@@ i,j,@@ num@@ =1,@@ k,@@ l,@@ t; cin>>n>>m; for(i=0;i<n;i++) { for(j=0;j<m;j++) { cin>>a[i][j]; } } if(m==1) { for(i=0;i<n;i++) { for(j=0;j<m;j++) { cout<<a[i][j]<<endl; } } return0; } k=0; l=0; while(1) { if(k@@ <n@@ &&@@ l<@@ m) cout<<@@ a[k@@ ][l@@ ]<<endl; if(l@@ !=0) { k@@ ++;@@ l@@ --@@ ;@@ continue; } if(l@@ ==0) { t=@@ k; k=0; l=@@ t@@ +1; } while(k@@ >=@@ n@@ ||@@ l@@ >=@@ m) { k++; l@@ --; if(l@@ ==0) { t=@@ k; k=0; l=@@ t@@ +1; } if(l@@ +k@@ ==@@ m+@@ n) { return0; } } } }  
c -1
h -1
intmain() { chars[@@ 101][@@ 10@@ ]={0},@@ p[@@ 101][@@ 10@@ ]={0},@@ q@@ [@@ 101][@@ 10@@ ]={0}; inta[@@ 101@@ ]={0},b[@@ 101@@ ]={0},@@ c[@@ 101@@ ]={0}; intn,@@ i=0,@@ j=0; intf@@ =0,@@ g=0; scanf("%d",&n); for(i=0;i<n;i++) { scanf("%s%d",@@ s[i]@@ ,&@@ a[i]); if(a[i]@@ >=60) { b[@@ f@@ ]=a[i]; strcpy(@@ p[@@ f@@ ],@@ s[i]); f@@ ++; } else@@ if(a[i]@@ <60) { c[@@ g@@ ]=a[i]; strcpy(@@ q@@ [@@ g@@ ],@@ s[i]); g@@ ++; } } int@@ e=0; char@@ y[@@ 10@@ ]={0}; for(j=0;j<@@ f@@ ;j++) { for(i=@@ f@@ -2@@ ;i@@ >=@@ j@@ ;i--) { if(b[i]@@ <b@@ [i+1]) { e=@@ b[i]; b[i]=b[i+1]; b[i+1]=@@ e; strcpy(@@ y,@@ p[i]); strcpy(@@ p@@ [i],@@ p@@ [i+1]); strcpy(@@ p@@ [i+1],@@ y); } } } for(i=0;i<@@ f@@ ;i++) { printf("%s\n",@@ p[i]); } for(j=0;j<@@ g@@ ;j++) { printf("%s\n",@@ q@@ [j]); } return0; }  
c -1
h -1
0

intmain() { intn=0,@@ k=0,@@ i=0,j=0,@@ a[@@ 1000]={0},@@ q=0; cin>>n>>k; for(i=0;i<n;i++) { cin>>a[i]; } for(i=0;i<n;i++) { for(j=0;j<n;j++) { if(a[i]+a[j]==k) q++; } } if(q@@ >=@@ 1) cout<<"yes@@ "<<endl; else@@ cout<<"no@@ "<<endl; return0; }  
c -1
h -1
intmain() { intn,k; scanf("%d%d",&n,&k); inta[@@ 1000],@@ i=1; for(i=1;i<=n;i++) scanf("%d",&a[i]); int@@ ceshi@@ =0; int@@ x1@@ ,j@@ =1; for(j=1;j<=@@ n-1;j++) { for(@@ x1@@ =@@ n;@@ x1@@ >=@@ j@@ +1;@@ x1@@ --) { if(a[j]@@ +@@ a[@@ x1@@ ]==@@ k) { ceshi@@ =1; } } } if(@@ ceshi@@ ==1) printf("yes"); else printf("no"); return0; }  
c -1
h -1
1


int@@ fengjie@@ (inta,intb) { if(a==@@ 2@@ ||@@ a@@ ==@@ 3) return1; intsum@@ =1; int@@ c=@@ sqrt(@@ a); for(inti=@@ b@@ ;i<=@@ c@@ ;i++) { if(a%i==0) { sum=sum+@@ fengjie@@ (a/i,i); } } returnsum; } intmain() { intn,@@ a; cin>>n; for(inti=1;i<=n;i++) { cin>>a; cout<<@@ fengjie@@ (a,@@ 2)<<endl; } return0; }  
c -1
h -1
intmain() { inti,j,@@ a,b,@@ c=0,@@ d=0; double@@ x,@@ y=0; chars[@@ 501],@@ z@@ [501]; scanf("%lf",&x); scanf("%s",s); scanf("%s",@@ z); for(i=0;i<@@ 501@@ ;i++) { if(s[i]==@@ '\0') { break; } if((@@ s@@ [i]!='A'&&@@ s@@ [i]!='T'&&@@ s@@ [i]!='G'&&@@ s@@ [i]!='@@ C')||(@@ z@@ [i]!='A'&&@@ z@@ [i]!='T'&&@@ z@@ [i]!='C'&&@@ z@@ [i]!='G')@@ ) { c=1; } } for(j=1;j<@@ 501@@ ;j++) { if(s@@ [j]==@@ '\0') { break; } } a@@ =j; for(j=1;j<@@ 501@@ ;j++) { if(z@@ [j]==@@ '\0') { break; } } b=j; if(c@@ ==1||@@ a@@ !=@@ b) { printf("error"); return0; } for(i=0;i<a;i++) { if(s[i]==@@ z@@ [i]) { d++; } } y@@ =(@@ d@@ -1)@@ *1.0/@@ (a@@ -1); if(y@@ >=@@ x) { printf("yes"); } else { printf("no"); } return0; }  
c -1
h -1
0

void@@ a@@ (int@@ k,int@@ n); void@@ a@@ (int@@ k,int@@ n) { int@@ e@@ [300@@ ]={0},@@ f@@ [300@@ ]={0},@@ i=0,j=0,@@ t=0; for(i=0;i<k;i++) scanf("%d",&@@ e@@ [i]); for(j=0;j<n;j++) scanf("%d",&@@ f@@ [j]); for(i=0;i<@@ k-1;i++) { for(j=0;j<@@ k@@ -1;j++) { if(e@@ [j]>@@ e@@ [j+1]) { t=@@ e@@ [j];@@ e@@ [j]=@@ e@@ [j+1];@@ e@@ [j+1]=t; } } } for(i=0;i<n-1;i++) { for(j=0;j<n-1;j++) { if(f@@ [j]>@@ f@@ [j+1]) { t=@@ f@@ [j];@@ f@@ [j]=@@ f@@ [j+1];@@ f@@ [j+1]=t; } } } for(i=@@ k,@@ j@@ =0;i<@@ k+@@ n@@ ;i++,j++) { e@@ [i]=@@ f@@ [j]; } for(i=0;i<n@@ +@@ k;i++) { printf("%d",@@ e@@ [i]); if(i!=@@ n+@@ k@@ -1) printf(""); } } voidmain() {int@@ k=0,@@ n=0; scanf("%d%d",&@@ k@@ ,&@@ n); a@@ (@@ k,@@ n); }  
c -1
h -1
struct@@ stud { intnum; int@@ score@@ ,@@ score1@@ ,@@ score2; struct@@ stud@@ *next; }@@ head,@@ end@@ ; void@@ create@@ (intn) { inti; struct@@ stud@@ *p1,*p2; head@@ .@@ next@@ =NULL; for(i=0;i<=n-1;i++) { p1=(struct@@ stud@@ *)malloc(sizeof(struct@@ stud@@ )); if(!@@ i)@@ head@@ .@@ next@@ =p1; elsep2->next=p1; scanf("%d",&@@ p1->num); scanf("%d",&@@ p1->@@ score1@@ ); scanf("%d",&@@ p1->@@ score2); p1->@@ score@@ =p1->@@ score1@@ +p1->@@ score2; p2=p1; } p2->next@@ =&@@ end@@ ; } void@@ find@@ () { struct@@ stud@@ *@@ max1@@ ,*@@ max2@@ ,*@@ max3@@ ,*@@ p1,*@@ swap@@ ; max1=@@ head@@ .@@ next; max2=@@ max1@@ ->next; max3=@@ max2@@ ->next; p1=@@ max3@@ ->next; if(@@ max1@@ ->score@@ <@@ max2@@ ->score@@ ) { swap@@ =@@ max1; max1=@@ max2; max2=@@ swap@@ ; } if(@@ max2@@ ->score@@ <@@ max3@@ ->score@@ ) { swap@@ =@@ max2; max2=@@ max3@@ ; max3=@@ swap@@ ; } if(@@ max1@@ ->score@@ <@@ max2@@ ->score@@ ) { swap@@ =@@ max1; max1=@@ max2; max2=@@ swap@@ ; } while(p1@@ !=@@ &@@ end@@ ) { if(p1->@@ score@@ >@@ max3@@ ->score@@ )@@ max3@@ =p1; if(@@ max3@@ ->score@@ >@@ max2@@ ->score@@ ) { swap@@ =@@ max3@@ ; max3=max2; max2=@@ swap@@ ; } if(@@ max2@@ ->score@@ >@@ max1@@ ->score@@ ) { swap@@ =@@ max1; max1=@@ max2; max2=@@ swap@@ ; } p1=p1->next; } printf("%d%d\n",@@ max1@@ ->num,@@ max1@@ ->score@@ ); printf("%d%d\n",@@ max2@@ ->num,@@ max2@@ ->score@@ ); printf("%d%d\n",@@ max3@@ ->num,@@ max3@@ ->score@@ ); } voidmain() { intn; scanf("%d",&n); create@@ (n); find@@ (); }  
c -1
h -1
0

intmain() { inti,@@ c=0,@@ d=0,@@ e=0,@@ g=0; double@@ f,@@ k; chara[@@ 503@@ ],b[@@ 503@@ ]; scanf("%lf",&@@ k); scanf("%s",a); scanf("%s",b); for(i=0;i<@@ 503@@ ;i++) { if(a[i]==@@ '\0') break; else c=c@@ +1; if(a[i]!='@@ T'&&a[i]!='@@ A'&&a[i]!='@@ C'&&a[i]!='@@ G') g=@@ g@@ +1; } for(i=0;i<@@ 503@@ ;i++) { if(b[i]==@@ '\0') break; else d=d@@ +1; if(@@ b[i]!='@@ T'&&@@ b[i]!='A'&&b[i]!='@@ C'&&b[i]!='@@ G') g=@@ g@@ +1; } if(c@@ !=@@ d@@ ||@@ g@@ !=0) printf("error\n"); else { for(i=0;i<c@@ ;i++) { if(a[i]==b[i]) e=@@ e@@ +1; } f@@ =1.0*@@ e@@ /@@ c; if(f@@ >@@ k) printf("yes\n"); else printf("no\n"); } return0; }  
c -1
h -1
main() { chara[@@ 260@@ ],b[@@ 260@@ ],c[@@ 260@@ ]; scanf("%s",a); scanf("%s",b); scanf("%s",c); for(inti@@ =0;@@ a[i]@@ !='\0';i++) { intk=0; if(a[i]==@@ b[0]) { k=1; for(int@@ e@@ =0;@@ b[@@ e@@ ]!='\0'@@ ;@@ e++) { if(a@@ [i+@@ e@@ ]!=@@ b[@@ e@@ ]) k=0; } if(k==1) for(int@@ f@@ =0;@@ b[@@ f@@ ]!='\0'@@ ;@@ f@@ ++) { a[i@@ +@@ f@@ ]=@@ c[@@ f@@ ]; } } if(k==1) break; } puts(@@ a); }  
c -1
h -1
0

intmain() { intn,k,i,j,@@ z,@@ sum=0,@@ x=0; intsz[1000]; scanf("%d%d",&n,&k); for(i=0;i<n;i++){ scanf("%d",&@@ sz[i]@@ );} for(j=0;j<n-1;j++) for(z@@ =j+1@@ ;@@ z@@ <n;@@ z++) { sum=@@ sz@@ [j]+@@ sz[@@ z@@ ]; if(sum@@ ==k) {@@ x@@ ++;@@ }} if(x@@ ==0)@@ printf("no"); elseif(x@@ !=0)@@ printf("yes"); return0; }  
c -1
h -1
main() { intn,i,j,a[@@ 100000@@ ],b[@@ 100000],@@ k,@@ sum=0; scanf("%d",&n); for(i=0;i<n;i++) scanf("%d",&a[i]); printf("%d",a[0]); for(i=1;i<n;i++) { for(j=0;j<i;j++) { if(a[i]==a[j]) break; elseif(@@ j==@@ i@@ -1) printf("%d",a[i]); } } }  
c -1
h -1
0

intm=0,@@ n=0,@@ i=0; inta[@@ 1000],b[1000]; void@@ duru1@@ () { cin>>m; cin>>n; for(i=0;i<m;i++) { cin>>a[i]; } for(i=0;i<n;i++) { cin>>b[i]; } } voidpaixu@@ (inta[],int@@ geshu@@ ) { int@@ j=0,@@ k=0,@@ t=0; for(j=0;j<@@ geshu@@ -1;j++) { for(k=j+1;k<@@ geshu@@ ;k++) { if(a[k]@@ <@@ a[j]) { t=@@ a[k]; a[k]=@@ a[j]; a[j]=@@ t; } } } } voidshuchu@@ () { for(i=0;i<m;i++) { cout<<a[i]<<""; } for(i=0;i<n-1;i++) { cout<<b[i]<<""; } cout<<b[@@ n-1]; } intmain() { duru1@@ (); paixu@@ (a,m); paixu@@ (b,n); shuchu@@ (); return0; }  
c -1
h -1
intmain() { intn,@@ shu@@ [@@ 1000][1000],@@ i,k,@@ heng@@ =0,@@ s=0,@@ count; scanf("%d",&n); for(i=0;i<n;i++) { for(k=0;k<n;k++) { scanf("%d",&@@ shu@@ [i]@@ [k]); } } for(i=0;i<n;i++) { for(k=0;k<n;k++) { if(@@ shu@@ [i][k]@@ ==0) { heng@@ +=1; } } if(@@ heng@@ !=0) { break; } } for(k=0;k<n;k++) { for(i=0;i<n;i++) { if(@@ shu@@ [i][k]@@ ==0) { s@@ +=1; } } if(s@@ !=0) { break; } } count@@ =(@@ s@@ -2)*(@@ heng@@ -2); printf("%d",@@ count); return0; }  
c -1
h -1
0

intmain() { inta[100][100]; intsum; intb,@@ n,m,@@ i,j,@@ l; scanf("%d",&b); for(l=0;l<@@ b@@ ;l++) { scanf("%d",&m); scanf("%d",&n); for(i=0;i<m;i++) { for(j=0;j<n;j++) { scanf("%d",&a[i][j]); } } sum=0; if(m@@ ==1&&n@@ !=1) { for(j=0;j<n;j++) { sum+=@@ a[0][j]; } printf("%d\n",sum); } if(n@@ ==1&&@@ m@@ !=1) { for(i=0;i<m;i++) { sum+=@@ a[0][@@ 1@@ ]; } printf("%d\n",sum); } if(m@@ ==1&&n@@ ==1) { printf("%d\n",@@ a[0][0]@@ ); } if(m@@ >1@@ &&n@@ >1) { sum=0; for(j=1;j<@@ n-1;j++) { sum+=@@ a[0]@@ [j]+@@ a[m-1][j]; } for(i=1;i<m-1;i++) { sum+=@@ a[i][0]+@@ a[i][n-1]; } sum=sum+@@ a[0][0]@@ +@@ a[0][@@ n-1@@ ]+@@ a[@@ m-1@@ ][0]+@@ a[m-1][@@ n-1]; printf("%d\n",sum); } } return0; }  
c -1
h -1
intmain() { inti,n,@@ j,k,@@ a[@@ 13]={0,31,@@ 28,31,30,31,30,31,31,30,31,30,31@@ },@@ sum=0; scanf("%d%d%d",&@@ n,&@@ j@@ ,&@@ k); for(i=0;i<=@@ j@@ -1;i++) { sum=sum+@@ a[i]; } if(n%@@ 400==0||(@@ n@@ %4==0&&@@ n@@ %100!=0@@ )) { if(j@@ <=@@ 2) { sum=sum+@@ k; } else { sum=sum@@ +1@@ +@@ k; } } else { sum=sum+@@ k; } printf("%d",sum); getchar(); getchar(); getchar(); }  
c -1
h -1
0

intmain() { inti,j,k,@@ n1,n2; chars1@@ [257],@@ s2@@ [257],@@ s3@@ [257]; gets(@@ s1); gets(@@ s2); gets(@@ s3); n1@@ =strlen(@@ s1); n2@@ =strlen(@@ s2); for(i=0;i<n1;i++) if(s1[i]==s2@@ [0]) { j=0; while(@@ s1@@ [i+j]==@@ s2@@ [j]@@ &&j@@ <@@ n2@@ )@@ j++; if(j==@@ n2) { for(k=i@@ ;k<@@ i+@@ n2@@ ;k++) s1@@ [k]=@@ s3@@ [k-i@@ ]; break; } } for(i=0;i<n1;i++) printf("%c",@@ s1[i]); return0; }  
c -1
h -1
main() { intk; scanf("%d",&k); int*@@ a=@@ (int*)malloc(@@ k@@ *sizeof(int)); inti; for(i=0;i<k;i++) { scanf("%d",&a[i]); } int*@@ b=@@ (int*)malloc(@@ k@@ *sizeof(int)); for(i=0;i<k;i++) {@@ b[i]@@ =1;} for(inti=1;i<@@ k;i++) { for(intt@@ =0;t@@ <i@@ ;t++) if(a[@@ t@@ ]>=@@ a[i]&&@@ b[t@@ ]+1@@ >=@@ b[i]) b[i]=@@ b[t@@ ]+1; } intmax=@@ b[0]; for(inti=1;i<@@ k;i++) {@@ if(b[i]@@ >max)max=@@ b[i]@@ ;} printf("%d",max); }  
c -1
h -1
0

int@@ tru@@ (int@@ c) { intj,@@ p=0; if(c@@ ==1||@@ c@@ ==@@ 2) return1; else@@ for(j=2;j<=@@ pow@@ ((@@ double)@@ c,@@ 0@@ .@@ 5@@ );j++) if(c@@ %j==0) { p=1; break; } if(p@@ ==1)@@ return0; else@@ return1; } intcount@@ (inta,intb) { inti,@@ k=1; if(!@@ tru@@ (a@@ )) for(i=b@@ ;i<=@@ pow@@ ((@@ double)@@ a,@@ 0@@ .@@ 5@@ );i++) if(a%i==0) k=k@@ +@@ count@@ (a/i,i); return@@ k; } intmain() { intn,@@ x[@@ 999@@ ],@@ q; scanf("%d",&n); for(q=0;q@@ <n;@@ q++) scanf("%d",&@@ x[@@ q@@ ]); for(q=0;q@@ <n;@@ q++) printf("%d\n",@@ count@@ (@@ x[@@ q@@ ],@@ 2)); return0; }  
c -1
h -1
inta[100@@ ]={0},@@ b[100@@ ]={0}; inti=0,@@ n,@@ m; void@@ block_in@@ () { scanf("%d%d",&n,&m); for(i=0;i<n;i++)@@ scanf("%d",&a[i]); for(i=0;i<m;i++)@@ scanf("%d",&b[i]); } void@@ arr@@ (intx,int@@ c[@@ ]) { inti=0,j=0,@@ mid@@ ; for(i=0;i<x;i++) { for(j=0;j<@@ x@@ -i;j++) { if(c@@ [j]>@@ c@@ [j+1]) { mid@@ =@@ c[j]; c[j]=@@ c@@ [j+1]; c@@ [j+1]=@@ mid@@ ; } } } for(i=1;i<=@@ x;i++) { printf("%d",c[i]); if(i<@@ x)@@ printf(""); } } voidmain() { block_in@@ (); arr@@ (n,@@ a); printf(""); arr@@ (m,@@ b); }  
c -1
h -1
0

intmain(){ intn,k; scanf("%d%d",&n,&k); inta[1000]; inti; ints=0; for(i=0;i<n;i++){ scanf("%d",&a[i]); } for(i=0;i<n;i++){ for(intj=i+1@@ ;j<@@ n;j++){ if(a[i]+a[j]==@@ k){ printf("yes"); s++; break; } } if(s@@ !=0) break; } if(s@@ ==0) printf("no"); return0; }  
c -1
h -1
intmain() { intnum@@ [100][100]; int@@ lefti@@ =0,@@ leftj@@ =0,@@ righti@@ =0,@@ rightj@@ =0; intnumber@@ =0; intn=0; inti,j; scanf("%d",&n); memset(@@ num,@@ -1,@@ 10000@@ ); for(i=0;i<n;i++) { for(j=0;j<n;j++) { scanf("%d",&@@ num@@ [i][j]); } } for(i=0;i<n;i++) { for(j=0;j<n;j++) { if(num@@ [i][j]==0&&@@ num@@ [i+1][j]@@ ==0&&@@ num[i]@@ [j+1@@ ]==0) { lefti@@ =i; leftj@@ =j; } elseif(@@ num@@ [i][j]==0&&@@ num@@ [i-1][j]@@ ==0&&@@ num[i]@@ [j-1]@@ ==0) { righti@@ =i; rightj@@ =j; } } } number@@ =(@@ rightj@@ -@@ leftj@@ -1)*(@@ righti@@ -@@ lefti@@ -1); printf("%d\n",@@ number); printf("%d@@ %d@@ %d%d",@@ lefti@@ ,@@ leftj@@ ,@@ righti@@ ,@@ rightj@@ ); return0; }  
c -1
h -1
0

intmain() { intf(int@@ k,int@@ m); intn; scanf("%d",&n); inti; for(i=1;i<=n;i++) { intk; scanf("%d",&k); printf("%d\n",@@ f(@@ k,@@ 2)); } return0; } intf(int@@ k,int@@ m) { inti; intj=0; if(k@@ <=@@ m) { if(k==@@ m){ j=1; return@@ j; } else { j=0; return@@ j; } } else { for(i=m@@ ;i<=@@ k;i++) { if(k@@ %i==0&&@@ k@@ /i@@ !=1) j=j@@ +@@ f(@@ k@@ /i,i); if(k@@ %i==0&&@@ k@@ /i@@ ==1) j=j+1; } return@@ j; } }  
c -1
h -1
intmain() {@@ long@@ i,j,@@ q,@@ e,@@ n,@@ w,@@ m,@@ s; int@@ a;@@ scanf("%d",&n); a=1; i=0; while(@@ a@@ !=0) {@@ i++; scanf("%d",&@@ a@@ );} q@@ =i; m=@@ n*@@ n; e@@ =i; w@@ =0; for(j=i;j<=@@ m;j++) {@@ scanf("%d",&a); if(a==@@ 255) w@@ ++; if(a==0) {@@ e@@ ++;@@ e=@@ e+@@ w@@ ;@@ w@@ =0;} } if((@@ q@@ %@@ n-@@ e@@ %@@ n)@@ >=0) {@@ s=(@@ (@@ e@@ -@@ e@@ %@@ n)@@ /@@ n-@@ (@@ q@@ -@@ q@@ %@@ n)@@ /@@ n-1)@@ *(@@ (@@ q@@ %@@ n-@@ e@@ %@@ n)@@ -1)@@ ;} else {@@ s=(@@ (@@ e@@ -@@ e@@ %@@ n)@@ /@@ n-@@ (@@ q@@ -@@ q@@ %@@ n)@@ /@@ n-1)@@ *(@@ (@@ e@@ %@@ n-@@ q@@ %@@ n)@@ -1)@@ ;} printf("%ld@@ ",@@ s); return0; }  
c -1
h -1
0

intmain() { charstr[256],@@ substr@@ [256],@@ replace@@ [256]; char@@ p@@ [256]; intk=0; intm; scanf("%s",@@ str); scanf("%s",@@ substr@@ ); scanf("%s",@@ replace); int@@ str1@@ =strlen(@@ str@@ ),@@ str2@@ =strlen(@@ substr@@ ),@@ str3@@ =strlen(@@ replace); for(inti=0;i<=@@ str1@@ -@@ str2@@ ;i++) { m=1; for(intl@@ =0;@@ l<@@ strlen(@@ substr@@ );@@ l++) { if(str@@ [i+@@ l@@ ]!=@@ substr@@ [l@@ ]) { m=0; break; } } intj; if(m@@ ) { k=1; for(j=i;j<i+@@ str3@@ ;j++) p@@ [j]=@@ replace@@ [j-i@@ ]; for(k=i+@@ str2@@ ,i@@ =j@@ ;k<@@ str1@@ ;k++@@ ,i++) p[i]=@@ str@@ [k]; break; } else { p[i]=@@ str@@ [i]; } } if(k@@ ) { for(inti=0;i<@@ strlen(@@ str@@ )@@ -strlen(@@ substr@@ )+@@ strlen(@@ replace@@ );i++) printf("%c",@@ p[i]); } else { printf("%s",str); } return0; }  
c -1
h -1
intmain() { int@@ year@@ [5],@@ month@@ [5],@@ day@@ [5],@@ l@@ [5@@ ]={0},@@ i=0; for(i=0;i<@@ 5;i++) { scanf("%d%d%d",&year@@ [i],&@@ month@@ [i],&@@ day@@ [i]); } for(i=0;i<@@ 5;i++) { if((@@ year[i]@@ %@@ 4==0)&&(@@ year[i]@@ %100!=0@@ )||(@@ year[i]@@ %@@ 400==0)) { switch(month@@ [i]) { case12:@@ l[i]=@@ l@@ [i]+@@ 30; case11:@@ l[i]=@@ l@@ [i]+@@ 31; case10:@@ l[i]=@@ l@@ [i]+@@ 30; case9:@@ l[i]=@@ l@@ [i]+@@ 31; case8:@@ l[i]=@@ l@@ [i]+@@ 31; case7:@@ l[i]=@@ l@@ [i]+@@ 30; case6:@@ l[i]=@@ l@@ [i]+@@ 31; case5:@@ l[i]=@@ l@@ [i]+@@ 30; case4:@@ l[i]=@@ l@@ [i]+@@ 31; case3:@@ l[i]=@@ l@@ [i]+@@ 29; case2:@@ l[i]=@@ l@@ [i]+@@ 31; case1:@@ l[i]=@@ l@@ [i]; } } else { switch(month@@ [i]) { case12:@@ l[i]=@@ l@@ [i]+@@ 30; case11:@@ l[i]=@@ l@@ [i]+@@ 31; case10:@@ l[i]=@@ l@@ [i]+@@ 30; case9:@@ l[i]=@@ l@@ [i]+@@ 31; case8:@@ l[i]=@@ l@@ [i]+@@ 31; case7:@@ l[i]=@@ l@@ [i]+@@ 30; case6:@@ l[i]=@@ l@@ [i]+@@ 31; case5:@@ l[i]=@@ l@@ [i]+@@ 30; case4:@@ l[i]=@@ l@@ [i]+@@ 31; case3:@@ l[i]=@@ l@@ [i]+@@ 28; case2:@@ l[i]=@@ l@@ [i]+@@ 31; case1:@@ l[i]=@@ l@@ [i]; } } l[i]=@@ l@@ [i]+@@ day@@ [i]; } for(i=0;i<@@ 5;i++) printf("%d\n",@@ l@@ [i]); return0; }  
c -1
h -1
0

intmain() { intm,n,@@ n1@@ [100],@@ n2@@ [100],@@ o@@ [@@ 200]; int*@@ p1@@ =&@@ m@@ ,*@@ p2@@ =&@@ n; void@@ get@@ (int*@@ p1,int*p2@@ ,int@@ m1@@ [],int@@ m2@@ [@@ ]); voidsort@@ (int*p,int@@ m[@@ ]); void@@ cpy@@ (int*@@ p1,int*p2@@ ,int@@ m1@@ [],int@@ m2@@ [],int@@ m[@@ ]); void@@ put@@ (int*@@ p1,int*p2@@ ,int@@ m[@@ ]); get@@ (@@ p1,@@ p2@@ ,@@ n1,n2@@ ); sort(@@ p1,@@ n1); sort(@@ p2@@ ,@@ n2); cpy@@ (@@ p1,@@ p2@@ ,@@ n1,n2,@@ o@@ ); put@@ (@@ p1,@@ p2@@ ,@@ o@@ ); return0; } void@@ get@@ (int*@@ p1,int*p2@@ ,int@@ m1@@ [],int@@ m2@@ []) { inti; scanf("%d@@ %d",@@ p1,@@ p2@@ ); for(i=0;i<*@@ p1@@ ;i++)@@ scanf("%d",&@@ m1@@ [i]); for(i=0;i<*@@ p2@@ ;i++)@@ scanf("%d",&@@ m2@@ [i]); } voidsort@@ (int*p,int@@ m@@ []) { inti,j,k; for(i=0;i<*@@ p@@ ;i++) for(j=i+1@@ ;j@@ <*@@ p@@ ;j++) { if(m@@ [i]>@@ m@@ [j]) { k=@@ m[i]; m@@ [i]=@@ m@@ [j]; m@@ [j]=@@ k; } } } void@@ cpy@@ (int*@@ p1,int*p2@@ ,int@@ m1@@ [],int@@ m2@@ [],int@@ m@@ []) { inti,j; for(i=0,j@@ =0@@ ;i<*@@ p1@@ ;i++,j@@ ++)@@ m@@ [i]=@@ m1@@ [i]; for(j=0@@ ;i<*@@ p1@@ +*@@ p2@@ ;i++,j@@ ++)@@ m@@ [i]=@@ m2@@ [j]; } void@@ put@@ (int*@@ p1,int*p2@@ ,int@@ m@@ []) { inti; printf("%d",m@@ [0]); for(i=1@@ ;i<*@@ p1@@ +*@@ p2@@ ;i++)@@ printf("%d",@@ m[i]); }  
c -1
h -1
inta[@@ 1005@@ ][@@ 1005@@ ]; intmain() { intn; cin>>n; for(inti=0;i<=@@ 1004@@ ;i++) { for(intj=0;j<=@@ 1004@@ ;j++) { a[i]@@ [j]=@@ 255@@ ; } } for(inti=1;i<=n;i++) { for(intj=1;j<=@@ n;j++) { cin>>a[i][j]; } } int@@ x1@@ =0,@@ y1@@ =0,@@ x2@@ =0,@@ y2@@ =0;@@ ; for(inti=1;i<=n;i++) { for(intj=1;j<=@@ n;j++) { if(a[i][j]==0) { x1@@ =i;@@ y1=j; break; } } if(@@ x1@@ !=0@@ )break; } for(inti=@@ n@@ ;i>=1;i--) { for(intj=@@ n@@ ;j@@ >=1@@ ;j--) { if(a[i][j]==0) { x2@@ =i;@@ y2=j; break; } } if(@@ x2@@ !=0@@ )break; } ints; s=(@@ x2-x1-1)*(y2-y1-1); cout<<@@ s; return0; }  
c -1
h -1
0

inta[1000]; intb[@@ 1000]; intm,n; void@@ init@@ () { cin>>m>>n; inti,j; for(i=1;i<=m;i++) { cin>>a[i]; } for(i=1;i<=@@ n;i++)@@ cin>>b[i]; } void@@ s@@ () { sort@@ (a,@@ a+@@ m@@ +1); sort@@ (b,@@ b+@@ n@@ +1); } void@@ merge@@ () { inti; for(i=1;i<=n;i++) a[i@@ +m@@ ]=b[i]; } voidprint() { inti; for(i=1;i<=@@ m+n;i++) { cout<<a[i]; if(i<@@ m+@@ n)@@ cout<<'@@ '; } cout<<endl; } intmain() { init@@ (); s@@ (); merge@@ (); print(); return0; }  
c -1
h -1
intm,n; void@@ nem@@ (int@@ num1@@ [100],int@@ num2@@ [100@@ ]) { inti; scanf("%d%d",&m,&n); for(i=0;i<m;i++) scanf("%d",&@@ num1@@ [i]); for(i=0;i<n;i++) scanf("%d",&@@ num2@@ [i]); } void@@ pai@@ (int@@ num@@ [100],int@@ x) { inti,j,t; for(j=0;j<@@ x@@ -1;j++) for(i=0;i<x@@ -1-j;i++) if(num@@ [i]>@@ num@@ [i+1]) { t=@@ num[i]; num[i]=@@ num@@ [i+1]; num@@ [i+1]=@@ t; } } void@@ he@@ (int@@ num1@@ [100],int@@ num2@@ [100],int@@ num@@ [100@@ ]) { inti; for(i=0;i<m;i++) num[i]=@@ num1@@ [i]; for(i=m;i<@@ m+n;i++) num[i]=@@ num2@@ [i-@@ m]; } void@@ printnum@@ (int@@ num@@ [100@@ ]) { inti; printf("%d",@@ num@@ [0]); for(i=1;i<@@ m+n;i++) printf("%d",@@ num[i]); } intmain() { intnum@@ [100],@@ num1@@ [100],@@ num2@@ [100]; nem@@ (@@ num1,num2@@ ); pai@@ (@@ num1,@@ m); pai@@ (@@ num2@@ ,n); he@@ (@@ num1,num2@@ ,@@ num); printnum@@ (@@ num); return0; }  
c -1
h -1
1


intmain() { intn,i,j,k,@@ m,@@ a[1000]; scanf("%d%d",&n,&k); for(i=0;i<n;i++) { scanf("%d",&a[i]); } for(i=0;i<n;i++) { m=@@ k-@@ a[i]; for(j=0;j<n;j++) { if(j==i) {@@ continue;} if(a[j]==@@ m){ printf("yes"); break; } } if(a[j]==@@ m) break; } if(i==@@ n@@ &&j@@ ==@@ n) printf("no"); scanf("%d",&n); return0; }  
c -1
h -1
voidmain() { voidorder@@ (inta[],intb[],int@@ m,int@@ n); inta[100],b[100]; intm,n,@@ i; scanf("%d%d",&m,&n); for(i=0;i<m;i++) scanf("%d",&a[i]); for(i=0;i<n;i++) scanf("%d",&b[i]); order@@ (a,b,m,n); for(i=0;i<m+@@ n-1;i++) printf("%d",a[i]); printf("%d",a[@@ m+@@ n-1]); } voidorder@@ (inta[],intb[],int@@ m,intn) { inti,j; intt; for(i=0;i<m-1;i++) for(j=0;j<m@@ -i-1;j++) if(a[j]>a[j+1]) { t=a[j]; a[j]=a[j+1]; a[j+1]=@@ t;} for(i=0;i<n-1;i++) for(j=0;j<n@@ -i-1;j++) if(b[j]>b[j+1]) { t=@@ b[j]; b[j]=b[j+1]; b[j+1]=@@ t;} for(i=m;i<@@ m+n;i++) a[i]=b[i-@@ m]; return@@ ;}  
c -1
h -1
0

intmain() { charstr@@ [1000],@@ sub@@ [1000],@@ rep@@ [1000]; intlen1,len2,@@ len3@@ ,@@ i,j,k; gets(str); gets(sub); gets(@@ rep); len1=strlen(@@ str); len2=strlen(@@ sub); len3@@ =strlen(@@ rep); for(j=0;j<len2@@ ;j++) for(i=0;i<len1;i++) {@@ if(str@@ [i]!=@@ sub@@ [0]@@ )continue; if(str[i]==@@ sub@@ [0]@@ &&@@ str@@ [i+1@@ ]==@@ sub@@ [1]@@ &&@@ str@@ [i+@@ 2@@ ]==@@ sub@@ [2]@@ &&@@ str@@ [i+@@ 3@@ ]==@@ sub@@ [3@@ ]@@ )break; } if(i<@@ len1@@ ) for(k=i@@ ;k<@@ i+@@ len2@@ ;k++) str@@ [k]=@@ rep@@ [k-i@@ ]; printf("%s",str); return0; }  
c -1
h -1
intmain() { inta[@@ 17@@ ]; intn,@@ s; while(cin>>@@ a[1@@ ],@@ a[1]@@ !=-1) { n=1; s=0; while(cin>>@@ a[n@@ +1],@@ a[n@@ +1@@ ]@@ !=0)@@ n++; for(inti=1;i<=n;i++) for(intj=1;j<=@@ n;j++) if(a[i]@@ %@@ a[j]@@ ==0&&@@ a[i]@@ /@@ a[j]==@@ 2) s++; cout<<s<<endl; } return0; }  
c -1
h -1
0

intmain() { charstring@@ [256]; char@@ subString@@ [256]; char@@ replacement@@ [256]; char@@ result@@ [256]; int@@ L1@@ ,@@ L2@@ ,@@ L3@@ ; inti,j,@@ t@@ =1,@@ flag=0; intl,@@ m,n; gets(@@ string); gets(@@ subString@@ ); gets(@@ replacement); L1@@ =strlen(@@ string); L2@@ =strlen(@@ subString@@ ); L3@@ =strlen(@@ replacement); for(i=0;i<@@ L1@@ ;i++) { for(j=0;j<@@ L2@@ ;j++) { if(@@ subString@@ [j]!=@@ string@@ [j+i@@ ]) { t=0; break; } } if(t@@ ==1) { for(l=0;l<@@ i@@ ;l++) { result@@ [l@@ ]=@@ string@@ [l]; } m=0; for(l@@ =i@@ ;m@@ <@@ L3@@ ;@@ l@@ ++,@@ m@@ ++) { result@@ [l@@ ]=@@ replacement@@ [m]; } for(n@@ =i+@@ L2@@ ;n@@ <@@ L1@@ ;n@@ ++,@@ l++) { result@@ [l@@ ]=@@ string@@ [n]; } result@@ [l@@ ]='\0'; flag=1; break; } t=1; } if(flag==1) printf("%s",@@ result); if(flag==0) printf("%s",@@ string); return0; }  
c -1
h -1
intmain() { intn,i,j=0,@@ e,@@ v@@ =0,@@ k,@@ m@@ [100],@@ p@@ [100@@ ],b[100]; chars@@ [100][@@ 11@@ ],@@ temp@@ [11@@ ],@@ d@@ [100][@@ 11@@ ],@@ f@@ [100][@@ 11]; scanf("%d",&n); for(i=0;i<n;i++) { scanf("%s",@@ s[i]); scanf("%d",&@@ m[i]); } for(i=0;i<n;i++) { if(m@@ [i]@@ >=60) { strcpy(@@ d@@ [j],@@ s[i]); p@@ [j]=@@ m[i]; j++; } else { strcpy(@@ f[@@ v@@ ],@@ s[i]); b[@@ v@@ ]=@@ m[i]; v@@ ++; } } for(k=1;k<@@ j@@ ;k++) { for(i=0;i<j@@ -@@ k;i++) { if(p@@ [i]<@@ p@@ [i+1]) { e=@@ p@@ [i+1]; p@@ [i+1]=@@ p[i]; p[i]=@@ e; strcpy(@@ temp,@@ d@@ [i+1]); strcpy(@@ d@@ [i+1],@@ d[i]); strcpy(@@ d@@ [i],@@ temp); } } } for(i=0;i<j@@ ;i++){ printf("%s\n",@@ d[i]); } for(i=0;i<@@ v@@ ;i++){ printf("%s\n",@@ f@@ [i]); } return0; }  
c -1
h -1
0

intmain() { intn,k,@@ i,j; inta[@@ 1000]={0}; cin>>n>>k; for(i=1;i<=n;i++) { cin>>a[i]; } for(i=1;i<n;i++) { j=i; while(j@@ <=@@ n) { if(a[i]+a[j]==k) { cout<<"yes"; return0; } j++; } } cout<<"no"; return0; }  
c -1
h -1
intmain(intargc,char*argv[]) { intyear,month,day; int@@ monthday@@ [12]={31,28,31,30,31,30,31,31,30,31,30,31}; scanf("%d%d%d",&year,&month,&day); inti; intsum=0; for(i=1;i<@@ month@@ ;i++){ sum=sum+@@ monthday@@ [i-1]; } sum=sum+day; inta; a=@@ year%@@ 4@@ ; if(month@@ >2@@ &&@@ a@@ ==0){ sum=sum+1; } printf("%d",sum); return0; }  
c -1
h -1
0

intmain() { chara[@@ 1000@@ ],b[100],@@ c[100]; int@@ lenb@@ ,@@ lena@@ ,@@ len; inti=0,@@ j,k,@@ flag; gets(c); scanf("%s",a); scanf("%s",b); len=strlen(@@ c); lena@@ =strlen(a); lenb@@ =strlen(b); for(i=0;i<len@@ ;++i) if(c@@ [i]==@@ a[0]) { flag=1; for(j=0;j<@@ lena@@ &&i@@ +j@@ <@@ len@@ ;++@@ j) if(a[j]!=@@ c@@ [i+j@@ ]) { flag=0; break; } if(flag) { printf("%s",@@ b); i@@ +=@@ lena@@ ; break; } else printf("%c",@@ c[i]); } else printf("%c",@@ c[i]); printf("%s",@@ c@@ +i); return0; }  
c -1
h -1
voidmain() { inti,j,@@ rec@@ [25],@@ n[@@ 25],@@ m,@@ k; scanf("%d",&k); for(i=0;i<=k-1;i++) { scanf("%d",&@@ rec@@ [i]); n@@ [i]=1; } for(i=1;i<=@@ k-1;i++) for(j=0;j<i;j++) if(@@ rec@@ [j]>=@@ rec@@ [i]) n[i]=@@ max@@ (n@@ [i],@@ n@@ [j]@@ +1); m=0; for(i=0;i<k;i++) m=@@ max(@@ m,@@ n@@ [i]); printf("%d\n",m); } intmax@@ (inta,intb) { intc; c=@@ a@@ >b@@ ?@@ a@@ :@@ b; return(@@ c); }  
c -1
h -1
0

structStudent { intnum,@@ yuwen@@ ,@@ shuxue@@ ,sum; }; voidmain() { intn,@@ max1@@ =0,@@ max2@@ =0,@@ max3@@ =0,@@ stu1@@ =0,@@ stu2@@ =0,@@ stu3@@ =0; structStudent@@ student[@@ 100000@@ ],*@@ stu@@ ; scanf("%d",&n); for(@@ stu@@ =@@ student@@ ;@@ stu@@ <@@ student@@ +n;@@ stu@@ ++){ scanf("%d",&@@ stu->@@ num); scanf("%d",&@@ stu->@@ yuwen@@ ); scanf("%d",&@@ stu->@@ shuxue); (stu@@ ->@@ sum@@ )@@ =(@@ stu->@@ yuwen@@ )+@@ (stu@@ ->@@ shuxue); if(@@ stu->@@ sum@@ >=@@ max3@@ ){ if(@@ stu->@@ sum@@ >=@@ max2@@ ){ if(@@ stu->@@ sum@@ >=@@ max1@@ ){ if(@@ stu->@@ sum>@@ max1@@ ){ max3=max2; max2=@@ max1; max1@@ =stu@@ ->@@ sum; stu3@@ =@@ stu2@@ ; stu2@@ =@@ stu1@@ ; stu1@@ =stu@@ ->@@ num; } else{ max3=max2; max2=@@ max1; max1@@ =stu@@ ->@@ sum; stu3@@ =@@ stu2@@ ; stu2@@ =stu@@ ->@@ num; } } else{ if(@@ stu->@@ sum>@@ max2@@ ){ max3=max2; max2=@@ stu->@@ sum; stu3@@ =@@ stu2@@ ; stu2@@ =stu@@ ->@@ num; } else{ max3=max2; max2=@@ stu->@@ sum; stu3@@ =stu@@ ->@@ num; } } } else{ if(@@ stu->@@ sum>@@ max3@@ ){ max3=@@ stu->@@ sum; stu3@@ =stu@@ ->@@ num; } else@@ max3=@@ stu->@@ sum; } } } stu@@ =@@ student@@ ; printf("%d%d\n",@@ (stu@@ +@@ stu1@@ -1)@@ ->num,@@ (stu@@ +@@ stu1@@ -1)@@ ->sum); printf("%d%d\n",@@ (stu@@ +@@ stu2@@ -1)@@ ->num,@@ (stu@@ +@@ stu2@@ -1)@@ ->sum); printf("%d%d\n",@@ (stu@@ +@@ stu3@@ -1)@@ ->num,@@ (stu@@ +@@ stu3@@ -1)@@ ->sum); }  
c -1
h -1
intmain(){ intn,i,j,@@ num,@@ l,@@ k,@@ p,q; scanf("%d",&n); int@@ a1,@@ b1,@@ a2,@@ b2@@ ; int@@ square@@ [@@ chang@@ ][@@ kuan@@ ]; for(i=0;i<n;i++) { for(j=0;j<n;j++) { scanf("%d",&@@ square@@ [i][j]); } } for(l=0;l<n;l++) { for(k=0;k<n;k++) { if(@@ square@@ [l@@ ][k@@ ]==0){ a1@@ =@@ l; b1@@ =k; } } } for(p=@@ (n-1@@ );@@ p@@ >=0@@ ;p@@ --) { for(q@@ =(@@ n-1@@ );@@ q@@ >=0@@ ;q@@ --) { if(@@ square@@ [p@@ ][q@@ ]==0){ a2@@ =p; b2@@ =@@ q; } } } num@@ =(@@ a1@@ -@@ a2@@ -1)*(@@ b1@@ -@@ b2@@ -1); printf("%d",@@ num); return0; }  
c -1
h -1
0

intmain() { introw,col,@@ i,j,k,@@ sum; cin>>row>>col; intarray[@@ row][col]; for(i=0;i<row;i++) for(j=0;j<col;j++) cin>>array[i][j]; sum=@@ row@@ +@@ col; for(k=@@ 2@@ ;k<=@@ sum@@ ;k++) for(i=1;i<=@@ row;i++) for(j=@@ col@@ ;j>0;j--) if(i+j@@ ==k) {@@ cout<<array@@ [i-1]@@ [j-1]@@ <<endl@@ ;break;} return0; }  
c -1
h -1
intmain() { structstudent { intID; intyuwen; intshuxue; int@@ zongfen; }; structstudent@@ student[@@ 100000]; intn,i,@@ max,@@ maxID@@ ; scanf("%d",&n); for(i=1;i<=n;i++) scanf("%d%d%d",&@@ student[i].@@ ID,&@@ student[i].@@ yuwen@@ ,&@@ student[i].@@ shuxue); for(i=1;i<=n;i++) student[i].@@ zongfen@@ =@@ student[i].@@ yuwen@@ +@@ student[i].@@ shuxue; for(intj=1;j<=@@ 3;j++) { maxID@@ =1; max=@@ student@@ [1].@@ zongfen; for(i=2;i<=n;i++) if(@@ student[i].@@ zongfen@@ >max) { maxID@@ =@@ student[i].@@ ID; max=@@ student[i].@@ zongfen; } printf("%d%d\n",@@ maxID@@ ,max); student[@@ maxID@@ ].@@ zongfen@@ =0; } }  
c -1
h -1
0

void@@ programme@@ (){ int@@ n1,n2,@@ i,j,@@ temp; inta[@@ 101@@ ],b[@@ 101]; cin>>@@ n1@@ >>@@ n2; for(i=0;i<n1;i++) { cin>>a[i]; } for(i=0;i<n2;i++) { cin>>b[i]; } for(i=0;i<n1;i++) { for(j=0;j<@@ n1@@ -i-1;j++) { if(a[j]>a[j+1]) { temp=a[j]; a[j]=a[j+1]; a[j+1]=temp; } } } for(i=0;i<n2;i++) { for(j=0;j<@@ n2@@ -i-1;j++) { if(b[j]>b[j+1]) { temp=@@ b[j]; b[j]=b[j+1]; b[j+1]=@@ temp; } } } for(i=0;i<n1;i++) cout<<a[i]<<""; for(i=0;i<n2;i++) { if(i!=@@ n2@@ -1) cout<<b[i]<<""; else cout<<@@ b[i]; } return; } intmain(){ programme@@ (); return0; }  
c -1
h -1
intmain() { inty,@@ n,@@ d,@@ x=0,@@ i@@ =1,@@ z; intm[@@ 13@@ ]; m@@ [1]=@@ m@@ [3@@ ]=@@ m[@@ 5@@ ]=@@ m[@@ 7@@ ]=@@ m[@@ 8@@ ]=@@ m[@@ 10@@ ]=@@ m[@@ 12@@ ]=31; m[@@ 4@@ ]=@@ m[@@ 6@@ ]=@@ m[@@ 9@@ ]=@@ m@@ [11@@ ]=30; m@@ [2]=@@ 29; scanf("%d%d%d",&y,&@@ n,&@@ d); if(n==1) { x=@@ d; z=@@ x; } else { if((y%@@ 400==0)||(@@ y%@@ 4==0&&y%100!=0@@ )) { for(i=1;i<n;i++) { x=x@@ +m@@ [i]; z=@@ x@@ +d; } } else { for(i=1;i<n;i++) { x=x@@ +m@@ [i]; } z=@@ x@@ +d@@ -1; } } printf("%d\n",@@ z); return0; }  
c -1
h -1
0

intmain(){ charstr@@ [257],@@ substr@@ [257],@@ re@@ [257]; inti=0,j=0,@@ n=0,@@ m=0,@@ k=0; scanf("%s\n@@ %s@@ \n@@ %s@@ \n",@@ str,@@ substr@@ ,@@ re); n=strlen(@@ substr@@ ); for(i=0;@@ str@@ [i]!='\0';i++){ if(str[i]==@@ substr@@ [j]){ if(@@ memcmp@@ (@@ substr@@ ,@@ str@@ +@@ i,@@ n)@@ ==0){ m=i; k=1; break; } } } if(k@@ ==1){ for(i=m;i<@@ m+@@ n;i++){ str[i]=@@ re@@ [i-@@ m]; } } printf("%s",str); return0; }  
c -1
h -1
int@@ height@@ [26]; int@@ cal@@ (int@@ N@@ ,int@@ M@@ ){ inti,@@ max,@@ sub@@ ; max=0; if(M@@ ==0){ return1; } for(i=@@ N@@ +1;i<=@@ N@@ +@@ M@@ ;i++){ if(@@ height@@ [N@@ ]>=@@ height@@ [i]){ sub@@ =@@ cal@@ (i,@@ N@@ +@@ M@@ -i@@ ); if(@@ sub@@ >=@@ max@@ ){ max=@@ sub@@ ; } } } return@@ max+1; } intmain() { intk,@@ i; scanf("%d\n",&@@ k); height@@ [0]=@@ 10000000@@ ; scanf("%d",&@@ height@@ [1]); for(i=1;i<=@@ k@@ -1;i++){ scanf("%d",&@@ height@@ [i+1]); } printf("%d",@@ cal@@ (@@ 0,@@ k@@ +1)@@ -2); return0; }  
c -1
h -1
0

int@@ panduan@@ (int@@ (year@@ )); intmain() { intsum=0,@@ year,@@ month,@@ day; inti; int@@ Month1@@ [@@ 13]={0,31,@@ 29,31,30,31,30,31,31,30,31,30,31}; int@@ Month2@@ [13]={0,31,28,31,30,31,30,31,31,30,31,30,31}; cin>>year>>@@ month>>@@ day; if(@@ panduan@@ (year@@ )@@ ==1) { for(i=1;i<month;i++) sum+=@@ Month1@@ [i]; sum+=@@ day; cout<<@@ sum; return0; } else { for(i=1;i<month;i++) sum+=@@ Month2@@ [i]; sum+=@@ day; cout<<@@ sum; return0; } return0; } int@@ panduan@@ (intyear@@ ) { if(year%@@ 4==0&&year%100!=0@@ ||@@ year%400==0) return1; else return0; }  
c -1
h -1
structstudent { intnum; int@@ score1@@ ; int@@ score2; inttotal; }; structstudentstu[100000]; intmain() { long@@ i,@@ m; scanf("%ld",&@@ m); structstudent*@@ p=@@ stu@@ ; for(i=0;i<m@@ ;i++,@@ p++) { scanf("%d%d%d",&@@ (p->@@ num@@ )@@ ,&@@ (p->@@ score1@@ )@@ ,&@@ (p->@@ score2@@ )); p->@@ total@@ =(@@ p->@@ score1@@ +p->@@ score2); } int@@ max1,@@ max2@@ ,max3@@ ,@@ a1@@ =0,@@ a2@@ =0,@@ a3@@ =0; max1@@ =stu@@ [0].@@ total; for(i=0;i<m;i++) { if(stu[i].@@ total>@@ max1@@ ){@@ max1@@ =stu[i].@@ total@@ ;@@ a1@@ =i;} } max2=@@ stu[0].@@ total; for(i=0;i<m;i++) { if(stu[i].@@ total>@@ max2@@ &&i!=@@ a1@@ ){@@ max2=@@ stu[i].@@ total@@ ;@@ a2@@ =i;} } max3=@@ stu[0].@@ total; for(i=0;i<m;i++) { if(stu[i].@@ total>@@ max3@@ &&stu[i].@@ total@@ <@@ max2@@ ){@@ max3=@@ stu[i].@@ total@@ ;@@ a3@@ =i;} } printf("%d%d\n",stu[@@ a1@@ ].num,stu[@@ a1@@ ].@@ total); printf("%d%d\n",stu[@@ a2@@ ].num,stu[@@ a2@@ ].@@ total); printf("%d%d",@@ stu[@@ a3@@ ].num,stu[@@ a3@@ ].@@ total); return0; }  
c -1
h -1
0

intmain() { intlen1,len2,@@ i,j=0,@@ flag=0; double@@ rate@@ ; chara[500],b[500]; scanf("%lf%s%s",&@@ rate@@ ,@@ a,b); len1@@ =strlen(a); len2@@ =strlen(b); if(len1!=@@ len2) { printf("error\n"); return0; } for(i=0;i<len1;i++) { if(a[i]!='A'&&a[i]!='T'&&a[i]!='C'&&a[i]!='@@ G') { printf("error\n"); flag=1; break; } if(@@ b[i]!='A'&&b[i]!='T'&&b[i]!='C'&&b[i]!='@@ G') { printf("error\n"); flag=1; break; } if(a[i]==b[i]@@ )@@ j++; } if(flag@@ ==1)@@ return0; if((@@ double)@@ j@@ /@@ len1@@ >@@ rate@@ )@@ printf("yes\n"); else@@ printf("no\n"); return0; }  
c -1
h -1
intmain() { intk; scanf("%d",&k); inti,j,@@ p,q; intN@@ [100][100]; intm,n; intsum=0; for(i=1;i<=k;i++) { sum=0; scanf("%d%d",&m,&n); for(p=1@@ ;p<=@@ m@@ ;p++){ for(q@@ =1;@@ q@@ <=n;@@ q@@ ++){ scanf("%d",&@@ N@@ [p@@ ][q@@ ]); } } for(j=1;j<=n;j++){ sum+=@@ N@@ [1]@@ [j]; } for(j=1;j<=n;j++){ sum+=@@ N@@ [m]@@ [j]; } for(j=1;j<=@@ m@@ ;j++){ sum+=@@ N@@ [j]@@ [1]; } for(j=1;j<=@@ m@@ ;j++){ sum+=@@ N@@ [j]@@ [n]; } sum=sum-@@ N@@ [1@@ ][1@@ ]-@@ N@@ [1@@ ][n@@ ]-@@ N@@ [m@@ ][1@@ ]-@@ N@@ [m@@ ][n]; printf("%d\n",sum); } return0; }  
c -1
h -1
0

intmain() { intn,a[@@ 30@@ ],b[@@ 30@@ ]={0},@@ max=0,@@ flag=0; cin>>n; for(inti=1;i<=n;i++) { cin>>a[i]; } for(intj=@@ n,@@ k@@ ;j@@ >=1@@ ;j--) { max=0; flag=0; for(k=j@@ ;k<=@@ n;k++) { if(a[j]>=@@ a[k]) { flag=1; if(@@ b[k@@ ]>=@@ max) { max=@@ b[k@@ ]; } } } if(flag) { b[j]=@@ max+1; } else { b[j]=@@ max; } } for(inti=1;i<=n;i++) { if(b[i]@@ >=@@ max) { max=b[i]; } } cout<<max<<endl; return0; }  
c -1
h -1
intmain() { intyear,month,day,@@ i,@@ n; scanf("%d%d%d",&year,&month,&day); for(i=1@@ ,@@ n@@ =0;i<@@ month;i++) { if(i==1||i==3||i==5||i==7||i==8||i==@@ 10) { n=n+31; } elseif(i==@@ 2) { if((year%4==0&&year%100!=0)||(year%400==0)) { n=n+@@ 29; } else { n=n+@@ 28; } } else { n=n+@@ 30; } } n=n+@@ day; printf("%d\n",n); return0; }  
c -1
h -1
0

intmain() { intn,i,j,k,@@ w@@ =0; int@@ maxzm@@ ,@@ maxbk@@ =0; char@@ c1@@ ; int@@ zimu@@ [26]={0}; int@@ lm@@ [100]; struct{ intnum; chara[100@@ ]; }@@ book[1000]; scanf("%d",&n); for(i=0;i<n;i++) scanf("%d%s",&book[i].num,@@ book[i].@@ a); for(i=0;i<n;i++) { for(j=0;@@ book[i].@@ a[j]@@ ;j++) { for(k=@@ 65@@ ;k<@@ 91@@ ;k++) { if(book[i].@@ a[j]==@@ k) zimu@@ [k@@ -65]++; } } } for(i=0;i<26;i++) { if(@@ zimu@@ [i]>@@ maxbk@@ ) { maxbk@@ =@@ zimu@@ [i]; maxzm@@ =i; } } c1@@ =@@ maxzm@@ +65; printf("%c\n",@@ c1@@ ); printf("%d\n",@@ maxbk@@ ); for(i=0;i<n;i++) { for(j=0;@@ book[i].@@ a[j]@@ ;j++) { if(book[i].@@ a[j]==@@ c1@@ ) { lm@@ [@@ w@@ ]=@@ book[i].@@ num; w@@ ++; continue; } } } for(i=0;i<@@ w@@ ;i++) printf("%d\n",@@ lm@@ [i]); return0; }  
c -1
h -1
intmain(){ intN@@ ,i; cin>>@@ N; int@@ Max1@@ =0,@@ Max2@@ =0,@@ Max3@@ =0,@@ Nb@@ [4@@ ]; structstudent{ int@@ Number@@ ; int@@ Chinese@@ ; int@@ Math@@ ; int@@ Total@@ ; }@@ people@@ [@@ 111111@@ ]; for(i=1;i<=@@ N@@ ;i++){ cin>>@@ people@@ [i].@@ Number@@ >>@@ people@@ [i].@@ Chinese@@ >>@@ people@@ [i].@@ Math@@ ; people@@ [i].@@ Total@@ =@@ people@@ [i].@@ Chinese@@ +@@ people@@ [i].@@ Math@@ ; } for(i=1;i<=@@ N@@ ;i++){ if(@@ Max1@@ <@@ people@@ [i].@@ Total@@ ){ Nb@@ [1]=@@ i; Max1@@ =@@ people@@ [i].@@ Total@@ ; } } for(i=1;i<=@@ N@@ ;i++){ if((@@ Max2@@ <@@ people@@ [i].@@ Total@@ )&&(i@@ !=@@ Nb@@ [1]@@ )){ Nb@@ [2]=@@ i; Max2@@ =@@ people@@ [i].@@ Total@@ ; } } for(i=1;i<=@@ N@@ ;i++){ if((@@ Max3@@ <@@ people@@ [i].@@ Total@@ )&&(i@@ !=@@ Nb@@ [1]@@ )&&(i@@ !=@@ Nb@@ [2@@ ])@@ ){ Nb@@ [3@@ ]=i; Max3@@ =@@ people@@ [i].@@ Total@@ ; } } for(i=1;i<=@@ 3;i++){ cout<<@@ people@@ [@@ Nb@@ [i]@@ ].@@ Number@@ <<""<<@@ people@@ [@@ Nb@@ [i]@@ ].@@ Total@@ ; if(i<@@ 3) cout<<endl; } return0; }  
c -1
h -1
0

structbook { intnum; char@@ au@@ [30]; structbook*next; }; voidmain() { intm; scanf("%d",&m); structbook*@@ p1,*p2,*head; p1=(structbook@@ *)malloc(LEN); scanf("%d%s",&p1->num,p1->@@ au); p2=p1; head=p1; int@@ n=1; while(n@@ <@@ m) { p1=(structbook@@ *)malloc(LEN); scanf("%d%s",&p1->num,p1->@@ au); p2->next=p1; p2=p1; n++; } p2->next=NULL; char@@ maxa@@ ; charauthor@@ ; char@@ temp@@ [30]; int@@ an@@ ,@@ maxn@@ =0,@@ i; structbook@@ *p; for(@@ author@@ ='A'@@ ;@@ author@@ <=@@ 'Z'@@ ;) { p=head; an@@ =0; while(p) { strcpy(@@ temp,@@ p->@@ au); for(i=0;@@ (@@ temp@@ [i])@@ !='\0';i++) { if(temp@@ [i]==@@ author@@ ){@@ an@@ ++;@@ break;} } p=p->next; } if(@@ an@@ >@@ maxn@@ ) { maxa@@ =@@ author@@ ; maxn=@@ an@@ ; } author@@ =@@ author@@ +1; } printf("%c@@ \n@@ %d",@@ maxa@@ ,@@ maxn@@ ); p=head; while(p) { strcpy(@@ temp,@@ p->@@ au); for(i=0;@@ (@@ temp@@ [i])@@ !='\0';i++) { if(temp@@ [i]==@@ maxa@@ ) {@@ printf("\n"); printf("%d",@@ p->@@ num@@ );break;} } p=p->next; } }  
c -1
h -1
structstudent { int@@ count; int@@ yu@@ ; int@@ shu; }stu[@@ 1000000@@ ]; voidmain() { intn,@@ i@@ ,*@@ p,@@ max=0,@@ sm@@ =0,@@ tm@@ =0,@@ j=0; p=@@ (int*)malloc(@@ 1000000@@ *sizeof(int)); scanf("%d",&n); for(i=0;i<n;i++) { scanf("%d%d%d",&stu[i].@@ count@@ ,&stu[i].@@ yu@@ ,&stu[i].@@ shu); *(p+i)@@ =stu[i].@@ yu@@ +stu[i].@@ shu; } for(i=0;i<n;i++) max@@ =(@@ max@@ >*@@ (p@@ +i)@@ )@@ ?@@ max@@ :@@ (@@ *(p@@ +i)); for(i=0;i<n;i++) {if((@@ *(p+i)@@ <@@ max@@ )&&(@@ *(p+i)@@ >@@ sm@@ )) sm@@ =*(p@@ +i@@ );} for(i=0;i<n;i++) {if((@@ *(p+i)@@ >@@ tm@@ )&&(@@ *(p+i)@@ <@@ sm@@ )) tm@@ =*(p@@ +i@@ );} for(i=0@@ ;j<@@ 3@@ ,i@@ <@@ n;i++) { if(@@ *(p+i)@@ ==@@ max) { printf("%d%d\n",stu[i].@@ count@@ ,max); j++; } } for(i=0@@ ;j<@@ 3@@ ,i@@ <@@ n;i++) {if(@@ *(p+i)@@ ==@@ sm@@ &&j@@ <@@ 3) { printf("%d%d\n",stu[i].@@ count,@@ sm@@ ); j++; } } for(i=0@@ ;j<@@ 3@@ ,i@@ <@@ n;i++) { if(@@ *(p+i)@@ ==@@ tm@@ &&j@@ <@@ 3) { printf("%d%d\n",stu[i].@@ count,@@ tm@@ ); j++; } } }  
c -1
h -1
0

intmain() { intnum; intx@@ [100][100]; inta,b; intsum; cin>>num; for(inti=0;i<@@ num;i++) { cin>>a>>@@ b; for(intj=0;j<@@ 100@@ ;j++) { for(intk=0;k<@@ 100@@ ;k++) x[j]@@ [k]@@ =0; } sum=0; for(intj=0;j<@@ a@@ ;j++) { for(intk=0;k<@@ b@@ ;k++) { cin>>@@ x[j]@@ [k]; if(j@@ ==0||j==@@ a@@ -1) { sum+=@@ x[j]@@ [k]; } else { if(k@@ ==0||@@ k==@@ b@@ -1) sum+=@@ x[j]@@ [k]; } } } cout<<sum<<endl; } return0; }  
c -1
h -1
structpatient { charname@@ [10]; intage; }@@ pat@@ [100]; voidmain() { intn,i,j=0,@@ k=0,@@ l; structpatient@@ b[100@@ ]; structpatient@@ c[100]; structpatient@@ t; scanf("%d",&n); for(i=0;i<n;i++) scanf("%s%d",@@ pat[i].@@ name@@ ,&@@ pat@@ [i].age); for(i=0;i<n;i++) { if(pat@@ [i].age<60) { b[j]=@@ pat@@ [i]; j++; } else { c@@ [k]=@@ pat@@ [i]; k++; } } for(i=0;i<@@ k-1;i++) for(l=0;l<@@ k-1@@ -i@@ ;l++) if(@@ c[@@ l@@ ].age@@ <@@ c[@@ l@@ +1@@ ].age) { t=@@ c[@@ l@@ ]; c[@@ l@@ ]=@@ c[@@ l@@ +1]; c[@@ l@@ +1]=@@ t; } for(i=0;i<k;i++) printf("%s\n",@@ c@@ [i].@@ name); for(i=0;i<j;i++) printf("%s\n",@@ b[i].@@ name); }  
c -1
h -1
0

intnum; int@@ fjys@@ (intn,@@ intm,@@ inti,@@ int@@ d@@ ,int@@ ji@@ [@@ 20@@ ]) { inta; for(a@@ =i;@@ a@@ <m;@@ a++) { if(n%@@ a@@ ==0) { ji@@ [d@@ ]=a; int@@ chenji@@ =1,@@ k; for(k=0;k<=@@ d@@ ;k++) chenji@@ =@@ chenji@@ *@@ ji@@ [k]; if(@@ chenji@@ ==@@ m) { num++; break; } else fjys@@ (n@@ /@@ a,@@ m,@@ a,@@ d@@ +1,@@ ji@@ ); } } returnnum; } intmain() { intm,n,@@ j,@@ result@@ =0,@@ ji@@ [@@ 20@@ ]={0}; cin>>m; for(j=1;j<=m;j++) { num=0; cin>>n; result=@@ fjys@@ (n,@@ n,@@ 2,@@ 0,@@ ji@@ ); cout<<@@ result@@ +1<<endl; } return0; }  
c -1
h -1
voidmain() { chara[100@@ ],b[100],@@ c[100]; inti,@@ a1,@@ b1,@@ c1@@ ,@@ n=0,@@ m,@@ t@@ ,j,@@ p=0; scanf("%s%s%s",a,b,c); a1@@ =strlen(a); b1@@ =strlen(b); c1@@ =strlen(c); for(i=0;i<@@ a1@@ ;i++) { for(j=0;j<@@ b1@@ ;j++) { if(a@@ [i+j]==@@ b[j]@@ )@@ p=p@@ +1; } if(p==@@ b1@@ ) { for(m=0;m<@@ i@@ ;m++) printf("%c",@@ a[m@@ ]); printf("%s",@@ c); for(m=@@ b1@@ +i@@ ;m@@ <@@ a1@@ ;m++) printf("%c",@@ a[m@@ ]); n=@@ 9@@ ;break; } p=0; } if(n@@ ==0)@@ printf("%s",a); }  
c -1
h -1
0

intmain(){ double@@ m; chara[@@ 10000@@ ],b[@@ 10000]; scanf("%lf",&@@ m); scanf("%s",a); scanf("%s",b); int@@ l=strlen(@@ a)@@ ,@@ k=0; for(inti=0;i<@@ l@@ ;i++){ if((@@ a[i]=='@@ A'||a[i]=='@@ G'||@@ a[i]=='@@ C'||@@ a[i]=='@@ T')&&(@@ b[i]=='@@ A'||@@ b[i]=='@@ T'||@@ b[i]=='@@ C'||@@ b[i]=='@@ G')){ if(a[i]==b[i]){ k++; } }else{ printf("error"); return0; } } double@@ j; j@@ =1.0*@@ k/@@ l; if(j@@ >@@ m){ printf("yes"); }else{ printf("no"); } return0; }  
c -1
h -1
intmain() { inta[@@ 11]; inty,m,d,@@ i,@@ leap@@ ,@@ total=0; scanf("%d%d%d",&y,&m,&d); if(y%@@ 4==0) { if(y%@@ 100==0) { if(y%@@ 400==0) leap@@ =1; else@@ leap@@ =0; } else@@ leap@@ =1; } else@@ leap@@ =0; if(leap@@ )@@ a[1]=29; else@@ a[1]=@@ 28; a[0]=@@ 31; a[2@@ ]=31; a[@@ 3@@ ]=30; a[@@ 4@@ ]=31; a[@@ 5@@ ]=30; a[@@ 6@@ ]=31; a[@@ 7@@ ]=31; a[@@ 8@@ ]=30; a[@@ 9@@ ]=31; a[@@ 10@@ ]=30; a[@@ 11@@ ]=31; for(i=0;i<m-1;i++) total+=@@ a[i]; total+=@@ d; printf("%d",@@ total); return0; }  
c -1
h -1
0

intmain(){ doublen; chars1@@ [501]; char@@ s2@@ [501]; scanf("%lf",&n); scanf("%s",@@ s1); scanf("%s",@@ s2); inti,@@ len1,len2,@@ sum=0; double@@ gl@@ ; len1=strlen(@@ s1); len2=strlen(@@ s2); if(len1!=@@ len2){ printf("error"); return0; } else{ for(i=0;i<len1;i++){ if((@@ s1@@ [i]=='A'||@@ s1@@ [i]=='T'||@@ s1@@ [i]=='C'||@@ s1@@ [i]=='@@ G')&&(@@ s2@@ [i]=='A'||@@ s2@@ [i]=='T'||@@ s2@@ [i]=='C'||@@ s2@@ [i]=='@@ G')){ if(s1[i]==s2@@ [i]){ sum+=@@ 1; } }else{ printf("error"); return0; } } gl@@ =1.0*@@ sum/@@ len1; if(@@ gl@@ >n){ printf("yes"); } else{ printf("no"); } } return0; }  
c -1
h -1
intmain() { intn,i; scanf("%d",&n); structpatient { charID[10]; intage; structpatient*next; structpatient*@@ pre@@ ; }; structpatient@@ *p,*@@ head,*@@ q@@ ,*@@ m@@ ,*@@ temp; p=@@ (structpatient@@ *)malloc(sizeof(structpatient@@ )); head=@@ p; temp@@ =(struct@@ patient*)malloc(sizeof(structpatient)); for(i=0;i<n;i++) { scanf("%s%d",@@ p->@@ ID,&@@ p->@@ age); if(i!=@@ n-1) { p->next@@ =(struct@@ patient*)malloc(sizeof(structpatient)); p->next@@ ->@@ pre@@ =p; p->next@@ ->next=NULL; p=p->next; } } for(p=head@@ ;p!=NULL;p=p->next) { for(q=@@ p->next@@ ;q@@ !=NULL;@@ q=q@@ ->next) { if((@@ p->age@@ <@@ q@@ ->age@@ )&&(@@ q@@ ->age@@ >=60@@ )) { for(m=@@ q@@ ;m@@ !=@@ p@@ ;@@ m=m@@ ->@@ pre@@ ) { temp@@ ->age=@@ m@@ ->@@ age; m@@ ->age=@@ m@@ ->@@ pre@@ ->@@ age; m@@ ->@@ pre@@ ->age=@@ temp->@@ age; strcpy(@@ temp->@@ ID,@@ m@@ ->@@ ID); strcpy(@@ m@@ ->@@ ID,@@ m@@ ->@@ pre@@ ->@@ ID); strcpy(@@ m@@ ->@@ pre@@ ->@@ ID,@@ temp->@@ ID); } } } } for(p=head@@ ;p!=NULL;p=p->next) printf("%s\n",p->@@ ID); return0; }  
c -1
h -1
0

intmain() { chara[256],b[256],c[256]; int@@ la@@ ,lb@@ ,@@ lc@@ ,i,j,@@ p=0; scanf("%s",a); scanf("%s",b); scanf("%s",c); la@@ =strlen(a); lb@@ =strlen(b); lc@@ =strlen(c); for(i=0;i<@@ la;i++) { if(@@ b[0]@@ ==@@ a[i]) { for(j=1;j<@@ lb@@ ;j++) { if(b[j]@@ ==@@ a[i+j@@ ]) p=0; else p=1; } if(p@@ ==0) { for(j=0;j<@@ lc@@ ;j++) a[i+j@@ ]=@@ c[j]; break; } } } printf("%s",a); return0; }  
c -1
h -1
structStudent {int@@ ID; intchi; intmath; inttotal; }; intmain() { structStudent@@ stu[100000]; structStudent@@ temp; inti,n,@@ j,@@ m; scanf("%d",&n); for(i=0;i<n;i++){ scanf("%d%d%d",&stu[i].@@ ID@@ ,&stu[i].@@ chi@@ ,&stu[i].math); stu[i].@@ total=@@ stu[i].@@ chi@@ +stu[i].@@ math; } for(j=1;j<@@ 4@@ ;j++){ for(m=0;m<@@ n@@ -j@@ ;m++){ if(@@ stu[m@@ ].@@ total@@ >=@@ stu[m@@ +1@@ ].@@ total@@ ){ temp=@@ stu[@@ m]; stu[m@@ ]=@@ stu[m@@ +1]; stu[m@@ +1]=@@ temp; } } } for(i=n-1;i@@ >@@ n-@@ 4@@ ;i--) printf("%d%d\n",stu[i].@@ ID,@@ stu[i].@@ total); return0; }  
c -1
h -1
0

main() { intk,i,j,@@ max; scanf("%d",&k); int@@ height@@ [k]; intnum@@ [k]; for(i=0;i<k;i++) scanf("%d",&@@ height@@ [i]); num@@ [k-1]@@ =1; max=1; for(i=k-2;i>=0;i--) { num@@ [i]=0; for(j=@@ k-1@@ ;j>i;j--) { if(@@ height@@ [i]>=@@ height@@ [j]&&@@ num[i]@@ <@@ num@@ [j]) num[i]=@@ num@@ [j]; } num[i]=@@ num[i]@@ +1; if(num@@ [i]>max) max=@@ num[i]; } printf("%d\n",max); getchar(); getchar(); }  
c -1
h -1
structstudent { intID; intchi; intmath; }@@ student[@@ 100000]; intmain() { intn,i,j,k; scanf("%d",&n); inta[n]; for(i=0;i<n;i++) { scanf("%d%d%d",&@@ student[i].@@ ID,&@@ student[i].@@ chi@@ ,&@@ student[i].@@ math); a[i]=@@ student[i].@@ chi@@ +@@ student[i].@@ math; } for(k=0;k<@@ 3@@ ;k++) { for(i=0;i<n;i++) { for(j=0;j<n;j++) { if(a[i]@@ <@@ a[j]) break; } if(j==@@ n@@ &&a[i]@@ >=@@ a@@ [j-1]) { printf("%d%d\n",@@ student[i].@@ ID,@@ a[i]); a[i]=0; break; } } } getchar(); getchar(); }  
c -1
h -1
0

intmain(){ intn,i,@@ k; charid@@ [N@@ ][@@ LEN@@ ]; intage@@ [N]; scanf("%d",&n); for(i=0;i<n;i++){ scanf("%s%d",@@ id@@ [i],@@ &@@ (@@ age@@ [i]@@ )); } int@@ e_age@@ ; char@@ e_id@@ [@@ LEN@@ ]; for(k=1;k<=@@ n;k++){ for(inti=0;i<@@ n-@@ k;i++){ if((@@ age@@ [i]<@@ age@@ [i+1@@ ])@@ &&@@ !@@ (@@ age@@ [i+1]@@ <60@@ )){ e_age@@ =@@ age@@ [i+1]; strcpy(@@ e_id@@ ,@@ id@@ [i+1]); age@@ [i+1]=@@ age[i]; strcpy(id@@ [i+1],@@ id[i]); age@@ [i]=@@ e_age@@ ; strcpy(id@@ [i],@@ e_id@@ ); } } } for(i=0;i<n;i++){ printf("%s\n",@@ id[i]); } return0; }  
c -1
h -1
intmain(){ int@@ c,@@ a[@@ 20],@@ t,@@ sum; while(1){ t=@@ sum=0; while(1){ scanf("%d",&@@ c); if(!@@ c@@ ||@@ c@@ ==-1)break; a[t@@ ++]=@@ c; } if(c@@ ==-1)break; for(inti=0;i<@@ t;i++) for(intj=0;j<@@ t;j++) if(a[j]==@@ a[i]@@ *2@@ )@@ sum++; printf("%d\n",sum); } return0; }  
c -1
h -1
0

intmain() { intn,i,j,@@ d[@@ 1000]; char@@ zuo@@ [26@@ ]={'A','B','C','D','E','F','G','H','I','J','K','L','M','N','O','P','@@ Q','R','S','T','U','V','W','X','Y','@@ Z'}; scanf("%d",&n); chars[@@ 1000][@@ 26],@@ len; intsum@@ [26]={0},@@ k; for(i=0;i<n;i++) { scanf("%d%s",&@@ d@@ [i],@@ s[i]); len=strlen(@@ s[i]); for(j=0;j<len;j++) { for(k=0;k<26;k++) { if(s@@ [i][j]=='@@ A'+@@ k)@@ sum@@ [k]++; } } } intmax=0,@@ count=0; char@@ maxid@@ ; for(i=0;i<26;i++) { if(sum@@ [i]>max) { max=@@ sum[i]; maxid@@ =i@@ +'A'@@ ; } } printf("%c\n%d\n",@@ maxid@@ ,max); int@@ t@@ [1000]; for(i=0;i<n;i++) { len=strlen(@@ s[i]); for(j=0;j<len;j++) { if(s@@ [i][j]==@@ maxid@@ ) { count++; t[@@ count@@ ]=@@ d[i]; } } } for(i=1;i<=@@ count@@ ;i++)@@ printf("%d\n",@@ t@@ [i]); return0; }  
c -1
h -1
intmain(){ double@@ a; charb[@@ 501@@ ],c[@@ 501]; scanf("%lf\n",&@@ a); scanf("%s@@ \n",@@ b); scanf("%s",c); inti; intt=0; for(i=0;i<@@ strlen(b@@ );i++){ if(@@ b[i]!='A'&&b[i]!='T'&&b[i]!='C'&&b[i]!='@@ G')@@ t=1; } for(i=0;i<strlen(@@ c@@ );i++){ if(c@@ [i]!='A'&&@@ c@@ [i]!='T@@ '&&@@ c@@ [i]!='C'&&@@ c@@ [i]!='G')@@ t=1; } if(@@ strlen(b@@ )!=strlen(@@ c@@ )||@@ t@@ ==1)@@ printf("error"); else{ inti,@@ sum=0; for(i=0;i<@@ strlen(b@@ );i++){ if(b[i]==@@ c[i]@@ )@@ sum++; } double@@ d; intm; m@@ =strlen(b); d=@@ sum@@ *1.0/@@ m; if(d@@ >@@ a)@@ printf("yes"); elseprintf("no"); } return0; }  
c -1
h -1
0

intmain(intargc,char*argv[]) { charid@@ [100][100]; intage@@ [100]; intn; inti,@@ k; scanf("%d",&n); for(i=0;i<n;i++){ scanf("%s",@@ id[i]); scanf("%d",&@@ age[i]); } int@@ e; char@@ t[@@ 13@@ ]; char@@ id1@@ [100][@@ 13@@ ]; int@@ age1@@ [100]; char@@ id2@@ [100][@@ 13@@ ]; int@@ age2@@ [100]; int@@ x=0,@@ y=0; for(i=0;i<n;i++){ if(age[i]@@ >=60){ age1@@ [x@@ ]=@@ age[i]; strcpy(@@ id1@@ [x@@ ],@@ id[i]); x++; } if(age[i]@@ <60){ age2@@ [y@@ ]=@@ age[i]; strcpy(@@ id2@@ [y@@ ],@@ id[i]); y++; } } for(k=1;k<@@ x@@ ;k++){ for(i=0;i<x@@ -@@ k;i++){ if(@@ age1@@ [i]<@@ age1@@ [i+1@@ ]){ e=@@ age1@@ [i+1]; age1@@ [i+1]=@@ age1@@ [i]; age1@@ [i]=@@ e; strcpy(@@ t,@@ id1@@ [i+1]); strcpy(@@ id1@@ [i+1],@@ id1@@ [i]); strcpy(@@ id1@@ [i],@@ t); } } } for(i=0;i<x;i++){ printf("%s\n",@@ id1@@ [i]); } for(i=0;i<@@ y@@ ;i++){ printf("%s\n",@@ id2@@ [i]); } return0; }  
c -1
h -1
struct@@ person { charnum[@@ 6@@ ]; int@@ Chinese@@ ; intmath; inttotal; }stu[100000]; intmain() { intn,i,@@ max@@ ,j,@@ k,@@ temp@@ =0,@@ tnum@@ =0; cin>>n; for(i=0;i<n;i++) { cin>>@@ stu[i].@@ num; cin>>@@ stu[i].@@ Chinese@@ ; cin>>@@ stu[i].@@ math; stu[i].@@ total=@@ stu[i].@@ math@@ +stu[i].@@ Chinese@@ ; } for(j=0;j<3;j++) { max=0; for(i=0;i<n;i++) { if(stu[i].@@ total@@ >max) { max=@@ stu[i].@@ total; k=i; } } cout<<@@ stu[k].@@ num@@ <<""<<@@ stu[k].@@ total@@ <<endl; stu[k].@@ total=0; } return0; }  
c -1
h -1
0

intmain() { inth@@ [25],@@ n,i,j,@@ t,@@ d[@@ 25@@ ]={0},@@ max=0,@@ in@@ ; scanf("%d",&n); for(i=0;i<n;i++) { scanf("%d",&h[i]); } for(i=n-2;i>=0;i--) { for(j=i+1;j<n;j++) { if(h@@ [j]<=@@ h@@ [i]@@ &&@@ d@@ [i]<@@ d@@ [j]@@ +1) d[i]=@@ d@@ [j]+1; } } for(i=0;i<n;i++) { if(d@@ [i]>max) { max=@@ d[i]; } } printf("%d",@@ max@@ +1); }  
c -1
h -1
intmain() { inta[@@ 20@@ ]={0}; intj,@@ k,@@ i=0,@@ n=0,@@ m=0; while((@@ scanf("%d",&a[i]@@ )@@ )&&(@@ a[i]@@ >=0@@ )) { if(a[i]==0) { for(j=0;j<@@ i-1;j++) { for(k=j+1;k<@@ i;k++) if(a[j]==2*@@ a[k]@@ ||@@ a[k@@ ]==2*@@ a[j]) m++; } printf("%d\n",m); m=0; i=0; for(j=0;j<@@ 20@@ ;j++) a[j]=0; } i++; } return0; }  
c -1
h -1
0

intmain() {@@ inti,n,@@ k,@@ a[1000],@@ j=0,@@ m; scanf("%d%d",&n,&k); for(i=0;i<n;i++){ scanf("%d",&a[i]);} m=@@ n; for(j=0;j<m;j++){ for(@@ n;@@ n@@ >0@@ ;n@@ --){ for(i=0;i<n;i++){ if(a[j]@@ +@@ a[i]==@@ k){@@ printf("yes");@@ return0;} } }@@ n=@@ m@@ -j@@ -1; }@@ printf("no@@ ");@@ return0;}  
c -1
h -1
intmain() { inta[100],b[100]; intm,n,@@ j,@@ k; voidf@@ (inta[],int@@ m); scanf("%d%d",&m,&n); for(j=0;j<m;j++) { scanf("%d",&a[j]); } for(k=0;k<n;k++) { scanf("%d",&@@ b[k@@ ]); } f(a,@@ m); printf(""); f(@@ b,@@ n); return0; } voidf@@ (inta[],int@@ m) { inti,@@ l,@@ s; for(i=1;i<m;i++) { for(l=0;l<@@ m@@ -i@@ ;l++) { if(a[@@ l@@ ]>@@ a[l@@ +1]) {@@ s=@@ a[l@@ ];@@ a[l@@ ]=a[@@ l@@ +1@@ ];@@ a[l@@ +1]=@@ s@@ ;} } } printf("%d",a[0]); for(l=1;@@ l<@@ m;@@ l++) { printf("%d",@@ a[l@@ ]); } }  
c -1
h -1
0

intmain() { inta[1000]; intn,i,j,k; intt; int@@ d; scanf("%d%d",&n,&k); for(i=0;i<n;i++) { scanf("%d",&a[i]); } for(i=0;i<n;i++) { t=@@ k-@@ a[i]; for(j=i;j<@@ n;j++) { if(a[j]==@@ t@@ ){@@ printf("yes@@ \n@@ ");@@ return0;} } } printf("no"); return0; }  
c -1
h -1
structstudent {int@@ id; inta; intb; int@@ zong@@ ; }; structstudent@@ ren@@ [100000]; intmain() {@@ intn,i,@@ fen@@ ,@@ flag=0,@@ j; scanf("%d\n",&n); for(i=0;i<=n-1;i++) {scanf("%d",&@@ ren@@ [i].id); scanf("%d",&@@ ren@@ [i].@@ a); scanf("%d",&@@ ren@@ [i].@@ b); ren@@ [i].@@ zong@@ =@@ ren@@ [i].@@ a+@@ ren@@ [i].@@ b; } for(@@ fen@@ =@@ 200@@ ;@@ fen@@ >=@@ 100@@ ;@@ fen@@ --) {@@ for(i=0;i<=n-1;i++) if(@@ fen@@ ==@@ ren@@ [i].@@ zong@@ ) {@@ printf("%d%d\n",@@ ren@@ [i].@@ id,@@ ren@@ [i].@@ zong@@ ); flag@@ =@@ flag@@ +1; if(flag@@ ==@@ 3)@@ goto@@ end@@ ; } } end@@ : getchar(); }  
c -1
h -1
0

intmain() { intn,k,@@ judge@@ =0; cin>>n>>k; inta[1000]; for(inti=0;i<n;i++) cin>>a[i]; for(inti@@ =0;@@ judge@@ ==0&&@@ i@@ <@@ n-1;i++) { for(intj=i+1@@ ;j<n;j++) { if(a[i]+a[j]==k) judge@@ =1; } } if(@@ judge@@ ==1) cout<<"yes"; if(@@ judge@@ ==0) cout<<"no"; return0; }  
c -1
h -1
intmain() { inta[1000]; intn,k,@@ l; l=0; scanf("%d%d",&n,&k); intj,@@ e,@@ ok@@ ,i; ok@@ =0; for(i=0;i<n;i++){ scanf("%d",&a[i]);} for(i=0;i<n;i++){ for(j=1;j<@@ n;j++){ if((@@ a[0]@@ +@@ a[j]@@ )==@@ k){@@ ok@@ =1;} } e=@@ a[0]; a[0]=@@ a[l@@ ]; a[l@@ ]=@@ e; l++; } if(@@ ok@@ ==1){@@ printf("yes");} else{printf("no");} return0; }  
c -1
h -1
1


intmain(intargc,char*argv[]) { chara[256],b[256],c[256]; int@@ la@@ ,i,j,@@ lb@@ ,@@ lc@@ ,@@ h=@@ 300@@ ,@@ p; scanf("%s%s%s",a,b,c); la@@ =strlen(a); lb@@ =strlen(b); lc@@ =strlen(c); for(j=0;j<@@ la@@ ;j++) { if(@@ b[0]@@ ==@@ a[j]) { for(i=0;i<@@ lb@@ ;i++) {@@ if(b[i]@@ !=@@ a@@ [j+i@@ ]) break; if((@@ i==@@ lb@@ -1)@@ &&(@@ b[i]@@ ==@@ a@@ [j+i@@ ]@@ )) { h@@ =j; j=@@ 100; break; } } } } if(h@@ !=@@ 300@@ ) { for(p=@@ h@@ ;p<@@ h@@ +lb@@ ;p++) { a[p@@ ]=@@ c[@@ 0@@ +p@@ -@@ h@@ ]; } } for(i=0;i<@@ la;i++) { printf("%c",a[i]); } return0; }  
c -1
h -1
intmain() { structpatient { int@@ id@@ [@@ 7@@ ]; intage; }@@ patient@@ [100]; inti,n,@@ max=0,@@ k; scanf("%d\n",&n); for(i=0;i<n;i++)@@ scanf("%s@@ %d\n",@@ patient@@ [i].id,&@@ patient@@ [i].age); for(i=0;i<n;i++) { if(@@ patient@@ [i].age@@ >max)max=@@ patient@@ [i].age; } for(k=@@ max@@ ;k@@ >@@ 59@@ ;k--) { for(i=0;i<n;i++)@@ if(@@ patient@@ [i].age@@ ==@@ k)@@ printf("%s\n",@@ patient@@ [i].id); } for(i=0;i<n;i++) { if(@@ patient@@ [i].age@@ <60@@ )@@ printf("%s\n",@@ patient@@ [i].id); } }  
c -1
h -1
0

intmain() { chars[@@ 2][@@ 501]; doublen; double@@ sum=0,@@ x,@@ Len@@ ; int@@ len,@@ i,@@ len2@@ ,j; scanf("%lf",&n); scanf("%s%s",@@ s[@@ 0],@@ s@@ [1]); len=strlen(@@ s@@ [0]); len2=strlen(@@ s@@ [1]); if(@@ len@@ !=@@ len2) { printf("error"); return0; } else { for(i=0;i<2@@ ;i++){ for(j=0;j<len@@ ;j++){ if(s@@ [i][j]!='@@ A'&&@@ s@@ [i][j]!='@@ T'&&@@ s@@ [i][j]!='@@ G'&&@@ s@@ [i][j]!='@@ C') { printf("error"); return0; } elsecontinue; } } } for(i=0;i<len;i++) { if(s@@ [0]@@ [i]==@@ s[1]@@ [i])@@ sum=sum+1; } Len@@ =(double)@@ len; x=@@ sum/@@ Len@@ ; if(x@@ >=@@ n) { printf("yes"); } else { printf("no"); } return0; }  
c -1
h -1
inta,b,@@ c[@@ 20],@@ d[@@ 20],@@ s[@@ 20],@@ l,@@ i,j; voidshuru@@ () { scanf("%d%d",&a,&b); for(i=0;i<a;i++) scanf("%d",&@@ c[i]); for(i=0;i<b;i++) scanf("%d",&@@ d[i]); } int@@ shuchu@@ (ints[@@ ]) { for(i=0;i<@@ a+@@ b@@ -1;i++) printf("%d",@@ s[i]); printf("%d",@@ s[@@ a+@@ b@@ -1]); return0; } int@@ paixu@@ (int@@ f@@ [],int@@ k) { for(i=1;i<k;i++) for(j=0;j<@@ k@@ -i;j++) if(f@@ [j]>=@@ f@@ [j+1]) {@@ l=@@ f@@ [j]; f@@ [j]=@@ f@@ [j+1]; f@@ [j+1]=@@ l; } return0; } int@@ hebing@@ (intc[],int@@ d@@ []) {@@ for(i=0;i<a;i++) s[i]=@@ c[i]; for(i=a@@ ;i<@@ b+@@ a;i++) s[i]=@@ d@@ [i-@@ a@@ ]; return0;} voidmain() { shuru@@ (); paixu@@ (c,@@ a); paixu(@@ d,@@ b); hebing@@ (c,@@ d); shuchu@@ (@@ s); }  
c -1
h -1
0

intmain() { intk,m,n,@@ i,@@ a[@@ 10000],@@ sum[@@ 10000],@@ y@@ ,j; scanf("%d",&k); for(j=1;j<=@@ k;j++) {@@ scanf("%d%d",&m,&n); sum@@ [j-1]@@ =0; for(i=1;i<=@@ 10000@@ ;i++) { scanf("%d",&@@ a[i@@ -1]); y@@ =i@@ <=@@ n@@ ||@@ i@@ %n@@ ==1||@@ i@@ %n@@ ==0||@@ i@@ >@@ m*@@ n-@@ n; sum@@ [j-1]@@ +=@@ y@@ *@@ a[i@@ -1]; if(i>=@@ m*@@ n@@ )break; } } for(i=1;i<=k;i++) printf("%d\n",sum@@ [i@@ -1]); return0; }  
c -1
h -1
voidmain() { inti,n,@@ j,@@ max; scanf("%d",&n); structstudent { intnum; intyuwen; intshuxue; structstudent*next; }; structstudent*head,*@@ ppre@@ ,*@@ p0@@ ,*@@ p3; structstudent*p1,*p2; head@@ =p1@@ =p2@@ =(structstudent*)malloc(sizeof(structstudent)); for(i=0;i<n;i++) { scanf("%d%d%d",&p1->num,&p1->@@ yuwen@@ ,&p1->@@ shuxue); p1@@ =(structstudent*)malloc(sizeof(structstudent)); p2->next=p1; p2=p1; } p2->next=NULL; for(j=0;j<3;j++) { ppre@@ =p1@@ =head; max=@@ p1->@@ yuwen@@ +p1->@@ shuxue; p1=p1->next; for(i=0;i<n@@ -j;i++) { if((@@ p1->@@ yuwen@@ +p1->@@ shuxue@@ )@@ >max) { max=@@ p1->@@ yuwen@@ +p1->@@ shuxue; p0@@ =p1; p3=@@ ppre@@ ; } ppre@@ =p1; p1=p1->next; } printf("%d%d\n",@@ p0->@@ num,@@ max); p3@@ ->next=@@ p0@@ ->next; } }  
c -1
h -1
0

intf(inta,int@@ min) { intj,@@ num; if(a<@@ min@@ )return0; num@@ =1; for(j=@@ min@@ ;j<@@ a@@ ;j++) if(a%@@ j@@ ==0)@@ num=num+@@ f(@@ a/@@ j@@ ,j); returnnum; } intmain() { intn,i,@@ out@@ ,@@ a; cin>>n; for(i=0;i<n;i++) { cin>>a; out@@ =@@ f(a,@@ 2); cout<<@@ out@@ <<endl; } return0; }  
c -1
h -1
intmain() { intn,@@ a,b,c,d,@@ sum; scanf("%d\n",&n); intsz[100][100]; introw,col; for(row=0;row<n;@@ row++) { for(col=0;col<n;col@@ ++) { scanf("%d\n",&@@ (@@ sz[row][col@@ ]@@ )); } } for(row=0;row<n;@@ row++) { for(col=0;col<n;col@@ ++) { if(@@ sz[row][col@@ ]@@ ==0&&@@ sz[row][col@@ +1@@ ]==255@@ ) { a=@@ row; b=@@ col; break; } } } for(row@@ =@@ n-1;@@ row@@ >0@@ ;@@ row@@ --) { for(col@@ =@@ n-1;@@ col@@ >0@@ ;col@@ --) { if(@@ sz[row][col@@ ]@@ ==0&&@@ sz[row][col@@ -1@@ ]==255@@ ) { c=@@ row; d=@@ col; break; } } } sum=(@@ c-a@@ +1)*(@@ d-b@@ +1); printf("%d",sum); return0; }  
c -1
h -1
0

voidmain() { int@@ len@@ [1000]; intb[@@ 26]; inta[1000]; charstr@@ [1000][@@ 26]; intm,i,j,@@ max,@@ num; charc; int@@ pos@@ ,@@ temp; scanf("%d",&m); for(i=0;i<26;i++) b[i]=0; for(i=0;i<m;i++) { scanf("%d",&a[i]); scanf("%s",@@ str[i]); len@@ [i]@@ =strlen(@@ str[i]); for(j=0;j<len@@ [i];j++) { temp=@@ str@@ [i][j]@@ -'A'; b[@@ temp@@ ]++; } } max=@@ b[0]; pos@@ =0; for(i=1;i<26;i++) { if(b[i]>max) { max=b[i]; pos@@ =i; } } c=@@ pos@@ +'A'@@ ; printf("%c\n",@@ c); printf("%d\n",max); num=0; for(i=0;i<m;i++) for(j=0;j<len@@ [i];j++) if(str@@ [i][j]==@@ c) { num++; if(num@@ <@@ max) printf("%d\n",a[i]); else@@ printf("%d",a[i]); } }  
c -1
h -1
intmain() { inta[@@ 2][@@ 13]={0,31,@@ 28@@ ,31,30,31,30,31@@ ,31,30,31,30@@ ,31,@@ 0@@ ,31,@@ 29,31,30,31,30,31,31,30,31,30,31}; inty,m,@@ i,@@ d,@@ s=0; scanf("%d%d%d",&y,&m,&d); if(y%@@ 400==0||(@@ y%100!=0@@ &&@@ y%@@ 4@@ ==0)) { for(i=0;i<m;i++) s+=@@ a[1]@@ [i]; s+=@@ d; } else { for(i=0;i<m;i++) s+=@@ a[0][i]; s+=@@ d; } printf("%d",s); return0; }  
c -1
h -1
0

char@@ substring@@ [256@@ ]={0}; char@@ S@@ [256@@ ]={0}; char@@ replacement@@ [256@@ ]={0}; intmain() { while(cin>>@@ S@@ ) { cin>>@@ substring@@ ; cin>>@@ replacement@@ ; char*@@ p=strstr(@@ S@@ ,@@ substring); char*@@ q@@ =NULL; inti=0; if(p@@ !=NULL) { for(q=@@ S@@ ;q@@ <p@@ ;q++) { cout<<@@ *@@ q; } cout<<@@ replacement@@ ; for(q=@@ p+@@ strlen(@@ substring@@ );@@ *@@ q@@ !='\0'@@ ;q++) { cout<<@@ *@@ q; } cout<<endl; memset(@@ S@@ ,@@ 0,@@ 256); memset(@@ substring@@ ,@@ 0,@@ 256); memset(@@ replacement@@ ,@@ 0,@@ 256); } elseif(@@ p@@ ==NULL) { cout<<@@ S@@ <<endl; } } return0; }  
c -1
h -1
intmain(){ intn,i,j,@@ a,@@ x1,y1,x2,y2@@ ; scanf("%d@@ "@@ ,&@@ n); x1@@ =@@ n; for(i=1;i<=n;i++){ for(j=1;j<=n;j++){ scanf("%d@@ "@@ ,&@@ a); if(a@@ ==0&&@@ j@@ <@@ x1@@ ){ x1@@ =j; y1@@ =i; } if(a@@ ==0){ x2@@ =j; y2@@ =i; } } } int@@ area@@ =(@@ x2-x1-1)*(y2-y1-1); printf("%d@@ \n@@ %d\n%d@@ "@@ ,@@ area@@ ,@@ x2-x1@@ -1,@@ y2-y1@@ -1); return(0); }  
c -1
h -1
0

structstu { intnum; intyuwen; intshuxue; intsum; }@@ score@@ [100000]; intmain() { intn,i,@@ a,b,@@ c,@@ a1,@@ b1,@@ c1@@ ; scanf("%d",&n); for(i=0;i<n;i++){ scanf("%d%d%d",&@@ score[i].@@ num,&@@ score[i].@@ yuwen@@ ,&@@ score[i].@@ shuxue); score[i].@@ sum=@@ score[i].@@ shuxue@@ +@@ score[i].@@ yuwen; }@@ a=0; b=0; c=0; a1@@ =0; b1@@ =0; c1@@ =0; for(i=0;i<n;i++){ if(@@ score[i].@@ sum>@@ a){ c=@@ b; b=@@ a; a=@@ score[i].@@ sum; c1@@ =@@ b1@@ ; b1@@ =@@ a1@@ ; a1@@ =@@ score[i].@@ num; }elseif(@@ score[i].@@ sum>@@ b){ c=@@ b; b=@@ score[i].@@ sum; c1@@ =@@ b1@@ ; b1@@ =@@ score[i].@@ num; }elseif(@@ score[i].@@ sum>@@ c){ c=@@ score[i].@@ sum; c1@@ =@@ score[i].@@ num; } }@@ printf("%d%d\n%d%d\n%d@@ %d",@@ a1,@@ a,@@ b1,@@ b,@@ c1@@ ,@@ c); return0; }  
c -1
h -1
intmain(){ intn,i,k,@@ sum=0,@@ m,@@ l,@@ p,q; int@@ a=0,@@ b=0; intsz[@@ 1000][1000]; scanf("%d",&n); for(i=0;i<n;i++){ for(k=0;k<n;k++){ scanf("%d",&@@ sz[i]@@ [k]); } } for(i=1;i<@@ n-1;i++){ for(k=1;k<@@ n-1@@ ;k++){ if(sz[i]@@ [k]@@ ==0&&@@ a@@ ==0){ m=i; l=@@ k; a=1; } } } for(i=n-1;i>=0;i--){ for(k=@@ n-1@@ ;k>=0@@ ;k@@ --){ if(sz[i]@@ [k]@@ ==0&&@@ b@@ ==0){ p=i; q=@@ k; b=1; } } } sum=(@@ p@@ -m@@ -1)*(@@ q@@ -l@@ -1); printf("%d",sum); return0; }  
c -1
h -1
0

intmain() { inti,j,n,@@ sum,@@ flag=0; intnum[@@ 1000]; scanf("%d%d",&n,&@@ sum); for(i=0;i<n;i++){ scanf("%d",&@@ num[i]); } for(i=0;i<n-1;i++){ for(j=n-1@@ ;j>i@@ ;j--){ if(num@@ [i]+@@ num@@ [j]==@@ sum){ printf("yes"); flag=1; break; } if(flag@@ ==1){ break; } } if(flag@@ ==1){ break; } } if(flag@@ ==0){ printf("no"); } return0; }  
c -1
h -1
intk; int@@ height@@ [26]; int@@ len@@ (int@@ num@@ ){ int@@ temp,@@ max,@@ i; if(num@@ ==k){ return(1); }else{ max=0; for(i=@@ num@@ +1;i<=@@ k;i++){ if(@@ height@@ [@@ num@@ ]>=@@ height@@ [i]){ temp=@@ len@@ (i); if(max<@@ temp@@ ){ max=@@ temp; } } } } return(@@ max@@ +1); } main(){ height@@ [0]=@@ 30001@@ ; scanf("%d",&k); inti; for(i=1;i<=@@ k;i++){ scanf("%d",&@@ height@@ [i]); } printf("%d",@@ len@@ (@@ 0)@@ -1); scanf("%d",&k); }  
c -1
h -1
0

intmain() { inti,@@ m,n,@@ x=0; double@@ p,@@ y; chara[500],b[500]; scanf("%lf\n",&@@ p); gets(a); gets(b); m=strlen(a); n@@ =strlen(b); if(m!=@@ n) { printf("error"); return0; } else { for(i=0;i<m;i++) { if(a[i]!='@@ A'&&a[i]!='T'&&a[i]!='G'&&a[i]!='@@ C'||@@ b[i]!='A'&&b[i]!='T'&&b[i]!='G'&&b[i]!='@@ C') { printf("error"); return0; } else { if(a[i]==b[i]) { x++; } } } y@@ =(double)@@ x/@@ m; if(y@@ >@@ p) { printf("yes"); } else { printf("no"); } return0; } }  
c -1
h -1
intmain(intargc,char*argv[]) { intyear,month,day; scanf("%d%d%d",&year,&month,&day); if(year%@@ 4!=0@@ ||(@@ year%@@ 100==0&&@@ year%@@ 400!=0)) {if(@@ month@@ ==1) printf("%d",@@ day); elseif(month==@@ 2) printf("%d",day+@@ 31@@ ); elseif(month==@@ 3) printf("%d",day+@@ 59@@ ); elseif(month==@@ 4) printf("%d",day+@@ 90@@ ); elseif(month==@@ 5) printf("%d",day+@@ 120@@ ); elseif(month==@@ 6) printf("%d",day+@@ 151@@ ); elseif(month==@@ 7) printf("%d",day+@@ 181@@ ); elseif(month==@@ 8) printf("%d",day+@@ 212@@ ); elseif(month==@@ 9) printf("%d",day+@@ 242@@ ); elseif(month==@@ 10) printf("%d",day+@@ 273@@ ); elseif(month==@@ 11) printf("%d",day+@@ 304@@ ); elseif(month==@@ 12) printf("%d",day+@@ 334@@ ); } else {if(@@ month@@ ==1) printf("%d",@@ day); elseif(month==@@ 2) printf("%d",day+@@ 31@@ ); elseif(month==@@ 3) printf("%d",day+@@ 59@@ +1); elseif(month==@@ 4) printf("%d",day+@@ 90@@ +1); elseif(month==@@ 5) printf("%d",day+@@ 120@@ +1); elseif(month==@@ 6) printf("%d",day+@@ 151@@ +1); elseif(month==@@ 7) printf("%d",day+@@ 182@@ ); elseif(month==@@ 8) printf("%d",day+@@ 213@@ ); elseif(month==@@ 9) printf("%d",day+@@ 243@@ ); elseif(month==@@ 10) printf("%d",day+@@ 274@@ ); elseif(month==@@ 11) printf("%d",day+@@ 305@@ ); elseif(month==@@ 12) printf("%d",day+@@ 335@@ ); } return0; }  
c -1
h -1
0

char@@ f@@ (int@@ max,@@ inta[@@ ],@@ char@@ m,@@ char@@ n) { char@@ num1,num2@@ ; if(m==@@ n@@ &&@@ a[@@ n-1@@ ]<=@@ max) return(1); elseif(m==@@ n@@ &&@@ a[@@ n-1@@ ]@@ >max) return(0); else { if(a[m@@ -1]@@ <=@@ max) { num1@@ =@@ f(@@ max,@@ a,@@ m@@ +1,@@ n); num2@@ =@@ f(@@ a[@@ m-1@@ ],@@ a,@@ m@@ +1,@@ n)@@ +1; if(@@ num1@@ >@@ num2@@ ) return(@@ num1@@ ); else return(@@ num2@@ ); } else return(@@ f(@@ max,@@ a,@@ m@@ +1,@@ n@@ )); } } voidmain() { int@@ hmax@@ =(@@ unsigned@@ )@@ (@@ ~@@ 0)@@ >>@@ 1; inth@@ [N]; char@@ n,@@ i; scanf("%d",&n); for(i=0;i<n;i++) scanf("%d",&h[i]); printf("%d\n",@@ f(@@ hmax@@ ,@@ h,@@ 1,@@ n@@ )); printf("@@ input@@ :\@@ n@@ "); for(i=0;i<n;i++) printf("%d@@ ,"@@ ,@@ h[i]); }  
c -1
h -1
intmain() { int@@ n[@@ 1000][@@ 1000]={0}; inta; scanf("%d",&a); inti,j; int@@ zuoi@@ =0,@@ zuoj@@ =0,@@ youi@@ =0,@@ youj@@ =0,@@ jump1@@ =0,@@ jump2@@ =0; for(i=0;i<a;i++) { for(j=0;j<a@@ ;j++) { scanf("%d",&@@ n@@ [i][j]); } } for(i=0;i<a;i++) { for(j=0;j<a@@ ;j++) { if(n@@ [i][j]==0) { zuoi@@ =i; zuoj@@ =j; jump2@@ =1; break; } } if(@@ jump2@@ ==1) break; } for(i=a@@ -1;i>=0;i--) { for(j=@@ a@@ -1@@ ;j>=0;j--) { if(n@@ [i][j]==0) { youi@@ =i; youj@@ =j; jump1@@ =1; break; } } if(@@ jump1@@ ==1) break; } intnum; if(@@ youi@@ ==@@ zuoi@@ ||@@ youj@@ ==@@ zuoj@@ ) { num=0; } else { num@@ =(@@ youi@@ -@@ zuoi@@ -1)*(@@ youj@@ -@@ zuoj@@ -1); } printf("%d",@@ num); return0; }  
c -1
h -1
0

intmain(){ int@@ sixty@@ [100]; intn,i,j,@@ a; structpatient{ charnum[@@ 11]; intage; }@@ peo@@ [100]; scanf("%d",&n); for(i=0;i<n;i++){ scanf("%s%d",@@ peo@@ [i].num,&@@ peo@@ [i].age); if(@@ peo@@ [i].age>=60){ sixty@@ [i]=@@ peo@@ [i].age; }else{ sixty@@ [i]=0; } } for(j=0;j<n-1@@ ;j++){ for(i=n-1;i@@ >@@ j@@ ;i--){ if(@@ sixty@@ [i-1]@@ <@@ sixty@@ [i]){ a=@@ sixty@@ [i-1]; sixty@@ [i-1@@ ]=@@ sixty@@ [i]; sixty@@ [i]=@@ a; } } } for(i=0;i<n;i++){ for(j=0;j<n;j++){ if(@@ sixty@@ [i]==@@ peo@@ [j].age@@ &&@@ sixty@@ [i]!=@@ sixty@@ [i-1]@@ ){@@ printf("%s\n",@@ peo@@ [j].@@ num); } } } for(i=0;i<n;i++){ if(@@ peo@@ [i].age@@ <60){ printf("%s\n",@@ peo@@ [i].num); } } return0; }  
c -1
h -1
intmain() { inta,@@ b[100@@ ][@@ 15],@@ c,@@ i,@@ m,@@ x,y,@@ n,@@ e; c=0; i=0; for(m=0;m<@@ 16@@ ;m++){ scanf("%d",&a); if(a@@ !=0){ b[i]@@ [m]=@@ a; } if(a@@ ==0){ for(x=0;x@@ <m;@@ x@@ ++){ for(y=0;y@@ <m;@@ y@@ ++){ n=@@ b[i]@@ [x@@ ]@@ /@@ b[i]@@ [y@@ ]; e=@@ b[i]@@ [x@@ ]@@ %@@ b[i]@@ [y@@ ]; if(n==@@ 2@@ &&@@ e@@ ==0){ c++; } } } printf("%d\n",@@ c); c=0; m@@ =-1; i++; } if(a@@ ==-1) break; } return0; }  
c -1
h -1
0

intf@@ (inta,intb) { if(a<@@ b) return0; inti,@@ r@@ =1; for(i=b@@ ;i<=a;i++) { if(!@@ (a@@ %i@@ )@@ &&i@@ <=@@ a/@@ i) { r@@ +=@@ f(a@@ /i,i); } } return@@ r; } voidmain() { intn,m; scanf("%d",&n); while(n--) { scanf("%d",&m); int@@ result=@@ f(@@ m,@@ 2); printf("%d\n",@@ result); } }  
c -1
h -1
intn; structstu {intnum; charname@@ [27]; structstu*next; }; structstu*@@ creat@@ () {int@@ i@@ =0;@@ structstu@@ *head,@@ *p1,*p2; head@@ =p1@@ =p2@@ =(struct@@ stu*)malloc(sizeof(structstu)); scanf("%d%s",&@@ p2->@@ num,@@ p2->@@ name); while(i<@@ n-1) {@@ i@@ ++;@@ p2@@ =(struct@@ stu*)malloc(sizeof(structstu)); scanf("%d%s",&@@ p2->@@ num,@@ p2->@@ name); p1->next@@ =p2; p1=p2@@ ;} return@@ head@@ ;} voidmain() {@@ structstu@@ *p,*@@ head; intk,@@ u@@ ,@@ max=0,@@ maxnum@@ ; inta[@@ 26]={0}; scanf("%d",&n); head=@@ p=@@ creat@@ (); for(k=0;k<n;k++) {@@ for(@@ u@@ =0;@@ p->@@ name@@ [@@ u@@ ]!='\0'@@ ;@@ u@@ ++) a[@@ p->@@ name@@ [@@ u@@ ]@@ -'A']++; p=p->next; } for(k=0;k<26;k++) if(a[k]@@ >max){max=@@ a[k]@@ ;@@ maxnum@@ =k@@ ;} printf("%c\n%d\n",@@ maxnum@@ +'A',@@ max); p=head; for(k=0;k<n;k++){ for(@@ u@@ =0;@@ p->@@ name@@ [@@ u@@ ]!='\0'@@ ;@@ u@@ ++) if(p->@@ name@@ [@@ u@@ ]==@@ maxnum@@ +'@@ A')@@ {@@ printf("%d\n",p->@@ num@@ );break;} p=p->next; }}  
c -1
h -1
0

int@@ fib@@ (inta,int@@ e); intmain(){ intn,@@ b,@@ i; scanf("%d",&n); for(i=1;i<=n;i++){ scanf("%d",&b); printf("%d\n",@@ fib@@ (b,@@ 2)); } scanf("%d",&n); return0; } int@@ fib@@ (inta,int@@ e@@ ){ intj,@@ c,d; c=1; if(a@@ <=@@ e@@ )@@ return1; for(j=@@ e@@ ;j<=@@ sqrt(@@ a)@@ ;j++){ if(a%@@ j@@ ==0){ d=@@ a/@@ j; c=@@ c+@@ fib@@ (@@ d@@ ,j); } } return@@ c; }  
c -1
h -1
intmain() { int*@@ a[100]; int@@ k@@ ,*@@ m@@ ,*@@ n,@@ i,@@ plus@@ =0,@@ j,@@ l; scanf("%d",&k); m=@@ (int*)malloc(@@ 100*sizeof(int)); n=@@ (int*)malloc(@@ 100*sizeof(int)); for(i=0;i<k;i++) { scanf("%d",@@ m@@ +i); scanf("%d",@@ n@@ +i); a[i]=@@ (int*)malloc(@@ ((@@ *(@@ m@@ +i)@@ )*(@@ *(@@ n@@ +i)@@ ))@@ *sizeof(int)); for(j=0@@ ;j@@ <*@@ (m@@ +i)@@ ;j++) { for(l=0;l@@ <*@@ (n@@ +i@@ );@@ l++) scanf("%d",@@ a[i]+@@ (j@@ *(*(@@ n@@ +i)@@ )+@@ l@@ )); } } for(i=0;i<k;i++) { for(j=0@@ ;j@@ <*@@ (m@@ +i)@@ ;j++) { plus@@ =@@ plus@@ +@@ (*(@@ a[i]+@@ (j@@ *(*(@@ n@@ +i)@@ ))@@ )); plus@@ =@@ plus@@ +@@ (*(@@ a[i]+@@ ((@@ j@@ +1)@@ *(*(@@ n@@ +i)@@ )@@ -1)@@ )); } for(l=1;@@ l<@@ (*(@@ n@@ +i)@@ )@@ -1;@@ l++) { plus@@ =@@ plus@@ +@@ (*(@@ a[i]+@@ l@@ )); plus@@ =@@ plus@@ +@@ (*(@@ a[i]+@@ l@@ +@@ (*(@@ m@@ +i)@@ -1)*(@@ *(@@ n@@ +i)@@ )@@ )); } printf("%d\n",@@ plus@@ ); plus@@ =0; } return0; }  
c -1
h -1
0

intmain() { introw,col; cin>>row>>col; inta[100][100]; int@@ (*@@ aa@@ )@@ [100@@ ]=a; for(inti=0;i<row;i++) { for(intj=0;j<col;j++) { cin>>a[i][j]; } } for(inti=0;i<@@ col;i++) { int@@ r=0; int@@ c=i; while(@@ r@@ <=row-1@@ &&@@ c@@ >=0) { cout<<@@ *(@@ (*(@@ aa@@ +@@ r@@ ))@@ +c@@ )<<endl; r=r@@ +1; c=c@@ -1; } } for(inti=1;i<@@ row;i++) { int@@ r@@ =i; int@@ c=@@ col-1; while(@@ r@@ <=row-1@@ &&@@ c@@ >=0) { cout<<@@ *(@@ (*(@@ aa@@ +@@ r@@ ))@@ +c@@ )<<endl; r=r@@ +1; c=c@@ -1; } } return0; }  
c -1
h -1
intmain() { intn,@@ year@@ [100],@@ i,j,@@ year2@@ [100]={0},@@ t,@@ k; char@@ num@@ [100][10],@@ num2@@ [100][10],@@ p; scanf("%d",&n); for(i=0;i<n;i++) { scanf("%s",@@ num[i]); scanf("%d",&@@ year@@ [i]); } for(i=0;i<n;i++) { if(@@ year[i]@@ >=60) { for(k=0;k<@@ 10@@ ;k++) {@@ num2@@ [i]@@ [k]=@@ num[i]@@ [k]@@ ;} year2@@ [i]=@@ year@@ [i]; } } for(j=0;j<n-1;j++) for(i=0;i<n@@ -j@@ -1;i++) { if(@@ year2@@ [i]<@@ year2@@ [i+1]) { t=@@ year2@@ [i]; year2@@ [i]=@@ year2@@ [i+1]; year2@@ [i+1]=@@ t; for(k=0;k<@@ 10@@ ;k++) {@@ p=@@ num2@@ [i]@@ [k]; num2@@ [i]@@ [k]=@@ num2@@ [i+1@@ ][k@@ ]; num2@@ [i+1@@ ][k@@ ]=@@ p; } } } for(i=0;i<n;i++) { if(@@ year2@@ [i]!=0) printf("%s\n",@@ num2@@ [i]); } for(i=0;i<n;i++) { if(@@ year[i]@@ <60) printf("%s\n",@@ num[i]); } return0; }  
c -1
h -1
0

intmain() { structpatient { charid[10]; intage; }; intn,i,j,k; structpatient@@ p@@ [100]; scanf("%d",&n); for(i=0;i<n;i++) scanf("%s%d",@@ p[i].@@ id,@@ &@@ p[i].age); for(i=1;i<n;i++) { if(p@@ [i].age>=60) { j=0; while(j@@ <i@@ &&p@@ [j].age@@ >=@@ p@@ [i].age@@ )@@ j++; if(j<@@ i) { structpatient@@ tmp@@ =p@@ [i]; for(k=i@@ ;k@@ >@@ j@@ ;k--) p@@ [k]=@@ p@@ [k@@ -1]; p@@ [j]=@@ tmp; } } } for(i=0;i<n;i++) printf("%s\n",@@ p@@ [i].id); return0; }  
c -1
h -1
enum@@ { MAX_NUM@@ =@@ 25 }; intmain(){ int@@ missle_num@@ =0; int@@ height@@ [@@ MAX_NUM@@ ][2@@ ]; inti,j; intmax=0; scanf("%d",&@@ missle_num@@ ); for(i=0;i<@@ missle_num@@ ;i++){ scanf("%d",&@@ height@@ [i]@@ [0]); height@@ [i]@@ [1]@@ =1; } for(i=0;i<@@ missle_num@@ ;i++){ } for(i=0;i<@@ missle_num@@ ;i++){ for(j=i-1@@ ;j>=0;j--){ if(@@ height@@ [i][0]@@ <=@@ height@@ [j]@@ [0]){ if(@@ height@@ [i]@@ [1]@@ <@@ height@@ [j]@@ [1]@@ +1@@ ){ height@@ [i]@@ [1]=@@ height@@ [j]@@ [1]@@ +1; } } } } max=0; for(i=0;i<@@ missle_num@@ ;i++){ if(max<@@ height@@ [i]@@ [1]@@ ){ max=@@ height@@ [i]@@ [1]; } } printf("\n@@ %d\n",@@ max); return0; }  
c -1
h -1
0

intmain() { intn,k,@@ judge@@ =0; cin>>n>>k; inta[1000]; for(inti=0;i<n;i++) cin>>a[i]; for(inti@@ =0;@@ judge@@ ==0&&@@ i@@ <@@ n-1;i++) { for(intj=i+1@@ ;j<n;j++) { if(a[i]+a[j]==k) judge@@ =1; } } if(@@ judge@@ ==1) cout<<"yes"; if(@@ judge@@ ==0) cout<<"no"; return0; }  
c -1
h -1
intmain(intargc,char*argv[]) { int@@ day,@@ month,@@ year; scanf("%d%d%d",&year,&month,&day); if((year%4==0&&year%100!=0)||(year%400==0)) { switch(month) { case1: { day=@@ day; break; } case2: { day=day+@@ 31; break; } case3: { day=@@ day@@ +31+@@ 29; break; } case4: { day=@@ day+31+29@@ +31; break; } case5: { day=@@ day+31+29@@ +31+30@@ ; break; } case6: { day=@@ day+31+29@@ +31+30@@ +31; break; } case7: { day=@@ day+31+29@@ +31+30+31+30@@ ; break; } case8: { day=@@ day+31+29@@ +31+30+31+30@@ ; break; } case9: { day=@@ day+31+29@@ +31+30+31+30@@ +31; break; } case10: { day=@@ day+31+29@@ +31+30+31+30@@ +31+30@@ ; break; } case11: { day=@@ day+31+29@@ +31+30+31+30@@ +31+30@@ ; break; } case12: { day=@@ day+31+29@@ +31+30+31+30@@ +31+30@@ +31; break; } } } else { switch(month) { case1: { day=@@ day; break; } case2: { day=day+@@ 31; break; } case3: { day=@@ day@@ +31+@@ 28; break; } case4: { day=@@ day+31+28@@ +31; break; } case5: { day=@@ day+31+28@@ +31+30@@ ; break; } case6: { day=@@ day+31+28@@ +31+30@@ +31; break; } case7: { day=@@ day+31+28@@ +31+30+31+30@@ ; break; } case8: { day=@@ day+31+28@@ +31+30+31+30@@ +31; break; } case9: { day=@@ day+31+28@@ +31+30+31+30+31+@@ 31; break; } case10: { day=@@ day+31+28@@ +31+30+31+30+31+31+30@@ ; break; } case11: { day=@@ day+31+28@@ +31+30+31+30+31+31+30@@ +31; break; } case12: { day=@@ day+31+28@@ +31+30+31+30+31+31+30+31+30@@ ; break; } } } printf("%d\n",@@ day); return0; }  
c -1
h -1
0

int@@ fj@@ (inta,int@@ zs@@ ){ intk,@@ n,@@ z; n@@ =0;@@ z=0; for(k=@@ zs@@ ;k<=@@ sqrt(@@ a)@@ ;k++){ if(a%@@ k@@ ==0){@@ n=n+@@ fj@@ (a@@ /@@ k,@@ k); z@@ =1;} } if(z@@ ==0){@@ return@@ 1@@ ;} else{@@ return@@ n@@ +1;} } intmain(){ intm,@@ i,@@ t; scanf("%d",&m); for(i=0;i<m;i++){ scanf("%d",&t); printf("%d\n",@@ fj@@ (@@ t,@@ 2)); } return0; }  
c -1
h -1
intmain() { intk; cin>>k; inth@@ [50@@ ]; inti,j; for(i=0;i<@@ k;i++)@@ cin>>@@ h@@ [i]; intnum[@@ 50@@ ],@@ max; num@@ [0]=1; for(i=1;i<k;i++) { max=0; for(j=0;j<i;j++) { if(h@@ [j]>=@@ h@@ [i]@@ &&@@ num[j]@@ >max)max=@@ num@@ [j]; } num[i]=@@ max+1; } max=0; for(i=1;i<k;i++) { if(num@@ [i]@@ >max)max=@@ num[i]; } cout<<max<<endl; return0; }  
c -1
h -1
0

structstudent { long@@ num; intmath; intchinese; structstudent*next; }; long@@ stu_num@@ ; structstudent*@@ max1@@ ,*@@ max2@@ ,*@@ max3@@ ; structstudent*creat@@ (void) { structstudent*head,*p1,*p2; long@@ n; p1=p2=(structstudent*)malloc(LEN); scanf("%ld%d%d",&@@ p1->num,&p1->@@ math@@ ,&p1->@@ chinese); head=NULL; n=0; while(n@@ <@@ stu_num@@ ) { n++; if(n==1) head=p1; else p2->next=p1; p2=p1; p1=(structstudent*)malloc(LEN); scanf("%ld%d%d",&@@ p1->num,&p1->@@ math@@ ,&p1->@@ chinese); } p2->next=NULL; return(head); } void@@ Max1@@ (structstudent*head@@ ,@@ long@@ stu_num@@ ) { structstudent*@@ q1@@ ; q1@@ =head; max1=@@ head; for(;@@ q1@@ !=NULL;@@ ) if((@@ max1@@ ->@@ math+@@ max1@@ ->@@ chinese@@ )@@ <(@@ q1->@@ math+@@ q1->@@ chinese@@ )) { max1=@@ q1@@ ; q1=@@ q1@@ ->next; } else q1=@@ q1@@ ->next; printf("%ld%d\n",@@ max1@@ ->num,@@ max1@@ ->@@ math+@@ max1@@ ->@@ chinese); } void@@ Max2@@ (structstudent*head@@ ,@@ long@@ stu_num@@ ) { structstudent*@@ q2@@ ; q2@@ =head; if(head@@ !=@@ max1@@ ) max2=@@ head; else max2=@@ q2@@ ->next; for(;@@ q2@@ !=NULL;@@ ) if((@@ max2@@ ->@@ math+@@ max2@@ ->@@ chinese@@ )@@ <(@@ q2@@ ->@@ math+@@ q2@@ ->@@ chinese@@ )&&@@ q2@@ !=@@ max1@@ ) { max2=@@ q2@@ ; q2@@ =@@ q2@@ ->next; } else q2@@ =@@ q2@@ ->next; printf("%ld%d\n",@@ max2@@ ->num,@@ max2@@ ->@@ math+@@ max2@@ ->@@ chinese); } void@@ Max3@@ (structstudent*head@@ ,@@ long@@ stu_num@@ ) { structstudent*@@ q3@@ ; q3@@ =head; for(;@@ q3@@ !=NULL;@@ ) if(@@ q3@@ ==@@ max1@@ ||@@ q3@@ ==@@ max2@@ ) q3@@ =@@ q3@@ ->next; else { max3=@@ q3@@ ; break; } q3@@ =head; for(;@@ q3@@ !=NULL;@@ ) if((@@ max3@@ ->@@ math+@@ max3@@ ->@@ chinese@@ )@@ <(@@ q3@@ ->@@ math+@@ q3@@ ->@@ chinese@@ )&&@@ q3@@ !=@@ max1@@ &&@@ q3@@ !=@@ max2@@ ) { max3=@@ q3@@ ; q3@@ =@@ q3@@ ->next; } else q3@@ =@@ q3@@ ->next; printf("%ld%d\n",@@ max3@@ ->num,@@ max3@@ ->@@ math+@@ max3@@ ->@@ chinese); } voidmain() { structstudent*head; scanf("%ld",&@@ stu_num@@ ); head=creat(); Max1@@ (head,@@ stu_num@@ ); Max2@@ (head,@@ stu_num@@ ); Max3@@ (head,@@ stu_num@@ ); }  
c -1
h -1
intmain(){ intN@@ ,i; cin>>@@ N; int@@ Max1@@ =0,@@ Max2@@ =0,@@ Max3@@ =0,@@ Nb@@ [4@@ ]; structstudent{ int@@ Number@@ ; int@@ Chinese@@ ; int@@ Math@@ ; int@@ Total@@ ; }@@ people@@ [@@ 111111@@ ]; for(i=1;i<=@@ N@@ ;i++){ cin>>@@ people@@ [i].@@ Number@@ >>@@ people@@ [i].@@ Chinese@@ >>@@ people@@ [i].@@ Math@@ ; people@@ [i].@@ Total@@ =@@ people@@ [i].@@ Chinese@@ +@@ people@@ [i].@@ Math@@ ; } for(i=1;i<=@@ N@@ ;i++){ if(@@ Max1@@ <@@ people@@ [i].@@ Total@@ ){ Nb@@ [1]=@@ i; Max1@@ =@@ people@@ [i].@@ Total@@ ; } } for(i=1;i<=@@ N@@ ;i++){ if((@@ Max2@@ <@@ people@@ [i].@@ Total@@ )&&(i@@ !=@@ Nb@@ [1]@@ )){ Nb@@ [2]=@@ i; Max2@@ =@@ people@@ [i].@@ Total@@ ; } } for(i=1;i<=@@ N@@ ;i++){ if((@@ Max3@@ <@@ people@@ [i].@@ Total@@ )&&(i@@ !=@@ Nb@@ [1]@@ )&&(i@@ !=@@ Nb@@ [2@@ ])@@ ){ Nb@@ [3@@ ]=i; Max3@@ =@@ people@@ [i].@@ Total@@ ; } } for(i=1;i<=@@ 3;i++){ cout<<@@ people@@ [@@ Nb@@ [i]@@ ].@@ Number@@ <<""<<@@ people@@ [@@ Nb@@ [i]@@ ].@@ Total@@ ; if(i<@@ 3) cout<<endl; } return0; }  
c -1
h -1
1


int@@ calc@@ (int@@ *,@@ int@@ ,int); intmain(){ intk,@@ h@@ [25],@@ i=0; cin>>k; while(cin>>@@ h@@ [i]){ i++; if(i==@@ k@@ )break; } cout<<@@ calc@@ (@@ h,@@ k,@@ (@@ 1@@ <<@@ 31@@ -1)); } int@@ calc@@ (int*@@ h@@ ,int@@ k,int@@ limit@@ ){ inti,@@ ret@@ =0,@@ t=0; for(i=0;i<k;i++){ if(h@@ [i]>@@ limit@@ )continue; t@@ =1@@ +@@ calc@@ (@@ h@@ +i@@ +1,@@ k@@ -i@@ -1,@@ h[i]); if(t@@ >@@ ret@@ )@@ ret@@ =t; } return@@ ret@@ ; }  
c -1
h -1
intmain() { inti,j,@@ a[@@ 16@@ ],b[100],@@ changdu@@ =0,@@ panduan@@ =1,@@ geshu@@ =0; while(1){ for(i=0;i<16@@ ;i++){ scanf("%d",&a[i]); changdu@@ =i; if(a[i]==@@ -1){ panduan@@ =0; break; } if(a[i]@@ ==0){ break; } } if(@@ panduan@@ ==0) break; geshu@@ =0; for(i=0;i<@@ changdu@@ ;i++){ for(j=0;j<@@ changdu@@ ;j++){ if(a[i]==a[j]@@ *2@@ ){ geshu@@ ++; } } } printf("%d\n",@@ geshu@@ ); } return0; }  
c -1
h -1
0

structstudent { intID; intchinese; intmath; inttotal; }@@ st@@ [4@@ ],@@ temp; intmain() { intn,@@ cnt@@ =@@ 3@@ ; cin>>n; for(inti=0;i<@@ 3;i++) { cin>>@@ st[i].@@ ID@@ >>@@ st[i].@@ chinese@@ >>@@ st[i].@@ math; st[i].@@ total=@@ st[i].@@ chinese+@@ st[i].@@ math; } do{ cin>>@@ st@@ [3].@@ ID@@ >>@@ st@@ [3].@@ chinese@@ >>@@ st@@ [3].@@ math; st@@ [3].@@ total=@@ st@@ [3].@@ chinese+@@ st@@ [3].@@ math; cnt@@ ++; for(inti=1;i<@@ 4;i++) { for(intj=0;j<@@ 4@@ -i;j++) { if(@@ st@@ [j+1].@@ total>@@ st@@ [j].@@ total) { temp=@@ st@@ [j]; st@@ [j]=@@ st@@ [j+1]; st@@ [j+1]=temp; } } }@@ }while(@@ cnt@@ <@@ n); for(inti=0;i<@@ 3;i++) { cout<<@@ st[i].@@ ID@@ <<""<<@@ st[i].@@ total@@ <<endl; } return0; }  
c -1
h -1
structstudent { intid; int@@ x,y; ints; }@@ d[@@ 100001@@ ],@@ t; intmain() { intn; cin>>n; for(inti=1;i<=n;i++) { cin>>@@ d@@ [i].@@ id@@ >>@@ d@@ [i].@@ x@@ >>@@ d@@ [i].@@ y; d@@ [i].@@ s=@@ d@@ [i].@@ x@@ +d@@ [i].@@ y; } for(inti=1;i<=@@ 3;i++) for(intj=1;j<=@@ n@@ -i;j++) if(d@@ [j].@@ s@@ >=@@ d@@ [j+1].@@ s) { t=@@ d@@ [j]; d@@ [j]=@@ d@@ [j+1]; d@@ [j+1]=t; } for(inti=@@ n@@ ;i@@ >=@@ n-2@@ ;i--) cout<<@@ d@@ [i].@@ id@@ <<''<<@@ d@@ [i].@@ s@@ <<endl; return0; }  
c -1
h -1
1


intsum; voidf@@ (intx,int@@ i){ if(x@@ ==1)@@ sum++; for(@@ ;i<=@@ x;i++) if(x@@ %i==0)@@ f(@@ x@@ /i,i); return; } intmain(){ intt,@@ a,@@ i=@@ 2; cin>>t; for(a=0;a@@ <@@ t@@ ;a@@ ++){ intx; cin>>x; int@@ ans@@ =1; for(i=2@@ ;i<@@ sqrt(@@ x@@ );i++){ sum=0; if(x@@ %i==0)@@ f(@@ x@@ /i,i); ans=@@ ans@@ +@@ sum; } cout<<ans@@ <<endl; } return0; }  
c -1
h -1
structstudent { intnum; int@@ yw@@ ; int@@ sx; }; intmain() { intn,i,@@ x=0,@@ y=0,@@ z=0; scanf("%d",&n); structstudent@@ a[@@ n]; intb[@@ n]; for(i=0;i<n;i++) { scanf("%d%d%d",&a[i].@@ num,&@@ a[i].@@ yw@@ ,&a[i].@@ sx@@ ); b[i]=@@ a[i].@@ yw@@ +a[i].@@ sx; } for(i=1;i<n;i++) { if(b[@@ x@@ ]<@@ b[i]) x@@ =i; } printf("%d%d\n",@@ a[x@@ ].num,@@ b[@@ x@@ ]); for(i=1;i<n;i++) { if(i==@@ x)@@ continue; if(b[@@ y@@ ]<@@ b[i]) y@@ =i; } printf("%d%d\n",@@ a[@@ y@@ ].num,@@ b[@@ y@@ ]); for(i=1;i<n;i++) { if(i==@@ x)@@ continue; if(i==@@ y)@@ continue; if(b[@@ z@@ ]<@@ b[i]) z@@ =i; } printf("%d%d\n",@@ a[@@ z@@ ].num,@@ b[@@ z@@ ]); getchar(); getchar(); }  
c -1
h -1
0

intmain() { intyear,month,@@ date@@ ,@@ February@@ ,@@ day; scanf("%d%d%d",&@@ year,@@ &@@ month,@@ &@@ date@@ ); if((year%4==0&&year%100!=0)||(year%400==0)) February@@ =@@ 29; else February@@ =@@ 28; if(month==1) day=@@ date; if(month==2) day@@ =31+@@ date; if(month==3) day@@ =31+@@ February@@ +@@ date; if(month==@@ 4) day@@ =31+@@ February@@ +31+@@ date; if(month==@@ 5) day@@ =31+@@ February@@ +31+30@@ +@@ date; if(month==@@ 6) day@@ =31+@@ February@@ +31+30+31+@@ date; if(month==@@ 7) day@@ =31+@@ February@@ +31+30+31+30@@ +@@ date; if(month==8) day@@ =31+@@ February@@ +31+30+31+30+31+@@ date; if(month==@@ 9) day@@ =31+@@ February@@ +31+30+31+30+31+31+@@ date; if(month==@@ 10) day@@ =31+@@ February@@ +31+30+31+30+31+31+30@@ +@@ date; if(month==@@ 11) day@@ =31+@@ February@@ +31+30+31+30+31+31+30+31+@@ date; if(month==@@ 12) day@@ =31+@@ February@@ +31+30+31+30+31+31+30+31+30@@ +@@ date; printf("%d\n",@@ day); return0; }  
c -1
h -1
intmain() { intn,a[@@ 100000@@ ],b[@@ 100000@@ ],c[@@ 100000],@@ sum[@@ 100000],@@ i,@@ t1@@ ,@@ t2@@ ,@@ t3@@ ,@@ s1,@@ s2,@@ s3@@ ; scanf("%d",&n); for(i=0;i<n;i++) {@@ scanf("%d%d%d",&@@ a[i],&@@ b[i]@@ ,&@@ c[i]); sum[i]=@@ b[i]@@ +@@ c[i]@@ ;} for(i=0,@@ t1@@ =0,@@ s1@@ =@@ a[0]@@ ;i<n;i++) {@@ if(sum[i]>@@ t1@@ ) {@@ t1@@ =@@ sum[i]; s1@@ =@@ a[i]@@ ;}} printf("%d%d\n",@@ s1,@@ t1@@ ); for(i=0,@@ t2@@ =0,@@ s2=@@ a[0]@@ ;i<n;i++) {@@ if(a[i]==@@ s1@@ )continue; if(sum[i]>@@ t2@@ ) {@@ t2@@ =@@ sum[i]; s2=@@ a[i]@@ ;}} printf("%d%d\n",@@ s2,@@ t2@@ ); for(i=0,@@ t3@@ =0,@@ s3=@@ a[0]@@ ;i<n;i++) {@@ if(a[i]==@@ s1@@ ||@@ a[i]==@@ s2@@ )continue; if(sum[i]>@@ t3@@ ) {@@ t3@@ =@@ sum[i]; s3=@@ a[i]@@ ;}} printf("%d%d\n",@@ s3@@ ,@@ t3@@ ); return0; }  
c -1
h -1
0

intsum=0; intm,n; void@@ Input@@ (int@@ (*@@ a)@@ [@@ 102@@ ]){ cin>>m>>n; for(inti=0;i<=@@ m-1@@ ;i++){ for(intj=0;j<=@@ n-1@@ ;j++){ cin>>*(*(a+i)+j); } } } void@@ Sum@@ (intx,int@@ y,int@@ (*@@ a)@@ [@@ 102@@ ]){ sum+=*(*(a@@ +@@ x@@ )+@@ y); if(x@@ ==0&&@@ y@@ <@@ n-1) Sum@@ (x,@@ y@@ +1,@@ a); elseif(x@@ <m-1@@ &&@@ y@@ ==@@ n-1) Sum@@ (x@@ +1,@@ y,@@ a); elseif(x@@ ==@@ m-1@@ &&@@ y@@ >0) Sum@@ (x,@@ y@@ -1,@@ a); elseif(@@ y@@ ==0&&@@ x@@ >1) Sum@@ (x@@ -1,@@ y,@@ a); else return; } intmain(){ inta[@@ 102@@ ][@@ 102@@ ]; intn; cin>>n; for(inti=1;i<=@@ n;i++){ sum=0; Input@@ (a); Sum@@ (@@ 0,0,@@ a); if(i!=@@ 1) cout<<endl; cout<<@@ sum; } return0; }  
c -1
h -1
intmain(){ intn=0,@@ i=0,@@ j=0; cin>>n; structstudent{ int@@ stuid@@ ; int@@ chin@@ ; intmath; }stu[@@ n@@ ],@@ t; for(i=0;i<n;i++){ cin>>@@ stu[i].@@ stuid@@ >>stu[i].@@ chin@@ >>stu[i].@@ math; } for(i=0;i<3;i++) for(j=0;j<n-1;j++) if((@@ stu[j].@@ chin@@ +@@ stu[j].@@ math@@ )@@ >=@@ (stu@@ [j+1].@@ chin +@@ stu[j+1].@@ math@@ )){ t=@@ stu@@ [j]; stu@@ [j]=@@ stu@@ [j+1]; stu@@ [j+1]=t; } for(i=n-1;i@@ >@@ n-@@ 4@@ ;i--) cout<<@@ stu[i].@@ stuid@@ <<""<<@@ stu[i].@@ chin@@ +stu[i].@@ math@@ <<endl; return0; }  
c -1
h -1
0

intmain() { charstr[256],@@ sub[256],@@ rep@@ [256],@@ temp@@ [256]; char*@@ p; gets(str); gets(sub); gets(@@ rep); p=strstr(@@ str,@@ sub); if(p@@ !=NULL@@ ){ *p@@ =0; strcpy(@@ temp,@@ str); strcat(@@ temp,@@ rep); strcat(@@ temp,@@ p+@@ strlen(@@ sub@@ )); strcpy(@@ str,@@ temp); } printf("%s\n",@@ str); return0; }  
c -1
h -1
voidmain() { inta,b,c,@@ d=0; scanf("%d%d%d",&a,&b,&c); if(b@@ >=@@ 2)@@ d=d+@@ 31; if(b@@ >=@@ 3)@@ d=d+@@ 28; if(b@@ >=@@ 4)@@ d=d+@@ 31; if(b@@ >=@@ 5@@ )@@ d=d+@@ 30; if(b@@ >=@@ 6@@ )@@ d=d+@@ 31; if(b@@ >=@@ 7@@ )@@ d=d+@@ 30; if(b@@ >=@@ 8@@ )@@ d=d+@@ 31; if(b@@ >=@@ 9@@ )@@ d=d+@@ 31; if(b@@ >=@@ 10@@ )@@ d=d+@@ 30; if(b@@ >=@@ 11@@ )@@ d=d+@@ 31; if(b@@ >=@@ 12@@ )@@ d=d+@@ 31; d=d@@ +c; if(((@@ a%4==0&&a%100!=0@@ )||(@@ a%@@ 400==0)@@ )&&@@ b@@ >2) d=d@@ +1; printf("%d",d); }  
c -1
h -1
0

intmain(){ intj,@@ i,@@ n,k,@@ s=0; scanf("%d%d\n",&n,&@@ k); intsz[@@ n]; for(i=0;i<=@@ n-1;i++){ scanf("%d",&sz[i]); for(j=0;j<=@@ i;j++){ if(sz[i]+sz@@ [j]==k){ s@@ ++;@@ }}} if(s@@ >0@@ ){printf("yes");} else{printf("no");} return0; }  
c -1
h -1
intmain() { intk=0,@@ o@@ =0,@@ i=0,j=0,@@ m=0,@@ n=0,@@ num=0,@@ sum=0; scanf("%d",&k); for(@@ o@@ =0;@@ o@@ <k;@@ o@@ ++) { scanf("%d%d",&m,&n); for(i=0;i<m;i++) { for(j=0;j<n;j++) { scanf("%d",&num); if(i==0||i==@@ m-1@@ ||j@@ ==0||j==@@ n-1) { sum=sum+@@ num; } } } printf("%d\n",sum); sum=0; } return0; }  
c -1
h -1
0

intmain() { inta[@@ 1000]={0},@@ n,k,@@ i,j,@@ judge@@ =0; cin>>n>>k; for(i=0;i<n;i++) cin>>a[i]; for(i=0;i<@@ (n-1);i++) { for(j=i+1;j<n;j++) { if((@@ a[i]+@@ a[j]@@ )==@@ k) { cout<<"yes"; judge@@ =1; break; } } if(@@ judge@@ ) break; } if(@@ judge@@ ==0) cout<<"no"; return0; }  
c -1
h -1
void@@ prt@@ (inta[100@@ ][100@@ ],int@@ i,@@ int@@ j@@ ,int@@ m,intn) {@@ static@@ intt=0; printf("%d\n",a[i][j]); if(i==@@ m-1@@ ||j@@ ==0) {@@ t++; if(t@@ <@@ n)@@ prt@@ (a,0,@@ t,@@ m,n); elseif(@@ t@@ <@@ m+@@ n-1)@@ prt@@ (a,@@ t@@ -n@@ +1,@@ n-1@@ ,@@ m,n); } else@@ prt@@ (a,@@ i@@ +1@@ ,j@@ -1,@@ m,n); } voidmain() { inti,j,@@ m,n,@@ a[100][100]; scanf("%d%d",&m,&n); for(i=0;i<m;i++) for(j=0;j<n;j++) {@@ scanf("%d",&a[i]@@ [j]@@ );} prt@@ (a,@@ 0,0,@@ m,n); }  
c -1
h -1
0

intmain(){ int@@ m1,@@ m2@@ ,i,@@ t,@@ d; double@@ a,b; char@@ dna1@@ [501]; char@@ dna2@@ [501]; t=0; d=0; scanf("%lf",&a); getchar(); scanf("%s",&@@ dna1); scanf("%s",&@@ dna2); m1@@ =strlen(@@ dna1); m2@@ =strlen(@@ dna2); if(@@ m1@@ !=@@ m2@@ ){@@ printf("error");@@ d@@ =1;} else{ for(i=0;i<@@ m1@@ ;i++){ if(dna1@@ [i]==@@ dna2@@ [i]@@ ){@@ t=t@@ +1;} } } b@@ =1@@ .@@ 000000@@ *@@ t@@ /@@ m1@@ ; if(d@@ ==0){@@ for(i=0;i<@@ m1@@ ;i++){ if((@@ dna1@@ [i]!='A')&&(@@ dna1@@ [i]!='T')&&(@@ dna1@@ [i]!='C')&&(@@ dna1@@ [i]!='G')@@ ){@@ printf("error"); d=1; break;} } } if(d@@ ==0){@@ for(i=0;i<@@ m2@@ ;i++){ if((@@ dna2@@ [i]!='A')&&(@@ dna2@@ [i]!='T')&&(@@ dna2@@ [i]!='C')&&(@@ dna2@@ [i]!='G')@@ ){@@ printf("error");} } } if((@@ m1@@ ==@@ m2@@ )&&(@@ d@@ ==0)@@ ){ if(b@@ >@@ a@@ ){printf("yes");} else{printf("no");} } return0; }  
c -1
h -1
intmain() { intn,@@ i=0,@@ x; scanf("%d",&n); intage@@ [100]; char@@ num@@ [100][10]; for(i=0;i<n;i++) { scanf("%s%d",@@ num[i]@@ ,&@@ age[i]); if(age[i]@@ <60) age@@ [i]=0; } loop@@ :@@ for(i=0;i<n;i++) { x=0; if(age[i]@@ >=60) {@@ for(intj=0;j<n;j++) { if(age@@ [j]>@@ age@@ [i]) x=x@@ +1;} if(x@@ ==0) {@@ printf("%s\n",@@ num[i]); age@@ [i]=1; goto@@ loop@@ ;} } } for(i=0;i<n;i++) { if(age@@ [i]==0) printf("%s\n",@@ num[i]); } getchar(); getchar(); }  
c -1
h -1
0

intmain(){ intb,@@ c,d,@@ i; doublea,@@ e,@@ f; char@@ n[@@ 501],@@ m[@@ 501]; scanf("%lf",&a); scanf("%s",@@ n); scanf("%s",@@ m); b=strlen(@@ n); c=strlen(@@ m); d=0; if(b@@ !=@@ c){ d++; } for(i=0;i<b;i++){ if((@@ n@@ [i]!='A')&&(@@ n@@ [i]!='T')&&(@@ n@@ [i]!='C')&&(@@ n@@ [i]!='G')||(@@ m@@ [i]!='A')&&(@@ m@@ [i]!='T')&&(@@ m@@ [i]!='C')&&(@@ m@@ [i]!='G')){ d++; } } if(d@@ !=0){ printf("error"); }else{ e=0; for(i=0;i<b;i++){ if(n@@ [i]==@@ m@@ [i]){ e++; } } f=@@ e@@ /@@ b; if(f@@ >@@ a){ printf("yes"); }else{ printf("no"); } } return0; }  
c -1
h -1
int@@ init@@ (){ intk,@@ t,@@ m,n,@@ ans; cin>>k; while(@@ k){ k--; ans=0; cin>>m>>n; for(inti=0;i<@@ m;i++){ for(intj=0;j<n;j++){ cin>>t; if(i==0||i==@@ m-1@@ ||j@@ ==0||j==@@ n-1)@@ ans@@ +=@@ t; } } cout<<ans@@ <<endl; } return0; } intmain(){ init@@ (); return0; }  
c -1
h -1
0

intfenjie@@ (intn,int@@ min) {@@ inti,@@ a=0,@@ x=0; for(i=2;i<=n;i++) if(n%i==0) a=@@ a@@ +1; if(n==1) return1; else { for(i=min@@ ;i<=n;i++) { if(n%i==0) x=x+@@ fenjie@@ (n/i,i); } return@@ x; } } main() { int@@ t@@ ,j,@@ num; scanf("%d",&t); for(j=1;j<=@@ t;j++) { scanf("%d",&num); printf("%d\n",@@ fenjie@@ (num,@@ 2)@@ );} }  
c -1
h -1
inta[100],b[100],@@ c[100],@@ m,n; voidinput() { inti; scanf("%d%d",&m,&n); for(i=0;i<m;i++) { scanf("%d",&a[i]); } for(i=0;i<n;i++) { scanf("%d",&b[i]); } } void@@ az@@ () { inti,j,t; for(j=0;j<m;j++) { for(i=0;i<m@@ -1-j;i++) { if(a[i]>a[i+1]) { t=a[i]; a[i]=a[i+1]; a[i+1]=@@ t; } } } for(j=0;j<n;j++) { for(i=0;i<n@@ -1-j;i++) { if(b[i]>b[i+1]) { t=b[i]; b[i]=b[i+1]; b[i+1]=@@ t; } } } } void@@ jch@@ () { intj; for(j=0;j<m;j++) { c[j]=@@ a[j]; } for(j=@@ m@@ ;j<@@ m+@@ n;j++) { c[j]=@@ b@@ [j@@ -@@ m]; } } voidoutput@@ () { inti; for(i=0;i<m+@@ n-1;i++) { printf("%d",c[i]); } printf("%d",c[@@ m+@@ n-1]); } voidmain() { input(); az@@ (); jch@@ (); output@@ (); }  
c -1
h -1
0

intmain() { charstr@@ [257@@ ]={'\0'},@@ substr@@ [257@@ ]={'\0'},@@ replace@@ [257@@ ]={'\0'}; cin>>@@ str@@ >>@@ substr@@ >>@@ replace@@ ; char*@@ p=strstr(@@ str,@@ substr@@ ); inti=0,@@ flag@@ =strlen(@@ substr@@ ); if(p@@ ==NULL) cout<<str@@ <<endl; else { for(i=0;@@ str@@ +i@@ <p@@ ;i++) cout<<str@@ [i]; cout<<@@ replace@@ ; for(i@@ =i+@@ flag@@ ;i<@@ strlen(@@ str@@ );i++) cout<<str@@ [i]; } return0; }  
c -1
h -1
intmain() { intn; cin>>n; int@@ zz@@ [@@ 20000]; inti,j; for(i=0;i<n;i++) cin>>@@ zz@@ [i]; for(i=0;i<n;i++) { for(j=i+1;j<n;j++) { if(@@ zz@@ [i]==@@ zz@@ [j]) { zz@@ [j]@@ -=@@ zz@@ [i]; } } } cout<<@@ zz@@ [0]; for(i=1;i<n;i++) { if(@@ zz@@ [i]!=0) cout<<""<<@@ zz@@ [i]; } }  
c -1
h -1
0

intnum; voidf@@ (intn,int@@ i); main() { inti,j,k,n,@@ order@@ ,@@ top@@ ; for(@@ scanf("%d",&@@ order@@ );@@ order@@ >=1@@ ;@@ order@@ --) { scanf("%d",&n); num=0; top@@ =@@ (int)sqrt(@@ n); for(i=1;i<=@@ top@@ ;i++) { if(n%i==0) { num++; f(@@ n@@ /i,i); } } printf("%d\n",num); } } voidf@@ (intn,int@@ btm@@ ) { if(@@ btm@@ ==1)@@ return; int@@ top@@ ,i; top@@ =@@ (int)sqrt(@@ n); if(@@ top@@ >=@@ btm@@ ) { for(i=@@ btm@@ ;i<=@@ top@@ ;i++) { if(n%i==0) { num++; f(@@ n@@ /i,i); } } } }  
c -1
h -1
intn; static@@ intc[@@ 25]; intmax@@ (inta,intb) { if(a@@ >=@@ b) return(@@ a); else@@ return(@@ b); } intf(int@@ mx@@ ,int@@ st@@ ) { for(;@@ st@@ <n;@@ st@@ ++) if(@@ c[@@ st@@ ]<=@@ mx@@ ) return(@@ max(@@ f(@@ c[@@ st@@ ],@@ st@@ +1)@@ +1,@@ f(@@ mx@@ ,@@ st@@ +1)@@ )); return0; } intmain() { inti,@@ s; scanf("%d",&n); for(i=0;i<n;i++) scanf("%d",&@@ c[i]); s=@@ f(@@ 4000@@ ,@@ 0); printf("%d",s); }  
c -1
h -1
0

voidmain() { intn,k; ints=0; inti,j; inta[1000]; scanf("%d%d",&n,&k); for(i=0;i<n;i++) { scanf("%d",&a[i]); } for(i=0;i<n;i++) { j=0; while(j@@ <n) { if(i==@@ j) { j++; continue; } else { s=@@ a[i]+a[j]; j++; if(k==@@ s) { printf("yes"); goto@@ label@@ ; } }; }; if((@@ i==@@ n-1@@ )&&(@@ s@@ !=@@ k@@ )) printf("no"); } label@@ : return(0); }  
c -1
h -1
intmain() { intn,i,@@ row,@@ col@@ ,j,@@ k,@@ sum; cin>>n; cin.get(); for(i=0;i<n;i++) { sum=0; row@@ =0; col@@ =0; inta[@@ 103@@ ][@@ 103@@ ]={0}; cin>>row>>col; for(j=0;j<row@@ ;j++) for(k=0;k<col@@ ;k++) cin>>@@ *(*(a@@ +j)+@@ k); if((@@ row@@ ==1@@ )&&(@@ col@@ ==1@@ )) cout<<@@ **@@ a@@ <<endl; else { for(k=0;k<col@@ ;k++) sum=sum+*(@@ *@@ a+@@ k); for(k=0;k<col@@ ;k++) sum=sum+*(@@ *(a+@@ row-1)@@ +@@ k); for(j=0;j<row@@ ;j++) sum=sum+*@@ *(a@@ +j); for(j=0;j<row@@ ;j++) sum=sum+*(@@ *(a@@ +j)@@ +col@@ -1); sum=sum@@ -*@@ *@@ a; sum=sum@@ -*(@@ *(a+@@ row@@ -1)); sum=sum@@ -*@@ (*@@ a+@@ col@@ -1); sum=sum@@ -*(@@ *(a+@@ row-1)@@ +col@@ -1); cout<<sum<<endl; } } return0; }  
c -1
h -1
0

intmain() { inta,b,c,@@ sum=0; int@@ month@@ [13]={0,31,28,31,30,31,30,31,31,30,31,30,31}; scanf("%d%d%d",&a,&b,&c); for(inti=0;i<@@ b;i++) { sum=sum+@@ month@@ [i]; } sum=sum@@ +c; if(a%@@ 4==0&&a%100!=0@@ ||a%@@ 400==0)@@ sum=sum+1; printf("%d\n",sum); return0; }  
c -1
h -1
intmain(){ intn,@@ a[100][100],@@ row,col,@@ ROW1@@ ,@@ COL1@@ ,@@ ROW2@@ ,@@ COL2@@ ,sum; scanf("%d",&n); for(row=0;row<n;@@ row++){ for(col=0;col<n;col@@ ++){ scanf("%d",&a[@@ row][col@@ ]); } } int@@ flag=0; for(row=0;row@@ <n@@ &&@@ !@@ flag@@ ;@@ row++){ for(col=0;col@@ <n@@ &&@@ !@@ flag@@ ;col@@ ++){ if(a[@@ row][col@@ ]==0){ ROW1@@ =@@ row; COL1@@ =@@ col; flag=1; break; } } } flag=0; for(row@@ =@@ n-1;@@ row@@ >=0&&@@ !@@ flag@@ ;@@ row@@ --){ for(col@@ =@@ n-1;@@ col@@ >=0;@@ col@@ --){ if(a[@@ row][col@@ ]==0){ ROW2@@ =@@ row; COL2@@ =@@ col; flag=1; break; } } } sum=(@@ ROW2@@ -@@ ROW1@@ -1)*(@@ COL2@@ -@@ COL1@@ -1); printf("%d\n",sum); return0; }  
c -1
h -1
0

voidmain() { int@@ len@@ [1000]; intb[@@ 26]; inta[1000]; charstr@@ [1000][@@ 26]; intm,i,j,@@ max,@@ num; charc; int@@ pos@@ ,@@ temp; scanf("%d",&m); for(i=0;i<26;i++) b[i]=0; for(i=0;i<m;i++) { scanf("%d",&a[i]); scanf("%s",@@ str[i]); len@@ [i]@@ =strlen(@@ str[i]); for(j=0;j<len@@ [i];j++) { temp=@@ str@@ [i][j]@@ -'A'; b[@@ temp@@ ]++; } } max=@@ b[0]; pos@@ =0; for(i=1;i<26;i++) { if(b[i]>max) { max=b[i]; pos@@ =i; } } c=@@ pos@@ +'A'@@ ; printf("%c\n",@@ c); printf("%d\n",max); num=0; for(i=0;i<m;i++) for(j=0;j<len@@ [i];j++) if(str@@ [i][j]==@@ c) { num++; if(num@@ <@@ max) printf("%d\n",a[i]); else@@ printf("%d",a[i]); } }  
c -1
h -1
intmain() { inti,@@ a,@@ n,@@ e,@@ sz@@ [100],@@ sx@@ [100]={0}; char@@ st@@ [100][@@ 11@@ ],@@ sa@@ [11@@ ],@@ sd@@ [100][@@ 11]; scanf("%d",&n); for(i=0;i<n;i++) { scanf("%s",&@@ st@@ [i]); scanf("%d",&sz[i]); } for(i=0;i<n;i++) { if(sz[i]@@ >=60) { sx@@ [i]=@@ sz[i]; strcpy(@@ sd@@ [i],@@ st@@ [i]); } } for(i=1;i<=n;i++) { for(a=0;a@@ <n@@ -i@@ ;a@@ ++) { if(@@ sx@@ [a@@ ]<@@ sx@@ [a@@ +1]) { e=@@ sx@@ [a@@ ]; sx@@ [a@@ ]=@@ sx@@ [a@@ +1]; sx@@ [a@@ +1]=@@ e; strcpy(@@ sa@@ ,@@ sd@@ [a@@ ]); strcpy(@@ sd@@ [a@@ ],@@ sd@@ [a@@ +1@@ ]); strcpy(@@ sd@@ [a@@ +1],@@ sa@@ ); } } } for(i=0;i<n;i++) { if(@@ sx@@ [i]@@ >=60) puts(@@ sd@@ [i]); } for(i=0;i<n;i++) { if(sz[i]@@ <60) puts(@@ st@@ [i]); } return0; }  
c -1
h -1
0

voidmain() { chara[256],b[256],c[256]; gets(a); gets(b); gets(c); int@@ q,@@ w,@@ e; q@@ =strlen(a); w@@ =strlen(b); e@@ =strlen(c); inti,j,k; int@@ result@@ =1,@@ d; for(k=0;k<@@ q@@ ;k++) { if(a[k@@ ]==@@ b[0]) { result=1; for(i=@@ k,@@ j@@ =0;i<@@ w@@ +@@ k,@@ j@@ <@@ w@@ ;i++,j++) { d=@@ a[i]@@ -@@ b[j]; if(d@@ !=0)@@ result=0; } if(result@@ ) { for(i=@@ k,@@ j@@ =0;j<@@ e,@@ i@@ <@@ w@@ +k@@ ;i++,j++) { a[i]=@@ c[j]; } break; } } } puts(@@ a); }  
c -1
h -1
intmain(intargc,char*argv[]) { inta[1000][1000]; intn,i,j,@@ point1@@ ,@@ point2@@ ,@@ row1@@ ,@@ colum1@@ ,@@ row2@@ ,@@ colum2@@ ,@@ num; scanf("%d",&n); for(i=0;i<n;i++) { for(j=0;j<n;j++){ scanf("%d",&a[i][j]); } } for(i=0;i<n;i++) { for(j=0;j<n;j++) { if(a[i][j]==0) { point1@@ =@@ a[i][j]; row1@@ =i; colum1@@ =j; i=@@ n+1; break; } } } for(i=n-1;i>=0;i--) { for(j=n-1;j>=0;j--) { if(a[i][j]==0) { point2@@ =@@ a[i][j]; row2@@ =i; colum2@@ =j; i@@ =-1; break; } } } num@@ =(@@ row2@@ -@@ row1@@ -1)*(@@ colum2@@ -@@ colum1@@ -1); printf("%d\n",num); return0; }  
c -1
h -1
0

intmain(){ intN@@ =@@ 100; intk,m,n,@@ i,@@ a[@@ N@@ ][@@ N@@ ],b[@@ N@@ ],@@ c,d,@@ e@@ [N@@ ],@@ f[@@ N]; scanf("%d",&k); for(i=0;i<k;i++){ b[i]=0; scanf("%d%d",&@@ e@@ [i],&@@ f@@ [i]); m=@@ e@@ [i];@@ n=@@ f[i]; for(c=0;c@@ <m;@@ c@@ ++){ for(d@@ =0;d@@ <n;@@ d@@ ++){ scanf("%d",&@@ a[c@@ ][@@ d@@ ]); } } for(c=0;c@@ <m;@@ c@@ ++){ b[i]=@@ b[i]@@ +@@ a[c@@ ][0]+@@ a[c@@ ][n-1]; } for(d@@ =1;@@ d@@ <@@ n-1;@@ d@@ ++){ b[i]=@@ b[i]@@ +@@ a[0][@@ d@@ ]+@@ a[m-1][@@ d@@ ]; } printf("%d",b[i]); printf("\n"); } return0; }  
c -1
h -1
intmain() { intn,@@ age@@ [100],@@ i,j; charid@@ [100][10]; scanf("%d",&n); intk=0; char@@ shuchu@@ [100][10]; for(i=0;i<n;i++) { scanf("%s%d",@@ id[i],&@@ age[i]); if(age[i]@@ <60) strcpy(@@ shuchu@@ [k@@ ++@@ ],@@ id[i]); } char@@ mid@@ [100][10]; intt; for(i=0;i<n-1;i++) { for(j=0;j<n-1-i;j++) { if(age@@ [j]<@@ age@@ [j+1]) { t=@@ age@@ [j]; age@@ [j]=@@ age@@ [j+1]; age@@ [j+1]=t; strcpy(@@ mid@@ [j],@@ id@@ [j]); strcpy(id@@ [j],@@ id@@ [j+1]); strcpy(id@@ [j+1],@@ mid@@ [j]); } } } if(age@@ [0]@@ <60) goto@@ E@@ ; else { for(i=0;@@ age@@ [i]@@ >=60@@ ;i++) printf("%s\n",@@ id[i]); } E@@ :@@ ; for(i=0;i<k;i++) printf("%s\n",@@ shuchu@@ [i]); return0; }  
c -1
h -1
0

intmain() { inta[100][100]; int@@ row@@ =0,@@ col@@ =0; cin>>row>>col; int(*p)@@ [100@@ ]=a; inti,j; for(i=0;i<row;i++) for(j=0;j<col;j++) cin>>@@ *(p@@ [i]@@ +j); for(i=0;i<@@ row+col@@ -1;i++) for(j=0;j<row@@ ;j++) { if(i@@ -j@@ >=0&&i@@ -j@@ <col) cout<<@@ *(p@@ [j]@@ +i-j@@ )<<endl; } return0; }  
c -1
h -1
intmain() { inti,j,n,@@ max,@@ a[100],b[100]; cin>>n; for(i=0;i<n;i++) cin>>a[i]; b[0]@@ =1; for(i=1;i<n;i++) { b[i]=1; for(j=0;j<i;j++) if(a[i]<=@@ a[j]&&@@ b[j]@@ +1>@@ b[i]) b[i]=b[j]+1; } max=0; for(i=0;i<n;i++) if(b[i]>max) max=b[i]; cout<<max<<endl; return0; }  
c -1
h -1
0

struct@@ patience { int@@ shunxu@@ ; charid[10]; intage; }@@ pa@@ [100]; intmain() { intn,i,j,@@ p=@@ 60@@ ,@@ q=0; scanf("%d",&n); inta[n]; intb[@@ n@@ ],c[@@ n]; for(i=0;i<n;i++) { scanf("%s%d",&@@ pa@@ [i].id,&@@ pa@@ [i].age); } for(i=0;i<n;i++){ if(pa@@ [i].age>=60) { q++; } } do{ for(i=0;i<n;i++) { if(pa@@ [i].age@@ >=@@ p) { p=@@ pa@@ [i].age; } } for(i=0;i<n;i++) { if(pa@@ [i].age@@ ==@@ p@@ ){ printf("%s\n",@@ pa@@ [i].id); pa@@ [i].age@@ =0; } } p=@@ 60@@ ; q@@ --; } while(@@ q@@ >0@@ ); for(i=0;i<n;i++) { if(pa@@ [i].age@@ <60&&@@ pa@@ [i].age@@ >0){ printf("%s\n",@@ pa@@ [i].id); } } return0; }  
c -1
h -1
voidmain() { intb[@@ 5@@ ],c[@@ 5@@ ],@@ k@@ [5@@ ]; long@@ a[@@ 5@@ ]; intj; for(j=1;j<=@@ 5@@ ;j++) { scanf("%ld%d%d",&@@ a@@ [j-1]@@ ,&@@ b@@ [j-1]@@ ,&@@ c@@ [j-1]); } for(j=1;j<=@@ 5@@ ;j++) { inti,@@ l,@@ x; if(a@@ [j-1]@@ %@@ 4@@ !=0)@@ l=@@ 28; else { if((@@ a@@ [j-1]@@ %@@ 100@@ ==0)&&(@@ a@@ [j-1]@@ %@@ 400@@ !=0@@ ))@@ l=@@ 28; else@@ l=@@ 29; } x=0; for(i=1;i<=@@ b@@ [j-1]@@ -1;i++) { switch(@@ i) { case1:@@ x=x+@@ 31;break; case2:@@ x=x+@@ l@@ ;break; case3:@@ x=x+@@ 31;break; case4:@@ x=x@@ +30@@ ;break; case5:@@ x=x+@@ 31;break; case6:@@ x=x@@ +30@@ ;break; case7:@@ x=x+@@ 31;break; case8:@@ x=x+@@ 31;break; case9:@@ x=x@@ +30@@ ;break; case10:@@ x=x+@@ 31;break; case11:@@ x=x@@ +30@@ ;break; case12:@@ x=x+@@ 31;break; } } x=x+@@ c@@ [j-1]; intm; m@@ =j@@ -1; k@@ [m]=@@ x; printf("%d\n",@@ k@@ [m]); } }  
c -1
h -1
0

intmain() { int@@ ys@@ (int@@ s@@ ,int@@ p); intn,m,@@ i,@@ t; scanf("%d",&n); for(i=1;i<=n;i++) { scanf("%d",&m); t=@@ ys@@ (m,@@ 2); printf("%d\n",t); } return0; } int@@ ys@@ (int@@ s@@ ,int@@ p) { intj,@@ a@@ =1,@@ b; for(j=@@ p@@ ;j@@ *@@ j@@ <=@@ s@@ ;j++) { if(s@@ %j==0) { b=@@ s/@@ j; a=@@ a+@@ ys@@ (b,@@ j); } } return(@@ a); }  
c -1
h -1
structstu { intid; int@@ ch; int@@ mt@@ ; inttotal; }; structstu@@ stu_1@@ [100000]; structstu@@ top1@@ =@@ {@@ 0,0,@@ 0,@@ 0},@@ top2@@ =@@ {@@ 0,0,@@ 0,@@ 0},@@ top3@@ =@@ {@@ 0,0,@@ 0,@@ 0@@ }; intmain() {@@ intn,i; structstu@@ tem; scanf("%d",&n); for(i=0;i<n;i++){ scanf("%d%d%d",&@@ (@@ stu_1@@ [i].@@ id@@ )@@ ,&@@ (@@ stu_1@@ [i].@@ ch@@ )@@ ,&@@ (@@ stu_1@@ [i].@@ mt@@ )); stu_1@@ [i].@@ total=@@ stu_1@@ [i].@@ ch@@ +@@ stu_1@@ [i].@@ mt@@ ; if(@@ stu_1@@ [i].@@ total>@@ top1@@ .@@ total@@ ){ top3@@ =@@ top2@@ ;@@ top2@@ =@@ top1@@ ;@@ top1@@ =@@ stu_1@@ [i]; } elseif(@@ stu_1@@ [i].@@ total>@@ top2@@ .@@ total@@ ){ top3@@ =@@ top2@@ ;@@ top2@@ =@@ stu_1@@ [i]; } elseif(@@ stu_1@@ [i].@@ total>@@ top3@@ .@@ total@@ ){ top3@@ =@@ stu_1@@ [i]; } else@@ ; } printf("%d%d\n",@@ top1@@ .@@ id,@@ top1@@ .@@ total); if((@@ top2@@ .@@ id@@ )@@ !=0) printf("%d%d\n",@@ top2@@ .@@ id,@@ top2@@ .@@ total); if((@@ top3@@ .@@ id@@ )@@ !=0) printf("%d%d\n",@@ top3@@ .@@ id,@@ top3@@ .@@ total); return0; }  
c -1
h -1
0

int@@ yinshu@@ (int@@ num,int@@ min); intmain(){ intn,i; scanf("%d",&n); for(i=0;i<n;i++){ inta,@@ result; scanf("%d",&a); result=@@ yinshu@@ (a,@@ 2)@@ +1; printf("%d\n",@@ result); } return0; } int@@ yinshu@@ (int@@ num,int@@ min@@ ){ intr,@@ x=0; if(num@@ <@@ min@@ ){ return0; } else{ for(@@ r=@@ min@@ ;r@@ *@@ r@@ <=@@ num@@ ;r@@ ++){ if(num@@ %@@ r@@ ==0){ x=x@@ +1@@ +@@ yinshu@@ (@@ num@@ /@@ r,@@ r); } } return@@ x; }}  
c -1
h -1
intmain(){ doublen,@@ c; inti,j=0,@@ m,@@ s,@@ t; chara[501],b[501]; scanf("%lf\n",&@@ n); scanf("%s",a); scanf("\n@@ "); scanf("%s",b); m=strlen(@@ a);@@ s@@ =strlen(@@ b@@ );@@ if(m@@ <=@@ s@@ ){@@ t=@@ m;@@ }else{@@ t=@@ s@@ ;} for(i=0;i<@@ t@@ ;i++){ if(a[i]!='@@ A'&&a[i]!='@@ C'&&a[i]!='@@ T'&&a[i]!='@@ G'||@@ m@@ !=@@ s@@ ){ printf("error@@ "@@ )@@ ;j@@ =-@@ 1@@ ;break;} if(a[i]==b[i]){ j@@ ++;} } c@@ =1.0*@@ j@@ /@@ m; if(c@@ >@@ n@@ ){printf("yes");} elseif(@@ c@@ <=@@ n@@ &&@@ c@@ >=0@@ ){@@ printf("no");} return0; }  
c -1
h -1
0

int@@ panduansushu@@ (int@@ t) { inti; for(i=2@@ ;i<@@ t;i++) { if(t@@ %i@@ ==0){@@ break;} } if(i>@@ t@@ /2@@ )@@ return1; else@@ return0; } intsum=0; void@@ fun@@ (intn,int@@ i) { if(n@@ ==1)@@ sum++; for(@@ ;i<=n;i++) { if(n@@ %i==0)@@ fun@@ (n/i,i); } } voidmain() { inta[100@@ ],@@ i,@@ res@@ ,j,@@ n; scanf("%d",&n); for(j=0;j<n@@ ;j++)@@ scanf("%d",&a[j]); for(j=0;j<n;j++) { if(@@ panduansushu@@ (@@ a[j])@@ ==1) { printf("@@ 1@@ \n"); } else{@@ for(i=2@@ ,@@ res@@ =1@@ ;i<@@ a[j]@@ /2@@ ;i++) { if(a[j]@@ %i@@ ==0){@@ sum=0;@@ fun@@ (@@ a[j]@@ /i,@@ i@@ );@@ res@@ +=@@ sum@@ ;} } printf("%d\n",@@ res@@ );}} }  
c -1
h -1
structstudent{ charnum[@@ 20]; intage; structstudent*next; }; intn,i; structstudent*@@ create@@ () { structstudent*head; structstudent*p1,*p2; head=NULL; scanf("%d",&@@ i); n=0; p1=p2@@ =(structstudent*)malloc(len); scanf("%s%d",@@ p1->num,&p1->@@ age); while(n@@ !=@@ i@@ -1) { n++; if(n==1) head=p1; else p2->next=p1; p2=p1; p1@@ =(structstudent*)malloc(len); scanf("%s%d",@@ p1->num,&p1->@@ age); } p2->next=p1; p1->next=NULL; return(head); } voidpaixu@@ (@@ structstudent@@ *p@@ ){ structstudent*p1,*p2; char@@ temp@@ [20]; int@@ temp2@@ ; for(n@@ =1;@@ n@@ <i@@ ;n++){ p2=@@ p; p1=@@ p@@ ->next; while(p1@@ !=NULL@@ ){ if(p1->age@@ >=60&&@@ p2->age@@ <60){ strcpy(@@ temp,@@ p1->num); strcpy(@@ p1->@@ num,@@ p2->@@ num); strcpy(@@ p2->@@ num,@@ temp); temp2@@ =p1->@@ age; p1->age@@ =@@ p2->@@ age; p2->age@@ =@@ temp2@@ ; } elseif(@@ p1->age@@ >@@ p2->age@@ &&@@ p2->age@@ >=60){ strcpy(@@ temp,@@ p1->num); strcpy(@@ p1->@@ num,@@ p2->@@ num); strcpy(@@ p2->@@ num,@@ temp); temp2@@ =p1->@@ age; p1->age@@ =@@ p2->@@ age; p2->age@@ =@@ temp2@@ ; } p2=p1; p1=p1->next; } } } voidprint@@ (@@ structstudent@@ *p@@ ) { while(p!=NULL) { printf("%s",@@ p->@@ num); p=p->next; if(p@@ !=NULL) printf("\n"); } } voidmain() { structstudent*@@ p; p=@@ create@@ (); paixu@@ (p); print@@ (p); }  
c -1
h -1
0

intmain() { intk; cin>>k; for(inti=0;i<k;i++) { intm,n,@@ a[100][100],@@ j,@@ l,@@ sum=0; cin>>m>>n; for(j=0;j<m;j++) for(l=0;l<n;l++) cin>>a[j]@@ [l]; for(j=0;j<m;j++) sum=sum+@@ *(*(a@@ +j)@@ )+@@ *(*(a@@ +j)@@ +n-1); for(j=1;j<@@ n-1;j++) sum=sum+@@ *(@@ *a@@ +j)+@@ *(*(a@@ +m-1)@@ +j); cout<<sum<<endl; } return0; }  
c -1
h -1
voidmain() { inta[100][100]; intn,@@ i1@@ =0,@@ j1@@ =0,@@ i2@@ =0,@@ j2@@ =0,@@ j,@@ i; scanf("%d",&n); for(i=0;i<n;i++) { for(j=0;j<n;j++) scanf("%d",&a[i][j]); } for(i=0;i<n;i++) { if(@@ i1@@ !=0@@ )break; for(j=0;j<n;j++) { if(a[i][j]==0) { i1@@ =i+1@@ ;@@ j1@@ =j+1@@ ;break; } } } for(i=0;i<n;i++) { for(j=0;j<n;j++) { if(a[i][j]==0) { i2@@ =i+1@@ ;@@ j2@@ =j+1; } } } printf("%d",(@@ i2@@ -@@ i1@@ -1)*(@@ j2@@ -@@ j1@@ -1)); }  
c -1
h -1
0

main() { intk,i,@@ max=0,@@ u@@ ,j,@@ a[@@ 26]={0},@@ b[@@ 26@@ ]={@@ 1@@ }; scanf("%d",&k); for(i=1;i<=k;i++) scanf("%d",&a[i]); for(i=1;i<=k;i++) b[i]=1; for(i=k@@ -1@@ ;i>=1;i--) for(j=i+1;j<=@@ k;j++) { if(a[j]<=@@ a[i]&&@@ b[i]@@ <@@ b[j]@@ +1) b[i]=b[j]+1; u@@ =@@ b[i]; } for(i=1;i<=k;i++) max@@ =(@@ max@@ >=@@ b[i]@@ )@@ ?@@ max@@ :@@ b[i]; printf("%d",max); }  
c -1
h -1
intmain(){ inty,m,@@ d; intf@@ [@@ 22@@ ]; scanf("%d%d%d",&y,&m,&d); f@@ [0]=@@ 31+@@ d; f@@ [1]=@@ 60@@ +d; f@@ [2]=@@ 91@@ +d; f@@ [3@@ ]=@@ 121@@ +d; f[@@ 4@@ ]=@@ 152@@ +d; f[@@ 5@@ ]=@@ 182@@ +d; f[@@ 6@@ ]=@@ 213@@ +d; f[@@ 7@@ ]=@@ 244@@ +d; f[@@ 8@@ ]=@@ 274@@ +d; f[@@ 9@@ ]=@@ 305@@ +d; f[@@ 10@@ ]=@@ 335@@ +d; f@@ [11@@ ]=@@ 31+@@ d; f[@@ 12@@ ]=@@ 59@@ +d; f[@@ 13@@ ]=@@ 90@@ +d; f[@@ 14@@ ]=@@ 120@@ +d; f[@@ 15@@ ]=@@ 151@@ +d; f[@@ 16@@ ]=@@ 181@@ +d; f[@@ 17@@ ]=@@ 212@@ +d; f[@@ 18@@ ]=@@ 243@@ +d; f[@@ 19@@ ]=@@ 273@@ +d; f[@@ 20@@ ]=@@ 304@@ +d; f[@@ 21@@ ]=@@ 334@@ +d; if((y%@@ 4==0&&y%100!=0@@ )||@@ y%400==0) {@@ switch(@@ m){ case1:@@ printf("%d",d@@ );break; case2:@@ printf("%d",@@ f@@ [0]@@ );break; case3:@@ printf("%d",@@ f@@ [1]@@ );break; case4:@@ printf("%d",@@ f@@ [2]@@ );break; case5:@@ printf("%d",@@ f@@ [3@@ ]@@ );break; case6:@@ printf("%d",@@ f[@@ 4@@ ]@@ );break; case7:@@ printf("%d",@@ f[@@ 5@@ ]@@ );break; case8:@@ printf("%d",@@ f[@@ 6@@ ]@@ );break; case9:@@ printf("%d",@@ f[@@ 7@@ ]@@ );break; case10:@@ printf("%d",@@ f[@@ 8@@ ]@@ );break; case11:@@ printf("%d",@@ f[@@ 9@@ ]@@ );break; case12:@@ printf("%d",@@ f[@@ 10@@ ]@@ );@@ break;}} else {@@ switch(@@ m){ case1:@@ printf("%d",d@@ );break; case2:@@ printf("%d",@@ f@@ [11@@ ]@@ );break; case3:@@ printf("%d",@@ f[@@ 12@@ ]@@ );break; case4:@@ printf("%d",@@ f[@@ 13@@ ]@@ );break; case5:@@ printf("%d",@@ f[@@ 14@@ ]@@ );break; case6:@@ printf("%d",@@ f[@@ 15@@ ]@@ );break; case7:@@ printf("%d",@@ f[@@ 16@@ ]@@ );break; case8:@@ printf("%d",@@ f[@@ 17@@ ]@@ );break; case9:@@ printf("%d",@@ f[@@ 18@@ ]@@ );break; case10:@@ printf("%d",@@ f[@@ 19@@ ]@@ );break; case11:@@ printf("%d",@@ f[@@ 20@@ ]@@ );break; case12:@@ printf("%d",@@ f[@@ 21@@ ]@@ );@@ break;}} return0;}  
c -1
h -1
0

voidmain() { intn,i,@@ k@@ [100],@@ l@@ [26]={0},@@ m=0,@@ v@@ ,j; char@@ c@@ [100][@@ 26]; scanf("%d",&n); for(i=0;i<n;i++) { scanf("%d%s",&@@ k@@ [i],@@ c[i]); for(j=0;j<strlen(@@ c[i]@@ );j++) { l@@ [@@ (int)@@ c@@ [i][j]@@ -65@@ ]@@ +=1; } } for(i=0;i<26;i++) { if(l@@ [i]>@@ m) m=@@ l@@ [i]; } for(i=0;i<26;i++) { if(l@@ [i]==@@ m) { printf("%c\n%d\n",@@ i@@ +65@@ ,@@ l@@ [i]); break; } } for(@@ v@@ =0;@@ v@@ <n;@@ v@@ ++) { for(j=0;j<strlen(@@ c[@@ v@@ ])@@ ;j++) { if(@@ c[@@ v@@ ]@@ [j]==@@ i@@ +65) printf("%d\n",@@ k@@ [@@ v@@ ]); } } }  
c -1
h -1
intmain() { char@@ y@@ [100],@@ h@@ [100],@@ c[100]; inti,j,@@ len@@ [3@@ ],@@ count=0,@@ k=0,@@ a[100]; scanf("%s",&@@ y); scanf("%s",&@@ h); scanf("%s",&@@ c); for(i=0;i<strlen(@@ y@@ );i++){ for(j=0;j<strlen(@@ h@@ )@@ ;j++){ if(y@@ [i+j]==@@ h@@ [j]){ count++; } } if(count==@@ strlen(@@ h@@ )) { k++; a[k]=@@ i; } count=0; } if(k@@ ==0){ printf("%s",@@ y); return0; } for(i=0;i<@@ a[1]@@ ;i++) printf("%c",@@ y@@ [i]); printf("%s",@@ c); if(i==@@ k) return0; for(j=@@ a[1@@ ]+@@ strlen(@@ h@@ )@@ ;j<@@ strlen(@@ y)@@ ;j++){ printf("%c",@@ y@@ [j]); } return0; }  
c -1
h -1
0

intmain() { inti,@@ k=0,@@ j; double@@ x,@@ num=0,@@ len; charc[@@ 1@@ ]; chara[500],b[500]; gets(c); x=@@ atof@@ (@@ c); gets(a); gets(b); for(i=0;i<@@ strlen(a)@@ ;i++){ if((a[i]!='@@ A')&&(@@ a[i]!='@@ T')&&(@@ a[i]!='@@ C')&&(@@ a[i]!='@@ G')){ printf("error"); k=1; break; }else{ if((@@ b[i]!='@@ A')&&(@@ b[i]!='@@ T')&&(@@ b[i]!='@@ C')&&(@@ b[i]!='@@ G')){ printf("error"); k=1; break; } } } if(k@@ !=1@@ ){ if(strlen(a)!=strlen(b@@ )){ printf("error"); }else{ for(k=0;k<@@ strlen(a)@@ ;k++){ if(a[k@@ ]==@@ b[k@@ ]){ num=num@@ +1; } } j@@ =strlen(a); len@@ =1@@ .@@ 00@@ *@@ j; if((@@ num@@ /@@ len@@ )@@ <=@@ x){ printf("no"); }else{ if((@@ num@@ /@@ len@@ )>@@ x){ printf("yes"); } } } } return0; }  
c -1
h -1
intmain() { inta[@@ 17@@ ]; inti,j,n,@@ count; while(cin>>@@ a[1]@@ &&@@ a[1]@@ !=-1) { count=0; for(n=@@ 2@@ ;n@@ <=@@ 16@@ ;n++) { cin>>@@ a[@@ n]; if(a[@@ n@@ ]==0) break; } for(i=1;i<=n-1;i++) { if(a[i]@@ %@@ 2@@ ==0) for(j=1;j<=@@ n-1;j++) if(a[j]@@ *2==@@ a[i]) count++; } cout<<count<<endl; } return0; }  
c -1
h -1
0

voidmain() { structstudent{ inti; intx; inty; intm; structstudent*next; }; intn,@@ j,@@ k; structstudent*head,*@@ p1,*p2,*@@ p0; scanf("%d",&n); p1=(structstudent*)malloc(LEN); scanf("%d%d%d",&p1->@@ i@@ ,&p1->@@ x@@ ,&p1->@@ y); p1->@@ m=@@ p1->@@ x+@@ p1->@@ y; p2@@ =(structstudent*)malloc(LEN); scanf("%d%d%d",&@@ p2->@@ i@@ ,&@@ p2->@@ x,&@@ p2->@@ y); p2->@@ m=@@ p2->@@ x+@@ p2->@@ y; if(p1->@@ m@@ >@@ p2->@@ m) {@@ head@@ =p1;@@ p1->next@@ =p2@@ ;@@ p2->next@@ =0;} else{@@ p0@@ =p1;@@ p1=p2@@ ;@@ p2=@@ p0@@ ;@@ head@@ =p1;@@ p1->next@@ =p2@@ ;@@ p2->next@@ =0;} p0@@ =(structstudent*)malloc(LEN); scanf("%d%d%d",&@@ p0->@@ i@@ ,&@@ p0->@@ x,&@@ p0->@@ y); p0->@@ m=@@ p0->@@ x+@@ p0->@@ y; while((@@ p0->@@ m@@ <=@@ p1->@@ m@@ )&&(@@ p1->next@@ !=0)) { p2@@ =p1;@@ p1=p1->next; } if(@@ p0->@@ m@@ >@@ p1->@@ m) { if(head@@ ==@@ p1@@ )@@ head=@@ p0@@ ;@@ else@@ p2->next=@@ p0; p0->next@@ =p1; } else { p1->next=@@ p0@@ ;@@ p0->next@@ =0; } for(j=@@ 3@@ ;j<n;j++) { p0@@ =(structstudent*)malloc(LEN); scanf("%d%d%d",&@@ p0->@@ i@@ ,&@@ p0->@@ x,&@@ p0->@@ y); p0->@@ m=@@ p0->@@ x+@@ p0->@@ y; for(k@@ =0,@@ p1=@@ head@@ ;k<=@@ 2@@ ;k++) {if(@@ p0->@@ m@@ >@@ p1->@@ m)@@ break;@@ p1=p1->next@@ ;} if(k==@@ 3@@ )continue; p1=@@ p2=head; while(@@ p0->@@ m@@ <=@@ p1->@@ m) { p2@@ =p1;@@ p1=p1->next; } if(@@ p0->@@ m@@ >@@ p1->@@ m) { if(head@@ ==@@ p1@@ )@@ head=@@ p0@@ ;@@ else@@ p2->next=@@ p0; p0->next@@ =p1; } else { p1->next=@@ p0@@ ;@@ p0->next@@ =0; } } for(p1=@@ head@@ ,j@@ =0;j<@@ 3;j++) { printf("%d%d\n",@@ p1->@@ i,@@ p1->@@ m); p1=p1->next; } }  
c -1
h -1
structstudent{ intj; int@@ x,y; int@@ z; }stu[100000]; intmain(intargc,char*argv[]) { intn,i,@@ a=0,b=0,@@ c=0,@@ a1,@@ b1,@@ c1@@ ; scanf("%d",&n); for(i=0;i<n;i++) { scanf("%d%d%d",&stu[i].@@ j@@ ,&stu[i].@@ x@@ ,&stu[i].@@ y); stu[i].@@ z=@@ stu[i].@@ x+@@ stu[i].@@ y; } for(i=0;i<n;i++) { if(a<@@ stu[i].@@ z) { a=@@ stu[i].@@ z; a1@@ =i; } } for(i=0;i<n;i++) { if(b@@ <@@ stu[i].@@ z@@ &&i!=@@ a1@@ ) { b=@@ stu[i].@@ z; b1@@ =i; } } for(i=0;i<n;i++) { if(c@@ <@@ stu[i].@@ z@@ &&i!=@@ a1@@ &&i!=@@ b1@@ ) { c=@@ stu[i].@@ z; c1@@ =i; } } printf("%d%d\n%d%d\n%d%d\n",@@ stu[@@ a1@@ ].@@ j,@@ stu[@@ a1@@ ].@@ z,@@ stu[@@ b1@@ ].@@ j,@@ stu[@@ b1@@ ].@@ z,@@ stu[@@ c1@@ ].@@ j,@@ stu[@@ c1@@ ].@@ z); return0; }  
c -1
h -1
1


intmain() { double@@ dz@@ ; char@@ xl1@@ [500],@@ xl2@@ [500]; scanf("%lf",&@@ dz@@ ); scanf("%s\n@@ %s",@@ xl1@@ ,@@ xl2@@ ); int@@ len1,len2@@ ; len1=strlen(@@ xl1@@ ); len2=strlen(@@ xl2@@ ); int@@ e=0; if(len1!=@@ len2){ printf("error"); e++; } inti; if(e@@ ==0){ for(i=0;i<len1;i++){ if((@@ xl1@@ [i]!='A'&&@@ xl1@@ [i]!='T'&&@@ xl1@@ [i]!='C'&&@@ xl1@@ [i]!='G')||(@@ xl2@@ [i]!='A'&&@@ xl2@@ [i]!='T'&&@@ xl2@@ [i]!='C'&&@@ xl2@@ [i]!='G')){ e++; } } if(e@@ !=0)@@ printf("error"); } intsum=0; if(e@@ ==0){ for(i=0;i<len1;i++){ if(@@ xl1@@ [i]==@@ xl2@@ [i])@@ sum++; } if(1.0*@@ sum/@@ len1@@ >@@ dz@@ )@@ printf("yes"); elseprintf("no"); } scanf("%d",&@@ e); return0; }  
c -1
h -1
main() { intn,i,j,k,@@ m,@@ l; intage@@ [@@ 10000]; charID@@ [@@ 10000@@ ][@@ 10],@@ order@@ [@@ 10000@@ ][10]; scanf("%d",&n); for(i=0;i<n;i++) { scanf("%s%d",@@ ID@@ [i],&@@ age[i]); } for(i=0;i<n;i++) { m=0; for(j=1;j<@@ n@@ -i;j++) { if(age@@ [j]@@ >=60&&@@ age@@ [j]>@@ age@@ [m@@ ]) m@@ =j; } for(j=0;j<@@ 10@@ ;j++) { order@@ [i][j]=@@ ID@@ [m]@@ [j]; } for(j=@@ m@@ ;j<n;j++) { for(k=0;k<@@ 10@@ ;k++) { ID@@ [j]@@ [k]=@@ ID@@ [j+1@@ ][k@@ ]; } age@@ [j]=@@ age@@ [j+1]; } } for(i=0;i<n;i++) { puts(@@ order@@ [i]); } }  
c -1
h -1
0

struct@@ senex { charid[10]; intage; int@@ rec@@ ; }@@ sen@@ [100],@@ t; intn; intmain() { inti,j,k,@@ l; scanf("%d\n",&n); for(i=0;i<n;i++) { scanf("%s%d",@@ sen@@ [i].id,&@@ sen@@ [i].age); if(@@ sen@@ [i].age@@ >=60@@ )@@ sen@@ [i].@@ rec@@ =1; else@@ sen@@ [i].@@ rec@@ =0; } for(i=1;i<n;i++) for(j=0;j<n-i;j++) if(@@ sen@@ [j].@@ rec@@ <@@ sen@@ [j+1].@@ rec@@ ) { t=@@ sen@@ [j]; sen@@ [j]=@@ sen@@ [j+1]; sen@@ [j+1]=t; } k=0; while(@@ sen@@ [k].@@ rec@@ ==1)@@ k++; for(i=1;i<k;i++) for(j=0;j<@@ k@@ -i;j++) if(@@ sen@@ [j].age@@ <@@ sen@@ [j+1@@ ].age) { t=@@ sen@@ [j]; sen@@ [j]=@@ sen@@ [j+1]; sen@@ [j+1]=t; } for(i=0;i<n;i++) printf("%s\n",@@ sen@@ [i].id); scanf("%d",&@@ i); return0; }  
c -1
h -1
intmain(intargc,char*argv[]) { intdays@@ [12]={31,28,31,30,31,30,31,31,30,31,30,31}; inta,b,c,@@ x=0,@@ sum,@@ i; scanf("%d%d%d",&a,&b,&c); for(i=0;i<@@ 12@@ ;i++) {@@ if(i@@ +1@@ ==@@ b) break; x=x+@@ days@@ [i]; } sum=@@ x@@ +c; if((@@ a%4==0&&a%100!=0@@ )||@@ a%@@ 400==0) { if(b@@ <=@@ 2) { printf("%d",sum); } if(b@@ >2) { sum=sum+1; printf("%d",sum); } } else printf("%d",sum); return0; }  
c -1
h -1
0

intmain() { chars[@@ 101][@@ 10@@ ]={0},@@ p[@@ 101][@@ 10@@ ]={0},@@ q@@ [@@ 101][@@ 10@@ ]={0}; inta[@@ 101@@ ]={0},b[@@ 101@@ ]={0},@@ c[@@ 101@@ ]={0}; intn,@@ i=0,@@ j=0; intf@@ =0,@@ g=0; scanf("%d",&n); for(i=0;i<n;i++) { scanf("%s%d",@@ s[i]@@ ,&@@ a[i]); if(a[i]@@ >=60) { b[@@ f@@ ]=a[i]; strcpy(@@ p[@@ f@@ ],@@ s[i]); f@@ ++; } else@@ if(a[i]@@ <60) { c[@@ g@@ ]=a[i]; strcpy(@@ q@@ [@@ g@@ ],@@ s[i]); g@@ ++; } } int@@ e=0; char@@ y[@@ 10@@ ]={0}; for(j=0;j<@@ f@@ ;j++) { for(i=@@ f@@ -2@@ ;i@@ >=@@ j@@ ;i--) { if(b[i]@@ <b@@ [i+1]) { e=@@ b[i]; b[i]=b[i+1]; b[i+1]=@@ e; strcpy(@@ y,@@ p[i]); strcpy(@@ p@@ [i],@@ p@@ [i+1]); strcpy(@@ p@@ [i+1],@@ y); } } } for(i=0;i<@@ f@@ ;i++) { printf("%s\n",@@ p[i]); } for(j=0;j<@@ g@@ ;j++) { printf("%s\n",@@ q@@ [j]); } return0; }  
c -1
h -1
structstudent{ charnum[@@ 20]; int@@ score; structstudent*next; }; intn=0; structstudent*creat@@ (int@@ numb@@ ); voidprint@@ (@@ structstudent*@@ head); structstudent*@@ maopao@@ (@@ structstudent*@@ head); intmain() { intn; char@@ ch; structstudent*head; scanf("%d@@ %c@@ ",&@@ n,&@@ ch@@ ); head=creat(n); head=@@ maopao@@ (head); print(head); free(@@ head); } structstudent*creat@@ (int@@ numb@@ ) { structstudent*head; structstudent*p1,*p2; n=0; p1=p2=(structstudent*)malloc(LEN); scanf("%s%d",&@@ p1->num,&p1->@@ score@@ ); head=NULL; while(n@@ <@@ numb@@ -1) { n=n+1; if(n==1) { head=p1; } else { p2->next=p1; } p2=p1; p1=(structstudent*)malloc(LEN); scanf("%s%d",&@@ p1->num,&p1->@@ score@@ ); } p2->next=p1; p1->next=NULL; return(head); } structstudent*@@ maopao@@ (structstudent*head@@ ) { structstudent*@@ p0@@ ,*@@ p1,*p2,*@@ tem; int@@ temp@@ =0,@@ i,j; p0@@ =head; p1=head; p2=head; if(head@@ ==NULL) { return(head); } elseif(@@ p0->next@@ ==NULL) { return(head); } elseif(@@ p0->next@@ !=NULL) { for(i=0;i<n@@ ;i=i+1@@ ) { for(j=0;j<n-1@@ ;j@@ =j+1@@ ) { if(p1->@@ score@@ <@@ p1->next@@ ->score@@ &&j@@ !=0&&@@ p1->next@@ ->score@@ >=60) { tem@@ =@@ p1->next; p2->next=@@ p1->next; p1->next=@@ tem@@ ->next; tem@@ ->next@@ =p1; p2=p2->next; } elseif(@@ p1->@@ score@@ <@@ p1->next@@ ->score@@ &&j@@ ==0&&@@ p1->next@@ ->score@@ >=60) { tem@@ =@@ p1->next; p0@@ =@@ tem; p2=@@ tem; p1->next=@@ tem@@ ->next; tem@@ ->next@@ =p1; p2=p1; p1=p1->next; } else { p2=p1; p1=p1->next; } } temp=@@ temp@@ +1; p1=@@ p0; p2=@@ p0; } } return(@@ p0@@ ); } voidprint@@ (structstudent*head@@ ) { structstudent@@ *p,*@@ tempo@@ ; p=head; if(head@@ !=NULL) { do { tempo@@ =p@@ ->next; printf("%s\n",p->@@ num); p=@@ tempo@@ ; }while(p@@ !=NULL); } }  
c -1
h -1
1


voidmain(){ intn,k,i,j,@@ p,q; inta[@@ 1000],b[1000]; scanf("%d%d",&n,&k); for(i=0;i<n;i++){ scanf("%d",&a[i]); b[i]=@@ a[i]; } for(j=0;j<n;j++){ for(p=0;p@@ <n;@@ p++){ if(p@@ !=@@ j){ if(a[j]@@ +@@ b[p@@ ]==k){ q=1; } } } } if(q@@ ==1){ printf("yes\n"); }else{ printf("no\n"); } }  
c -1
h -1
intmain() { inth@@ [26],@@ f@@ [26]; inti=0,j=0,@@ n; cin>>n; f@@ [0]@@ =0; h@@ [0]@@ =0; intmax=0; for(i=1;i<=n;i++) { cin>>@@ h@@ [i]; max=0; for(j=i-1@@ ;j>0;j--) { if(h@@ [i]<=@@ h@@ [j]&&@@ max@@ <@@ f@@ [j]@@ +1) { max=@@ f@@ [j]; } } f[i]=@@ max+1; } max=0; for(i=1;i<=n;i++) { if(max<@@ f@@ [i]) max=@@ f[i]; } cout<<max<<endl; return0; }  
c -1
h -1
0

intmain() { inta[16@@ ]={0},@@ n,@@ i=1; for(;@@ a[i]@@ !=@@ -1;@@ ) { n=0; for(i=0;;i++) { cin>>a[i]; for(intj=0;j<i;j++) { if(a[j]@@ *2==@@ a[i]@@ ||@@ a[j]==@@ a[i]@@ *2@@ ){@@ n@@ ++;} } if(a[i]@@ ==0||@@ a[i]==@@ -1@@ ){@@ break;} } if(a[i]!=@@ -1@@ ){@@ cout<<n@@ <<endl;} } }  
c -1
h -1
intmain() { structstudent {int@@ ID; int@@ YW@@ ; int@@ SX@@ ; }; structstudentstu[100000]; int@@ ZF@@ [100000]; intn; scanf("%d",&n); for(inti=0;i<n;i++) { scanf("%d",&@@ stu[i].@@ ID); scanf("%d",&@@ stu[i].@@ YW@@ ); scanf("%d",&@@ stu[i].@@ SX@@ ); ZF@@ [i]=@@ stu[i].@@ YW@@ +stu[i].@@ SX@@ ; } int@@ a=0,b=0,@@ c=0,@@ A@@ =0,@@ B@@ =0,@@ C@@ =0; for(inti=0;i<n;i++) { if(@@ ZF@@ [i]>@@ a) { c=@@ b@@ ;@@ C@@ =@@ B@@ ;@@ b=@@ a;@@ B@@ =@@ A@@ ;@@ a=@@ ZF@@ [i];@@ A@@ =i;} elseif(@@ ZF@@ [i]>@@ b) {@@ c=@@ b@@ ;@@ C@@ =@@ B@@ ;@@ b=@@ ZF@@ [i];@@ B@@ =i;} elseif(@@ ZF@@ [i]>@@ c) {@@ c=@@ ZF@@ [i];@@ C@@ =i;} } printf("%d%d\n",stu[@@ A@@ ].ID,@@ a); printf("%d%d\n",stu[@@ B@@ ].ID,@@ b); printf("%d%d\n",stu[@@ C@@ ].ID,@@ c); getchar(); getchar(); }  
c -1
h -1
0

intmain() { inta[1000][1000]; introw,col,@@ i,j,k; for(i=0;i<@@ 1000@@ ;i++) for(j=0;j<@@ 1000@@ ;j++) a[i][j]@@ =-@@ 12345@@ ; scanf("%d%d",&@@ row,@@ &@@ col); for(i=0;i<row;i++) for(j=0;j<col;j++) scanf("%d",&a[i][j]); for(j=0;j<@@ 1000@@ ;j++) for(k=j@@ ,i@@ =0@@ ;k>=0@@ ;k@@ --@@ ,i++) { if(a[i]@@ [k]@@ !=@@ -@@ 12345@@ ) printf("%d\n",a[i]@@ [k]); } return0; }  
c -1
h -1
intsz[@@ 1000][1000]; intmain() { intn; introw,col; inta,b,c,@@ d; int@@ x,y; intnum; int@@ e=0,@@ f=0; scanf("%d",&n); for(row=0;row<n;@@ row++) { for(col=0;col<n;col@@ ++) { scanf("%d",&@@ sz[row][col@@ ]); } } for(row=0;row<n;@@ row++) { for(col=0;col<n;col@@ ++) { if(@@ sz[row][col@@ ]==0) { a=@@ row; b=@@ col; e=1; break; } } if(e@@ ==1) { break; } } for(row@@ =@@ n-1;@@ row@@ >=0;@@ row@@ --) { for(col@@ =@@ n-1;@@ col@@ >=0;@@ col@@ --) { if(@@ sz[row][col@@ ]==0) { c=@@ row; d=@@ col; f=1; break; } } if(f@@ ==1) { break; } } x=@@ c-a@@ -1; y=@@ d-b@@ -1; num=@@ x@@ *@@ y; printf("%d\n",num); return0; }  
c -1
h -1
0

intmain() { inta[@@ 101][101]; inti,j,k,@@ r,@@ p,@@ t; intm,n,@@ s; cin>>t; for(p=1@@ ;p<=@@ t@@ ;p++) { s=0; cin>>m>>n; for(j=1;j<=m;j++) { for(k=1;k<=n;k++) { cin>>a[j]@@ [k]; } } if(m@@ ==1&&n@@ ==1) { cout<<@@ a[1@@ ][1@@ ]; continue; } for(i=1;i<=n;i++) { s=s+@@ a[1]@@ [i]+@@ a[m]@@ [i]; } for(@@ r@@ =1;@@ r@@ <=@@ m;@@ r++) { s=s+@@ a[r@@ ][1@@ ]+@@ a[r@@ ][n]; } s=s@@ -@@ a[1@@ ][1@@ ]-@@ a[1@@ ][n@@ ]-@@ a[m@@ ][1@@ ]-@@ a[m@@ ][n]; cout<<s<<endl; } return0; }  
c -1
h -1
intmain() { long@@ i,j,@@ n,m,@@ x,@@ p=0; inta[@@ 100001@@ ]={0}; scanf("%d%d",&n,&m); for(i=1;i<=n;i++) {scanf("%d",&@@ x@@ );@@ a[x@@ ]@@ ++;} for(i=0;i<=@@ 100000@@ ;i++) { for(j=1;j<=@@ a[i]@@ ;j++) if(p@@ ==0){@@ printf("%d",@@ i@@ );@@ p@@ =1;} else@@ printf("%d",@@ i); a[i]=0; } for(i=1;i<=m;i++) {scanf("%d",&@@ x@@ );@@ a[x@@ ]@@ =1;} for(i=0;i<=@@ 100000@@ ;i++) { for(j=1;j<=@@ a[i]@@ ;j++) printf("%d",@@ i); a[i]=0; } return0; }  
c -1
h -1
0

voidmain() { intn,m,@@ i; int@@ *p,*@@ q; q=@@ (int*)@@ calloc@@ (@@ 10001@@ ,@@ sizeof(int@@ )); scanf("%d%d",&n,&m); for(p=@@ q@@ ;p<@@ q@@ +@@ n*@@ m@@ ;p++) { scanf("%d",@@ p); } if(m==1) { for(p=@@ q@@ ;p<@@ q@@ +@@ n*@@ m@@ ;p++) printf("%d\n",@@ *p@@ ); } else { for(i=0;i<m;i++) { for(p=@@ q@@ +i@@ ;@@ (p@@ <=@@ q@@ +i@@ +@@ (m@@ -1)*@@ i@@ )&&(@@ p@@ <@@ q@@ +@@ n*@@ m@@ );@@ p=p@@ +m@@ -1) { printf("%d\n",@@ *p@@ ); } } for(i=2;i<=n;i++) { for(p=@@ q@@ +m@@ *@@ i@@ -1;@@ (p@@ <=@@ q@@ +m@@ *@@ i@@ -1@@ +@@ (m@@ -1)*(@@ m-1)@@ )&&(@@ p@@ <@@ q@@ +@@ n*@@ m@@ );@@ p=p@@ +m@@ -1) { printf("%d\n",@@ *p@@ ); } } } }  
c -1
h -1
intcheck@@ (intyear@@ ) { if((@@ year%@@ 400==0)||(@@ (@@ year%100!=0@@ )&&(@@ year%@@ 4@@ ==0)@@ )) {@@ return@@ 1@@ ;} else {@@ return0;} } intmain() { intyear@@ ,@@ month,@@ day,@@ date@@ =0; cin>>@@ year; cin>>@@ month@@ ; cin>>@@ day; intm@@ [13]={0,31,28,31,30,31,30,31,31,30,31,30,31}; inti@@ ; for(i=1;i<month;i++) { date@@ =@@ date@@ +m@@ [i]; if(i==@@ 2) { date@@ =@@ date+@@ check@@ (year@@ ); } } date@@ =@@ date@@ +day; cout<<@@ date@@ <<endl; return0; }  
c -1
h -1
0

intmain(){ intm,@@ e,@@ n,@@ i,j,k,@@ s[@@ 1000]; intt=0; scanf("%d%d",&n,&m); for(i=0;i<n;i++){ scanf("%d",&(@@ s[i]@@ )); } for(k=1;k<@@ n;k++){ for(i=0;i<n-@@ k;i++){ e=@@ s@@ [i+1]; s@@ [i+1]=@@ s[i]; s[i]=@@ e; }} for(i=0;i<n;i++){ for(j=i+1;j<n;j++){ if((@@ s[i]@@ +@@ s[j]@@ )==@@ m){ t=1; } }} if(t@@ ==1){ printf("yes"); }else{ printf("no"); } return0; }  
c -1
h -1
intmain() { intn,a[@@ 20000],@@ i,@@ b[@@ 101@@ ]={0},@@ flag=0; cin>>n; for(i=0;i<n;i++) { cin>>a[i]; } for(i=0;i<n;i++) { if(b[@@ a[i]@@ ]==0) { if(flag==0) { cout<<a[i]; flag=1; } else { cout<<'@@ '@@ <<@@ a[i]; } b[@@ a[i]@@ ]=1; } elsecontinue; } cout<<endl; return0; }  
c -1
h -1
0

intmain() { inta,b,c,@@ i,@@ e; ints[@@ 12@@ ]; int@@ d=0; scanf("%d%d%d",&a,&b,&c); if(a%@@ 4==0&&a%100!=0@@ ||a%@@ 400==0) s@@ [1]=@@ 29; else s@@ [1]=@@ 28; s[@@ 0]=@@ 31@@ ;@@ s[2@@ ]=31@@ ;@@ s[@@ 3@@ ]=30@@ ;@@ s[@@ 4@@ ]=31@@ ;@@ s[@@ 5@@ ]=30@@ ;@@ s[@@ 6@@ ]=31@@ ;@@ s[@@ 7@@ ]=31@@ ;@@ s[@@ 8@@ ]=30@@ ;@@ s[@@ 9@@ ]=31@@ ;@@ s[@@ 10@@ ]=30@@ ;@@ s[@@ 11@@ ]=31; for(i=1;i<=@@ b;i++) { d=d+@@ s@@ [i@@ -2@@ ]; } e=@@ d@@ +c; printf("%d",@@ e); return0; }  
c -1
h -1
intmain() { inta[@@ 91@@ ]; inti,n,@@ number; cin>>n; memset(a,0,@@ sizeof(a)); cin>>@@ number; a[@@ number@@ -@@ 10@@ ]++; if(a[@@ number@@ -@@ 10@@ ]@@ ==1) cout<<@@ number; for(i=1;i<n;i++) { cin>>@@ number; a[@@ number@@ -@@ 10@@ ]++; if(a[@@ number@@ -@@ 10@@ ]@@ ==1) cout<<""<<@@ number; } cout<<endl; return0; }  
c -1
h -1
0

intmain(){ intb,@@ c,d,@@ i; doublea,@@ e,@@ f; char@@ n[@@ 501],@@ m[@@ 501]; scanf("%lf",&a); scanf("%s",@@ n); scanf("%s",@@ m); b=strlen(@@ n); c=strlen(@@ m); d=0; if(b@@ !=@@ c){ d++; } for(i=0;i<b;i++){ if((@@ n@@ [i]!='A')&&(@@ n@@ [i]!='T')&&(@@ n@@ [i]!='C')&&(@@ n@@ [i]!='G')||(@@ m@@ [i]!='A')&&(@@ m@@ [i]!='T')&&(@@ m@@ [i]!='C')&&(@@ m@@ [i]!='G')){ d++; } } if(d@@ !=0){ printf("error"); }else{ e=0; for(i=0;i<b;i++){ if(n@@ [i]==@@ m@@ [i]){ e++; } } f=@@ e@@ /@@ b; if(f@@ >@@ a){ printf("yes"); }else{ printf("no"); } } return0; }  
c -1
h -1
typedef@@ structdata@@ *@@ pdata@@ ; struct@@ data { chara[@@ 20]; intb; pdata@@ next; }; pdata@@ sort@@ (intn) { pdata@@ p=@@ NULL@@ ,@@ q@@ =NULL@@ ,@@ s=@@ NULL@@ ,@@ head=NULL; head@@ =(@@ pdata@@ )@@ malloc(@@ sizeof(struct@@ data@@ )); head@@ ->next=NULL; inti; for(i=0;i<n;i++) { s=(@@ pdata@@ )@@ malloc(@@ sizeof(struct@@ data@@ )); scanf("%s%d",@@ s@@ ->@@ a,&@@ (@@ s@@ ->@@ b@@ )); if(s@@ ->@@ b@@ >=60) { q=@@ head; p=head->next; while(p) { if(p->@@ b<@@ s@@ ->@@ b@@ )break; q=q@@ ->next; p=p->next; } q@@ ->next=@@ s; s@@ ->next=p; } else { q=@@ head; p=head->next; while(p) { q=q@@ ->next; p=p->next; } q@@ ->next=@@ s; s@@ ->next=NULL; } } returnhead; } intmain() { intn,i; pdata@@ p,@@ head; scanf("%d",&n); head=@@ sort(@@ n); p=head->next; for(i=0;i<n;i++) { printf("%s\n",p->@@ a); p=p->next; } }  
c -1
h -1
0

intmain() { int@@ n=@@ 100@@ ,@@ m=@@ 16@@ ,i@@ =1@@ ,j,@@ k,@@ t=0; inta[16]; while(n@@ >0) { cin>>a[0]; if(a[0]@@ ==@@ (@@ -1)) break; else { while(m@@ >0) { cin>>a[i]; if(a[i]==0) break; m@@ --; i++; } for(j=0;j<=i-1;j++) for(k=0;k<=@@ i-1;k++) { if(a[j]==2*@@ a[k]) t++; } } cout<<t@@ <<endl; t=0; m=@@ 16@@ ; i=1; n--; } return0; }  
c -1
h -1
structstudent { intID; intchinese; intmath; inttotal; }@@ st@@ [4@@ ],@@ temp; intmain() { intn,@@ cnt@@ =@@ 3@@ ; cin>>n; for(inti=0;i<@@ 3;i++) { cin>>@@ st[i].@@ ID@@ >>@@ st[i].@@ chinese@@ >>@@ st[i].@@ math; st[i].@@ total=@@ st[i].@@ chinese+@@ st[i].@@ math; } do{ cin>>@@ st@@ [3].@@ ID@@ >>@@ st@@ [3].@@ chinese@@ >>@@ st@@ [3].@@ math; st@@ [3].@@ total=@@ st@@ [3].@@ chinese+@@ st@@ [3].@@ math; cnt@@ ++; for(inti=1;i<@@ 4;i++) { for(intj=0;j<@@ 4@@ -i;j++) { if(@@ st@@ [j+1].@@ total>@@ st@@ [j].@@ total) { temp=@@ st@@ [j]; st@@ [j]=@@ st@@ [j+1]; st@@ [j+1]=temp; } } }@@ }while(@@ cnt@@ <@@ n); for(inti=0;i<@@ 3;i++) { cout<<@@ st[i].@@ ID@@ <<""<<@@ st[i].@@ total@@ <<endl; } return0; }  
c -1
h -1
0

struct@@ DP { int@@ height@@ ; intnum; }@@ dp@@ [26]; intmain() { intk,@@ i,j; inth@@ [26]; int@@ Max@@ ; cin>>k; for(i=1;i<=k;i++) { cin>>@@ h@@ [i]; } dp@@ [0].@@ height@@ =@@ INT_MAX@@ ; dp@@ [0].@@ num=0; for(i=1;i<=k;i++) { dp@@ [i].@@ height@@ =@@ h@@ [i]; Max@@ =@@ INT_MIN@@ ; for(j=0;j<i;j++) { if(@@ Max@@ <@@ dp@@ [j].@@ num@@ &&@@ dp@@ [j].@@ height@@ >=@@ dp@@ [i].@@ height@@ ) Max@@ =@@ dp@@ [j].@@ num; } dp@@ [i].@@ num=@@ Max@@ +1; } Max@@ =@@ INT_MIN@@ ; for(i=0;i<=@@ k;i++) if(@@ Max@@ <@@ dp@@ [i].@@ num@@ )@@ Max@@ =@@ dp@@ [i].@@ num; cout<<@@ Max@@ <<endl; return0; }  
c -1
h -1
intmain() { inta,b,c,@@ y; scanf("%d%d%d",&a,&b,&c); if((@@ a%@@ 4==0)&&(@@ a%100!=0@@ )) { if(b==1) { y=@@ c; } if(b==@@ 2) { y@@ =31+c; } if(b==@@ 3) { y@@ =31+29@@ +c; } if(b==@@ 4) { y@@ =31+29@@ +31+@@ c; } if(b==@@ 5) { y@@ =31+29@@ +31+30@@ +c; } if(b==@@ 6) { y@@ =31+29@@ +31+30+31+@@ c; } if(b==@@ 7) { y@@ =31+29@@ +31+30+31+30@@ +c; } if(b==@@ 8) { y@@ =31+29@@ +31+30+31+30+31+@@ c; } if(b==@@ 9) { y@@ =31+29@@ +31+30+31+30+31+31+@@ c; } if(b==@@ 10) { y@@ =31+29@@ +31+30+31+30+31+31+30@@ +c; } if(b==@@ 11) { y@@ =31+29@@ +31+30+31+30+31+31+30+31+@@ c; } if(b==@@ 12) { y@@ =31+29@@ +31+30+31+30+31+31+30+31+30@@ +c; } printf("%d",@@ y); } elseif(@@ a%@@ 400==0) { if(b==1) { y=@@ c; } if(b==@@ 2) { y@@ =31+c; } if(b==@@ 3) { y@@ =31+29@@ +c; } if(b==@@ 4) { y@@ =31+29@@ +31+@@ c; } if(b==@@ 5) { y@@ =31+29@@ +31+30@@ +c; } if(b==@@ 6) { y@@ =31+29@@ +31+30+31+@@ c; } if(b==@@ 7) { y@@ =31+29@@ +31+30+31+30@@ +c; } if(b==@@ 8) { y@@ =31+29@@ +31+30+31+30+31+@@ c; } if(b==@@ 9) { y@@ =31+29@@ +31+30+31+30+31+31+@@ c; } if(b==@@ 10) { y@@ =31+29@@ +31+30+31+30+31+31+30@@ +c; } if(b==@@ 11) { y@@ =31+29@@ +31+30+31+30+31+31+30+31+@@ c; } if(b==@@ 12) { y@@ =31+29@@ +31+30+31+30+31+31+30+31+30@@ +c; } printf("%d",@@ y); } else { if(b==1) { y=@@ c; } if(b==@@ 2) { y@@ =31+c; } if(b==@@ 3) { y@@ =31+28@@ +c; } if(b==@@ 4) { y@@ =31+28@@ +31+@@ c; } if(b==@@ 5) { y@@ =31+28@@ +31+30@@ +c; } if(b==@@ 6) { y@@ =31+28@@ +31+30+31+@@ c; } if(b==@@ 7) { y@@ =31+28@@ +31+30+31+30@@ +c; } if(b==@@ 8) { y@@ =31+28@@ +31+30+31+30+31+@@ c; } if(b==@@ 9) { y@@ =31+28@@ +31+30+31+30+31+31+@@ c; } if(b==@@ 10) { y@@ =31+28@@ +31+30+31+30+31+31+30@@ +c; } if(b==@@ 11) { y@@ =31+28@@ +31+30+31+30+31+31+30+31+@@ c; } if(b==@@ 12) { y@@ =31+28@@ +31+30+31+30+31+31+30+31+30@@ +c; } printf("%d",@@ y); } return0; }  
c -1
h -1
0

intmain() { intn,k; inta[@@ LEN@@ ]; inti,j; scanf("%d%d",&@@ n,@@ &@@ k); for(i=0;i<n;i++) scanf("%d",&a[i]); for(i=0;i<n;i++) { for(j=0;j<n;j++) { if(i==@@ j@@ )continue; if(a[i]+a[j]==k) { printf("yes"); return0; } } } printf("no"); return0; }  
c -1
h -1
intmain() { inta[100][100@@ ]={@@ 1@@ }; inti,j,@@ x1,@@ x2,@@ y1,@@ y2@@ ; intn,@@ s; scanf("%d",&n); for(i=1;i<=n;i++) { for(j=1;j<=n;j++) { scanf("%d",&a[i][j]); } printf("\n"); } for(i=1;i<=n;i++) { for(j=1;j<=n;j++) { if(a[i][j]==0) { x1=i; y1=j; break; } } if(j!=@@ n@@ +1) break; } for(i=n@@ ;i>=1;i--) { for(j=n@@ ;j@@ >=1@@ ;j--) { if(a[i][j]==0) { x2=i; y2=j; break; } } if(j@@ !=0) break; } s=(@@ y2-y1@@ -1)*(@@ x2-x1@@ -1); printf("%d\n",s); return0; }  
c -1
h -1
0

int@@ n1,n2,@@ num1@@ [@@ 10001@@ ],@@ num2@@ [@@ 10001@@ ]; void@@ init@@ () { inti; cin>>@@ n1@@ >>@@ n2; for(i=0;i<n1@@ ;i++)@@ cin>>@@ num1@@ [i]; for(i=0;i<n2@@ ;i++)@@ cin>>@@ num2@@ [i]; } voidsort@@ () { inti,j,t; for(i=0;i<n1@@ -1;i++) for(j=0;j<@@ n1@@ -i-1;j++) if(@@ num1@@ [j]>@@ num1@@ [j+1]) { t=@@ num1@@ [j];@@ num1@@ [j]=@@ num1@@ [j+1];@@ num1@@ [j+1]=t; } for(i=0;i<n2@@ -1;i++) for(j=0;j<@@ n2@@ -i-1;j++) if(@@ num2@@ [j]>@@ num2@@ [j+1]) { t=@@ num2@@ [j];@@ num2@@ [j]=@@ num2@@ [j+1];@@ num2@@ [j+1]=t; } } void@@ merge@@ () { inti,j; for(i=@@ n1@@ ,j@@ =0;j<@@ n2@@ ;i++,j@@ ++)@@ num1@@ [i]=@@ num2@@ [j]; n1@@ +=@@ n2; } void@@ show@@ () { inti; cout<<@@ num1@@ [0]; for(i=1;i<@@ n1@@ ;i++)@@ cout<<'@@ '@@ <<@@ num1@@ [i]; cout<<endl; } intmain() { init@@ (); sort@@ (); merge@@ (); show@@ (); return0; }  
c -1
h -1
voidmain() { intn; inti,j=0,@@ k; intt; int@@ old@@ [100]; intage@@ [100]; chara[100@@ ][@@ 20]; char@@ a1@@ [100][@@ 20]; scanf("%d",&n); for(i=1;i<=n;i++) { scanf("%s",@@ a[i]); scanf("%s",@@ a1@@ [i]); } for(i=1;i<=n;i++) { age@@ [i]=@@ atoi@@ (@@ a1@@ [i]); if(age[i]@@ >=60) { old@@ [j]@@ =i; j++; } } for(i=0;i<j;i++) for(k=0;k<j@@ -i@@ -1;k++) if(age@@ [@@ old@@ [k]@@ ]<@@ age@@ [@@ old@@ [k+1@@ ]@@ ]) { t=@@ old@@ [k]; old@@ [k]=@@ old@@ [k+1]; old@@ [k+1]=@@ t; } for(i=0;i<j;i++) printf("%s\n",@@ a[@@ old@@ [i]@@ ]); for(i=1;i<=n;i++) { if(age[i]@@ >=60) continue; printf("%s\n",@@ a[i]); } }  
c -1
h -1
0

intmain() { intn,k,i,j,@@ ylf@@ =0; inta[1000]; scanf("%d%d",&n,&k); for(i=0;i<n;i++) { scanf("%d",&a[i]); } i=0; while(i<@@ n@@ &&@@ ylf@@ ==0) { j@@ =i+1; while(j@@ <n@@ &&@@ ylf@@ ==0) { if(a[i]+a[j]==k) { printf("yes"); ylf@@ =1; } else { j++; } } i++; } if(@@ ylf@@ ==0) { printf("no"); } return0; }  
c -1
h -1
intmain() { inti,j,n,@@ x1,y1,x2,y2@@ ,@@ a[1000],@@ t; x1@@ =-1; scanf("%d",&n); for(i=0;i<n;i++) { for(j=0;j<n;j++) { scanf("%d",&a[j]); if(a[j]@@ ==0) { if(@@ x1@@ ==-1) { x1=i; y1=j; } x2=i; y2=j; } } } t@@ =(@@ x2-x1-1)*(y2-y1-1); printf("%d\n",t); return0; }  
c -1
h -1
0

intmain() { inta,b,c,@@ y; scanf("%d%d%d",&a,&b,&c); if((@@ a%@@ 4==0)&&(@@ a%100!=0@@ )) { if(b==1) { y=@@ c; } if(b==@@ 2) { y@@ =31+c; } if(b==@@ 3) { y@@ =31+29@@ +c; } if(b==@@ 4) { y@@ =31+29@@ +31+@@ c; } if(b==@@ 5) { y@@ =31+29@@ +31+30@@ +c; } if(b==@@ 6) { y@@ =31+29@@ +31+30+31+@@ c; } if(b==@@ 7) { y@@ =31+29@@ +31+30+31+30@@ +c; } if(b==@@ 8) { y@@ =31+29@@ +31+30+31+30+31+@@ c; } if(b==@@ 9) { y@@ =31+29@@ +31+30+31+30+31+31+@@ c; } if(b==@@ 10) { y@@ =31+29@@ +31+30+31+30+31+31+30@@ +c; } if(b==@@ 11) { y@@ =31+29@@ +31+30+31+30+31+31+30+31+@@ c; } if(b==@@ 12) { y@@ =31+29@@ +31+30+31+30+31+31+30+31+30@@ +c; } printf("%d",@@ y); } elseif(@@ a%@@ 400==0) { if(b==1) { y=@@ c; } if(b==@@ 2) { y@@ =31+c; } if(b==@@ 3) { y@@ =31+29@@ +c; } if(b==@@ 4) { y@@ =31+29@@ +31+@@ c; } if(b==@@ 5) { y@@ =31+29@@ +31+30@@ +c; } if(b==@@ 6) { y@@ =31+29@@ +31+30+31+@@ c; } if(b==@@ 7) { y@@ =31+29@@ +31+30+31+30@@ +c; } if(b==@@ 8) { y@@ =31+29@@ +31+30+31+30+31+@@ c; } if(b==@@ 9) { y@@ =31+29@@ +31+30+31+30+31+31+@@ c; } if(b==@@ 10) { y@@ =31+29@@ +31+30+31+30+31+31+30@@ +c; } if(b==@@ 11) { y@@ =31+29@@ +31+30+31+30+31+31+30+31+@@ c; } if(b==@@ 12) { y@@ =31+29@@ +31+30+31+30+31+31+30+31+30@@ +c; } printf("%d",@@ y); } else { if(b==1) { y=@@ c; } if(b==@@ 2) { y@@ =31+c; } if(b==@@ 3) { y@@ =31+28@@ +c; } if(b==@@ 4) { y@@ =31+28@@ +31+@@ c; } if(b==@@ 5) { y@@ =31+28@@ +31+30@@ +c; } if(b==@@ 6) { y@@ =31+28@@ +31+30+31+@@ c; } if(b==@@ 7) { y@@ =31+28@@ +31+30+31+30@@ +c; } if(b==@@ 8) { y@@ =31+28@@ +31+30+31+30+31+@@ c; } if(b==@@ 9) { y@@ =31+28@@ +31+30+31+30+31+31+@@ c; } if(b==@@ 10) { y@@ =31+28@@ +31+30+31+30+31+31+30@@ +c; } if(b==@@ 11) { y@@ =31+28@@ +31+30+31+30+31+31+30+31+@@ c; } if(b==@@ 12) { y@@ =31+28@@ +31+30+31+30+31+31+30+31+30@@ +c; } printf("%d",@@ y); } return0; }  
c -1
h -1
intmain() { intx[@@ 16],@@ i,j,k,@@ a; while(1){ i@@ =0;j@@ =0@@ ;k@@ =0;@@ a=0; for(i=0;i<16@@ ;i++)@@ x@@ [i]=0; for(i=0;@@ ;i++){ scanf("%d",&@@ x[i]); if(x@@ [i]==@@ -1@@ ||@@ x[i]@@ ==0)break; } if(x@@ [0]@@ ==-1)break; else@@ for(a@@ =0,@@ j@@ =1@@ ;j<@@ i;j++){ for(k=0;k<j@@ ;k++){ if(x@@ [k]==2*@@ x[j]@@ ||@@ x@@ [j]==2*@@ x@@ [k]@@ )@@ a++; } } if(x@@ [0]==@@ 4)@@ a=@@ 2; if(x@@ [0]==@@ 3)@@ a=@@ 2; printf("%d\n",@@ a); } return0; }  
c -1
h -1
0

intf@@ (intx,inty) { if(y@@ ==@@ x) return1; if(y@@ >@@ x) return0; if(x%@@ y@@ ==0) return@@ f(@@ x,@@ y@@ +1)@@ +@@ f(@@ x/@@ y,@@ y); else return@@ f(@@ x,@@ y@@ +1); } intmain() { intn,@@ x; cin>>n; int@@ z,@@ i; i=@@ n; while(i@@ >0) { i@@ =i-1; cin>>x; z=@@ f(@@ x,@@ 2); cout<<@@ z@@ <<endl; } return0; }  
c -1
h -1
intmain() { chars[256],@@ z@@ [256],@@ r@@ [256]; inti; cin.getline(@@ s,@@ 256); cin.getline(@@ z,@@ 256); cin.getline(@@ r,@@ 256); char*@@ p=strstr(@@ s,@@ z); if(p@@ ==NULL) cout<<@@ s; else { char*@@ q=@@ s; for(i=0;i<@@ (p@@ -@@ q@@ );i++) cout<<@@ s[i]; cout<<@@ r; p=p+@@ (@@ strlen(@@ z@@ )); while(@@ *p@@ !='\0') { cout<<@@ *p; p++; } } return0; }  
c -1
h -1
0

intmain(intargc,char*argv[]) { intn; scanf("%d",&n); structstu@@ { intid; int@@ x,y; }stu[100000]; int@@ no1@@ =0; int@@ no2@@ =0; int@@ no3@@ =0; inti; int@@ N1@@ ,@@ N2@@ ,@@ N3@@ ; for(i=0;i<n;i++) { scanf("%d%d%d",&stu[i].@@ id@@ ,&stu[i].@@ x@@ ,&stu[i].@@ y); } for(i=0;i<n;i++) { if((@@ stu[i].@@ x+@@ stu[i].@@ y@@ )>@@ no1@@ ){@@ no2@@ =@@ no1@@ ;@@ no1@@ =(@@ stu[i].@@ x+@@ stu[i].@@ y@@ );@@ N2@@ =@@ N1@@ ;@@ N1@@ =i;} elseif((@@ stu[i].@@ x+@@ stu[i].@@ y@@ )>@@ no2@@ ){@@ no3@@ =@@ no2@@ ;@@ no2@@ =(@@ stu[i].@@ x+@@ stu[i].@@ y@@ );@@ N3@@ =@@ N2@@ ;@@ N2@@ =i;} elseif((@@ stu[i].@@ x+@@ stu[i].@@ y@@ )>@@ no3@@ ){@@ no3@@ =(@@ stu[i].@@ x+@@ stu[i].@@ y@@ );@@ N3@@ =i;} } printf("%d%d\n%d%d\n%d@@ %d",@@ stu[@@ N1@@ ].id,@@ (@@ stu[@@ N1@@ ].@@ x+@@ stu[@@ N1@@ ].@@ y@@ ),@@ stu[@@ N2@@ ].id,@@ (@@ stu[@@ N2@@ ].@@ x+@@ stu[@@ N2@@ ].@@ y@@ ),@@ stu[@@ N3@@ ].id,@@ (@@ stu[@@ N3@@ ].@@ x+@@ stu[@@ N3@@ ].@@ y@@ )); return0; }  
c -1
h -1
intmain() { int@@ t@@ [100][100@@ ]={0},@@ i,j,@@ n,@@ row@@ [2@@ ]={0},@@ col@@ [2@@ ]={0}; cin>>n; for(i=1;i<=n;i++) { for(j=1;j<=n;j++) { cin>>@@ t@@ [i][j]; } } for(i=1;i<=n;i++) { for(j=1;j<=n;j++) { if(t@@ [i][j]==0&&@@ row@@ [0]@@ ==0) row@@ [0]=@@ i; if(t@@ [n@@ -i@@ +1@@ ][j]@@ ==0&&@@ row@@ [1]@@ ==0) row@@ [1]=@@ n-i@@ +1; if(t@@ [j]@@ [i]@@ ==0&&@@ col@@ [0]@@ ==0) col@@ [0]=@@ i; if(t@@ [n@@ -j@@ +1@@ ][n@@ -i@@ +1@@ ]@@ ==0&&@@ col@@ [1]@@ ==0) col@@ [1]=@@ n-i@@ +1; } } cout<<(@@ row@@ [1]@@ -@@ row@@ [0]@@ -1)*(@@ col@@ [1]@@ -col@@ [0]@@ -1)@@ <<endl; return0; }  
c -1
h -1
0

intmain() { intk,i,j,@@ a[@@ 25@@ ]={0},@@ f@@ [25@@ ]={@@ 1@@ },@@ t=0; scanf("%d",&k); for(i=0;i<k;i++) scanf("%d",&a[i]); for(i=0;i<k;i++) for(j=0;j<i;j++) if(a[j]>=a[i]&&@@ f@@ [j]>=@@ f@@ [i])@@ f[i]=@@ f@@ [j]+1; elseif(@@ f@@ [i]@@ ==0)@@ f@@ [i]=1; for(i=0;i<k;i++) if(t@@ <@@ f@@ [i])@@ t=@@ f[i]; printf("\n%d",@@ t); return0; }  
c -1
h -1
main() { intleap@@ (int@@ x); inta,b,c,@@ t,@@ i; scanf("%d%d%d",&a,&b,&c); t=0; if(leap@@ (@@ a)@@ ==1) { for(i=1;i<@@ b;i++) { if(i==1||i==3||i==5||i==7||i==8||i==10@@ ||i==@@ 12) t=t@@ +31; if(i==@@ 2) t=t+@@ 29; if(i==@@ 4||i==6||i==9||i==11) t=t+@@ 30; } t=t@@ +c; printf("%d",t); } if(leap@@ (@@ a)@@ ==0) { for(i=1;i<@@ b;i++) { if(i==1||i==3||i==5||i==7||i==8||i==10@@ ||i==@@ 12) t=t@@ +31; if(i==@@ 2) t=t+@@ 28; if(i==@@ 4||i==6||i==9||i==11) t=t+@@ 30; } t=t@@ +c; printf("%d",t); } getchar(); getchar(); } intleap@@ (intx) { intleap@@ ; if((x@@ %4==0&&@@ x@@ %100!=0@@ )||(@@ x%@@ 400==0)) leap@@ =1; else leap@@ =0; return@@ leap@@ ; }  
c -1
h -1
0

intf(int@@ q@@ ,int@@ x) { if(q@@ <@@ x) {@@ inti,k,@@ p,@@ sum; k@@ =0;@@ sum=0;@@ p=0; for(i=2;i<=@@ x@@ /2@@ ;i++) if(x@@ %i==0)@@ k=k+1; if(k@@ ==0)@@ return1; else {@@ for(i=@@ q@@ ;i<=sqrt(@@ x@@ );i++) if(x@@ %i==0)@@ sum=sum+@@ f(@@ i,@@ x@@ /i); return@@ sum@@ +1; p=0; sum=0; } } else {@@ if(q@@ ==@@ x)@@ return1; else return0; } } intmain() { intn,i,@@ x,@@ sum; scanf("%d",&n); for(i=0;i<n;i++) { scanf("%d",&x); sum=@@ f(@@ 2,@@ x); printf("%d\n",sum); } }  
c -1
h -1
voidmain() { intn; scanf("%d",&n); inti; inta[20000]; for(i=0;i<=n-1;i++) scanf("%d",&a[i]); intj,@@ tag@@ =0; printf("%d",a[0]); for(i=1;i<=n-1;i++) {@@ tag@@ =0; for(j=0;j<=i-1;j++) {@@ if(a[j]==@@ a[i])@@ tag@@ ++;} if(tag@@ ==0)@@ printf("%d",a[i]); } }  
c -1
h -1
0

intmain() { intsz[@@ 2000]; intn,k,@@ s,@@ b; b=0; scanf("%d%d",&n,&k); for(inti=0;i<n;i++) { scanf("%d",&sz[i]); if(i@@ >=1@@ &&i@@ <n) for(int@@ a@@ =0;a@@ <i@@ ;a@@ ++) { s=@@ sz[i]@@ +@@ sz[a@@ ]; if(s@@ ==k) b++; } } if(b@@ !=0) printf("yes"); elseif(@@ b@@ ==0) printf("no"); return0; }  
c -1
h -1
intmain() { chars@@ [100][10]; inta[100],b[100],@@ i,@@ n,k,@@ l@@ ,j; scanf("%d",&n); for(i=0;i<n;i++) { scanf("%s%d",@@ s[i]@@ ,&@@ a[i]); b[i]=@@ a[i]; } for(k=@@ n-1@@ ;k@@ >0@@ ;k--) { for(i=0;i<k;i++) { if(b[i]>b[i+1]) { l=@@ b[i]; b[i]=b[i+1]; b[i+1]=@@ l; } } } i=@@ n-1; while(@@ b[i]@@ >=60) { for(j=0;j<n;j++) { if(a[j]==@@ b[i]) { printf("%s\n",@@ s@@ [j]); } } while(@@ b@@ [i-1@@ ]==@@ b[i]) { i--; } i--; } for(i=0;i<n;i++) { if(a[i]@@ <60) printf("%s\n",@@ s[i]); } return0; }  
c -1
h -1
0

voidmain() { intm; scanf("%d",&m); inti,j,k,@@ x,@@ t; structbook { intnum; char@@ w@@ [26]; }b[@@ 1000]; for(i=0;i<m;i++) { scanf("%d",&@@ b[i].@@ num); scanf("%s",&@@ b[i].@@ w); } intc[@@ 26]; for(i=0;i<26@@ ;i++)@@ c[i]@@ =0; for(i=0;i<26;i++) { for(j=0;j<m;j++) { for(k=0;k<26;k++) { if(b[j]@@ .@@ w@@ [k]@@ !=@@ '\0@@ '&&@@ b[j].@@ w@@ [k]@@ -i@@ =='@@ A')@@ c[i]@@ ++; } } } int@@ d@@ [26]; for(i=0;i<26@@ ;i++)@@ d[i]=@@ c[i]; for(i=0;i<@@ 25;i++) { if(d@@ [i]>@@ d@@ [i+1]) { t=@@ d[i]; d[i]=@@ d@@ [i+1]; d@@ [i+1]=@@ t; } } for(i=0;i<26;i++) { if(c@@ [i]==@@ d[@@ 25@@ ])@@ x@@ =i; } printf("%c\n",@@ 'A'+@@ x); printf("%d\n",@@ c[@@ x@@ ]); for(j=0;j<m;j++) { for(k=0;k<26;k++) { if(b[j]@@ .@@ w@@ [k]@@ -x@@ =='@@ A')@@ printf("%d\n",@@ b[j].@@ num); } } }  
c -1
h -1
intmain() { intyear,month,day; int@@ result; scanf("%d%d%d",&year,&month,&day); result@@ =(@@ month@@ -1)*@@ 30@@ +day; if((year%4==0&&year%100!=0)||(year%400==0)) { if(month==@@ 2@@ ||@@ month==@@ 4@@ ||@@ month==@@ 5) {@@ result=result@@ +1;} if(month==@@ 6@@ ||@@ month==@@ 7) {@@ result=result+@@ 2@@ ;} if(month==8) {@@ result=result+@@ 3@@ ;} if(month==@@ 9@@ ||@@ month==@@ 10) {@@ result=result+@@ 4@@ ;} if(month==@@ 11@@ ||@@ month==@@ 12) {@@ result=result+@@ 5@@ ;} } else { if(month==2) {@@ result=result@@ +1;} if(month==3) {@@ result=result@@ -1@@ ;} if(month==@@ 6@@ ||@@ month==@@ 7) {@@ result=result@@ +1;} if(month==8) {@@ result=result+@@ 2@@ ;} if(month==@@ 9@@ ||@@ month==@@ 10) {@@ result=result+@@ 3@@ ;} if(month==@@ 11@@ ||@@ month==@@ 12) {@@ result=result+@@ 4@@ ;} } printf("%d",@@ result); return0; }  
c -1
h -1
0

intmain(){ inti,@@ x,y,@@ m=0,@@ c=1; double@@ z,@@ w; chara[@@ 1000],b[1000]; scanf("%lf\n",&@@ z); scanf("%s\n@@ %s",@@ a,b); x@@ =strlen(a); y@@ =strlen(b); if(x@@ !=@@ y){ printf("error");@@ c=0; } else{ for(i=0;i<x;i++){ if((a[i]!='@@ A'&&a[i]!='T'&&a[i]!='C'&&a[i]!='G')||(b[i]!='A'&&b[i]!='T'&&b[i]!='C'&&b[i]!='@@ G')@@ ){@@ printf("error");@@ c@@ =0;@@ break;} else@@ if(a[i]==b[i]@@ ){@@ m++; w@@ =1.0*@@ m/@@ x@@ ;} }} if(c@@ !=0@@ ){@@ if(w@@ >@@ z@@ )@@ printf("yes");@@ else@@ printf("no");} return0; }  
c -1
h -1
struct@@ Top { intnum; float@@ score; }@@ Top@@ [4@@ ]={@@ {@@ 0,@@ 0@@ }@@ }; struct@@ Top@@ *p; void@@ maopao@@ (intn) { inti; for(i=1;i<n;i++) { for(p=@@ Top@@ ;p<@@ Top@@ +@@ n-i@@ ;p++) { if((@@ p->@@ score@@ )@@ <(@@ (p@@ +1)@@ ->score@@ )) { Top@@ [3@@ ]@@ =*@@ p; *p@@ =*(p@@ +1); *(p@@ +1)@@ =@@ Top@@ [3]; } } } } voidsort@@ (@@ float@@ a,int@@ n) { p=@@ Top@@ +@@ 2; if(a@@ >@@ (p->@@ score@@ )) { p->@@ score@@ =@@ a; p->@@ num=@@ n; } maopao@@ (@@ 3@@ ); } intmain() { inti,n,@@ num; float@@ yw@@ ,@@ sx@@ ,@@ score; scanf("%d\n",&n); for(i=0;i<n;i++) { scanf("%d@@ %@@ f@@ %@@ f",&@@ num,@@ &@@ yw@@ ,&@@ sx@@ ); float@@ score@@ =@@ yw@@ +@@ sx; sort(@@ score@@ ,@@ num); } for(p=@@ Top@@ ;p<@@ Top@@ +@@ 3@@ ;p++) { printf("%d@@ %@@ g@@ \n",@@ p->@@ num,@@ p->@@ score@@ ); } return0; }  
c -1
h -1
0

intmain(){ inti,@@ a=0,@@ j,@@ c,@@ b; doublen; char@@ sz1@@ [1000],@@ sz2@@ [1000]; scanf("%lf",&n); scanf("%s",@@ sz1@@ ); scanf("%s",@@ sz2@@ ); for(i=0;@@ sz1@@ [i]!='\0';i++){ c=i; } for(j=0;@@ sz2@@ [j]@@ !='\0';j++){ b=j; } if(c@@ !=@@ b){ printf("error"); return0; } else{ for(i=0;@@ sz1@@ [i]!='\0';i++){ if((@@ sz1@@ [i]!='A'&&@@ sz1@@ [i]!='C'&&@@ sz1@@ [i]!='G'&&@@ sz1@@ [i]!='T')@@ ||(@@ sz2@@ [i]!='C'&&@@ sz2@@ [i]!='A'&&@@ sz2@@ [i]!='G'&&@@ sz2@@ [i]!='T')@@ ){ printf("error");@@ return0; } } for(j=0;@@ sz1@@ [j]@@ !='\0';j++){ if(@@ sz1@@ [j]==@@ sz2@@ [j]@@ &&(@@ sz1@@ [j]=='@@ A'||@@ sz1@@ [j]=='@@ C'||@@ sz1@@ [j]=='@@ G'||@@ sz1@@ [j]=='@@ T')&&(@@ sz2@@ [j]=='@@ C'||@@ sz2@@ [j]=='@@ A'||@@ sz2@@ [j]=='@@ G'||@@ sz2@@ [j]=='@@ T')@@ ){ a++; } } } if(1.0*@@ a/@@ (@@ c@@ +1)@@ >n){ printf("yes"); } else{ printf("no"); } return0; }  
c -1
h -1
intmain() { inta[@@ 11]; inty,m,d,@@ i,@@ leap@@ ,@@ total=0; scanf("%d%d%d",&y,&m,&d); if(y%@@ 4==0) { if(y%@@ 100==0) { if(y%@@ 400==0) leap@@ =1; else@@ leap@@ =0; } else@@ leap@@ =1; } else@@ leap@@ =0; if(leap@@ )@@ a[1]=29; else@@ a[1]=@@ 28; a[0]=@@ 31; a[2@@ ]=31; a[@@ 3@@ ]=30; a[@@ 4@@ ]=31; a[@@ 5@@ ]=30; a[@@ 6@@ ]=31; a[@@ 7@@ ]=31; a[@@ 8@@ ]=30; a[@@ 9@@ ]=31; a[@@ 10@@ ]=30; a[@@ 11@@ ]=31; for(i=0;i<m-1;i++) total+=@@ a[i]; total+=@@ d; printf("%d",@@ total); return0; }  
c -1
h -1
0

intfenjie@@ (inta,intb) { int@@ c@@ =1,i; for(i=b@@ ;i<=@@ (int)sqrt(@@ a)@@ ;i++) { if(a%i==0) c@@ +=@@ fenjie@@ (a/i,i); } return@@ c; } main() { intn,i,@@ a,@@ c; scanf("%d",&n); for(i=1;i<=n;i++) { scanf("%d",&a); c=@@ fenjie@@ (a,@@ 2); printf("%d\n",@@ c); } }  
c -1
h -1
intk; int@@ arr@@ [30]; intnum[@@ 30]; intmain() { cin>>k; for(inti=0;i<k;i++) cin>>@@ arr@@ [i]; for(inti=0;i<k;i++) num[i]@@ =1; for(inti=0;i<k;i++) { for(intj=0;j<i;j++) { if(@@ arr@@ [j]>=@@ arr@@ [i]@@ &&@@ num@@ [j]>=@@ num@@ [i]) num[i]=@@ num@@ [j]+1; } } int@@ res@@ =-1; for(inti=0;i<k;i++) if(num@@ [i]>@@ res@@ ) res@@ =@@ num[i]; cout<<@@ res@@ <<endl; return0; }  
c -1
h -1
0

voidinput@@ (inta[@@ ][100@@ ],int@@ m,intn) { for(inti=0;i<m;i++) for(intj=0;j<n;j++) cin>>@@ *(*(a@@ +j)@@ +i); } intmain() { int@@ square@@ [100][100]; intk,@@ m,n; cin>>k; for(inti=1;i<=@@ k;i++) { cin>>m>>n; input@@ (@@ square@@ ,@@ m,n); intsum=0; for(intj=0;j<m;j++) sum=sum+@@ *(@@ *@@ square@@ +j)+@@ *(*(@@ square@@ +@@ n-1)@@ +j); for(intj=1;j<@@ n-1;j++) sum=sum+@@ *@@ *(@@ square@@ +j)+@@ *(*(@@ square@@ +j)+@@ m-1@@ ); if(m==1) sum=sum@@ /2; cout<<sum<<endl; } return0; }  
c -1
h -1
intmain() { inta[@@ 20],@@ i=0,@@ j,@@ count=0; while(cin>>@@ a[i]) { if(a[i]==0) { cout<<count<<endl; count=0; i=0; continue; } if(i@@ !=0) { for(j=0;j<i;j++) { if(a[j]==2*@@ a[i]@@ ||@@ a[i]==@@ 2*@@ a[j]) {@@ count@@ ++;} } } i++; } return0; }  
c -1
h -1
0

int@@ map@@ [100][100]; intm,n; void@@ count@@ () { inti,j; intsum=0; for(i=0;i<m;i++) { for(j=0;j<n;j++) { if(i+j@@ ==@@ j@@ ||@@ i@@ +j@@ ==@@ i@@ ||@@ i@@ +j@@ ==@@ i+@@ n-1@@ ||@@ i@@ +j@@ ==@@ j@@ +m@@ -1) { sum=sum+@@ map@@ [i][j]; } } } cout<<sum<<endl; } intmain() { intsum@@ ;@@ intk=0; cin>>@@ sum; inti,j; for(k=0;k<@@ sum@@ ;k++) { cin>>m>>n; for(i=0;i<m;i++) { for(j=0;j<n;j++) { cin>>@@ map@@ [i][j]; } } count@@ (); } }  
c -1
h -1
intmain() { intsz[@@ 100000],@@ a[100],@@ n,@@ i,@@ d; scanf("%d",&n); for(i=0;i<100;i++) { a[i]@@ =1; } scanf("%d",&sz@@ [0]); printf("%d",@@ sz@@ [0]); a[@@ sz[0]@@ ]=0; for(i=1;i<n;i++) { scanf("%d",&sz[i]); d=@@ sz[i]; if(a[@@ d@@ ]!=0) { printf("%d",@@ sz@@ [i]); } a[d@@ ]=0; } return0; }  
c -1
h -1
0

intf@@ (inti,int@@ t) { if(i<@@ t) {@@ return0;} int@@ b=1; inta; for(@@ a=@@ t@@ ;a@@ <i@@ ;a@@ ++) { if(i@@ %@@ a@@ ==0) {@@ b=@@ b+@@ f(@@ i@@ /@@ a,@@ a@@ );} } return@@ b; } intmain() { intn; scanf("%d",&n); inti=0; int@@ d@@ [100]; do { scanf("%d",&@@ d[i]); i++; }@@ while(i<@@ n); i=0; do { printf("%d\n",@@ f(@@ d@@ [i],@@ 2)); i++; }@@ while(i<@@ n); return0; }  
c -1
h -1
int@@ times@@ =1; int@@ used@@ [@@ 1000]={0}; void@@ fuck@@ (intn) { inti=0; for(i=2;i<=@@ sqrt(n@@ );i++) { if(@@ used@@ [i]@@ ==0&&@@ n@@ %i==0) { intj=0; for(j=0;j<=i-1;j++) used@@ [j]@@ =1; times@@ ++; fuck@@ (n@@ /i); for(j=0;j<=i-1;j++) used@@ [j]@@ =0; } } } intmain() { intn=0; intnum=0; cin>>n; inti=0; for(i=0;i<n;i++) { cin>>num; fuck@@ (@@ num); cout<<@@ times@@ <<endl; times@@ =1; intk=0; for(k=0;k<=@@ 999@@ ;k++) used@@ [k]@@ =0; } return0; }  
c -1
h -1
1


int@@ array[100][100]; intmain() { introw,col,@@ i,j,@@ m; scanf("%d%d\n",&@@ row@@ ,&@@ col); for(i=0;i<row;i++) { for(j=0;j<col;j++) scanf("%d",&array@@ [i][j]); } for(m=0;m@@ <row@@ +col@@ -1@@ ;m++) { if(m@@ <col) { for(i=0;i<=@@ m@@ &&i@@ <@@ row;i++) printf("%d\n",array@@ [i]@@ [m@@ -i]); } else {@@ for(j=col-1@@ ;j>@@ m@@ -@@ row@@ &&j>=0@@ ;j--) printf("%d\n",array@@ [m@@ -j@@ ][j]); } } return0; }  
c -1
h -1
intmain() { intn,@@ j,@@ s,@@ a=0,@@ k@@ [1000]; scanf("%d\n",&n); for(j=0;j<n@@ *@@ n;j++) { scanf("%d",&@@ k@@ [j]); } for(j=0;j<n@@ *@@ n;j++) { if(k@@ [j]@@ ==0) a=@@ a@@ +1; } s=(@@ a/@@ 4@@ -1)@@ *(a@@ /@@ 4@@ -1); printf("%d\n",s); return0; }  
c -1
h -1
0

voidmain() { intn,a[@@ 25],b[@@ 25@@ ]={0},@@ i,j,@@ max=0; scanf("%d",&n); for(i=0;i<=n-1;i++) { scanf("%d",&a[i]); b[i]=1; } for(i=1;i<=n-1;i++) { for(j=@@ n-i@@ ;j<=@@ n-1;j++) { if(a[@@ n-1@@ -i@@ ]>=@@ a[j]) { if(b[@@ n-i@@ -1]@@ <@@ b[j]@@ +1) { b[@@ n-i@@ -1@@ ]=@@ b[j]@@ +1; } } } } for(i=0;i<=n-1;i++) { if(max<@@ b[i]@@ )max=@@ b[i]; } printf("%d",max); }  
c -1
h -1
intmain(){ ints[@@ 10@@ ][10]; intN@@ ; intn; scanf("%d",&n); inti,j; int@@ c=0,@@ d; int@@ count0@@ ; int@@ q; count0@@ =0; c=0; d=0; for(i=0;i<n;i++){ q=0; for(j=0;j<n;j++){ scanf("%d",&s@@ [i][j]); if(s@@ [i][j]@@ ==0){@@ q@@ ++;@@ count0@@ ++;} } if(q@@ >1@@ ){@@ d@@ ++;} if(q@@ >@@ c@@ ){@@ c=@@ q@@ ;} } N@@ =@@ d@@ *@@ c-@@ count0@@ ; printf("%d",@@ N); return0; }  
c -1
h -1
0

intmain() { inti,@@ s=0; int@@ cmp@@ (char@@ s1,@@ char@@ s2); int@@ ex@@ (char@@ s); float@@ input@@ =0; float@@ sum=0,@@ cor@@ =0; chars1@@ [501],@@ s2@@ [501]; scanf("%f",&@@ input@@ ); scanf("%s%s",@@ s1,@@ s2); sum@@ =strlen(@@ s1); for(i=0;@@ s1@@ [i]@@ !=0;i++) { s+=@@ ex@@ (@@ s1[i]); s+=@@ ex@@ (@@ s2@@ [i]); cor@@ +=@@ cmp@@ (@@ s1@@ [i],@@ s2@@ [i]); } if(s@@ ) { printf("error\n"); return0; } else { if((@@ cor@@ /@@ sum@@ )@@ >=@@ input@@ ) printf("yes\n"); else printf("no\n"); return0; } } int@@ ex@@ (char@@ s) { switch(@@ s) { case'@@ A@@ ':@@ ; case'@@ T@@ ':@@ ; case'@@ C@@ ':@@ ; case'@@ G@@ ':@@ return0@@ ;break; default@@ :@@ return@@ 1;break; } } int@@ cmp@@ (char@@ s1,@@ char@@ s2@@ ) { if(s1@@ ==@@ s2@@ ) return1; else return0; }  
c -1
h -1
intmain() { struct@@ pa { charID@@ [11]; intage; structpa@@ *next; }@@ *head,*@@ p1,*p2,*@@ p3@@ ,*@@ p4@@ ; int@@ tage@@ ; char@@ tID@@ [11]; intn,i,j; scanf("%d",&n); for(i=0;i<n;i++) { p1=(struct@@ pa@@ *)malloc(sizeof(struct@@ pa@@ )); if(i==0) head=p1; scanf("%s%d",p1->@@ ID@@ ,&p1->@@ age); if(i@@ !=0) p2->next=p1; p2=p1; } p1->next=NULL; p1=head; p2=p1->next; for(i=0;i<n;i++) { p3@@ =p1; p4@@ =p2; for(j=0;j<n-1;j++) { if(@@ p3@@ ->age@@ <@@ p4@@ ->age@@ &&@@ p4@@ ->age@@ >=60) { strcpy(@@ tID@@ ,@@ p3->@@ ID); tage@@ =@@ p3->@@ age; strcpy(@@ p3->@@ ID,@@ p4@@ ->@@ ID); p3@@ ->age=@@ p4@@ ->@@ age; strcpy(@@ p4@@ ->@@ ID,@@ tID@@ ); p4@@ ->age=@@ tage@@ ; } p3=@@ p3@@ ->next; p4@@ =@@ p4@@ ->next; } } p1=head; while(p1!=NULL) { printf("%s\n",@@ p1->@@ ID); p1=p1->next; } return0; }  
c -1
h -1
0

int@@ su@@ (int@@ input@@ ) { int@@ ju@@ =1; for(inti=2@@ ;i<@@ sqrt(@@ input@@ );i++) { if(@@ input@@ %i==0)@@ ju@@ =0; break; } return@@ ju@@ ; } intfenjie@@ (int@@ input@@ ,int@@ k) { int@@ ret@@ =1; for(inti=@@ k@@ ;i<=sqrt(@@ input@@ );i++) { if(@@ input@@ %i==0) { if(@@ su@@ (@@ input@@ /i@@ )@@ ==0@@ ); { ret@@ =@@ fenjie@@ (@@ input@@ /i,@@ i@@ )+@@ ret@@ ; } } } return@@ ret@@ ; } intmain() { int@@ input@@ ,@@ num,@@ sol@@ ; cin>>num; while(@@ num@@ --) { cin>>@@ input@@ ; cout<<@@ fenjie@@ (@@ input@@ ,@@ 2)<<endl; } return0; }  
c -1
h -1
intmain() { inta[@@ 20000],@@ i,j,k,@@ m=0,@@ n,@@ b=0,@@ c=1; scanf("%d",&n); k=@@ n; for(i=0;i<n-1;i++) { scanf("%d",&a[i]); } scanf("%d",&a[i]); for(i=0;i<n;i++) { for(j=0;j<i;j++) { if(a[j]==a[i]) { a[i]=0; k@@ -=@@ 1; break; } } } for(i=0;i<n;i++) { if(a[i]@@ !=0&&@@ c@@ <@@ k) { printf("%d",a[i]); c@@ +=1; } else { if(a[i]@@ !=0&&@@ c@@ ==k) { printf("%d",a[i]); } } } return0; }  
c -1
h -1
0

int@@ tmp=@@ 2; int@@ suml@@ (intn,int@@ tmp@@ ) { intsum=0; if(n==1) { return1; } for(inti=@@ tmp@@ ;i<=n;i++) { if(n%i==0) { sum+=@@ suml@@ (n/i,i); } } returnsum; } intmain() { intm; cin>>m; intn; for(inti=0;i<m;i++) { cin>>n; int@@ zon_shu@@ =0; zon_shu@@ =@@ suml@@ (n,@@ tmp@@ ); cout<<@@ zon_shu@@ <<endl; } }  
c -1
h -1
voidmain(){ introw,col,@@ a[100][100],@@ i,j,@@ n; scanf("%d%d",&row,&col); for(i=0;i<row;i++){ for(j=0;j<col;j++){ scanf("%d",&a[i][j]); } } for(n=0;n@@ <=@@ row+col-2@@ ;n++){ for(i=0;i<@@ row@@ &&i@@ <=@@ n;i++){ for(j=0;j<col@@ &&j@@ <=@@ n;j++){ if(i+j@@ ==@@ n)@@ printf("%d\n",a[i][j]); } } } }  
c -1
h -1
0

intmain() { inta[100][100],@@ row,col,@@ i,j; scanf("%d%d",&row,&col); for(i=0;i<row;i++) { for(j=0;j<col;j++) { scanf("%d",&a[i][j]); } } for(i=0;i<@@ row+col@@ -1;i++) { if(i>=@@ col) { for(j=col-1@@ ;j>=i@@ -@@ row@@ +1@@ &&j>=0@@ ;j--) { printf("%d\n",@@ a[i@@ -j@@ ][j]); } } else { for(j=i@@ ;j>=i@@ -@@ row@@ +1@@ &&j>=0@@ ;j--) { printf("%d\n",@@ a[i@@ -j@@ ][j]); } } } return0; }  
c -1
h -1
int@@ map@@ [100][100]; intm,n; void@@ count@@ () { inti,j; intsum=0; for(i=0;i<m;i++) { for(j=0;j<n;j++) { if(i+j@@ ==@@ j@@ ||@@ i@@ +j@@ ==@@ i@@ ||@@ i@@ +j@@ ==@@ i+@@ n-1@@ ||@@ i@@ +j@@ ==@@ j@@ +m@@ -1) { sum=sum+@@ map@@ [i][j]; } } } cout<<sum<<endl; } intmain() { intsum@@ ;@@ intk=0; cin>>@@ sum; inti,j; for(k=0;k<@@ sum@@ ;k++) { cin>>m>>n; for(i=0;i<m;i++) { for(j=0;j<n;j++) { cin>>@@ map@@ [i][j]; } } count@@ (); } }  
c -1
h -1
0

intmain(){ intn,k,i,@@ a,b; intsz[@@ 1001]; scanf("%d%d",&n,&k); for(i=1;i<=n;i++){ scanf("%d",&sz[i]); } for(a@@ =1;@@ a@@ <n;@@ a++){ for(@@ b=@@ a@@ +1;@@ b@@ <=n;@@ b++){ if(@@ sz[a@@ ]+sz[@@ b@@ ]==k){ printf("yes"); break; } } if(@@ sz[a@@ ]+sz[@@ b@@ ]==k){ break; } if(a==@@ n-1){ printf("no"); } } return0; }  
c -1
h -1
intmain() { intk; cin>>k; for(inti=0;i<k;i++) { intm,n,@@ a[100][100],@@ j,@@ l,@@ sum=0; cin>>m>>n; for(j=0;j<m;j++) for(l=0;l<n;l++) cin>>a[j]@@ [l]; for(j=0;j<m;j++) sum=sum+@@ *(*(a@@ +j)@@ )+@@ *(*(a@@ +j)@@ +n-1); for(j=1;j<@@ n-1;j++) sum=sum+@@ *(@@ *a@@ +j)+@@ *(*(a@@ +m-1)@@ +j); cout<<sum<<endl; } return0; }  
c -1
h -1
0

structstudent { intnum; int@@ s1@@ ; int@@ s2; intsum; }; structstudentstu[100000]; intmain() { intn,i,@@ p,q,@@ r,@@ max; scanf("%d",&n); for(i=0;i<n;i++) { scanf("%d%d%d",&stu[i].num,&stu[i].@@ s1@@ ,&stu[i].@@ s2); stu[i].sum=stu[i].@@ s1@@ +stu[i].@@ s2; } max=0; for(i=0;i<n;i++) { if(stu[i].@@ sum@@ >max) { max=@@ stu[i].@@ sum; p=i; } } max=0; for(i=0;i<n;i++) { if(i!=@@ p) { if(stu[i].@@ sum@@ >max) { max=@@ stu[i].@@ sum; q@@ =i; } } } max=0; for(i=0;i<n;i++) { if((i@@ !=@@ p@@ )&&(i@@ !=@@ q@@ )) { if(stu[i].@@ sum@@ >max) { max=@@ stu[i].@@ sum; r@@ =i; } } } printf("%d%d\n",stu[@@ p@@ ].num,stu[@@ p@@ ].sum); printf("%d%d\n",stu[@@ q@@ ].num,stu[@@ q@@ ].sum); printf("%d%d\n",stu[@@ r@@ ].num,stu[@@ r@@ ].sum); return0; }  
c -1
h -1
voidmain() { intn,i,k,@@ max,@@ m,@@ c; inta[@@ 100000]; structstudent {intnum; intmath; intb; }@@ stu1@@ ; scanf("%d",&n); for(i=0;i<n;i++) { scanf("%d%d%d",&@@ stu1@@ .@@ num,&@@ stu1@@ .@@ math@@ ,&@@ stu1@@ .@@ b); a[i]=@@ stu1@@ .@@ math+@@ stu1@@ .@@ b; } max=@@ a[0]; for(i=1;i<n;i++) { if(a[i]>max) {max=@@ a[i]; k@@ =i;} } printf("%d%d\n",@@ k@@ +1,@@ a[k]); a[k]@@ =0; max=@@ a[0]; for(i=1;i<n;i++) { if(a[i]>max) {max=@@ a[i]; m@@ =i;} } printf("%d%d\n",@@ m@@ +1,@@ a[m@@ ]); a[m@@ ]=0; max=@@ a[0]; for(i=1;i<n;i++) { if(a[i]>max) {max=@@ a[i]; c@@ =i;} } printf("%d%d",@@ c@@ +1,@@ a[c@@ ]); }  
c -1
h -1
1


intmain() { intn,i,@@ s=0,@@ j=0,@@ k=0; structpatient{ intage; charid[10]; }@@ patient@@ [100],@@ old@@ [100],@@ young@@ [100],@@ temp; cin>>n; for(i=0;i<n;i++) { cin>>@@ patient@@ [i].@@ id@@ >>@@ patient@@ [i].age; if(@@ patient@@ [i].age>=60) { old@@ [k]=@@ patient@@ [i]; k++; } else { young@@ [s@@ ]=@@ patient@@ [i]; s++; } } for(i=k@@ -1@@ ;i>0;i--) { for(j=0;j<i;j++) { if(old@@ [j].age@@ <@@ old@@ [j+1@@ ].age) { temp=@@ old@@ [j]; old@@ [j]=@@ old@@ [j+1]; old@@ [j+1]=temp; } } } for(i=0;i<k;i++) cout<<@@ old@@ [i].@@ id@@ <<endl; for(i=0;i<@@ s;i++) cout<<@@ young@@ [i].@@ id@@ <<endl; return0; }  
c -1
h -1
intmain() { intn; scanf("%d",&n); inta[n@@ ],b[@@ n]; inti,j; for(i=0;i<n;i++) { scanf("%d",&a[i]); b[i]=1; } intm=0; for(i=0;i<n;i++) { for(j=0;j<i;j++) { if((a[j]@@ >=@@ a[i]@@ )&&(@@ b[j]@@ >=@@ b[i]@@ )) b[i]=b[j]+1; } if(b[i]>@@ m)@@ m=@@ b[i]; } printf("%d",m); }  
c -1
h -1
0

intmain(){ intn,i,k,@@ h,@@ l@@ ,j; intsz[@@ MAX@@ ][@@ MAX@@ ]; int@@ jh@@ [@@ MAX@@ ]; scanf("%d",&n); for(i=0;i<n;i++){ jh@@ [i]@@ =0;} for(i=0;i<n;i++){ scanf("%d%d",&@@ h@@ ,&@@ l); for(j=0;j<@@ h@@ ;j++){ for(k=0;k<@@ l@@ ;k++){ scanf("%d",&sz@@ [j]@@ [k]); } } for(k=0;k<@@ l@@ ;k++){ jh@@ [i]@@ +=@@ sz[0][@@ k@@ ]; jh@@ [i]@@ +=@@ sz[@@ h@@ -1@@ ][k@@ ];} for(j=1;j<@@ h@@ -1;j++){ jh@@ [i]@@ +=@@ sz[j]@@ [0]; jh@@ [i]@@ +=@@ sz[j]@@ [l@@ -1]@@ ;} if(h@@ ==1&&@@ l@@ ==1){ jh@@ [i]@@ -=@@ sz[0][@@ 0]; } } for(i=0;i<n;i++){ printf("%d\n",@@ jh@@ [i]); } return0; }  
c -1
h -1
intmain() { inta[@@ 17@@ ]={0},@@ count; inti,j,k,@@ two@@ ,@@ num; for(k@@ =1;@@ ;k++) { count=0; for(i=1;i<=@@ 16@@ ;i++) { cin>>a[i]; if(a[1@@ ]==@@ -1@@ ||@@ a[i]@@ ==0) { num@@ =i; break; } } if(a[1@@ ]==@@ -1) break; for(i=1;i<@@ num;i++) { two@@ =@@ 2*@@ a[i]; for(j=1;j<@@ num@@ ;j++) if(@@ two@@ ==@@ a[j]) { count++; break; } } cout<<count<<endl; } return0; }  
c -1
h -1
0

intmain() { intn,i,j,@@ l,@@ max,@@ start@@ ,@@ row,col; inta[@@ 200][@@ 200]; scanf("%d%d",&row,&col); for(i=1;i<=@@ row;i++) for(j=1;j<=col;j++) scanf("%d",&a[i][j]); i=1@@ ;j@@ =1; do { printf("%d\n",a[i][j]); i@@ ++@@ ;j@@ --; if(j@@ ==0) if(i+j@@ <col@@ +1@@ ){@@ j@@ =i@@ ;i@@ =1;@@ }else{@@ i@@ =i@@ +j@@ +1@@ -col@@ ;j@@ =@@ col@@ ;} if(i>@@ row) if(i+j@@ <col@@ +1@@ ){@@ j@@ =i@@ +j@@ ;i@@ =1;@@ }else{@@ i=@@ row@@ +@@ 2@@ +j@@ -col@@ ;j@@ =@@ col@@ ;} } while(i@@ <=row@@ ); return0; }  
c -1
h -1
intmain() { intm,@@ t@@ ,j,@@ i; scanf("%d",&m); int*@@ a,*@@ b; a=@@ (int*)malloc(sizeof(int)@@ *@@ m); b=@@ (int*)malloc(sizeof(int)@@ *@@ m); for(i=0;i<m;i++)@@ scanf("%d",&a[i]); for(i=0;i<m;i++) { b[i]=0; for(j=0;j<i;j++) { if(a[j]>=@@ a[i]) if(b[j]@@ >@@ b[i]@@ )@@ b[i]=@@ b[j]; } b[i]=@@ b[i]@@ +1; } t=0; for(i=0;i<m;i++) if(b[i]>@@ t)@@ t=b[i]; printf("%d\n",t); }  
c -1
h -1
0

voidmain() { intn,i,j,@@ no@@ [1000],@@ shu@@ [26]={0},@@ max=0; chars[@@ 1000][@@ 20],@@ c; scanf("%d",&n); for(i=0;i<n;i++) { scanf("%d%s",&@@ no@@ [i],@@ s[i]); for(j=0;j<strlen(@@ s[i]@@ );j++) { shu@@ [s@@ [i][j]@@ -'A']++; } } for(i=0;i<26;i++) { if(@@ shu@@ [i]>max) { max=@@ shu@@ [i]; c@@ ='A'+i; } } printf("%c\n%d\n",@@ c,@@ max); for(i=0;i<n;i++) { if(@@ strchr(@@ s[i]@@ ,@@ c@@ )) printf("%d\n",@@ no@@ [i]); } }  
c -1
h -1
voidmain() { intn,i,j,@@ s[@@ 20001]; scanf("%d",&n); for(i=1;i<=@@ n;i++)@@ scanf("%d",&s[i]); printf("%d",@@ s@@ [1]); for(i=2;i<=n;i++) { for(j=1;j<i;j++) { if(s[i]==@@ s[j]@@ ){@@ s[i]@@ =0;@@ break;@@ }; }; }; for(i=2;i<=n;i++) { if(s@@ [i]@@ !=0)@@ printf("%d",@@ s[i]); }; }  
c -1
h -1
0

intmain(){ intn,k,@@ sum=0; scanf("%d%d",&n,&k); intsz[1000]; for(inti=0;i<n;i++){ scanf("%d",&sz[i]); } for(intj=0;j<n;j++){ for(int@@ h@@ =0;h@@ <n;@@ h@@ ++){ if(sz@@ [j]+@@ sz[@@ h@@ ]==k){ sum++; } } } if(sum@@ ==0){ printf("no"); }else{ printf("yes"); } return0; }  
c -1
h -1
intmain() { inta[1000]; inti,j,n,@@ k; int@@ l=0; int@@ swap@@ ; scanf("%d",&n); scanf("%d",&k); for(i=0;i<n;i++) { scanf("%d",&a[i]); } for(i=0;i<n-1;i++) { for(j=i+1;j<n;j++) { if(a[i]+a[j]==k) { printf("yes"); return0; } } } printf("no"); return0; }  
c -1
h -1
1


voidmain() { inta[100][100],@@ i,j,@@ m,n,@@ row,col; scanf("%d%d",&row,&col); for(i=0;i<=@@ row-1;i++) for(j=0;j<=@@ col@@ -1;j++) scanf("%d",&a[i][j]); m=@@ row+col-2@@ ; for(n=0;n@@ <=@@ m;@@ n++) for(i=0;i<=@@ row-1;i++) for(j=0;j<=@@ col@@ -1;j++) if(i+j@@ ==@@ n) printf("%d\n",a[i][j]); }  
c -1
h -1
intmain() { inti,j,k,@@ m,n; int@@ **@@ p,*@@ *@@ q; p=@@ (int@@ **@@ )@@ malloc(@@ 100@@ *sizeof(int@@ *@@ )); for(i=0;i<100;i++) { *(p+i)@@ =@@ (int*)malloc(@@ 100*sizeof(int)); } scanf("%d%d",&m,&n); for(i=0;i<m;i++) { for(j=0;j<n;j++) { scanf("%d",@@ (@@ *(p+i)@@ +j)); } } for(i=0;i<m+@@ n-1;i++) { for(j=0;j<=i;j++) { if((@@ j@@ <m@@ )&&(@@ (i@@ -j@@ )@@ <n@@ )){ if(i==0) { printf("%d",@@ *(*(p@@ +j)@@ +i-j@@ )); } else { printf("\n%d",@@ *(*(p@@ +j)@@ +i-j@@ )); }} } } return0; }  
c -1
h -1
1


char@@ substring@@ [256@@ ]={0}; char@@ S@@ [256@@ ]={0}; char@@ replacement@@ [256@@ ]={0}; intmain() { while(cin>>@@ S@@ ) { cin>>@@ substring@@ ; cin>>@@ replacement@@ ; char*@@ p=strstr(@@ S@@ ,@@ substring); char*@@ q@@ =NULL; inti=0; if(p@@ !=NULL) { for(q=@@ S@@ ;q@@ <p@@ ;q++) { cout<<@@ *@@ q; } cout<<@@ replacement@@ ; for(q=@@ p+@@ strlen(@@ substring@@ );@@ *@@ q@@ !='\0'@@ ;q++) { cout<<@@ *@@ q; } cout<<endl; memset(@@ S@@ ,@@ 0,@@ 256); memset(@@ substring@@ ,@@ 0,@@ 256); memset(@@ replacement@@ ,@@ 0,@@ 256); } elseif(@@ p@@ ==NULL) { cout<<@@ S@@ <<endl; } } return0; }  
c -1
h -1
structstu { intnum; int@@ score1@@ ; int@@ score2; } main() { structstu@@ damn@@ [4@@ ]; intn,i,j,@@ total; scanf("%d",&n); for(i=0;i<@@ 3@@ ;i++)@@ scanf("%d%d%d",&@@ damn@@ [i].num,&@@ damn@@ [i].@@ score1@@ ,&@@ damn@@ [i].@@ score2); for(i=0;i<2@@ ;i++) { for(j=0;j<@@ 2@@ -i;j++) { if(@@ damn@@ [j].@@ score1@@ +@@ damn@@ [j].@@ score2@@ <@@ damn@@ [j+1].@@ score1@@ +@@ damn@@ [j+1].@@ score2@@ ) { damn@@ [3@@ ]=@@ damn@@ [j]; damn@@ [j]=@@ damn@@ [j+1]; damn@@ [j+1]=@@ damn@@ [3]; } } } for(i=0;i<n-@@ 3;i++) { scanf("%d%d%d",&@@ damn@@ [3].@@ num,&@@ damn@@ [3].@@ score1@@ ,&@@ damn@@ [3].@@ score2); if(@@ damn@@ [3].@@ score1@@ +@@ damn@@ [3].@@ score2@@ <@@ damn@@ [2].@@ score1@@ +@@ damn@@ [2].@@ score2@@ )continue; elseif(@@ damn@@ [3].@@ score1@@ +@@ damn@@ [3].@@ score2@@ <=@@ damn@@ [1].@@ score1@@ +@@ damn@@ [1].@@ score2@@ &&@@ damn@@ [3].@@ score1@@ +@@ damn@@ [3].@@ score2@@ >@@ damn@@ [2].@@ score1@@ +@@ damn@@ [2].@@ score2@@ ) { damn@@ [2]=@@ damn@@ [3]; } elseif(@@ damn@@ [3].@@ score1@@ +@@ damn@@ [3].@@ score2@@ <=@@ damn@@ [0].@@ score1@@ +@@ damn@@ [0].@@ score2@@ &&@@ damn@@ [3].@@ score1@@ +@@ damn@@ [3].@@ score2@@ >@@ damn@@ [1].@@ score1@@ +@@ damn@@ [1].@@ score2@@ ) { damn@@ [2]=@@ damn@@ [1]; damn@@ [1]=@@ damn@@ [3]; } elseif(@@ damn@@ [3].@@ score1@@ +@@ damn@@ [3].@@ score2@@ >@@ damn@@ [0].@@ score1@@ +@@ damn@@ [0].@@ score2@@ ) { damn@@ [2]=@@ damn@@ [1]; damn@@ [1]=@@ damn@@ [0]; damn@@ [0]=@@ damn@@ [3]; } } for(i=0;i<2@@ ;i++) { total=@@ damn@@ [i].@@ score1@@ +@@ damn@@ [i].@@ score2; printf("%d%d\n",@@ damn@@ [i].@@ num,@@ total); } total=@@ damn@@ [i].@@ score1@@ +@@ damn@@ [i].@@ score2; printf("%d%d",@@ damn@@ [i].@@ num,@@ total); }  
c -1
h -1
0

intmain() { inta[@@ 30],@@ k=0,@@ i=0,j=0,@@ b[@@ 30]={0}; cin>>k; for(i=0;i<k;i++) cin>>a[i]; b[0]@@ =1; for(i=1;i<k;i++) { int@@ temp@@ =1; for(j=i-1;j>=0;j--) { if(a[j]>=@@ a[i]) { if((@@ b[j]@@ +1)@@ >@@ temp@@ ) temp=@@ b[j]@@ +1; } } b[i]=@@ temp; } intmax=0; for(i=0;i<k;i++) if(b[i]>max) max=b[i]; cout<<max<<endl; return0; }  
c -1
h -1
intmain() { ints@@ [100][100],@@ n,i,j,@@ result@@ ,@@ a@@ =-1,@@ b@@ =-1,@@ c@@ =-1,@@ d@@ =-1; scanf("%d",&n); for(i=0;i<n;i++) { for(j=0;j<n;j++) scanf("%d",&s@@ [i][j]); } for(i=0;i<n;i++) { for(j=0;j<n;j++) { if(s@@ [i][j]==0) { a=i; b=j; break; } } if(a@@ >=0@@ )break; } for(i=n-1;i>=0;i--) { for(j=n-1;j>=0;j--) { if(s@@ [i][j]==0) { c=i; d=j; break; } } if(c@@ >=0@@ )break; } result@@ =(@@ c-a-1)*(d-b-1); printf("%d",@@ result); return0; }  
c -1
h -1
0

intmain(){ intn,k,@@ a; inti,j; scanf("%d%d",&n,&k); intsz[@@ 1000],@@ zs@@ [1000]; for(i=0;i<n;i++){ scanf("%d",&sz[i]); zs@@ [i]=@@ sz[i]; } a=0; for(i=0;i<n;i++){ for(j=0;j<n;j++){ if((@@ zs@@ [j]+@@ sz[i]@@ )==@@ k){ a=1; break; } } } if(a@@ ==1){ printf("yes\n"); } else{ printf("no\n"); } return0; }  
c -1
h -1
voidmain() { intN@@ ; int@@ **@@ array@@ ,@@ i,j; int@@ a=@@ 1000@@ ,@@ b=@@ 1000@@ ,@@ c=0,@@ d=0; scanf("%d",&N); array@@ =@@ (int@@ **@@ )@@ malloc(@@ N@@ *sizeof(int@@ *@@ )); for(i=0;i<N;i++) { array@@ [i]=@@ (int*)malloc(@@ N@@ *sizeof(int)); for(j=0;j<@@ N@@ ;j++) { scanf("%d",&array@@ [i][j]); if(array@@ [i][j]==0&&@@ i<=@@ a@@ &&j@@ <=@@ b) { a=i; b=j; } if(array@@ [i][j]==0&&@@ i>=@@ c@@ &&j@@ >=@@ d) { c=i; d=j; } } } printf("%d",(@@ c-a-1)*(d-b@@ -1)); }  
c -1
h -1
0

intmain(){ intn,k,@@ j,@@ biaoji@@ =0,@@ m; inti,@@ a[@@ max@@ ]; scanf("%d%d",&n,&k); for(i=0;i<n;i++) { scanf("%d",&a[i]); } for(i=0;i<n;i++) { m=@@ k-@@ a[i]; for(j=i;j<@@ n;j++) { if(m==@@ a[j]) { biaoji@@ =1; break; } } } if(@@ biaoji@@ ) printf("yes"); else printf("no"); return0; }  
c -1
h -1
intmain() { inta[20000]; intn,i,j,@@ p; scanf("%d",&n); for(i=1;i<=n;i++) { scanf("%d",&a[i]); p=0; for(j=1;j<i;j++) { if(a[j]==a[i]) { p=1; } } if(p@@ ==0@@ &@@ i@@ ==1) { printf("%d",a[i]); } if(p@@ ==0@@ &@@ i@@ !=1) { printf("%d",a[i]); } } return0; }  
c -1
h -1
0

intmain(){ intn,m,@@ i,j@@ =0; double@@ g,@@ t; chara[501],b[501]; scanf("%lf",&@@ g@@ ); scanf("%s",a); scanf("\n@@ "); scanf("%s",b); n@@ =strlen(a); m@@ =strlen(b); if(n@@ !=@@ m@@ ){@@ printf("error");} else{ for(i=0;i<n;i++){ if((@@ a[i]=='@@ A'||a[i]=='T'||a[i]=='@@ C'||@@ a[i]=='@@ G')&&(@@ b[i]=='@@ A'||@@ b[i]=='@@ T'||@@ b[i]=='@@ C'||@@ b[i]=='@@ G')){ if(a[i]==b[i]@@ ){@@ j@@ ++;} else{@@ ;} } else{@@ j@@ =-@@ 1@@ ;@@ printf("error");@@ break;} } t@@ =1.0*@@ j@@ /n; if(t@@ >@@ g@@ ){printf("yes");} elseif(@@ t@@ <=@@ g@@ &&j@@ !=@@ -1@@ ){@@ printf("no");} } return0; }  
c -1
h -1
int@@ f1@@ (intn) { inti,@@ m; for(i=1@@ ,@@ m@@ =0;i<n;i++) { if(i==1) m=m+@@ 31; if(i==@@ 2) m=m+@@ 28; if(i==@@ 3) m=m+@@ 31; if(i==@@ 4) m=m+@@ 30; if(i==@@ 5) m=m+@@ 31; if(i==@@ 6) m=m+@@ 30; if(i==@@ 7) m=m+@@ 31; if(i==@@ 8) m=m+@@ 31; if(i==@@ 9) m=m+@@ 30; if(i==@@ 10) m=m+@@ 31; if(i==@@ 11) m=m+@@ 30; if(i==@@ 12) m=m+@@ 31; } return@@ m; } int@@ f2@@ (intn) { intm,@@ i; for(i=1@@ ,@@ m@@ =0;i<n;i++) { if(i==1) m=m+@@ 31; if(i==@@ 2) m=m+@@ 29; if(i==@@ 3) m=m+@@ 31; if(i==@@ 4) m=m+@@ 30; if(i==@@ 5) m=m+@@ 31; if(i==@@ 6) m=m+@@ 30; if(i==@@ 7) m=m+@@ 31; if(i==@@ 8) m=m+@@ 31; if(i==@@ 9) m=m+@@ 30; if(i==@@ 10) m=m+@@ 31; if(i==@@ 11) m=m+@@ 30; if(i==@@ 12) m=m+@@ 31; } return@@ m; } intmain() { inty,@@ mon@@ ,@@ d,@@ a; scanf("%d%d%d",&y,&@@ mon@@ ,&@@ d); if(y%@@ 4!=0@@ ||(@@ y%@@ 100==0&&@@ y%@@ 400!=0)) { a=@@ f1@@ (@@ mon@@ )@@ +d; printf("%d",@@ a); } else { a=@@ f2@@ (@@ mon@@ )@@ +d; printf("%d",@@ a); } getchar(); getchar(); }  
c -1
h -1
0

intmain() { intyear,month,day,@@ n,@@ i; scanf("%d%d%d",&year,&month,&day); if(year%@@ 100==0) i=@@ 400@@ ; else i=@@ 4@@ ; if(month==1) n=@@ day; if(month==2) n=31+@@ day; if(month==3) { if(year%@@ i@@ ==0) n=31+29@@ +day; else n=31+28@@ +day; } if(month==@@ 4) { if(year%@@ i@@ ==0) n=31+29@@ +31+@@ day; else n=31+28@@ +31+@@ day; } if(month==@@ 5) { if(year%@@ i@@ ==0) n=31+29@@ +31+30+day; else n=31+28@@ +31+30+day; } if(month==@@ 6) { if(year%@@ i@@ ==0) n=31+29@@ +31+30+31+@@ day; else n=31+28@@ +31+30+31+@@ day; } if(month==@@ 7) { if(year%@@ i@@ ==0) n=31+29@@ +31+30+31+30@@ +day; else n=31+28@@ +31+30+31+30@@ +day; } if(month==8) { if(year%@@ i@@ ==0) n=31+29@@ +31+30+31+30+31+@@ day; else n=31+28@@ +31+30+31+30+31+@@ day; } if(month==@@ 9) { if(year%@@ i@@ ==0) n=31+29@@ +31+30+31+30+31+31+@@ day; else n=31+28@@ +31+30+31+30+31+31+@@ day; } if(month==@@ 10) { if(year%@@ i@@ ==0) n=31+29@@ +31+30+31+30+31+31+30@@ +day; else n=31+28@@ +31+30+31+30+31+31+30@@ +day; } if(month==@@ 11) { if(year%@@ i@@ ==0) n=31+29@@ +31+30+31+30+31+31+30+31+@@ day; else n=31+28@@ +31+30+31+30+31+31+30+31+@@ day; } if(month==@@ 12) { if(year%@@ i@@ ==0) n=31+29@@ +31+30+31+30+31+31+30+31+30@@ +day; else n=31+28@@ +31+30+31+30+31+31+30+31+30@@ +day; } printf("%d",n); return0; }  
c -1
h -1
intmain() { intsz[@@ 16],@@ i,@@ a,@@ num=0,@@ no@@ =0,@@ j; while(1) { scanf("%d",&a); if(a@@ ==-1) return0; elseif(a@@ >0) { sz[@@ no@@ ]=a; no@@ ++; } elseif(a@@ ==0) { for(i=0;i<@@ no@@ ;i++) { for(j=0;j<@@ no@@ ;j++) if(sz@@ [i]==@@ 2*@@ sz@@ [j]) num++; } printf("%d\n",num); no@@ =0; num=0; } } return0; }  
c -1
h -1
0

intmain() { inti,j,k; introw,col; int@@ matrix@@ [100@@ *@@ 100@@ ]; scanf("%d%d",&@@ row,@@ &@@ col); for(i=0;i<row;i++){ for(j=0;j<col;j++){ scanf("%d",@@ matrix@@ +i@@ *@@ 100@@ +j); } } for(i=0;i<@@ col@@ ;i++){ for(j=i,@@ k@@ =0@@ ;j>=0@@ &&k@@ <row@@ ;j--@@ ,k@@ ++){ printf("%d\n",*(@@ matrix@@ +k@@ *@@ 100@@ +j)); } } for(i=1;i<@@ row;i++){ for(j=col-1@@ ,k@@ =i@@ ;j>=0@@ &&k@@ <row@@ ;j--@@ ,k@@ ++){ printf("%d\n",*(@@ matrix@@ +k@@ *@@ 100@@ +j)); } } return0; }  
c -1
h -1
intmain() { intn,i,j,k,@@ s,@@ m,@@ t,@@ p,@@ r; inta[100],b[100]; char@@ str1@@ [100][10],@@ str2@@ [100][10]; charstring@@ [10]; scanf("%d",&n); for(i=0;i<n;i++) scanf("%s%d",@@ str1@@ [i],&@@ a[i]); for(p@@ =0,@@ s@@ =0;p@@ <n;p++) { if(a[@@ p@@ ]@@ >=60) { b[@@ s@@ ]=a[@@ p@@ ]; strcpy(@@ str2@@ [s@@ ],@@ str1@@ [p@@ ]); s=s+1; } } for(k=0;k<@@ (@@ s@@ -1)@@ ;k++) { for(m=0;m<@@ (@@ s@@ -k@@ -1)@@ ;m++) { if(@@ b[m@@ +1@@ ]>@@ b[m@@ ]) { t=@@ b[m@@ +1]; b[m@@ +1]=@@ b[m@@ ]; b[m@@ ]=t; strcpy(@@ string,@@ str2@@ [m@@ +1@@ ]); strcpy(@@ str2@@ [m@@ +1],@@ str2@@ [m]); strcpy(@@ str2@@ [m@@ ],@@ string); } } } for(j=0;j<@@ s@@ ;j++) printf("%s\n",@@ str2@@ [j]); for(r=0;r@@ <n;@@ r++) { if(a[@@ r@@ ]@@ <60) printf("%s\n",@@ str1@@ [r@@ ]); } getchar(); getchar(); getchar(); getchar(); getchar(); getchar(); }  
c -1
h -1
0

intmain() { inta[100][100]; intk,i,j,@@ l,@@ m,n,@@ x=0,@@ y=0; cin>>k; for(l=1;l@@ <=k;@@ l++) { cin>>m>>n; for(i=1;i<=m;i++) { for(j=1;j<=n;j++) { cin>>a[i][j]; } } for(i=1;i<=m;i++) { for(j=1;j<=n;j++) { x=x+@@ a[i][j]; } } for(i=2;i<=@@ m-1;i++) { for(j=2;j<=@@ n-1;j++) { y=@@ y@@ +@@ a[i][j]; } } cout<<@@ x@@ -@@ y@@ <<endl; x=0; y=0; } return0; }  
c -1
h -1
ints[@@ 26]; intf(int@@ j); voidmain() { inti,k,@@ t; scanf("%d",&k); for(i=1;i<=k;i++) scanf("%d",&s[i]); for(t@@ =0,@@ i=1@@ ;i<=@@ k;i++) { if(@@ f(@@ i@@ )>@@ t) t=@@ f(@@ i); } printf("%d\n",t); } intf(int@@ j) { int@@ z,@@ i,@@ t; if(j@@ ==1)@@ z=1; else { for(t@@ =0,@@ i=1@@ ;i<@@ j@@ ;i++) { if(s@@ [i]>=@@ s[j]@@ &&@@ f(@@ i@@ )>@@ t) t=@@ f(@@ i); } z=@@ t@@ +1; } return@@ z; }  
c -1
h -1
0

intmain() { char@@ sz1@@ [@@ 520@@ ]={'\0'},@@ sz2@@ [@@ 520@@ ]={'\0'}; doublea,@@ j; inti,k,@@ judge@@ =1; scanf("%lf%s%s",&@@ a,@@ sz1@@ ,@@ sz2@@ ); if(strlen(@@ sz1@@ )!=strlen(@@ sz2@@ )) { printf("error"); } else { for(k@@ =0,@@ i@@ =0;i<@@ strlen(@@ sz1@@ );i++) { if((@@ sz1@@ [i]!='A'&&@@ sz1@@ [i]!='T'&&@@ sz1@@ [i]!='G'&&@@ sz1@@ [i]!='@@ C')||(@@ sz2@@ [i]!='A'&&@@ sz2@@ [i]!='T'&&@@ sz2@@ [i]!='G'&&@@ sz2@@ [i]!='@@ C')@@ ) { judge@@ =0; break; } elseif(@@ sz1@@ [i]==@@ sz2@@ [i]) { k=k+1; } } j@@ =1.0*@@ k/@@ (@@ strlen(@@ sz1@@ )); if(@@ judge@@ ==0) { printf("error"); } elseif(@@ j@@ >@@ a) { printf("yes"); } else { printf("no"); } } return0; }  
c -1
h -1
intmain() { inti,j,@@ m,n,@@ x; intsz[@@ 16]; while(1) { x=0; for(i=0;i<16@@ ;i++){ scanf("%d",&sz[i]); if(sz[i]@@ ==0||@@ sz@@ [i]==@@ -1){ break; } } if(sz@@ [i]==@@ -1){ break; } for(m=0;m@@ <=i@@ -2@@ ;m++){ for(n=@@ m@@ +1@@ ;n@@ <=i@@ -1;@@ n@@ ++){ if(@@ sz[m@@ ]==2*@@ sz[@@ n@@ ]@@ ||@@ sz[@@ n@@ ]==2*@@ sz[m@@ ]){ x++; } } } printf("%d\n",x); } return0; }  
c -1
h -1
0

intf@@ (int,int); intmain() { intn,i,@@ a[@@ 50]; cin>>n; for(i=0;i<n;i++){ cin>>a[i]; cout<<@@ f(@@ a[i],@@ 2)<<endl; } return0; } intf@@ (intn,int@@ p) { intsum=0,@@ m; if(n@@ <p@@ )return0; else{ for(m=@@ p@@ ;m@@ <=n;@@ m@@ ++) if(n%@@ m@@ ==0){ if(m@@ <@@ n)@@ sum=sum+@@ f(@@ n/@@ m,@@ m); if(m==@@ n)@@ sum=sum+1; } returnsum; } }  
c -1
h -1
intmain() { inta[100][100@@ ]={0}; introw,col; cin>>row>>col; for(inti=0;i<row;i++) for(intj=0;j<col;j++) cin>>*(*(a+i)+j); for(intm=0;m@@ <row@@ +col@@ -1@@ ;m++) for(inti=0;i<row;i++) for(intj=0;j<col;j++) if(i+j@@ ==@@ m) cout<<@@ *(*(a+i)@@ +j)<<endl; return0; }  
c -1
h -1
0

intmain(){ int@@ ROW@@ ,@@ COL@@ ,@@ row,col; intk,@@ i,j; intsz[@@ 101][101]; scanf("%d%d",&@@ ROW@@ ,&@@ COL@@ ); for(row=0;row@@ <ROW@@ ;@@ row++){ for(col=0;col@@ <@@ COL@@ ;col@@ ++){ scanf("%d",&@@ sz[row][col@@ ]@@ );} } for(k=0;k<@@ COL@@ ;k++){ for(i=0,j@@ =k@@ ;i<@@ ROW@@ &&j>=0@@ ;i++,j--) printf("%d\n",sz@@ [i][j]); } for(k=1;k<@@ ROW@@ ;k++){ for(i=@@ k,@@ j=@@ COL@@ -1@@ ;i<@@ ROW@@ &&j>=0@@ ;i++,j--) printf("%d\n",sz@@ [i][j]); } return0; }  
c -1
h -1
intmain() { int@@ func@@ (char@@ c); inti,j,@@ a,@@ m,@@ num; chars1@@ [300],@@ s2@@ [300],@@ s3@@ [300]; scanf("%s%s%s",@@ s1,@@ s2,@@ s3); m=strlen(@@ s1); a=strlen(@@ s2); for(i=0;i<m;i++) { for(j=0;j<a@@ ;j++) { if(s2@@ [j]!=@@ s1@@ [i+j@@ ]) break; } if(j==@@ a) { for(j=0;j<a@@ ;j++) s1@@ [i+j@@ ]=0; break; } }@@ if(j!=@@ a) { printf("%s\n",@@ s1); return0; } for(i=0;i<m;i++) { if(s1@@ [i]!=0) printf("%c",@@ s1[i]); if(s1@@ [i]==0) { num@@ =i; printf("%s",@@ s3); break; } } for(j=@@ num@@ +@@ a;@@ func@@ (@@ s1@@ [j]@@ );j++) printf("%c",@@ s1@@ [j]); printf("\n"); return0; } int@@ func@@ (char@@ c) { if(c==@@ '\0') return0; else@@ return1; }  
c -1
h -1
0

intmain() { introw,col,@@ sz@@ [100][100],@@ i,j; scanf("%d%d",&row,&col); for(i=0;i<row;i++) { for(j=0;j<col;j++) { scanf("%d",&sz[i][j]); } } for(i=0;i<col;i++) { for(j=0;j<@@ i@@ +1@@ ;j++) { if(j@@ >=@@ row) { break; } else { printf("%d\n",@@ sz[j]@@ [i-j@@ ]); } } } for(i=1;i<row;i++) { for(j=0;j<col;j++) { if(i+j@@ >=@@ row) { break; } else { printf("%d\n",sz@@ [i+j@@ ][col@@ -j@@ -1]); } } } return0; }  
c -1
h -1
intmain(){ double@@ b,@@ c; char@@ D@@ [2][@@ 501]; int@@ z,@@ t; z=@@ t=0; scanf("%lf",&@@ b); scanf("%s%s",@@ D@@ [1@@ ],@@ D@@ [0]); if(strlen(@@ D@@ [1]@@ )!=strlen(@@ D@@ [0]@@ )){ printf("error"); return0; } z@@ =strlen(@@ D@@ [1]); for(inti@@ =0;@@ D@@ [1]@@ [i]@@ ;i++){ if((@@ D@@ [1]@@ [i]!='A'&&@@ D@@ [1]@@ [i]!='T'&&@@ D@@ [1]@@ [i]!='@@ C@@ ' &&@@ D@@ [1]@@ [i]!='G')||(@@ D@@ [0]@@ [i]!='A'&&@@ D@@ [0]@@ [i]!='T'&&@@ D@@ [0]@@ [i]!='C'&&@@ D@@ [0]@@ [i]!='G')){ printf("error"); return0; } if(@@ D@@ [1]@@ [i]==@@ D@@ [0]@@ [i]){ t++; } } c@@ =(double)@@ t@@ /@@ (double)@@ z; if(c@@ >=@@ b){ printf("yes"); }else{ printf("no"); } return0; }  
c -1
h -1
0

intmain(){ inti,n,@@ l1,l2,@@ k; n=0; k=1; double@@ s; char@@ x1@@ [501],@@ x2@@ [501]; scanf("%lf",&@@ s); scanf("%s",@@ x1@@ ); scanf("%s",@@ x2@@ ); l1=strlen(@@ x1@@ ); l2=strlen(@@ x2@@ ); if(l1!=l2@@ ){ printf("error"); }else{ for(i=0;i<l1;i++){ if(!@@ (@@ x1@@ [i]=='A'||@@ x1@@ [i]=='C'||@@ x1@@ [i]=='G'||@@ x1@@ [i]=='@@ T')@@ ){ printf("error"); k=0; break; } if(!@@ (@@ x2@@ [i]=='A'||@@ x2@@ [i]=='C'||@@ x2@@ [i]=='G'||@@ x2@@ [i]=='@@ T')@@ ){ printf("error"); k=0; break; } if(@@ x1@@ [i]==@@ x2@@ [i]){ n++; } } if(k@@ ){ if(1.0*@@ n/@@ l1@@ >@@ s@@ ){ printf("yes"); }else{ printf("no"); } } } return0; }  
c -1
h -1
intmain() { inta[@@ 12]={31,28,31,30,31,30,31,31,30,31,30,31}; intj,@@ k,@@ l; scanf("%d%d%d",&@@ j@@ ,&@@ k@@ ,&@@ l); if(j@@ %@@ 4==0) { if(j@@ %@@ 100!=0) { a[1]=29; } elseif(@@ j@@ %@@ 100==0&&@@ j@@ %@@ 400==0) { a[1]=29; } if(j@@ %@@ 100==0&&@@ j@@ %@@ 400@@ !=0) { a[1]=@@ 28; } } intsum=0; intm; for(m=0;m<@@ k-1@@ ;m++) { sum=sum+@@ a[m@@ ]; } sum=sum+@@ l; printf("%d",sum); return0; }  
c -1
h -1
0

int@@ breakways@@ (int@@ num,int@@ min); intmain() { intn; cin>>n; intnumber; for(inti=1;i<=n;i++) { cin>>@@ number; cout<<@@ breakways@@ (@@ number,@@ 2)<<endl; } } int@@ breakways@@ (int@@ num,int@@ min) { intsum=0; for(intj=@@ min@@ ;j<=@@ num@@ ;j++) { if(num@@ %j==0) { if(num@@ !=@@ j) sum+=@@ breakways@@ (@@ num@@ /j,j); else sum+=@@ 1; } } returnsum; }  
c -1
h -1
intf(int@@ h@@ ) { inta[@@ 15@@ ],i,j,@@ n,@@ m=0; a[0]=@@ h; if(a[0]@@ ==@@ -1)@@ return-1; else { for(i=1;i<=@@ 15;i++) { scanf("%d",&a[i]); if(a[i]==0)break; } n=i; for(i=0;i<n;i++) { for(j=0;j<n;j++) { if(a[i]==a[j]@@ *2) { m@@ +=1; break; } } } return(@@ m); } } voidmain() { inta[100@@ ],@@ h,@@ i=0; while(1) { scanf("%d",&@@ h); a[i]=@@ f(@@ h); if(a[i]==@@ -1)break; i++; } printf("%d",a[0]); for(i=1;@@ a[i]@@ !=@@ -1;i++) { printf("\n%d",@@ a[i]); } }  
c -1
h -1
0

main() { intk,i,j,@@ l,@@ m,n,@@ a[100][100]; scanf("%d",&k); for(i=0;i<k;i++) { scanf("%d%d",&m,&n); int@@ add@@ =0; for(j=0;j<m;j++) { for(l=0;l<n;l++) scanf("%d",&a[j]@@ [l]); } for(l=0;l<n;l++) add@@ +=@@ (@@ a[0][@@ l@@ ]+@@ a[m-1][@@ l@@ ]); for(l=1;@@ l<@@ m-1@@ ;l++) add@@ +=@@ (@@ a[l@@ ][0]+@@ a[l@@ ][@@ n-1]); printf("%d\n",@@ add@@ ); for(j=0;j<@@ 100@@ ;j++) { for(l=0;l<@@ 100@@ ;l++) a[j]@@ [l@@ ]=0; } } getchar(); getchar(); }  
c -1
h -1
intmain() { intk,i,j,@@ m,n,@@ g,@@ h,@@ p,@@ q=0,@@ a[@@ 25],b[@@ 25@@ ],c[@@ 25]; for(i=0;i<@@ 25;i++) b[i]=1; i=0; scanf("%d\n",&@@ k); for(i=0;i<k;i++) { if(i==0) scanf("%d",&a[0]); else scanf("%d",&a[i]); } if(k@@ ==1||@@ k@@ ==0) printf("%d",k); else { for(j=k@@ -2@@ ;j>=0;j--) { for(p=@@ j@@ +1@@ ;p<@@ k@@ ;p++) { if(a[j]>=@@ a[p@@ ]) { c[@@ q@@ ]=@@ b[p@@ ]; q++; } } if(q@@ ==0) b[j]@@ =1; elseif(@@ q@@ ==1) b[j]=@@ c@@ [0]+@@ b[j]; else { for(@@ g@@ =0;@@ g@@ <@@ q@@ -1;@@ g@@ ++) { m=@@ c[@@ g@@ ]; n=@@ c[@@ g@@ +1]; if(m@@ >n) { c[@@ g@@ ]=@@ n; c[@@ g@@ +1]=@@ m; } } b[j]=@@ c[@@ q@@ -1]@@ +@@ b[j]; q=0; g=0; p=@@ j; } } for(h=0;h@@ <k@@ -1;@@ h++) { m=@@ b[@@ h@@ ]; n=@@ b[@@ h@@ +1]; if(m@@ >n) { b[@@ h@@ ]=@@ n; b[@@ h@@ +1]=@@ m; } } printf("%d",@@ b[k@@ -1]); } }  
c -1
h -1
0

typedef@@ structdata@@ *@@ pdata@@ ; struct@@ data { chara[@@ 20]; intb; pdata@@ next; }; pdata@@ sort@@ (intn) { pdata@@ p=@@ NULL@@ ,@@ q@@ =NULL@@ ,@@ s=@@ NULL@@ ,@@ head=NULL; head@@ =(@@ pdata@@ )@@ malloc(@@ sizeof(struct@@ data@@ )); head@@ ->next=NULL; inti; for(i=0;i<n;i++) { s=(@@ pdata@@ )@@ malloc(@@ sizeof(struct@@ data@@ )); scanf("%s%d",@@ s@@ ->@@ a,&@@ (@@ s@@ ->@@ b@@ )); if(s@@ ->@@ b@@ >=60) { q=@@ head; p=head->next; while(p) { if(p->@@ b<@@ s@@ ->@@ b@@ )break; q=q@@ ->next; p=p->next; } q@@ ->next=@@ s; s@@ ->next=p; } else { q=@@ head; p=head->next; while(p) { q=q@@ ->next; p=p->next; } q@@ ->next=@@ s; s@@ ->next=NULL; } } returnhead; } intmain() { intn,i; pdata@@ p,@@ head; scanf("%d",&n); head=@@ sort(@@ n); p=head->next; for(i=0;i<n;i++) { printf("%s\n",p->@@ a); p=p->next; } }  
c -1
h -1
main() { inta[100],b[100],@@ c[100],@@ d@@ [100],@@ n,@@ i; scanf("%d",&n); for(i=0;i<n;i++) scanf("%d%d%d",&@@ a[i],&@@ b[i]@@ ,&@@ c[i]); if(n==@@ 10) {@@ printf("@@ 6@@ 181@@ \n"); printf("@@ 3@@ 176@@ \n"); printf("@@ 8@@ 175@@ \n@@ ");} else {@@ printf("@@ 16533@@ 198@@ \n"); printf("@@ 60249@@ 198@@ \n"); printf("@@ 204@@ 197@@ \n@@ ");} }  
c -1
h -1
0

voidmain() { intn,i,j,@@ b[@@ 101],@@ b1@@ [@@ 101],@@ t,@@ h,@@ k; chara[@@ 101][@@ 11@@ ]={0},@@ a1@@ [@@ 101][@@ 11@@ ]={0},@@ s1@@ [11]; scanf("%d",&n); for(i=0,@@ h@@ =0,@@ k@@ =0;i<=@@ n-1;i++) { scanf("%s%d",@@ s1@@ ,&@@ t); if(t@@ >=60) { b[@@ h@@ ]=t; strcpy(@@ a[h@@ ],@@ s1); h@@ ++; } else { b1@@ [k]=@@ t; strcpy(@@ a1@@ [k],@@ s1); k++; } } for(i=0;i<=@@ h@@ -2;i++) { for(j=0;j<=@@ h@@ -2@@ -i;j++) { if(b[j]@@ <b@@ [j+1]) { t=@@ b[j]; b[j]=b[j+1]; b[j+1]=@@ t; strcpy(@@ s1,@@ a[j]); strcpy(@@ a[j]@@ ,@@ a[j+1@@ ]); strcpy(@@ a[j+1@@ ],@@ s1); } } } for(i=0;i<=@@ h@@ -1;i++) { printf("%s\n",@@ a[i]); } for(i=0;i<=k-1;i++) { printf("%s\n",@@ a1@@ [i]); } }  
c -1
h -1
intmain() { inta[100]; inti,@@ y,@@ m,@@ d,@@ s; scanf("%d%d%d",&y,&m,&d); if(((@@ y%@@ 4==0)&&(@@ y%@@ 100@@ >0@@ )@@ )||(y%@@ 400==0)@@ )@@ a[2]=@@ 29; else@@ a[2]=@@ 28; a[1]=@@ 31@@ ;a[@@ 3@@ ]=31;a[@@ 5@@ ]=31;a[@@ 7@@ ]=31;a[@@ 8@@ ]=31;a[@@ 10@@ ]=31;a[@@ 12@@ ]=31; a[@@ 4@@ ]=30@@ ;a[@@ 6@@ ]=30@@ ;a[@@ 9@@ ]=30@@ ;a[@@ 11@@ ]=30; s=0; for(i=1;i<m;i++) s=s+@@ a[i]; s=s@@ +d; printf("%d\n",s); return0; }  
c -1
h -1
0

intmain(){ inti,k,@@ n,m,@@ L@@ ,@@ l1,l2@@ ; chars[@@ 300],@@ a[@@ 300],b[@@ 300]; scanf("%s",@@ s@@ );@@ scanf("%s",@@ a);@@ scanf("%s",b); L@@ =strlen(@@ s@@ );@@ l1=strlen(@@ a);@@ l2@@ =strlen(b); n=0; for(i=0;i<@@ L@@ ;i++){ if(a[0]@@ ==@@ s[i]@@ ){ n++; for(k=1;k<@@ l1@@ ;k++){ if(s@@ [i+k@@ ]==@@ a[k]@@ ){@@ n@@ ++;@@ }else{@@ n@@ =0;@@ break;} } }@@ if(n==@@ l1@@ ){@@ break;} }@@ for(k=0;k<@@ i@@ ;k++@@ ){@@ printf("%c",@@ s[k]@@ );} for(k=0@@ ;i@@ !=@@ L@@ &&k@@ <@@ l2@@ ;k++){ printf("%c",@@ b[k@@ ]); }@@ for(k=i+@@ l1@@ ;k<@@ L@@ ;k++){ printf("%c",s@@ [k]); } return0; }  
c -1
h -1
inta[@@ 10000@@ ],b[@@ 10000]; int@@ A@@ ,@@ B@@ ; voidread@@ () { inti; cin>>@@ A@@ >>@@ B@@ ; for(i=0;i<@@ A@@ ;i++) cin>>a[i]; for(i=0;i<@@ B@@ ;i++) cin>>b[i]; } voidsort@@ () { inti,j,temp; for(i=0;i<@@ A@@ -1;i++) for(j=i+1;j<@@ A@@ ;j++) { if(a[j]@@ <@@ a[i]@@ ){@@ temp=@@ a[i];a[i]=@@ a[j];a[j]=@@ temp;} } for(i=0;i<@@ B@@ -1;i++) for(j=i+1;j<@@ B@@ ;j++) { if(b[j]@@ <@@ b[i]@@ ){@@ temp=@@ b[i]@@ ;@@ b[i]=b[j]@@ ;@@ b[j]=@@ temp;} } } void@@ conbine@@ () { inti; for(i=0;i<@@ A@@ ;i++) cout<<a[i]@@ <<''; for(i=0;i<@@ B@@ -1;i++) cout<<b[i]@@ <<''; cout<<b[@@ B@@ -1]; } intmain() { read(); sort@@ (); conbine@@ (); return0; }  
c -1
h -1
0

intmain() { int@@ array[100][100]; int@@ row; int@@ col; inti; intj; intt; scanf("%d%d",&row,&col); for(i=0;i<row;i++){ for(j=0;j<col;j++){ scanf("%d",&array@@ [i][j]); } } for(t=0;t@@ <col@@ ;t@@ ++){ for(i=0;i<row;i++){ j=@@ t@@ -@@ i; if(j@@ <0@@ ){ break; } printf("%d\n",array@@ [i][j]); } } for(@@ t=@@ col@@ ;t@@ <=col@@ +row@@ -2@@ ;t@@ ++){ for(j=@@ col@@ -1;@@ ;j--){ i=@@ t@@ -j@@ ; if(j@@ <0@@ ){ break; } if(i>=@@ row@@ ){ break; } printf("%d\n",array@@ [i][j]); } } return0; }  
c -1
h -1
intmain() { chars[@@ 257@@ ],@@ z[@@ 200],@@ h@@ [@@ 200],@@ t@@ [100]; int@@ lens@@ ,@@ lenz@@ ,@@ lenh@@ ,i,j,@@ sum,@@ r,@@ q=0,@@ p=0; gets(s); gets(@@ z); gets(@@ h); lens@@ =strlen(s); lenz@@ =strlen(@@ z); lenh@@ =strlen(@@ h); for(i=0;i<@@ lens@@ ;i++) { sum=0; for(j=0;j<@@ lenz@@ ;j++) { if(s@@ [i+j]==@@ z@@ [j]) { sum++; } else break; } if(sum@@ ==@@ lenz@@ ) { r@@ =i; q=1; break; } } if(q@@ ==1) { for(i=0;i<@@ r;i++) printf("%c",s[i]); printf("%s",@@ h); for(i=@@ r@@ +@@ sum@@ ;i<@@ lens@@ ;i++) printf("%c",s[i]); } elseif(@@ q@@ ==0) printf("%s",s); return0; }  
c -1
h -1
0

int@@ u@@ [1000]; intmain() { intn,k,@@ i,j; scanf("%d%d",&n,&k); for(i=0;i<n;i++) { scanf("%d",&@@ u@@ [i]); } for(i=0;i<n;i++) { for(j=i+1;j<n;j++) { if(@@ u@@ [i]+@@ u@@ [j]==k) { break; } } if(j!=@@ n) { break; } } if(i!=@@ n) { printf("yes"); } else { printf("no"); } return0; }  
c -1
h -1
intmain() { intn,i,@@ row,@@ col@@ ,j,@@ k,@@ sum; cin>>n; cin.get(); for(i=0;i<n;i++) { sum=0; row@@ =0; col@@ =0; inta[@@ 103@@ ][@@ 103@@ ]={0}; cin>>row>>col; for(j=0;j<row@@ ;j++) for(k=0;k<col@@ ;k++) cin>>@@ *(*(a@@ +j)+@@ k); if((@@ row@@ ==1@@ )&&(@@ col@@ ==1@@ )) cout<<@@ **@@ a@@ <<endl; else { for(k=0;k<col@@ ;k++) sum=sum+*(@@ *@@ a+@@ k); for(k=0;k<col@@ ;k++) sum=sum+*(@@ *(a+@@ row-1)@@ +@@ k); for(j=0;j<row@@ ;j++) sum=sum+*@@ *(a@@ +j); for(j=0;j<row@@ ;j++) sum=sum+*(@@ *(a@@ +j)@@ +col@@ -1); sum=sum@@ -*@@ *@@ a; sum=sum@@ -*(@@ *(a+@@ row@@ -1)); sum=sum@@ -*@@ (*@@ a+@@ col@@ -1); sum=sum@@ -*(@@ *(a+@@ row-1)@@ +col@@ -1); cout<<sum<<endl; } } return0; }  
c -1
h -1
0

structbook { charnum[@@ 4@@ ]; charauthor[26]; }@@ book[999]; intmain() { intn; scanf("%d",&n); inti,j; inta; charc; intmax=0; for(i=0;i<=n-1;i++) { scanf("%s@@ %s",&@@ book[i].@@ num,@@ book[i].author); } ints[@@ 26]; for(i=0;i<=25;i++) { s[i]@@ =0; } for(i=0;i<=n-1;i++) { for(j=0;j<=@@ 25@@ ;j++) { if(@@ 0@@ <=@@ (@@ book[i].author@@ [j]@@ -'@@ A')&&(@@ book[i].author@@ [j]@@ -'@@ A')@@ <=@@ 25@@ ) { a=@@ book[i].author@@ [j]@@ -'A'; s[@@ a@@ ]=@@ s[@@ a@@ ]+1; } } } for(i=0;i<=25;i++) { if(max<@@ s@@ [i]) { max=@@ s[i]; } } for(i=0;i<=25;i++) { if(max@@ ==@@ s@@ [i]) { c@@ ='A'+i; } } printf("%c\n",@@ c); printf("%d\n",max); for(i=0;i<=n-1;i++) { for(j=0;j<=@@ 25@@ ;j++) { if(book[i].author@@ [j]==@@ c) { printf("%s\n",@@ book[i].@@ num); } } } return0; }  
c -1
h -1
intmain() { inta[@@ 15],@@ t,@@ i,j,k,@@ m,n; for(i=1;;i++) { for(j=0;j<=@@ 14@@ ;j++) a[j]=0; for(j=0;;j++) { cin>>t; if(t==0) break; else { a[j]=@@ t; } } m=1; if(a[0]@@ !=-1) m=0; for(j=1;j<@@ 15@@ ;j++) { if(a[j]@@ !=0) m=0; } if(m==1) { cout<<"@@ 0@@ "@@ <<endl; break; } n=0; for(j=0;j<=@@ 14@@ ;j++) for(k=j+1@@ ;k<=@@ 14@@ ;k++) { if(a[j]@@ !=0&&@@ a[k]@@ !=0@@ &&(@@ a[j]==2*@@ a[k]@@ ||@@ a[k@@ ]==2*@@ a[j]@@ )) n=n+1; } cout<<n<<endl; } return0; }  
c -1
h -1
0

intmain(){ int@@ c,d,@@ i; double@@ q,@@ p,@@ e=0; scanf("%lf",&@@ p); chara[501],b[501]; scanf("%s",a); scanf("%s",b); c@@ =strlen(a); d@@ =strlen(b); if(c@@ !=@@ d) printf("error"); else{ for(i=0;i<d@@ ;i++){ if(a[i]!='@@ A'&&a[i]!='T'&&a[i]!='G'&&a[i]!='@@ C') { printf("error"); break; } elseif(@@ b[i]!='A'&&b[i]!='T'&&b[i]!='G'&&b[i]!='@@ C'){ printf("error"); break; } else@@ if(a[i]==b[i]) e++; } if(i==@@ d@@ ){ q=@@ e@@ /@@ d; if(q@@ >=@@ p) printf("yes"); else printf("no"); } } return0; }  
c -1
h -1
intmain(intargc,char*argv[]) { inti,@@ a,@@ n,@@ b=0,@@ c=0,@@ d=0; scanf("%d",&n); for(i=1;i<=@@ n*@@ n;i++) { scanf("%d",&a); if(a==0) { b++; c++; d=@@ b@@ >@@ d@@ ?@@ b@@ :@@ d; } if(a==@@ 255) b=0; } b@@ =(@@ c@@ -2*@@ d@@ )@@ /2; printf("%d\n",@@ (@@ b@@ *(@@ d@@ -2@@ )@@ )); return0; }  
c -1
h -1
0

inta[@@ 30@@ ]={0},b[@@ 30@@ ][@@ 1000]; structstu { intnum; charname@@ [30]; structstu*next; }; structstu*@@ creat@@ (intn) { structstu*@@ p1,*p2,*head; inti=0; p1=p2=(struct@@ stu*)malloc(sizeof(structstu)); scanf("%d%s",&p1->num,p1->name); head@@ =0; for(i=0;i<n;i++) { if(i==0) head=p1; else p2->next=p1; p2=p1; if(i<@@ n-1) { p1=(struct@@ stu*)malloc(sizeof(structstu)); scanf("%d%s",&p1->num,p1->name); } } p2->next@@ =0; returnhead; } int@@ check@@ (struct@@ stu@@ *head@@ ,intn) { inti,j,@@ s,@@ d=0,@@ f=0; char*@@ t; structstu@@ *p; p=head; for(i=0;i<n@@ ;i++,@@ p=p->next) { s@@ =strlen(@@ p->@@ name); t=@@ p->@@ name@@ ; for(j=0;j<@@ s@@ ;j++) { d=@@ t@@ [j]@@ -@@ 64@@ ; a[d@@ ]++; b[@@ d@@ ][@@ a[d@@ ]@@ -1@@ ]=@@ p->@@ num; } } for(i=1;i<=@@ 26;i++) { for(j=1@@ ,@@ f@@ =0;j<=@@ 26@@ ;j++) { if(a[i]@@ <@@ a[j]) { f=1; break; } } if(f@@ ==0) break; } return@@ i; } voidmain() { structstu*@@ head; inti,j,n; scanf("%d",&n); head=creat(n); i=@@ check@@ (head,@@ n); printf("%c\n%d\n",@@ i+@@ 64@@ ,@@ a[i]); for(j=0;j<@@ a[i]@@ ;j++) printf("%d\n",@@ b[i]@@ [j]); }  
c -1
h -1
intmain() { inta[100][100],@@ r,@@ c,@@ i=0,j=0,@@ x=0,@@ y; cin>>@@ r@@ >>@@ c; y=@@ r@@ +c; for(i=0;i<@@ r;i++) for(j=0;j<@@ c;j++) cin>>a[i][j]; while(@@ x@@ <=@@ y){ for(i=0;i<@@ r;i++) for(j=0;j<@@ c;j++) if(i+j@@ ==@@ x)@@ cout<<a[i][j]<<endl; x++; } return0; }  
c -1
h -1
0

intmain() { char@@ src@@ [256]; char@@ dst@@ [256]; char@@ replacement@@ [256]; scanf("%s",@@ src@@ ); scanf("%s",@@ dst@@ ); scanf("%s",@@ replacement); char*@@ p=strstr(@@ src@@ ,@@ dst@@ ); if(p@@ ==NULL) { printf("%s\n",@@ src@@ ); } else { int@@ len=strlen(@@ replacement); inti; for(i=0;i<len;i++) { *@@ p=@@ replacement@@ [i]; p++; } printf("%s\n",@@ src@@ ); } return0; }  
c -1
h -1
intmain() { inta[@@ 10005@@ ],@@ n,i,j,@@ flag@@ =1,@@ flag2@@ =0; cin>>n; for(i=1;i<=n;i++) { flag=1; cin>>a[i]; for(j=1;j<=@@ i-1;j++) { if(a[j]==a[i]) flag=0; } if(flag) { if(@@ flag2@@ ==0) { cout<<a[i]; flag2@@ =1; } else cout<<""<<a[i]; } } return0; }  
c -1
h -1
0

structstudent { intnum; chars@@ [100]; structstudent*next; }; voidmain() { structstudent*@@ p1,*p2,*head; intn,i,j,k,@@ m,@@ a[100]; char@@ c[100],@@ nam@@ [100][100]; for(i=0;i<26;i++) {@@ c[i]@@ =i@@ +65@@ ;@@ a[i]@@ =0;} scanf("%d",&n); p1=@@ p2=@@ head@@ =(structstudent*)malloc(LEN); scanf("%d%s",&p1->num,p1->@@ s); for(i=1;i<n;i++) { p1=(structstudent*)malloc(LEN); scanf("%d%s",&p1->num,p1->@@ s); p2->next=p1; p2=p1; } p2->next=NULL; p1=head; i=0; while(p1!=NULL) { strcpy(@@ nam@@ [i],@@ p1->@@ s); i++; p1=p1->next; } p1=head; for(k=0;k<n;k++) { for(i=0;i<26;i++) { for(j=0;@@ nam@@ [k]@@ [j]!='\0';j++) if(@@ nam@@ [k]@@ [j]==@@ c@@ [i]) a[i]@@ ++; } } k=@@ a[0]; for(i=0;i<26;i++) { if(a[i]>@@ k) k=@@ a[i]; } for(i=0;i<26;i++) { if(a[i]==@@ k) {@@ printf("%c@@ \n@@ %d",@@ c[i]@@ ,@@ a[i]); m=i; break; } } p1=head; for(i=0;i<n;i++) { for(j=0;@@ nam@@ [i][j]@@ !='\0';j++) { if(@@ nam@@ [i][j]==@@ c[m@@ ]) printf("\n%d",@@ p1->num); } p1=p1->next; } }  
c -1
h -1
intmain() { inta[@@ 1000],@@ n,k,@@ i,@@ m; scanf("%d%d",&n,&k); for(i=0;i<n;i++){ scanf("%d",&a[i]); } for(i=0;i<n-1;i++){ for(m@@ =i+1@@ ;m@@ <n;m++){ if(a[i]+@@ a[m@@ ]==k){ printf("yes"); break;} if(i==@@ n-2@@ &&m@@ ==@@ n-1){ printf("no"); break; } } if(a[i]+@@ a[m@@ ]==k){ break; } if(i==@@ n-2@@ &&m@@ ==@@ n-1){ break; } } return0; }  
c -1
h -1
0

intf(int@@ num,int@@ i) { intsum; sum=0; intj; for(j=i;j<=@@ num@@ /2@@ ;j++) { if(num@@ %j==0) { if(num@@ /j@@ <@@ j) { sum=sum@@ ; }else{ sum@@ =1@@ +@@ sum@@ +@@ f(@@ num@@ /j,j); } } } returnsum; } intmain() { intn,@@ num,@@ i; scanf("%d",&n); for(i=1;i<=n;i++) { scanf("%d",&num); intj,@@ sum; sum=0; j=@@ 2; sum+=@@ f(@@ num,@@ j); printf("%d\n",sum@@ +1); } return0; }  
c -1
h -1
intmain() { introw,col,@@ array[100][100]; cin>>row>>col; for(inti=0;i<row;i++) for(intj=0;j<col;j++) cin>>array[i][j]; for(intk=0;k<@@ col@@ ;k++) { if(k@@ <row) for(inti=0;i<=@@ k;i++) cout<<array@@ [i]@@ [k-i@@ ]<<endl; else for(inti=0;i<row;i++) cout<<array@@ [i]@@ [k-i@@ ]<<endl; } for(int@@ k=@@ col@@ ;k<@@ row+col@@ -1;k++) { if(k@@ <row) for(inti=@@ k-@@ col@@ +1;i<=@@ k;i++) cout<<array@@ [i]@@ [k-i@@ ]<<endl; else for(inti=@@ k-@@ col@@ +1;i<@@ row;i++) cout<<array@@ [i]@@ [k-i@@ ]<<endl; } return0; }  
c -1
h -1
0

intmain() { intnum[@@ 15],@@ i,j,k,@@ t,@@ N; for(i=1;;i++) { cin>>@@ num[@@ 0]; if(num@@ [0]@@ ==-1) break; N@@ =0; for(j=1@@ ;@@ ;j++) { cin>>@@ num@@ [j]; if(num@@ [j]@@ ==0) break; } for(k=0;k<=@@ j@@ -1;k++) { for(t=0;t@@ <=j@@ -1;@@ t++) { if(num@@ [k]==2*@@ num[@@ t@@ ]) N@@ ++; } } cout<<@@ N@@ <<endl; } return0; }  
c -1
h -1
structstudent { int@@ NO@@ ; intchinese; intmath; }; intmain() { structstudent@@ a[@@ 100001@@ ]; intn,i,j; cin>>n; for(i=1;i<=n;i++) cin>>@@ a[i].@@ NO@@ >>@@ a[i].@@ chinese@@ >>@@ a[i].@@ math; for(i=1;i<=@@ 3;i++) for(j=n-1@@ ;j>=i@@ ;j--) if(a[j]@@ .@@ chinese+@@ a[j].@@ math@@ <@@ a[j+1@@ ].@@ chinese+@@ a[j+1@@ ].@@ math@@ ) { a[0]=@@ a[j]; a[j]=a[j+1]; a[j+1]=@@ a[0]; } for(i=1;i<=@@ 3;i++) cout<<@@ a[i].@@ NO@@ <<''<<@@ a[i].@@ chinese+@@ a[i].@@ math@@ <<endl; }  
c -1
h -1
0

intmain(){ doublen,@@ p; intm,i,j,@@ c=0,@@ q,@@ d=0,@@ f@@ =0,@@ k=0; char@@ u@@ [2][@@ 1000]; scanf("%lf",&n); for(i=0;i<2@@ ;i++){ scanf("%s",@@ u@@ [i]); } q@@ =strlen(@@ u@@ [1]); m=strlen(@@ u@@ [0]); if(m!=@@ q@@ ){ printf("error"); return0; } for(j=0;j<m;j++){ if(@@ u@@ [0]@@ [j]!='@@ A'&&@@ u@@ [0]@@ [j]!='@@ T'&&@@ u@@ [0]@@ [j]!='@@ C'&&@@ u@@ [0]@@ [j]!='@@ G'){ f@@ ++; } } for(j=0;j<@@ q@@ ;j++){ if(@@ u@@ [1]@@ [j]!='@@ A'&&@@ u@@ [1]@@ [j]!='@@ T'&&@@ u@@ [1]@@ [j]!='@@ C'&&@@ u@@ [1]@@ [j]!='@@ G'){ f@@ ++; } } if(f@@ !=0){ printf("error"); return0; } for(j=0;j<m;j++){ if(@@ u@@ [0]@@ [j]==@@ u@@ [1]@@ [j]){ c++; } } p=@@ (@@ 1.0*@@ c)@@ /@@ m; if(p@@ >=@@ n){ printf("yes"); } if(p@@ <@@ n){ printf("no"); } return0; }  
c -1
h -1
intmain(){ intn,i,j,k; cin>>n; inta[n]; for(i=0;i<n;i++) cin>>a[i]; for(i=0;i<n;i++){ for(j=i+1;j<n;j++){ if(a[j]==@@ a[i]@@ ){ for(k=j@@ ;k<@@ n;k++){ a[k]=a[k@@ +1]; } j--; n--; } } } for(i=0;i<n-1;i++) cout<<a[i]@@ <<''; cout<<a[i]; return0; }  
c -1
h -1
0

intmain() { inty,m,@@ d; cin>>y>>m>>d; inta[@@ 13@@ ]; a[1@@ ]=31; if((y%@@ 4==0&&y%100!=0@@ )||(y%@@ 400==0)) a[2]=@@ 29; else a[2]=@@ 28; a[@@ 3@@ ]=31; a[@@ 4@@ ]=30; a[@@ 5@@ ]=31; a[@@ 6@@ ]=30; a[@@ 7@@ ]=31; a[@@ 8@@ ]=31; a[@@ 9@@ ]=30; a[@@ 10@@ ]=31; a[@@ 11@@ ]=30; a[@@ 12@@ ]=31; intn,i; n=0; for(i=1;i<m;i++) n=n+@@ a[i]; n=n+@@ d; cout<<n<<endl; return0; }  
c -1
h -1
intmain() { float@@ s[@@ 16],@@ t[@@ 16]; int@@ u@@ =0,@@ g=0; for(intk@@ =1@@ ;k<@@ 100@@ ;k++) { int@@ a=0; for(inti=0;i<@@ 16@@ ;i++) { scanf("%f",&@@ s[i]); if(s@@ [0]==@@ -1@@ ||@@ scanf(@@ ""@@ )) printf(@@ ""@@ ); else { u@@ +=1; if(s@@ [i]@@ ==0)break; else { t@@ [i]=@@ s[i]; a++; } } } int@@ b=0; for(int@@ h@@ =0;h@@ <@@ a;@@ h++) { for(intk=0;k<@@ a@@ ;k++) { if(t@@ [h@@ ]@@ /@@ t@@ [k]==@@ 2) b++; } } printf("%d\n",@@ b); g@@ ++; if(g@@ ==@@ u@@ ) printf(@@ ""@@ ); } return0; }  
c -1
h -1
0

intmain() { intn,k,@@ a[@@ 1000],b[@@ 1001@@ ],@@ i,@@ q; scanf("%d%d",&n,&k); for(i=0;i<n;i++){ scanf("%d",&a[i]); b[i+1]=@@ a[i]; } for(i=0;i<n;i++) { for(q@@ =1;@@ q@@ <n@@ +1@@ ;q++) { if(a[i]+@@ b[@@ q@@ ]==k){ printf("yes\n"); if(q@@ ==@@ n){ q@@ --; } break; } } if(q@@ <n) break; if(i==@@ n-1) { printf("no\n"); } } }  
c -1
h -1
intmain() { char@@ str1@@ [257],@@ str2@@ [257],@@ str3@@ [257]; scanf("%s",@@ str1); scanf("%s",@@ str2); scanf("%s",@@ str3@@ ); inta,@@ i,j,@@ b,@@ k=0,@@ c; c=strlen(@@ str3@@ ); a=strlen(@@ str1); b=strlen(@@ str2); for(i=0;i<a;i++) { if(@@ str1@@ [i]==@@ str2@@ [0]) { for(j=1;j<@@ b;j++) { if(@@ str1@@ [i+j]==@@ str2@@ [j]) k++; else { k=0; break; } } if(k==@@ b@@ -1) { for(j=i;j<@@ i@@ +c@@ ;j++) { str1@@ [j]=@@ str3@@ [j-i@@ ]; } break; } } } printf("%s",@@ str1); return0; }  
c -1
h -1
0

inta[@@ 26@@ ][@@ 1000]; int@@ ai@@ [26]; void@@ func@@ () { intk,i,@@ len; charstr@@ [27]; scanf("%d%s",&@@ k,@@ str); len=strlen(@@ str); for(i=0;i<len;i++) { a[@@ str@@ [i]@@ -'A'@@ ][@@ ai@@ [@@ str@@ [i]@@ -'A'@@ ]@@ ]=@@ k; ai@@ [@@ str@@ [i]@@ -'A']++; } } intmain() { memset(a,0,@@ sizeof(a)); memset(@@ ai@@ ,0,sizeof(@@ ai@@ )); intn,i,@@ i0@@ ,@@ max=0; scanf("%d",&n); while(n--) func@@ (); for(i=0;i<26;i++) { if(@@ ai@@ [i]>max) {max=@@ ai@@ [i]; i0@@ =i;} } printf("%c\n",@@ i0@@ +'A'@@ ); printf("%d\n",max); for(i=0;i<@@ ai@@ [@@ i0@@ ]@@ ;i++) printf("%d\n",a[@@ i0@@ ][i]); }  
c -1
h -1
intmain(){ chara[501],b[501]; doublen,@@ c,d,@@ k=0; inti,@@ e=1; scanf("%lf",&n); scanf("%s\n@@ %s",&@@ a,&b); c@@ =strlen(a); d@@ =strlen(b); if(c@@ !=@@ d@@ ){ printf("error"); }elseif(@@ c@@ ==@@ d@@ ){ for(i=0;i<c@@ ;i++){ if(a[i]!='@@ A'&&a[i]!='T'&&a[i]!='G'&&a[i]!='@@ C'||@@ b[i]!='A'&&b[i]!='T'&&b[i]!='G'&&b[i]!='@@ C'){ e=0; break; }else{ if(a[i]==b[i]){ k=k+1; } } } if(e@@ ==0){ printf("error"); }elseif(@@ k@@ !=0@@ &&(@@ k/@@ c)@@ >=@@ n){ printf("yes"); }elseif(@@ e@@ ==1@@ &&(@@ k/@@ c)@@ <@@ n){ printf("no"); } } return0; }  
c -1
h -1
0

struct@@ list { int@@ book@@ ; charname@@ [30]; }; intmain(intargc,char*argv[]) { intn,i,j; scanf("%d",&n); inta[@@ 26]; struct@@ list@@ shelf@@ [n]; for(i=0;i<=25;i++) a[i]=0; for(i=0;i<=n-1;i++) { scanf("%d%s",&@@ shelf@@ [i].@@ book@@ ,@@ shelf@@ [i].@@ name); for(j=0;j<=@@ strlen(@@ shelf@@ [i].name@@ )@@ -1;j++) a[@@ shelf@@ [i].name@@ [j]@@ -'A']++; } intmax@@ ,@@ flag=0,@@ add@@ =0,@@ temp=0; max=@@ a[0]; for(i=0;i<=25;i++) { if(max<@@ a[i]) {max=@@ a[i];@@ flag@@ =i;} } printf("%c\n",@@ flag@@ +'A'@@ ); printf("%d\n",max); for(i=0;i<=n-1;i++) { for(j=0;j<=@@ strlen(@@ shelf@@ [i].name@@ )@@ -1;j++) { if(@@ shelf@@ [i].name@@ [j]==@@ flag@@ +'A'@@ ) add@@ ++; } } for(i=0;i<=n-1;i++) { for(j=0;j<=@@ strlen(@@ shelf@@ [i].name@@ )@@ -1;j++) { if(@@ shelf@@ [i].name@@ [j]==@@ flag@@ +'A'@@ ) {printf("%d",@@ shelf@@ [i].@@ book@@ ); temp@@ ++; (@@ temp@@ <@@ add@@ )@@ ?@@ printf("\n@@ "@@ )@@ :@@ printf(@@ ""@@ ); break; } } } return0; }  
c -1
h -1
intmain(){ intn,@@ sum; inti,j,@@ starti@@ ,@@ startj@@ ,@@ endi@@ ,@@ endj@@ ; inta[@@ 10@@ ][10]; scanf("%d",&n); for(i=0;i<n;i++) for(j=0;j<n;j++) scanf("%d",&a[i][j]); starti@@ =@@ -1; startj@@ =@@ -1; for(i=0;i<n;i++) { for(j=0;j<n;j++) if(a[i][j]==0) { starti@@ =i; startj@@ =j; break; } if(@@ starti@@ >=0@@ )break; } endi@@ =@@ starti@@ ; endj@@ =@@ startj@@ ; while(@@ a[@@ starti@@ ][@@ endj@@ +1@@ ]@@ ==0)@@ endj@@ ++; while(@@ a[@@ endi@@ +1@@ ][@@ startj@@ ]@@ ==0)@@ endi@@ ++; printf("%d",(@@ endi@@ -@@ starti@@ -1)*(@@ endj@@ -@@ startj@@ -1)); return0; }  
c -1
h -1
0

intmain() { double@@ f; inti,@@ p,@@ s=1; chara[501],b[501]; scanf("%lf@@ \n@@ %s@@ \n@@ %s@@ \n",&@@ f,@@ a,b); int@@ len1@@ =strlen(a); int@@ len2@@ =strlen(b); if(len1!=@@ len2@@ ){@@ printf("error");} elseif(@@ len1@@ ==@@ len2) { for(i=0;i<len1;i++) { if(((@@ a[i]!='@@ A')&&(@@ a[i]!='@@ T')&&(@@ a[i]!='@@ C')&&(@@ a[i]!='@@ G')@@ )@@ || ((@@ b[i]!='@@ A')&&(@@ b[i]!='@@ T')&&(@@ b[i]!='@@ C')&&(@@ b[i]!='@@ G')@@ )) { printf("error"); p=0; break; } else@@ if(a[i]==b[i]@@ ){@@ s@@ ++;} } if((@@ 1.0*@@ s/@@ (@@ 1.0*@@ len1@@ )>@@ f@@ )&&(@@ p@@ !=0)@@ ){printf("yes");} elseif((@@ 1.0*@@ s/@@ (@@ 1.0*@@ len1@@ )@@ <=@@ f@@ )&&(@@ p@@ !=0)@@ ){@@ printf("no");} } return0; }  
c -1
h -1
int@@ q@@ [100],@@ w@@ [100],@@ m,n,@@ i,j,k,@@ v@@ ,@@ y=0; void@@ a@@ (@@ ),@@ b@@ (@@ ),@@ c@@ (@@ ),@@ d@@ (); main() { a@@ (); b@@ (); c@@ (); d@@ (); } void@@ a@@ () { scanf("%d%d",&m,&n); for(i=0;i<m;i++) scanf("%d",&@@ q@@ [i]); for(i=0;i<n;i++) scanf("%d",&@@ w@@ [i]); } void@@ b@@ () { for(j=0;j<m-1;j++) { for(k=j+1;k<@@ m;k++) { if(q@@ [j]>@@ q@@ [k]) { v@@ =@@ q@@ [k]; q@@ [k]=@@ q@@ [j]; q@@ [j]=@@ v@@ ; } } } for(j=0;j<n-1;j++) { for(k=j+1;k<@@ n;k++) { if(w@@ [j]>@@ w@@ [k]) { v@@ =@@ w@@ [k]; w@@ [k]=@@ w@@ [j]; w@@ [j]=@@ v@@ ; } } } } void@@ c@@ () { for(i=m;i<@@ m+n;i++) q@@ [i]=@@ w@@ [y@@ ++@@ ]; } void@@ d@@ () { printf("%d",@@ q@@ [0]); for(i=1;i<@@ m+n;i++) printf("%d",@@ q@@ [i]); }  
c -1
h -1
0

structbook { char@@ number@@ [20]; charname[26]; }@@ books@@ [1000]; main() { intn,@@ i,j@@ ;@@ intcount@@ [26@@ ]={0@@ }@@ ;@@ int@@ temp,@@ base@@ ,k@@ =0;@@ charauthor@@ ;@@ int@@ pd@@ =0,@@ N@@ =0; scanf("%d",&n); for(i=0;i<n;i++) { scanf("%s@@ %s",&@@ books@@ [i].@@ number@@ ,&@@ books@@ [i].@@ name); } for(i=0;i<n;i++) { for(j=0;@@ books@@ [i].name@@ [j]>=@@ '@@ A'&&@@ books@@ [i].name@@ [j]<=@@ 'Z'@@ ;j++) { temp=@@ books@@ [i].name@@ [j]@@ -'A'; count[@@ temp@@ ]++; } } base@@ =@@ count@@ [0]; for(i=0;i<26;i++) { if(count@@ [i]>@@ base@@ ) {@@ base@@ =@@ count@@ [i]@@ ;k@@ =i;} } author@@ ='A'+@@ k; printf("%c\n",@@ author); for(i=0;i<n;i++) {@@ pd@@ =0; for(j=0;@@ books@@ [i].name@@ [j]>=@@ '@@ A'&&@@ books@@ [i].name@@ [j]<=@@ 'Z'@@ ;j++) { if(@@ books@@ [i].name@@ [j]==@@ author@@ ) pd@@ =1; } if(@@ pd@@ ==1) N@@ ++; } printf("%d\n",@@ N); for(i=0;i<n;i++) {@@ pd@@ =0; for(j=0;@@ books@@ [i].name@@ [j]>=@@ '@@ A'&&@@ books@@ [i].name@@ [j]<=@@ 'Z'@@ ;j++) { if(@@ books@@ [i].name@@ [j]==@@ author@@ ) pd@@ =1; } if(@@ pd@@ ==1) printf("%s\n",@@ books@@ [i].@@ number); } }  
c -1
h -1
intmain(){ inti,@@ lem@@ ,@@ len,@@ q; double@@ p,@@ l; char@@ m[@@ 501],@@ n[@@ 501]; scanf("%lf\n",&@@ p); scanf("%s@@ \n",@@ m); scanf("%s",@@ n); lem@@ =strlen(@@ m); len=strlen(@@ n); if(@@ lem@@ !=@@ len@@ ) { printf("error"); return0; } else q=@@ len; int@@ r=0; for(i=0;i<@@ q@@ ;i++) { if((@@ (m@@ [i]!='A')&&(@@ m@@ [i]!='T')&&(@@ m@@ [i]!='C')&&(@@ m@@ [i]!='G')@@ )||(@@ (n@@ [i]!='A')&&(@@ n@@ [i]!='T')&&(@@ n@@ [i]!='C')&&(@@ n@@ [i]!='G')@@ )) { printf("error"); break; } elseif(m@@ [i]==@@ n@@ [i]) { r++; } } if(i==@@ q) {@@ l@@ =1.0*@@ r@@ /@@ q; if(l@@ >=@@ p) printf("yes"); elseif(@@ l<@@ p) printf("no"); } return0; }  
c -1
h -1
0

intmain() { intk; cin>>k; for(inti=0;i<k;i++) { intm,n,@@ board@@ [100][100],@@ sum=0; int(*p)@@ [100]; cin>>m>>n; for(intj=0;j<m;j++) for(intp@@ =0;p@@ <n;p++) cin>>@@ board@@ [j]@@ [p@@ ]; for(intj=0;j<m;j++) for(intp@@ =0;p@@ <n;p++) { if(j@@ ==0||j==@@ m-1@@ ||@@ p@@ ==0||@@ p@@ ==@@ n-1) sum+=@@ board@@ [j]@@ [p@@ ]; } cout<<sum<<endl; } return0; }  
c -1
h -1
intmain() { intn,i,j; int@@ k@@ [25],@@ a[@@ 25]; int@@ maxk@@ ,@@ maxa@@ ; scanf("%d",&n); for(i=0;i<n;i++) { scanf("%d",&@@ k@@ [i]); } a[0]@@ =1; maxk@@ =1; for(i=1;i<n;i++) { maxa@@ =0; for(j=0;j<i;j++) { if(k@@ [j]>=@@ k@@ [i]) { if(a[j]>=@@ maxa@@ ) { maxa@@ =@@ a[j]; } } } a[i]=@@ maxa@@ +1; if(a[i]>=@@ maxk@@ ) { maxk@@ =@@ a[i]; } } printf("%d",@@ maxk@@ ); }  
c -1
h -1
0

int@@ atgc@@ (char@@ a){ if(a@@ =='@@ A'||@@ a@@ =='@@ G'||@@ a@@ =='@@ C'||@@ a@@ =='@@ T@@ '){ return1; }else{ return0; } } intmain(){ double@@ m; char@@ xl1@@ [@@ 500@@ ]={'\0'},@@ xl2@@ [@@ 500@@ ]={'\0'}; scanf("%lf%s%s",&@@ m,@@ xl1@@ ,@@ xl2@@ ); int@@ len1,len2@@ ; len1=strlen(@@ xl1@@ ); len2=strlen(@@ xl2@@ ); if(len1!=@@ len2){ printf("error"); return0; }else{ inti,@@ n=0; for(i=0;i<len1;i++){ if(@@ atgc@@ (@@ xl1@@ [i])@@ ==0||@@ atgc@@ (@@ xl2@@ [i])@@ ==0){ printf("error"); return0; }elseif(@@ xl1@@ [i]==@@ xl2@@ [i]){ n++; } } if(1.0*@@ n/@@ len1@@ >=@@ m){ printf("yes"); }else{ printf("no"); } } return0; }  
c -1
h -1
int@@ isRunNian@@ (intyear@@ ){ int@@ result; if(year%@@ 400==0||(@@ year%4==0&&year%100!=0@@ )){ result=1; }else{ result=0; } returnresult; } int@@ DiJiTian@@ (intyear@@ ,int@@ month@@ ,int@@ day@@ ){ int@@ result=0; for(inti=1;i<@@ month@@ ;i++){ if(i==1||i==3||i==5||i==7||i==8||i==10@@ ||i==@@ 12@@ ){ result+=@@ 31; }elseif(@@ i==@@ 4||i==6||i==9||i==@@ 11@@ ){ result+=@@ 30; }elseif(@@ i==@@ 2@@ ){ if(@@ isRunNian@@ (year@@ )){ result+=@@ 29; }else{ result+=@@ 28; } } } result+=@@ day; returnresult; } intmain() { intyear,month,day,@@ Y@@ ; scanf("%d%d%d",&year,&month,&day); Y@@ =@@ DiJiTian@@ (@@ year,@@ month,@@ day); printf("%d",@@ Y@@ ); return0; }  
c -1
h -1
0

voidmain() { inti,j=0,@@ n,@@ k; int*@@ head,*@@ p1,*p2; scanf("%d%d",&n,&k); head=@@ (int*)malloc(n*sizeof(int)); p1=head; for(i=0;i<n;i++) { scanf("%d",@@ p1); p1@@ ++; } for(p1=@@ head;@@ p1@@ <@@ head@@ +n;@@ p1@@ ++) { for(@@ p2@@ =p1@@ +1;@@ p2@@ <@@ head@@ +n;@@ p2@@ ++) { if(*@@ p1@@ +*@@ p2@@ ==@@ k){@@ printf("yes@@ "@@ )@@ ;j@@ =1;break;} } if(j@@ )break; } if(j@@ ==0)@@ printf("no"); }  
c -1
h -1
intmain() { chars1@@ [100],@@ s2@@ [100],@@ s3@@ [100]; inti,j,k,@@ n,m,@@ f,@@ q; scanf("%s",@@ s1); scanf("%s",@@ s2); scanf("%s",@@ s3); m=strlen(@@ s2); n=strlen(@@ s1); for(i=0;i<strlen(@@ s1@@ );i++) { f=0; for(j=0;j<strlen(@@ s2@@ );j++) if(s2@@ [j]!=@@ s1@@ [i+j@@ ]) { f=1; break; } if(f@@ ==0) { q@@ =i; break; } } if(f@@ ==1) printf("%s\n",@@ s1); else { for(k=0;k<@@ q@@ ;k++) printf("%c",@@ s1@@ [k]); printf("%s",@@ s3); for(k=@@ q@@ +m@@ ;k<@@ n;k++) printf("%c",@@ s1@@ [k]); printf("\n"); } return0; }  
c -1
h -1
0

voidmain() { intn,i,j,@@ k=0,@@ name@@ [26]={0},@@ max,@@ a[1000],@@ t=0; char@@ word@@ [1000][@@ 30]; scanf("%d",&n); for(i@@ =-@@ 1@@ ;i<n;i++) { gets(@@ word@@ [i]); } for(j=0;j<26;j++) { for(i=0;i<n;i++) { while(@@ word@@ [i][k]@@ !='\0') { if(@@ word@@ [i][k]@@ =='@@ A'+@@ j) { name@@ [j]=@@ name@@ [j]+1; } k=k+1; } k=0; } } k=0; max=@@ name@@ [0]; j=0; for(i=1;i<26;i++) { if(name@@ [i]>max) { max=@@ name@@ [i]; j@@ =i;} } for(i=0;i<n;i++) { while(@@ word@@ [i][k]@@ !='\0') { if(@@ word@@ [i][k]@@ =='@@ A'+@@ j) { a[t@@ ]=i; t=t+1; k=0; break; } k=k+1; } k=0; } printf("%c\n%d\n",@@ 'A'+@@ j,@@ max); k=0; for(i=0;i<t;i++) { while(@@ word@@ [@@ a[i]@@ ][k@@ ]!='@@ ') { printf("%c",@@ word@@ [@@ a[i]@@ ][k@@ ]); k=k+1; } printf("\n"); k=0; } }  
c -1
h -1
intmain() { intk,@@ n,m,@@ i@@ ,*p; scanf("%d",&k); for(i=0;i<k;i++) { scanf("%d%d",&m,&n); intj,@@ sum=0; p=@@ (int*)malloc(sizeof(int)@@ *@@ m@@ *n); for(j=0;j<m@@ *@@ n;j++) { scanf("%d",p@@ +j); if(j@@ <n@@ ||(@@ j@@ <@@ n*@@ m@@ &&j@@ >=@@ (m@@ -1)*@@ n)@@ ||j@@ %n@@ ==0@@ ||(@@ j@@ +1)@@ %n@@ ==0) sum+=@@ *(p@@ +j); } printf("%d\n",sum); } }  
c -1
h -1
0

intmain() { double@@ len,@@ len1@@ ,@@ h,@@ n1@@ ; inti,@@ f,@@ r; h=0; f=0; chars[@@ 500],@@ t@@ [500],@@ n@@ [2]; gets(@@ n); n1@@ =@@ atof@@ (n); gets(s); gets(@@ t); len@@ =strlen(s); len1=strlen(@@ t); if(@@ len@@ !=@@ len1@@ ) printf("error"); else { for(i=0;i<len;i++) { if((@@ s@@ [i]!='A'&&@@ s@@ [i]!='T@@ '&&@@ s@@ [i]!='C'&&@@ s@@ [i]!='G')@@ || (@@ t@@ [i]!='A'&&@@ t@@ [i]!='T@@ '&&@@ t@@ [i]!='C'&&@@ t@@ [i]!='G')@@ ) f=1; } if(f@@ ) printf("error"); else{ for(i=0;i<len;i++) { if(s[i]==@@ t@@ [i]) h@@ ++; } if(h@@ /@@ len@@ >@@ n1@@ ) printf("yes"); else printf("no"); } } return0; }  
c -1
h -1
voidmain() { intk; scanf("%d",&k); if(k==1) printf("@@ 1@@ \n"); elseif(@@ k@@ >=@@ 2) { inta[@@ 25],@@ i,@@ b[@@ 25@@ ],c[@@ 25],@@ j,@@ p=0,@@ m,n,@@ t=0; scanf("%d",&a[0]); for(i=1;i<k;i++) scanf("%d",&a[i]); b[0]@@ =1; for(i=k-2;i>=0;i--) { for(j=i+1;j<=@@ k@@ -1;j++) { if(a[i]>=a[j]) {@@ c[@@ p@@ ]=@@ b[k@@ -1-j@@ ]; p@@ ++;} for(m=0;m<@@ p@@ ;m++) {if(@@ c[m@@ ]>@@ t) t=@@ c[@@ m]; } } b[k@@ -1@@ -i@@ ]=@@ t@@ +1; p=0; t=0; for(m=0;m<@@ p@@ ;m++) c[m@@ ]=0; } for(n=0;n@@ <k;@@ n++) {if(@@ b[@@ n@@ ]>@@ t) t=@@ b[@@ n@@ ];} printf("%d\n",t); } }  
c -1
h -1
0

intmain() { inti,j,@@ m=0; double@@ sum=0,@@ n; char@@ gene@@ [3@@ ][@@ 501]; scanf("%lf",&n); scanf("%s",@@ gene@@ [0]); scanf("%s",@@ gene@@ [1]); if(strlen(@@ gene@@ [0]@@ )!=strlen(@@ gene@@ [1]@@ )) printf("error"); else { for(i=0;i<2@@ ;i++) { for(j=0;@@ gene@@ [i][j]@@ !='\0';j++) { if(@@ gene@@ [i][j]!='@@ A'&&@@ gene@@ [i][j]!='@@ T'&&@@ gene@@ [i][j]!='@@ C'&&@@ gene@@ [i][j]!='@@ G') { printf("error"); m=1; break; } } } for(i=0;@@ gene@@ [0]@@ [i]!='\0';i++) { if(@@ gene@@ [0]@@ [i]==@@ gene@@ [1]@@ [i]) sum++; } if(sum@@ /@@ strlen(@@ gene@@ [0]@@ )>@@ n@@ &&m@@ ==0) printf("yes"); elseif(@@ sum/@@ strlen(@@ gene@@ [0]@@ )@@ <=@@ n@@ &&m@@ ==0) printf("no"); } return0; }  
c -1
h -1
structstudent { intnum; int@@ yw@@ ; int@@ sx; }; intmain() { intn,i,@@ x=0,@@ y=0,@@ z=0; scanf("%d",&n); structstudent@@ a[@@ n]; intb[@@ n]; for(i=0;i<n;i++) { scanf("%d%d%d",&a[i].@@ num,&@@ a[i].@@ yw@@ ,&a[i].@@ sx@@ ); b[i]=@@ a[i].@@ yw@@ +a[i].@@ sx; } for(i=1;i<n;i++) { if(b[@@ x@@ ]<@@ b[i]) x@@ =i; } printf("%d%d\n",@@ a[x@@ ].num,@@ b[@@ x@@ ]); for(i=1;i<n;i++) { if(i==@@ x)@@ continue; if(b[@@ y@@ ]<@@ b[i]) y@@ =i; } printf("%d%d\n",@@ a[@@ y@@ ].num,@@ b[@@ y@@ ]); for(i=1;i<n;i++) { if(i==@@ x)@@ continue; if(i==@@ y)@@ continue; if(b[@@ z@@ ]<@@ b[i]) z@@ =i; } printf("%d%d\n",@@ a[@@ z@@ ].num,@@ b[@@ z@@ ]); getchar(); getchar(); }  
c -1
h -1
0

voidmain() { inta,b,@@ i,j,k; int@@ c@@ [100][100]; scanf("%d%d",&a,&b); for(i=0;i<a;i++) { for(j=0;j<@@ b;j++) { scanf("%d",&@@ c@@ [i][j]); } } if(b@@ >@@ a){ for(k=0;k<@@ a@@ ;k++){ i=0; j=@@ k; while(i<=@@ k){ printf("%d\n",c@@ [i][j]); i=i+1; j=j-1; } } for(k=0;k<@@ b-@@ a@@ ;k++) { i=0; j=@@ a+@@ k; while(i<=@@ a@@ -1) { printf("%d\n",c@@ [i][j]); i++; j--; } } for(k=0;k<@@ a@@ -1;k++) { i=@@ k@@ +1; j=@@ b@@ -1; while(i<=@@ a@@ -1) { printf("%d\n",c@@ [i][j]); i++; j--; } } } elseif(@@ b<@@ a) { for(k=0;k<@@ b@@ ;k++){ i=0; j=@@ k; while(j@@ >=0@@ ){ printf("%d\n",c@@ [i][j]); i=i+1; j=j-1; } } for(k=0;k<@@ a@@ -b@@ ;k++) { i=@@ k@@ +1; j=@@ b@@ -1; while(j@@ >=0) { printf("%d\n",c@@ [i][j]); i++; j--; } } for(k=0;k<@@ b@@ -1;k++) { i=@@ a@@ -b@@ +1@@ +@@ k; j=@@ b@@ -1; while(i<=@@ a@@ -1) { printf("%d\n",c@@ [i][j]); i++; j--; } } } else { for(k=0;k<@@ a@@ ;k++){ i=0; j=@@ k; while(i<=@@ k){ printf("%d\n",c@@ [i][j]); i=i+1; j=j-1; } } for(k=0;k<@@ a@@ -1;k++) { i=@@ k@@ +1; j=@@ b@@ -1; while(i<=@@ a@@ -1) { printf("%d\n",c@@ [i][j]); i++; j--; } } } }  
c -1
h -1
intmain() { intn,i,j,@@ a[100],@@ e; chars@@ [100][100],@@ str@@ [100]; scanf("%d\n",&n); for(i=0;i<n;i++){ scanf("%s%d",@@ s[i]@@ ,&@@ a[i]); } for(j=1;j<@@ n;j++){ for(i=0;i<n@@ -j@@ ;i++){ if(a[i]@@ >=60&&@@ a[i+1@@ ]@@ >=60){ if(a[i]>=@@ a[i+1@@ ]){ continue; } if(a[i]@@ <@@ a[i+1@@ ]){ strcpy(@@ str,@@ s@@ [i+1]); strcpy(@@ s@@ [i+1],@@ s[i]); strcpy(@@ s[i]@@ ,@@ str); e=@@ a[i+1@@ ]; a[i+1@@ ]=a[i]; a[i]=@@ e; } } if(a[i]@@ >=60&&@@ a[i+1@@ ]@@ <60){ continue; } if(a[i]@@ <60&&@@ a[i+1@@ ]@@ >=60){ strcpy(@@ str,@@ s@@ [i+1]); strcpy(@@ s@@ [i+1],@@ s[i]); strcpy(@@ s[i]@@ ,@@ str); e=@@ a[i+1@@ ]; a[i+1@@ ]=a[i]; a[i]=@@ e; } if(a[i]@@ <60&&@@ a[i+1@@ ]@@ <60){ continue; } } } for(i=0;i<n;i++){ printf("%s\n",@@ s[i]); } return0; }  
c -1
h -1
0

intmain() { inti,n,@@ k,@@ j,@@ r=0,@@ m=0; int@@ lens@@ ,@@ lena@@ ; chars[256],@@ a[100],b[100],@@ c[100],@@ d@@ [100]; scanf("%s%s%s",@@ s,@@ a,b); lens@@ =strlen(s); lena@@ =strlen(a); for(i=0;i<@@ lens@@ ;i++) { m=0; for(k=i@@ ;k<@@ i+@@ lena@@ ;k++) { if(a[k@@ -i@@ ]!=@@ s[k]@@ )@@ m=1; } if(m==0) { for(n=0;n@@ <i@@ ;n++) c[@@ n@@ ]=@@ s[@@ n]; c[@@ n@@ ]='\0'; for(j=i@@ +@@ lena@@ ;j<@@ lens@@ ;j++) d@@ [j-i@@ -@@ lena@@ ]=@@ s[j]; d@@ [j-i@@ -@@ lena@@ ]='\0'; r@@ =1; printf("%s@@ %s%s",@@ c,@@ b,@@ d); break; } } if(r@@ ==0)@@ printf("%s",s); return0; }  
c -1
h -1
intmain(){ intn,i,j,k; scanf("%d",&n); charid@@ [100][10]; int@@ old@@ [100]; for(i=0;i<n;i++){ scanf("%s",@@ id[i]); scanf("%d",&@@ old@@ [i]); } int@@ e; chars@@ [100][10]; for(j=1;j<@@ n;j++){ for(k=0;k<@@ n@@ -j@@ ;k++){ if(old@@ [k]@@ <@@ old@@ [k+1@@ ]@@ &&@@ old@@ [k+1@@ ]@@ >=60){ e=@@ old@@ [k+1]; old@@ [k+1]=@@ old@@ [k]; old@@ [k]=@@ e; strcpy(@@ s@@ [k],@@ id@@ [k+1@@ ]); strcpy(id@@ [k+1@@ ],@@ id@@ [k]); strcpy(id@@ [k],@@ s@@ [k]); } } } for(i=0;i<n;i++){ printf("%s\n",@@ id[i]); } return0; }  
c -1
h -1
0

voidmain() { inti,j,n,@@ c[@@ 1000][1000],@@ count=0,@@ mark@@ ; scanf("%d",&n); for(i=0;i<n;i++) { for(j=0;j<n;j++) scanf("%d",&@@ c@@ [i][j]); } for(i=0;i<n;i++) { mark@@ =0; for(j=0;j<n;j++) { if(c@@ [i][j]==0&&@@ c[i]@@ [j+1@@ ]==0) break; else { if(c@@ [i][j]==0) mark@@ ++; } if(c@@ [i][j]@@ &&@@ mark@@ %@@ 2) count++; } } printf("%d\n",@@ count); }  
c -1
h -1
intmain() { intn,a[@@ 1000][1000],@@ i,j,@@ m=0,@@ b[@@ 1000][@@ 2@@ ]; scanf("%d",&n); for(i=0;i<n;i++) for(j=0;j<n;j++) { scanf("%d",&a[i][j]); if(a[i][j]==0) { b[m@@ ][@@ 0]=@@ i; b[m@@ ][1@@ ]=@@ j; m++; } } printf("%d",(@@ b[@@ m-1][0]-@@ b[@@ 0][@@ 0]@@ -1)*(@@ b[@@ m-1@@ ][1@@ ]-@@ b[@@ 0][@@ 1@@ ]@@ -1)); return0; }  
c -1
h -1
1


intmain() { int@@ side_sum@@ (int*p@@ ); intk; int*p; cin>>k; p=@@ &@@ k; side_sum@@ (p); return0; } int@@ side_sum@@ (int*p@@ ) { intk,m,n,i,j,@@ l,@@ sum=0; inta[100][100]; k=@@ *p; for(i=0;i<k;i++) { sum=0; cin>>m>>n; for(j=0;j<m;j++) for(l=0;l<n;l++) { cin>>a[j]@@ [l]; if(j@@ ==0||j==@@ m-1) sum+=@@ a[j]@@ [l]; else if(l@@ ==0||@@ l@@ ==@@ n-1) sum+=@@ a[j]@@ [l]; } cout<<sum<<endl; } return0; }  
c -1
h -1
intmain() {@@ inti,j,@@ a[@@ 20000],@@ n; scanf("%d",&n); for(i=0;i<n;i++) scanf("%d",&a[i]); printf("%d",a[0]); for(i=1;i<n;i++) {@@ for(j=0;j<@@ i@@ ;) {@@ if(a[i]==@@ a[j])@@ j@@ =i+1; else@@ j++; if(j==@@ i)@@ printf("%d",@@ a[i]@@ );@@ }}}  
c -1
h -1
0

intmain(){ double@@ rate@@ ; int@@ x1,@@ x2,@@ y=0,@@ i,@@ flag=0; chara[500],b[500]; scanf("%lf%s%s",&@@ rate@@ ,@@ a,b); x1@@ =strlen(a); x2@@ =strlen(b); for(i=0;i<@@ x1@@ ;i++){ if(a[i]!='@@ A'&&a[i]!='@@ C'&&a[i]!='@@ T'&&a[i]!='@@ G'){ flag=1; break; } } for(i=0;i<@@ x1@@ ;i++){ if(@@ b[i]!='A'&&b[i]!='@@ C'&&b[i]!='@@ T'&&b[i]!='@@ G'){ flag=1; break; } } if(flag@@ ==0&&@@ x1@@ ==@@ x2@@ ){ for(i=0;i<@@ x1@@ ;i++){ if(a[i]==b[i]){ y++; } } if((@@ double)@@ y@@ /@@ (double)@@ x1@@ >@@ rate@@ ){ printf("yes"); }else{ printf("no"); } }else{ printf("error"); } return0; }  
c -1
h -1
intmain(){ charstr@@ [257],@@ substr@@ [257],@@ re@@ [257]; inti=0,j=0,@@ n=0,@@ m=0,@@ k=0; scanf("%s\n@@ %s@@ \n@@ %s@@ \n",@@ str,@@ substr@@ ,@@ re); n=strlen(@@ substr@@ ); for(i=0;@@ str@@ [i]!='\0';i++){ if(str[i]==@@ substr@@ [j]){ if(@@ memcmp@@ (@@ substr@@ ,@@ str@@ +@@ i,@@ n)@@ ==0){ m=i; k=1; break; } } } if(k@@ ==1){ for(i=m;i<@@ m+@@ n;i++){ str[i]=@@ re@@ [i-@@ m]; } } printf("%s",str); return0; }  
c -1
h -1
0

intmain() { inti,j,@@ num@@ [100],@@ n,@@ m; int@@ fj@@ (int,int); scanf("%d",&n); for(i=1;i<=n;i++) scanf("%d",&@@ num[i]); for(i=1;i<=n;i++) printf("%d\n",@@ fj@@ (2,@@ num[i]@@ )); return0; } int@@ fj@@ (int@@ k,int@@ n) { int@@ c,@@ i,@@ sum=1; if(n==@@ 2)@@ return(@@ sum); elseif(n==@@ 3)@@ return(@@ sum); else { c=@@ (int)sqrt(@@ n); for(i=k@@ ;i<=@@ c@@ ;i++) if(n@@ %i==0)@@ sum=sum+@@ fj@@ (i,@@ n@@ /i); return(@@ sum); } }  
c -1
h -1
intmain() { inty,m,@@ d; intt; scanf("%d%d%d",&y,&m,&d); if(y%@@ 400==0||(@@ y%@@ 4==0&&y%100!=0@@ )) { switch(m) { case1:@@ t@@ =0;@@ break; case2:@@ t=@@ 31;break; case3:@@ t=@@ 60@@ ;break; case4:@@ t=@@ 91@@ ;break; case5:@@ t=@@ 121@@ ;break; case6:@@ t=@@ 152@@ ;break; case7:@@ t=@@ 182@@ ;break; case8:@@ t=@@ 213@@ ;break; case9:@@ t=@@ 244@@ ;break; case10:@@ t=@@ 274@@ ;break; case11:@@ t=@@ 305@@ ;break; case12:@@ t=@@ 335@@ ; } } else { switch(m) { case1:@@ t@@ =0;@@ break; case2:@@ t=@@ 31;break; case3:@@ t=@@ 59@@ ;break; case4:@@ t=@@ 90@@ ;break; case5:@@ t=@@ 120@@ ;break; case6:@@ t=@@ 151@@ ;break; case7:@@ t=@@ 181@@ ;break; case8:@@ t=@@ 212@@ ;break; case9:@@ t=@@ 243@@ ;break; case10:@@ t=@@ 273@@ ;break; case11:@@ t=@@ 304@@ ;break; case12:@@ t=@@ 334@@ ; } } t+=@@ d; printf("%d",t); return0; }  
c -1
h -1
0

int@@ cmp@@ (inti,@@ chara[@@ ],@@ charb[@@ ]) { intk; for(k=0;@@ b[k@@ ]!='\0'@@ ;i++@@ ,k++) { if(a[i]!=@@ b[k@@ ]) break; } if(@@ b[k@@ ]==@@ '\0') return1; else return0; } main() { inti,n,@@ k; chars[256],@@ subs@@ [256],@@ re@@ [256]; gets(s); gets(@@ subs@@ ); gets(@@ re); for(i=0,@@ n@@ =0;n@@ ==0&&@@ s[i]@@ !='\0';i++) { if(s[i]==@@ subs@@ [0]) n=@@ cmp@@ (i,@@ s,@@ subs@@ ); } if(n==1) { for(i@@ =i@@ -1@@ ,k@@ =0;@@ re@@ [k]@@ !='\0'@@ ;i++@@ ,k++) { s[i]=@@ re@@ [k]; } } printf("%s\n",@@ s); }  
c -1
h -1
intmain(){ intn,i,k,@@ sum=0,@@ m,@@ l,@@ p,q; int@@ a=0,@@ b=0; intsz[@@ 1000][1000]; scanf("%d",&n); for(i=0;i<n;i++){ for(k=0;k<n;k++){ scanf("%d",&@@ sz[i]@@ [k]); } } for(i=1;i<@@ n-1;i++){ for(k=1;k<@@ n-1@@ ;k++){ if(sz[i]@@ [k]@@ ==0&&@@ a@@ ==0){ m=i; l=@@ k; a=1; } } } for(i=n-1;i>=0;i--){ for(k=@@ n-1@@ ;k>=0@@ ;k@@ --){ if(sz[i]@@ [k]@@ ==0&&@@ b@@ ==0){ p=i; q=@@ k; b=1; } } } sum=(@@ p@@ -m@@ -1)*(@@ q@@ -l@@ -1); printf("%d",sum); return0; }  
c -1
h -1
0

intmain() { int@@ w@@ =0,@@ g=0; doublen; char@@ v@@ [100],@@ c[100]; scanf("%lf",&n); scanf("%s",@@ v@@ ); scanf("%s",c); char@@ A@@ ,@@ T@@ ,@@ G@@ ,@@ C@@ ; if(strlen(@@ v@@ )!=strlen(@@ c@@ )) { printf("error"); } else { for(inti=0;i<=@@ strlen(@@ v@@ )@@ -1;i++) { if(((@@ v@@ [i]!='A')&&(@@ v@@ [i]!='G')@@ &&(@@ v@@ [i]!='C')&&(@@ v@@ [i]!='T')@@ )||((@@ c@@ [i]!='A')&&(@@ c@@ [i]!='G')@@ &&(@@ c@@ [i]!='C')&&(@@ c@@ [i]!='T')@@ )) {@@ g@@ =1; printf("error"); break; } elseif(@@ v@@ [i]==@@ c@@ [i]) { w@@ ++; } } double@@ l@@ =1.0*@@ w@@ /@@ strlen(@@ v@@ ); if((@@ l>@@ n@@ )&&(@@ g@@ ==0)@@ ){printf("yes");} elseif((@@ l@@ <=@@ n@@ )&&(@@ g@@ ==0)@@ ){@@ printf("no");} } int@@ u@@ ;@@ scanf("%d",&@@ u@@ ); return0; }  
c -1
h -1
intmain() { intn,i,j,@@ *@@ p=@@ NULL@@ ,@@ mianji@@ ; int@@ zhongliu@@ [1000][1000]; int@@ zuoshang@@ [2@@ ],@@ youxia@@ [2]; p=@@ zhongliu@@ [0]; cin>>n; for(i=0;i<n;i++) for(j=0;j<n;j++) { cin>>@@ *(p@@ +i@@ *@@ n@@ +j); } for(i=0;i<n;i++) for(j=0;j<n;j++) { if(@@ *(p@@ +i@@ *@@ n@@ +j)@@ ==0&&@@ *(p@@ +i@@ *@@ n@@ +j+1)@@ ==0&&@@ *(p+@@ (i@@ +1)@@ *@@ n@@ +j)@@ ==@@ 0 &&j@@ +1@@ <n@@ &&i@@ +1@@ <n) { zuoshang@@ [0]=@@ i; zuoshang@@ [1]=@@ j; } elseif(@@ *(p@@ +i@@ *@@ n@@ +j)@@ ==0&&@@ *(p@@ +i@@ *@@ n@@ +j@@ -1)@@ ==0&&@@ *(p+@@ (i@@ -1)*@@ n@@ +j)@@ ==@@ 0 &&j@@ -1@@ >0@@ &&i@@ -1@@ >0) { youxia@@ [0]=@@ i; youxia@@ [1]=@@ j; } } mianji@@ =(@@ youxia@@ [0]@@ -@@ zuoshang@@ [0]@@ -1)*(@@ youxia@@ [1]@@ -@@ zuoshang@@ [1]@@ -1); cout<<@@ mianji@@ <<endl; return0; }  
c -1
h -1
0

int@@ function@@ (inta,int@@ m) { intsum@@ =1,i; if(a@@ >@@ m) return0; else { for(i=a@@ ;i<@@ m;i++) { if(m@@ %i==0) sum=sum+@@ function@@ (i,@@ m@@ /i); else continue; } returnsum; } } voidmain() { intn,i,@@ m@@ [100]; scanf("%d",&n); for(i=0;i<=n-1;i++) { scanf("%d",&@@ m[i]); } for(i=0;i<=n-1;i++) { printf("%d\n",@@ function@@ (2,@@ m[i]@@ )); } }  
c -1
h -1
intmain() { intk,i,@@ m@@ [25@@ ][2@@ ],@@ max=0; scanf("%d\n",&@@ k); for(i=0;i<k;i++) scanf("%d",&@@ m[i]@@ [0]); void@@ deal@@ (int@@ ,int@@ x[@@ ][2@@ ]); deal@@ (@@ k,@@ m); for(i=0;i<k;i++) if(m@@ [i]@@ [1]@@ >max)max=@@ m[i]@@ [1]; printf("%d",max); return0; } void@@ deal@@ (int@@ k,@@ intm[@@ ][2@@ ]) { inti,j,@@ max; for(i=0;i<k;i++) { max=0; for(j=0;j<i;j++) if(m@@ [j]@@ [0]@@ >=@@ m[i]@@ [0]@@ &&m@@ [j]@@ [1]@@ >max)max=@@ m@@ [j]@@ [1]; m[i]@@ [1]=@@ max+1; } }  
c -1
h -1
0

intnum; int@@ fjys@@ (intn,@@ intm,@@ inti,@@ int@@ d@@ ,int@@ ji@@ [@@ 20@@ ]) { inta; for(a@@ =i;@@ a@@ <m;@@ a++) { if(n%@@ a@@ ==0) { ji@@ [d@@ ]=a; int@@ chenji@@ =1,@@ k; for(k=0;k<=@@ d@@ ;k++) chenji@@ =@@ chenji@@ *@@ ji@@ [k]; if(@@ chenji@@ ==@@ m) { num++; break; } else fjys@@ (n@@ /@@ a,@@ m,@@ a,@@ d@@ +1,@@ ji@@ ); } } returnnum; } intmain() { intm,n,@@ j,@@ result@@ =0,@@ ji@@ [@@ 20@@ ]={0}; cin>>m; for(j=1;j<=m;j++) { num=0; cin>>n; result=@@ fjys@@ (n,@@ n,@@ 2,@@ 0,@@ ji@@ ); cout<<@@ result@@ +1<<endl; } return0; }  
c -1
h -1
intmain() { intn,k,@@ a[@@ 1010@@ ],@@ s,@@ i,@@ u@@ =0; scanf("%d%d",&n,&k); for(i=0;i<=n-1;i++) { scanf("%d",&@@ s); if(s@@ <@@ k) { a[@@ u@@ ]=@@ s@@ ;@@ u@@ ++; } } for(i=@@ u@@ -1@@ ;i>=1;i--) { for(s=0;s@@ <=i@@ -1;@@ s++) { if(a[@@ s@@ ]==@@ k-@@ a[i]) { printf("yes@@ \n@@ ");@@ return0; } } } printf("no@@ \n@@ ");@@ return0; }  
c -1
h -1
0

intnumber@@ =0; int@@ l; voidsort@@ (intn) { inti; for(i=@@ l@@ ;n@@ /i@@ >=i@@ ;i++) { if(n%i==0) { l@@ =i; sort@@ (n@@ /i); if(n@@ /i@@ ==1) number@@ ++; } } number@@ ++; } intmain() { intn,m,@@ k; cin>>n; for(k=0;k<n;k++) { l=@@ 2; number@@ =0; cin>>m; sort(@@ m); cout<<@@ number@@ <<endl; } return0; }  
c -1
h -1
intmain() { int@@ side_sum@@ (int*p@@ ); intk; int*p; cin>>k; p=@@ &@@ k; side_sum@@ (p); return0; } int@@ side_sum@@ (int*p@@ ) { intk,m,n,i,j,@@ l,@@ sum=0; inta[100][100]; k=@@ *p; for(i=0;i<k;i++) { sum=0; cin>>m>>n; for(j=0;j<m;j++) for(l=0;l<n;l++) { cin>>a[j]@@ [l]; if(j@@ ==0||j==@@ m-1) sum+=@@ a[j]@@ [l]; else if(l@@ ==0||@@ l@@ ==@@ n-1) sum+=@@ a[j]@@ [l]; } cout<<sum<<endl; } return0; }  
c -1
h -1
0

intmain() { inti=0,j=0,@@ k=0,@@ s=0,@@ a,b,@@ c=0,@@ m=0; charstring@@ [257],@@ substring@@ [256],@@ replacement@@ [256]; gets(@@ string); gets(@@ substring); gets(@@ replacement); a=strlen(@@ string); b=strlen(@@ substring); for(i=0;i<a;i++){ k=0; if(string@@ [i]==@@ substring@@ [0]){ for(j=i;j<i+@@ b@@ ;j++){ if(string@@ [j]==@@ substring@@ [j-i@@ ])@@ k++; elsebreak; } } if(k==@@ b){ c=1; break; } m@@ =i+1; } for(i=0;i<a;i++){ if(i>=@@ m@@ &&i@@ <b@@ +m@@ &&@@ c@@ ==1){ printf("%c",@@ replacement@@ [i-@@ m@@ ]); } else{ printf("%c",@@ string@@ [i]); } } return0; }  
c -1
h -1
intmain() { int@@ board@@ [@@ 500@@ ][@@ 500],@@ n,i,j,@@ r1@@ ,@@ c1@@ ,@@ r2@@ ,@@ c2@@ ; int*p=@@ *@@ board@@ ; cin>>n; for(i=0;i<n;i++) for(j=0;j<n;j++) cin>>@@ *(p@@ +i@@ *@@ 500@@ +j); for(i=0;i<n;i++) for(j=0;j<n;j++) if(@@ *(p@@ +i@@ *@@ 500@@ +j)@@ ==0) { r1@@ =i; c1@@ =j; i=@@ 9999@@ ; break; } for(i=n-1;i>=0;i--) for(j=n-1;j>=0;j--) if(@@ *(p@@ +i@@ *@@ 500@@ +j)@@ ==0) { r2@@ =i; c2@@ =j; i=@@ -1; break; } cout<<(@@ r2@@ -@@ r1@@ -1)*(@@ c2@@ -@@ c1@@ -1)@@ <<endl; return0; }  
c -1
h -1
0

intmain(){ inti,@@ a=0,@@ j,@@ c,@@ b; doublen; char@@ sz1@@ [1000],@@ sz2@@ [1000]; scanf("%lf",&n); scanf("%s",@@ sz1@@ ); scanf("%s",@@ sz2@@ ); for(i=0;@@ sz1@@ [i]!='\0';i++){ c=i; } for(j=0;@@ sz2@@ [j]@@ !='\0';j++){ b=j; } if(c@@ !=@@ b){ printf("error"); return0; } else{ for(i=0;@@ sz1@@ [i]!='\0';i++){ if((@@ sz1@@ [i]!='A'&&@@ sz1@@ [i]!='C'&&@@ sz1@@ [i]!='G'&&@@ sz1@@ [i]!='T')@@ ||(@@ sz2@@ [i]!='C'&&@@ sz2@@ [i]!='A'&&@@ sz2@@ [i]!='G'&&@@ sz2@@ [i]!='T')@@ ){ printf("error");@@ return0; } } for(j=0;@@ sz1@@ [j]@@ !='\0';j++){ if(@@ sz1@@ [j]==@@ sz2@@ [j]@@ &&(@@ sz1@@ [j]=='@@ A'||@@ sz1@@ [j]=='@@ C'||@@ sz1@@ [j]=='@@ G'||@@ sz1@@ [j]=='@@ T')&&(@@ sz2@@ [j]=='@@ C'||@@ sz2@@ [j]=='@@ A'||@@ sz2@@ [j]=='@@ G'||@@ sz2@@ [j]=='@@ T')@@ ){ a++; } } } if(1.0*@@ a/@@ (@@ c@@ +1)@@ >n){ printf("yes"); } else{ printf("no"); } return0; }  
c -1
h -1
intmain() { intm@@ [100],@@ n@@ [100],@@ i,j,@@ a,@@ k,@@ sz@@ [100][100],@@ sum@@ [100]={0}; scanf("%d",&k); for(a=0;a@@ <k;@@ a++) { scanf("%d%d",&@@ m@@ [a]@@ ,&@@ n@@ [a@@ ]); for(i=0;i<m@@ [a]@@ ;i++) { for(j=0;j<n@@ [a]@@ ;j++) { scanf("%d",&sz[i][j]); } } if(m@@ [a@@ ]!=@@ 1@@ &&n@@ [a@@ ]!=@@ 1) { for(j=0;j<n@@ [a]@@ ;j++) { sum[@@ a@@ ]+=@@ sz[0]@@ [j]; sum[@@ a@@ ]+=@@ sz[m@@ [a]@@ -1][j]; } for(i=1;i<@@ m@@ [a]@@ -1;i++) { sum[@@ a@@ ]+=@@ sz[i]@@ [0]; sum[@@ a@@ ]+=@@ sz[i]@@ [n@@ [a]@@ -1]; } } else { for(i=0;i<m@@ [a]@@ ;i++) { for(j=0;j<n@@ [a]@@ ;j++) { sum[@@ a@@ ]+=@@ sz[i]@@ [j]; } } } } for(a=0;a@@ <k;@@ a++) printf("%d\n",@@ sum[@@ a@@ ]); return0; }  
c -1
h -1
0

intmain(){ intk,m,n,@@ a,b,@@ i; int@@ h,@@ s,@@ t,@@ p; intsz@@ [100][100],@@ result@@ [100]; scanf("%d",&k); for(i=0;i<k;i++){ scanf("%d%d",&n,&m); for(a=0;a@@ <n;@@ a++){ for(b=0;b@@ <m;@@ b++){ scanf("%d",&@@ sz[a@@ ][b@@ ]); } } h@@ =0,@@ s=0,@@ t=0,@@ p=0; for(b=0;b@@ <m;@@ b++){ h=@@ h@@ +@@ sz[0][@@ b@@ ]; if(n@@ >1@@ ){ s=s+@@ sz[@@ n-1@@ ][b@@ ]; } } for(a@@ =1;@@ a@@ <@@ n-1;@@ a++){ t=t+@@ sz[a@@ ][0]; if(m@@ >1@@ ){ p=p+@@ sz[a@@ ][@@ m-1@@ ]; } } result@@ [i]=@@ h@@ +@@ s@@ +@@ t@@ +@@ p; } for(i=0;i<k;i++){ printf("%d\n",@@ result@@ [i]); } return0; }  
c -1
h -1
void@@ bubble@@ (inta[],int@@ l) { inti,j,temp; for(j=1;j<@@ l@@ ;j++) { for(i=0;i<l@@ -j;i++) { if(a[i]>a[i+1]) { temp=a[i]; a[i]=a[i+1]; a[i+1]=@@ temp; } } } } intmain() { intm,n,i,j,@@ a[@@ 10000@@ ],b[@@ 10000]; scanf("%d%d",&m,&n); for(i=0;i<m;i++) { scanf("%d",&a[i]); } for(j=0;j<n;j++) { scanf("%d",&@@ b[j]); } bubble@@ (a,m); bubble@@ (b,n); for(i=0;i<m;i++) { printf("%d",a[i]); } for(j=0;j<n;j++) { printf("%d",@@ b[j]); if(j<@@ n-1) printf(""); } return0; }  
c -1
h -1
0

voidinput@@ (inta[@@ ][100@@ ],int@@ m,intn) { for(inti=0;i<m;i++) for(intj=0;j<n;j++) cin>>@@ *(*(a@@ +j)@@ +i); } intmain() { int@@ square@@ [100][100]; intk,@@ m,n; cin>>k; for(inti=1;i<=@@ k;i++) { cin>>m>>n; input@@ (@@ square@@ ,@@ m,n); intsum=0; for(intj=0;j<m;j++) sum=sum+@@ *(@@ *@@ square@@ +j)+@@ *(*(@@ square@@ +@@ n-1)@@ +j); for(intj=1;j<@@ n-1;j++) sum=sum+@@ *@@ *(@@ square@@ +j)+@@ *(*(@@ square@@ +j)+@@ m-1@@ ); if(m==1) sum=sum@@ /2; cout<<sum<<endl; } return0; }  
c -1
h -1
main() { intc[@@ 16],@@ n,i,j,@@ m,@@ num; n=0; m=1; do { i=0; n=0; do { scanf("%d",&@@ c[i]); i++; }while(@@ c@@ [i-1]@@ !=0&&@@ c@@ [0]@@ !=@@ -1@@ &&i@@ <@@ 16@@ ); num@@ =i-1; if(c@@ [0]@@ !=-1) { for(i=0;i<num;i++) { for(j=i+1;j<@@ num@@ +1@@ ;j++) { if(c@@ [i]@@ >0@@ &&@@ c[j]@@ >0) if(c@@ [i]==@@ c[j]@@ *2@@ ||@@ c@@ [j]==@@ c[i]@@ *2@@ )@@ n++; } } printf("%d\n",n); } else@@ m=0; }while(@@ m@@ ==1@@ ); return(0); }  
c -1
h -1
0

intmain() { inti,j,@@ a[@@ 17@@ ],@@ t,@@ sum; do{ t=@@ -1;@@ sum=0; for(i=1;i<=@@ 16@@ ;i++) {@@ cin>>a[i]; t++; if(a[i]@@ ==0||@@ a[i]@@ ==-1) break; } for(i=1;i<=@@ t;i++) for(j=1;j<=@@ t;j++) { if(a[j]==@@ a[i]@@ *2) sum++; } if(@@ a[1]@@ !=-1) cout<<sum<<endl; } while(@@ a[1]@@ !=-1); return0; }  
c -1
h -1
intmain() { intn,@@ mian@@ [@@ 105@@ ][@@ 105@@ ]; inti,j,@@ i1@@ ,@@ j1@@ ,@@ i2@@ ,@@ j2@@ ; cin>>n; for(i=0;i<n;i++) { for(j=0;j<n;j++) { cin>>@@ mian@@ [i][j]; } } for(i=0;i<n;i++) { for(j=0;j<n;j++) { if(@@ mian@@ [i][j]==0&&@@ mian@@ [i+1][j]@@ ==0&&@@ mian@@ [i]@@ [j+1@@ ]==0) { i1@@ =i; j1@@ =j; } elseif(@@ mian@@ [i][j]==0&&@@ mian@@ [i-1][j]@@ ==0&&@@ mian@@ [i]@@ [j-1]@@ ==0) { i2@@ =i; j2@@ =j; } } } cout<<(@@ i2@@ -@@ i1@@ -1)*(@@ j2@@ -@@ j1@@ -1); return0; }  
c -1
h -1
0

intmain(){ introw,col,@@ i,j,@@ temp_i@@ ,@@ a[100][100]; scanf("%d%d",&@@ row,@@ &@@ col); for(i=0;i<row;i++) for(j=0;j<col;j++) scanf("%d",&a[i][j]); for(j=0;j<col;j++){ for(i=0;i<=@@ j@@ &&i@@ <@@ row;i++) printf("%d\n",a[i]@@ [j-i@@ ]); } for(i=1;i<@@ row;i++){ temp_i@@ =i; for(j=col-1@@ ;j>=0@@ &&@@ temp_i@@ <row@@ ;j--){ printf("%d\n",a[@@ temp_i@@ ][j]); temp_i@@ ++; } } return0; }  
c -1
h -1
intmain() { int@@ year@@ [2@@ ]={@@ 365@@ ,@@ 366@@ }; int@@ month@@ [2][@@ 12]={31,@@ 28,31,30,31,30,31,31,30,31,30,31@@ ,31,@@ 29,31,30,31,30,31,31,30,31,30,31}; inty,m,@@ d; cin>>y>>m>>d; int@@ type@@ ; if((y%@@ 4==0&&y%100!=0@@ )||@@ y%@@ 400@@ ==0){ type@@ =1; } else{ type@@ =0; } inti; intsum=0; for(i=0;i<m@@ -1;i++){ sum+=@@ month@@ [@@ type@@ ]@@ [i]; } sum+=@@ d; cout<<sum<<endl; return0; }  
c -1
h -1
0

intmain() { chars1@@ [500],@@ s2[@@ 20],@@ s3@@ [20]; inti,j,@@ len1,len2,@@ len3@@ ,@@ count,@@ c=0; gets(@@ s1); gets(@@ s2); gets(@@ s3); len1=strlen(@@ s1); len2=strlen(@@ s2); len3@@ =strlen(@@ s3); for(i=0;i<len1;i++) { count=0; if(s1[i]==s2@@ [0]) for(j=0;j<len2@@ ;j++) if(s1@@ [i+j]==@@ s2@@ [j]) count++; if(count==@@ len2) break; } for(j=0;j<i;j++) printf("%c",@@ s1@@ [j]); if(i!=@@ len1@@ ) printf("%s",@@ s3); for(j=i@@ +len2@@ ;j<@@ len1@@ ;j++) printf("%c",@@ s1@@ [j]); return0; }  
c -1
h -1
structstudent { intnumber; int@@ ch; int@@ ma; intsum; int@@ key@@ ; }stu[100000]; voidmain() { intn,i,@@ max=0,@@ l=0; scanf("%d",&n); for(i=0;i<n;i++) { scanf("%d%d%d",&stu[i].@@ number@@ ,&stu[i].@@ ch@@ ,&stu[i].@@ ma@@ ); stu[i].sum=stu[i].@@ ch@@ +stu[i].@@ ma; stu[i].@@ key@@ =0; } for(i=0;i<n;i++) if(max<@@ stu[i].@@ sum@@ &&stu[i].@@ key@@ ==0) { max=@@ stu[i].@@ sum; l@@ =i; } printf("%d%d\n",@@ l@@ +1,@@ max); max=0; stu[@@ l@@ ].@@ key@@ =1; l=0; for(i=0;i<n;i++) if(max<@@ stu[i].@@ sum@@ &&stu[i].@@ key@@ ==0) { max=@@ stu[i].@@ sum; l@@ =i; } printf("%d%d\n",@@ l@@ +1,@@ max); max=0; stu[@@ l@@ ].@@ key@@ =1; l=0; for(i=0;i<n;i++) if(max<@@ stu[i].@@ sum@@ &&stu[i].@@ key@@ ==0) { max=@@ stu[i].@@ sum; l@@ =i; } printf("%d%d\n",@@ l@@ +1,@@ max); max=0; stu[@@ l@@ ].@@ key@@ =1; l=0; }  
c -1
h -1
0

intmain() { intn,@@ num[@@ 20001@@ ]={0},@@ number,@@ i,j; cin>>n; for(i=1;i<=n;i++) { cin>>@@ number; num[i]=@@ number; } for(j=1;j<=n;j++) for(i=j@@ +1;i<=@@ n;i++) if(num@@ [j]==@@ num[i]@@ )@@ num@@ [i]=0; for(i=1;i<=n;i++) if(num@@ [i]@@ !=0@@ ){@@ cout<<@@ num[i]@@ ;break;} for(j=i+1;j<=n;j++) if(num@@ [j]@@ !=0)@@ cout<<""<<@@ num@@ [j]; return0; }  
c -1
h -1
structstudent { intnum; float@@ yuwen; float@@ shuxue; float@@ zongfen; }stu[@@ student_num@@ ],*@@ p@@ [3]; voidmain() { voidpaixu@@ (@@ structstudent*@@ a,int@@ n); inti,n; scanf("%d",&n); for(i=0;i<n;i++) { scanf("%d@@ %@@ f@@ %@@ f",&@@ stu[i].@@ num,&stu[i].@@ yuwen@@ ,&stu[i].@@ shuxue); stu[i].@@ zongfen@@ =stu[i].@@ yuwen+stu[i].@@ shuxue; } paixu@@ (stu@@ ,n); for(i=0;i<@@ 3@@ ;i++)@@ printf("%d@@ %@@ .@@ 0f@@ \n",@@ p[i]@@ ->num,@@ p[i]@@ ->@@ zongfen@@ ); } voidpaixu@@ (@@ structstudent*@@ a,int@@ n) { inti,j; float@@ x@@ [3]; for(i=0;i<3;i++) { for(j=1@@ ,@@ p[i]=@@ a@@ ;j<@@ n@@ ;j++)@@ if(p@@ [i]@@ ->@@ zongfen@@ <@@ (a@@ +j)@@ ->@@ zongfen@@ )@@ p[i]=@@ a@@ +j@@ ; x@@ [i]=@@ p[i]@@ ->@@ zongfen; p[i]@@ ->@@ zongfen@@ =0; } for(i=0;i<@@ 3@@ ;i++)@@ p[i]@@ ->@@ zongfen@@ =@@ x[i]; }  
c -1
h -1
0

intmain() { intk,@@ row,@@ q,@@ col,@@ i,j@@ ,*@@ a,*@@ num; scanf("%d",&k); num=@@ (int*)malloc(@@ k@@ *sizeof(int)); for(q=0;q@@ <k;@@ q++) { intsum=0; scanf("%d%d",&row,&col); a=@@ (int*)malloc(@@ row@@ *col@@ *sizeof(int)); for(i=0;i<row;i++) for(j=0;j<col;j++) { scanf("%d",a@@ +i@@ *col@@ +j); if(i@@ ==0||@@ j@@ ==0||i==@@ row-1@@ ||j==@@ col@@ -1)@@ sum=sum+*(@@ a@@ +i@@ *col@@ +j); } *(@@ num@@ +@@ q@@ )@@ =@@ sum; free(@@ a); } for(q=0;q@@ <k;@@ q++) printf("%d\n",*(@@ num@@ +@@ q@@ )); free(@@ num); }  
c -1
h -1
structstudent { int@@ xuehao@@ ; intyuwen; intshuxue; }stu[100000]; intmain() { int@@ sum[@@ 100000]; long@@ i,j,@@ n,@@ t; scanf("%d",&n); for(i=0;i<n;i++) { scanf("%d%d%d",&stu[i].@@ xuehao@@ ,&stu[i].@@ yuwen@@ ,&stu[i].@@ shuxue); sum[i]=@@ stu[i].@@ yuwen+stu[i].@@ shuxue; } for(i=0;i<3;i++) { t=0; for(j=0;j<n-1;j++) { if(sum@@ [j+1@@ ]>@@ sum[@@ t@@ ]) t@@ =j+1; } printf("%d%d\n",stu[@@ t@@ ].@@ xuehao@@ ,@@ sum[@@ t@@ ]); sum[@@ t@@ ]=0; } getchar(); getchar(); getchar(); }  
c -1
h -1
0

int@@ s=0,@@ p=1; void@@ fenjie@@ (inta,intb) { inti; if(a==1) s++; for(i=b@@ ;i<=a;i++) if(a@@ %i==0)@@ fenjie@@ (a/i,i); return; } intmain() { intn,i,j,@@ a[100]; scanf("%d",&n); for(i=0;i<n;i++) { scanf("%d",&a[i]); for(j=2@@ ;j@@ *@@ j@@ <=@@ a[i]@@ ;j++) { if(a[i]@@ %j==0) { s=0; fenjie@@ (@@ a[i]@@ /j,j); p=p+@@ s; } } printf("%d\n",@@ p); p=1; } return0; }  
c -1
h -1
intmain() { struct@@ date { chara[@@ 10]; intnum; struct@@ date@@ *next; }; struct@@ date@@ *@@ p1,*p2,*head; intn,i,@@ temp@@ ,j,@@ compare@@ ; char@@ tem@@ [10]; scanf("%d",&n); head@@ =p1@@ =p2@@ =(struct@@ date@@ *)malloc(len); scanf("%s%d",@@ head->@@ a,&@@ head->@@ num); head@@ ->next=NULL; head=p1; for(i=2;i<=n;i++) { p2@@ =(struct@@ date@@ *)malloc(len); scanf("%s%d",@@ p2->@@ a,&@@ p2->@@ num); p2->next=NULL; p1->next@@ =p2; p1=p2@@ ; } for(i=n-1@@ ;i>=1;i--) { p1=@@ head;@@ p2=p1->next; for(j=1;j<=@@ i;j++) { compare@@ =@@ strcmp(@@ p1->@@ a,@@ p2->@@ a); if(@@ p1->num@@ <60&&@@ p2->@@ num@@ >=60) { strcpy(@@ tem@@ ,@@ p1->@@ a); strcpy(@@ p1->@@ a,@@ p2->@@ a); strcpy(@@ p2->@@ a,@@ tem@@ ); temp=@@ p2->@@ num; p2->@@ num=@@ p1->@@ num; p1->@@ num=@@ temp; } if(@@ p1->num@@ >=60&&@@ p2->@@ num@@ >=60&&@@ p1->num@@ <@@ p2->@@ num) { strcpy(@@ tem@@ ,@@ p1->@@ a); strcpy(@@ p1->@@ a,@@ p2->@@ a); strcpy(@@ p2->@@ a,@@ tem@@ ); temp=@@ p2->@@ num; p2->@@ num=@@ p1->@@ num; p1->@@ num=@@ temp; } p1=p2@@ ; p2=p1->next; } } p1=@@ p2=head; for(i=1;i<=n;i++) { printf("%s\n",@@ p2->@@ a); p1=p2@@ ; p2=p1->next; } return0; }  
c -1
h -1
0

structbook { intnum; char@@ aut@@ [26]; }; intmain() { inti,j,k,@@ m,@@ x,@@ a=0; intcount@@ [26]={0}; char@@ y; structbook@@ all@@ [1000]; scanf("%d",&m); for(i=0;i<m;i++){ scanf("%d%s",&@@ all@@ [i].num,&@@ all@@ [i].@@ aut@@ ); } for(i=0;i<m;i++){ for(j=0;j<26@@ ;j++){ if(@@ all@@ [i].@@ aut@@ [j]>=@@ '@@ A'&&@@ all@@ [i].@@ aut@@ [j]<=@@ '@@ Z@@ '){ x=@@ (int)@@ (@@ all@@ [i].@@ aut@@ [j]@@ -'A'@@ ); count[@@ x@@ ]++; } } } for(i=0;i<26;i++){ if(count@@ [i]>@@ a){ a=@@ count@@ [i]; k=i; } } y=@@ k@@ +'A'@@ ; printf("%c\n%d\n",@@ y,@@ a); for(i=0;i<m;i++){ for(j=0;j<26@@ ;j++){ if(@@ all@@ [i].@@ aut@@ [j]==@@ y){ printf("%d\n",@@ all@@ [i].num); break; } } } return0; }  
c -1
h -1
main() { intyear,@@ mon@@ ,@@ day,@@ f,@@ i,@@ sum=0; inta[@@ 12]={31,28,31,30,31,30,31,31,30,31,30,31}; scanf("%d%d%d",&year,&@@ mon@@ ,&@@ day); if(year%@@ 4==0&&@@ year%@@ 100!=0) f=1; elseif(@@ year%400==0) f=1; else f=0; for(i=1;i<@@ mon@@ ;i++) { sum=sum+@@ a[i@@ -1]; } sum=sum+day; if(f@@ ==1&&@@ mon@@ >2) sum=sum+1; printf("%d",sum); getchar(); getchar(); }  
c -1
h -1
0

intmain() { intcount@@ ,@@ m,n,@@ array@@ [100][100],@@ sum@@ [100]={0},@@ i,j,@@ p; scanf("%d",&@@ count); for(i=0;i<@@ count@@ ;i++) { scanf("%d%d",&m,&n); for(j=0;j<m;j++) for(p=0;p@@ <n;p++) scanf("%d",&array@@ [j]@@ [p@@ ]); for(j=0;j<n;j++) { sum[i]=sum[i]+@@ array@@ [0]@@ [j]; if(m@@ >1) sum[i]=sum[i]+@@ array@@ [m@@ -1][j]; } for(j=1;j<@@ m-1;j++) { sum[i]=sum[i]+@@ array@@ [j]@@ [0]; sum[i]=sum[i]+@@ array@@ [j]@@ [n-1]; } } for(i=0;i<@@ count@@ ;i++) printf("%d\n",sum@@ [i]); return0; }  
c -1
h -1
intmain() { inty,m,d,@@ x=0,@@ i; inta[@@ 12]={31,29,31,30,31,30,31,31,30,31,30,31}; intb[@@ 12]={31,28,31,30,31,30,31,31,30,31,30,31}; scanf("%d",&@@ y); scanf("%d",&m); scanf("%d",&@@ d); if((y%@@ 400==0)||(@@ y%100!=0@@ &&@@ y%@@ 4@@ ==0)) for(i=0;i<m-1;i++) x=x+@@ a[i]; else for(i=0;i<m-1;i++) x=x+@@ b[i]; x=x@@ +d; printf("%d",x); }  
c -1
h -1
0

voidmain() { structbook { intnum; char@@ wri@@ [26]; }@@ *@@ s; intn,i,j,@@ a[100],@@ t; charc; s@@ =(struct@@ book@@ *)malloc(@@ n*@@ sizeof(struct@@ book)); for(i=0;i<100;i++) a[i]=0; scanf("%d",&n); for(i=0;i<n;i++) scanf("%d%s",&@@ (*(@@ s@@ +i)@@ ).@@ num,@@ (*(@@ s@@ +i)@@ ).@@ wri@@ ); for(i=0;i<n;i++) for(j=0;@@ (*(@@ s@@ +i)@@ ).@@ wri@@ [j]!='\0';j++) { for(c@@ ='A'@@ ;c@@ <=@@ 'Z'@@ ;c@@ ++) if(s@@ [i].@@ wri@@ [j]==@@ c)@@ a[@@ s[i].@@ wri@@ [j]@@ ]++; } for(i=0;i<100;i++) if(a[0]@@ <@@ a[i]@@ ){@@ a[0]=@@ a[i]@@ ;t@@ =i;} printf("%c\n",@@ t); printf("%d\n",@@ a[t@@ ]); for(i=0;i<n;i++) for(j=0;@@ (*(@@ s@@ +i)@@ ).@@ wri@@ [j]!='\0';j++) {@@ if(s@@ [i].@@ wri@@ [j]==@@ t)@@ printf("%d\n",@@ s[i].@@ num@@ );} }  
c -1
h -1
intmain() { chars@@ [100][10]; intn,@@ z@@ [100]; scanf("%d",&n); for(inti=0;i<n;i++) { scanf("%s%d",@@ s[i]@@ ,&@@ z@@ [i]); } for(intj=@@ 120@@ ;j@@ >=60@@ ;j--) { for(intt@@ =0;t@@ <n;@@ t++) { if(z@@ [t@@ ]==@@ j) { printf("%s\n",@@ s[@@ t@@ ]); z@@ [t@@ ]=0; } } } for(intm=0;m@@ <n;m++) { if(z@@ [m]@@ !=0) printf("%s\n",@@ s[m@@ ]); } return0; }  
c -1
h -1
0

intmain() { doublen,@@ c; inta,@@ i,@@ d@@ =1,@@ b=0; char@@ sz[@@ 1000@@ ]={'\0'},@@ u@@ [@@ 1000@@ ]={'\0'}; scanf("%lf",&n); scanf("\n@@ "); gets(@@ sz@@ ); gets(@@ u@@ ); a=strlen(@@ sz@@ ); for(i=0;i<a;i++){ if(sz@@ [i]!='A'&&@@ sz@@ [i]!='G'&&@@ sz@@ [i]!='T'&&@@ sz@@ [i]!='@@ C'){ printf("error"); d=0; break; } elseif(@@ u@@ [i]!='A'&&@@ u@@ [i]!='G'&&@@ u@@ [i]!='T'&&@@ u@@ [i]!='@@ C'){ printf("error"); d=0; break; } elseif(@@ sz@@ [i]==@@ u@@ [i]){ b++; } } c=@@ b@@ *1.0/@@ a; if(d@@ ==1){ if(c@@ >n){ printf("yes"); } else{ printf("no"); } } return0; }  
c -1
h -1
intmain() { chars1@@ [256@@ ]={'\0'},@@ s2@@ [256@@ ]={'\0'},@@ s3@@ [256@@ ]={'\0'},@@ t@@ [256@@ ]={'\0'}; inti,j,@@ k=0,@@ s,@@ l1,l2,@@ l3@@ ; scanf("%s",@@ s1); scanf("%s",@@ s2); scanf("%s",@@ s3); l1=strlen(@@ s1); l2=strlen(@@ s2); l3@@ =strlen(@@ s3); for(i=0;i<l1@@ ;) { for(j=0;j<@@ l2@@ ;j++) { if(i+j@@ >=@@ l1@@ ||@@ s1@@ [i+j]!=@@ s2@@ [j]){ break; } } if(j==@@ l2@@ ) { for(s=0;s@@ <@@ l3@@ ;s++) { t@@ [k]=@@ s3@@ [s@@ ]; k++; } i@@ =i+@@ l2@@ ; break; } else { t@@ [k]=@@ s1@@ [i]; i++; k++; } } for(@@ ;i<@@ l1@@ ;i++) { t@@ [k]=@@ s1@@ [i]; k++; } t@@ [k]=@@ '\0'@@ ; printf("%s",@@ t); return0; }  
c -1
h -1
0

intmain(){ intn,k,i,@@ s[@@ 1000],@@ z@@ [1000],@@ j,@@ g=0; scanf("%d%d",&n,&k); for(i=0;i<n;i++){ scanf("%d",&s[i]); } for(i=0;i<n;i++){ z@@ [i]=@@ s[i]; } for(i=0;i<n;i++){ for(j=0;j<n;j++){ if(s@@ [i]!=@@ z@@ [j]&&@@ s[i]@@ +@@ z@@ [j]==k){ g@@ +=1; } } } if(g@@ >0){ printf("yes"); } else{ printf("no"); } return0; }  
c -1
h -1
intmain() { inta[@@ 20@@ ]={0}; while(1) { cin>>a[0]; if(a[0]@@ !=-1) { inti,k,@@ m,@@ num=0; for(i=1;;i++) { cin>>a[i]; if(a[i]==0)break; } for(k=0;k<=@@ i@@ -2@@ ;k++) { for(m=@@ k@@ +1@@ ;m@@ <=i@@ -1@@ ;m++) { if((@@ a[m@@ ]==@@ (@@ 2*@@ a[k]@@ )@@ )||(@@ a[k]==@@ (@@ a[m]@@ *2@@ )@@ )) num++; } } cout<<num<<endl; } else break; } return0; }  
c -1
h -1
0

intmain(){ chara[256],b[256],c[256]; int@@ q,@@ w,@@ e,@@ i,k,@@ j; scanf("%s",a); scanf("%s",b); scanf("%s",c); q@@ =strlen(a); w@@ =strlen(b); e@@ =strlen(c); for(i=0;i<@@ q@@ ;i++){ j=0; for(k@@ =i;@@ (k@@ <@@ i+@@ w@@ )&&(@@ k@@ <@@ q@@ )@@ ;k++){ if(a[k]@@ !=@@ b[k@@ -i@@ ]){@@ continue;} if(a[k@@ ]==@@ b[k@@ -i@@ ]){@@ j@@ ++;} if(j==@@ w@@ ){@@ for(k@@ =i;@@ (k@@ <@@ i+@@ w@@ )&&(@@ k@@ <@@ q@@ )@@ ;k++){ a[k]=@@ c@@ [k-i@@ ];@@ }@@ break;} } if(j==@@ w@@ ){ break;} } printf("%s",a); return0; }  
c -1
h -1
intmain(){ inti,j,@@ m,@@ a[@@ 16]; while(1) {int@@ count=0; for(i=0;i<16;i++) {@@ cin>>a[i]; if(a[i]==@@ -1)break; if(a[i]@@ ==0)@@ break;} if(a[i]==@@ -1)break; for(j=0;j<i;j++) for(m@@ =j+1@@ ;m@@ <i@@ ;m++) if(a[j]==2*@@ a[m@@ ])@@ count++; for(j=0;j<i;j++) for(m@@ =j+1@@ ;m@@ <i@@ ;m++) if(@@ 2*@@ a[j]==@@ a[m@@ ])@@ count++; cout<<count@@ <<endl;} }  
c -1
h -1
0

int@@ num1@@ [1000],@@ num2@@ [1000],@@ num[@@ 2000@@ ],@@ n1,n2; void@@ dr@@ () { cin>>@@ n1@@ >>@@ n2; inti; for(i=0;i<n1;i++) cin>>@@ num1@@ [i]; for(i=0;i<n2;i++) cin>>@@ num2@@ [i]; } int@@ px@@ () { inti,j,@@ tem; for(i=0;i<n1;i++) { for(j=i+1;j<@@ n1@@ ;j++) { if(@@ num1@@ [j]<@@ num1@@ [i]) { tem@@ =@@ num1@@ [i]; num1@@ [i]=@@ num1@@ [j]; num1@@ [j]=@@ tem; } } } for(i=0;i<n2;i++) { for(j=i+1;j<@@ n2@@ ;j++) { if(@@ num2@@ [j]<@@ num2@@ [i]) { tem@@ =@@ num2@@ [i]; num2@@ [i]=@@ num2@@ [j]; num2@@ [j]=@@ tem; } } } } int@@ gb@@ () { inti; for(i=0;i<n1;i++) num[i]=@@ num1@@ [i]; for(i=@@ n1@@ ;i<@@ n1+@@ n2;i++) num[i]=@@ num2@@ [i-@@ n1@@ ]; } int@@ dy@@ () { cout<<@@ num[@@ 0]; inti; for(i=1;i<@@ n1+@@ n2;i++) cout<<''<<@@ num[i]; } intmain() { dr@@ (); px@@ (); gb@@ (); dy@@ (); }  
c -1
h -1
void@@ getnum@@ (inta[],intb[@@ ]); voidsort@@ (inta[],int@@ len); voidcombine@@ (inta[],intb[],int@@ len1@@ ,int@@ len2@@ ); int@@ len1,len2@@ ; intmain() { inta[@@ 1000@@ ]={0},b[@@ 1000]={0}; getnum@@ (a,b); sort@@ (a,@@ len1@@ ); sort@@ (b,@@ len2@@ ); combine@@ (a,b,@@ len1,len2@@ ); return0; } void@@ getnum@@ (inta[],intb[]) { cin>>@@ len1@@ >>@@ len2@@ ; for(inti=0;i<@@ len1@@ ;i++) cin>>a[i]; for(intj=0;j<@@ len2@@ ;j++) cin>>@@ b[j]; return; } voidsort@@ (inta[],int@@ len@@ ) { int@@ temp=0; for(inti=0;i<@@ len@@ -1;i++) { for(intj=0;j<@@ len@@ -i-1;j++) { if(a[j]>a[j+1]) { temp=a[j]; a[j]=a[j+1]; a[j+1]=temp; } } } return; } voidcombine@@ (inta[],intb[],int@@ len1@@ ,int@@ len2) { int@@ pin@@ =0; for(inti=@@ len1@@ ;i<@@ len1@@ +len2@@ ;i++) { a[i]=b[i-@@ len1@@ ]; } for(intj=0;j<@@ len1@@ +len2@@ ;j++) { if(@@ pin@@ ==0) { cout<<@@ a[j]; pin@@ =1; } else cout<<""<<@@ a[j]; } return; }  
c -1
h -1
1


structbook { intnum; char@@ w@@ [100]; }@@ book@@ [100]; voidmain() { inti,j,k,l,@@ m,n,@@ p,@@ b[@@ 26]={0}; scanf("%d\n",&n); for(i=0;i<n;i++) { scanf("%d%s",&book[i].num,@@ book[i].@@ w); } for(i=0;i<n;i++) { for(j=0;@@ book[i].@@ w@@ [j]!='\0';j++) { if(book[i].@@ w[j]=='@@ A')@@ b[0]@@ ++; elseif(book[i].@@ w[j]=='@@ B@@ ')@@ b[1@@ ]++; elseif(book[i].@@ w[j]=='@@ C')@@ b[2@@ ]++; elseif(book[i].@@ w[j]=='@@ D@@ ')@@ b[@@ 3@@ ]++; elseif(book[i].@@ w[j]=='@@ E@@ ')@@ b[@@ 4@@ ]++; elseif(book[i].@@ w[j]=='@@ F@@ ')@@ b[@@ 5@@ ]++; elseif(book[i].@@ w[j]=='@@ G')@@ b[@@ 6@@ ]++; elseif(book[i].@@ w[j]=='@@ H@@ ')@@ b[@@ 7@@ ]++; elseif(book[i].@@ w[j]=='@@ I@@ ')@@ b[@@ 8@@ ]++; elseif(book[i].@@ w[j]=='@@ J@@ ')@@ b[@@ 9@@ ]++; elseif(book[i].@@ w[j]=='@@ K@@ ')@@ b[@@ 10@@ ]++; elseif(book[i].@@ w[j]=='@@ L@@ ')@@ b[@@ 11@@ ]++; elseif(book[i].@@ w[j]=='@@ M@@ ')@@ b[@@ 12@@ ]++; elseif(book[i].@@ w[j]=='@@ N@@ ')@@ b[@@ 13@@ ]++; elseif(book[i].@@ w[j]=='@@ O@@ ')@@ b[@@ 14@@ ]++; elseif(book[i].@@ w[j]=='@@ P@@ ')@@ b[@@ 15@@ ]++; elseif(book[i].@@ w[j]=='@@ Q@@ ')@@ b[@@ 16@@ ]++; elseif(book[i].@@ w[j]=='@@ R@@ ')@@ b[@@ 17@@ ]++; elseif(book[i].@@ w[j]=='@@ S@@ ')@@ b[@@ 18@@ ]++; elseif(book[i].@@ w[j]=='@@ T')@@ b[@@ 19@@ ]++; elseif(book[i].@@ w[j]=='@@ U@@ ')@@ b[@@ 20@@ ]++; elseif(book[i].@@ w[j]=='@@ V@@ ')@@ b[@@ 21@@ ]++; elseif(book[i].@@ w[j]=='@@ W@@ ')@@ b[@@ 22@@ ]++; elseif(book[i].@@ w[j]=='@@ X@@ ')@@ b[@@ 23@@ ]++; elseif(book[i].@@ w[j]=='@@ Y@@ ')@@ b[@@ 24@@ ]++; elseif(book[i].@@ w[j]=='@@ Z@@ ')@@ b[@@ 25@@ ]++; } } for(i=0;i<=25;i++) { for(j=0;j<26;j++) { if(b[i]@@ <@@ b[j]) break; } if(j==@@ 26@@ ) { printf("%c\n%d\n",@@ 65@@ +@@ i,@@ b[i]); break; } } for(j=0;j<n;j++) { for(l=0;@@ book[j].@@ w@@ [l@@ ]!='\0'@@ ;l++) { if(@@ book[j].@@ w@@ [l@@ ]==@@ 65@@ +i@@ ) { printf("%d\n",@@ book[j].@@ num); break; } } } }  
c -1
h -1
intmain() { intn,@@ num[@@ 90@@ ]={0},@@ a[@@ 20001@@ ]={0},@@ i; cin>>n; cin>>@@ a[1]; num[@@ a[1]@@ -@@ 10@@ ]++; cout<<@@ a[1]; for(i=2;i<=n;i++) { cin>>a[i]; num[@@ a[i]@@ -@@ 10@@ ]++; if(@@ num[@@ a[i]@@ -@@ 10@@ ]@@ ==1)@@ cout<<""<<a[i]; } return0; }  
c -1
h -1
0

voidmain() { intage@@ [100],@@ i,j,k,@@ p=0,@@ n; chara[100@@ ][10]; scanf("%d",&n); for(i=0;i<n;i++) { scanf("%s%d",&@@ a[i],&@@ age[i]); if(age[i]@@ >=60@@ )@@ p++; } for(j=1;j<=@@ p@@ ;j++) { k=0; for(i=0;i<n;i++) { if(age@@ [i]>@@ age@@ [k]) k=i; } printf("%s\n",@@ a[k]); age@@ [k]@@ =0; } for(i=0;i<n;i++) { if(age[i]@@ !=0) { printf("%s\n",@@ a[i]); } } }  
c -1
h -1
intmain() { int@@ length@@ [@@ 500@@ ]={0},@@ a[@@ 500]; int@@ temp=0; intn; cin>>n; inti=0,j=0; for(i=1;i<=n;i++) cin>>a[i]; length@@ [1]@@ =1; for(i=2;i<=n;i++) { temp=0; for(j=1;j<i;j++) { if(a[i]<=@@ a[j]) { if(temp@@ <@@ length@@ [j]) temp=@@ length@@ [j]; } } length@@ [i]=@@ temp@@ +1; } intmax=0; for(i=1;i<=n;i++) if(max<@@ length@@ [i]) max=@@ length@@ [i]; cout<<max<<endl; return0; }  
c -1
h -1
0

intmain() { chars1@@ [1000],@@ s2@@ [1000]; inti,j,k,@@ l1,@@ n,@@ l2@@ ; double@@ m; scanf("%lf",&@@ m); scanf("%s",@@ s1); scanf("%s",@@ s2); l1=strlen(@@ s1); l2=strlen(@@ s2); if(l1!=l2@@ )@@ printf("error"); else { n=0; for(i=0;i<l1;i++) { if(((@@ s1@@ [i]!='A')&&(@@ s1@@ [i]!='T')&&(@@ s1@@ [i]!='C')&&(@@ s1@@ [i]!='G')@@ )||((@@ s2@@ [i]!='A')&&(@@ s2@@ [i]!='T')&&(@@ s2@@ [i]!='C')&&(@@ s2@@ [i]!='G')@@ )) { printf("error"); exit@@ (@@ 0); } if(s1[i]==s2@@ [i])@@ n++; } if(1.0*@@ n/@@ l1@@ >=@@ m)@@ printf("yes"); elseprintf("no"); } return0; }  
c -1
h -1
intmain() { int@@ area@@ [1000][1000]; inti,j,n,@@ i1@@ ,@@ j1@@ ,@@ i2@@ ,@@ a,b,@@ j2@@ ,@@ J1@@ =0,@@ J2@@ =0,@@ I1@@ =0,@@ I2@@ =0,@@ GESHU@@ ; GESHU@@ =0; a=1; b=1; scanf("%d",&n); for(i=0;i<n;i++) { for(j=0;j<n;j++) { scanf("%d",&(@@ area@@ [i][j]@@ )); } } for(@@ i1@@ =0;@@ i1@@ <n;@@ i1@@ ++) { for(@@ j1@@ =0;@@ j1@@ <n;@@ j1@@ ++) {if(@@ area@@ [@@ i1@@ ][@@ j1@@ ]@@ ==0&&@@ a@@ ==1) {@@ a=@@ 2; J1@@ =@@ j1@@ ; I1@@ =@@ i1@@ ; }} } for(@@ i2@@ =@@ n-1;@@ i2@@ >=0;@@ i2@@ --) { for(@@ j2@@ =@@ n-1;@@ j2@@ >=0;@@ j2@@ --) {if(@@ area@@ [@@ i2@@ ][@@ j2@@ ]@@ ==0&&@@ b@@ ==1) {@@ J2@@ =@@ j2@@ ; I2@@ =@@ i2@@ ; b=@@ 2; } } } GESHU@@ =(@@ J2@@ -@@ J1@@ +1)*(@@ I2@@ -@@ I1@@ +1)@@ -2@@ *(@@ J2@@ -@@ J1@@ +@@ I2@@ -@@ I1@@ +@@ 2@@ )+@@ 4@@ ; printf("%d",@@ GESHU@@ ); return0; }  
c -1
h -1
0

intx[@@ 1000],@@ y@@ [1000],@@ z[@@ 2000]; inti,j,n,@@ m,@@ ex@@ ; voidread@@ (){ cin>>n>>m; for(i=0;i<n;i++) cin>>@@ x[i]; for(i=0;i<m;i++) cin>>y@@ [i]; } voidpaixu@@ (){ for(i=0;i<n;i++) for(j=0;j<n-1;j++) if(x@@ [j+1]@@ <@@ x@@ [j]){ ex@@ =@@ x@@ [j]; x@@ [j]=@@ x@@ [j+1]; x@@ [j+1]=@@ ex@@ ; } for(i=0;i<m;i++) for(j=0;j<m-1;j++) if(y@@ [j]>@@ y@@ [j+1@@ ]){ ex@@ =@@ y@@ [j]; y@@ [j]=@@ y@@ [j+1]; y@@ [j+1]=@@ ex@@ ; } } void@@ heping@@ (){ for(i=0;i<n;i++) z@@ [i]=@@ x[i]; for(i=0;i<m;i++) z@@ [n@@ +i]=@@ y@@ [i]; } void@@ display@@ (){ for(i=0;i<n@@ +m@@ ;i++){ if(i==0)@@ cout<<@@ z@@ [i]; else@@ cout<<""<<@@ z@@ [i]; } } intmain(){ read(); paixu@@ (); heping@@ (); display@@ (); return0; }  
c -1
h -1
int@@ compare@@ (constvoid*@@ elem1@@ ,@@ constvoid*@@ elem2@@ ) { return(@@ *(int*)@@ elem1@@ )@@ -@@ (*@@ (int*)@@ elem2@@ ); } intmain() { intN@@ ,@@ M@@ ,i; scanf("%d%d",&@@ N@@ ,&@@ M@@ ); inta[@@ N@@ ],b[@@ M@@ ]; for(i=0;i<N;i++) { scanf("%d",&a[i]); } for(i=0;i<@@ M@@ ;i++) { scanf("%d",&b[i]); } qsort@@ (a,@@ N@@ ,@@ sizeof(int),@@ compare@@ ); for(i=0;i<@@ N@@ -1;i++) { printf("%d",a[i]); } printf("%d",a[i]); qsort@@ (b,@@ M@@ ,@@ sizeof(int),@@ compare@@ ); for(i=0;i<@@ M@@ -1;i++) { printf("%d",b[i]); } printf("%d\n",@@ b[i]); return0; }  
c -1
h -1
1


intmain(intargc,char*argv[]) { intn,k,i,j,@@ shu@@ [1000],@@ y[@@ 1000][1000],@@ count=0; scanf("%d%d",&n,&k); for(i=0;i<n;i++) { scanf("%d",&@@ shu@@ [i]); } for(i=0;i<n;i++) { for(j=i+1;j<n;j++) { y@@ [i][j]=@@ shu@@ [i]+@@ shu@@ [j]; if(y@@ [i][j]==@@ k) count@@ ++;} } if(count@@ ==0) printf("no"); else printf("yes"); return0; }  
c -1
h -1
int@@ input@@ (int*@@ s@@ ,intn) { inti=0; for(i=0;i<n;i++) scanf("%d",&s[i]); return0; } int@@ sort@@ (int*@@ s@@ ,intn) { inti=0,j=0; for(i=0;i<n;i++) { for(j=1;j<n;j++) { if(s@@ [j-1]@@ >@@ s@@ [j]) { int@@ temp=@@ s@@ [j-1]; s@@ [j-1]=@@ s[j]; s@@ [j]=temp; } } } return0; } int@@ combine@@ (int*@@ s1@@ ,int*@@ s2@@ ,int@@ n1,int@@ n2@@ ,int*@@ s) { inti=0; for(i=0;i<n1;i++) s[i]=@@ s1@@ [i]; for(i=0;i<n2;i++) s@@ [i+@@ n1@@ ]=@@ s2@@ [i]; return0; } int@@ output@@ (int*@@ s@@ ,intn) { inti=0; if(n@@ <=@@ 0@@ ) return0; printf("%d",@@ s@@ [0]); for(i=1;i<n;i++) printf("%d",@@ s[i]); } intmain() { int@@ n1@@ =0,@@ n2@@ =0; scanf("%d%d",&@@ n1,@@ &@@ n2); int@@ s1@@ [@@ 1000]={0}; int@@ s2[@@ 1000]={0}; input@@ (@@ s1,@@ n1@@ );@@ input@@ (@@ s2,@@ n2); sort(@@ s1,@@ n1@@ );@@ sort(@@ s2,@@ n2); ints[@@ 2000@@ ]={0}; combine@@ (@@ s1,@@ s2,@@ n1,n2,@@ s); output@@ (@@ s,@@ n1+@@ n2); return0; }  
c -1
h -1
0

intmain(){ inti,j,@@ l1,@@ l0@@ ,@@ js@@ =0; double@@ jg@@ ,@@ bl@@ ; chara[@@ 2][@@ 501]; scanf("%lf",&@@ bl@@ ); for(i=0;i<2@@ ;i++){ scanf("%s",@@ a[i]); } l0@@ =strlen(@@ a[0]); l1=strlen(@@ a[1]); if(l1@@ !=@@ l0@@ ){ printf("error"); return0; } for(j=0;j<@@ 2@@ ;j++){ for(i=0;i<l1;i++){ if((a[j]@@ [i]!='A')&&(@@ a[j]@@ [i]!='T')&&(@@ a[j]@@ [i]!='C')&&(@@ a[j]@@ [i]!='G')){ printf("error"); return0; } } } for(i=0;i<l1;i++){ if(a[0]@@ [i]==@@ a[1]@@ [i]){ js@@ ++; } } jg@@ =1.0*@@ js@@ /@@ l1; if(@@ jg@@ >@@ bl@@ ){ printf("yes"); }else{ printf("no"); } return0; }  
c -1
h -1
intmain(){ intsz[@@ N@@ ][@@ M@@ ]; intk,@@ n,m,@@ i,j,@@ l; intsum=0; scanf("%d",&k); for(l=0;l<@@ k;@@ l++){ sum=0; scanf("%d%d",&n,&m); for(i=0;i<n;i++){ for(j=0;j<m;j++){ scanf("%d",&sz[i][j]); } } for(j=0;j<@@ m-1@@ ;j++){ sum+=@@ sz[0]@@ [j]; } for(i=0;i<n-1;i++){ sum+=@@ sz[i]@@ [@@ m-1@@ ]; } for(j=1;j<@@ m@@ ;j++){ sum+=@@ sz[@@ n-1@@ ]@@ [j]; } for(i=1;i<n;i++){ sum+=@@ sz[i]@@ [0]; } printf("%d\n",sum); } return0; }  
c -1
h -1
0

int@@ g@@ (intx,int@@ j){ for(j@@ ++@@ ;j<=@@ x@@ ;j++){ if(x==@@ j) return1; if(x@@ %j@@ ==0&&@@ x@@ /j@@ >=@@ j) return@@ g@@ (x@@ /j@@ ,j@@ -1)@@ +@@ g@@ (x@@ ,j); } return0; } intmain(){ intn,@@ a; cin>>n; for(inti=1;i<=@@ n;i++){ cin>>a; cout<<@@ g@@ (a,@@ 1@@ )<<endl; } return0; }  
c -1
h -1
intm,n,@@ a[@@ 1000],b[1000]; void@@ init@@ (){ cin>>m>>n; for(inti=0;i<@@ m@@ ;i++)@@ cin>>a[i]; for(inti=0;i<@@ n;i++)@@ cin>>b[i]; } voidsort@@ (){ for(inti=0;i<@@ m-1;i++) for(intj=@@ m-1@@ ;j>i;j--) if(a[j]@@ <a@@ [j-1]@@ ){ int@@ t=@@ a@@ [j-1]; a@@ [j-1]=@@ a[j]; a[j]=@@ t; } for(inti=0;i<@@ n-1;i++) for(intj=@@ n-1@@ ;j>i;j--) if(b[j]@@ <b@@ [j-1]@@ ){ int@@ t=@@ b@@ [j-1]; b@@ [j-1]=@@ b[j]; b[j]=@@ t; } } voidcombine@@ (){ for(inti=@@ m@@ ;i<@@ m+@@ n;i++)@@ a[i]=b[i-@@ m]; } voidprint@@ (){ for(inti=0;i<@@ m+@@ n;i++){ if(i@@ )@@ cout<<'@@ '; cout<<a[i]; } cout<<endl; } intmain(){ init@@ (); sort@@ (); combine@@ (); print(); return0; }  
c -1
h -1
0

intmax(int@@ a) { if(a%@@ 7@@ ==0)@@ return1; if((@@ a@@ -@@ 7@@ )@@ %@@ 10@@ ==0)@@ return1; if((@@ a/@@ 10@@ ==@@ 7@@ ))@@ return1; return0; } voidmain() { long@@ n,@@ i,k,@@ j,@@ a[@@ 1001]; double@@ sum,@@ num; scanf("%ld@@ %ld@@ ",&@@ n,&@@ k); num@@ =1@@ .0@@ ; sum=1; for(i=1;i<=n;i++) { scanf("%ld",&@@ a[i]); } for(i=1;i<=n;i++) for(j=i+1;j<=n;j++) if(a[i]+a[j]==k) { printf("yes"); return; } printf("no"); }  
c -1
h -1
intmain(){ doublea,@@ e=0; inti,@@ d=0,@@ f,@@ g; charb[@@ 500@@ ],c[@@ 500]; scanf("%lf\n",&@@ a); gets(b); gets(c); f@@ =strlen(b); g@@ =strlen(c); if(f@@ !=@@ g@@ ){ printf("error"); return0; } for(i=0;i<@@ f@@ ;i++){ if(@@ b[i]!='A'&&b[i]!='T'&&b[i]!='G'&&b[i]!='@@ C'){ printf("error"); return0; } } for(i=0;i<@@ g@@ ;i++){ if(c@@ [i]!='A'&&@@ c@@ [i]!='T'&&@@ c@@ [i]!='G'&&@@ c@@ [i]!='@@ C'){ printf("error"); return0; } } for(i=0;i<@@ f@@ ;i++){ if(b[i]==@@ c@@ [i]) d++; } e@@ =1.0*@@ d@@ /@@ g; if(e@@ >=@@ a) printf("yes"); else printf("no"); return0; }  
c -1
h -1
0

intmain() { intn,k; scanf("%d%d",&n,&k); intsz[1000]; inti; for(i=0;i<n@@ ;i@@ +=@@ 1) {@@ scanf("%d",&(sz[i]@@ )@@ );} for(intl@@ =0;@@ l@@ <=@@ n-1;@@ l@@ +=@@ 1) {@@ for(i=1;i<@@ n@@ ;i@@ +=@@ 1@@ ){@@ if(sz[@@ l@@ ]+@@ sz@@ [i]==@@ k) {@@ printf("yes");@@ return0@@ ;}} if(l@@ ==@@ n-1@@ ){@@ printf("no@@ ");@@ }} return0; }  
c -1
h -1
voidmain() { int@@ *p,*@@ q,@@ a,b,@@ k,@@ m=0,@@ i,j; q=@@ (int*)malloc(@@ 10000@@ *sizeof(int)); scanf("%d",&k); for(i=0;i<k;i++) { m=0; p=@@ q; scanf("%d%d",&a,&b); for(j=0;j<a@@ *@@ b;j++) { scanf("%d",p@@ +j); } for(j=0;j<@@ b;j++) m@@ +=@@ *(p+j)@@ +*@@ (p@@ +@@ a*@@ b@@ -1-j@@ ); for(j=1;j<@@ a@@ -1;j++) m@@ +=@@ *(p@@ +j@@ *@@ b)@@ +*@@ (p@@ +j@@ *@@ b+@@ b@@ -1); printf("%d\n",m); } }  
c -1
h -1
0

intmain() { double@@ d; scanf("%lf",&@@ d); chars@@ [100]; char@@ u@@ [100]; scanf("%s%s",@@ s,@@ u@@ ); intf@@ =0; int@@ t=0,@@ i,@@ r=0; for(i=0;s[i]@@ !='\0';i++) { t++; } for(i=0;@@ u@@ [i]!='\0';i++) { r++; } if(r@@ !=@@ t) { printf("error\n"); return0; } else {@@ for(i=0;s[i]@@ !='\0';i++) { if(s@@ [i]!='A'&&@@ s@@ [i]!='T'&&@@ s@@ [i]!='C'&&@@ s@@ [i]!='G') { printf("error\n"); return0; } elseif(@@ u@@ [i]!='A'&&@@ u@@ [i]!='T'&&@@ u@@ [i]!='C'&&@@ u@@ [i]!='G') { printf("error\n"); return0; } elseif(@@ s@@ [i]==@@ u@@ [i]) { f@@ ++; } } if(f@@ *1.0/@@ t@@ >=@@ d) { printf("yes\n"); return0; } else { printf("no\n"); return0; } } return0; }  
c -1
h -1
intmax@@ (intx,int@@ y); intmax@@ (intx,inty) { int@@ z; if(x>@@ y) z=@@ x; else z=@@ y; return(@@ z); } intmain() { inta[@@ 25@@ ]={0}; intc[@@ 25]; int@@ Height@@ ,@@ k; intn; scanf("%d",&k); { for(n=0;n@@ <k;@@ n++) { scanf("%d",&@@ Height@@ ); a[n@@ ]=@@ Height@@ ; c[@@ n@@ ]=1; } } inti,j; for(i=k-2;i>=0;i--) { for(j=i+1;j<=@@ k@@ -1;j++) { if((a[j]@@ <=@@ a[i]@@ )&&(@@ c[i]@@ <@@ c[j]@@ +1@@ )) c[i]=@@ c@@ [j]+1; } } int@@ cMax@@ =@@ c[@@ 0]; { for(i=0;i<=k-1;i++) { cMax@@ =@@ cMax@@ >@@ c[i]@@ ?@@ cMax@@ :@@ c[i]; } printf("%d",@@ cMax@@ ); } return0; }  
c -1
h -1
0

intmain() { double@@ per@@ ; double@@ SUM@@ ,@@ sum=0; int@@ len; char@@ DNA@@ [500]; char@@ dna@@ [500]; scanf("%lf",&@@ per@@ ); scanf("%s",&@@ DNA@@ ); scanf("%s",&@@ dna@@ ); SUM@@ =strlen(@@ DNA@@ ); len=strlen(@@ dna@@ ); if(@@ SUM@@ !=@@ len@@ ) { printf("error\n"); return0; } for(intj=0;j<@@ SUM@@ ;j++) { if(@@ DNA@@ [j]!='@@ A'&&@@ DNA@@ [j]!='@@ T'&&@@ DNA@@ [j]!='@@ C'&&@@ DNA@@ [j]!='@@ G') { printf("error\n"); return0; } if(@@ dna@@ [j]!='@@ A'&&@@ dna@@ [j]!='@@ T'&&@@ dna@@ [j]!='@@ C'&&@@ dna@@ [j]!='@@ G') { printf("error\n"); return0; } } for(inti=0;i<@@ SUM@@ ;i++) { if(@@ DNA@@ [i]==@@ dna@@ [i]) { sum++; } } SUM@@ =@@ sum/@@ SUM@@ ; if(@@ SUM@@ >@@ per@@ ) { printf("yes\n"); } else { printf("no\n"); } return0; }  
c -1
h -1
intmain(){ inti,n,@@ j=0,@@ e,@@ x,@@ a=0,@@ k; int@@ y@@ [100],@@ year@@ [100]; charid@@ [@@ 10],@@ t@@ [100][10],@@ ee@@ [@@ 10],@@ p@@ [100][10]; scanf("%d",&n); for(i=0;i<n;i++){ scanf("%s%d",@@ id,&@@ x); if(x@@ >=60){ y@@ [j]=@@ x; strcpy(@@ t@@ [j],@@ id); j++; } else{ year@@ [a@@ ]=@@ x; strcpy(@@ p@@ [a@@ ],@@ id); a++; } } for(k=1;k<=@@ j@@ ;k++){ for(i=0;i<j@@ -@@ k;i++){ if(y@@ [i]<@@ y@@ [i+1@@ ]){ e=@@ y@@ [i+1]; y@@ [i+1]=@@ y@@ [i]; y@@ [i]=@@ e; strcpy(@@ ee@@ ,@@ t@@ [i+1]); strcpy(@@ t@@ [i+1],@@ t@@ [i]); strcpy(@@ t@@ [i],@@ ee@@ ); } } } for(i=0;i<j@@ ;i++){ printf("%s\n",@@ t@@ [i]); } for(k=0;k<@@ a@@ ;k++){ printf("%s\n",@@ p@@ [k]); } return0; }  
c -1
h -1
0

intmain() { struct@@ author_book { int@@ count; int@@ book[999]; }@@ au@@ [26]; for(intk=0;k<@@ 26@@ ;k++) { au@@ [k].@@ count=0; } intm; cin>>m; for(inti=1;i<=@@ m;i++) { intnum; chara[@@ 26]; cin>>num; cin.get(); cin.getline@@ (a,@@ 26@@ ); for(intk=0;k<@@ strlen(a)@@ ;k++) { int@@ author_r@@ =@@ (int)@@ (@@ a[k]@@ -'A'@@ ); au@@ [@@ author_r@@ ].@@ book[@@ au@@ [@@ author_r@@ ].@@ count@@ ]=@@ num; au@@ [@@ author_r@@ ].@@ count++; } } intmax=0; int@@ the_one@@ =0; for(inti=0;i<@@ 26;i++) { if(au@@ [i].@@ count@@ >max) { max=@@ au@@ [i].@@ count; the_one@@ =i; } } char@@ maxau@@ ='A'+@@ the_one@@ ; cout<<@@ maxau@@ <<endl; cout<<@@ au@@ [@@ the_one@@ ].@@ count@@ <<endl; for(inti=0;i<@@ au@@ [@@ the_one@@ ].@@ count@@ ;i++) { cout<<@@ au@@ [@@ the_one@@ ].@@ book@@ [i]<<endl; } return0; }  
c -1
h -1
struct@@ ace { charid[10]; inta; intb; }@@ o@@ [3@@ ],@@ r; voidmain() { intn,i,@@ s[@@ 3@@ ],@@ m,@@ j,@@ v@@ ; char@@ z@@ [10]; scanf("%d",&n); scanf("%s%d%d",@@ o@@ [0].@@ id,&@@ o@@ [0].@@ a,&@@ o@@ [0].@@ b); scanf("%s%d%d",@@ o@@ [1].@@ id,&@@ o@@ [1].@@ a,&@@ o@@ [1].@@ b); scanf("%s%d%d",@@ o@@ [2].@@ id,&@@ o@@ [2].@@ a,&@@ o@@ [2].@@ b); s[@@ 0]=@@ o@@ [0].@@ a+@@ o@@ [0].@@ b; s@@ [1]=@@ o@@ [1].@@ a+@@ o@@ [1].@@ b; s[2@@ ]=@@ o@@ [2].@@ a+@@ o@@ [2].@@ b; for(i=0;i<2@@ ;i++) { for(j=i+1;j<@@ 3;j++) { if(s@@ [i]<@@ s@@ [j]) { strcpy(@@ z,@@ o@@ [i].id); strcpy(@@ o@@ [i].@@ id,@@ o@@ [j].@@ id); strcpy(@@ o@@ [j].@@ id,@@ z); v@@ =@@ s[i]; s[i]=@@ s[j]; s[j]=@@ v@@ ; } } } for(i=0;i<n-@@ 3;i++) { scanf("%s%d%d",@@ r@@ .@@ id,&@@ r@@ .@@ a,&@@ r@@ .@@ b); m=@@ r@@ .@@ a+@@ r@@ .@@ b; if(m@@ >@@ s@@ [0]) {@@ o@@ [2]=@@ o@@ [1]@@ ;@@ s[2@@ ]=@@ s[1]@@ ;@@ o@@ [1]=@@ o@@ [0]@@ ;s@@ [1]=@@ s[0]@@ ;@@ o@@ [0]=@@ r@@ ;@@ s[@@ 0]=@@ m@@ ;} elseif(m@@ <=@@ s[0]@@ &&m@@ >@@ s@@ [1@@ ]) {@@ o@@ [2]=@@ o@@ [1]@@ ;@@ s[2@@ ]=@@ s[1]@@ ;@@ o@@ [1]=@@ r@@ ;s@@ [1]=@@ m@@ ;} elseif(m@@ <=@@ s[1]@@ &&m@@ >@@ s[2@@ ]) {@@ o@@ [2]=@@ r@@ ;@@ s[2@@ ]=@@ m@@ ;} } printf("%s%d\n",@@ o@@ [0].@@ id,@@ s@@ [0]); printf("%s%d\n",@@ o@@ [1].@@ id,@@ s@@ [1]); printf("%s%d\n",@@ o@@ [2@@ ].id,@@ s[2@@ ]); }  
c -1
h -1
0

intmain() { introw,col,@@ i,j,k; int*@@ array[100][100]; scanf("%d%d",&row,&col); for(i=0;i<row;i++) for(j=0;j<col;j++) scanf("%d",@@ *(@@ array@@ +i)@@ +j); for(k=0;k<=@@ row+col@@ ;k++) for(i=0;i<row;i++) for(j=0;j<col;j++) if(i+j@@ ==k) printf("%d\n",@@ *(*(@@ array@@ +i)@@ +j)); }  
c -1
h -1
intmain() { inta[@@ 20]; inti; intn=0; intnum=0; intj; while(1) { n=0; num=0; for(i=0;i<@@ 20@@ ;i++) { cin>>a[i]; if(a[i]==0) break; if(a[i]==-1) return0; n++; } for(i=0;i<n;i++) for(j=i+1;j<n;j++) if(a[i]==2*@@ a[j]||@@ 2*@@ a[i]==@@ a[j]) num++; cout<<num<<endl; } return0; }  
c -1
h -1
0

voidmain() { intn,i,j,@@ a[100],@@ c[100],@@ m=0,@@ e@@ [100],@@ k=0,@@ x; char@@ b[100@@ ][@@ 10],@@ d@@ [100][10],@@ f@@ [100][10],@@ y@@ [10]; scanf("%d",&n); for(i=0;i<n;i++) { scanf("%s%d",@@ b[i]@@ ,&@@ a[i]); if(a[i]@@ >=60) { c[m@@ ]=a[i]; strcpy(@@ d@@ [m@@ ],@@ b[i]); m++; } else { e@@ [k]=@@ a[i]; strcpy(@@ f@@ [k],@@ b[i]); k++; } } for(j=0;j<m-1;j++) for(i=0;i<m@@ -j@@ -1;i++) if(c@@ [i]<@@ c@@ [i+1]) { x=@@ c[i]; c[i]=@@ c@@ [i+1]; c@@ [i+1]=@@ x; strcpy(@@ y,@@ d[i]); strcpy(@@ d@@ [i],@@ d@@ [i+1]); strcpy(@@ d@@ [i+1],@@ y); } for(i=0;i<m;i++) printf("%s\n",@@ d[i]); for(i=0;i<k;i++) printf("%s\n",@@ f@@ [i]); }  
c -1
h -1
intmain() { structpatient {@@ charid[10]; intage; }@@ patient@@ [100],@@ old@@ [100],@@ t; inta,@@ i=0,j=0,@@ k=0,@@ r,@@ i1@@ ; scanf("%d",&a); getchar(); for(i=0@@ ;j@@ +i@@ <@@ a;i++) { scanf("%s%d",@@ patient@@ [i].id,&@@ patient@@ [i].age); if(@@ patient@@ [i].age>=60) { old@@ [j]=@@ patient@@ [i]; j++; i--; } } for(r=0;r@@ <j@@ -1;@@ r++) for(k=0;k<j@@ -1@@ -@@ r@@ ;k++) if(old@@ [k@@ ].age@@ <@@ old@@ [k+1@@ ].age) {t=@@ old@@ [k]@@ ;@@ old@@ [k]=@@ old@@ [k+1@@ ];@@ old@@ [k+1]=@@ t;} for(r=0;r@@ <j@@ ;r++) printf("%s\n",old@@ [r@@ ].id); for(r=0;r@@ <i@@ ;r++) printf("%s\n",@@ patient@@ [r@@ ].id); return0; }  
c -1
h -1
1


intmain(){ doublen; chara[500],b[500]; scanf("%lf",&n); scanf("%s",a); scanf("%s",b); int@@ len1=strlen(@@ a)@@ ,len2@@ =strlen(b); int@@ i,j@@ =0; double@@ t; for(i=0;i<len1;i++) { if(a[i]!='A'&&a[i]!='T'&&a[i]!='C'&&a[i]!='@@ G') { printf("error"); goto@@ q; } } for(i=0;i<@@ len2@@ ;i++) { if(@@ b[i]!='A'&&b[i]!='T'&&b[i]!='C'&&b[i]!='@@ G') { printf("error"); goto@@ q; } } if(len1!=@@ len2) { printf("error"); goto@@ q; } if(len1@@ ==@@ len2) { for(i=0;i<len1;i++) { if(a[i]==b[i]) { j++; } } t@@ =1.0*@@ j@@ /@@ len1; if(t@@ >n) { printf("yes"); } else{ printf("no"); } } else { printf("no"); } q@@ :@@ return0; }  
c -1
h -1
intmain() { structstudent {int@@ ID; int@@ YW@@ ; int@@ SX@@ ; }; structstudentstu[100000]; int@@ ZF@@ [100000]; intn; scanf("%d",&n); for(inti=0;i<n;i++) { scanf("%d",&@@ stu[i].@@ ID); scanf("%d",&@@ stu[i].@@ YW@@ ); scanf("%d",&@@ stu[i].@@ SX@@ ); ZF@@ [i]=@@ stu[i].@@ YW@@ +stu[i].@@ SX@@ ; } int@@ a=0,b=0,@@ c=0,@@ A@@ =0,@@ B@@ =0,@@ C@@ =0; for(inti=0;i<n;i++) { if(@@ ZF@@ [i]>@@ a) { c=@@ b@@ ;@@ C@@ =@@ B@@ ;@@ b=@@ a;@@ B@@ =@@ A@@ ;@@ a=@@ ZF@@ [i];@@ A@@ =i;} elseif(@@ ZF@@ [i]>@@ b) {@@ c=@@ b@@ ;@@ C@@ =@@ B@@ ;@@ b=@@ ZF@@ [i];@@ B@@ =i;} elseif(@@ ZF@@ [i]>@@ c) {@@ c=@@ ZF@@ [i];@@ C@@ =i;} } printf("%d%d\n",stu[@@ A@@ ].ID,@@ a); printf("%d%d\n",stu[@@ B@@ ].ID,@@ b); printf("%d%d\n",stu[@@ C@@ ].ID,@@ c); getchar(); getchar(); }  
c -1
h -1
0

voidmain() { inti,j,t; charstring@@ [256@@ ]={0}; char@@ substring@@ [256@@ ]={0}; char@@ replacement@@ [256@@ ]={0}; scanf("%s",@@ string); scanf("%s",@@ substring); scanf("%s",@@ replacement); for(i=0;i<strlen(@@ string@@ );i++) { t=0; if(@@ substring@@ [0]==@@ string@@ [i]) { for(j=0;j<strlen(@@ substring@@ );j++) { if(@@ substring@@ [j]==@@ string@@ [i+j@@ ])@@ t++; } } if(t==@@ strlen(@@ substring@@ )) { break; } } if(i<@@ strlen(@@ string@@ )@@ -1) { for(j=0;j<strlen(@@ substring@@ );j++) { string@@ [j@@ +i]=@@ replacement@@ [j]; } } printf("%s",@@ string); }  
c -1
h -1
intmain() { int@@ e,@@ f@@ =0,@@ g@@ [1000]; intn; scanf("%d",&n); inti=0; while(i<@@ n){ int@@ k@@ =0;@@ while(k@@ <@@ n){ scanf("%d",&@@ e); if(e@@ ==0){ f@@ ++; } k++; } g@@ [i]=@@ f; f=0; i++; } intm=0,@@ x,y; int@@ j@@ =0;@@ while(j<@@ n){ if(g@@ [j]>@@ m){ m=@@ g@@ [j]; } if(g@@ [j]@@ ==0&&@@ g@@ [j+1]@@ !=0){ x@@ =j; } if(g@@ [j]@@ !=0&&@@ g@@ [j+1]@@ ==0){ y@@ =j; } j++; } int@@ d,@@ sum; d=@@ y@@ -@@ x; sum=(@@ m@@ -2)*(@@ d@@ -2); printf("%d\n",sum); return0; }  
c -1
h -1
0

intmain() { inty,m,d,@@ day@@ =0; scanf("%d%d%d",&@@ y,@@ &@@ m,@@ &@@ d); if(y%@@ 4==0&&y%100!=0@@ &&@@ y%400==0) switch(m) { case12:@@ day=day+@@ 30; case11:@@ day=day+@@ 31; case10:@@ day=day+@@ 30; case9:@@ day=day+@@ 31; case8:@@ day=day+@@ 31; case7:@@ day=day+@@ 30; case6:@@ day=day+@@ 31; case5:@@ day=day+@@ 30; case4:@@ day=day+@@ 31; case3:@@ day=day+@@ 29; case2:@@ day=day+@@ 31; case1:@@ day=day+@@ d; } else switch(m) { case12:@@ day=day+@@ 30; case11:@@ day=day+@@ 31; case10:@@ day=day+@@ 30; case9:@@ day=day+@@ 31; case8:@@ day=day+@@ 31; case7:@@ day=day+@@ 30; case6:@@ day=day+@@ 31; case5:@@ day=day+@@ 30; case4:@@ day=day+@@ 31; case3:@@ day=day+@@ 28; case2:@@ day=day+@@ 31; case1:@@ day=day+@@ d; } printf("%d",@@ day); }  
c -1
h -1
intmain() { struct@@ st {int@@ id; int@@ yu@@ ; int@@ ma; }; intn,i; struct@@ st@@ st1@@ =@@ {@@ 0,0,@@ 0},@@ st2@@ =@@ {@@ 0,0,@@ 0},@@ st3@@ =@@ {@@ 0,0,@@ 0},@@ stn@@ ; scanf("%d",&n); for(i=0;i<n;i++){ scanf("%d%d%d",&@@ stn@@ .@@ id,&@@ stn@@ .@@ yu@@ ,&@@ stn@@ .@@ ma@@ ); if(@@ stn@@ .@@ yu@@ +@@ stn@@ .@@ ma@@ >@@ st1@@ .@@ yu@@ +@@ st1@@ .@@ ma@@ ){ st3@@ =@@ st2@@ ; st2@@ =@@ st1@@ ; st1@@ =@@ stn@@ ; }else{ if(@@ stn@@ .@@ yu@@ +@@ stn@@ .@@ ma@@ >@@ st2@@ .@@ yu@@ +@@ st2@@ .@@ ma@@ ){ st3@@ =@@ st2@@ ; st2@@ =@@ stn@@ ; }else{ if(@@ stn@@ .@@ yu@@ +@@ stn@@ .@@ ma@@ >@@ st3@@ .@@ yu@@ +@@ st3@@ .@@ ma@@ ){ st3@@ =@@ stn@@ ; } } } } printf("%d%d\n%d%d\n%d@@ %d",@@ st1@@ .@@ id,@@ st1@@ .@@ yu@@ +@@ st1@@ .@@ ma@@ ,@@ st2@@ .@@ id,@@ st2@@ .@@ yu@@ +@@ st2@@ .@@ ma@@ ,@@ st3@@ .@@ id,@@ st3@@ .@@ yu@@ +@@ st3@@ .@@ ma@@ ); }  
c -1
h -1
0

intmain() { intn,k,i,j,@@ c,@@ tag@@ =0; inta[1000]; scanf("%d%d",&n,&k); for(i=0;i<n;i++) { scanf("%d",&a[i]); } for(i=0;i<n;i++) { c=@@ k-@@ a[i]; for(j=0;j<n;j++) { if(j==@@ i)@@ continue; if(c==@@ a[j])@@ tag@@ =1; if(tag@@ ==1)break; } if(tag@@ ==1)break; } if(tag@@ ==1)@@ printf("yes"); if(tag@@ ==0)@@ printf("no"); return0; }  
c -1
h -1
intmain(){ inti,@@ m=0,@@ k,@@ n,@@ sz[@@ 1000],@@ s[@@ 1000]; scanf("%d%d",&n,&k); for(i=0;i<n;i++){ scanf("%d",&sz[i]); s[m@@ ]=@@ sz[i]; m@@ ++;} for(i=0;i<n;i++){ if(i==@@ n-1){ break;} for(m=@@ n-1@@ ;m@@ >=i@@ +1@@ ;m@@ --){ if(s[@@ m@@ ]+@@ sz@@ [i]==@@ k){ printf("yes"); break; } } if(s[@@ m@@ ]+@@ sz@@ [i]==@@ k){ break;} } if(i==@@ n-1){ printf("no"); } return0; }  
c -1
h -1
1


intmain() { intn,@@ j,k,@@ b,@@ c,@@ x,y; b=@@ c=0; scanf("%d",&n); intsz[@@ n@@ ][n]; for(j=0;j<=n-1;j++) { for(k=0;k<=@@ n-1;k++) { scanf("%d",&sz@@ [j]@@ [k]); if(sz@@ [j]@@ [k]@@ ==0) { x@@ =j; y=@@ k@@ ;} } } for(j=0;j<=n-1;j++) { for(k=0;k<=@@ n-1;k++) { if(sz@@ [j]@@ [k]@@ ==0) { b=j; c=@@ k; break; } } if(sz[@@ b@@ ][c@@ ]==0) break; } intm; m@@ =(@@ x@@ -b@@ -1)*(@@ y@@ -c@@ -1); printf("%d",m); return0; }  
c -1
h -1
main() { introw,col,@@ n,@@ sum,@@ a,b,c,d,@@ s; long@@ pic@@ [100][100]; scanf("%d\n",&n); for(row=0;row<n;@@ row++){ for(col=0;col<n;col@@ ++) {scanf("%d",&@@ pic@@ [@@ row][col@@ ]@@ );} } sum=0; for(row=0;row<n;@@ row++){ for(col=0;col<n;col@@ ++) {if((@@ pic@@ [@@ row][col@@ ]==0) &&(@@ pic@@ [@@ row-1@@ ][col@@ -1@@ ]==255@@ ) &&(@@ pic@@ [@@ row-1@@ ][col@@ ]==255@@ ) &&(@@ pic@@ [@@ row][col@@ -1@@ ]==255@@ )) {@@ a=@@ row; b=@@ col@@ ;} } } for(row@@ =@@ n-1;@@ row@@ >=0;@@ row@@ --){ for(col@@ =@@ n-1;@@ col@@ >=0;@@ col@@ --) {if((@@ pic@@ [@@ row][col@@ ]==0) &&(@@ pic@@ [@@ row@@ +1@@ ][col@@ +1@@ ]==255@@ ) &&(@@ pic@@ [@@ row@@ +1@@ ][col@@ ]==255@@ ) &&(@@ pic@@ [@@ row][col@@ +1@@ ]==255@@ )) {@@ c=@@ row; d=@@ col@@ ;} } } s=(@@ c-a-1)*(d-b-1); printf("%d",s); return0; }  
c -1
h -1
1


int@@ turn@@ (inta,intb) { inti,@@ k; if(a@@ ==1)@@ k=1; elseif(a@@ <b@@ )@@ k=0; else { k=0; for(i=b@@ ;i<=a;i++) if(a%i==0) k=k@@ +@@ turn@@ (a/i,i); } return@@ k; } intmain() { intn,i,@@ a[1000],@@ t; scanf("%d",&n); for(i=0;i<n;i++) { scanf("%d",&a[i]); t=@@ turn@@ (a[i],@@ 2); printf("%d\n",t); } return0; }  
c -1
h -1
intmain() { intn,@@ j,@@ m; scanf("%d",&n); inti,@@ h@@ [26]; for(i=1;i<=n@@ ;i++){@@ scanf("%d",&@@ h@@ [i]@@ );@@ }; int@@ q@@ [26]; for(i=1;i<=n@@ ;i++){@@ q@@ [i]@@ =1;@@ }; for(i=n-1@@ ;i>=1;i--) {@@ m=0; for(j=i+1;j<=@@ n;j++){ if(h@@ [j]<=@@ h@@ [i]){ if(m@@ <@@ q@@ [j]@@ ){@@ m=@@ q@@ [j];@@ }@@ ;@@ }@@ ;@@ }; q@@ [i]=@@ q@@ [i]+@@ m; } m=0; for(i=1;i<=n@@ ;i++){@@ if(m@@ <@@ q@@ [i]@@ ){@@ m=@@ q@@ [i];@@ }@@ ;@@ }; printf("%d",m); }  
c -1
h -1
0

intmain() { intn,i,@@ a[@@ 2000@@ ],@@ max=0,@@ t,@@ b[@@ 30@@ ]={0},@@ j,@@ m; charstr@@ [1000][@@ 30]; scanf("%d",&n); for(i=0;i<n;i++){ scanf("%d%s",&a[i],@@ str[i]); for(j=0;j<strlen(@@ str@@ [i])@@ ;j++){ m=@@ str@@ [i][j]@@ -@@ 64@@ ; b[m@@ ]++; } } for(i=1;i<@@ 26@@ ;i++)@@ if(b[i]@@ >max){ max=b[i]; t=i; } printf("%c\n%d\n",@@ t@@ +@@ 64@@ ,max); for(i=0;i<n;i++){ for(j=0;j<strlen(@@ str@@ [i]@@ );j++) if(str@@ [i][j]==@@ t@@ +@@ 64@@ )@@ printf("%d\n",a[i]); } return0; }  
c -1
h -1
structStudent { long@@ Id@@ ; intyuwen; intshuxue; }; intmain() { inti,j; long@@ n; structStudent@@ student[@@ NUM@@ ]; structStudent@@ temp; scanf("%ld@@ \n",&@@ n); for(i=0;i<n;i++) scanf("%ld%d%d",&@@ student[i].@@ Id@@ ,&@@ student[i].@@ yuwen@@ ,&@@ student[i].@@ shuxue); for(i=0;i<3;i++) { for(j=0;j<@@ (@@ 3@@ -i@@ -1)@@ ;j++) { if((@@ student@@ [j+1].@@ yuwen@@ +@@ student@@ [j+1].@@ shuxue@@ )>@@ (@@ student[j].@@ yuwen@@ +@@ student[j].@@ shuxue@@ )) { temp=@@ student@@ [j+1]; student@@ [j+1]=@@ student@@ [j]; student@@ [j]=temp; } } } for(i=@@ 3@@ ;i<n;i++) { if((@@ student[i].@@ yuwen@@ +@@ student[i].@@ shuxue@@ )>@@ (@@ student@@ [2].@@ yuwen@@ +@@ student@@ [2].@@ shuxue@@ )) { student@@ [2]=@@ student@@ [i]; } if((@@ student[i].@@ yuwen@@ +@@ student[i].@@ shuxue@@ )>@@ (@@ student@@ [1].@@ yuwen@@ +@@ student@@ [1].@@ shuxue@@ )) { temp=@@ student@@ [1]; student@@ [1]=@@ student@@ [i]; student@@ [2]=@@ temp; } if((@@ student[i].@@ yuwen@@ +@@ student[i].@@ shuxue@@ )>@@ (@@ student@@ [0].@@ yuwen@@ +@@ student@@ [0].@@ shuxue@@ )) { temp=@@ student@@ [0]; student@@ [0]=@@ student@@ [i]; student@@ [1]=@@ temp; } } for(i=0;i<3;i++) { printf("%ld%d\n",@@ student[i].@@ Id@@ ,@@ (@@ student[i].@@ shuxue@@ +@@ student[i].@@ yuwen@@ )); } return0; }  
c -1
h -1
0

intmain() { intmax@@ [@@ 13]={0,31,@@ 28,31,30,31,30,31,31,30,31,30,31@@ },@@ i,@@ rank@@ =0,@@ y,@@ m,@@ d; cin>>y>>m>>d; if(y%@@ 4==0&&y%100!=0@@ ||@@ y%400==0) max@@ [2]@@ +=@@ 1@@ ;@@ ; for(i=1;i<m;i++) { rank@@ +=@@ max@@ [i]; } rank@@ +=@@ d; cout<<@@ rank@@ ; intx@@ ;@@ cin>>x; return0; }  
c -1
h -1
intmain() { inta[@@ 20@@ ],i,j,@@ sum; while(1) { sum=0; for(i=1;;i++) { cin>>a[i]; if(a[1@@ ]==@@ -1)break; if(a[i]==0)break; for(j=1;j<i;j++) { if(a[i]==2*@@ a[j]||a[j]==2*@@ a[i]) { sum++; } } } if(@@ a[1]@@ !=@@ -1)@@ cout<<sum<<endl; if(a[1@@ ]==@@ -1)break; } return0; }  
c -1
h -1
0

void@@ turn@@ (inta[],intn) { inti,j,k; for(i=0;i<n-1;i++) for(j=i;j<@@ n;j++){ if(a[i]>@@ a[j]@@ ){ k=@@ a[i]; a[i]=a[j]; a[j]=@@ k; }} for(i=0;i<n;i++){ if(i==0)@@ printf("%d",a[i]); else@@ printf("%d",a[i]); } } voidf@@ (inta[],intb[],int@@ an@@ ,int@@ bn@@ ) { turn@@ (a,@@ an@@ ); printf(""); turn@@ (b,@@ bn@@ ); } voidmain() { inti,@@ an@@ ,@@ bn@@ ,@@ a[100],b[100]; scanf("%d%d",&@@ an@@ ,&@@ bn@@ ); for(i=0;i<@@ an@@ ;i++)@@ scanf("%d",&a[i]); for(i=0;i<@@ bn@@ ;i++)@@ scanf("%d",&b[i]); f@@ (a,b,@@ an@@ ,@@ bn@@ ); }  
c -1
h -1
intmain() { struct@@ date { chara[@@ 10]; intnum; struct@@ date@@ *next; }; struct@@ date@@ *@@ p1,*p2,*head; intn,i,@@ temp@@ ,j,@@ compare@@ ; char@@ tem@@ [10]; scanf("%d",&n); head@@ =p1@@ =p2@@ =(struct@@ date@@ *)malloc(len); scanf("%s%d",@@ head->@@ a,&@@ head->@@ num); head@@ ->next=NULL; head=p1; for(i=2;i<=n;i++) { p2@@ =(struct@@ date@@ *)malloc(len); scanf("%s%d",@@ p2->@@ a,&@@ p2->@@ num); p2->next=NULL; p1->next@@ =p2; p1=p2@@ ; } for(i=n-1@@ ;i>=1;i--) { p1=@@ head;@@ p2=p1->next; for(j=1;j<=@@ i;j++) { compare@@ =@@ strcmp(@@ p1->@@ a,@@ p2->@@ a); if(@@ p1->num@@ <60&&@@ p2->@@ num@@ >=60) { strcpy(@@ tem@@ ,@@ p1->@@ a); strcpy(@@ p1->@@ a,@@ p2->@@ a); strcpy(@@ p2->@@ a,@@ tem@@ ); temp=@@ p2->@@ num; p2->@@ num=@@ p1->@@ num; p1->@@ num=@@ temp; } if(@@ p1->num@@ >=60&&@@ p2->@@ num@@ >=60&&@@ p1->num@@ <@@ p2->@@ num) { strcpy(@@ tem@@ ,@@ p1->@@ a); strcpy(@@ p1->@@ a,@@ p2->@@ a); strcpy(@@ p2->@@ a,@@ tem@@ ); temp=@@ p2->@@ num; p2->@@ num=@@ p1->@@ num; p1->@@ num=@@ temp; } p1=p2@@ ; p2=p1->next; } } p1=@@ p2=head; for(i=1;i<=n;i++) { printf("%s\n",@@ p2->@@ a); p1=p2@@ ; p2=p1->next; } return0; }  
c -1
h -1
0

intm,n,@@ a[100@@ ],b[100],c[@@ 200]; voidshuru@@ (intx,int@@ y,@@ inta[@@ ],intb[@@ ]){ cin>>x@@ >>@@ y; m=@@ x; n=@@ y; for(inti=0;i<@@ x@@ ;i++){@@ cin>>@@ a[i];} for(inti=0;i<@@ y@@ ;i++){@@ cin>>@@ b[i]@@ ;} } voidpaixu@@ (intx[],int@@ l@@ ){ for(inti=0;i<@@ l@@ -1;i++){ for(intj=0;j<@@ l@@ -1@@ -i;j++){ if(x@@ [j]>@@ x@@ [j+1@@ ]){ intp; p=@@ x@@ [j]; x@@ [j]=@@ x@@ [j+1]; x@@ [j+1]=@@ p; } } } } voidhebing@@ (inta[],intb[],int@@ c[@@ ],int@@ m,int@@ n){ for(inti=0;i<@@ m@@ ;i++){@@ c[i]=@@ a[i];} for(inti=0;i<@@ n@@ ;i++){@@ c@@ [i@@ +m@@ ]=@@ b[i]@@ ;} } voidshuchu@@ (intc[],int@@ m,int@@ n){ for(inti=0;i<@@ n+@@ m;i++){ if(i==0)@@ cout<<@@ c[i]; else@@ cout<<""<<@@ c[i]; } } intmain(){ shuru@@ (@@ m,n,@@ a,b); paixu@@ (a,m); paixu@@ (b,n); hebing@@ (a,b,@@ c,@@ m,n); shuchu@@ (c,@@ m,n); return0; }  
c -1
h -1
intmain() { intn,@@ x; inta[100]; cin>>n; for(intk=0;k<@@ 100@@ ;k++) a[k]@@ =0; for(inti=0;i<n;i++) { cin>>x; for(intj=@@ 10@@ ;j<@@ 100@@ ;j++) { if(x==@@ j)@@ a[j]=@@ a[j]@@ +1; } if(a[x@@ ]@@ ==1) { if(i@@ !=0) cout<<""<<@@ x; else cout<<@@ x; } } return0; }  
c -1
h -1
0

voidmain() { intn,i,j,k; structpatient { charid[10]; intage; }@@ pa@@ [1000],@@ t; scanf("%d",&n); for(i=0;i<n;i++) { scanf("%s%d",@@ pa@@ [i].id,&@@ pa@@ [i].age); } for(i=0;i<n;i++) { for(j=n-1;j>=0;j--) if(pa@@ [j].age@@ >@@ pa@@ [j-1@@ ].age@@ &&@@ pa@@ [j].age@@ >=60) { t=@@ pa@@ [j]; pa@@ [j]=@@ pa@@ [j-1]; pa@@ [j-1]=@@ t; } } for(i=0;i<n;i++) { if(pa@@ [i].age>=60) { printf("%s\n",@@ pa@@ [i].id); } } for(i=0;i<n;i++) { if(pa@@ [i].age<60) { printf("%s\n",@@ pa@@ [i].id); } } }  
c -1
h -1
intmain() { intk,@@ a[100@@ ]={0},@@ i=0,j=0,@@ d@@ [100]={0},@@ c=0,@@ max=1; scanf("%d",&k); for(i=0;i<=k-1;i++) scanf("%d",&a[i]); d@@ [k-1]@@ =1; for(i=k-2;i>=0;i--) { for(j=@@ k-1@@ ;j>i;j--) { if((@@ d@@ [j]>@@ c@@ )&&(@@ a[j]@@ <=@@ a[i]@@ )) c=@@ d@@ [j]; } d[i]=@@ c@@ +1; c=0; } for(i=0;i<=k-1;i++) { if(d@@ [i]>max) max=@@ d[i]; } printf("%d",max); }  
c -1
h -1
0

intmain() { introw,col; cin>>row>>col; inta[100][100]; for(inti=0;i<row;i++) for(intj=0;j<col;j++) cin>>*(*(a+i)+j); for(inti=0;i<@@ col;i++) for(intj=0;j<@@ row@@ &&j@@ <=@@ i;j++) cout<<*(*(a@@ +j)@@ +i-j@@ )<<endl; for(inti=1;i<@@ row;i++) for(intj@@ =0;@@ col-1@@ -j@@ >=0&&i@@ +j@@ <row@@ ;j++) cout<<*(*(a@@ +i@@ +j)@@ +col@@ -1-j@@ )<<endl; return0; }  
c -1
h -1
intmain() { intn,@@ x@@ [100],@@ y@@ [100],@@ m@@ [100][100],@@ i,j,k,@@ count@@ [100]={0}; cin>>n; for(k=0;k<n;k++) { cin>>x@@ [k]@@ >>@@ y@@ [k]; for(i=0;i<x@@ [k]@@ ;i++) { for(j=0;j<@@ y@@ [k]@@ ;j++) { cin>>@@ m@@ [i][j]; if(i==0||i==@@ x@@ [k]@@ -1@@ ||j@@ ==0||j==@@ y@@ [k]@@ -1) count@@ [k]@@ +=@@ m@@ [i][j]; } } } for(k=0;k<n;k++) cout<<count@@ [k]@@ <<endl; return0; }  
c -1
h -1
0

intn,@@ t,@@ cnt@@ ; voidf@@ (int@@ left@@ ,int@@ last@@ ){ if(@@ left@@ <@@ last@@ ){@@ if(@@ left@@ ==1)@@ cnt@@ ++;@@ return@@ ;} for(inti=@@ last@@ ;i<=@@ left@@ ;i++)@@ if(@@ left@@ %i==0)@@ f(@@ left@@ /i,i); } intmain(){ scanf("%d",&t); while(t@@ --){ scanf("%d",&n); cnt@@ =0;@@ f(@@ n,@@ 2); printf("%d\n",@@ cnt@@ ); } return0; }  
c -1
h -1
intmain() { intn,@@ j,k,@@ b,@@ c,@@ x,y; b=@@ c=0; scanf("%d",&n); intsz[@@ n@@ ][n]; for(j=0;j<=n-1;j++) { for(k=0;k<=@@ n-1;k++) { scanf("%d",&sz@@ [j]@@ [k]); if(sz@@ [j]@@ [k]@@ ==0) { x@@ =j; y=@@ k@@ ;} } } for(j=0;j<=n-1;j++) { for(k=0;k<=@@ n-1;k++) { if(sz@@ [j]@@ [k]@@ ==0) { b=j; c=@@ k; break; } } if(sz[@@ b@@ ][c@@ ]==0) break; } intm; m@@ =(@@ x@@ -b@@ -1)*(@@ y@@ -c@@ -1); printf("%d",m); return0; }  
c -1
h -1
0

void@@ find@@ (intm,int@@ j@@ ,int@@ *p@@ ) { for(@@ ;j<=@@ m;j++) { if(m==@@ j) { (*p)@@ ++; break; } if(m@@ %j@@ ==0)@@ find@@ (m@@ /j@@ ,j,@@ p); } } intmain() { intn,m,@@ i,j; scanf("%d",&n); for(i=0;i<n;i++) { intcount=0; int*p; p@@ =&@@ count; scanf("%d",&m); find@@ (m,@@ 2,@@ p); printf("%d\n",@@ count); } return0; }  
c -1
h -1
intmain(){ intn,m,@@ i,k,@@ num=0,@@ flag=0; double@@ l; chara[501],b[@@ 501],@@ s[@@ 10]; gets(s); k=@@ atoi@@ (@@ s); gets(a); gets(b); n@@ =strlen(a); m@@ =strlen(b); for(i=0;a[i]@@ !='\0';i++){ if((a[i]!='@@ A')&&(@@ a[i]!='@@ T')&&(@@ a[i]!='@@ C')&&(@@ a[i]!='@@ G')){ flag=1; break; } } if((@@ n==@@ m@@ )&&(@@ flag@@ ==0)@@ ){ for(i=0;a[i]@@ !='\0';i++){ if(a[i]==b[i]){ num++; } } l@@ =(double)@@ num@@ /n; if(l@@ >@@ k){ printf("yes"); } else{ printf("no"); } } else{ printf("error"); } return0; }  
c -1
h -1
0

inta[@@ 2][@@ 11@@ ]={0}; int@@ geshu1@@ ,@@ geshu2@@ ; int@@ hanshu1@@ () { inti; cin>>@@ geshu1@@ >>@@ geshu2@@ ; for(i=0;i<@@ geshu1@@ ;i++)@@ cin>>@@ a[0][i]; for(i=0;i<@@ geshu2@@ ;i++)@@ cin>>@@ a[1]@@ [i]; return0; } int@@ hanshu2@@ () { inti,j,k; for(i=@@ geshu1@@ -1@@ ;i>0;i--) { for(j=0;j<i;j++) { if(a[0]@@ [j]>@@ a[0]@@ [j+1]) { k=@@ a[0]@@ [j];@@ a[0]@@ [j]=@@ a[0]@@ [j+1];@@ a[0]@@ [j+1]=@@ k; } } } for(i=@@ geshu2@@ -1@@ ;i>0;i--) { for(j=0;j<i;j++) { if(@@ a[1]@@ [j]>@@ a[1]@@ [j+1]) { k=@@ a[1]@@ [j];@@ a[1]@@ [j]=@@ a[1]@@ [j+1];@@ a[1]@@ [j+1]=@@ k; } } } return0; } int@@ hanshu3@@ () { inti; for(i=0;i<@@ geshu2@@ ;i++)@@ a[0][@@ geshu1@@ +i]=@@ a[1]@@ [i]; return0; } int@@ hanshu4@@ () { inti; cout<<@@ a[0][@@ 0]; for(i=1;i<@@ geshu1@@ +@@ geshu2@@ ;i++)@@ cout<<""<<@@ a[0][i]; return0; } intmain() { hanshu1@@ (); hanshu2@@ (); hanshu3@@ (); hanshu4@@ (); return0; }  
c -1
h -1
intmain() { intn,i,j,@@ t,@@ First@@ =0,@@ FirstNum@@ ,@@ Second@@ =0,@@ SecondNum@@ ,@@ Third@@ =0,@@ ThirdNum@@ ; scanf("%d",&n); structStudent { int@@ Chinese@@ ; int@@ Math@@ ; int@@ Sum@@ ; int@@ Num@@ ; }@@ Student@@ [n@@ +1]; for(i=1;i<=n;i++) { scanf("%d%d%d",&@@ Student@@ [i].@@ Num@@ ,&@@ Student@@ [i].@@ Chinese@@ ,&@@ Student@@ [i].@@ Math@@ ); Student@@ [i].@@ Sum@@ =@@ Student@@ [i].@@ Chinese@@ +@@ Student@@ [i].@@ Math@@ ; } for(i=1;i<=n;i++) { if(@@ Student@@ [i].@@ Sum@@ >@@ First@@ ) { First@@ =@@ Student@@ [i].@@ Sum@@ ; FirstNum@@ =i; } } for(i=1;i<=n;i++) { if(@@ Student@@ [i].@@ Sum@@ >@@ Second@@ &&@@ Student@@ [i].@@ Sum@@ <=@@ First@@ &&i!=@@ FirstNum@@ ) { Second@@ =@@ Student@@ [i].@@ Sum@@ ; SecondNum@@ =i; } } for(i=1;i<=n;i++) { if(@@ Student@@ [i].@@ Sum@@ >@@ Third@@ &&@@ Student@@ [i].@@ Sum@@ <=@@ Second@@ &&i!=@@ SecondNum@@ &&i!=@@ FirstNum@@ ) { Third@@ =@@ Student@@ [i].@@ Sum@@ ; ThirdNum@@ =i; } } printf("%d%d\n",@@ FirstNum@@ ,@@ First@@ ); printf("%d%d\n",@@ SecondNum@@ ,@@ Second@@ ); printf("%d%d\n",@@ ThirdNum@@ ,@@ Third@@ ); }  
c -1
h -1
0

intmain(){ inti,j,@@ m,n,@@ k,@@ sum=0,@@ x,@@ q,@@ w,@@ e,@@ r; int@@ ss@@ [100]; intsz[100][100]; scanf("%d",&k); for(x=0;x@@ <k;@@ x@@ ++){ scanf("%d%d",&m,&n); for(i=0;i<m;i++){ for(j=0;j<n;j++){ scanf("%d",&sz@@ [i][j]@@ );} } q=0; w@@ =0; e=0; r=0; for(j=0;j<n;j++){ q=q@@ +sz@@ [0]@@ [j]@@ ;} for(j=0;j<n;j++){ w=@@ w@@ +@@ sz[m@@ -1]@@ [j]@@ ;} for(i=1;i<@@ m-1@@ ;i++){ e=@@ e+@@ sz[i]@@ [0]@@ ;} for(i=1;i<@@ m-1@@ ;i++){ r=r@@ +@@ sz[i]@@ [n-1@@ ];} sum=@@ q@@ +@@ w@@ +@@ e+@@ r; printf("%d\n",sum); } return0; }  
c -1
h -1
intmain() { inta[100][100]; inti,j,k,@@ m,n,@@ num,@@ sum=0; int*p=@@ NULL@@ ; cin>>num; for(k=1;k<=@@ num@@ ;k++) { cin>>m>>n; for(i=0;i<m;i++) for(j=0;j<n;j++) { cin>>*(*(a+i)+j); } if(m@@ ==1||@@ n@@ ==1){ for(i=0;i<m;i++) for(j=0;j<n;j++) { sum=sum+*(@@ *(a+i)@@ +j); } } else { for(i=0;i<n-1;i++) { sum=sum+*(@@ *a@@ +i); } for(i=0;i<m-1;i++) { sum=sum+*(@@ *(a+i)@@ +n-1); } for(i=1;i<n;i++) { sum=sum+*(@@ *(a@@ +m-1)@@ +i); } for(i=1;i<m;i++) { sum=sum+*@@ *(a@@ +i); } } cout<<sum<<endl; sum=0; } return0; }  
c -1
h -1
1


intmain() { inti,j,@@ p,@@ changdu1@@ ,@@ changdu2@@ ,@@ changdu3@@ ,@@ m; char@@ x@@ [256@@ ]={0},@@ y@@ [256@@ ]={0},@@ z[@@ 513@@ ]={0},@@ media@@ [256@@ ][@@ 256@@ ]={0}; scanf("%s",@@ x); scanf("%s",@@ y); scanf("%s",@@ z); changdu1@@ =strlen(@@ x); changdu2@@ =strlen(@@ y); changdu3@@ =strlen(@@ z); if(@@ changdu1@@ <@@ changdu2@@ ); else { for(i=0;i<@@ changdu1@@ -@@ changdu2@@ +1;i++) { for(j=0;j<@@ changdu2@@ ;j++) media@@ [i][j]=@@ x@@ [i+j@@ ]; } for(i=0;i<@@ changdu1@@ -@@ changdu2@@ +1;i++) { if(strcmp(@@ media@@ [i],@@ y)@@ ==0) { p=i; break; } } if(i==@@ changdu1@@ -@@ changdu2@@ +1) { printf("%s",@@ x); return0; } else { strcpy(@@ media@@ [p@@ ],@@ z); if(p@@ !=0) { for(i=0;i<p@@ ;i++) printf("%c",@@ x[i]); printf("%s",@@ media@@ [p@@ ]); if(@@ changdu2@@ >@@ changdu3@@ )@@ m=@@ changdu2@@ ; else@@ m=@@ changdu3@@ ; for(i=@@ p@@ +m@@ ;i<@@ changdu1@@ ;i++) printf("%c",@@ x[i]); printf("\n"); } else { printf("%s",@@ media@@ [p@@ ]); for(i=@@ p+@@ changdu3@@ ;i<@@ changdu1@@ ;i++) printf("%c",@@ x[i]); printf("\n"); } } } return0; }  
c -1
h -1
structpatient { charID[10]; intage; structpatient*next; }; structpatient*@@ insert@@ (structpatient@@ *head,@@ structpatient*@@ another@@ ) { structpatient*@@ p0@@ ,*@@ p1,*p2; p1=head; p0@@ =@@ another@@ ; if(@@ p0@@ ->age@@ <60) { while(@@ p1->next@@ !=NULL) { p2=p1; p1=p1->next; } p1->next=@@ p0; p0@@ ->next=NULL; } else { while(@@ p1->age@@ >=@@ p0@@ ->age@@ &&@@ p1->next@@ !=NULL) { p2=p1; p1=p1->next; } if(p1->age@@ >=@@ p0@@ ->age@@ ) { p1->next=@@ p0; p0@@ ->next=NULL; } else { if(@@ p1@@ ==@@ head@@ ) { head=@@ p0; p0->next@@ =p1; } else { p2->next=@@ p0; p0->next@@ =p1; } } } returnhead; } voidprint@@ (structpatient@@ *head) { structpatient@@ *p; p=head; while(p!=NULL) { printf("%s\n",p->@@ ID); p=p->next; } } voidmain() { intn,i; structpatient@@ *head,*p; scanf("%d",&n); head=@@ p=@@ (structpatient@@ *)malloc(len); scanf("%s%d",@@ p->@@ ID,&@@ p->@@ age); head@@ ->next=NULL; for(i=1;i<n;i++) { p=@@ (structpatient@@ *)malloc(len); scanf("%s%d",@@ p->@@ ID,&@@ p->@@ age); head=@@ insert@@ (head,@@ p); } print(head); }  
c -1
h -1
0

int@@ la@@ ,lb@@ ; voidread@@ (inta[],intb[]) { inti; scanf("%d%d",&@@ la@@ ,&@@ lb@@ ); for(i=0;i<@@ la;i++) scanf("%d",&a[i]); for(i=0;i<@@ lb@@ ;i++) scanf("%d",&b[i]); } voidsort@@ (inta[],intb[]) { inti; intt; for(i=0;i<@@ la@@ -1;i++) { if(a[i]>a[i+1]) { t=a[i]; a[i]=a[i+1]; a[i+1]=@@ t; if(i@@ !=0) {@@ i@@ =i@@ -2@@ ;} } } for(i=0;i<@@ lb@@ -1;i++) { if(b[i]>b[i+1]) { t=b[i]; b[i]=b[i+1]; b[i+1]=@@ t; if(i@@ !=0) {@@ i@@ =i@@ -2@@ ;} } } } voidcombine@@ (inta[],intb[]) { inti; for(i=0;i<@@ lb@@ ;i++) { a[@@ la@@ +i]=b[i]; } } voidprint@@ (inta[@@ ]) { inti; for(i=0;i<(@@ la@@ +lb@@ );i++) { if(i!=@@ (@@ la@@ +lb@@ -1)) printf("%d",a[i]); else printf("%d",a[i]); } } intmain() { intx[@@ 200],@@ y@@ [100]; read@@ (x,@@ y); sort(@@ x,@@ y); combine@@ (x,@@ y); print(@@ x); return0; }  
c -1
h -1
struct@@ Stu@@ { int@@ StuNo@@ ; int@@ Chinese@@ ; intmath; intsum; struct@@ Stu@@ *next; }; voidmain() { struct@@ Stu@@ *p,*@@ head,*@@ tail@@ ; intn,i,@@ max1,@@ max2@@ ,max3@@ ,@@ n1,n2,@@ n3@@ ; scanf("%d",&n); head=@@ tail@@ =NULL; for(i=1;i<=n;i++) { p=(struct@@ Stu@@ *)malloc(len); scanf("%d%d%d",&@@ p->@@ StuNo@@ ,&p->@@ Chinese@@ ,&p->@@ math); if(head@@ ==NULL) head=@@ tail@@ =p; else { tail@@ ->next=p; tail@@ =p@@ ;} p->@@ sum=@@ p->@@ Chinese@@ +p->@@ math; } max1=@@ head->@@ sum;@@ n1@@ =1; for(i=1;i<=n;i++) {@@ if(i@@ ==1)@@ p=head; else@@ p=p->next; if((@@ p->@@ sum@@ )>@@ max1@@ ){@@ max1@@ =p->@@ sum;@@ n1@@ =i;} } for(i=1;i<=n;i++) {@@ if(i@@ ==1)@@ p=head; else@@ p=p->next; if(i==@@ n1@@ )@@ p->@@ sum@@ =0;} max2=@@ head->@@ sum;@@ n2@@ =1; for(i=1;i<=n;i++) {@@ if(i@@ ==1)@@ p=head; else@@ p=p->next; if((@@ p->@@ sum@@ )>@@ max2@@ ){@@ max2=@@ p->@@ sum;@@ n2@@ =i;} } for(i=1;i<=n;i++) {@@ if(i@@ ==1)@@ p=head; else@@ p=p->next; if(i==@@ n2@@ )@@ p->@@ sum@@ =0;} max3=@@ head->@@ sum;@@ n3@@ =1; for(i=1;i<=n;i++) {@@ if(i@@ ==1)@@ p=head; else@@ p=p->next; if((@@ p->@@ sum@@ )>@@ max3@@ ){@@ max3=@@ p->@@ sum;@@ n3@@ =i;} } printf("%d%d\n%d%d\n%d%d\n",@@ n1,@@ max1,@@ n2,@@ max2@@ ,@@ n3@@ ,max3@@ ); }  
c -1
h -1
0

intmain() { inti,@@ l1,l2@@ ; float@@ s,@@ w,@@ L@@ ; char@@ x[@@ 501],@@ y@@ [501]; scanf("%f",&@@ w); scanf("%s",&@@ x); scanf("%s",&@@ y); s=0; l1=strlen(@@ x); l2=strlen(@@ y); if(l1!=l2@@ ){ printf("error"); } else{ for(i=0;i<l1;i++){ if(x@@ [i]!='A'&&@@ x@@ [i]!='T'&&@@ x@@ [i]!='C'&&@@ x@@ [i]!='G'){ printf("error"); break; } if(y@@ [i]!='A'&&@@ y@@ [i]!='T'&&@@ y@@ [i]!='C'&&@@ y@@ [i]!='G'){ printf("error"); break; } else{ if(x@@ [i]==@@ y@@ [i]){ s++; } } } L@@ =@@ l1; if(i==@@ l1@@ ){ if(s@@ /@@ L@@ >@@ w@@ ){ printf("yes"); } else{ printf("no"); } } } return0; }  
c -1
h -1
intmain() { intn,@@ j,k,@@ m@@ =1,@@ x,@@ a[1000]; scanf("%d",&n); if(n@@ ==0)@@ return0; scanf("%d",&x); printf("%d",x); a[0]=@@ x; for(j=1;j<n;j++) { scanf("%d",&x); k=0; while((@@ k@@ <m@@ )&&(@@ a[k]@@ !=@@ x@@ )) k++; if(k==@@ m@@ ){@@ a[m@@ ++]=@@ x; printf("%d",@@ x);} } return0; }  
c -1
h -1
0

intmain() { intn; cin>>n; int@@ shu; char@@ ppl@@ [27]; inta[@@ 26@@ ][n@@ +1]; memset(a,0,@@ sizeof(a)); for(inti=0;i<n;i++) { memset(@@ ppl@@ ,0,sizeof(@@ ppl@@ )); cin>>@@ shu; getchar(); cin.getline(@@ ppl@@ ,@@ 27@@ ,'@@ \n@@ '@@ ); for(intj@@ =0;@@ 'A'@@ <=@@ ppl@@ [j]&&@@ ppl@@ [j]<=@@ 'Z'@@ ;j++) { a[@@ (int)@@ ppl@@ [j]@@ -@@ (int)@@ 'A'@@ ][0]@@ ++; a[@@ (int)@@ ppl@@ [j]@@ -@@ (int)@@ 'A'@@ ][@@ a[@@ (int)@@ ppl@@ [j]@@ -@@ (int)@@ 'A'@@ ][0]@@ ]=@@ shu; } } intmax=0,@@ set@@ =0; for(inti=0;i<@@ 26;i++) { if(a[i]@@ [0]@@ >max) { max=@@ a[i][0]; set@@ =i; } } cout<<@@ (char)(@@ (int)@@ 'A'@@ +@@ set@@ )<<endl; cout<<max<<endl; for(inti=1;i<=@@ max@@ ;i++) cout<<a[@@ set@@ ]@@ [i]<<endl; return0; }  
c -1
h -1
intmain() { intn; scanf("%d",&n); inta[n@@ ],b[@@ n]; inti,j; for(i=0;i<n;i++) { scanf("%d",&a[i]); b[i]=1; } intm=0; for(i=0;i<n;i++) { for(j=0;j<i;j++) { if((a[j]@@ >=@@ a[i]@@ )&&(@@ b[j]@@ >=@@ b[i]@@ )) b[i]=b[j]+1; } if(b[i]>@@ m)@@ m=@@ b[i]; } printf("%d",m); }  
c -1
h -1
0

intmain() { chara[@@ 257@@ ],b[@@ 257@@ ],c[@@ 256]; cin.getline@@ (a,@@ 257@@ ); cin.getline@@ (b,@@ 257@@ ); cin.getline@@ (c,@@ 257@@ ); int@@ len1=strlen(@@ a)@@ ,len2@@ =strlen(@@ b@@ ),@@ len3@@ =strlen(c); inti,j,@@ count,@@ flag@@ =@@ -1,@@ m; for(i=0;i<=@@ len1@@ -1;i++) { m=0; if(a[i]==@@ b[m@@ ]) { count=0; for(j=i;j<=@@ i+@@ len2@@ -1;j++) { if(a[j]==@@ b[m@@ ++@@ ]) count++; } if(count==@@ len2) { flag@@ =i; break; } } } if(flag@@ ==-1) cout<<@@ a; else { for(i=@@ flag@@ ;i<=@@ flag@@ +len2@@ -1;i++) a[i]=@@ c@@ [i-@@ flag@@ ]; for(i=0;i<=@@ len1@@ -1;i++) cout<<a[i]; } return0; }  
c -1
h -1
structstu { intnum; int@@ ch; int@@ mt@@ ; intsum; structstu*next; }; voidmain() { structstu*@@ p1,*p2,*@@ p,*@@ head; intn,@@ max=0,@@ max2@@ =0,@@ max3@@ =0,@@ no@@ =0,@@ no2@@ =0,@@ no3@@ =0; scanf("%d",&n); p1=(struct@@ stu@@ *)malloc(LEN); scanf("%d%d%d",&p1->num,&p1->@@ ch@@ ,&p1->@@ mt@@ ); p1->sum=p1->@@ ch@@ +p1->@@ mt@@ ; head=p1; p2=p1; while(@@ n-1) { p1=(struct@@ stu@@ *)malloc(LEN); scanf("%d%d%d",&p1->num,&p1->@@ ch@@ ,&p1->@@ mt@@ ); p1->sum=p1->@@ ch@@ +p1->@@ mt@@ ; p2->next=p1; p2=p1; n--; } p2->next=NULL; p=head; while(p) { if(p->@@ sum@@ >max) { max=@@ p->@@ sum; no@@ =p->@@ num; } p=p->next; } printf("%d%d\n",@@ no@@ ,max); p=head; while(p) { if(p->@@ sum>@@ max2@@ &&@@ p->@@ sum<=@@ max@@ &&@@ p->@@ num@@ !=@@ no@@ ) { max2=@@ p->@@ sum; no2@@ =p->@@ num; } p=p->next; } printf("%d%d\n",@@ no2@@ ,@@ max2@@ ); p=head; while(p) { if(p->@@ sum>@@ max3@@ &&@@ p->@@ sum<=@@ max2@@ &&@@ p->@@ num@@ !=@@ no2@@ &&@@ p->@@ num@@ !=@@ no@@ ) { max3=@@ p->@@ sum; no3@@ =p->@@ num; } p=p->next; } printf("%d%d\n",@@ no3@@ ,max3@@ ); }  
c -1
h -1
0

intf(int@@ c@@ ,int@@ t); voidmain() { intn,@@ c; scanf("%d",&n); for(@@ ;n@@ >0@@ ;n@@ --) { scanf("%d",&@@ c); if(c@@ ==1||@@ c@@ ==@@ 2) printf("@@ 1@@ \n"); else printf("%d\n",@@ f(@@ c,@@ 2)); } } intf(int@@ c@@ ,int@@ t) { intcount@@ =1,i; for(i=@@ t@@ ;i<@@ c@@ ;i++) { if(c@@ %i==0) count+=@@ f(@@ c@@ /i,i); } if(i==@@ c)@@ returncount; elsereturn@@ 0@@ ; }  
c -1
h -1
main() { intk,i,j,@@ t=0,@@ max=0; intm@@ [25]; int@@ n[@@ 25]; scanf("%d\n",&@@ k); for(i=0;i<k;i++) scanf("%d",&@@ m[i]); for(i=0;i<k;i++) n@@ [i]=0; n@@ [k-1]@@ =1; for(i=k-2;i>=0;i--) { for(j=@@ k-1@@ ;j>i;j--) { if(m@@ [i]>=@@ m@@ [j]) { if(n@@ [i]<=@@ n@@ [j]) { n[i]=@@ n@@ [j]+1; } t++; } } if(t==0) n@@ [i]=1; t=0; } for(i=0;i<k;i++) { if(n@@ [i]>max) max=@@ n[i]; } printf("%d",max); }  
c -1
h -1
0

intmain() { inty,m,d,@@ x=0,@@ i; inta[@@ 12]={31,29,31,30,31,30,31,31,30,31,30,31}; intb[@@ 12]={31,28,31,30,31,30,31,31,30,31,30,31}; scanf("%d",&@@ y); scanf("%d",&m); scanf("%d",&@@ d); if((y%@@ 400==0)||(@@ y%100!=0@@ &&@@ y%@@ 4@@ ==0)) for(i=0;i<m-1;i++) x=x+@@ a[i]; else for(i=0;i<m-1;i++) x=x+@@ b[i]; x=x@@ +d; printf("%d",x); }  
c -1
h -1
intmain() {@@ long@@ i,j,@@ q,@@ e,@@ n,@@ w,@@ m,@@ s; int@@ a;@@ scanf("%d",&n); a=1; i=0; while(@@ a@@ !=0) {@@ i++; scanf("%d",&@@ a@@ );} q@@ =i; m=@@ n*@@ n; e@@ =i; w@@ =0; for(j=i;j<=@@ m;j++) {@@ scanf("%d",&a); if(a==@@ 255) w@@ ++; if(a==0) {@@ e@@ ++;@@ e=@@ e+@@ w@@ ;@@ w@@ =0;} } if((@@ q@@ %@@ n-@@ e@@ %@@ n)@@ >=0) {@@ s=(@@ (@@ e@@ -@@ e@@ %@@ n)@@ /@@ n-@@ (@@ q@@ -@@ q@@ %@@ n)@@ /@@ n-1)@@ *(@@ (@@ q@@ %@@ n-@@ e@@ %@@ n)@@ -1)@@ ;} else {@@ s=(@@ (@@ e@@ -@@ e@@ %@@ n)@@ /@@ n-@@ (@@ q@@ -@@ q@@ %@@ n)@@ /@@ n-1)@@ *(@@ (@@ e@@ %@@ n-@@ q@@ %@@ n)@@ -1)@@ ;} printf("%ld@@ ",@@ s); return0; }  
c -1
h -1
0

chars@@ [100][@@ 255@@ ]; intmain(){ intn,k,i,j,@@ b=0,@@ c=0,@@ d=0,@@ e=0,@@ flag=0; intnum[@@ 1000]; scanf("%d%d",&n,&k); for(i=0;i<n;i++){ scanf("%d",&@@ num[i]); } for(i=0;i<n@@ -1@@ &&@@ !@@ flag@@ ;i++){ for(j=i+1;j<n;j++){ if(num@@ [i]+@@ num@@ [j]==k){ flag=1; } } } if(flag@@ ==1){ printf("yes"); }else{ printf("no"); } return0; }  
c -1
h -1
intmain(){ intk,@@ s=0; intm,n; cin>>k; inta[100][100]; int@@ *p@@ =&@@ a[0][@@ 0]; for(intt@@ =0;t@@ <k;@@ t++){ cin>>m>>n; s=0; for(inti=0;i<@@ m;i++){ for(intj=0;j<n;j++){ cin>>*(*(a+i)+j); } } for(inti=0;i<n;i++){ s+=@@ *(*(a@@ +@@ 0)@@ +i); s+=@@ *(*(a@@ +m-1)@@ +i); } for(inti=0;i<@@ m;i++){ s+=@@ *(*(a+i)@@ +@@ 0); s+=@@ *(*(a+i)@@ +n-1); } s=s@@ -@@ **@@ a@@ -@@ *(*(a@@ +m-1)@@ +@@ n-1)@@ -@@ *(*(a@@ +@@ 0@@ )+@@ n-1)@@ -*(@@ *(a+@@ m-1@@ )); cout<<s<<endl; } }  
c -1
h -1
0

intmain() { introw,col,@@ array@@ [100][100],@@ i,j; cin>>row>>col; for(i=0;i<row;i++) for(j=0;j<col;j++) cin>>array[i][j]; for(i=0;i<col;i++) { for(j=0;j<=i;j++) { if(j@@ <row@@ )@@ cout<<array@@ [j]@@ [i-j@@ ]<<endl; } } for(j=1;j<@@ row@@ ;j++) { for(i=@@ col-1@@ ;i>=0;i--) { if(@@ col-1@@ +j@@ -i@@ <row) { cout<<@@ array[@@ col-1@@ -i@@ +j@@ ]@@ [i]<<endl; } } } return0; }  
c -1
h -1
intmain() { inta[@@ 10000@@ ],i,j,@@ n,@@ t,@@ count; scanf("%d",&n); for(i=0;i<n;i++) { scanf("%d",&a[i]); } for(i=0;i<n;i++) {@@ t@@ =0;@@ count=0; for(j=i@@ ;j>=0;j--) {@@ count++; if(a[i]==a[j]@@ &&(@@ i@@ !=@@ j@@ )) {@@ t=1; break;} } if(t@@ ==0&&@@ count@@ ==1) { printf("%d",@@ a[i]);} elseif((@@ t@@ ==0)&&(@@ count@@ !=1@@ )) { printf("%d",a[i]); } } return0; }  
c -1
h -1
0

intmain() { inti,j,k,n,@@ p,@@ m,@@ c,@@ a[@@ 50@@ ],b[@@ 50]; scanf("%d",&n); p=0; for(i=0;i<n;i++)@@ scanf("%d",&a[i]); for(i=0;i<n;i++)@@ b[i]=1; for(i=1;i<n;i++) { for(j=0;j<i;j++) if(a[i]<=@@ a[j]) if(b[i]@@ <@@ b[j]@@ +1)@@ b[i]=b[j]+1; } for(i=0;i<n;i++) if(p@@ <@@ b[i]@@ )@@ p=@@ b[i]; printf("%d",@@ p); }  
c -1
h -1
intmain() {@@ printf("@@ 3@@ \n@@ ");@@ printf("@@ 2@@ \n@@ ");@@ printf("@@ 0@@ \n@@ ");@@ printf("@@ 0@@ \n@@ ");@@ printf("@@ 1@@ \n@@ ");@@ printf("@@ 1@@ \n@@ ");@@ printf("@@ 0@@ \n@@ ");@@ printf("@@ 2@@ \n@@ ");@@ printf("@@ 2@@ \n@@ ");@@ printf("@@ 6@@ \n@@ ");@@ printf("@@ 11@@ \n@@ ");@@ return0;}  
c -1
h -1
0

intmain(){ intk,@@ m,n; intsz[100][100]; inti,@@ r,@@ sum1@@ ,@@ sum2@@ ,sum; scanf("%d",&k); for(intj=1;j<=@@ k@@ ;j++){ scanf("%d%d",&m,&n); for(i=0;i<m;i++){ for(r=0;r@@ <n;@@ r@@ ++){ scanf("%d",&@@ sz[i]@@ [r@@ ]); } } sum1@@ =0; for(int@@ q@@ =0;q@@ <n;@@ q@@ ++){ sum1@@ +=@@ sz[0][@@ q@@ ]+sz[@@ m-1][@@ q@@ ]; } sum2@@ =0; for(int@@ w@@ =0;@@ w@@ <m;@@ w@@ ++){ sum2@@ +=@@ sz[@@ w@@ ][@@ n-1@@ ]+sz[@@ w@@ ][0]; } sum=@@ sum1@@ +@@ sum2@@ -@@ sz[0][@@ 0]-@@ sz[0][@@ n-1]-@@ sz[@@ m-1][0]-@@ sz[@@ m-1][@@ n-1]; printf("%d\n",sum); } return0; }  
c -1
h -1
intmain() { int@@ flag@@ [100]={0},@@ i,n,@@ temp; cin>>n; cin>>@@ temp; flag@@ [@@ temp@@ ]=1; cout<<@@ temp; for(i=1;i<n;i++) { cin>>@@ temp; if(flag@@ [@@ temp@@ ]==0) { cout<<""<<@@ temp; flag@@ [@@ temp@@ ]=1; } } return0; }  
c -1
h -1
0

voidmain() { char@@ st@@ [256],@@ sub[256],@@ rep@@ [256]; scanf("%s%s%s",@@ st@@ ,@@ sub,@@ rep); int@@ lenst@@ ,@@ lensub@@ ,@@ i,j; lenst@@ =strlen(@@ st@@ ); lensub@@ =strlen(@@ sub); for(i=0;i<=@@ lenst@@ -@@ lensub@@ ;i++) { intcount=0; if(@@ lensub@@ !=1) { if(@@ st@@ [i]==@@ sub@@ [0]) { for(j=i+1;j<@@ i+@@ lensub@@ ;j++) { if(@@ st@@ [j]!=@@ sub@@ [j-i@@ ]) break; count++; } } if(count==@@ lensub@@ -1) { for(j=i;j<i+@@ lensub@@ ;j++) { st@@ [j]=@@ rep@@ [j-i@@ ]; } break; } } else { if(@@ st@@ [i]==@@ sub@@ [0]) { st@@ [i]=@@ rep@@ [0]; break; } } } printf("%s",@@ st@@ ); }  
c -1
h -1
ints[@@ 10000@@ ][@@ 10000]; voidmain() { intn,i,j,@@ a1,@@ b1,@@ a2,@@ b2@@ ,@@ sum,@@ flag; scanf("%d",&n); for(i=0;i<n;i++) for(j=0;j<n;j++) scanf("%d",&s@@ [i][j]); for(i=0;i<n;i++) { flag=0; for(j=0;j<n;j++) { if(s@@ [i][j]==0) { a1@@ =i; b1@@ =j; flag=1; break; } } if(flag@@ ==1)break; } for(i=n-1@@ ;i>0;i--) { flag=0; for(j=n-1@@ ;j>0;j--) { if(s@@ [i][j]==0) { a2@@ =i; b2@@ =j; flag=1; break; } } if(flag@@ ==1)break; } sum=(@@ a2-a1@@ -1)*(@@ b2-b1@@ -1); printf("%d",sum); }  
c -1
h -1
0

intmain(intargc,char*argv[]) { inti,@@ a[@@ 16],@@ s=0,@@ j@@ ;@@ scanf("%d",&a[0]); while(@@ a[0]@@ !=-1) { for(i=1;i<=@@ 15;i++) {@@ scanf("%d",&a[i]); if(a[i]==0)break; for(j=0;j<=i;j++) if(a[j]==2*@@ a[i]@@ ||@@ a[j]@@ ==0@@ .@@ 5@@ *@@ a[i])@@ s@@ +=1; }@@ printf("%d\n",s); s=0; scanf("%d",&a[0]); } return0; }  
c -1
h -1
structstudent { intnum; int@@ liter@@ ; intmath; inttotal; }; intmain() { inti,j,k,@@ n; structstudent@@ a[@@ 100000],@@ n1,n2,@@ n3@@ ; scanf("%d",&n); scanf("%d%d%d",&@@ a[0].@@ num,&@@ a[0].@@ liter@@ ,&@@ a[0].@@ math); a[0].@@ total=@@ a[0].@@ liter@@ +@@ a[0].@@ math; n1@@ =@@ n2@@ =@@ n3@@ =@@ a[0]; for(i=1;i<n;i++) { scanf("%d%d%d",&a[i].@@ num,&@@ a[i].@@ liter@@ ,&a[i].@@ math); a[i].@@ total=@@ a[i].@@ liter@@ +a[i].@@ math; if(a[i].@@ total>@@ n1@@ .@@ total) { n3@@ =@@ n2; n2@@ =@@ n1@@ ; n1@@ =@@ a[i]; } elseif(a[i].@@ total>@@ n2@@ .@@ total) { n3@@ =@@ n2; n2@@ =@@ a[i]; } elseif(a[i].@@ total>@@ n3@@ .@@ total) n3@@ =@@ a[i]; } printf("%d%d\n",@@ n1@@ .num,@@ n1@@ .@@ total); printf("%d%d\n",@@ n2@@ .num,@@ n2@@ .@@ total); printf("%d%d",@@ n3@@ .num,@@ n3@@ .@@ total); return0; }  
c -1
h -1
0

inta[@@ 10000@@ ],b[@@ 10000]; int@@ A@@ ,@@ B@@ ; voidread@@ () { inti; cin>>@@ A@@ >>@@ B@@ ; for(i=0;i<@@ A@@ ;i++) cin>>a[i]; for(i=0;i<@@ B@@ ;i++) cin>>b[i]; } voidsort@@ () { inti,j,temp; for(i=0;i<@@ A@@ -1;i++) for(j=i+1;j<@@ A@@ ;j++) { if(a[j]@@ <@@ a[i]@@ ){@@ temp=@@ a[i];a[i]=@@ a[j];a[j]=@@ temp;} } for(i=0;i<@@ B@@ -1;i++) for(j=i+1;j<@@ B@@ ;j++) { if(b[j]@@ <@@ b[i]@@ ){@@ temp=@@ b[i]@@ ;@@ b[i]=b[j]@@ ;@@ b[j]=@@ temp;} } } void@@ conbine@@ () { inti; for(i=0;i<@@ A@@ ;i++) cout<<a[i]@@ <<''; for(i=0;i<@@ B@@ -1;i++) cout<<b[i]@@ <<''; cout<<b[@@ B@@ -1]; } intmain() { read(); sort@@ (); conbine@@ (); return0; }  
c -1
h -1
int@@ month@@ [2][@@ 12]={31,@@ 28@@ ,31,30,31,30@@ ,31,30@@ ,31@@ ,31,30@@ ,31@@ , 31,@@ 29@@ ,31,30,31,30@@ ,31,30@@ ,31@@ ,31,30@@ ,31@@ }; intmain() { intyear,@@ monthq@@ ,@@ day; cin>>year>>@@ monthq@@ >>@@ day; int@@ ans=0; for(inti=1;i<@@ monthq@@ ;i++) { int@@ xx@@ ; if(year%@@ 400==0||(@@ year%4==0&&year%100!=0@@ )) xx@@ =1; else@@ xx@@ =0; ans@@ +=@@ month@@ [@@ xx@@ ]@@ [i-1]; } ans@@ +=@@ day; cout<<ans@@ <<endl; return0; }  
c -1
h -1
0

intmain() { intk,m,n,i,j,@@ l,@@ s; intsz[100][100]; scanf("%d",&k); int*@@ sf@@ =@@ (int*)malloc(sizeof(int)@@ *@@ k); for(i=0;i<k;i++) { s=0; scanf("%d%d",&m,&n); for(j=0;j<m;j++) { for(l=0;l<n;l++) { scanf("%d",&sz@@ [j]@@ [l]); } } if(m==1) { for(l=0;l<n;l++) { s+=@@ sz[0][@@ l@@ ]; } } elseif(n@@ ==1) { for(j=0;j<m;j++) { s+=@@ sz[j]@@ [0]; } } else { for(j=0;j<m;j++) { s+=@@ sz[j]@@ [0]+@@ sz[j]@@ [n-1]; } for(l=0;l<n;l++) { s+=@@ sz[0][@@ l@@ ]+sz[@@ m-1][@@ l@@ ]; } s=s@@ -@@ sz[0][@@ 0]-@@ sz[0][@@ n-1]-@@ sz[@@ m-1][0]-@@ sz[@@ m-1][@@ n-1]; } sf@@ [i]=@@ s; } for(i=0;i<k;i++) { printf("%d\n",@@ sf@@ [i]); } return0; }  
c -1
h -1
int@@ bd@@ (@@ char*@@ hed@@ ,char*@@ zi@@ ,int@@ m) { int@@ val@@ =0,@@ j; char*@@ t1@@ ,*@@ t2@@ ; for(@@ t1@@ =@@ hed@@ ,@@ t2@@ =@@ zi@@ ,j@@ =0;j<@@ m;@@ t1@@ ++,@@ t2@@ ++@@ ,j@@ ++) {if(@@ *@@ t1@@ ==@@ *@@ t2@@ )@@ val@@ =1; else{@@ val@@ =0;@@ break;} } return(@@ val@@ ); } voidmain() { char*@@ yuan@@ ,*@@ zi@@ ,*@@ rep@@ ,*@@ med@@ ; yuan@@ =(char*)malloc(@@ 260@@ *@@ sizeof(@@ char@@ )); zi@@ =(char*)malloc(@@ 260@@ *@@ sizeof(@@ char@@ )); rep@@ =(char*)malloc(@@ 260@@ *@@ sizeof(@@ char@@ )); med@@ =(char*)malloc(@@ 260@@ *@@ sizeof(@@ char@@ )); gets(@@ yuan@@ ); gets(@@ zi@@ ); gets(@@ rep); char*@@ p; intn,m,@@ zhi@@ =0,@@ t; for(p=@@ yuan@@ ,@@ n@@ =0;@@ *p@@ !='\0'@@ ;p@@ ++,@@ n@@ ++@@ ); for(p=@@ zi@@ ,@@ m@@ =0;@@ *p@@ !='\0'@@ ;p@@ ++)@@ m++; for(p=@@ rep@@ ,@@ t@@ =0;@@ *p@@ !='\0'@@ ;p@@ ++)@@ t++; for(p=@@ yuan@@ ;p<@@ yuan@@ +@@ n-@@ m@@ +1@@ ;p++) if(@@ bd@@ (p,@@ zi@@ ,@@ m)@@ ==1){@@ zhi@@ =1;break;} if(@@ zhi@@ ==1){@@ strcpy(@@ med@@ ,@@ p+@@ m); strcpy(@@ p,@@ rep); strcpy(@@ p+@@ t,@@ med@@ );} puts(@@ yuan@@ ); }  
c -1
h -1
0

struct@@ bo@@ { charid[10]; char@@ au@@ [100]; }; intmain(){ intn,i,j,@@ max; char@@ maxa@@ ; struct@@ bo@@ *@@ book@@ ; int@@ auth@@ [26]; memset(@@ auth@@ ,@@ 0,@@ sizeof(int@@ )*@@ 26@@ ); scanf("%d",&n); book@@ =(struct@@ bo@@ *)malloc(sizeof(struct@@ bo@@ )*n); for(i=0;i<n;i++){ scanf("%s%s",@@ book[i].@@ id,@@ book[i].@@ au); for(j=0;@@ book[i].@@ au@@ [j]@@ ;j++){ auth@@ [@@ book[i].@@ au@@ [j]@@ -'A']++; } } max=0; for(i=0;i<26;i++) { if(max<@@ auth@@ [i]){ max=@@ auth@@ [i]; maxa@@ =i@@ +'A'@@ ; } } printf("%c\n",@@ maxa@@ ); printf("%d\n",max); for(i=0;i<n;i++){ if(@@ strchr(@@ book[i].@@ au@@ ,@@ maxa@@ )) printf("%s\n",@@ book[i].@@ id); } return0; }  
c -1
h -1
intmain(){ char@@ su@@ [100],@@ zu@@ [100],@@ tu@@ [100]; gets(@@ su@@ ); gets(@@ zu@@ ); gets(@@ tu@@ ); inti,j,k,@@ t; for(i=0;i<strlen(@@ su@@ );i++){ for(k@@ =0,@@ j@@ =i;@@ su@@ [j]==@@ zu@@ [k]@@ ;j++@@ ,k++) if(k==@@ strlen(@@ zu@@ )) break; if(k==@@ strlen(@@ zu@@ )) break; } if(j!=@@ i@@ -1){ for(t=0;t@@ <i@@ ;t++) printf("%c",@@ su@@ [t@@ ]); printf("%s",@@ tu@@ ); for(t@@ =j@@ ;t@@ <@@ strlen(@@ su@@ );@@ t++) printf("%c",@@ su@@ [t@@ ]@@ );} else printf("%s",@@ su@@ ); return0; }  
c -1
h -1
0

intmain() { intn,k,i,j,@@ c,@@ a[@@ 1000],b[1000]; scanf("%d%d",&n,&k); j=0; c=0; for(i=0;i<n;i++){ scanf("%d",&a[i]); b[j]=@@ k-@@ a[i]; j++; } for(j=0;j<n;j++){ for(i=0;i<n;i++){ if(b[j]@@ ==@@ a[i]@@ ){ c++; } } } if(c@@ !=0){ printf("yes"); } else{ printf("no"); } return0; }  
c -1
h -1
intmain() { intn,i,@@ a[@@ 20001@@ ]={0},@@ j,@@ l; scanf("%d",&n); for(i=0;i<n;i++) { scanf("%d",&a[i]); } for(i=0;i<n;i++) { for(l@@ =(@@ i@@ +1@@ );@@ l@@ <n;@@ l++) { if(a[@@ l@@ ]==@@ a[i]) { for(j@@ =(@@ l@@ +1)@@ ;j<n;j++) { a@@ [j-1]=@@ a[j]; } l@@ -=@@ 1; n--; } } } for(i=0;i<n;i++) { if(i==0) printf("%d",a[i]); else printf("%d",a[i]); } return0; }  
c -1
h -1
0

voidmain() { intn,i,j,@@ l,@@ max,@@ p; inta[1000]; scanf("%d",&n); structbook { intm; charc[@@ 27]; }; structbook@@ b[@@ 1000]; for(i=0;i<n;i++) { scanf("%d",&@@ b[i].@@ m); scanf("%s",@@ b[i].@@ c); } for(i=0;i<26;i++) a[i]=0; for(i=0;i<n;i++) { l=strlen(@@ b[i].@@ c); for(j=0;j<l;j++) a[@@ b[i].@@ c[j]@@ -'A']++; } max=@@ a[0]; for(i=0;i<26;i++) { if(a[i]>max) max=a[i]; } for(i=0;i<26;i++) { if(max@@ ==@@ a[i]) p=i; } p=p@@ +'A'@@ ; printf("%c\n",@@ p); printf("%d\n",max); for(i=0;i<n;i++) { l=strlen(@@ b[i].@@ c); for(j=0;j<l;j++) { if(b[i].@@ c@@ [j]==@@ p) printf("%d\n",b[i].@@ m); } } }  
c -1
h -1
intmain(){ chara[@@ 1000],b[1000]; double@@ w; intcount@@ =0,@@ lena@@ ,@@ lenb@@ ; scanf("%lf",&@@ w); cin>>a; cin>>@@ b; lena@@ =strlen(a); lenb@@ =strlen(b); if(@@ lena@@ !=@@ lenb@@ )@@ printf("error"); else{ inti,j,@@ k=0; for(i=0;i<@@ lena@@ ;i++){ if(!@@ ((@@ a[i]=='@@ A'||a[i]=='@@ C'||@@ a[i]=='@@ G'||@@ a[i]=='@@ T')&&(@@ b[i]=='@@ A'||@@ b[i]=='@@ G'||@@ b[i]=='@@ C'||@@ b[i]=='@@ T')@@ )){ printf("error@@ "@@ )@@ ;k@@ =1@@ ;break; } } if(k@@ ==0){ for(j=0;j<@@ lena@@ ;j++){ if(a[j]==@@ b[j]@@ )@@ count++; } double@@ what@@ ; what@@ =(double)@@ count@@ /@@ lena@@ ; if(@@ what@@ >=@@ w@@ )@@ printf("yes"); elseprintf("no"); } } return0; }  
c -1
h -1
0

structpatient {@@ charID[10]; intage; int@@ a6@@ ; char@@ Id@@ [10]; }; voidmain() {@@ structpatient@@ bin@@ [N]; intn,@@ mid@@ ; chars[@@ 10]; inti=0,j=0,@@ k=0; charc[@@ 10]; scanf("%d",&n); for(i=0;i<n;i++) scanf("%s%d",&@@ bin@@ [i].@@ ID,&@@ bin@@ [i].age); for(i=0;i<n;i++) {if(@@ bin@@ [i].age>=60) {@@ bin@@ [j].@@ a6@@ =@@ bin@@ [i].age; strcpy(@@ bin@@ [j].@@ Id@@ ,@@ bin@@ [i].ID); j++; bin@@ [i].age@@ =0; } } for(k=1;k<@@ j@@ ;k++) {@@ for(i=0;i<j@@ -@@ k;i++) if(@@ bin@@ [i].@@ a6@@ <@@ bin@@ [i+1].@@ a6@@ ) {@@ mid@@ =@@ bin@@ [i].@@ a6@@ ; bin@@ [i].@@ a6@@ =@@ bin@@ [i+1].@@ a6@@ ; bin@@ [i+1].@@ a6@@ =@@ mid@@ ; strcpy(@@ c,@@ bin@@ [i].@@ Id@@ ); strcpy(s,@@ bin@@ [i+1].@@ Id@@ ); strcpy(@@ bin@@ [i+1].@@ Id@@ ,@@ c); strcpy(@@ bin@@ [i].@@ Id@@ ,@@ s); } } for(i=0;i<j;i++) printf("%s\n",@@ bin@@ [i].@@ Id@@ ); for(i=0;i<n;i++) {if(@@ bin@@ [i].age@@ !=0) printf("%s\n",@@ bin@@ [i].ID); } }  
c -1
h -1
intmain() { charstring@@ [100][100]; intage@@ [100]; int@@ age1@@ [100]; inta[100]; intmax@@ ,@@ n,@@ l,@@ i,j,k,@@ x; scanf("%d",&n); for(i=0;i<n;i++) scanf("%s%d",@@ string@@ [i],&@@ age[i]); j=0; for(i=0;i<n;i++) { if(age[i]@@ >=60) { age1@@ [j]=@@ age[i]; age@@ [i]=0; a[j]@@ =i; j++; } } for(i=0;i<j;i++) { max=0; x=0; for(k=0;k<j@@ ;k++) { if(max<@@ age1@@ [k]) { max=@@ age1@@ [k]; x=@@ k; } } printf("%s\n",@@ string@@ [@@ a[x@@ ]@@ ]); age1@@ [x@@ ]=0; } for(i=0;i<n;i++) if(age[i]@@ !=0) printf("%s\n",@@ string@@ [i]); getchar(); getchar(); }  
c -1
h -1
1


struct@@ a { charid[20]; intage; struct@@ a@@ *next; }; struct@@ a*@@ insert@@ (struct@@ a@@ *head,@@ struct@@ a*@@ s) { struct@@ a*@@ p0@@ ,*@@ p1,*p2; p1=head; p0@@ =@@ s; if(head@@ ==NULL) {@@ head=@@ p0@@ ;@@ p0->next@@ =NULL@@ ;} else{ while((@@ p0@@ ->age@@ <=@@ p1->age@@ )&&(@@ p1->next@@ !=NULL@@ )) {@@ p2@@ =p1;@@ p1=p1->next@@ ;} if(@@ p0@@ ->age@@ >@@ p1->age@@ ) { if(head@@ ==@@ p1@@ )@@ head=@@ p0; else@@ p2->next=@@ p0; p0->next@@ =p1; } else{@@ p1->next=@@ p0@@ ;@@ p0->next@@ =NULL@@ ;} } return(head); } struct@@ a*@@ creat@@ (struct@@ a@@ *head,@@ struct@@ a*@@ s) { struct@@ a*@@ t; if(head@@ ==NULL) {@@ head=@@ s@@ ;s@@ ->next@@ =NULL@@ ;} else {@@ for(@@ t=@@ head@@ ;t@@ ->next@@ !=NULL;@@ t=t@@ ->next@@ ); t@@ ->next=@@ s; s@@ ->next=NULL; } return(head); } voidmain() { struct@@ a*@@ head1@@ ,*@@ head2@@ ,*@@ s@@ ,*p; inti,n; scanf("%d",&n); head1@@ =NULL; head2@@ =NULL; for(i=0;i<=n-1;i++) {@@ s=@@ LEN@@ ; scanf("%s%d",@@ s@@ ->@@ id,&@@ s@@ ->age@@ ); s@@ ->next=NULL; if(s@@ ->age@@ >=60) head1@@ =@@ insert@@ (@@ head1@@ ,@@ s); if(s@@ ->age@@ <60) head2@@ =@@ creat@@ (@@ head2@@ ,@@ s); } for(p=@@ head1@@ ;p!=NULL;p=p->next) printf("%s\n",p->id); for(p=@@ head2@@ ;p!=NULL;p=p->next) printf("%s\n",p->id); }  
c -1
h -1
intmain(){ intyear,@@ mouth@@ ,@@ day,@@ n; scanf("%d%d%d",&year,&@@ mouth@@ ,&@@ day); if(year%@@ 4@@ ==0){ switch(@@ mouth@@ ){ case1:@@ n=@@ day@@ ;printf("%d",@@ n@@ );break; case2:@@ n=31+@@ day@@ ;printf("%d",@@ n@@ );break; case3:@@ n=@@ 60@@ +day@@ ;printf("%d",@@ n@@ );break; case4:@@ n=@@ 91@@ +day@@ ;printf("%d",@@ n@@ );break; case5:@@ n=@@ 121@@ +day@@ ;printf("%d",@@ n@@ );break; case6:@@ n=@@ 152@@ +day@@ ;printf("%d",@@ n@@ );break; case7:@@ n=@@ 182@@ +day@@ ;printf("%d",@@ n@@ );break; case8:@@ n=@@ 213@@ +day@@ ;printf("%d",@@ n@@ );break; case9:@@ n=@@ 244@@ +day@@ ;printf("%d",@@ n@@ );break; case10:@@ n=@@ 274@@ +day@@ ;printf("%d",@@ n@@ );break; case11:@@ n=@@ 305@@ +day@@ ;printf("%d",@@ n@@ );break; case12:@@ n=@@ 335@@ +day@@ ;printf("%d",@@ n);@@ break;}} else{ switch(@@ mouth@@ ){ case1:@@ n=@@ day@@ ;printf("%d",@@ n@@ );break; case2:@@ n=31+@@ day@@ ;printf("%d",@@ n@@ );break; case3:@@ n=@@ 59@@ +day@@ ;printf("%d",@@ n@@ );break; case4:@@ n=@@ 90@@ +day@@ ;printf("%d",@@ n@@ );break; case5:@@ n=@@ 120@@ +day@@ ;printf("%d",@@ n@@ );break; case6:@@ n=@@ 151@@ +day@@ ;printf("%d",@@ n@@ );break; case7:@@ n=@@ 181@@ +day@@ ;printf("%d",@@ n@@ );break; case8:@@ n=@@ 212@@ +day@@ ;printf("%d",@@ n@@ );break; case9:@@ n=@@ 243@@ +day@@ ;printf("%d",@@ n@@ );break; case10:@@ n=@@ 273@@ +day@@ ;printf("%d",@@ n@@ );break; case11:@@ n=@@ 304@@ +day@@ ;printf("%d",@@ n@@ );break; case12:@@ n=@@ 334@@ +day@@ ;printf("%d",@@ n);@@ break;}} return0; }  
c -1
h -1
0

intmain() { intn,i,@@ h,@@ b,@@ c@@ ,j,@@ k; inta[1000]; b=0; scanf("%d%d",&n,&@@ h); for(i=1;i<=n;i++){ scanf("%d",&a[i]); } for(j=1;j<=n;j++){ for(k=j+1@@ ;k<=@@ n;k++){ if(a[j]@@ +@@ a[k]==@@ h@@ ){ printf("yes"); b=1; goto@@ A@@ ; } } } A@@ : if(b@@ ==0)@@ printf("no"); return0; }  
c -1
h -1
voidmain() { inta[20000]; inti=0,@@ n,@@ j,k,@@ m=1; scanf("%d",&n); for(k=0;k<n;k++) scanf("%d",&@@ a[k]); k=0; while(i<n) { for(j=0;j<@@ i@@ ;) { if(a[i]==a[j]) { m=0; break; } else@@ j++; } if(m==1) { a[k]=@@ a[i]; i@@ ++,@@ k++; } else@@ i@@ ++,@@ m=1; } for(i=0;i<@@ (k@@ -1);i++) printf("%d",a[i]); printf("%d\n",@@ a[k@@ -1]); }  
c -1
h -1
0

int@@ function@@ (inta,int@@ m) { intsum@@ =1,i; if(a@@ >@@ m) return0; else { for(i=a@@ ;i<@@ m;i++) { if(m@@ %i==0) sum=sum+@@ function@@ (i,@@ m@@ /i); else continue; } returnsum; } } voidmain() { intn,i,@@ m@@ [100]; scanf("%d",&n); for(i=0;i<=n-1;i++) { scanf("%d",&@@ m[i]); } for(i=0;i<=n-1;i++) { printf("%d\n",@@ function@@ (2,@@ m[i]@@ )); } }  
c -1
h -1
intmain() { int@@ n[@@ 25@@ ],i,j,@@ count; while(@@ cin>>n@@ [1@@ ],@@ n@@ [1]@@ !=-1) { count=0; for(i=2@@ ;@@ cin>>n@@ [i],@@ n[i]@@ !=0;i++) { for(j=1;j<i;j++) { if(n@@ [i]==@@ 2*@@ n@@ [j]@@ ||@@ n[i]@@ *2==@@ n@@ [j]) { count++; } } } cout<<count<<endl; } return0; }  
c -1
h -1
0

intmain(){ double@@ m,n; inti,@@ l,@@ s=0,@@ q=0; chara[@@ 550@@ ],b[@@ 550@@ ]; scanf("%lf",&@@ m); scanf("%s",a); scanf("%s",b); l@@ =strlen(a); if(l@@ !=strlen(b@@ )){ q=1; } for(i=0;i<l;i++){ if(a[i]!='A'&&a[i]!='T'&&a[i]!='C'&&a[i]!='@@ G'){ q=1; } if(@@ b[i]!='A'&&b[i]!='T'&&b[i]!='C'&&b[i]!='@@ G'){ q=1; } } if(q@@ ==0){ for(i=0;i<l;i++){ if(a[i]==b[i]){ s@@ +=1; } } n@@ =1@@ .@@ 00@@ *@@ s/@@ l; if(m@@ <@@ n){ printf("yes"); }else{ printf("no"); } } if(q@@ ==1){ printf("error"); } return0; }  
c -1
h -1
intmain() { intnum@@ (intn,int@@ *p@@ ); intn; inti=0; int*p; scanf("%d",&n); p=@@ (int*)malloc(sizeof(int)*n); for(i=0;i<n;i++)@@ scanf("%d",p@@ +i); printf("%d",@@ num@@ (n,@@ p@@ )); getchar(); getchar(); getchar(); } intnum@@ (intn,int@@ *p@@ ) { inti,j,@@ tem@@ =0,@@ a=0; int*@@ max=@@ (int*)malloc(sizeof(int)*n); max@@ [n-1@@ ]=1; for(i=n-2;i>=0;i--) { tem@@ =0; for(j=n-1;j>i;j--) { if(p@@ [i]>=@@ p@@ [j]) { if(@@ tem@@ <@@ max@@ [j]) tem@@ =@@ max@@ [j]; } } max@@ [i]=@@ tem@@ +1; } a=0; for(i=0;i<n;i++) if(max@@ [i]>@@ a)@@ a=@@ max@@ [i]; return@@ a; }  
c -1
h -1
0

intmain(){ doublen; scanf("%lf",&n); charzfc@@ [500],@@ sz[@@ 500]; scanf("%s%s",@@ zfc@@ ,@@ sz@@ ); int@@ a=strlen(@@ zfc); int@@ b=strlen(@@ sz@@ ); intm; if(a!=@@ b@@ ){@@ printf("error");} else{ m=@@ a; intk=0; inty; for(y=0;y@@ <m;@@ y@@ ++){ if(@@ zfc@@ [y@@ ]!='@@ A'&&@@ zfc@@ [y@@ ]!='@@ T'&&@@ zfc@@ [y@@ ]!='@@ C'&&@@ zfc@@ [y@@ ]!='@@ G'&&@@ zfc@@ [y@@ ]!='\0'@@ ){ printf("error"); k=1; break;} if(sz[@@ y@@ ]!='@@ A'&&@@ sz[@@ y@@ ]!='@@ T'&&@@ sz[@@ y@@ ]!='@@ C'&&@@ sz[@@ y@@ ]!='@@ G'&&@@ zfc@@ [y@@ ]!='\0'@@ ){ printf("error"); k=1; break;} } if(k@@ ==0){ inti,@@ c=0; for(i=0;i<m;i++){ if(@@ zfc@@ [i]==@@ sz[i]@@ ){ c++; } } double@@ s=@@ c@@ *1.0/@@ m; if(s@@ >@@ n@@ ){printf("yes");} else{printf("no");} } } return0; }  
c -1
h -1
intmain() { char@@ sz@@ [100]; scanf("%s",@@ sz@@ ); inti,j,@@ m,n,@@ len,@@ len1,len2@@ ; char@@ as@@ [100],@@ az@@ [100]; scanf("%s%s",@@ as@@ ,@@ az@@ ); len=strlen(@@ sz@@ ); len1=strlen(@@ as@@ ); len2=strlen(@@ as@@ ); for(i=0;i<len@@ ;i++){ for(j=0;j<len2@@ ;j++@@ ,i@@ ++){ if(sz[i]@@ !=@@ as@@ [j]@@ )break; if(j==@@ len2@@ -1){ for(m@@ =i@@ -len2@@ +1,@@ n@@ =0;n@@ <@@ len2@@ ;n@@ ++,@@ m@@ ++){ sz[m@@ ]=@@ az@@ [n]; } } if(j==@@ len2@@ -1){ i=@@ len; } } } printf("%s",@@ sz@@ ); return0; }  
c -1
h -1
0

intmain() { charstr@@ [256]; char@@ sta@@ [256]; char@@ stb@@ [256]; char@@ res@@ [@@ 512@@ ]=@@ ""@@ ; gets(str); gets(@@ sta@@ ); gets(@@ stb@@ ); char*@@ a=@@ str@@ ; char*@@ b=0; if(@@ b=@@ strstr@@ (a,@@ sta@@ )) { strncat@@ (@@ res@@ ,@@ a,@@ b-@@ a); strcat(@@ res@@ ,@@ stb@@ ); a=@@ b+@@ strlen(@@ sta@@ ); } strcat(@@ res@@ ,@@ a); printf("%s\n",@@ res@@ ); return0; }  
c -1
h -1
void@@ adds@@ (@@ char*@@ a,@@ char*@@ b); void@@ addc@@ (@@ char*@@ a,@@ char@@ c); intmain() { chars[@@ 256]; char@@ subs@@ [256]; char@@ replace@@ [256]; char@@ result@@ [@@ 1000@@ ]@@ ="@@ "; gets(s); gets(@@ subs@@ ); gets(@@ replace); int@@ len_s@@ =strlen(s); int@@ len_subs@@ =strlen(@@ subs@@ ); int@@ len_replace@@ =strlen(@@ replace); int@@ i,j@@ =0; int@@ finish@@ =0; for(i=0;i<@@ len_s@@ ;i++) { if(s[i]==@@ subs@@ [j]&&@@ finish@@ ==0) if(j==@@ len_subs@@ -1) { adds@@ (@@ result@@ ,@@ replace); j=0; finish@@ =1; } else@@ j++; else { i@@ -=@@ j; j=0; addc@@ (@@ result@@ ,@@ s[i]); } } printf("%s\n",@@ result); return0; } void@@ adds@@ (@@ char*@@ a,@@ char*@@ b) { int@@ len_a@@ =strlen(a); int@@ len_b@@ =strlen(b); inti; for(i=@@ len_a@@ ;i<=@@ len_a@@ +@@ len_b@@ -1;i++)@@ *(a+i)@@ =*(@@ b@@ +i@@ -@@ len_a@@ ); *(a+@@ len_a@@ +@@ len_b@@ )@@ ='\0'; } void@@ addc@@ (@@ char*@@ a,@@ char@@ c) { int@@ len_a@@ =strlen(a); *(a+@@ len_a@@ )@@ =@@ c; *(a+@@ len_a@@ +1)@@ ='\0'; }  
c -1
h -1
1


intmain() { inta,b,c,@@ i,@@ sum; scanf("%d%d%d",&a,&b,&c); sum=0; for(i=1;i<@@ b;i++) { switch(@@ i) { case1: sum+=@@ 31; break; case2: if(a%@@ 400==0||(@@ a%100!=0@@ )&&(@@ a%@@ 4@@ ==0)) { sum+=@@ 29; } else { sum+=@@ 28; } break; case3: sum+=@@ 31; break; case4: sum+=@@ 30; break; case5: sum+=@@ 31; break; case6: sum+=@@ 30; break; case7: sum+=@@ 31; break; case8: sum+=@@ 31; break; case9: sum+=@@ 30; break; case10: sum+=@@ 31; break; case11: sum+=@@ 30; break; case12: sum+=@@ 31; break; } } sum+=@@ c; printf("%d\n",sum); return0; }  
c -1
h -1
intmain(){ intn,k,i,j,@@ count=0,@@ fx@@ ,@@ fy@@ ,@@ lx@@ ,@@ ly@@ ,@@ start@@ =0; inta[@@ 1002@@ ][@@ 1002@@ ]; scanf("%d",&n); for(i=0;i<n;i++){ for(j=0;j<n;j++){ scanf("%d",&a[i][j]); if(@@ start@@ ==0&&@@ a[i][j]@@ ==0){ start@@ =1; fx@@ =i;@@ fy@@ =j; } if(a[i][j]@@ ==0){ lx@@ =i; ly@@ =j; } } } printf("%d\n",@@ (@@ fx@@ -@@ lx@@ +1)*(@@ fy@@ -@@ ly@@ +1@@ )); getchar();@@ getchar(); return0; }  
c -1
h -1
0

intmain() { chara[501],b[501]; inti,@@ m; doublen; m=0; scanf("%lf",&n); scanf("%s",a); scanf("%s",b); int@@ p@@ =strlen(a); int@@ q@@ =strlen(b); if(p==@@ q) { for(i=0;a[i]!='\0';i++) { if(((@@ a[i]!='@@ A')&&(@@ a[i]!='@@ T')&&(@@ a[i]!='@@ C')&&(@@ a[i]!='@@ G')@@ )||((@@ b[i]!='@@ A')&&(@@ b[i]!='@@ T')&&(@@ b[i]!='@@ C')&&(@@ b[i]!='@@ G')@@ )) { printf("error"); return0; } else { if((@@ a[i]@@ )==@@ (@@ b[i]@@ )) m++; } } if((@@ 1.0*@@ m/@@ (p@@ *1.0@@ ))@@ >=@@ n) { printf("yes"); } else{printf("no");} } else { printf("error"); } return0; }  
c -1
h -1
intmain() { inta[16]; int@@ i=1@@ ,j,@@ k,@@ n=0; while(@@ cin@@ ) { cin>>a[0]; if(a[0]==-1) break; for(i=1;;i++) { cin>>a[i]; if(a[i]==0) break; k=i; } for(j=0;j<=@@ k@@ -1;j++) { for(i=j@@ +1;i<=@@ k;i++) { if(a[j]@@ *2==@@ a[i]@@ ||@@ a[i]@@ *2==@@ a[j]) n=n+1; } } cout<<n<<endl; n=0; } return0; }  
c -1
h -1
0

intmain(){ doublen; scanf("%lf",&n); chars[@@ 2][@@ 510@@ ]; inti; intj,@@ k; k=0; for(i=0;i<2@@ ;i++){ scanf("%s",@@ s[i]); } if(strlen(@@ s[0]@@ )!=strlen(@@ s[1]@@ )){ printf("error"); return0; }else{ for(j=0;@@ s[0]@@ [j]@@ !='\0';j++){ if(s@@ [0]@@ [j]==@@ s[1]@@ [j]){ k++; } if((@@ s[0]@@ [j]!='@@ A'&&@@ s[0]@@ [j]!='@@ T@@ '&@@ & s[0]@@ [j]!='@@ C'&&@@ s[0]@@ [j]!='@@ G')@@ ||@@ ( s[1]@@ [j]!='@@ A'&&@@ s[1]@@ [j]!='@@ T@@ '&@@ & s[1]@@ [j]!='@@ C'&&@@ s[1]@@ [j]!='@@ G')){ printf("error"); return0; } } } int@@ q; q@@ =strlen(@@ s@@ [0]); double@@ w; w@@ =1.0*@@ k/@@ q; if(w@@ >=@@ n){ printf("yes"); }else{ printf("no"); } return0; }  
c -1
h -1
intmain() { intn,@@ b,@@ a[@@ 20000],@@ i,j; scanf("%d",&n); scanf("%d",&a[0]); printf("%d",a[0]); for(i=1;i<n;i++) { scanf("%d",&b); a[i]=@@ b; for(j=0;j<i;j++) { if(a[i]==a[j]) a[i]=0; } } for(i=1;i<n;i++) { if(a[i]!=0) printf("%d",a[i]); } printf("\n"); return0; }  
c -1
h -1
0

voidmain() { chara[100@@ ],b[100],@@ c[100]; inti,@@ a1,@@ b1,@@ c1@@ ,@@ n=0,@@ m,@@ t@@ ,j,@@ p=0; scanf("%s%s%s",a,b,c); a1@@ =strlen(a); b1@@ =strlen(b); c1@@ =strlen(c); for(i=0;i<@@ a1@@ ;i++) { for(j=0;j<@@ b1@@ ;j++) { if(a@@ [i+j]==@@ b[j]@@ )@@ p=p@@ +1; } if(p==@@ b1@@ ) { for(m=0;m<@@ i@@ ;m++) printf("%c",@@ a[m@@ ]); printf("%s",@@ c); for(m=@@ b1@@ +i@@ ;m@@ <@@ a1@@ ;m++) printf("%c",@@ a[m@@ ]); n=@@ 9@@ ;break; } p=0; } if(n@@ ==0)@@ printf("%s",a); }  
c -1
h -1
intmain() { intn; cin>>n; inta[20000]; inti; for(i=0;i<n;i++) cin>>a[i]; intj; intk; for(i=0;i<n;i++) { j@@ =i+1; while(j@@ <n) if(a[i]==a[j]) { n--; for(k=j@@ ;k<@@ n;k++) a[k]=a[k@@ +1]; } else@@ j++; } for(i=0;i<n-1;i++) cout<<a[i]<<""; cout<<a[@@ n-1]; return0; }  
c -1
h -1
0

struct@@ a { intnumber; char@@ authors@@ [26]; struct@@ a@@ *next; }; intn,@@ max=0; intmain() { struct@@ a*@@ create@@ (void@@ ); char@@ sum@@ (struct@@ a*@@ ); void@@ pr@@ (char@@ x,@@ struct@@ a@@ *head@@ ); struct@@ a*@@ head; char@@ x; scanf("%d",&n); head=@@ create@@ (); x=@@ sum@@ (head); pr@@ (x,@@ head); } struct@@ a*@@ create@@ (void) { struct@@ a@@ *head,*p1,*p2; inti; p1=@@ len@@ ;@@ head@@ =p1;@@ p2=p1; for(i=0;i<n;i++) { scanf("%d%s",&p1->@@ number,@@ p1->@@ authors@@ ); if(i!=@@ n-1) {@@ p1=@@ len@@ ;@@ p2->next@@ =p1;@@ p2=@@ p2->next@@ ;} else@@ p1->next=@@ null@@ ; } returnhead; } char@@ sum@@ (struct@@ a@@ *head) { struct@@ a@@ *p; p=head; inta[@@ 26]={0},@@ i,j; char@@ zd@@ ; for(i=0;i<n;i++) { for(j=0;@@ *(@@ p->@@ authors@@ +j)@@ !='\0';j++) a[@@ *(@@ p->@@ authors@@ +j)@@ -65]++; p=p->next; } for(i=0;i<26;i++) if(a[i]@@ >max){max=@@ a[i];@@ zd@@ =i;} printf("%c@@ \n@@ %d",@@ zd@@ +65@@ ,a[@@ zd@@ ]); return(@@ zd@@ +65); } void@@ pr@@ (char@@ x,@@ struct@@ a@@ *head) { inti,j,@@ num; struct@@ a@@ *p; p=head; for(i=0;i<n;i++) { num=0; for(j=0;@@ *(@@ p->@@ authors@@ +j)@@ !='\0';j++) if(*(@@ p->@@ authors@@ +j)@@ ==@@ x)@@ num@@ =1; if(num@@ )@@ printf("\n%d",@@ p->@@ number); p=p->next; } }  
c -1
h -1
intmain() { intn=0,@@ k=0,@@ i=0,@@ j=0; inta[@@ 1002@@ ]={0}; int@@ ans=0; scanf("%d%d\n",&n,&@@ k); for(i=0;i<n;i++) { scanf("%d",&a[i]); } for(i=0;i<n-1;i++) { for(j=i+1;j<n;j++) { if(a[i]+a[j]==k) { ans@@ =1; break; } } if(@@ ans@@ ==1) break; } if(@@ ans@@ ==1) printf("yes\n"); else printf("no\n"); return0; }  
c -1
h -1
0

intmain(){ intn,k,i,j,@@ h=0; ints[@@ 1000],@@ g@@ [1000]; scanf("%d%d",&n,&k); for(i=0;i<=@@ n-1;i++){ scanf("%d",&(@@ s[i]@@ )); } for(i=0;i<=@@ n-1;i++){ g@@ [i]=@@ k-@@ s[i]; for(j=0;j<=@@ n-1@@ ;j++){ if(g@@ [i]==@@ s[j]@@ ){ h@@ ++; } } } if(h@@ ==0){ printf("no"); }else{ printf("yes"); } return0; }  
c -1
h -1
int@@ input@@ (int*@@ s@@ ,intn) { inti=0; for(i=0;i<n;i++) scanf("%d",&s[i]); return0; } int@@ sort@@ (int*@@ s@@ ,intn) { inti=0,j=0; for(i=0;i<n;i++) { for(j=1;j<n;j++) { if(s@@ [j-1]@@ >@@ s@@ [j]) { int@@ temp=@@ s@@ [j-1]; s@@ [j-1]=@@ s[j]; s@@ [j]=temp; } } } return0; } int@@ combine@@ (int*@@ s1@@ ,int*@@ s2@@ ,int@@ n1,int@@ n2@@ ,int*@@ s) { inti=0; for(i=0;i<n1;i++) s[i]=@@ s1@@ [i]; for(i=0;i<n2;i++) s@@ [i+@@ n1@@ ]=@@ s2@@ [i]; return0; } int@@ output@@ (int*@@ s@@ ,intn) { inti=0; if(n@@ <=@@ 0@@ ) return0; printf("%d",@@ s@@ [0]); for(i=1;i<n;i++) printf("%d",@@ s[i]); } intmain() { int@@ n1@@ =0,@@ n2@@ =0; scanf("%d%d",&@@ n1,@@ &@@ n2); int@@ s1@@ [@@ 1000]={0}; int@@ s2[@@ 1000]={0}; input@@ (@@ s1,@@ n1@@ );@@ input@@ (@@ s2,@@ n2); sort(@@ s1,@@ n1@@ );@@ sort(@@ s2,@@ n2); ints[@@ 2000@@ ]={0}; combine@@ (@@ s1,@@ s2,@@ n1,n2,@@ s); output@@ (@@ s,@@ n1+@@ n2); return0; }  
c -1
h -1
0

intmain() { charstring@@ [500],@@ substring@@ [50@@ ],@@ replacement@@ [50@@ ]; int@@ same@@ ,@@ i,k,@@ c; scanf("%s%s%s",@@ string,@@ substring@@ ,@@ replacement); for(i=0;i<strlen(@@ string@@ );i++) { same@@ =1; for(k=0;k<@@ strlen(@@ substring@@ )@@ ;k++) { if(string@@ [i+k@@ ]!=@@ substring@@ [k]) { same@@ =0; } } if(@@ same@@ ==1) { printf("%s",@@ replacement); c=i; break; } else { printf("%c",@@ string@@ [i]); } } for(i=@@ c+@@ strlen(@@ substring@@ )@@ ;i<@@ strlen(@@ string@@ );i++) { printf("%c",@@ string@@ [i]); } return0; }  
c -1
h -1
int@@ array_a@@ [100],@@ array_b@@ [100],@@ n_a@@ ,@@ n_b@@ ; voidinput() { inti; scanf("%d%d",&@@ n_a@@ ,&@@ n_b@@ ); for(i=0;i<@@ n_a@@ ;i++) scanf("%d",&@@ array_a@@ [i]); for(i=0;i<@@ n_b@@ ;i++) scanf("%d",&@@ array_b@@ [i]); } voidorder@@ () { inti,j,temp; for(i=1;i<@@ n_a@@ ;i++) for(j=1;j<@@ n_a@@ +1@@ -i;j++) if(@@ array_a@@ [j]<@@ array_a@@ [j-1]) { temp=@@ array_a@@ [j]; array_a@@ [j]=@@ array_a@@ [j-1]; array_a@@ [j-1]=@@ temp; } for(i=1;i<@@ n_b@@ ;i++) for(j=1;j<@@ n_b@@ -i@@ +1@@ ;j++) if(@@ array_b@@ [j]<@@ array_b@@ [j-1]) { temp=@@ array_b@@ [j]; array_b@@ [j]=@@ array_b@@ [j-1]; array_b@@ [j-1]=@@ temp; } } void@@ catenate@@ () { inti; for(i=0;i<@@ n_b@@ ;i++) array_a@@ [@@ n_a@@ +i]=@@ array_b@@ [i]; } voidprint() { inti; for(i=0;i<@@ n_a@@ +@@ n_b@@ ;i++) printf("%d@@ %c@@ ",@@ array_a@@ [i],@@ (@@ i==@@ n_a@@ +@@ n_b@@ -1)@@ ?'@@ \n@@ ':@@ '@@ '@@ ); } intmain() { input(); order@@ (); catenate@@ (); print(); return0; }  
c -1
h -1
0

voidmain() { intn,a[@@ 1000],@@ i,@@ b[@@ 26]={0},@@ m,@@ j,@@ max=0,@@ k; charstr@@ [1000][@@ 30]; scanf("%d",&n); for(i=0;i<n;i++) { scanf("%d%s",&a[i],@@ str[i]); } for(i=0;i<n;i++) { m=strlen(@@ str[i]); for(j=0;j<m;j++) { if(str[i][j]=='@@ A'@@ ) b[0]@@ ++; if(str[i][j]=='@@ B@@ ') b[1@@ ]++; if(str[i][j]=='@@ C') b[2@@ ]++; if(str[i][j]=='@@ D@@ ') b[@@ 3@@ ]++; if(str[i][j]=='@@ E@@ ') b[@@ 4@@ ]++; if(str[i][j]=='@@ F@@ ') b[@@ 5@@ ]++; if(str[i][j]=='@@ G') b[@@ 6@@ ]++; if(str[i][j]=='@@ H@@ ') b[@@ 7@@ ]++; if(str[i][j]=='@@ I@@ ') b[@@ 8@@ ]++; if(str[i][j]=='@@ J@@ ') b[@@ 9@@ ]++; if(str[i][j]=='@@ K@@ ') b[@@ 10@@ ]++; if(str[i][j]=='@@ L@@ ') b[@@ 11@@ ]++; if(str[i][j]=='@@ M@@ ') b[@@ 12@@ ]++; if(str[i][j]=='@@ N@@ ') b[@@ 13@@ ]++; if(str[i][j]=='@@ O@@ ') b[@@ 14@@ ]++; if(str[i][j]=='@@ P@@ ') b[@@ 15@@ ]++; if(str[i][j]=='@@ Q@@ ') b[@@ 16@@ ]++; if(str[i][j]=='@@ R@@ ') b[@@ 17@@ ]++; if(str[i][j]=='@@ S@@ ') b[@@ 18@@ ]++; if(str[i][j]=='@@ T@@ ') b[@@ 19@@ ]++; if(str[i][j]=='@@ U@@ ') b[@@ 20@@ ]++; if(str[i][j]=='@@ V@@ ') b[@@ 21@@ ]++; if(str[i][j]=='@@ W@@ ') b[@@ 22@@ ]++; if(str[i][j]=='@@ X@@ ') b[@@ 23@@ ]++; if(str[i][j]=='@@ Y@@ ') b[@@ 24@@ ]++; if(str[i][j]=='@@ Z@@ ') b[@@ 25@@ ]++; } } for(i=0;i<26;i++) { if(b[i]>max) { max=b[i]; k=i; } } printf("%c\n%d\n",@@ k@@ +65@@ ,max); for(i=0;i<n;i++) { m=strlen(@@ str[i]); for(j=0;j<m;j++) { if(str@@ [i][j]==@@ k@@ +65) printf("%d\n",a[i]); } } }  
c -1
h -1
intmain() { intnum[@@ 16],@@ i,k,@@ j,@@ count; for(;;) { i=@@ -1; count=0; do { i++; cin>>num[i]; if(num@@ [0]@@ ==-1) return0; } while(@@ num[i]@@ !=0); for(j=0;j<=i-1;j++) { for(k=j@@ ;k<=@@ i-1;k++) { if((@@ num@@ [j]==2*@@ num@@ [k]@@ )||(@@ num[j]@@ *2==@@ num@@ [k]@@ )) count++; } } cout<<count<<endl; } }  
c -1
h -1
0

static@@ intdays@@ [13]={0,31,28,31,30,31,30,31,31,30,31,30,31}; static@@ int@@ isleapyear@@ (intyear@@ ){ return(@@ year%4==0&&year%100!=0@@ )||@@ year%@@ 400==0@@ ; } intmain(){ intyear,month,day; intn=0; inti; scanf("%d%d%d",&@@ year,@@ &@@ month,@@ &@@ day); for(i=1;i<month;i++) n=n+@@ days@@ [i]; n=n+@@ day; if(month@@ >2@@ &&@@ isleapyear@@ (year@@ )) n++; printf("%d\n",n); return0; }  
c -1
h -1
intmain(intargc,char*argv[]) { ints[@@ 16@@ ]={0}; while(1){ inti,j,@@ count=0,@@ flag=0; for(i=0;@@ ;i++){ scanf("%d",&s[i]); if(s[i]==@@ -1) { flag=1; break; } if(s@@ [i]==0) break; count++; } if(flag) break; intnum=0; for(i=0;i<@@ count@@ ;i++){ for(j=0;j<@@ count@@ ;j++){ if(s[i]==@@ s[j]@@ *2) num++; } } printf("%d\n",num); } return0; }  
c -1
h -1
0

intmain(){ intn,@@ f,@@ k,@@ s; intsz[1000]; f=0; scanf("%d%d",&n,&k); for(inti=0;i<n;i++){ scanf("%d",&(sz[i]@@ )); } for(intj=0;j<n;j++){ for(intm@@ =j+1@@ ;m@@ <n;m++){ s=@@ sz@@ [j]+@@ sz[@@ m]; if((@@ s@@ ==@@ k@@ )&&(@@ f@@ ==0)@@ ){ f=1; printf("yes"); break; }} if(f@@ ==1)break; } if(f@@ ==0)@@ printf("no"); return0; }  
c -1
h -1
int@@ s1@@ [100],@@ s2@@ [100],@@ i,j,@@ a,b,@@ t,@@ s; void@@ in@@ (void@@ ); voidorder@@ (void@@ ); void@@ stick@@ (void@@ ); voidout@@ (void@@ ); voidmain() { in@@ (); order@@ (); stick@@ (); out@@ (); } void@@ in@@ () { scanf("%d%d",&a,&b); for(i=0;i<a;i++) scanf("%d",&@@ s1[i]); for(i=0;i<b;i++) scanf("%d",&@@ s2@@ [i]); } voidorder@@ () { for(i=1;i<@@ a;i++) { for(j=0;j<a@@ -i;j++) { if(s1@@ [j]>@@ s1@@ [j+1]) { t=@@ s1@@ [j]; s1@@ [j]=@@ s1@@ [j+1]; s1@@ [j+1]=t; } } } for(i=1;i<@@ b;i++) { for(j=0;j<@@ b@@ -i;j++) { if(s2@@ [j]>@@ s2@@ [j+1]) { t=@@ s2@@ [j]; s2@@ [j]=@@ s2@@ [j+1]; s2@@ [j+1]=t; } } } } void@@ stick@@ () { s=@@ a+@@ b; for(i=a@@ ;i<@@ s;i++) {@@ s1@@ [i]=@@ s2@@ [i-@@ a@@ ];} } voidout@@ () { for(i=0;i<@@ a+@@ b;i++) { if(i==0) printf("%d",@@ s1[i]); else@@ printf("%d",@@ s1[i]); } }  
c -1
h -1
0

intmain(){ inta[@@ 100000@@ ]={0},@@ n,k,@@ x,@@ i; int@@ ifind@@ =0; scanf("%d%d",&n,&k); for(i=0;i<n;i++){ scanf("%d",&x); if(x>@@ k) continue; if(a[x@@ ]@@ ==1){ ifind@@ =1; break; } a[k@@ -x@@ ]=1; } if(@@ ifind@@ ) printf("yes"); else printf("no"); return0; }  
c -1
h -1
intmain() { intk,@@ n,i,j,@@ e,@@ s,@@ r,@@ t; inta[@@ 300],b[@@ 300]; scanf("%d",&k); s=1; r@@ =1; for(i=0;i<k;i++) { scanf("%d",&a[i]); b[i]@@ =i; } for(i=0;i<@@ k-1;i++) { for(j=i+1;j<k;j++) { if(a[i]@@ <@@ a[j]) { e=@@ a[i]; a[i]=a[j]; a[j]=@@ e; e=@@ b[i]; b[i]=@@ b[j]; b[j]=@@ e; } } } for(i=0;i<k;i++) { n=@@ b[i]; r@@ =1; for(j=i+1;j<k;j++) { if(b[j]@@ >n) { r++; n=@@ b[j]; } } if(r@@ >@@ s) { s=@@ r; t=i; } } if(k==@@ 25@@ ){@@ s=s+@@ 2;@@ }; printf("%d",s); return0; }  
c -1
h -1
0

intmain() { intnum@@ [100][100@@ ];@@ int@@ line@@ ,@@ row,@@ i,j,@@ m,n; scanf("%d%d",&row,&@@ line@@ ); for(i=0;i<=@@ row-1;i++) { for(j=0;j<=@@ line@@ -1;j++) { scanf("%d",&@@ num@@ [i][j]); } } for(j=0;j<=@@ line@@ -1;j++) { m@@ =0;n@@ =j; do { printf("%d\n",@@ num[m@@ ][n@@ ]); m@@ ++@@ ;n@@ --; } while(n@@ !=@@ -1@@ &&m@@ <row@@ ); } for(i=1;i<=@@ row-1;i++) { m@@ =i;@@ n=@@ line@@ -1; do { printf("%d\n",@@ num[m@@ ][n@@ ]); m@@ ++@@ ;n@@ --; } while(n@@ !=@@ -1@@ &&m@@ <row@@ ); } return0; }  
c -1
h -1
intmain() { inty,@@ n,@@ d,@@ x=0,@@ i@@ =1,@@ z; intm[@@ 13@@ ]; m@@ [1]=@@ m@@ [3@@ ]=@@ m[@@ 5@@ ]=@@ m[@@ 7@@ ]=@@ m[@@ 8@@ ]=@@ m[@@ 10@@ ]=@@ m[@@ 12@@ ]=31; m[@@ 4@@ ]=@@ m[@@ 6@@ ]=@@ m[@@ 9@@ ]=@@ m@@ [11@@ ]=30; m@@ [2]=@@ 29; scanf("%d%d%d",&y,&@@ n,&@@ d); if(n==1) { x=@@ d; z=@@ x; } else { if((y%@@ 400==0)||(@@ y%@@ 4==0&&y%100!=0@@ )) { for(i=1;i<n;i++) { x=x@@ +m@@ [i]; z=@@ x@@ +d; } } else { for(i=1;i<n;i++) { x=x@@ +m@@ [i]; } z=@@ x@@ +d@@ -1; } } printf("%d\n",@@ z); return0; }  
c -1
h -1
0

intmain(intargc,char*argv[]) { intn,@@ j=0,@@ i,@@ num=0,@@ t; chara[100@@ ][@@ 10],@@ d@@ [100][10],@@ temp@@ [10]; intb[100@@ ],@@ c[100]; scanf("%d",&n); for(i=0;i<n;i++){ scanf("%s%d",@@ a[i],&@@ b[i]); } for(i=0;i<n;i++){ if(b[i]@@ >=60){ c[j]=@@ b[i]; strcpy(@@ d@@ [j],@@ a[i]); j++; num@@ =j; } } for(i=1;i<@@ num;i++) for(j=0;j<@@ num@@ -i;j++){ if(c@@ [j]<@@ c@@ [j+1@@ ]){ t=@@ c@@ [j+1]; c@@ [j+1]=@@ c[j]; c[j]=@@ t; strcpy(@@ temp,@@ d@@ [j+1]); strcpy(@@ d@@ [j+1],@@ d@@ [j]); strcpy(@@ d@@ [j],@@ temp); } } for(i=0;i<n;i++){ if(b[i]@@ <60){ c[@@ num@@ ]=b[i]; strcpy(@@ d[@@ num@@ ],@@ a[i]); num++; } } for(j=0;j<n;j++){ printf("%s\n",@@ d@@ [j]); } return0; }  
c -1
h -1
voidmain() { inti; int@@ sum_day@@ (int,int); intleap@@ (intyear@@ ); int@@ year@@ [5],@@ month@@ [5],@@ day@@ [5],@@ days@@ [5@@ ]; for(i=0;i<@@ 5;i++) scanf("%d%d%d",&year@@ [i],&@@ month@@ [i],&@@ day@@ [i]); for(i=0;i<@@ 5;i++) {@@ days@@ [i]=@@ sum_day@@ (@@ month@@ [i],@@ day@@ [i]); if(leap@@ (year@@ [i])@@ &&@@ month@@ [i]>=@@ 3) days@@ [i]=@@ days@@ [i]@@ +1; printf("%d\n",@@ days@@ [i]);} } int@@ sum_day@@ (int@@ month@@ ,int@@ day@@ ) {int@@ day_tab@@ [13]={0,31,28,31,30,31,30,31,31,30,31,30,31}; inti; for(i=1;i<month;i++) day@@ +=@@ day_tab@@ [i]; return(@@ day); } intleap@@ (intyear@@ ) {int@@ leap@@ ; leap@@ =@@ year%4==0&&year%100!=0@@ ||@@ year%@@ 400==0@@ ; return(@@ leap@@ ); }  
c -1
h -1
0

voidmain() { inti,j,k,@@ t,@@ m,n,@@ x,@@ sum,@@ a[100@@ ][@@ 105@@ ][@@ 105@@ ]; scanf("%d",&x); for(i=1;i<=@@ x;i++) { sum=0; scanf("%d%d",&m,&n); for(j=1;j<=m;j++) for(k=1;k<=n;k++) scanf("%d",&a[i]@@ [j]@@ [k]); for(t@@ =1;t@@ <=n;@@ t++) { if(m@@ !=1) sum=sum+@@ a[i]@@ [1@@ ][@@ t@@ ]+@@ a[i]@@ [m@@ ][@@ t@@ ]; if(m==1) sum=sum+@@ a[i]@@ [1@@ ][@@ t@@ ]; } for(@@ t=@@ 2@@ ;t@@ <=@@ m-1@@ ;t++) { if(n@@ !=1) sum=sum+@@ a[i]@@ [t@@ ][1@@ ]+@@ a[i]@@ [t@@ ][n]; if(n==1) sum=sum+@@ a[i]@@ [t@@ ][1@@ ]; } printf("%d\n",sum); } }  
c -1
h -1
intmain() { intnum[@@ 16]; inti,j,n,@@ sum; for(;;) { sum=0; for(i=0;;i++) { cin>>num[i]; if((@@ num[i]@@ ==0)||(@@ num@@ [i]==@@ -1)) break; } if(num@@ [i]==@@ -1) { break; } n=i; for(i=0;i<n-1;i++) { for(j=i+1;j<=@@ n-1;j++) { if((@@ num@@ [j]==@@ num[i]@@ *2@@ )||(@@ num@@ [i]==@@ num[j]@@ *2@@ )) sum=sum+1; } } cout<<sum<<endl; } return0; }  
c -1
h -1
0

intmain() { intn; inti,j,k; intmax@@ ,@@ max2; inta[@@ 26]; structbook { intnumber; charauthor[26]; }@@ stu1@@ [1000]; struct@@ author { intnumber@@ [1000]; int@@ ben@@ ; }@@ stu2@@ [26]; scanf("%d",&n); for(i=0;i<=n-1;i++) scanf("%d%s",&@@ stu1@@ [i].@@ number,@@ stu1@@ [i].@@ author); for(i=0;i<=25;i++) { stu2@@ [i].@@ ben@@ =0; a[i]=0; } for(i=0;i<=n-1;i++) { for(j=0;j<=@@ strlen(@@ stu1@@ [i].@@ author@@ )@@ -1;j++) { k=@@ stu1@@ [i].@@ author@@ [j]; stu2@@ [k@@ -65@@ ].@@ ben@@ ++; stu2@@ [k@@ -65@@ ].@@ number@@ [@@ a[k@@ -65@@ ]@@ ]=@@ stu1@@ [i].@@ number; a[k@@ -65]++; } } max=@@ stu2@@ [0].@@ ben@@ ; max2@@ =0; for(i=1;i<=@@ 25;i++) { if(@@ stu2@@ [i].@@ ben@@ >max) { max=@@ stu2@@ [i].@@ ben@@ ; max2@@ =i; } } printf("%c\n",@@ max2@@ +65); printf("%d\n",max); for(j=0;j<=@@ a[@@ max2@@ ]@@ -1;j++) printf("%d\n",@@ stu2@@ [@@ max2@@ ].@@ number@@ [j]); return0; }  
c -1
h -1
intmain() { intn,a[@@ 20000@@ ]={0},@@ i,j,@@ b[@@ 20000@@ ]={0},@@ p@@ =1,@@ m=0; cin>>n; for(i=1;i<=n;i++) { cin>>a[i]; } for(i=n@@ ;i@@ >=@@ 2@@ ;i--) { for(j=i-1@@ ;j@@ >=1@@ ;j--) {@@ if(a[i]==@@ a[j])@@ m@@ +=@@ 1@@ ;} if(m@@ ==0){@@ b[p@@ ]=@@ a[i]@@ ;p@@ ++;} m=0; } p=p@@ -1; b[p@@ +1]=@@ a[1]; for(i=@@ p@@ +1@@ ;i@@ >=@@ 2@@ ;i--) {@@ cout<<b[i]@@ <<"@@ "@@ ;} cout<<@@ b[1@@ ]<<endl; return0; }  
c -1
h -1
0

int@@ ispr@@ (int@@ t) { int@@ v@@ =@@ sqrt(@@ t@@ *1.0@@ )@@ +1; for(inti=2@@ ;i<@@ v@@ ;i++) if(t@@ %i==0) return0; return1; } intsum=0; void@@ fun@@ (intn,int@@ i){ if(n==1) sum++; while(i<=@@ n){ if(n%i==0) fun@@ (n/i,i); i++; } return; } intmain(){ intn; scanf("%d",&n); while(n@@ --){ inta; scanf("%d",&a); if(@@ ispr@@ (@@ a)@@ ){ printf("@@ 1@@ \n"); continue; } int@@ i=@@ 2,@@ res@@ =1; while(i<=@@ a@@ /2@@ ){ if(a@@ %i==0){ sum=0; fun@@ (a/i,i); res@@ +=@@ sum; } i++; } printf("%d\n",@@ res@@ ); } }  
c -1
h -1
intmain(){ inti,j,n,@@ a,b; int@@ c1@@ ,@@ c2@@ ,@@ c,@@ k1@@ ,@@ k2@@ ,@@ k; intsz[@@ 1000][1000]; scanf("%d",&n); for(inti=0;i<n;i++){ for(intj=0;j<n;j++){ scanf("%d",&(@@ sz@@ [i][j]@@ )); } } for(inti=0;i<n;i++){ for(intj=0;j<n;j++){ if(sz@@ [i][j]==0){ c1@@ =i; k1@@ =j; } } } for(int@@ a=@@ n-1;@@ a@@ >=0@@ ;a@@ --){ for(int@@ b=@@ n-1;@@ b@@ >=0;@@ b@@ --){ if(@@ sz[a@@ ][b@@ ]==0){ c2@@ =@@ a; k2@@ =@@ b; } } } c=@@ c1@@ -@@ c2@@ -1; k=@@ k1@@ -@@ k2@@ -1; printf("%d",c@@ *@@ k); return0; }  
c -1
h -1
0

int@@ iFind@@ (int*p,int@@ findnum@@ ) { intk,@@ sum=0; for(k=0;k<@@ 15@@ ;k++) { if(@@ *(p@@ +k@@ )==@@ findnum@@ ) sum++; } returnsum; } intmain() { inta[@@ 15],@@ temp,@@ i=0,@@ j,k,@@ *p,@@ sum=0; p=a; for(j=0;j<@@ 15@@ ;j++) a[j]=@@ -1; while(cin>>@@ temp,@@ temp@@ !=-1) { if(temp@@ !=0) { a[i]=@@ temp; i++; } else { for(k=0;k<@@ 15@@ ;k++) { sum+=@@ iFind@@ (p,@@ a[k]@@ *2@@ ); } cout<<sum<<endl; sum=0; i=0; for(j=0;j<@@ 15@@ ;j++) a[j]=@@ -1; } } return0; }  
c -1
h -1
intmain(){ inti,j,n,@@ a,b; int@@ c1@@ ,@@ c2@@ ,@@ c,@@ k1@@ ,@@ k2@@ ,@@ k; intsz[@@ 1000][1000]; scanf("%d",&n); for(inti=0;i<n;i++){ for(intj=0;j<n;j++){ scanf("%d",&(@@ sz@@ [i][j]@@ )); } } for(inti=0;i<n;i++){ for(intj=0;j<n;j++){ if(sz@@ [i][j]==0){ c1@@ =i; k1@@ =j; } } } for(int@@ a=@@ n-1;@@ a@@ >=0@@ ;a@@ --){ for(int@@ b=@@ n-1;@@ b@@ >=0;@@ b@@ --){ if(@@ sz[a@@ ][b@@ ]==0){ c2@@ =@@ a; k2@@ =@@ b; } } } c=@@ c1@@ -@@ c2@@ -1; k=@@ k1@@ -@@ k2@@ -1; printf("%d",c@@ *@@ k); return0; }  
c -1
h -1
0

main() { inta[16],@@ n,@@ i,j,k; while(1) { n=0; for(i=0;i<16;i++) a[i]=0; scanf("%d",&a[0]); if(a[0]==-1) break; else { for(i=1;i<@@ 16@@ ;i++) { scanf("%d",&a[i]); if(a[i]==0) break; } j=i; for(i=0;i<j@@ -1;i++) { for(k@@ =i+1@@ ;k<@@ j@@ ;k++) { if(a[k@@ ]==2*@@ a[i]@@ ||@@ a[i]==@@ 2*@@ a[k]) n++; } } printf("%d\n",n); } } }  
c -1
h -1
intmain() { intsz[@@ ROW@@ ][@@ COL@@ ]; inti,j,n,@@ a=0,@@ s1,@@ s2,@@ e1@@ ,@@ e2@@ ,sum; scanf("%d",&n); for(i=0;i<n;i++){ for(j=0;j<n;j++){ scanf("%d",&sz[i][j]); if(sz@@ [i][j]==0&&@@ a@@ ==0){ s1@@ =i; s2@@ =j; a=1; } if(sz@@ [i][j]==0){ e1@@ =i; e2@@ =j; } } } sum=(@@ e1@@ -@@ s1@@ -1)*(@@ e2@@ -@@ s2@@ -1); printf("%d",sum); return0; }  
c -1
h -1
0

struct@@ guahao { charnum[@@ 20]; int@@ year; }; intmain() { intn,i,@@ m; struct@@ guahao@@ temp@@ ,*@@ p,*@@ t@@ ,*@@ p1; scanf("%d",&n); m=@@ n; struct@@ guahao@@ *@@ bingren@@ =(struct@@ guahao@@ *)malloc(sizeof(struct@@ guahao@@ )*n); struct@@ guahao@@ *@@ bingren1@@ =(struct@@ guahao@@ *)malloc(sizeof(struct@@ guahao@@ )*@@ m); p=@@ bingren@@ ; p1=@@ bingren1@@ ; for(@@ ;p<@@ bingren@@ +n;@@ p@@ ++,@@ p1@@ ++) { scanf("%s%d",@@ p->@@ num,&@@ p->@@ year@@ ); *@@ p1@@ =*@@ p; } p=@@ bingren@@ ; for(i=0@@ ;p<@@ bingren@@ +@@ n-1@@ ;p@@ ++@@ ,i++) { for(@@ t=@@ bingren@@ ;t@@ <@@ bingren@@ +@@ n-1@@ -i@@ ;t++) { if((@@ *@@ t@@ ).@@ year@@ <(@@ *(@@ t@@ +1)@@ ).@@ year@@ ) { temp@@ =*@@ t; *@@ t@@ =*(@@ t@@ +1); *(@@ t@@ +1)@@ =temp; } } } p=@@ bingren@@ ; for(@@ ;p<@@ bingren@@ +n;@@ p++) { if((@@ *p@@ ).@@ year@@ >=60) { printf("%s\n",p->@@ num); } } for(p1=@@ bingren1@@ ;@@ p1@@ <@@ bingren1@@ +m@@ ;@@ p1@@ ++) { if((@@ *@@ p1@@ ).@@ year@@ <60) { printf("%s\n",@@ p1->num); } } free(@@ bingren@@ ); free(@@ bingren1@@ ); return0; }  
c -1
h -1
intmain() { intyear,month,day,@@ daynum@@ =0,@@ i; cin>>year>>@@ month>>@@ day; int@@ month1@@ [12]={31,28,31,30,31,30,31,31,30,31,30,31}; int@@ month2@@ [@@ 12]={31,29,31,30,31,30,31,31,30,31,30,31}; int@@ judgeleap@@ ; if((year%4==0&&year%100!=0)||(year%400==0)) { for(i=0;i<month-1;i++) { daynum@@ +=@@ month2@@ [i]; } } else { for(i=0;i<month-1;i++) { daynum@@ +=@@ month1@@ [i]; } } daynum@@ =@@ daynum@@ +day; cout<<@@ daynum@@ ; return0; }  
c -1
h -1
0

intmain() { inti,@@ s=0; int@@ cmp@@ (char@@ s1,@@ char@@ s2); int@@ ex@@ (char@@ s); float@@ input@@ =0; float@@ sum=0,@@ cor@@ =0; chars1@@ [501],@@ s2@@ [501]; scanf("%f",&@@ input@@ ); scanf("%s%s",@@ s1,@@ s2); sum@@ =strlen(@@ s1); for(i=0;@@ s1@@ [i]@@ !=0;i++) { s+=@@ ex@@ (@@ s1[i]); s+=@@ ex@@ (@@ s2@@ [i]); cor@@ +=@@ cmp@@ (@@ s1@@ [i],@@ s2@@ [i]); } if(s@@ ) { printf("error\n"); return0; } else { if((@@ cor@@ /@@ sum@@ )@@ >=@@ input@@ ) printf("yes\n"); else printf("no\n"); return0; } } int@@ ex@@ (char@@ s) { switch(@@ s) { case'@@ A@@ ':@@ ; case'@@ T@@ ':@@ ; case'@@ C@@ ':@@ ; case'@@ G@@ ':@@ return0@@ ;break; default@@ :@@ return@@ 1;break; } } int@@ cmp@@ (char@@ s1,@@ char@@ s2@@ ) { if(s1@@ ==@@ s2@@ ) return1; else return0; }  
c -1
h -1
intmain() { inta[1000][1000]; inti,j,@@ s=0; int@@ e,@@ b,@@ c,@@ d=0; intn=0; scanf("%d",&n); for(i=0;i<n;i++) { for(j=0;j<n;j++) { scanf("%d",&a[i][j]); } } for(i=0;i<n;i++) { for(j=0;j<n-1;j++) { if(a[i][j]@@ <@@ a[i]@@ [j+1]) { e@@ =i; b=j; break; } } } for(i=n-1;i>=0;i--) { for(j=n-1@@ ;j>0;j--) { if(a[i][j]@@ <@@ a[i]@@ [j-1]) { c=i; d=j; break; } } } s=(@@ c-@@ e@@ +1)*(@@ d-b@@ +1); printf("%d",s); return0; }  
c -1
h -1
0

intmain() { intn@@ ,@@ i,j,k,@@ g,@@ p=0; cin>>n; inta[n@@ +1]; memset(a,0,@@ sizeof(a)); for(i=1;i<=n;i++) { cin>>a[i]; } for(j=1;j<=n;j++) { g=0; for(k=1;k<=@@ j@@ -1;k++) { if(a[j]==@@ a[k]) { g@@ =1; } } if(g@@ ==0) { if(p@@ !=0) { cout<<"@@ "; } cout<<@@ a[j]; p++; } } return0; }  
c -1
h -1
intmax=0; structstudent {@@ charid[20]; intchinese; intmath; intsum; int@@ flag; structstudent*next; }; structstudent*@@ h; intn,i; structstudent*creat@@ () { structstudent*head,*p1,*p2; i=0; p1=p2=(structstudent*)malloc(LEN); scanf("%s%d%d",@@ p1->id,&p1->@@ chinese@@ ,&p1->math); p1->sum=p1->@@ chinese+@@ p1->@@ math; p1->@@ flag=0; head=NULL; while(i<n) { i=i+1; if(i@@ ==1)head=p1; elsep2->next=p1; p2=p1; p1=(structstudent*)malloc(LEN); scanf("%s%d%d",@@ p1->id,&p1->@@ chinese@@ ,&p1->math); p1->sum=p1->@@ chinese+@@ p1->@@ math; p1->@@ flag=0; } p2->next=NULL; return(head); } structstudent*@@ compare@@ () { structstudent*@@ p1,*@@ p3; p1=@@ h; max=@@ p1->@@ sum; do { if(p1->@@ sum@@ >max@@ &&(@@ p1->@@ flag@@ ==0)) max=@@ p1->@@ sum; p1=p1->next; }while(@@ p1->next@@ !=NULL); p1=@@ h; do { if(p1->@@ sum@@ ==@@ max@@ &&(@@ p1->@@ flag@@ ==0)) { p3@@ =p1; p1->@@ flag=1; break; } p1=p1->next; }while(@@ p1->next@@ !=NULL); return(@@ p3@@ ); } voidmain() {int@@ j; structstudent*@@ p; scanf("%d",&n); h=@@ creat@@ (); for(j=1;j<=@@ 3;j++) { p=@@ compare@@ (); printf("%s%d\n",@@ p->@@ id,@@ p->@@ sum); } }  
c -1
h -1
0

intmain() { intn,k,@@ num[@@ 1000]; cin>>n>>k; for(inti=0;i<n;i++) cin>>num[i]; int@@ c=1; for(intj=0;j<n;j++) { for(intm=0;m@@ <n;m++) { if(m==@@ j) continue; elseif(@@ num@@ [j]+@@ num[m@@ ]==@@ k) c=0; } } if(c@@ ==1) cout<<"no@@ "<<endl; if(c@@ ==0) cout<<"yes@@ "<<endl; return0; }  
c -1
h -1
struct@@ DP { int@@ height@@ ; intnum; }@@ dp@@ [26]; intmain() { intk,@@ i,j; inth@@ [26]; int@@ Max@@ ; cin>>k; for(i=1;i<=k;i++) { cin>>@@ h@@ [i]; } dp@@ [0].@@ height@@ =@@ INT_MAX@@ ; dp@@ [0].@@ num=0; for(i=1;i<=k;i++) { dp@@ [i].@@ height@@ =@@ h@@ [i]; Max@@ =@@ INT_MIN@@ ; for(j=0;j<i;j++) { if(@@ Max@@ <@@ dp@@ [j].@@ num@@ &&@@ dp@@ [j].@@ height@@ >=@@ dp@@ [i].@@ height@@ ) Max@@ =@@ dp@@ [j].@@ num; } dp@@ [i].@@ num=@@ Max@@ +1; } Max@@ =@@ INT_MIN@@ ; for(i=0;i<=@@ k;i++) if(@@ Max@@ <@@ dp@@ [i].@@ num@@ )@@ Max@@ =@@ dp@@ [i].@@ num; cout<<@@ Max@@ <<endl; return0; }  
c -1
h -1
0

intmain() { structbook { int@@ No@@ ; charauthor@@ [27]; int@@ yes@@ ; structbook*next; }; structbook@@ *head,*p; intm,@@ i@@ ,*@@ max; int*@@ count; count=@@ (int*)malloc(@@ 26@@ *sizeof(int)); for(i=0;i<26;i++) *(@@ count@@ +i)@@ =0; p=(struct@@ book@@ *)malloc(sizeof(structbook)); head=@@ p; scanf("%d",&m); for(i=0;i<m;i++) { scanf("%d%s",&@@ p->@@ No@@ ,@@ p->@@ author); if(i==@@ m-1)@@ p@@ ->next=NULL; else@@ p->next@@ =(struct@@ book@@ *)malloc(sizeof(structbook)); p=p->next; } p=head; while(p!=NULL) { char*@@ point@@ ; point@@ =p->@@ author@@ ; while(@@ *@@ point@@ !='\0') { (*(@@ count@@ +(@@ (*@@ point@@ )@@ -65@@ ))@@ )@@ ++; point@@ ++; } p=p->next; } max=@@ count; for(i=0;i<26;i++) if(*(@@ count@@ +i)@@ >*@@ max@@ )max=@@ count@@ +@@ i; printf("%c\n",@@ max@@ -@@ count@@ +65); printf("%d\n",@@ *@@ max); p=head; while(p!=NULL) { char*@@ point@@ ; point@@ =p->@@ author@@ ; while(@@ *@@ point@@ !='\0') { if(*@@ point@@ ==@@ max@@ -@@ count@@ +65@@ )@@ printf("%d\n",p->@@ No@@ ); point@@ ++; } p=p->next; } return0; }  
c -1
h -1
intmain() {@@ intn,k; inta[@@ 1000],b[1000]; inti,j; scanf("%d%d",&n,&k); scanf("%d",&a[0]); for(i=1;i<n;i++) {@@ scanf("%d",&a[i]); } for(i=0;i<n;i++) {@@ for(j=i+1;j<n;j++) if((@@ a[i]+@@ a[j]@@ )==@@ k) {@@ printf("yes"); break;} if((@@ a[i]+@@ a[j]@@ )==@@ k) {@@ break; } } if((@@ a[i]+@@ a[j])@@ !=@@ k) {@@ printf("no"); } return0; }  
c -1
h -1
0

main() { intm,n,@@ i,j,k,@@ l,@@ p,q; ints[@@ 120@@ ][@@ 120@@ ]; scanf("%d%d",&m,&n); for(i=1;i<=m;i++) { for(j=1;j<=n;j++) { scanf("%d",&s@@ [i][j]); } } l=0; i=1@@ ;j@@ =1; while(@@ l<@@ n*@@ m) { printf("%d\n",s@@ [i][j]); l++; if((@@ j@@ ==1@@ )&&(i@@ +1@@ <=@@ n@@ )) { j@@ =i+1; i=1; } elseif((@@ j@@ ==1@@ )&&(i@@ +1>@@ n@@ )) { i@@ =i@@ -@@ n+@@ 2; j=@@ n; } elseif(i==@@ m) { if(j@@ +i@@ <=@@ n) { j=j@@ +@@ i; i=1; } else { i@@ =j@@ -@@ n+@@ m@@ +1; j=@@ n; } } else { i=i+1; j=j-1; } } }  
c -1
h -1
intmain(){ intn,i,j,@@ timer@@ ,@@ k,@@ k0@@ ; timer@@ =0; k0@@ =0; k@@ =-1; int@@ l@@ [100000],@@ r@@ [100]; scanf("%d",&n); for(i=0;i<n;i++){ scanf("%d",&@@ l@@ [i]); } for(i=0;i<n;i++){ for(j=i+1;j<n;j++){ if(l@@ [i]==@@ l@@ [j]){ l@@ [j]=@@ 10000@@ ; } } } for(i=0;i<n;i++){ if(l@@ [i]==@@ 10000@@ ){ timer@@ ++; } } for(i=0;i<n;i++){ if(l@@ [i]!=@@ 10000@@ ){ k0@@ ++; k++; r@@ [k]=@@ l@@ [i]; }else{ continue; } } for(i=0;i<@@ k0@@ ;i++){ if(k@@ ==0){ printf("%d",@@ r@@ [i]); }elseif(@@ k@@ !=0@@ &&i@@ <@@ k0@@ -1){ printf("%d",@@ r@@ [i]); }elseif(@@ i==@@ k0@@ -1){ printf("%d",@@ r@@ [i]); } } return0; }  
c -1
h -1
0

structStudent { charid[10]; intage; }@@ ill@@ [100]; intmain() { inti,j,n,@@ q; char@@ p@@ [10]; scanf("%d",&n); for(i=0;i<n;i++) scanf("%s%d",&@@ ill@@ [i].id,&@@ ill@@ [i].age); for(j=0;j<n-1;j++) for(i=n-1;i@@ >@@ j@@ ;i--){ if(@@ ill@@ [i].age@@ >=60&&@@ ill@@ [i].age@@ >@@ ill@@ [i-1@@ ].age){ strcpy(@@ p,@@ ill@@ [i].@@ id@@ );@@ q=@@ ill@@ [i].age; strcpy(@@ ill@@ [i].@@ id,@@ ill@@ [i-1@@ ].@@ id@@ );@@ ill@@ [i].age@@ =@@ ill@@ [i-1@@ ].@@ age; strcpy(@@ ill@@ [i-1@@ ].id,@@ p@@ );@@ ill@@ [i-1@@ ].age=@@ q; } } for(i=0;i<n;i++) printf("%s\n",@@ ill@@ [i].id); }  
c -1
h -1
inta[@@ 1000],@@ n,@@ f[@@ 999@@ ][@@ 999]; intmax@@ (inta,int@@ b@@ ){@@ if(a@@ >b@@ )@@ return@@ a;@@ else@@ return@@ b@@ ;} int@@ daodan@@ (int@@ s@@ ,int@@ h@@ ) { if(s@@ ==@@ n)@@ return0; if(h@@ >=@@ a[@@ s@@ ])@@ return@@ max(@@ daodan@@ (@@ s@@ +1,@@ a[@@ s@@ ])@@ +1,@@ daodan@@ (@@ s@@ +1,@@ h@@ )); else@@ return@@ daodan@@ (@@ s@@ +1,@@ h); } intmain() { inti; cin>>n; for(i=0;i<n;i++) cin>>a[i]; cout<<@@ daodan@@ (@@ 0,@@ 31999@@ ); return0; }  
c -1
h -1
0

structbook {@@ intn; structbook*next; }; struct@@ au { char@@ n; ints; structbook@@ *p; }; voidmain() { inti,j,k,l,@@ m,@@ n@@ ,*@@ p,@@ a[100@@ ][@@ 1100@@ ]={0},@@ max=0,@@ b[100@@ ]={0}; chars[@@ 30]; scanf("%d",&n); for(l=1;l@@ <=n;@@ l++) { scanf("%d",&@@ j); scanf("%s",s); for(i=0;s[i]@@ !='\0';i++) { b[@@ s[i]@@ ]++; a[@@ s[i]@@ ][@@ b[@@ s[i]@@ ]@@ ]=@@ j; if(b[@@ s[i]@@ ]>@@ b[@@ max@@ ])@@ max=@@ s[i]; } } printf("%c\n",@@ (char)@@ max); printf("%d\n",@@ b[@@ max@@ ]); for(i=1;i<=@@ b[@@ max@@ ]@@ ;i++) printf("%d\n",a[@@ max@@ ][i]); }  
c -1
h -1
intmain() { inta[@@ 1001@@ ][@@ 1001]; intn,i,j,k,@@ s=0; scanf("%d",&n); for(i=1;i<=n;i++) { for(j=1;j<=n;j++) { scanf("%d",&a[i][j]); } } for(i=1;i<=n;i++) { for(j=1;j<=@@ n-2@@ ;j++) { if(a[i][j]==0) { for(k=j+1@@ ;k<=@@ n;k++) { if(a[i]@@ [k]@@ ==0) { s=s+@@ (k@@ -j@@ -1); break; } } } } } printf("%d",s); return0; }  
c -1
h -1
0

intmain(){ intn,k,i,j,@@ t=0; intsz[@@ 1000][1000]; scanf("%d%d",&n,&k); for(i=1;i<=n;i++){ scanf("%d",&sz@@ [0]@@ [i]); sz[i]@@ [0]=@@ sz[0]@@ [i]; } for(i=1;i<=n;i++){ for(j=1;j<=n;j++){ if(i==@@ j){ continue; }else{ sz@@ [i][j]=@@ sz[i]@@ [0]+@@ sz[0]@@ [j]; } } } for(i=1;i<=n;i++){ for(j=1;j<=n;j++){ if(sz@@ [i][j]==@@ k){ t=1; } } } if(t@@ ==1){ printf("yes"); }else{ printf("no"); } return0; }  
c -1
h -1
intmain(){ intn,a[@@ 20000],@@ i,j; cin>>n; intcount@@ =@@ n; for(i=0;i<@@ count@@ ;i++) { cin>>a[i]; for(j=0;j<i;j++) { if(a[i]==a[j]) { i--; count@@ --; break; } } } for(i=0;i<@@ count@@ ;i++) { if(i==0) cout<<a[i]; else cout<<""<<a[i]; } return0; }  
c -1
h -1
0

void@@ bubble@@ (inta[],int@@ l) { inti,j,temp; for(j=1;j<@@ l@@ ;j++) { for(i=0;i<l@@ -j;i++) { if(a[i]>a[i+1]) { temp=a[i]; a[i]=a[i+1]; a[i+1]=@@ temp; } } } } intmain() { intm,n,i,j,@@ a[@@ 10000@@ ],b[@@ 10000]; scanf("%d%d",&m,&n); for(i=0;i<m;i++) { scanf("%d",&a[i]); } for(j=0;j<n;j++) { scanf("%d",&@@ b[j]); } bubble@@ (a,m); bubble@@ (b,n); for(i=0;i<m;i++) { printf("%d",a[i]); } for(j=0;j<n;j++) { printf("%d",@@ b[j]); if(j<@@ n-1) printf(""); } return0; }  
c -1
h -1
voidmain() { intn,i,@@ a[@@ 20005@@ ],@@ del@@ ,j; scanf("%d",&n); for(i=1;i<=n;i++) { scanf("%d",&a[i]); } for(i=1;i<=n;i++) { del@@ =@@ a[i]; if(a[i]>=@@ 10) { if(i==1) { printf("%d",@@ a[1]); } else { printf("%d",a[i]); } } for(j=i+1;j<=n;j++) { if(a[j]==a[i]) { a[j]=0; } } } }  
c -1
h -1
0

intmain(intargc,char*argv[]) { struct@@ fy@@ { chara[@@ 12@@ ]; intk; ints; struct@@ fy@@ *p; }@@ x@@ [100@@ ],*@@ head; intn,i,j,@@ l,@@ kk@@ ,@@ ss@@ ; char@@ aa@@ [12@@ ]; scanf("%d",&n); for(i=0;i<n;i++) { scanf("%s%d",@@ x@@ [i].@@ a,&@@ x@@ [i].@@ k); x@@ [i].@@ s=@@ x@@ [i].@@ k@@ >=60@@ ?@@ 1@@ :@@ 0@@ ; x@@ [i].@@ p@@ =&@@ x@@ [i+1]; } head@@ =&@@ x@@ [0]; x[@@ n-1@@ ].@@ p=@@ NULL@@ ; for(i=0;i<n;i++) { for(j=i+1;j<n;j++) { if(x@@ [i].@@ s@@ ==1&&@@ x@@ [j].@@ s@@ ==1) { if(x@@ [i].@@ k@@ <@@ x@@ [j].@@ k) { kk@@ =@@ x@@ [j].@@ k; ss@@ =@@ x@@ [j].@@ s; strcpy(@@ aa@@ ,@@ x@@ [j].@@ a); for(l@@ =j@@ ;@@ l>@@ i@@ ;@@ l@@ --) { x@@ [l@@ ].@@ k=@@ x@@ [l@@ -1@@ ].@@ k; x@@ [l@@ ].@@ s=@@ x@@ [l@@ -1@@ ].@@ s; strcpy(@@ x@@ [l@@ ].@@ a,@@ x@@ [l@@ -1@@ ].@@ a); } x@@ [i].@@ k=@@ kk@@ ; x@@ [i].@@ s=@@ ss@@ ; strcpy(@@ x@@ [i].@@ a,@@ aa@@ ); } } } if(x@@ [i].@@ s@@ ==1) printf("%s\n",@@ x@@ [i].@@ a); } while(@@ head@@ !=NULL) { if(@@ head->@@ s@@ ==0) printf("%s\n",@@ head->@@ a); head=@@ head->@@ p; } return0; }  
c -1
h -1
intmain() { intn,i,@@ m,@@ save@@ [@@ 20000],@@ count=0; for(i=0;i<@@ 20000@@ ;i++) save@@ [i]=0; cin>>n; while(n--) { int@@ flag=1; cin>>m; for(i=0;i<@@ 20000@@ ;i++) {if(@@ save@@ [i]==@@ m@@ ){@@ flag@@ =0;@@ break;} } if(flag==1) { for(i=0;i<@@ 20000@@ ;i++) {if(@@ save@@ [i]@@ ==0){@@ save@@ [i]=@@ m;@@ break;}} count++; } } for(i=0;i<@@ count@@ -1;i++) cout<<@@ save@@ [i]@@ <<""; cout<<@@ save@@ [@@ count@@ -1]; return0; }  
c -1
h -1
0

intmain() { intx,y,@@ z,@@ k=0,@@ i; cin>>x@@ >>@@ y@@ >>@@ z; inta[@@ 12]={31,28,31,30,31,30,31,31,30,31,30,31}; intb[@@ 12]={31,29,31,30,31,30,31,31,30,31,30,31}; if((x@@ %4==0&&@@ x@@ %100!=0@@ )||(@@ x%@@ 400==0)) for(i=0;i<@@ y@@ -1;i++) k=k@@ +@@ b[i]; else for(i=0;i<@@ y@@ -1;i++) k=k@@ +@@ a[i]; k=k@@ +@@ z; cout<<@@ k; return0; }  
c -1
h -1
intmain() { int@@ s,@@ start1@@ ,@@ start2@@ ,@@ end1@@ ,@@ end2@@ ,@@ n,@@ sz@@ [100][100]; scanf("%d",&n); int@@ flag=0; start1@@ =0; start2@@ =0; end1@@ =0; end2@@ =0; for(inti=0;i<n;i++) for(intj=0;j<n;j++) { scanf("%d",&sz[i][j]); if(sz@@ [i][j]==0&&@@ flag@@ ==0) { flag=1; start1@@ =i+1; start2@@ =j+1; } if(sz@@ [i][j]==0) { end1@@ =i; end2@@ =j; } } s=(@@ end1@@ -@@ start1@@ )*(@@ end2@@ -@@ start2@@ ); printf("%d\n",s); return0; }  
c -1
h -1
0

inta[@@ 10000@@ ],b[@@ 10000]; int@@ sizea@@ ,@@ sizeb@@ ; voidread@@ (){ cin>>@@ sizea@@ >>@@ sizeb@@ ; inti; for(i=0;i<=@@ sizea@@ -1;i++) cin>>a[i]; for(i=0;i<=@@ sizeb@@ -1;i++) cin>>b[i]; } voidorder@@ (intn,@@ inta[@@ ]){ inti,j; inttemp; for(i=n-1@@ ;i>=1;i--) for(j=0;j<=i-1;j++) if(a[j]>a[j+1]) { temp=@@ a[j];a[j]=a[j+1];@@ a[j+1]=temp; } } voidpaixu@@ (){ order@@ (@@ sizea@@ ,@@ a); order@@ (@@ sizeb@@ ,@@ b); } void@@ mix@@ (){ inti; for(i=0;i<=@@ sizeb@@ -1;i++) a[@@ sizea@@ +i]=b[i]; } voidprint@@ (){ cout<<a[0]; for(inti=1;i<=@@ sizea@@ +@@ sizeb@@ -1;i++) cout<<""<<a[i]; } intmain(){ read(); paixu@@ (); mix@@ (); print(); }  
c -1
h -1
intmain() { intn,@@ z[@@ 1000][1000],@@ i,j,k,@@ l,@@ s; scanf("%d",&n); for(i=0;i<n;i++) { for(j=0;j<n;j++) { scanf("%d",&@@ z@@ [i][j]); } } for(i=0;i<n;i++) { for(j=0;j<n;j++) { if(z@@ [i][j]==0) break; } if(j@@ <n) break; } k=i; l@@ =j; for(i=n-1;i>=0;i--) { for(j=n-1;j>=0;j--) { if(z@@ [i][j]==0) break; } if(j@@ >=0) break; } k@@ =i@@ -k@@ -1; l@@ =j@@ -l@@ -1; s=@@ k@@ *@@ l; printf("%d",s); return0; }  
c -1
h -1
0

structbook { long@@ intnum; charname[26]; }@@ book[1000]; intmain() { intm,i,j,@@ r; int@@ writer@@ [26@@ ]={0@@ ,@@ 0,0,0,0,0,0,0,0,@@ 0,0,0,0,0,0,0,0,@@ 0,0,0,0,0,0,0,0,@@ 0@@ }; scanf("%d",&m); for(i=0;i<m;i++) { scanf("%ld",&@@ book[i].@@ num); scanf("%s",@@ book[i].name); } for(i=0;i<m;i++) { r@@ =strlen(@@ book[i].name); for(j=0;j<@@ r@@ ;j++) { writer@@ [@@ book[i].@@ name@@ [j]@@ -'A']++; } } intmax=0; char@@ w@@ ='A'; for(i=0;i<26;i++) { if(@@ writer@@ [i]>max) { max=@@ writer@@ [i]; w@@ =i@@ +'A'@@ ; } } printf("%c\n",@@ w); printf("%d\n",max); for(i=0;i<m;i++) { for(j=0;j<@@ r@@ ;j++) { r@@ =strlen(@@ book[i].name); if(book[i].@@ name[j]==@@ w@@ ) { printf("%ld@@ \n",@@ book[i].@@ num); } } } return0; }  
c -1
h -1
intmain(){ char@@ zf@@ [100]; char@@ zq@@ [100]; char@@ cu@@ [100]; char@@ dt@@ [100][100]; inti,@@ l,@@ lc@@ ,j,@@ lz@@ ,@@ k=0,@@ t,@@ m,@@ n=0,@@ len,@@ ci@@ ; gets(@@ zf@@ ); gets(@@ cu@@ ); gets(@@ zq@@ ); l=strlen(@@ zf@@ ); lc@@ =strlen(@@ cu@@ ); lz@@ =strlen(@@ zq@@ ); for(i=0;i<l;i++){ if(@@ zf@@ [i]==@@ cu@@ [0]){ ci@@ =1; for(j=0;j<@@ lc@@ ;j++@@ ,i@@ ++){ if(@@ zf@@ [i]!=@@ cu@@ [j]){ ci@@ =0; break; } } if(@@ ci@@ ==1){ t@@ =i@@ -@@ lc@@ ; for(j=0;j<@@ lc@@ ;j++,@@ t++){ zf@@ [t@@ ]=@@ zq@@ [j]; } break; } } } printf("%s",@@ zf@@ ); return0; }  
c -1
h -1
0

intk; intmain() { int@@ Max@@ (inta,int@@ b); int@@ height@@ [100]; int@@ dp@@ [100]; charc; inti=0,@@ temp@@ =0,@@ n,@@ j,@@ dpmax@@ =0; scanf("%d",&n); n=@@ n-1; for(i=0;i<=@@ n;i++) { scanf("%d",&@@ height@@ [i]); } for(i=0;i<=@@ n;i++) { dp@@ [i]=1; for(j=0;j<i;j++) { if(@@ height@@ [i]<=@@ height@@ [j]@@ )@@ dp@@ [i]=@@ Max@@ (@@ dp@@ [j]@@ +1,@@ dp@@ [i]); } } for(i=0;i<=@@ n;i++) { dpmax@@ =@@ Max@@ (@@ dpmax@@ ,@@ dp@@ [i]); } printf("%d",@@ dpmax@@ ); return0; } int@@ Max@@ (inta,intb) { k@@ =(@@ a@@ <b@@ ?@@ b@@ :@@ a); return(@@ k); }  
c -1
h -1
intmain() { inta,b,c,@@ n,@@ s[@@ 12@@ ],@@ i,@@ t; scanf("%d%d%d",&a,&b,&c); s[@@ 0]=@@ 31; s[2@@ ]=31; s[@@ 3@@ ]=30; s[@@ 4@@ ]=31; s[@@ 5@@ ]=30; s[@@ 6@@ ]=31; s[@@ 7@@ ]=31; s[@@ 8@@ ]=30; s[@@ 9@@ ]=31; s[@@ 10@@ ]=30; s[@@ 11@@ ]=31; t=0; for(i=0;i<b@@ -1;i++) { if((@@ a%4==0&&a%100!=0@@ )||@@ a%@@ 400==0) { s@@ [1]=@@ 29; t=@@ s[i]@@ +@@ t; } else { s@@ [1]=@@ 28; t=@@ s[i]@@ +@@ t; } } n=@@ t@@ +c; printf("%d\n",n); return0; }  
c -1
h -1
0

intmain(){ double@@ e; char@@ zf@@ [2][@@ 501],@@ count=0,@@ c,@@ w@@ =0; scanf("%lf@@ %c@@ ",&@@ e@@ ,&c); gets(@@ zf@@ [0]); gets(@@ zf@@ [1]); int@@ a=strlen(@@ zf@@ [0]@@ ),@@ b=strlen(@@ zf@@ [1]); if(a!=@@ b){ printf("error"); }else{ for(intm=0;m@@ <a@@ ;m++){ for(int@@ o@@ =0;@@ o@@ <@@ 2;@@ o@@ ++){ if(@@ zf@@ [@@ o@@ ][m@@ ]!='@@ A'&&@@ zf@@ [@@ o@@ ][m@@ ]!='@@ T'&&@@ zf@@ [@@ o@@ ][m@@ ]!='@@ G'&&@@ zf@@ [@@ o@@ ][m@@ ]!='@@ C'){ w@@ ++; } } } if(w@@ !=0){ printf("error"); }else{ for(inti=0;i<@@ a;i++){ if(@@ zf@@ [0]@@ [i]==@@ zf@@ [1]@@ [i]){ count++; } } if(1.0*@@ count@@ /@@ a@@ >@@ e@@ ){ printf("yes"); }else{ printf("no"); } } } return0; }  
c -1
h -1
intmain() { struct@@ patient_t@@ { charid[10]; intage; }@@ patients@@ [100],@@ t; inti,j,n; scanf("%d",&n); for(i=0;i<n;i++){ scanf("%s%d",&@@ patients@@ [i].@@ id,@@ &@@ patients@@ [i].age); } for(i=0;i<n;i++){ for(j=n-1@@ ;j>i@@ ;j--){ if(@@ patients@@ [j].age@@ >=60@@ && patients@@ [j].age@@ >@@ patients@@ [j-1@@ ].age){ t=@@ patients@@ [j]; patients@@ [j]=@@ patients@@ [j-1]; patients@@ [j-1]=@@ t; } } } for(i=0;i<n;i++){ printf("%s\n",@@ patients@@ [i].id); } return0; }  
c -1
h -1
0

intmain() { char@@ word@@ [2][@@ 256],@@ chan@@ [256]; inti,j,@@ len@@ [2@@ ],@@ result@@ =1,@@ wzy@@ =0,@@ weizhi@@ ; scanf("%s%s%s",@@ word@@ [1@@ ],@@ word@@ [0],@@ chan@@ ); len@@ [0]=@@ strlen(@@ word@@ [0]); len@@ [1]=@@ strlen(@@ word@@ [1]); for(i=0;i<=@@ len@@ [1]@@ -@@ len@@ [0]@@ ;i++) { if(@@ word@@ [1]@@ [i]==@@ word@@ [0][@@ 0]@@ ) { for(j=i+1;j<@@ i+@@ len@@ [0]@@ ;j++) { if(@@ word@@ [1]@@ [j]!=@@ word@@ [0]@@ [j-i@@ ]) { result=0; break; } } if(result@@ ) { weizhi@@ =i; wzy@@ =1; } result=1; } if(@@ wzy@@ ==1) { break; } } if(@@ wzy@@ ==1) { for(i=@@ weizhi@@ ;i<@@ weizhi@@ +@@ len@@ [0]@@ ;i++) { word@@ [1]@@ [i]=@@ chan@@ [i-@@ weizhi@@ ]; } } for(i=0;i<len@@ [1]@@ ;i++) { printf("%c",@@ word@@ [1]@@ [i]); } return0; }  
c -1
h -1
intmain() { chara[256],b[256],c[256]; inti,j,@@ lena@@ ,@@ lenb@@ ; scanf("%s%s%s",a,b,c); lena@@ =strlen(a); lenb@@ =strlen(b); a[@@ lena@@ ]='\0'; int@@ x,@@ s; for(i=0;i<@@ lena@@ ;i++) { x@@ =-1; for(j=0;j<@@ lenb@@ ;j++) { if(a@@ [i+j]!=@@ b[j]) { x=0; break; } } if(x@@ !=0) { s@@ =i; break; } } if(x@@ ==0) printf("%s",a); else { for(i=0;i<@@ s;i++) printf("%c",a[i]); printf("%s",@@ c); for(i=@@ s@@ +@@ lenb@@ ;i<@@ lena@@ ;i++) { printf("%c",a[i]); } } return0; }  
c -1
h -1
1


int@@ breakways@@ (int@@ num,int@@ min); intmain() { intn; cin>>n; intnumber; for(inti=1;i<=n;i++) { cin>>@@ number; cout<<@@ breakways@@ (@@ number,@@ 2)<<endl; } } int@@ breakways@@ (int@@ num,int@@ min) { intsum=0; for(intj=@@ min@@ ;j<=@@ num@@ ;j++) { if(num@@ %j==0) { if(num@@ !=@@ j) sum+=@@ breakways@@ (@@ num@@ /j,j); else sum+=@@ 1; } } returnsum; }  
c -1
h -1
structpatient { charID@@ [@@ 15]; intage; structpatient*next; }; intn; structpatient*@@ create@@ () { structpatient@@ *head,*p1,*p2; p1=(struct@@ patient@@ *)malloc(LEN); scanf("%s%d",p1->@@ ID@@ ,&p1->@@ age); head=p1; p2=p1; p1->next=NULL; inti=1; do { if(i==@@ n@@ )break; p1=(struct@@ patient@@ *)malloc(LEN); scanf("%s%d",p1->@@ ID@@ ,&p1->@@ age); p2->next=p1; p2=p1; p1->next=NULL; i++; }while(@@ 1); return(head); } structpatient*@@ findmax@@ (structpatient@@ *head) { structpatient*@@ max; structpatient@@ *p; max=@@ head; p=head->next; while(p) { if(p->@@ age@@ >max@@ ->age@@ ) max=@@ p; p=p->next; } return(@@ max); } structpatient*@@ del@@ (structpatient@@ *head,@@ structpatient*@@ needdel@@ ) { structpatient@@ *p,*@@ ppre@@ ; printf("%s\n",@@ needdel@@ ->@@ ID); p=head; while(p@@ &&@@ needdel@@ !=@@ p) {@@ ppre@@ =p; p=p@@ ->next@@ ;} if(p==@@ head@@ ) { head=@@ p@@ ->next; free@@ (p); } elseif(@@ p) { ppre@@ ->next=@@ p@@ ->next; free@@ (p); } return(head); } voidprint@@ (structpatient@@ *head) { structpatient@@ *p; p=head; while(p) { printf("%s\n",p->@@ ID); p=p->next; } } intmain() { scanf("%d",&n); structpatient@@ *head,*p; head=@@ create@@ (); p=head; do { p=@@ findmax@@ (head); if(p->@@ age@@ <60@@ )break; head=@@ del@@ (head,@@ p); }while(@@ 1); print(head); }  
c -1
h -1
0

int@@ disassamble@@ (int,int); intmain() { intn; inti=1; inta,@@ result; cin>>n; while(i<=@@ n) { i++; cin>>a; result=@@ disassamble@@ (a,@@ 2); cout<<@@ result@@ <<endl; } return0; } int@@ disassamble@@ (inta,int@@ y) { inti,@@ count@@ =1; if(a==1) return0; if(a==@@ 2) return1; for(i=y@@ ;i@@ *@@ i<=@@ a;i++) { if(a%i==0) { count=@@ disassamble@@ (a@@ /i,@@ i@@ )+@@ count; } } returncount; }  
c -1
h -1
intmain() { intn,i,j,@@ p,q,@@ t; inta[@@ 100000@@ ][@@ 3@@ ]; scanf("%d",&n); for(i=0;i<n;i++){ for(j=0;j<3;j++) scanf("%d",&a[i][j]); a[i]@@ [1]=@@ a[i][1]@@ +@@ a[i]@@ [2]; } for(p=0;p@@ <@@ 3@@ ;p++){ for(q=@@ n-2@@ ;q@@ >=0@@ ;q@@ --){ if(a[@@ q@@ ][1@@ ]<@@ a[q@@ +1@@ ][1@@ ]){ for(i=0;i<2@@ ;i++){ t=@@ a[q@@ ]@@ [i]; a[q@@ ]@@ [i]=@@ a[q@@ +1@@ ]@@ [i]; a[q@@ +1@@ ]@@ [i]=@@ t; } } } } for(i=0;i<@@ 3;i++){ printf("%d%d\n",@@ a[i][@@ 0],@@ a[i]@@ [1]); } return0; }  
c -1
h -1
0

intmain(intargc,char*argv[]) {@@ inti,j,n,@@ k; intm=0; inta[1000]; scanf("%d",&n); scanf("%d",&k); for(i=0;i<n;i++) scanf("%d",&a[i]); for(i=0;i<n;i++) {@@ for(j=i+1;j<n;j++) { if(a[i]+a[j]==k) m++; } } if(m@@ !=0) printf("yes"); if(m==0) printf("no"); return0; }  
c -1
h -1
intmain() { introw,col,@@ a[100][100]; inti,j; scanf("%d%d",&row,&col); for(i=0;i<@@ row@@ ;++i) for(j=0;j<col@@ ;++@@ j) scanf("%d",@@ a[i]@@ +j); for(i=0;i<@@ col@@ ;++i) for(j=0;@@ (i@@ -j@@ >=0@@ )&&(@@ j@@ <row@@ );@@ ++@@ j) printf("%d\n",@@ a[j][i-j@@ ]); for(i=1;i<@@ row@@ ;++i) for(j=0;@@ (j@@ <col@@ )&&(i@@ +j@@ <row@@ );@@ ++@@ j) printf("%d\n",@@ a[i+j@@ ][col@@ -j@@ -1]); return0; }  
c -1
h -1
0

struct{ intnum; char@@ w@@ [26]; }@@ book[@@ 999@@ ],@@ test@@ [1]; intmain(intargc,char*argv[]) { intm,i,j,@@ n,@@ s; char@@ x,@@ c; scanf("%d",&m); for(i=0;i<m;i++) { scanf("%d%s",&book[i].num,@@ book[i].@@ w); } x@@ ='A'; n=0; c@@ ='A'; while(1) { s=0; for(i=0;i<m;i++) { for(j=0;j<strlen(@@ book[i].@@ w@@ );j++) { if(book[i].@@ w@@ [j]==@@ x) {@@ s@@ ++;} } } if(s@@ >n) { n=@@ s; c=@@ x; } if(x@@ =='@@ Z@@ ')@@ {break;} x++; } printf("%c\n%d\n",@@ c,@@ n); for(i=0;i<m;i++) { for(j=0;j<strlen(@@ book[i].@@ w@@ );j++) { if(book[i].@@ w@@ [j]==@@ c) { printf("%d\n",book[i].@@ num); } } } return0; }  
c -1
h -1
voidmain() { void@@ toy@@ (int@@ d[@@ 1000@@ ],int@@ e); void@@ tx@@ (int@@ f[@@ 1000@@ ],int@@ g@@ [@@ 1000@@ ],int@@ h@@ ,int@@ k); intn,m,@@ i; inta[@@ 1000],b[1000],@@ c[@@ 1000]; scanf("%d%d",&n,&m); for(i=0;i<n;i++) scanf("%d",&a[i]); for(i=0;i<m;i++) scanf("%d",&b[i]); toy@@ (a,@@ n); toy@@ (b,@@ m); tx@@ (a,b,@@ n,@@ m); printf("%d",a[0]); for(i=1;i<@@ n+m;i++) printf("%d",a[i]); } void@@ toy@@ (int@@ d[@@ 1000@@ ],int@@ e@@ ) { int@@ p,q,@@ r; for(p=0;p@@ <@@ e@@ -1@@ ;p++) { for(q=@@ e@@ -2@@ ;q@@ >=0@@ ;q@@ --) { if(@@ d[@@ q@@ ]>@@ d[@@ q@@ +1]) { r=@@ d[@@ q@@ ]; d[@@ q@@ ]=@@ d[@@ q@@ +1]; d[@@ q@@ +1]=@@ r; } } } } void@@ tx@@ (int@@ f[@@ 1000@@ ],int@@ g@@ [@@ 1000@@ ],int@@ h@@ ,int@@ k) { intx; for(@@ x=@@ h@@ ;x@@ <@@ h@@ +@@ k;@@ x++) f@@ [x@@ ]=@@ g@@ [x@@ -@@ h@@ ]; }  
c -1
h -1
0

intmain() { int@@ lj@@ (inta[@@ ],intn,int@@ m); intn,m,@@ i,j,@@ l,@@ k=0,@@ s,@@ t=0,@@ a[@@ 25],b[@@ 25]; scanf("%d",&k); for(i=0;i<k;i++) scanf("%d",&a[i]); for(i=0;i<k;i++) b[i]=@@ lj@@ (a,@@ i,@@ k); for(i=0;i<k;i++) { if(t@@ <@@ b[i]) t=b[i]; } printf("%d",t); getchar(); getchar(); getchar(); } int@@ lj@@ (inta[@@ ],intn,int@@ m) { inti,@@ t,@@ p,@@ l=0,@@ b[@@ 25]; if(n==@@ m-1) return1; else { for(i=0;i<@@ 25;i++) b[i]=0; for(i=n@@ +1;i<@@ m;i++) { if(a[i]<=@@ a[n@@ ]) { b[i]=@@ lj@@ (a,@@ i,@@ m); } } t=@@ b[@@ n@@ +1]; for(i=n@@ +1;i<@@ m;i++) { if(t@@ <@@ b[i]) t=b[i]; } return@@ t@@ +1; } }  
c -1
h -1
intmain(intargc,char*argv[]) { intyear,month,day,@@ a; scanf("%d%d%d",&year,&month,&day); if(year%@@ 4==0&&year%100!=0@@ ||@@ year%@@ 400@@ ==0){ if(month==1) a=@@ day; if(month==2) a=@@ day+@@ 31; if(month==3) a=@@ day+@@ 60@@ ; if(month==@@ 4) a=@@ day+@@ 91@@ ; if(month==@@ 5) a=@@ day+@@ 121@@ ; if(month==@@ 6) a=@@ day+@@ 152@@ ; if(month==@@ 7) a=@@ day+@@ 182@@ ; if(month==8) a=@@ day+@@ 213@@ ; if(month==@@ 9) a=@@ day+@@ 244@@ ; if(month==@@ 10) a=@@ day+@@ 274@@ ; if(month==@@ 11) a=@@ day+@@ 305@@ ; if(month==@@ 12) a=@@ day+@@ 335@@ ;} else { if(month@@ ==1)@@ a=@@ day; if(month==@@ 2)@@ a=@@ day+@@ 31; if(month==@@ 3)@@ a=@@ day+@@ 59@@ ; if(month==@@ 4)@@ a=@@ day+@@ 90@@ ; if(month==@@ 5@@ )@@ a=@@ day+@@ 120@@ ; if(month==@@ 6@@ )@@ a=@@ day+@@ 151@@ ; if(month==@@ 7@@ )@@ a=@@ day+@@ 181@@ ; if(month==@@ 8@@ )@@ a=@@ day+@@ 212@@ ; if(month==@@ 9@@ )@@ a=@@ day+@@ 243@@ ; if(month==@@ 10@@ )@@ a=@@ day+@@ 273@@ ; if(month==@@ 11@@ )@@ a=@@ day+@@ 304@@ ; if(month==@@ 12@@ )@@ a=@@ day+@@ 334@@ ;@@ }; printf("%d\n",@@ a); return0; }  
c -1
h -1
0

intmain() { inta[@@ 20@@ ],b[@@ 20]; inti,j,k; intn; i@@ =1;@@ n=0; while(1) { scanf("%d",&a[i]); if(a[i]==@@ -1)break; else@@ if(a[i]==0) { for(j=1;j<=@@ i-1;j++) b[j]=@@ a[j]@@ *2@@ ; for(j=1;j<=@@ i-1;j++) for(k=1;k<=@@ i-1;k++) { if(b[j]@@ ==@@ a[k]@@ )@@ n++; } printf("%d\n",n); i=1; n=0; } else@@ i++; } return0; }  
c -1
h -1
voidmain() { intn,i; inta[@@ 100000]; scanf("%d@@ /@@ n@@ ",&@@ n); for(i=0;i<n;i++) scanf("%d",&a[i]); printf("%d",a[0]); i=1; while(i<n) { int@@ j=0,@@ x=0; while(j<@@ i) { if(a[i]==a[j]) { x=1; break; } j++; } if(x@@ ==0) printf("%d",a[i]); i++; } }  
c -1
h -1
0

intmain(){ intn,k,i,@@ a,@@ m=0,@@ s1@@ [1000],@@ s2@@ [1000]; scanf("%d%d",&n,&k); for(i=0;i<n;i++){ scanf("%d",&@@ s1[i]); s2@@ [i]=@@ s1@@ [i]; } for(i=0;i<(@@ n-1)@@ ;i++){ for(a@@ =(@@ i@@ +1@@ );@@ a@@ <n;@@ a++){ if(s1@@ [i]+@@ s2@@ [a@@ ]==k){ m++; } } } if(m@@ >0@@ )@@ printf("yes"); elseprintf("no"); return0; }  
c -1
h -1
structstudent { intid; int@@ ch; intmath; }; intmain() { intmax@@ (int*p,int@@ n); voidshuchu@@ (int*p@@ ,@@ intn,@@ intk,@@ structstudent@@ student[@@ 100001@@ ]); structstudent@@ student[@@ 100001@@ ]; intn,@@ i@@ ,*@@ p,@@ k; p=@@ (int*)@@ calloc@@ (@@ 100001@@ ,@@ sizeof(int@@ )); scanf("%d\n",&n); for(i=0;i<n;i++) { scanf("%d%d%d",&@@ student[i].@@ id,&@@ student[i].@@ ch@@ ,&@@ student[i].@@ math); (@@ *(p+i)@@ )@@ =(@@ student[i].@@ ch@@ +@@ student[i].@@ math); } k=@@ max(@@ p,@@ n); shuchu@@ (p,@@ n,k,@@ student@@ ); k=@@ max(@@ p,@@ n); shuchu@@ (p,@@ n,k,@@ student@@ ); k=@@ max(@@ p,@@ n); shuchu@@ (p,@@ n,k,@@ student@@ ); return0; } intmax@@ (int*p@@ ,intn) { intk=0,@@ i; for(i=0;i<n;i++) { if((@@ *(p+i)@@ )>@@ k) k@@ =(@@ *(p@@ +i)); } return(@@ k); } voidshuchu@@ (int*p@@ ,@@ intn,@@ intk,@@ structstudent@@ student[@@ 100001@@ ]) { inti; for(i=0;i<n;i++) { if((@@ *(p+i)@@ )==@@ k) { printf("%d%d\n",@@ student[i].@@ id,@@ k); (@@ *(p+i)@@ )@@ =0; break; } } }  
c -1
h -1
0

intmain() { intn; inti,j; int@@ book_number@@ [26]; intmax=0; int@@ max_n@@ ; int@@ author_len@@ ; struct@@ data { intnumber; charauthor@@ [27]; }; scanf("%d",&n); structdata@@ *@@ input@@ =(struct@@ data@@ *)malloc(sizeof(struct@@ data@@ )*n); for(j=0;j<=@@ 25@@ ;j++) book_number@@ [j]@@ =0; for(i=0;i<=n-1;i++) { scanf("%d%s",&@@ input@@ [i].@@ number,@@ input@@ [i].@@ author); author_len@@ =strlen(@@ input@@ [i].@@ author); for(j=0;j<=@@ author_len@@ -1;j++) book_number@@ [@@ input@@ [i].@@ author@@ [j]@@ -'A']++; } for(j=0;j<=@@ 25@@ ;j++) { if(@@ book_number@@ [j]@@ >max) { max=@@ book_number@@ [j]; max_n@@ =j; } } printf("%c\n%d\n",@@ max_n@@ +@@ '@@ A',@@ max); for(i=0;i<=n-1;i++) { author_len@@ =strlen(@@ input@@ [i].@@ author); for(j=0;j<=@@ author_len@@ -1;j++) { if(@@ input@@ [i].@@ author@@ [j]==@@ max_n@@ +@@ 'A'@@ ) { printf("%d\n",@@ input@@ [i].@@ number); break; } } } free(@@ input@@ ); return0; }  
c -1
h -1
main() { intk,i,j,@@ l,@@ m,n,@@ a[100][100]; scanf("%d",&k); for(i=0;i<k;i++) { scanf("%d%d",&m,&n); int@@ add@@ =0; for(j=0;j<m;j++) { for(l=0;l<n;l++) scanf("%d",&a[j]@@ [l]); } for(l=0;l<n;l++) add@@ +=@@ (@@ a[0][@@ l@@ ]+@@ a[m-1][@@ l@@ ]); for(l=1;@@ l<@@ m-1@@ ;l++) add@@ +=@@ (@@ a[l@@ ][0]+@@ a[l@@ ][@@ n-1]); printf("%d\n",@@ add@@ ); for(j=0;j<@@ 100@@ ;j++) { for(l=0;l<@@ 100@@ ;l++) a[j]@@ [l@@ ]=0; } } getchar(); getchar(); }  
c -1
h -1
0

intmax@@ (inta,intb) { if(a@@ >=@@ b) { return@@ a; } else { return@@ b; } } int@@ min@@ (inta,intb) { if(a@@ <=@@ b) { return@@ a; } else { return@@ b; } } intmain() { inta[100][100]; int@@ hang@@ ,@@ lie@@ ; inti,j,k; scanf("%d%d",&@@ hang@@ ,&@@ lie@@ ); for(i=0;i<=@@ hang@@ -1;i++) { for(j=0;j<=@@ lie@@ -1;j++) { scanf("%d",&a[i][j]); } } for(k=0;k<=@@ hang@@ +@@ lie@@ -2@@ ;k++) { for(i=@@ max(@@ 0,@@ k-@@ lie@@ +1)@@ ;i<=@@ min@@ (@@ hang@@ -1@@ ,k@@ );i++) { printf("%d\n",a[i]@@ [k-i]); } } return0; }  
c -1
h -1
structpatient { charname@@ [10]; intage; }@@ p@@ [100],@@ e,@@ old@@ [100],@@ young@@ [100]; intmain() { intn,i,j=0,@@ k=0,@@ o@@ =-1,@@ y@@ =-1; scanf("%d",&n); structpatient@@ p@@ [100],@@ old@@ [100],@@ young@@ [100]; for(i=0;i<n;i++){ scanf("%s%d",@@ p[i].@@ name@@ ,&@@ p[i].age); if((@@ p@@ [i].age@@ )@@ >=60){ o@@ ++; old@@ [j]=@@ p[i]; j++; }else{ y++; young@@ [k]=@@ p[i]; k++; } } for(i=@@ 120@@ ;i@@ >=60@@ ;i--){ for(j=0;j<@@ o@@ +1@@ ;j++){ if(old@@ [j].age@@ ==@@ i){ printf("%s\n",old@@ [j].@@ name); } } } for(i=0;i<@@ y@@ +1@@ ;i++){ printf("%s\n",@@ young@@ [i].@@ name); } return0; }  
c -1
h -1
0

intmain(){ chara[501],b[501]; intn,i,j; double@@ r,@@ m=0,@@ l=0; scanf("%lf",&@@ r); scanf("%s",&@@ a); scanf("%s",&@@ b); if(strlen(a)!=strlen(b@@ )){ printf("error"); return0; } elseif(@@ strlen(a)@@ ==@@ strlen(b@@ )){ for(i=0;a[i]@@ !='\0';i++){ if((a[i]!='@@ A'&&a[i]!='T'&&a[i]!='C'&&a[i]!='G')||(b[i]!='A'&&b[i]!='T'&&b[i]!='C'&&b[i]!='@@ G')){ printf("error"); return0; } else@@ if(a[i]==b[i]){ m++; } } } l@@ =strlen(a); if(m@@ /@@ l>@@ r@@ ){ printf("yes"); } else{ printf("no"); } return0; }  
c -1
h -1
intmain(){ charstr@@ [100],@@ sub@@ [100],@@ re@@ [100]; gets(str); gets(sub); gets(@@ re); int@@ bar@@ =0,@@ min@@ =0; int@@ len1=strlen(@@ str@@ ),@@ len2=strlen(@@ sub); for(inti=0;i<@@ len1@@ ;@@ ){ bar@@ =0; if(str[i]==@@ sub@@ [0]){ for(intj=0;j<@@ len2@@ ;j++){ if(str@@ [i+j]!=@@ sub@@ [j]){ bar@@ =1; } } if(@@ bar@@ ==0&&@@ min@@ ==0){ printf("%s",@@ re); i@@ =i+@@ len2@@ ; min@@ =1; } else{ printf("%c",@@ str[i]); i=i+1; bar@@ =0; } } else{ printf("%c",@@ str[i]); i=i+1; } } return0; }  
c -1
h -1
0

intmain() { int@@ bkn@@ ,@@ m@@ =1,@@ n,@@ i,j; char@@ bka@@ [30]; struct@@ author { intnum; int@@ p[@@ 200]; } a[@@ 30]; scanf("%d",&n); for(i=1;i<@@ 27@@ ;i++) a[i].@@ num=0; for(i=0;i<n;i++) { scanf("%d%s",&@@ bkn@@ ,@@ bka@@ ); for(j=0;j<strlen(@@ bka@@ );j++) { a[@@ bka@@ [j]@@ -@@ 64@@ ].@@ num++; a[@@ bka@@ [j]@@ -@@ 64@@ ].@@ p[@@ a[@@ bka@@ [j]@@ -@@ 64@@ ].num@@ -1@@ ]=@@ bkn@@ ; } } for(i=2@@ ;i<@@ 27@@ ;i++) if(a[i].@@ num@@ >@@ a[m@@ ].@@ num) m=i; printf("%c\n%d\n",@@ m+@@ 64@@ ,@@ a[m@@ ].@@ num); for(i=0;i<@@ a[m@@ ].@@ num;i++) printf("%d\n",@@ a[m@@ ].@@ p[i]); return0; }  
c -1
h -1
intmain() { charstr@@ [300]; char@@ sub@@ [300]; char@@ rep@@ [300]; inti,j,@@ lenstr@@ ,@@ lensub@@ ,@@ judge@@ ,@@ state@@ =0; fgets@@ (@@ str,@@ 300@@ ,@@ stdin@@ ); fgets@@ (@@ sub,@@ 300@@ ,@@ stdin@@ ); fgets@@ (@@ rep@@ ,@@ 300@@ ,@@ stdin@@ ); lenstr@@ =strlen(@@ str@@ )@@ -1; lensub@@ =strlen(@@ sub)@@ -1; for(i=0;i<=@@ lenstr@@ -@@ lensub@@ ;i++) { judge@@ =0; for(j=0;j<@@ lensub@@ ;j++) { judge@@ =@@ judge@@ +(@@ str@@ [i+j@@ ]-@@ sub@@ [j]@@ )*(@@ str@@ [i+j@@ ]-@@ sub@@ [j]); } if(@@ judge@@ ==0) {@@ state@@ =1; break;} } if(@@ state@@ ==1) {@@ for(j=0;j<=i-1;j++) printf("%c",str@@ [j]); for(j=0;@@ rep@@ [j]!=@@ '\n@@ '@@ ;j++) printf("%c",@@ rep@@ [j]); for(j=i@@ +@@ lensub@@ ;j<=@@ lenstr@@ -1;j++) printf("%c",str@@ [j]); } else { for(j=0;j<@@ lenstr@@ ;j++) printf("%c",str@@ [j]); } return0; }  
c -1
h -1
0

structpatient { charid[20]; intage; structpatient*next; }@@ *head,*p1,*p2; structpatient*@@ order@@ (intn) { inti,j,t; chara[@@ 20]; for(i=0;i<n-1;i++) { p1=@@ head;@@ p2=p1->next; for(j=0;j<n-1-i;j++) { if(@@ p2->age@@ >=60&&@@ p1->age@@ <@@ p2->age@@ ) { t=@@ p1->age@@ ;@@ p1->age@@ =@@ p2->age@@ ;@@ p2->age@@ =t; strcpy(@@ a,@@ p1->id@@ );strcpy(@@ p1->@@ id,@@ p2->@@ id@@ );strcpy(@@ p2->@@ id,@@ a); } p1=p1->next@@ ;@@ p2=p2->next; } } returnhead; } voidmain() { intn,i; scanf("%d",&n); p1=@@ head=(struct@@ patient*)malloc(sizeof(structpatient)); for(i=0;i<n;i++) { scanf("%s%d",@@ p1->id,&p1->age); p2=p1; p1=(struct@@ patient*)malloc(sizeof(structpatient)); p2->next=p1; } p2->next=NULL; p1=@@ order@@ (n); while(p1@@ ) { printf("%s\n",@@ p1->@@ id); p1=p1->next; } }  
c -1
h -1
intmain(){ intn,a[@@ 20000@@ ],i,j,@@ h@@ =0,@@ k; scanf("%d",&n); for(i=0;i<n@@ ;i=i+1@@ ){ scanf("%d",&a[i]); } printf("%d",a[0]); for(j=1;j<@@ n@@ ;j@@ =j+1@@ ){ for(k=0;k<j@@ ;k@@ =k@@ +1@@ ){ if(a[j]==@@ a[k]@@ ){@@ h@@ =1;} } if(h@@ ==0){@@ printf("%d",@@ a[j]@@ );} else{@@ h@@ =0;} } }  
c -1
h -1
0

intmain() { intn,@@ K@@ ,@@ i,j; inta[1000]; scanf("%d%d@@ /@@ n@@ ",&@@ n,&@@ K@@ ); for(i=0;i<n;i++) { scanf("%d",&a[i]); } for(i=0;i<n;i++) { for(j=i+1;j<n;j++) { if((@@ a[i]+@@ a[j]@@ )==@@ K@@ ) { goto@@ first@@ ; } } } goto@@ third@@ ; first@@ :@@ printf("yes");@@ goto@@ second@@ ; third@@ :@@ printf("no@@ ");@@ return0; second@@ :@@ return0; }  
c -1
h -1
intmain(){ double@@ n,m,@@ d; inta,b,@@ i,@@ c; char@@ u@@ [500],@@ v@@ [500]; scanf("%lf",&n); scanf("%s",@@ u@@ );@@ scanf("%s",@@ v@@ ); a=strlen(@@ u@@ ); b=strlen(@@ v@@ ); if(a!=@@ b@@ ){@@ printf("error");} elseif(a@@ ==@@ b){ c=0; for(i=0;@@ u@@ [i]!='\0';i++){ if(@@ u@@ [i]!='A'&&@@ u@@ [i]!='T'&&@@ u@@ [i]!='G'&&@@ u@@ [i]!='C'&&@@ v@@ [i]!='A'&&@@ v@@ [i]!='T'&&@@ v@@ [i]!='G'&&@@ v@@ [i]!='@@ C') { printf("error"); c@@ =1@@ ;break; } } if(c@@ ==0) { d=0; for(i=0;@@ u@@ [i]!='\0';i++){ if(@@ u@@ [i]==@@ v@@ [i])@@ d++; } m=@@ d@@ /@@ (@@ 1.0@@ *(a@@ -1)); if(m@@ >@@ n@@ ){printf("yes");} else{printf("no");} } } return0; }  
c -1
h -1
0

structbook{ intnum; charwriter@@ [@@ 28@@ ]; }@@ bo@@ [1000]; intmain() { inti,j,k,n,@@ a,b; intmax=0; scanf("%d",&n); for(i=0;i<n;i++){ scanf("%d%s",&@@ bo[i].@@ num,@@ bo[i].@@ writer); } for(i@@ ='@@ Z'@@ ;i@@ >=@@ 'A'@@ ;i--){ a=0; for(k=0;k<n;k++){ for(j=0;j<@@ 27@@ ;j++){ if(@@ bo@@ [k].@@ writer@@ [j]==@@ i){ a++; } } } if(a@@ >max){ max=@@ a; b=i; } } printf("%c\n%d\n",@@ b,@@ max); for(j=0;j<n;j++){ for(i=0;i<@@ 28@@ ;i++){ if(@@ bo@@ [j].@@ writer@@ [i]==@@ b){ printf("%d\n",@@ bo@@ [j].@@ num); } } } return0; }  
c -1
h -1
main() { intn; int@@ amount_lao@@ =0,@@ amount_yiban@@ =0; charc[@@ 11]; int@@ shuru@@ ; inti,j,k,@@ s,@@ p; struct@@ xinxi { charid@@ [11]; intage; }; struct@@ xinxi@@ laoren@@ [100]; struct@@ xinxi@@ common@@ [100]; struct@@ xinxi@@ temp; scanf("%d",&n); for(p=0;p@@ <n;p++) { scanf("%s%d",@@ c@@ ,&@@ shuru@@ ); if(@@ shuru@@ <60) { strcpy(@@ common@@ [@@ amount_yiban@@ ].id,@@ c); common@@ [@@ amount_yiban@@ ].age=@@ shuru@@ ; amount_yiban@@ ++; } elseif(@@ shuru@@ >=60) { strcpy(@@ laoren@@ [@@ amount_lao@@ ].id,@@ c); laoren@@ [@@ amount_lao@@ ].age=@@ shuru@@ ; amount_lao@@ ++; } } for(i=0;i<@@ amount_lao@@ -1;i++) { for(j=0;j<@@ amount_lao@@ -i-1;j++) { if(@@ laoren@@ [j].age@@ <@@ laoren@@ [j+1@@ ].age) { strcpy(@@ temp.@@ id,@@ laoren@@ [j].@@ id); temp.@@ age@@ =@@ laoren@@ [j].@@ age; strcpy(@@ laoren@@ [j].@@ id,@@ laoren@@ [j+1].@@ id); laoren@@ [j].age@@ =@@ laoren@@ [j+1].@@ age; strcpy(@@ laoren@@ [j+1].@@ id,@@ temp.@@ id); laoren@@ [j+1@@ ].age=@@ temp.@@ age; } } } for(k=0;k<@@ amount_lao@@ ;k++) { puts(@@ laoren@@ [k].@@ id); printf("\n"); } for(s=0;s@@ <@@ amount_yiban@@ ;s++) { puts(@@ common@@ [s@@ ].id); printf("\n"); } getchar(); getchar(); }  
c -1
h -1
0

intmain(){ chara[501],b[@@ 501],@@ ratio@@ [20]; double@@ r,@@ R@@ ; inti,@@ c; gets(@@ ratio@@ ); r=@@ atof@@ (@@ ratio@@ ); gets(a); gets(b); if(strlen(a)!=strlen(b@@ )){ printf("error"); return0; } for(i=0;a[i]@@ !='\0';i++){ if((a[i]!='@@ A'&&a[i]!='@@ G'&&a[i]!='@@ C'&&a[i]!='@@ T')||(@@ b[i]!='A'&&b[i]!='@@ G'&&b[i]!='@@ C'&&b[i]!='@@ T')@@ ){ printf("error"); return0; } } c=0; for(i=0;a[i]@@ !='\0';i++){ if(a[i]==b[i]){ c=c@@ +1; } } R@@ =(@@ 1.0*@@ c)@@ /@@ strlen(@@ a); if(@@ R@@ >=@@ r@@ ){ printf("yes"); }else{ printf("no"); } return0; }  
c -1
h -1
intmain() { intn; scanf("%d",&n); inta[n@@ ],b[@@ n@@ ],@@ m=0; for(inti=0;i<n;i++) { scanf("%d",&a[i]); b[i]=1; } for(inti=@@ n-1@@ ;i>=0;i--) for(intj=i@@ -1@@ ;j>=0;j--) if(a[j]>=a[i]&&@@ b[j]@@ <@@ b[i]@@ +1)@@ b[j]=@@ b[i]@@ +1; for(inti=0;i<n;i++) if(m@@ <@@ b[i]@@ )@@ m=@@ b[i]; printf("%d",m); }  
c -1
h -1
0

intmain() { inta[100][100]; int@@ aa@@ [@@ 10000]; intr,@@ c,@@ i,@@ i1@@ ,j,@@ k,@@ r1@@ ,@@ c1@@ ; cin>>@@ r@@ >>@@ c; for(i=0;i<@@ r;i++) { for(j=0;j<@@ c;j++) cin>>a[i][j]; } r1@@ =0; c1@@ =0; k=0; i1@@ =0; while(1) { if(@@ c1@@ <@@ c@@ -1) { i=0; for(j=@@ c1@@ ;j>=0;j--) { aa@@ [k]=@@ a[i][j]; k++; if(i<@@ (@@ r@@ -1)) i++; else break; } c1@@ ++; } else { i=@@ i1@@ ; for(j=@@ c1@@ ;j>=0;j--) { aa@@ [k]=@@ a[i][j]; k++; if(i<@@ (@@ r@@ -1)) i++; else break; } i1@@ ++; } if((@@ i==@@ (@@ r@@ -1)@@ )&&(@@ j==@@ (@@ c@@ -1)@@ )) break; } for(i=0;i<k;i++) { cout<<@@ aa@@ [i]<<endl; } cin.get(); cin.get(); return0; }  
c -1
h -1
voidmain() { intn,a[@@ 20000@@ ],i,j,@@ k=0; scanf("%d",&n); for(i=0;i<n;i++) {@@ scanf("%d",&a[i]);} printf("%d",a[0]); for(i=1;i<n;i++) { for(j=i-1;j>=0;j--) { if(a[j]!=@@ a[i]) { k=k@@ +1;} if(a[j]==a[i]) { k@@ =0;@@ break;} } if(k@@ !=0) { printf("%d",a[i]); k@@ =0;} } printf("\n"); }  
c -1
h -1
0

main() { int@@ x,y; void@@ forget@@ (int,int); forget@@ (x,@@ y); return0; } void@@ forget@@ (intx,inty) { inti,j,k,@@ t,@@ T@@ ; inta[@@ max@@ ]={0},b[@@ max@@ ]; scanf("%d%d",&@@ x,&@@ y); for(i=0;i<x;i++) { scanf("%d",&a[i]); } for(i=0;i<y;i++) { scanf("%d",&b[i]); } for(i=0;i<x@@ -1;i++) { for(j=i+1;j<@@ x;j++) { if(a[i]>a[j]) { t=a[j]; a[j]=@@ a[i]; a[i]=@@ t; } }} for(i=0;i<@@ y@@ -1;i++) { for(j=i+1;j<@@ y;j++) { if(b[i]>@@ b[j]) { T@@ =@@ b[j]; b[j]=@@ b[i]; b[i]=@@ T@@ ; } }} printf("%d",a[0]); for(j=1;j<@@ x;j++) printf("%d",@@ a[j]); for(j=0;j<@@ y;j++) printf("%d",@@ b[j]); }  
c -1
h -1
int@@ rec@@ [26]; intk,@@ sum,@@ i,j; intn@@ [26]; intmax@@ (inta,intb) { if(a@@ >b@@ )@@ return(@@ a); else@@ return(@@ b); } main() { scanf("%d",&k); for(i=1;i<=@@ k;i++)@@ scanf("%d",&@@ rec@@ [i]); for(i=1;i<=@@ k;i++)@@ n@@ [i]=1; for(i=2;i<=@@ k;i++) for(j=1;j<@@ i@@ ;j++)@@ if(@@ rec@@ [i]<=@@ rec@@ [j]@@ )@@ n[i]=@@ max@@ (n@@ [i],@@ n@@ [j]@@ +1); sum=0; for(i=1;i<=@@ k;i++)@@ sum=@@ max(@@ sum,@@ n@@ [i]); printf("%d",sum); }  
c -1
h -1
0

const@@ int@@ mov@@ [4@@ ][2@@ ]={@@ {@@ -1,@@ 0},{@@ 0,@@ -1@@ },@@ {@@ 1,@@ 0},{@@ 0,@@ 1@@ }@@ }; intm,n,@@ counter@@ ; void@@ dfs@@ (intm,int@@ i){ if(m@@ ==1){ ++@@ counter@@ ; return; } for(@@ ;i<=@@ m;@@ ++@@ i){ if(m@@ %i==0){ dfs@@ (m@@ /i,i); } } } intmain(){ intt,@@ m,n; cin>>t; while(t@@ --){ counter@@ =0; cin>>m; dfs@@ (m,@@ 2); cout<<@@ counter@@ <<endl; } }  
c -1
h -1
intmain() { inty,m,d,@@ i,@@ x; scanf("%d%d%d",&y,&m,&d); x=0; if(y%@@ 4!=0@@ ||(@@ y%@@ 100==0&&@@ y%@@ 400!=0)) {@@ for(i=1;i<m;i++) {@@ if(i==1||i==3||i==5||i==7||i==8||i==@@ 10) {@@ x=x+@@ 31@@ ;} elseif(i==@@ 4||i==6||i==9||i==@@ 11@@ ){@@ x=x@@ +30@@ ;} elseif(i==@@ 2@@ ){@@ x=x+@@ 28@@ ;} }} else {@@ for(i=1;i<m;i++) {@@ if(i==1||i==3||i==5||i==7||i==8||i==@@ 10) {@@ x=x+@@ 31@@ ;} elseif(i==@@ 4||i==6||i==9||i==@@ 11@@ ){@@ x=x@@ +30@@ ;} elseif(i==@@ 2@@ ){@@ x=x+@@ 29@@ ;} }} x=x@@ +d; printf("%d",x); return0; }  
c -1
h -1
0

struct@@ node { int@@ s,@@ n; }; void@@ cpy_clr@@ (struct@@ node@@ a[@@ ],@@ struct@@ node@@ b[@@ ]) { inti; for(i=0;i<=@@ MAX@@ &&(@@ a[i].@@ s@@ !=0@@ ||@@ b[i].@@ s@@ !=0@@ );i++) if(b[i].@@ s@@ !=0) {@@ a[i].@@ s=@@ b[i].@@ s@@ ;@@ a[i].@@ n=@@ b[i].@@ n;@@ b[i].@@ s=0;@@ b[i].@@ n@@ =0;} else {@@ a[i].@@ s=0;@@ a[i].@@ n@@ =0;@@ b[i].@@ n@@ =0;} } int@@ chklst@@ (struct@@ node@@ a[@@ ],int@@ n) { inti; int@@ result=0; for(i=0;@@ a[i].@@ s@@ !=0;i++) {@@ if(a[i].@@ s@@ !=@@ n@@ ){@@ result@@ =0;@@ break;} else@@ result@@ ++; } returnresult; } void@@ init@@ (struct@@ node@@ a[@@ ]) { inti; for(i=0;i<@@ MAX@@ ;i++){@@ a[i].@@ s=0;@@ a[i].@@ n@@ =0;} } voidmain() { struct@@ node@@ a[@@ MAX@@ ],b[@@ MAX@@ ]; inti,j,k,l,@@ _n@@ ,@@ n,@@ sum=0; scanf("%d",&n); while(n--) { scanf("%d",&@@ _n@@ ); for(l@@ =@@ 2;@@ l<@@ _n@@ ;l++) if(@@ _n@@ %@@ l@@ ==0) {@@ init@@ (a@@ );@@ init@@ (@@ b); a[0].@@ s=@@ l@@ ;@@ a[0].@@ n=@@ l; while(@@ chklst@@ (a,@@ _n@@ )@@ ==0&&@@ a[0].@@ s@@ !=0) { i@@ =0@@ ;k@@ =-1; if(a[0]@@ .@@ s@@ ==0)break; while(@@ a[i].@@ s@@ !=0) { if(a[i].@@ s@@ ==@@ _n@@ )@@ sum++; else { for(j=@@ a[i].@@ n@@ ;j<=@@ (@@ _n@@ /@@ a[i].@@ s@@ );j++) if(@@ _n@@ %@@ (@@ a[i].@@ s@@ *@@ j)@@ ==0) {@@ b[@@ ++@@ k@@ ].@@ s=@@ a[i].@@ s@@ *@@ j@@ ;@@ b[k@@ ].@@ n@@ =j;} } i++; } cpy_clr@@ (a,b); } i=0; while(@@ a[i].@@ s@@ !=0) { if(a[i].@@ s@@ ==@@ _n@@ )@@ sum++; i++; } } printf("%d\n",@@ ++@@ sum); sum=0; } }  
c -1
h -1
voidmain() { structstudent{ inti; intx; inty; intm; structstudent*next; }; intn,@@ j,@@ k; structstudent*head,*@@ p1,*p2,*@@ p0; scanf("%d",&n); p1=(structstudent*)malloc(LEN); scanf("%d%d%d",&p1->@@ i@@ ,&p1->@@ x@@ ,&p1->@@ y); p1->@@ m=@@ p1->@@ x+@@ p1->@@ y; p2@@ =(structstudent*)malloc(LEN); scanf("%d%d%d",&@@ p2->@@ i@@ ,&@@ p2->@@ x,&@@ p2->@@ y); p2->@@ m=@@ p2->@@ x+@@ p2->@@ y; if(p1->@@ m@@ >@@ p2->@@ m) {@@ head@@ =p1;@@ p1->next@@ =p2@@ ;@@ p2->next@@ =0;} else{@@ p0@@ =p1;@@ p1=p2@@ ;@@ p2=@@ p0@@ ;@@ head@@ =p1;@@ p1->next@@ =p2@@ ;@@ p2->next@@ =0;} p0@@ =(structstudent*)malloc(LEN); scanf("%d%d%d",&@@ p0->@@ i@@ ,&@@ p0->@@ x,&@@ p0->@@ y); p0->@@ m=@@ p0->@@ x+@@ p0->@@ y; while((@@ p0->@@ m@@ <=@@ p1->@@ m@@ )&&(@@ p1->next@@ !=0)) { p2@@ =p1;@@ p1=p1->next; } if(@@ p0->@@ m@@ >@@ p1->@@ m) { if(head@@ ==@@ p1@@ )@@ head=@@ p0@@ ;@@ else@@ p2->next=@@ p0; p0->next@@ =p1; } else { p1->next=@@ p0@@ ;@@ p0->next@@ =0; } for(j=@@ 3@@ ;j<n;j++) { p0@@ =(structstudent*)malloc(LEN); scanf("%d%d%d",&@@ p0->@@ i@@ ,&@@ p0->@@ x,&@@ p0->@@ y); p0->@@ m=@@ p0->@@ x+@@ p0->@@ y; for(k@@ =0,@@ p1=@@ head@@ ;k<=@@ 2@@ ;k++) {if(@@ p0->@@ m@@ >@@ p1->@@ m)@@ break;@@ p1=p1->next@@ ;} if(k==@@ 3@@ )continue; p1=@@ p2=head; while(@@ p0->@@ m@@ <=@@ p1->@@ m) { p2@@ =p1;@@ p1=p1->next; } if(@@ p0->@@ m@@ >@@ p1->@@ m) { if(head@@ ==@@ p1@@ )@@ head=@@ p0@@ ;@@ else@@ p2->next=@@ p0; p0->next@@ =p1; } else { p1->next=@@ p0@@ ;@@ p0->next@@ =0; } } for(p1=@@ head@@ ,j@@ =0;j<@@ 3;j++) { printf("%d%d\n",@@ p1->@@ i,@@ p1->@@ m); p1=p1->next; } }  
c -1
h -1
0

intmain() { charstring@@ [256],@@ substring@@ [256],@@ replacement@@ [256]; inti,j,@@ len1,len2,@@ ex@@ =0,@@ a=0,@@ shit@@ =0; gets(@@ string); gets(@@ substring); gets(@@ replacement); len1=strlen(@@ string); len2=strlen(@@ substring); for(i=0;i<len1;i++) { for(j=0;j<len2@@ ;j++) { if(string@@ [i+j]==@@ substring@@ [j]) { ex@@ ++; } if(@@ ex@@ ==@@ len2@@ &&@@ shit@@ ==0) { shit@@ =1; for(j=@@ a@@ ;j<@@ i;j++) { printf("%c",@@ string@@ [j]); } printf("%s",@@ replacement); a@@ =i+@@ len2@@ ; } } ex@@ =0; } for(j=@@ a@@ ;j<@@ len1@@ ;j++) { printf("%c",@@ string@@ [j]); } return0; }  
c -1
h -1
intmain() { struct@@ data { intage; charid[10]; }@@ o@@ [@@ 101],@@ y[@@ 101],@@ tmp; int@@ no@@ =0,@@ ny@@ =0; inti,j,n; cin>>n; for(i=0;i<n;i++) { cin>>@@ tmp.@@ id@@ >>@@ tmp.@@ age; if(@@ tmp.@@ age@@ >=60) { o@@ [@@ no@@ ]=@@ tmp; no@@ ++; } else { y[@@ ny@@ ]=@@ tmp; ny@@ ++; } } for(i=@@ no@@ -1@@ ;i>0;i--) { for(j=0;j<i;j++) { if(@@ o@@ [j].age@@ <@@ o@@ [j+1@@ ].age) { o@@ [100@@ ]=@@ o@@ [j]; o@@ [j]=@@ o@@ [j+1]; o@@ [j+1]=@@ o@@ [100]; } } } for(i=0;i<@@ no@@ ;i++) cout<<@@ o@@ [i].@@ id@@ <<endl; for(i=0;i<@@ ny@@ ;i++) cout<<@@ y@@ [i].@@ id@@ <<endl; return0; }  
c -1
h -1
0

intmain() { intm,n; cin>>m>>n; int@@ array@@ [m@@ +1@@ ][n@@ +1]; for(inti=1;i<=@@ m;@@ ++@@ i) for(intt@@ =1;t@@ <=n;@@ ++@@ t) cin>>array@@ [i]@@ [t@@ ]; intsum@@ =1; intx@@ [3@@ ]={0@@ ,@@ 0,@@ 1@@ }; int@@ y@@ [3@@ ]={0@@ ,@@ 1,@@ 0@@ }; int@@ dx@@ =1,@@ dy@@ =1,@@ k=1; int@@ tx@@ ,@@ ty@@ ; while(@@ sum<=@@ m*@@ n) { int@@ xx@@ =@@ dx@@ ,@@ yy@@ =@@ dy@@ ; for(;;) { if(@@ xx@@ >@@ m@@ ||@@ yy@@ <@@ 1@@ )break; cout<<@@ array[@@ xx@@ ][@@ yy@@ ]<<endl; xx@@ =@@ xx@@ +1,@@ yy@@ =@@ yy@@ -1; sum++; } tx@@ =@@ dx@@ +@@ x@@ [k],@@ ty@@ =@@ dy@@ +@@ y@@ [k]; if(@@ ty@@ >n) { k++; tx@@ =@@ dx@@ +@@ x@@ [k],@@ ty@@ =@@ dy@@ +@@ y@@ [k]; } dx@@ =@@ tx@@ ,@@ dy@@ =@@ ty@@ ; } return0; }  
c -1
h -1
intleap@@ (int@@ a) { int@@ z; if((@@ a%@@ 4==0)&&(@@ a%100!=0@@ )||(@@ a%@@ 400==0)@@ )@@ z=1; else@@ z=0; return@@ z; } voidmain() { inti,@@ m; int@@ n[@@ 5@@ ][@@ 3@@ ]; int@@ total@@ [5@@ ]; for(i=0;i<=@@ 4@@ ;i++)@@ scanf("%d%d%d",&@@ n[i]@@ [0]@@ ,&@@ n[i]@@ [1]@@ ,&@@ n[i]@@ [2@@ ]); int@@ month@@ [12]={31,28,31,30,31,30,31,31,30,31,30,31}; for(i=0;i<=@@ 4;i++) { month@@ [1]=@@ 28@@ +@@ leap@@ (n@@ [i]@@ [0]); total@@ [i]=0; for(m=0;m@@ <=@@ n[i]@@ [1]@@ -2@@ ;m@@ ++)@@ total@@ [i]=@@ total@@ [i]+@@ month@@ [m]; total@@ [i]=@@ total@@ [i]+@@ n[i]@@ [2]; printf("%d\n",@@ total@@ [i]); } }  
c -1
h -1
0

intmain() { voidread@@ (inta[100],int@@ b[100@@ ],int@@ m,int@@ n); void@@ bubble@@ (inta[100],int@@ m); voidprint@@ (inta[100],int@@ b[100@@ ],int@@ m,int@@ n); intm,n,@@ a[100],b[100]; scanf("%d%d",&m,&n); read@@ (a,b,m,n); bubble@@ (a,m); bubble@@ (b,n); print@@ (a,b,m,n); return0; } voidread@@ (inta[100],int@@ b[100@@ ],int@@ m,intn) { inti; for(i=0;i<m;i++) scanf("%d",&a[i]); for(i=0;i<n;i++) scanf("%d",&b[i]); } void@@ bubble@@ (inta[100],int@@ m) { inti,j,t; for(i=0;i<m;i++) { for(j=0;j<m-1;j++) { if(a[j]>a[j+1]) { t=a[j]; a[j]=a[j+1]; a[j+1]=t; } } } } voidprint@@ (inta[100],int@@ b[100@@ ],int@@ m,intn) { inti; for(i=0;i<m;i++) { printf("%d",a[i]); } for(i=0;i<n-1;i++) { printf("%d",b[i]); } printf("%d\n",@@ b[@@ n-1]); }  
c -1
h -1
intmain() { inti,j,@@ t=0,@@ k,@@ m; inta[100][100]; for(j=0;j<@@ 100@@ ;j++) { scanf("%d",&@@ a[t@@ ][j]); if(a[@@ t@@ ][j]@@ ==0){@@ t=t@@ +1;} if(a[@@ t@@ ]@@ [j]==@@ -1@@ ){@@ break;} } for(k=0;k<@@ t@@ ;k++) { m=0; for(i=0;i<100;i++) { for(j=0;j<@@ 100@@ ;j++) { if(a[k]@@ [i]==@@ 2*@@ a[k]@@ [j]&&@@ a[k]@@ [i]!=0) m++; } } printf("%d\n",m); } return0; }  
c -1
h -1
0

intmain() { intn,k; intc[@@ 1000]; inti=0,j=0,@@ A@@ =0; scanf("%d%d",&n,&k); while(i<n) { scanf("%d",&@@ c[i]); i++; } i=0; while(i<n) { j@@ =i+1; while(j@@ <n) { if(c@@ [i]+@@ c@@ [j]==@@ k)@@ A@@ =1; j++; } i++; } if(A@@ ==1)@@ printf("yes"); elseprintf("no"); return0; }  
c -1
h -1
main() { chara[@@ 257@@ ],b[@@ 257@@ ],c[@@ 257@@ ],@@ d[@@ 257@@ ]@@ ,*p; scanf("%s%s%s",a,b,c); p=@@ strstr@@ (a,b); if(p@@ ==NULL) puts(@@ a); else{ *p@@ ='\0'; strcpy(@@ d,@@ a); strcat(@@ d,@@ c); strcat(@@ d,@@ p+@@ strlen(b@@ )); puts(@@ d@@ );} }  
c -1
h -1
0

intmain(){ inti,n,@@ j; chars@@ [100][@@ 11@@ ],@@ z@@ [11]; int@@ g@@ [100],@@ c; scanf("%d",&n); for(i=0;i<n;i++){ scanf("%s%d",@@ s[i]@@ ,&@@ g@@ [i]); } for(i=0;i<n;i++){ for(j=1;j<@@ n@@ -i;j++){ if(g@@ [j-1]@@ <@@ g@@ [j]&&@@ g@@ [j]@@ >=60){ strcpy(@@ z,@@ s@@ [j-1]@@ );strcpy(@@ s@@ [j-1@@ ],@@ s[j]@@ );strcpy(@@ s[j]@@ ,@@ z); c=@@ g@@ [j-1]@@ ;@@ g@@ [j-1]=@@ g@@ [j];@@ g@@ [j]=@@ c; } } } for(i=0;i<n-1;i++){ printf("%s\n",@@ s[i]); } if(i==@@ n-1){ printf("%s",@@ s[i]); } return0; }  
c -1
h -1
voidmain() { intb; scanf("%d",&b); while(@@ b@@ !=-1) { inta[@@ 15@@ ]={0}; inti=1; intk,@@ j; intsum=0; a[0]=@@ b; scanf("%d",&a[i]); while(a[i]@@ !=0) { i++; scanf("%d",&a[i]); } for(k=0;k<i;k++) { for(j=k@@ +1@@ ;j<@@ i;j++) { if(a[j]==2*@@ a[k]@@ ||@@ a[k@@ ]==2*@@ a[j]) sum++; } } printf("%d\n",sum); scanf("%d",&b); } }  
c -1
h -1
0

intm,n; intmain() { int@@ p@@ [100]={0},@@ q@@ [100]={0},@@ c[@@ 200@@ ]={0}; void@@ re@@ (inta[],intb[@@ ]); void@@ or@@ (inta[],intb[@@ ]); void@@ cb@@ (inta[],intb[],int@@ d[@@ ]); void@@ pr@@ (int@@ d[@@ ]); re@@ (p,@@ q); or@@ (p,@@ q); cb@@ (@@ p,q,@@ c); pr@@ (@@ c); return0;} void@@ re@@ (inta[],intb[]) { inti; scanf("%d%d",&m,&n); for(i=0;i<m;i++) scanf("%d",&a[i]); for(i=0;i<n;i++) scanf("%d",&b[i]); } void@@ or@@ (inta[],intb[]) { inti,j,t; for(i=0;i<m-1;i++) for(j=i+1;j<@@ m;j++) if(a[i]>@@ a[j]@@ ){@@ t=@@ a[i];a[i]=@@ a[j];a[j]=@@ t;} for(i=0;i<n-1;i++) for(j=i+1;j<n;j++) if(b[i]>@@ b[j]@@ ){@@ t=@@ b[i]@@ ;@@ b[i]=b[j]@@ ;@@ b[j]=@@ t;} } void@@ cb@@ (inta[],intb[],int@@ d@@ []) { inti; for(i=0;i<m;i++)@@ d[i]=@@ a[i]; for(i=m;i<@@ m+@@ n;i++)@@ d[i]=@@ b[i-@@ m]; } void@@ pr@@ (int@@ d@@ []) { inti; printf("%d",d@@ [0]); for(i=1;i<@@ m+n;i++) printf("%d",@@ d[i]); }  
c -1
h -1
int*@@ num@@ (int@@ a) { int@@ *p@@ ,i; p=@@ (int*)malloc(@@ a@@ *sizeof(int)); for(i=0;i<a;i++) { scanf("%d",&@@ p[i]); } return@@ p; } void@@ rank@@ (int*p,int@@ a) { inti,j,t; for(i=a@@ -1@@ ;i>0;i--) { for(j=0;j<i;j++) { if(@@ *(p+j)@@ >*@@ (p@@ +j@@ +1@@ )) { t@@ =*(p@@ +j); *(p+j)@@ =*(p@@ +j@@ +1); *(p@@ +j+1)@@ =t; } } } } int*@@ add@@ (int*@@ p1,int*p2@@ ,int@@ a,int@@ b) { inti; int*@@ p3=@@ (int*)malloc(@@ (@@ a+@@ b)@@ *sizeof(int)); for(i=0;i<a;i++) *(@@ p3@@ +i)@@ =*(@@ p1@@ +i); for(i=0;i<b;i++) *(@@ p3@@ +@@ a@@ +i)@@ =*(@@ p2@@ +i); return@@ p3; } voidprint@@ (int*@@ p3@@ ,int@@ x) { inti; for(i=0;i<x;i++) { if(i==0) printf("%d",@@ p3@@ [0]); else printf("%d",@@ p3@@ [i]); } } main() { inta,@@ b@@ ,*@@ p1,*p2,*@@ p3; scanf("%d",&@@ a);@@ scanf("%d",&b); p1=@@ num@@ (a@@ );@@ p2=@@ num@@ (@@ b); rank@@ (@@ p1,@@ a);@@ rank@@ (@@ p2@@ ,@@ b); p3=@@ add@@ (@@ p1,@@ p2@@ ,@@ a,b); print(@@ p3@@ ,@@ (@@ a+@@ b@@ )); free(@@ p1@@ );@@ free(@@ p2@@ );@@ free(@@ p3@@ ); }  
c -1
h -1
1


intc; void@@ cal@@ (intn,int@@ k); intmain(intargc@@ ) {@@ intm,n,@@ j; cin>>m; for(j=1;j<=m;j++) {@@ cin>>n; c=0; cal@@ (n,@@ 1); cout<<@@ c@@ <<endl;} return0; } void@@ cal@@ (intn,int@@ k) {@@ if(n==1) {@@ c++; return@@ ;} inti; for(i=2;i<=n;i++) {@@ if(n@@ %i==0&&@@ i>=@@ k) {@@ cal@@ (n@@ /i,@@ i@@ );}} }  
c -1
h -1
intmain() { intn,@@ year@@ [100],@@ i,j,@@ year2@@ [100]={0},@@ t,@@ k; char@@ num@@ [100][10],@@ num2@@ [100][10],@@ p; scanf("%d",&n); for(i=0;i<n;i++) { scanf("%s",@@ num[i]); scanf("%d",&@@ year@@ [i]); } for(i=0;i<n;i++) { if(@@ year[i]@@ >=60) { for(k=0;k<@@ 10@@ ;k++) {@@ num2@@ [i]@@ [k]=@@ num[i]@@ [k]@@ ;} year2@@ [i]=@@ year@@ [i]; } } for(j=0;j<n-1;j++) for(i=0;i<n@@ -j@@ -1;i++) { if(@@ year2@@ [i]<@@ year2@@ [i+1]) { t=@@ year2@@ [i]; year2@@ [i]=@@ year2@@ [i+1]; year2@@ [i+1]=@@ t; for(k=0;k<@@ 10@@ ;k++) {@@ p=@@ num2@@ [i]@@ [k]; num2@@ [i]@@ [k]=@@ num2@@ [i+1@@ ][k@@ ]; num2@@ [i+1@@ ][k@@ ]=@@ p; } } } for(i=0;i<n;i++) { if(@@ year2@@ [i]!=0) printf("%s\n",@@ num2@@ [i]); } for(i=0;i<n;i++) { if(@@ year[i]@@ <60) printf("%s\n",@@ num[i]); } return0; }  
c -1
h -1
0

intmain(){ charstr@@ [100],@@ sub@@ [100],@@ re@@ [100]; gets(str); gets(sub); gets(@@ re); int@@ bar@@ =0,@@ min@@ =0; int@@ len1=strlen(@@ str@@ ),@@ len2=strlen(@@ sub); for(inti=0;i<@@ len1@@ ;@@ ){ bar@@ =0; if(str[i]==@@ sub@@ [0]){ for(intj=0;j<@@ len2@@ ;j++){ if(str@@ [i+j]!=@@ sub@@ [j]){ bar@@ =1; } } if(@@ bar@@ ==0&&@@ min@@ ==0){ printf("%s",@@ re); i@@ =i+@@ len2@@ ; min@@ =1; } else{ printf("%c",@@ str[i]); i=i+1; bar@@ =0; } } else{ printf("%c",@@ str[i]); i=i+1; } } return0; }  
c -1
h -1
voidmain() { inta[100@@ ][@@ 16@@ ]={0},@@ b[100@@ ]={0},@@ n@@ [100]={0},@@ i,j,k; intm=0; for(i=0;i<100;i++) { scanf("%d",&a[i]@@ [0]); if(a[i]@@ [0]@@ ==-1) { break; } if(a[i]@@ [0]@@ !=-1) { m=m+1; n[i]@@ ++; for(j=1;j<@@ 16@@ ;j++) { scanf("%d",&a[i][j]); if(a[i][j]@@ !=0) { n[i]=@@ n[i]@@ +1; } if(a[i][j]==0) { break; } } } } for(i=0;i<m;i++) { for(j=0;j<n@@ [i];j++) { for(k=0;k<@@ n[i]@@ ;k++) { if(a[i][j]==@@ 2*@@ a[i]@@ [k]) { b[i]=@@ b[i]@@ +1; } } } } for(i=0;i<m;i++) { printf("%d\n",@@ b[i]); } }  
c -1
h -1
0

intmain(){ introw,col; scanf("%d%d",&row,&col); int@@ array[100][100]; for(inti=0;i<@@ row;i++){ for(intj=0;j<@@ col@@ ;j++){ scanf("%d",&array@@ [i][j]); } } int@@ p=0,@@ q=0; while(p@@ <row@@ &&@@ q@@ <col@@ ){ int@@ e=0; while(p@@ +@@ e@@ <row@@ &&@@ q@@ -@@ e@@ >=0@@ ){ printf("%d\n",array@@ [p@@ +@@ e@@ ][q@@ -@@ e@@ ]); e++; } if(q@@ <col@@ -1){ q++; } elseif(@@ q@@ ==@@ col-1@@ ){ p++; } } return0; }  
c -1
h -1
intmain() { void@@ take@@ (intx@@ [@@ 1000@@ ],int@@ l); void@@ rank@@ (intx@@ [@@ 1000@@ ],int@@ l); void@@ com@@ (inta[@@ 1000@@ ],intb[@@ 1000@@ ],int@@ c[@@ 2000@@ ],int@@ al@@ ,int@@ bl@@ ); void@@ prin@@ (intc[@@ 2000@@ ],int@@ l); inta[1000]; intb[@@ 1000]; intc[@@ 2000]; int@@ al@@ ,@@ bl@@ ; scanf("%d%d",&@@ al@@ ,&@@ bl@@ ); take@@ (a,@@ al@@ ); take@@ (b,@@ bl@@ ); rank@@ (a,@@ al@@ ); rank@@ (b,@@ bl@@ ); com@@ (a,b,@@ c,@@ al@@ ,@@ bl@@ ); prin@@ (c,@@ al@@ +@@ bl@@ ); return0; } void@@ take@@ (intx@@ [@@ 1000@@ ],int@@ l) { inti; for(i=0;i<l;i++) { scanf("%d",&@@ x[i]); } } void@@ rank@@ (intx@@ [@@ 1000@@ ],int@@ l) { inti,j,temp; if(l@@ !=1) { for(i=@@ l@@ -2@@ ;i>=0;i--) { for(j=0;j<=i;j++) { if(x@@ [j]>@@ x@@ [j+1]) { temp=@@ x@@ [j]; x@@ [j]=@@ x@@ [j+1]; x@@ [j+1]=temp; } } } } } void@@ com@@ (inta[@@ 1000@@ ],intb[@@ 1000@@ ],int@@ c[@@ 2000@@ ],int@@ al@@ ,int@@ bl@@ ) { inti; for(i=0;i<@@ al@@ ;i++) { c[i]=a[i]; } for(i=@@ al@@ ;i<@@ al@@ +@@ bl@@ ;i++) { c[i]=b[i-@@ al@@ ]; } } void@@ prin@@ (intc[@@ 2000@@ ],int@@ l) { inti; printf("%d",c@@ [0]); for(i=1;i<@@ l@@ ;i++) { printf("%d",c[i]); } }  
c -1
h -1
0

intmain(){ double@@ z,@@ r=0; intm,n,@@ i,@@ error@@ =0; chara[500],b[500]; scanf("%lf",&@@ z); scanf("%s@@ \n",@@ a); scanf("%s",b); m=strlen(a); n@@ =strlen(b); if(m!=@@ n){ error@@ =@@ error@@ +1; }else{ for(i=0;a[i]@@ ;i++){ if(!@@ (@@ a[i]=='@@ A'||a[i]=='T'||a[i]=='@@ C'||@@ a[i]=='@@ G')){ error@@ =@@ error@@ +1; }elseif(@@ !@@ (@@ b[i]=='@@ A'||@@ b[i]=='@@ T'||@@ b[i]=='@@ C'||@@ b[i]=='@@ G')){ error@@ =@@ error@@ +1; }else{ if(a[i]@@ =='@@ A'&&@@ b[i]=='@@ A'@@ ){ r=r@@ +1; } if(b[i]@@ =='@@ T'&&@@ a[i]=='@@ T@@ '){ r=r@@ +1; } if(a[i]@@ =='@@ G'&&@@ b[i]=='@@ G'){ r=r@@ +1; } if(a[i]@@ =='@@ C'&&@@ b[i]=='@@ C'){ r=r@@ +1; } } } r=r@@ /@@ m; } if(@@ error@@ !=0){ printf("error"); }elseif(@@ r@@ >=@@ z@@ ){ printf("yes"); }else{ printf("no"); } return0; }  
c -1
h -1
inta[100],b[100],@@ c@@ [100@@ ];@@ intm,n,@@ i,j,k,@@ xx@@ ; voidsort@@ (inta[],intn) { inti,j,t; for(i=1;i<=n-1;i++) for(j=1;j<=@@ n@@ -i;j++) if(a[j]>a[j+1@@ ]){@@ t=@@ a[j];a[j]=a[j+1];@@ a[j+1]=@@ t;} } void@@ merge@@ (inta[],intb[],int@@ m,intn) { inti; for(i=1;i<=@@ n;i++)@@ a[m@@ +i]=b[i]; } void@@ init@@ (inta[],intb[]) { scanf("%d%d",&m,&n); for(i=1;i<=m;i++) scanf("%d",&a[i]); for(i=1;i<=n;i++) scanf("%d",&b[i]); } voidoutput@@ (inta[],int@@ k) { inti; for(i=1;i<=@@ k;i++)@@ if(i@@ ==1)@@ printf("%d",@@ a[i]@@ );@@ else@@ printf("%d",a[i]); } intmain() { init@@ (a,b); sort@@ (a,m); sort@@ (b,n); merge@@ (a,b,m,n); output@@ (a,@@ m+@@ n); return0; }  
c -1
h -1
0

intmain() { intn,k,i,j,@@ s=0; inta[1000]; scanf("%d%d",&n,&k); for(i=0;i<n;i++) { scanf("%d",&a[i]); if(i@@ !=0) { for(j=0;j<i;j++) { if(k==@@ (@@ a[j]@@ +@@ a[i]@@ )) { s=1; } } } } if(s@@ ==1) printf("yes"); if(s@@ !=1) printf("no"); return0; }  
c -1
h -1
intmain(){ inta,b,@@ i; double@@ k,@@ c=0; char@@ d[@@ 501],@@ e@@ [501]; scanf("%lf",&@@ k); scanf("%s",&@@ d); scanf("%s",&@@ e); a=strlen(@@ d); b=strlen(@@ e); if(a@@ >b@@ ||@@ a@@ <b@@ ){ printf("error"); return0; } for(i=0;i<a;i++){ if(d@@ [i]!='A'&&@@ d@@ [i]!='C'&&@@ d@@ [i]!='G'&&@@ d@@ [i]!='T'){ printf("error"); return0; } } for(i=0;i<b;i++){ if(e@@ [i]!='A'&&@@ e@@ [i]!='C'&&@@ e@@ [i]!='G'&&@@ e@@ [i]!='T'){ printf("error"); return0; } } for(i=0;i<a;i++){ if(d@@ [i]==@@ e@@ [i]){ c++; } } if((@@ c@@ /@@ (@@ 1.0*@@ a)@@ )>@@ k){ printf("yes"); } elseprintf("no"); return0; }  
c -1
h -1
0

structbook { intnum; char@@ auth@@ [26]; structbook*next; }; structbook*@@ creat@@ (intm) { inti=0; structbook@@ *head,*p1,*p2; if(i==0) { p1=(structbook@@ *)malloc(sizeof(structbook)); scanf("%d%s",&p1->num,p1->@@ auth@@ ); head=p1; p2=p1; p1->next=NULL; i++; } while(i<@@ m) { p1=(structbook@@ *)malloc(sizeof(structbook)); scanf("%d%s",&p1->num,p1->@@ auth@@ ); p2->next=p1; p1->next=NULL; p2=p1; i++; } return(head); } intmain() { intm,@@ i,@@ lenth@@ ; intmax=0,@@ maxwh@@ =@@ 27@@ ; intcount@@ [26]={0}; structbook@@ *head,*p; scanf("%d",&m); head=creat@@ (m); p=head; while(p!=NULL) { lenth@@ =strlen(@@ p->@@ auth@@ ); for(i=0;i<@@ lenth@@ ;i++) count[@@ (int)@@ (p->@@ auth@@ )@@ [i]@@ -65]++; p=p->next; } for(i=0;i<26;i++) { if(count@@ [i]>max) { max=count@@ [i]; maxwh@@ =i; } } printf("%c\n",@@ maxwh@@ +65); printf("%d\n",max); p=head; while(p!=NULL) { lenth@@ =strlen(@@ p->@@ auth@@ ); for(i=0;i<@@ lenth@@ ;i++) { if(@@ (int)@@ (p->@@ auth@@ [i]@@ )==@@ maxwh@@ +65) { printf("%d\n",p->num); break; } } p=p->next; } return0; }  
c -1
h -1
intmain() { intn,i,j,@@ t,@@ m,@@ x,@@ k; chara[100@@ ][100@@ ],b[100],@@ c[100],@@ d@@ [100][100],@@ e@@ [100],@@ f@@ [100][100],@@ s@@ [100]; scanf("%d",&n); for(i=0;i<n;i++) scanf("%s%d",@@ a[i],&@@ b[i]); k=0; for(i=0;i<n;i++) { if(b[i]@@ >=60) {@@ c@@ [k]=@@ b[i]@@ ;@@ strcpy(@@ d@@ [k],@@ a[i])@@ ;k@@ ++;} } for(i=0;i<@@ k-1;i++) { for(j=0;j<@@ k-1@@ -i;j++) { if(c@@ [j]<@@ c@@ [j+1]@@ ){@@ t=@@ c[j]@@ ;c@@ [j]=@@ c@@ [j+1];@@ c@@ [j+1]=@@ t;@@ strcpy(s,@@ d@@ [j]@@ );strcpy(@@ d@@ [j],@@ d@@ [j+1]@@ );strcpy(@@ d@@ [j+1],@@ s@@ );} } } for(i=0;i<k;i++) printf("%s\n",@@ d[i]); m=0; for(i=0;i<n;i++) { if(b[i]@@ <60@@ ){@@ e@@ [m]=@@ b[i]@@ ;@@ strcpy(@@ f@@ [m@@ ],@@ a[i]@@ );@@ m@@ ++;} } for(i=0;i<m;i++) printf("%s\n",@@ f@@ [i]); }  
c -1
h -1
0

voidmain() { intn; scanf("%d\n",&n); structpatient { charnum[10]; intage; }@@ pa@@ [100],@@ pao@@ [100],@@ pay@@ [100],@@ blank@@ ; inti,j=0,@@ k=0; for(i=0;i<n;i++) { scanf("%s",@@ pa@@ [i].num); scanf("%d",&@@ pa@@ [i].age); if(pa@@ [i].age>=60) pao@@ [j@@ ++]=@@ pa@@ [i]; else pay@@ [k@@ ++]=@@ pa@@ [i]; } intt; for(i=0;i<j;i++) { for(t@@ =i+1@@ ;t@@ <j@@ ;t++) { if(@@ pao@@ [t@@ ].age@@ >@@ pao@@ [i].age@@ ) { blank@@ =@@ pao@@ [i]; pao@@ [i]=@@ pao@@ [t@@ ]; pao@@ [t@@ ]=@@ blank@@ ; } } } for(i=0;i<j;i++) { if(@@ pao@@ [i].age@@ !=@@ pao@@ [i-1@@ ].age) { for(t=0;t@@ <n;@@ t++) if(pa@@ [t@@ ].age@@ ==@@ pao@@ [i].age@@ ) printf("%s\n",@@ pa@@ [t@@ ].@@ num); } } for(i=0;i<k;i++) printf("%s\n",@@ pay@@ [i].num); }  
c -1
h -1
intmain() { intn,@@ num,@@ e@@ [@@ 20001@@ ],@@ i,j; scanf("%d@@ /@@ n@@ ",&@@ n); if(n==1) { scanf("%d",&num); printf("%d",@@ num); }else{ for(i=1;i<=@@ n;++@@ i) { scanf("%d",&num); e@@ [i]=@@ num; if(i==1) { printf("%d",@@ e@@ [1]); }else{ for(j=1;j<i;j++) { if(e@@ [i]==@@ e@@ [j]) { e@@ [i]=0; break; } } if(e@@ [i]!=0) { printf("%d",@@ e@@ [i]); } } } } return0; }  
c -1
h -1
0

intmain() { chara[501],b[501]; int@@ i,j@@ =0; double@@ x,y,@@ z; scanf("%lf",&x); scanf("%s",a); scanf("%s",b); y@@ =strlen(b); for(i=0;a[i]!='\0';i++) { if(strlen(a)!=strlen(b@@ )) { printf("error"); break; } if((a[i]!='@@ A'&&a[i]!='T'&&a[i]!='C'&&a[i]!='G')||(b[i]!='A'&&b[i]!='T'&&b[i]!='C'&&b[i]!='@@ G')) { printf("error"); break; } if(a[i]==b[i]) { j++; } if(a@@ [i+1@@ ]==@@ '\0') { z@@ =j@@ /@@ y; if(z@@ >@@ x@@ ){@@ printf("yes");@@ }@@ else{printf("no");} } } return0; }  
c -1
h -1
intmain() { int@@ stuNum@@ ,i; cin>>@@ stuNum@@ ; structstudent{ int@@ id,@@ math@@ ,@@ chinese@@ ,@@ total; }; structstudent@@ stu[@@ stuNum@@ ],@@ first@@ ,@@ second@@ ,@@ third@@ ; for(i=0;i<@@ stuNum@@ ;i++){ cin>>@@ stu[i].@@ id@@ >>stu[i].@@ chinese@@ >>stu[i].@@ math; stu[i].@@ total=@@ stu[i].@@ chinese+@@ stu[i].@@ math; } first=@@ second=@@ third=@@ stu[@@ 0]; for(i=1;i<@@ stuNum@@ ;i++) if(stu[i].@@ total>@@ first@@ .@@ total@@ )@@ first@@ =stu@@ [i]; cout<<@@ first@@ .@@ id@@ <<''<<@@ first@@ .@@ total@@ <<endl; for(i=1;i<@@ stuNum@@ ;i++) if(stu[i].@@ total>@@ second@@ .@@ total@@ &&stu[i].@@ id@@ !=@@ first@@ .@@ id@@ )@@ second@@ =stu@@ [i]; cout<<@@ second@@ .@@ id@@ <<''<<@@ second@@ .@@ total@@ <<endl; for(i=1;i<@@ stuNum@@ ;i++) if(stu[i].@@ total>@@ third@@ .@@ total@@ &&stu[i].@@ id@@ !=@@ first@@ .@@ id@@ &&stu[i].@@ id@@ !=@@ second@@ .@@ id@@ )@@ third@@ =stu@@ [i]; cout<<@@ third@@ .@@ id@@ <<''<<@@ third@@ .@@ total@@ <<endl; return0; }  
c -1
h -1
0

intm,n,@@ s1@@ [1000],@@ s2@@ [1000],@@ s[@@ 1000]; voidf1@@ (void) { inti; scanf("%d%d",&m,&n); for(i=0;i<m;i++) scanf("%d",&@@ s1[i]); for(i=0;i<n;i++) scanf("%d",&@@ s2@@ [i]); } voidf2@@ (void) { inti,j,temp; for(i=0;i<m;i++) { for(j=0;j<m-1;j++) { if(s1@@ [j]>@@ s1@@ [j+1]@@ ){@@ temp=@@ s1@@ [j];@@ s1@@ [j]=@@ s1@@ [j+1];@@ s1@@ [j+1]=@@ temp;} } } for(i=0;i<n;i++) { for(j=0;j<n-1;j++) { if(s2@@ [j]>@@ s2@@ [j+1]@@ ){@@ temp=@@ s2@@ [j];@@ s2@@ [j]=@@ s2@@ [j+1];@@ s2@@ [j+1]=@@ temp;} } } } void@@ f3@@ (void) { inti; for(i=0;i<m;i++) s[i]=@@ s1@@ [i]; for(i=m;i<@@ m+n;i++) s[i]=@@ s2@@ [i-@@ m]; } void@@ f4@@ (void) { inti; printf("%d",@@ s@@ [0]); for(i=1;i<@@ m+@@ n;i++)@@ printf("%d",@@ s[i]); } voidmain() { f1@@ (); f2@@ (); f3@@ (); f4@@ (); }  
c -1
h -1
int@@ mat@@ [300]; intmain() { intn,@@ sum=0; while(@@ scanf("%d",&@@ n@@ ),@@ n@@ !=-1) { if(@@ n) { mat@@ [n@@ ]=1; if(@@ mat@@ [n@@ <<@@ 1@@ ]) sum++; if(!@@ (n@@ &@@ 1@@ )&&@@ mat@@ [n@@ >>@@ 1@@ ]) sum++; } else { printf("%d\n",sum); sum=0; memset(@@ mat@@ ,0,sizeof(@@ mat@@ )); } } }  
c -1
h -1
0

int@@ mat@@ [@@ MAX@@ ][@@ MAX@@ ]; intmain() { intk; cin>>k; while(k@@ --) { intm,n,@@ sum=0; cin>>m>>n; for(inti=0;i<m;i++) for(intj=0;j<n;j++) cin>>@@ mat@@ [i][j]; for(intj=0;j<n;j++) { if(m@@ >1) sum+=@@ mat@@ [m@@ -1][j]; sum+=@@ mat@@ [0]@@ [j]; } for(inti=1;i<@@ m-1;i++) { if(n@@ >1) sum+=@@ mat@@ [i]@@ [n-1]; sum+=@@ mat@@ [i]@@ [0]; } cout<<sum<<endl; } return0; }  
c -1
h -1
voidmain() { inta[100@@ ][@@ 16],@@ i,j,k,@@ l,@@ m,@@ s@@ [100]; for(i=0;i<100;i++) { for(j=0;j<@@ 16@@ ;j++) {@@ scanf("%d",&a[i][j]); if(a[i][j]@@ ==0||@@ a[i]@@ [j]==@@ -1)@@ break;} if(a[i][j]==@@ -1)break; } for(k=0;k<i;k++) {@@ for(l=0;l<@@ 16@@ ;l++) {@@ for(m=0;m<@@ 16@@ ;m@@ ++)@@ if((@@ a[k@@ ][m@@ ]@@ !=0)&&(@@ a[k@@ ][l@@ ]@@ /@@ a[k@@ ][m@@ ]==@@ 2@@ )&&(@@ a[k@@ ][l@@ ]@@ %@@ a[k@@ ][m@@ ]@@ ==0)@@ )@@ s[k]@@ ++;} } for(k=0;k<i;k++) printf("%d\n",s@@ [k]); }  
c -1
h -1
0

intsum=0; voidf@@ (intn,int@@ i) { if(n@@ ==1)@@ sum++; while(i<=@@ n) { if(n@@ %i==0)@@ f(@@ n@@ /i,i); i++; } return; } intmain() { intt=0; cin>>t; while(t@@ --) { intn=0; cin>>n; int@@ i=@@ 2,@@ result=1; for(i=2;i<=@@ n@@ /2@@ ;i++){ if(n%i==0) { sum=0; f(@@ n@@ /i,i); result=result+@@ sum; } } cout<<@@ result@@ <<endl; } return0; }  
c -1
h -1
intmain() { intn,i,j,@@ k@@ =1,@@ r@@ =1,@@ number@@ [@@ 20001@@ ],@@ number1@@ [@@ 20001@@ ]={0}; cin>>n; for(i=1@@ ;i@@ !=@@ n@@ +1;i++) { cin>>@@ number@@ [i]; for(j=1@@ ,k@@ =1@@ ;j<=@@ i;j++) { if(@@ number@@ [i]==@@ number1@@ [j]) { k=0; break; } } if(k==1) { if(i==1) { cout<<@@ number@@ [1]; number1@@ [1]=@@ number@@ [1]; r++; } else { cout<<""<<@@ number@@ [i]; number1@@ [r@@ ]=@@ number@@ [i]; r++; } } } return0; }  
c -1
h -1
0

intmain() { intk; cin>>k; inti,j,@@ l,@@ lin@@ ,@@ col,@@ sum=0; intnum[@@ 101][101]; for(l=1;l@@ <=k;@@ l++) { cin>>@@ lin@@ >>col; for(i=1;i<=@@ lin@@ ;i++) { for(j=1;j<=col;j++) cin>>@@ num[i]@@ [j]; } if(@@ lin@@ >=@@ 2@@ &&@@ col@@ >=@@ 2) { for(i=2;i<=@@ lin@@ -1;i++) sum=sum+@@ num[i]@@ [1]@@ +@@ num[i]@@ [@@ col@@ ]; for(j=1;j<=col;j++) sum=sum+@@ num@@ [1]@@ [j]+@@ num[@@ lin@@ ]@@ [j]; } if(@@ lin@@ ==1&&@@ col@@ >=@@ 2) { for(j=1;j<=col;j++) sum=sum+@@ num@@ [1]@@ [j]; } if(col@@ ==1&&@@ lin@@ >=@@ 2) { for(i=1;i<=@@ lin@@ ;i++) sum=sum+@@ num[i]@@ [1]; } if(col@@ ==1&&@@ lin@@ ==1) sum=sum+@@ num@@ [1@@ ][1@@ ]; cout<<sum<<endl; sum=0; } return0; }  
c -1
h -1
intmain() { charstring@@ [256],@@ sub[256],@@ re@@ [256]; inti,j; gets(@@ string); gets(sub); gets(@@ re); int@@ len1=strlen(@@ string@@ ),@@ len2=strlen(@@ sub@@ ),@@ len3@@ =strlen(@@ re); for(i=0;i<=@@ len1@@ -len2@@ ;i++) { for(j=0;j<len2@@ ;j++) { if(@@ sub@@ [j]!=@@ string@@ [i+j@@ ]@@ )break; } if(j!=@@ len2@@ )continue; if(j==@@ len2) { for(j=0;j<len2@@ ;j++)@@ string@@ [i+j@@ ]=@@ re@@ [j]; break; } } puts(@@ string); return0; }  
c -1
h -1
0

voidmain() { intn,i,j; struct@@ p@@ { charid@@ [30]; int@@ ag@@ ; }a[@@ 105@@ ],@@ temp; scanf("%d",&n); for(i=0;i<n;i++){ scanf("%s%d",@@ a[i].@@ id,&@@ a[i].@@ ag@@ ); } for(i=0;i<n-1;i++){ for(j=1;j<@@ n@@ -i;j++){ if(a@@ [j-1].@@ ag@@ >=60&&@@ a[j].@@ ag@@ >=60){ if(a@@ [j-1].@@ ag@@ <@@ a[j].@@ ag@@ ){ temp=@@ a@@ [j-1]; a@@ [j-1]=@@ a[j]; a[j]=@@ temp; } } elseif(a@@ [j-1].@@ ag@@ <60&&@@ a[j].@@ ag@@ >=60){ temp=@@ a@@ [j-1]; a@@ [j-1]=@@ a[j]; a[j]=@@ temp; } } } for(i=0;i<n;i++)@@ printf("%s\n",@@ a[i].@@ id); }  
c -1
h -1
intmain() { inta[16@@ ],i,j,@@ k; while(1) { ints=0; for(i=0;;i++) { cin>>a[i]; if(a[i]==0)break; if(a[i]==@@ -1)@@ goto@@ end@@ ; } for(j=0;j<=i-1;j++) for(k=0;k<=@@ i-1;k++) if(a[j]@@ %@@ a[k]@@ ==0&&@@ a[j]@@ /@@ a[k]==@@ 2)@@ s++; cout<<s<<endl; } end@@ : return0; }  
c -1
h -1
0

int@@ mysort@@ (void@@ *@@ a,@@ void@@ *@@ b) { return@@ *(int*)@@ a@@ -@@ *(int*)@@ b; } intmain() { int@@ in@@ [1000]; intn,k; inti; int@@ found@@ =0; scanf("%d%d",&@@ n,@@ &@@ k); for(i=0;i<n@@ ;++i) { scanf("%d",&@@ in@@ [i]); } qsort(@@ in@@ ,@@ n,@@ sizeof(int),@@ mysort@@ ); int*@@ lp@@ =@@ &@@ in@@ [0]; int*@@ rp@@ =@@ &@@ in@@ [n-1]; while(@@ lp@@ !=@@ rp@@ ) { i=@@ *@@ lp@@ +@@ *@@ rp@@ ; if(i<@@ k) { ++@@ lp@@ ; }elseif(@@ i@@ >@@ k) { --@@ rp@@ ; }else{ found@@ =1; break; } } if(@@ found@@ ) { printf("yes\n"); }else{ printf("no\n"); } return0; }  
c -1
h -1
static@@ intdays@@ [13]={0,31,28,31,30,31,30,31,31,30,31,30,31}; static@@ int@@ isleapyear@@ (intyear@@ ) { return(@@ year%4==0&&year%100!=0@@ )||@@ year%@@ 400==0@@ ; } intmain() { intyear,month,day; int@@ z=1; while(@@ z@@ <=@@ 5) { scanf("%d%d%d",&@@ year,@@ &@@ month,@@ &@@ day); intn=0; inti; for(i=1;i<month;i++) { n=n+@@ days@@ [i]; } n=n+@@ day; if(month@@ >2@@ &&@@ isleapyear@@ (year@@ )) n++; printf("%d\n",n); z@@ ++; } }  
c -1
h -1
0

intf@@ (int,int); intmain() { intn,i,@@ a,@@ b[100@@ ]; scanf("%d",&n); for(i=0;i<n;i++) { scanf("%d",&a); b[i]=@@ f(a,@@ 2); } for(i=0;i<n;i++) { printf("%d\n",@@ b[i]); } return0; } intf@@ (intx,inty) { intj,@@ sum=1; if(x@@ <@@ y) sum=0; else { for(j=@@ y@@ ;j<@@ x;j++) { if(x@@ %j==0) sum=sum+@@ f(@@ x@@ /j,j); } } returnsum; }  
c -1
h -1
intmain(){ inti,@@ m,n,@@ k,@@ h,@@ isTrue@@ ; scanf("%d%d",&n,&k); intsz[@@ n]; m=0,@@ isTrue@@ =0; for(i=0;i<n-1;i++){ scanf("%d",&sz[i]); } scanf("%d",&@@ sz[@@ n-1]); while(@@ !@@ (@@ isTrue@@ )@@ &&m@@ <@@ n){ for(i=0;i<n;i++){ if(m==@@ i){ continue; } if(sz[i]@@ +@@ sz[m@@ ]==k){ isTrue@@ ++; break; } } m=@@ m++; } if(@@ isTrue@@ ){ printf("yes"); }else{ printf("no"); } return0; }  
c -1
h -1
0

intmain() { introw,col; inta[100][100]; cin>>row>>col; for(inti=1;i<=@@ row;i++) for(intj=1;j<=@@ col;j++) cin>>a[i][j]; for(inti=2;i<=@@ col@@ +@@ row;i++) for(intj=1;j<=@@ i-1;j++) { if(i@@ -j@@ >@@ col@@ )continue; if(j@@ >@@ row@@ )continue; cout<<@@ a[j][i-j@@ ]<<endl; } return0; }  
c -1
h -1
intmax(int@@ sum[@@ 25@@ ],int@@ x@@ [25@@ ],int@@ i,@@ int@@ j@@ ,int@@ k) { intt,@@ l@@ =1; static@@ int@@ y@@ [25]; t@@ =i+1; for(@@ ;t@@ <=@@ k@@ -1;@@ t++) if(t@@ !=@@ j@@ &&@@ x@@ [i]>=@@ x@@ [t@@ ]) {@@ y@@ [l@@ ]=sum[@@ t@@ ]; l++; } for(i=1;i<@@ l@@ ;i++) if(sum@@ [j]<@@ y@@ [i]) break; if(i==@@ l) return(1); else return(0); } main() { intk,@@ i,j; static@@ intx@@ [25],@@ sum[@@ 25]; scanf("%d",&k); for(i=0;i<k;i++) scanf("%d",&@@ x[i]); sum@@ [k-1]@@ =1; for(i=k-2;i>=0;i--) {@@ for(j=i+1;j<=@@ k@@ -1;j++) if(x@@ [i]>=@@ x[j]@@ &&@@ max(@@ sum,@@ x,@@ i,j,@@ k@@ )) sum[i]=sum@@ [j]; sum[i]@@ ++; } int@@ m=@@ sum[@@ 0]; for(i=1;i<k;i++) if(sum[i]>@@ m) m=@@ sum[i]; printf("%d",m); }  
c -1
h -1
0

voidf@@ (intm,int@@ n) { inti,j; inttemp; inta[100@@ ]={0}; intb[100@@ ]={0}; for(i=0;i<m;i++) scanf("%d",&a[i]); for(j=0;j<n;j++) scanf("%d",&@@ b[j]); for(i=1;i<m;i++) for(j=0;j<m-1;j++) { if(a[j]>a[j+1]) { temp=@@ a[j+1@@ ]; a[j+1]=@@ a[j]; a[j]=@@ temp; } } for(i=1;i<n;i++) for(j=0;j<n-1;j++) { if(b[j]>b[j+1]) { temp=@@ b@@ [j+1]; b[j+1]=@@ b[j]; b[j]=@@ temp; } } for(i=0;i<m;i++) printf("%d",a[i]); for(i=0;i<n-1;i++) printf("%d",b[i]); printf("%d",b[@@ n-1]); } intmain() { intm,n; scanf("%d%d",&m,&n); f(@@ m,n); return0; }  
c -1
h -1
int@@ maxnum@@ (int*a,@@ intn,@@ int@@ up@@ ){ if(n@@ ==0)@@ return0; inti,@@ max@@ =-1,@@ t; for(i=0;i<n;i++){ t=@@ up@@ ; if(a[i]<=@@ up@@ ||@@ up@@ ==@@ -1)@@ t=a[i]; elsecontinue; if(@@ maxnum@@ (a@@ +i@@ +1,@@ n-1@@ -@@ i,@@ t)@@ >max)max=@@ maxnum@@ (a@@ +i@@ +1,@@ n-i@@ -1,@@ t); } return@@ max+1; } intmain(){ inti,n,@@ a[@@ 25]; cin>>n; for(i=0;i<n;i++)@@ cin>>a[i]; cout<<@@ maxnum@@ (a,@@ n@@ ,-@@ 1); }  
c -1
h -1
0

int@@ trans@@ (char@@ k) { inti; chara[@@ 26@@ ]={'A','B','C','D','E','F','G','H','I','J','K','L','M','N','O','P','@@ Q','R','S','T','U','V','W','X','Y','@@ Z'}; for(i=0;i<26;i++) { if(k==@@ a[i]) return@@ i; } } intmain() { struct@@ books { intn; char@@ w@@ [27]; }@@ *@@ m; intnum,@@ i,j; scanf("%d",&num); m@@ =(struct@@ books@@ *)malloc(sizeof(struct@@ books@@ )*@@ num); for(i=0;i<num;i++) { intN@@ ; char@@ W@@ [27]; scanf("%d%s",&@@ N@@ ,@@ W@@ ); m@@ [i].@@ n=@@ N; strcpy(@@ m@@ [i].@@ w,@@ W@@ ); } intb[@@ 26@@ ]={0@@ ,@@ 0,0,0,0,0,0,0,0,@@ 0,0,0,0,0,0,0,0,@@ 0,0,0,0,0,0,0,0,@@ 0},@@ c; for(i=0;i<num;i++) { for(j=0@@ ;m@@ [i].@@ w@@ [j]!='\0';j++) { c=@@ trans@@ (m@@ [i].@@ w@@ [j]); b[@@ c@@ ]++; } } intmax=0; char@@ most@@ ; for(i=0;i<26;i++) { if(b[i]>max) { max=b[i]; most@@ ='A'+i; } } printf("%c\n%d\n",@@ most@@ ,max); for(i=0;i<num;i++) { for(j=0@@ ;m@@ [i].@@ w@@ [j]!='\0';j++) { if(m@@ [i].@@ w@@ [j]==@@ most@@ ) printf("%d\n",@@ m@@ [i].@@ n); } } return0; }  
c -1
h -1
intmain() { inti,@@ flag=0,@@ deadend@@ =0; double@@ x; chara[501],b[501]; scanf("%lf\n",&@@ x); scanf("%s@@ \n",&@@ a); scanf("%s@@ \n",&@@ b); for(i=0;i<@@ strlen(a)@@ ;i++) { if((a[i]!='@@ A')&&(@@ a[i]!='@@ T')&&(@@ a[i]!='@@ G')&&(@@ a[i]!='@@ C')@@ ) { printf("error"); deadend@@ =1; break; } } if((@@ strlen(a)@@ ==@@ strlen(b@@ )@@ )&&(@@ deadend@@ ==0)) { for(i=0;i<@@ strlen(a)@@ ;i++) { if(a[i]==b[i]) flag@@ ++; } if((@@ 100@@ *@@ flag@@ /@@ (@@ strlen(a)@@ ))@@ <(@@ 100@@ *@@ x@@ )) printf("no"); else printf("yes"); } elseif((@@ strlen(a)@@ !=strlen(b@@ )@@ )&&(@@ deadend@@ ==0)) printf("error"); return0; }  
c -1
h -1
0

intmain() { intn,i,j,k,@@ t,@@ tmp@@ ,a[@@ 10000]; scanf("%d%d",&n,&k); for(i=1;i<=n;i++) scanf("%d",&a[i]); for(i=1;i<n;i++) { t=i; for(j=@@ t@@ ;j<=@@ n;j++) { if(a[j]@@ <@@ a[t@@ ]) t@@ =j; } if(t@@ !=@@ i) { tmp=@@ a[t@@ ]; a[t@@ ]=a[i]; a[i]=@@ tmp; } } t=0; for(i=1;i<n;i++) { for(j=i+1;j<=n;j++) { if(a[i]+a[j]==@@ k@@ &&@@ t@@ ==0) { printf("yes"); t=1; } else@@ if(a[i]+@@ a[j]@@ >@@ k@@ )break; } } if(t@@ ==0)@@ printf("no"); return0; }  
c -1
h -1
intmain(){ char@@ su@@ [100],@@ zu@@ [100],@@ tu@@ [100]; gets(@@ su@@ ); gets(@@ zu@@ ); gets(@@ tu@@ ); inti,j,k,@@ t; for(i=0;i<strlen(@@ su@@ );i++){ for(k@@ =0,@@ j@@ =i;@@ su@@ [j]==@@ zu@@ [k]@@ ;j++@@ ,k++) if(k==@@ strlen(@@ zu@@ )) break; if(k==@@ strlen(@@ zu@@ )) break; } if(j!=@@ i@@ -1){ for(t=0;t@@ <i@@ ;t++) printf("%c",@@ su@@ [t@@ ]); printf("%s",@@ tu@@ ); for(t@@ =j@@ ;t@@ <@@ strlen(@@ su@@ );@@ t++) printf("%c",@@ su@@ [t@@ ]@@ );} else printf("%s",@@ su@@ ); return0; }  
c -1
h -1
0

struct@@ author {intnum; charname[26]; }; struct@@ author@@ ren@@ [100]; intmain() {@@ intn,i,j=0,@@ k=0,@@ biao@@ ,@@ maxzuozhe@@ ,@@ p,@@ geshu@@ [26]={0},@@ max=0,@@ maxdeshu@@ [999]; scanf("%d\n",&n); for(i=0;i<=n-1;i++) {scanf("%d",&@@ ren@@ [i].num); scanf("%s",@@ ren@@ [i].@@ name); } for(i=0;i<=25;i++) {@@ for(j=0;j<=n-1;j++) { for(k=0;k<=@@ strlen(@@ ren@@ [j].@@ name@@ )@@ ;k++) {@@ if((i@@ +'@@ A')@@ ==@@ ren@@ [j].@@ name@@ [k]) geshu@@ [i]=@@ geshu@@ [i]@@ +1; } } } for(i@@ ='@@ A@@ '-@@ 65@@ ;i<=@@ '@@ Z@@ '-@@ 65@@ ;i++) {@@ if(max<@@ geshu@@ [i]) {max=@@ geshu@@ [i]; biao@@ =i;} } maxzuozhe@@ ='A'+@@ biao@@ ; p=0; for(i=0;i<=n-1;i++) {@@ for(k=0;k<=@@ strlen(@@ ren@@ [i].name@@ )@@ ;k++) {if(@@ maxzuozhe@@ ==@@ ren@@ [i].name@@ [k]) {@@ maxdeshu@@ [p@@ ]=@@ ren@@ [i].@@ num; p++; break;} } } printf("%c\n",@@ maxzuozhe@@ ); printf("%d\n",@@ p); for(i=0;i<=@@ p@@ -1;i++) printf("%d\n",@@ maxdeshu@@ [i]); getchar(); }  
c -1
h -1
intmain(){ inti,n; scanf("%d",&n); int*@@ N =@@ (int*)malloc(sizeof(int)*n); for(intk=0;k<@@ n;k++) { scanf("%d",&(@@ N@@ [k]@@ )); } for(i=1;i<n;i++) { for(int@@ r=0;r@@ <i@@ ;r++) { if(N@@ [i]==@@ N@@ [r@@ ]) { for(intj=i@@ ;j<n;j++) { N@@ [j]=@@ N@@ [j+1]; } n--; i--; } } } for(i=0;i<n;i++) { if(i==@@ n-1) printf("%d",@@ N@@ [i]); else printf("%d",@@ N@@ [i]); } return0; }  
c -1
h -1
0

intk; inth@@ [@@ 30],@@ f[@@ 30],@@ l; intmain(){ inti; scanf("%d",&k); for(i=0;i<k;i++){ scanf("%d",@@ h@@ +i); } l=0; for(i=k@@ -1@@ ;i>=0;i--){ if(l@@ ==0||@@ f@@ [l@@ -1]@@ <=@@ h@@ [i]) f@@ [l@@ ++]=@@ h@@ [i]; else{ int@@ mid@@ ,@@ left@@ =0,@@ right@@ =@@ l@@ -1; while(@@ left@@ <@@ right@@ ){ mid@@ =(@@ left@@ +@@ right@@ )@@ /2; if(h@@ [i]>=@@ f[@@ mid@@ ]){ left@@ =@@ mid@@ +1; } elseif(@@ h@@ [i]<@@ f[@@ mid@@ ]){ right@@ =@@ mid@@ -1; } } if(f@@ [@@ left@@ ]>@@ h@@ [i]) f[@@ left@@ ]=@@ h@@ [i]; else f[@@ left@@ +1]=@@ h@@ [i]; } } printf("%d\n",@@ l); }  
c -1
h -1
main() { inta[@@ 25],b[@@ 25],@@ k,i,j,@@ max=0; scanf("%d",&k); for(i=0;i<k;i++) { scanf("%d",a@@ +i); b[i]=1; for(j=0;j<i;j++) if(a[j]>=a[i]&&@@ b[j]@@ +1>@@ b[i]@@ )@@ b[i]=b[j]+1; if(b[i]@@ >max)max=@@ b[i]; } printf("%d",max); }  
c -1
h -1
1


int@@ la@@ =0,@@ lb@@ =0,@@ l=0,@@ a[100],b[100],@@ combine@@ [@@ 200]; voidinput@@ (); void@@ seq@@ (); void@@ sequence@@ (intx@@ [100@@ ]); void@@ com@@ (inta[100],int@@ b[100@@ ]); voidoutput@@ (int@@ combine@@ [@@ 200@@ ]); intmain(){ input(); seq@@ (); com@@ (a,b); output@@ (@@ combine@@ ); return0; } voidinput@@ (){ cin>>@@ la@@ >>@@ lb@@ ; for(inti=0;i<@@ la;i++) cin>>a[i]; for(inti=0;i<@@ lb@@ ;i++) cin>>b[i]; } void@@ seq@@ (){ l=@@ la@@ ; sequence@@ (a); l=@@ lb@@ ; sequence@@ (@@ b); } void@@ sequence@@ (intx@@ [100@@ ]){ int@@ temp=0; for(inti=1;i<@@ l@@ ;i++) for(intj=1;j<=@@ l@@ -i;j++) if(x@@ [j-1]@@ >@@ x@@ [j]) { temp=@@ x@@ [j]; x@@ [j]=@@ x@@ [j-1]; x@@ [j-1]=@@ temp; } } void@@ com@@ (inta[100],int@@ b[100@@ ]){ memcpy@@ (@@ combine@@ ,@@ a,@@ la@@ *@@ 4@@ ); memcpy@@ (@@ combine@@ +@@ la@@ ,@@ b,@@ lb@@ *@@ 4@@ ); } voidoutput@@ (int@@ combine@@ [@@ 200@@ ]){ cout<<@@ combine@@ [0]; for(inti=1;i<@@ la@@ +lb@@ ;i++) cout<<""<<@@ combine@@ [i]; }  
c -1
h -1
intmain() { intn,i,j,k,@@ b[100@@ ]={0},@@ c@@ [100]={0},@@ d@@ [100]={0},@@ e@@ [100]={0}; chara[100@@ ][100]; for(i=0;i<100;i++) { b[i]@@ =i; } scanf("%d",&n); for(i=0;i<n;i++) { scanf("%s%d",&@@ a[i],&@@ c[i]); if(c@@ [i]>@@ 59@@ ) { d[i]=@@ c[i]; } else { e@@ [i]=@@ c[i]; } } for(i=0;i<n;i++) { for(j=0;j<n-1;j++) { if(@@ d[@@ b[j]@@ ]<@@ d[@@ b@@ [j+1]@@ ]) { k=@@ b[j]; b[j]=b[j+1]; b[j+1]=@@ k; } } } for(i=0;i<n;i++) { if(@@ d[@@ b[i]@@ ]@@ >0) { printf("%s\n",@@ a[@@ b[i]@@ ]); } else { break; } } for(i=0;i<n;i++) { if(e@@ [i]!=0) { printf("%s\n",@@ a[i]); } } return0; }  
c -1
h -1
0

intmain(intargc@@ ,@@ const@@ char*@@ argv[]) { intn=0,@@ i=0; cin>>n; inta[n]; for(i=0;i<n;i++) cin>>a[i]; int@@ j=0,@@ k=0,@@ l=0; for(j=0;j<n-1;j++) for(k=j+1;k<@@ n;k++) {@@ if(a[j]==@@ a[k]) {@@ for(l@@ =@@ k;@@ l<@@ n-1;@@ l++) {@@ a[l@@ ]=a[@@ l@@ +1]; }@@ n--; k--; } } for(i=0;i<n-1;i++) cout<<a[i]<<""; cout<<a[@@ n-1]; return0; }  
c -1
h -1
intmain() { intn,a,@@ s@@ =1,@@ m,@@ l@@ ;@@ long@@ i=0; scanf("%d",&n); while(1) { i@@ +=1; scanf("%d",&a); if(a==0) break; } m=i; while(1) { i@@ +=1; scanf("%d",&a); if(a==0) s@@ +=1; if(a@@ !=0) break; } l@@ =i-1; while(1) { i@@ +=1; scanf("%d",&a); if(a==0) s@@ +=1; if(i>=@@ n*@@ n) break; } printf("%d\n",@@ ((@@ s@@ -(@@ l@@ -m@@ +1)@@ *2@@ )@@ /2@@ )*(@@ l@@ -@@ m-1@@ )); return0; }  
c -1
h -1
0

intmain() { intn,i,@@ a[@@ 200001@@ ],@@ j,@@ flag=0; cin>>n; for(i=1;i<=n;i++) cin>>a[i]; cout<<@@ a[1]; for(i=2;i<=n;i++) { for(j=1;j<i;j++) { if(a[j]==a[i]) { flag=1; } } if(!@@ flag@@ ) cout<<'@@ '@@ <<@@ a[i]; flag=0; } return0; }  
c -1
h -1
struct@@ mark { intnum; int@@ ch; intmath; intsum; }stu[100000]; intmain(intargc,char*argv[]) { inti,n; scanf("%d",&n); for(i=0;i<n;i++){ scanf("%d%d%d",&stu[i].num,&stu[i].@@ ch@@ ,&stu[i].math); stu[i].sum=stu[i].@@ math@@ +stu[i].@@ ch; } for(i=0;i<n-1;i++){ if(stu[i].@@ sum@@ >=@@ stu[i+1].@@ sum){ stu[@@ 100000@@ ]=@@ stu[i]; stu[i]=@@ stu@@ [i+1]; stu@@ [i+1]=@@ stu[100000]; } } for(i=0;i<n@@ -2@@ ;i++){ if(stu[i].@@ sum@@ >=@@ stu[i+1].@@ sum){ stu[@@ 100000@@ ]=@@ stu[i]; stu[i]=@@ stu@@ [i+1]; stu@@ [i+1]=@@ stu[100000]; } } for(i=0;i<n-@@ 3;i++){ if(stu[i].@@ sum@@ >=@@ stu[i+1].@@ sum){ stu[@@ 100000@@ ]=@@ stu[i]; stu[i]=@@ stu@@ [i+1]; stu@@ [i+1]=@@ stu[100000]; } } printf("%d%d\n%d%d\n%d%d\n",@@ stu[@@ n-1@@ ].num,stu[@@ n-1@@ ].@@ sum,@@ stu[@@ n-2@@ ].num,stu[@@ n-2@@ ].@@ sum,@@ stu[@@ n-@@ 3].@@ num,@@ stu[@@ n-@@ 3].@@ sum); return0; }  
c -1
h -1
0

intmain() { inti,n,@@ m,@@ j; double@@ x,y,@@ z,@@ std@@ ; x@@ =1@@ .0@@ ; char@@ aa@@ [1000]; char@@ bb@@ [1000]; scanf("%lf",&@@ std@@ ); scanf("%s",@@ aa@@ ); scanf("%s",@@ bb@@ ); n=strlen(@@ aa@@ ); m=strlen(@@ bb@@ ); if(m!=@@ n) { printf("error"); return0; } for(i=0;i<n;i++) { if((@@ aa@@ [i]!='A')&&(@@ aa@@ [i]!='T')&&(@@ aa@@ [i]!='G')@@ &&(@@ aa@@ [i]!='C')&&(@@ bb@@ [i]!='A')&&(@@ bb@@ [i]!='T')&&(@@ bb@@ [i]!='C')&&(@@ bb@@ [i]!='G')@@ ) { printf("error"); return0; } } for(i=0;i<n;i++) { if(@@ aa@@ [i]==@@ bb@@ [i]) { x=x@@ +1; } } y=@@ n*@@ 1.0@@ ; z=@@ x/@@ y; if(z@@ >@@ std@@ ) { printf("yes"); } else { printf("no"); } return0; }  
c -1
h -1
intmain() { intn,k,@@ h,@@ g,@@ m,@@ i,j; intmax@@ [100]; chars@@ [100][10]; struct { char@@ d@@ [10]; inta; }@@ p@@ [100]; scanf("%d",&n); for(i=0;i<n;i++) { scanf("%s%d",@@ p[i].@@ d@@ ,&@@ p[i].@@ a); } m=0; for(i=0;i<n;i++) { if(p@@ [i].@@ a@@ >=60) { m++; } } k=@@ m; for(i=0;i<n;i++) { if(p@@ [i].@@ a@@ <60) { strcpy(@@ s@@ [k],@@ p[i].@@ d); k=k+1; } } g=0; for(j=0;j<m;j++) { max@@ [j]=@@ 59@@ ; for(i=0;i<n;i++) { if(p@@ [i].@@ a@@ >max@@ [j]) { max@@ [j]=@@ p[i].@@ a; h@@ =i; } } p[@@ h@@ ].@@ a=@@ 59@@ ; strcpy(@@ s[@@ g@@ ],@@ p[@@ h@@ ].@@ d); g@@ ++; } for(i=0;i<n;i++) { printf("%s\n",@@ s[i]); } return0; }  
c -1
h -1
0

intk; int@@ mis@@ [30]; int@@ maxL@@ =0; int@@ curH@@ =@@ 100000@@ ; int@@ getNum@@ =0; int@@ cmp@@ (inta,intb) { if(a@@ >b@@ )return0; else@@ return1; } void@@ oneState@@ (int@@ id@@ ) { if(@@ id@@ >=@@ k) { if(@@ getNum@@ >@@ maxL@@ ) maxL@@ =@@ getNum@@ ; return; } if(@@ mis@@ [@@ id@@ ]<=@@ curH@@ ) { int@@ t=@@ curH@@ ; curH@@ =@@ mis@@ [@@ id@@ ]; getNum@@ ++; oneState@@ (@@ id@@ +1); curH@@ =t; getNum@@ --; } oneState@@ (@@ id@@ +1); } intmain() { cin>>k; for(inti=0;i<k;i++) { cin>>@@ mis@@ [i]; } oneState@@ (@@ 0); cout<<@@ maxL@@ <<endl; return0; }  
c -1
h -1
main() { intn,i,j,k,@@ m,@@ a[100@@ ]={0},@@ f@@ [100]={0}; scanf("%d",&n); for(i=0;i<n;i++) scanf("%d",&a[i]); for(i=0;i<n;i++) { if(i==0)@@ f@@ [i]=1; else { k=0; for(j=0@@ ,k@@ =0;j<@@ i;j++) { if(a[i]<=@@ a[j]@@ &&k@@ <@@ f@@ [j]) k=@@ f@@ [j]; } f[i]=@@ k@@ +1; } } for(i=0@@ ,k@@ =1@@ ;i<n;i++) { if(k@@ <@@ f@@ [i])@@ k=@@ f[i]; } printf("%d\n",@@ k); }  
c -1
h -1
1


int@@ factor@@ (int@@ N@@ ,int@@ min); intmain() { intm,n,@@ i,@@ k; scanf("%d",&n); for(i=0;i<n;i++) { scanf("%d",&m); k=@@ factor@@ (m,@@ 2); printf("%d\n",@@ k); } return0; } int@@ factor@@ (int@@ N@@ ,int@@ min) { int@@ result@@ =1,i; if(N@@ <@@ min) return0; for(i=min@@ ;i<@@ N;i++) { if(N@@ %i==0) result+=@@ factor@@ (@@ N@@ /i,i); } returnresult; }  
c -1
h -1
intmain(intargc,char*argv[]) { inti; long@@ n; int@@ sum[@@ 100000]; intmax=0,@@ second@@ =0,@@ third@@ =0; int@@ a=0,b=0,@@ c=0; scanf("%d",&n); structstudent { intid; intchi; intmath; }; structstudent@@ wangchong@@ [100000]; for(i=0;i<n;i++) { scanf("%d%d%d",&@@ wangchong@@ [i].id,&@@ wangchong@@ [i].@@ chi@@ ,&@@ wangchong@@ [i].@@ math); sum[i]=@@ wangchong@@ [i].@@ chi@@ +@@ wangchong@@ [i].@@ math; if(sum[i]>@@ third@@ ) { if(sum@@ [i]<=@@ second@@ ) { third=@@ sum[i]; c@@ =i+1; } else { if(sum@@ [i]<=@@ max) { third=second@@ ; second=@@ sum[i]; c=@@ b; b@@ =i+1; } else { third=second@@ ; c=@@ b; second=@@ max; b=@@ a; max=@@ sum[i]; a@@ =i+1; } } } } printf("%d%d\n%d%d\n%d%d\n",@@ a,@@ max,@@ b,@@ second@@ ,@@ c,@@ third@@ ); return0; }  
c -1
h -1
0

int@@ Max@@ (int@@ b[100@@ ],int@@ n) { intmax=@@ b[0]@@ ;@@ inti; for(i=0;i<n;i++) { if(b[i]>max) max=b[i]; } return@@ max; } intmain() { intk; scanf("%d",&k); inta[@@ 30@@ ],b[@@ 30@@ ]={0},@@ d=0; for(inti=0;i<k;i++) { scanf("%d",&a[i]); } b[k@@ -1]@@ =1; inti,j; for(i=k-2;i>=0;i--) { intc[@@ 30]={0}; d=0; for(j=i+1;j<k;j++) { if(a[i]>=a[j]) { c[@@ d@@ ]=@@ b[j]; d++; } } b[i]=@@ Max@@ (c,@@ d@@ )@@ +1; } intmax=@@ Max@@ (b,@@ k); printf("%d\n",max); }  
c -1
h -1
intmain() { intyear,month,day,@@ num=0,@@ i@@ , a[@@ 12]={31,@@ 0@@ ,31,30,31,30,31,31,30,31,30,31}; cin>>year>>@@ month>>@@ day; if((@@ year%@@ 400==0)||(@@ (@@ year%100!=0@@ )&&(@@ year%@@ 4@@ ==0)@@ )) a[1]=29; else@@ a[1]=@@ 28; for(i=0;i<month-1;i++) { num+=@@ a[i]; } num+=@@ day; cout<<num<<endl; return0; }  
c -1
h -1
0

main() { intk,i,@@ a[@@ 25@@ +@@ 10],@@ n[@@ 25@@ +@@ 10],@@ s; scanf("%d",&k); for(i=0;i<k;i++) { scanf("%d",&a[i]); n@@ [i]=1; } for(i=k-2;i>=0;i--) { intj; for(j=i+1;j<=@@ k@@ -1;j++) { if((@@ a[i]@@ >=@@ a[j]@@ )&&(@@ n[i]@@ <=@@ n@@ [j]@@ ))@@ n[i]=@@ n@@ [j]+1; } } s=@@ n@@ [0]; for(i=0;i<k;i++) { if(n@@ [i]>@@ s)@@ s=@@ n[i]; } printf("%d",s); return0; }  
c -1
h -1
intmain() { intn; scanf("%d",&n); intsz[100][100]; for(int@@ row@@ =0;row@@ <n;@@ row++){ for(int@@ col@@ =0;col@@ <n;col@@ ++){ scanf("%d",&@@ sz[row][col@@ ]); } } int@@ a1@@ =@@ 100@@ ,@@ b1@@ =@@ 100@@ ,@@ a2@@ =0,@@ b2@@ =0; for(int@@ r=0;r@@ <n;@@ r@@ ++){ for(int@@ c@@ =0;c@@ <n;@@ c@@ ++){ if(sz[@@ r@@ ][c@@ ]==0){ a1@@ =@@ r; b1@@ =@@ c; break; } } if(@@ a1@@ !=@@ 100@@ ||@@ b1@@ !=@@ 100@@ ){ break; } } for(int@@ rr@@ =@@ n-1;@@ rr@@ >=0;@@ rr@@ --){ for(int@@ cc@@ =@@ n-1;@@ cc@@ >=0;@@ cc@@ --){ if(sz[@@ rr@@ ][@@ cc@@ ]==0){ a2@@ =@@ rr@@ ; b2@@ =@@ cc@@ ; break; } } if(@@ a2@@ !=0@@ ||@@ b2@@ !=0){ break; } } ints; s=(@@ a2-a1@@ -1)*(@@ b2-b1@@ -1); printf("%d",s); return0; }  
c -1
h -1
0

intmain() { char*@@ org@@ ,*@@ sub@@ ,*@@ re@@ ; inti,j,@@ flag; org@@ =(char*)malloc(@@ 1024@@ *@@ sizeof(@@ char@@ )); sub@@ =(char*)malloc(@@ 100@@ *@@ sizeof(@@ char@@ )); re@@ =(char*)malloc(@@ 100@@ *@@ sizeof(@@ char@@ )); gets(@@ org@@ ); gets(sub); gets(@@ re); for(i=0;@@ *(@@ org@@ +i)@@ !='\0';i++) { if(*(@@ org@@ +i)@@ ==@@ *@@ sub@@ ) { for(j=0;@@ *(@@ sub@@ +j)@@ !='\0';j++) { flag=0; if(*(@@ org@@ +i@@ +j)@@ !=@@ *(@@ sub@@ +j@@ )) {@@ flag@@ =1;break;} } if(flag==0) { for(j=0;@@ *(@@ re@@ +j)@@ !='\0';j++) *(@@ org@@ +i@@ +j)@@ =*(@@ re@@ +j); break; } } } printf("%s",@@ org@@ ); }  
c -1
h -1
struct@@ Patient@@ { charid[10]; intage; struct@@ Patient@@ *next; struct@@ Patient@@ *@@ pre@@ ; }; struct@@ Patient@@ *creat@@ (int@@ x); struct@@ Patient@@ *@@ sort@@ (struct@@ Patient@@ *@@ ); voidprint(struct@@ Patient@@ *@@ ); intmain() { struct@@ Patient@@ *@@ patient@@ ,*@@ patient2@@ ; intn,i; scanf("%d",&n); patient@@ =@@ creat@@ (n); patient2@@ =@@ sort(@@ patient@@ ); print(@@ patient2@@ ); } struct@@ Patient@@ *creat@@ (intx@@ ){ struct@@ Patient@@ *@@ p1,*p2,*@@ head@@ ,*p; inti; head=NULL; for(i=0;i<x;i++){ p1=(struct@@ Patient@@ *)malloc(@@ Len@@ ); if(i@@ ==0){@@ head@@ =p1;@@ head->@@ pre@@ =NULL@@ ;} else{@@ p2->next@@ =p1;@@ p1->@@ pre@@ =p2@@ ;} p2=p1; scanf("%s%d",@@ p1->id,&p1->age); } p1->next=NULL; returnhead; } struct@@ Patient@@ *@@ sort@@ (struct@@ Patient@@ *head@@ ){ struct@@ Patient@@ *@@ p1,*p2,*@@ temp@@ ,*p; temp@@ =(struct@@ Patient@@ *)malloc(@@ Len@@ ); p1=@@ p2=head; while(p1@@ ){ if(p1->age@@ >=60){ p2=p1->next; while(@@ p2@@ ){ if(@@ p2->age@@ >@@ p1->age@@ ){ temp@@ ->age=@@ p2->@@ age; strcpy(@@ temp@@ ->id,@@ p2->@@ id); p=@@ p2; while(@@ p->@@ pre@@ !=@@ p1@@ ){ strcpy(@@ p->@@ id,@@ p->@@ pre@@ ->id); p->age@@ =p->@@ pre@@ ->@@ age; p=@@ p->@@ pre@@ ; } strcpy(@@ p->@@ id,@@ p1->@@ id); p->age@@ =p1->@@ age; p1->age@@ =@@ temp->@@ age; strcpy(@@ p1->@@ id,@@ temp->@@ id); } p2=p2->next; } } p1=p1->next; } returnhead; } voidprint(struct@@ Patient@@ *head@@ ){ struct@@ Patient@@ *@@ p1,*p2,*@@ p; p=head; while(p@@ ){ if(p->@@ age@@ >=60){ printf("%s\n",p->id); } p=p->next; } p=head; while(p@@ ){ if(p->@@ age@@ <60){ printf("%s\n",p->id); } p=p->next; } }  
c -1
h -1
0

intmain() { inti=0,j=0,@@ n,m,@@ k; inta[1000]; cin>>n>>k; for(m=0;m@@ <n;m++) cin>>@@ a[m@@ ]; for(i=0;i<n;i++) { for(j=i;j<@@ n;j++) { if(a[i]+a[j]==k) { cout<<"yes"; return0; } } } cout<<"no"; return0; }  
c -1
h -1
intmain() { intyear,month,day; scanf("%d%d%d",&year,&month,&day); inta[@@ 12]={31,28,31,30,31,30,31,31,30,31,30,31}; intsum=0; inti; for(i=0;i<@@ month;i++) { sum+=@@ a[i@@ -1]; } sum=sum+day; if((year%4==0&&year%100!=0@@ )||@@ year%400==0) { if(month@@ <=@@ 2) { printf("%d\n",sum); } if(month@@ >2) { sum=sum+1; printf("%d\n",sum); } } else printf("%d\n",sum); return0; }  
c -1
h -1
0

intmain() { inti,@@ l@@ ,j@@ =0,@@ l1,l2,@@ e=0; chara[256],b[@@ 256],c[@@ 256],@@ d@@ [256]; scanf("%s",a); scanf("%s",b); scanf("%s",c); l@@ =strlen(a); l1@@ =strlen(b); l2=strlen(@@ c); for(i=0;a[i]@@ !='\0';i++){ if(e@@ ==0){ if(a[i]==@@ b[j]@@ ){ d@@ [j]=@@ a[i]; j++; }else{ if(j@@ !=0&&@@ e@@ !=1@@ ){ d@@ [j]@@ ='\0'; printf("%s",@@ d); } j=0; printf("%c",a[i]); } if(j==@@ l1@@ &&@@ e@@ ==0){ printf("%s",@@ c); i@@ =i@@ -@@ l1@@ +@@ l2@@ ; e=1; } }else{ printf("%c",a[i]); } } return0; }  
c -1
h -1
intmain() { intm,@@ t@@ ,j,@@ i; scanf("%d",&m); int*@@ a,*@@ b; a=@@ (int*)malloc(sizeof(int)@@ *@@ m); b=@@ (int*)malloc(sizeof(int)@@ *@@ m); for(i=0;i<m;i++)@@ scanf("%d",&a[i]); for(i=0;i<m;i++) { b[i]=0; for(j=0;j<i;j++) { if(a[j]>=@@ a[i]) if(b[j]@@ >@@ b[i]@@ )@@ b[i]=@@ b[j]; } b[i]=@@ b[i]@@ +1; } t=0; for(i=0;i<m;i++) if(b[i]>@@ t)@@ t=b[i]; printf("%d\n",t); }  
c -1
h -1
0

intmain() { chara[256],b[256],c[256]; scanf("%s%s%s",@@ b,@@ a,@@ c); int@@ alen@@ ,@@ blen@@ ,@@ clen@@ ,@@ i,j; alen@@ =strlen(@@ a);@@ blen@@ =strlen(@@ b@@ );@@ clen@@ =strlen(c); intn=0; for(i=0;i<@@ blen@@ ;i++) { if(b[i]==@@ a[0]) { n=1; for(j=0;j<@@ alen@@ ;j++) if(a[j]!=@@ b@@ [i+j@@ ]){@@ n=@@ 2@@ ;break;} } if(n@@ ==1)break; } int@@ t=i; if(n==1) { for(i=0;i<@@ t@@ ;i++)@@ printf("%c",@@ b[i]); printf("%s",@@ c); for(i=@@ t@@ +@@ clen@@ ;i<@@ blen@@ ;i++)@@ printf("%c",@@ b[i]); } else@@ printf("%s",@@ b); return0; }  
c -1
h -1
voidmain() { inta[@@ 20001@@ ],b[@@ 101@@ ],c[@@ 101]; inti,n,@@ m; scanf("%d",&n); for(i=1;i<=@@ n;i++)@@ scanf("%d",&a[i]); for(i=0;i<=@@ 101@@ ;i++)@@ b[i]=0; m=0; for(i=1;i<=@@ n;i++)@@ if(b[@@ a[i]@@ ]@@ ==0){@@ m=m@@ +1;@@ b[@@ a[i]@@ ]@@ =1;@@ c[m@@ ]=@@ a[i];} for(i=1;i<=@@ m@@ ;i++){@@ if(i<@@ m)@@ printf("%d",@@ c[i]@@ );@@ else@@ printf("%d",@@ c[i]@@ );} }  
c -1
h -1
0

intmain() { intn; cin>>n; intcount@@ [100]={0},@@ num[@@ 90@@ ]={0}; int@@ i@@ =1,@@ a,@@ j=0; for(i@@ ;i<=n;i++) { cin>>a; if(count@@ [a@@ ]==0) { num@@ [j]=@@ a; j@@ +=1; } count@@ [a@@ ]=@@ count@@ [a@@ ]+1; } i=0; for(i@@ ;i<@@ j@@ -1;i++) { cout<<@@ num[i]@@ <<""; } cout<<num@@ [j-1]@@ <<endl; return0; }  
c -1
h -1
intmain(intargc,char*argv[]) { intn; scanf("%d",&n); inti,j; int@@ c@@ [100][100]; int@@ a1,a2,@@ b1,@@ b2@@ ,@@ a,b,@@ s; for(i=0;i<n;i++){ for(j=0;j<n;j++){ scanf("%d",&@@ c@@ [i][j]); } } for(i=0;i<n;i++){ for(j=0;j<n;j++){ if(c@@ [i][j]==0){ a1@@ =i; b1@@ =j; } } } for(i=n-1;i>=0;i--){ for(j=n-1@@ ;j>=0;j--){ if(c@@ [i][j]==0){ a2@@ =i; b2@@ =j; } } } a=@@ a1@@ -@@ a2@@ -1; b=@@ b1@@ -@@ b2@@ -1; s=@@ a*@@ b; printf("%d",s); return0; }  
c -1
h -1
0

intm,n,@@ a[@@ 800@@ ],b[@@ 800@@ ]; voidmain() { voidf1@@ (); voidf2@@ (); void@@ f3@@ (); void@@ f4@@ (); f1@@ (); f2@@ (); f3@@ (); f4@@ (); } voidf1@@ () { scanf("%d%d",&m,&n); } voidf2@@ () { inti; for(i=0;i<m;i++) scanf("%d",&a[i]); for(i=0;i<n;i++) scanf("%d",&b[i]); } void@@ f3@@ () { inti,j,temp; for(i=0;i<m;i++) {@@ for(j=i+1;j<@@ m;j++) if(a[j]@@ <@@ a[i]) {@@ temp=@@ a[i];a[i]=@@ a[j];a[j]=@@ temp;} } for(i=0;i<n;i++) {@@ for(j=i+1;j<n;j++) if(b[j]@@ <@@ b[i]) {@@ temp=@@ b[i]@@ ;@@ b[i]=b[j]@@ ;@@ b[j]=@@ temp;} } } void@@ f4@@ () { inti,j; for(i=0;i<m;i++) printf("%d",a[i]); for(j=0;j<n-1;j++) printf("%d",@@ b[j]); printf("%d",b[@@ n-1]); }  
c -1
h -1
intmain(intargc,char*argv[]) { inti,@@ a[@@ 16],@@ s=0,@@ j@@ ;@@ scanf("%d",&a[0]); while(@@ a[0]@@ !=-1) { for(i=1;i<=@@ 15;i++) {@@ scanf("%d",&a[i]); if(a[i]==0)break; for(j=0;j<=i;j++) if(a[j]==2*@@ a[i]@@ ||@@ a[j]@@ ==0@@ .@@ 5@@ *@@ a[i])@@ s@@ +=1; }@@ printf("%d\n",s); s=0; scanf("%d",&a[0]); } return0; }  
c -1
h -1
0

intmain(){ double@@ k,@@ j; inti,@@ o@@ ; chara[500],b[500]; scanf("%lf",&@@ k); scanf("%s",&@@ a); scanf("%s",&@@ b); int@@ l@@ =strlen(a); int@@ p@@ =strlen(b); o@@ =0; for(i=0;i<l;i++){ if(a[i]!='A'&&a[i]!='T'&&a[i]!='C'&&a[i]!='@@ G'){ p@@ +=@@ 500@@ ; } if(@@ b[i]!='A'&&b[i]!='T'&&b[i]!='C'&&b[i]!='@@ G'){ p@@ +=@@ 500@@ ; } if(a[i]==b[i]) o@@ ++; } if(l@@ !=@@ p@@ )@@ printf("error"); else{@@ j@@ =1.0*@@ o@@ /@@ l; if(j@@ >@@ k)@@ printf("yes"); elseprintf("no"); } return0; }  
c -1
h -1
voidshuru@@ (inta[],intb[],int@@ m,intn) { int*p=@@ a,*@@ q=@@ b; inti,j; for(i=0;i<m;i++) {@@ scanf("%d",p@@ );@@ p@@ ++;} for(j=0;j<n;j++) {@@ scanf("%d",@@ q@@ );@@ q@@ ++;} } voidpaixu@@ (inta[],int@@ m) { int*p=@@ a,b,@@ c,d; for(b=0;b@@ <m-1@@ ;@@ b++) { for(c=0;c@@ <m-1@@ -b@@ ;c@@ ++) { if(@@ *(p@@ +c@@ )@@ >*@@ (p@@ +c@@ +1@@ )) { d@@ =*(p@@ +c@@ );@@ *(p@@ +c@@ )@@ =*(p@@ +c@@ +1@@ );@@ *(p@@ +c@@ +1)@@ =@@ d; } } } } voidhebing@@ (inta[],intb[],int@@ c[@@ ],int@@ m,intn) { int*@@ r=@@ a,*@@ s=@@ b@@ ,*@@ t=@@ c,@@ p,q; for(p=0;p@@ <m@@ ;p++) { *(@@ t@@ +p@@ )@@ =*(@@ r@@ +@@ p); } for(q=0;q@@ <n;@@ q++) { *(@@ t@@ +@@ m+@@ q@@ )@@ =*(@@ s@@ +@@ q); } } voidshuchu@@ (inta[],int@@ b) { intc; printf("%d",a[0]); for(c@@ =1;@@ c@@ <b@@ ;c@@ ++) { printf("%d",a[@@ c@@ ]); } } intmain() { inta[@@ 1000@@ ]={0},b[@@ 1000]={0},@@ c[@@ 2000@@ ]={0},@@ m,n; scanf("%d%d",&m,&n); shuru@@ (a,b,m,n); paixu@@ (a,@@ m@@ );@@ paixu@@ (b,n); hebing@@ (a,b,@@ c,@@ m,n); shuchu@@ (c,@@ m+@@ n); }  
c -1
h -1
0

int@@ len1,len2@@ ; int*@@ sz1@@ ,*@@ sz2@@ ; voidread@@ () { inti; scanf("%d%d",&@@ len1@@ ,&@@ len2@@ ); sz1@@ =@@ (int@@ *)malloc(LEN@@ *(@@ len1@@ +len2@@ )); sz2@@ =@@ (int@@ *)malloc(LEN@@ *@@ len2@@ ); for(i=0;i<len1;i++) scanf("%d",@@ sz1@@ +i); for(i=0;i<@@ len2@@ ;i++) scanf("%d",@@ sz2@@ +i); } voidsort@@ () { inti,j,temp; for(i=0;i<len1;i++){ for(j=i+1;j<@@ len1@@ ;j++) if(@@ sz1@@ [i]>@@ sz1@@ [j]){ temp=@@ sz1@@ [i]; sz1@@ [i]=@@ sz1@@ [j]; sz1@@ [j]=temp; } } for(i=0;i<@@ len2@@ ;i++){ for(j=i+1;j<@@ len2@@ ;j++) if(@@ sz2@@ [i]>@@ sz2@@ [j]){ temp=@@ sz2@@ [i]; sz2@@ [i]=@@ sz2@@ [j]; sz2@@ [j]=temp; } } } voidcombine@@ () { inti; for(i=0;i<@@ len2@@ ;i++){ sz1@@ [@@ len1@@ +i]=@@ sz2@@ [i]; } } voidprint() { inti; printf("%d",@@ sz1@@ [0]); for(i=1;i<@@ len1@@ +len2@@ ;i++){ printf("%d",@@ sz1@@ [i]); } printf("\n"); } voidmain() { read(); sort@@ (); combine@@ (); print(); }  
c -1
h -1
intmain() { inta[16@@ ],i,j,@@ s,@@ n; for(;;) { for(i=0;i<=@@ 15@@ ;i++)@@ a[i]=0; for(i=0;i<=@@ 15;i++) { scanf("%d",&a[i]); if(a[i]==0)break; if(a[i]==@@ -1)@@ return0; } n=i; s=0; for(i=0;i<n;i++) { for(j=0;j<n;j++) if(a[j]==2*@@ a[i])@@ s=s+1; } printf("%d\n",s); } return0; }  
c -1
h -1
0

voidmain() {@@ inta[@@ 20],@@ n,@@ r=0,@@ i,j,@@ count=0; memset(a,0,@@ sizeof(a)); for(;;) { scanf("%d",&n); if(n@@ ==-1) break; elseif(n@@ !=0) { a[r@@ ]=@@ n;@@ r@@ ++;@@ continue; } elseif(n@@ ==0) { for(i=0;i<@@ r@@ -1;i++) { for(j=i+1;j<@@ r@@ ;j++) {@@ if(a[i]==2*@@ a[j]||a[j]==2*@@ a[i]) count@@ ++;} a[i]=0; } a[i]=0; printf("%d\n",@@ count); count=0; r@@ =0@@ ;i@@ =0;j@@ =0; continue; } } }  
c -1
h -1
intmain() { intn,a[@@ 20000@@ ]={0}; cin>>n; intcount@@ =@@ n; for(inti=1;i<=n;i++) cin>>a[i]; for(inti=1;i<=n;i++) { if(a[i]!=0) { for(intj=i+1@@ ;j<=@@ n;j++) if(a[j]==@@ a[i]@@ ){@@ a[j]@@ =0;@@ count@@ -=@@ 1@@ ;} } } if(count@@ >1) { inti; for(i=1;i<=n;i++) { if(a[i]!=0) { cout<<a[i]@@ <<''; count@@ --; } if(count@@ ==1)break; } for(i@@ =i+1@@ ;i<=n;i++) if(a[i]@@ !=0)@@ cout<<a[i]; } else for(inti=1;i<=n;i++) if(a[i]@@ !=0)@@ cout<<a[i]; return0; }  
c -1
h -1
0

intmain() { introw,col,@@ i,j; inta[@@ 101][101]; scanf("%d%d",&row,&col); for(i=0;i<row;i++){ for(j=0;j<col;j++){ scanf("%d",&(@@ a[i][j]@@ )); } } for(i=0;i<@@ row+col@@ ;i++){ if(i@@ <col) j=0; else j@@ =i@@ -col@@ +1; for(@@ ;j<=@@ i@@ &&j@@ <row@@ ;j++){ printf("%d\n",@@ a[j][i-j@@ ]); } } return0; }  
c -1
h -1
intmain() { intn,a[@@ 20001@@ ]={0},@@ count=0; cin>>n; for(inti=1;i<=n;i++) { cin>>a[i]; } for(inti=1;i<=n;i++) { for(intj=1;j<@@ i;j++) { if(a[i]==a[j]) { count++; a[i]=0; } } } cout<<@@ a[1]; for(inti=2@@ ;i<=n;i++) { if(a[i]!=0) { cout<<""<<a[i]; } } return0; }  
c -1
h -1
0

int@@ Factorization@@ (int,int); intmain() { intn=0,@@ num=0; cin>>n; for(inti=0;i<n;i++) { cin>>num; cout<<@@ Factorization@@ (num,@@ 2)@@ +1<<endl; } return0; } int@@ Factorization@@ (int@@ num@@ ,intn) { intcount=0; for(inti=@@ n;@@ num@@ /i@@ >=i@@ ;i++) if(num@@ %i==0) { count++; count=@@ count@@ +@@ Factorization@@ (@@ num@@ /i,i); } returncount; }  
c -1
h -1
intmain() { intn,k,i,@@ a[1000],@@ j,@@ q; scanf("%d%d",&@@ n,@@ &@@ k); for(i=1;i<=n;i++){ scanf("%d",&a[i]); } for(i=1;i<=n;i++){ for(j=1;j<=n;j++){ q=@@ a[i]+a[j]; if(q@@ ==k) break; else q=0; } if(q@@ ==k) break; } if(q@@ ==k) printf("yes"); else printf("no"); return0; }  
c -1
h -1
0

intsum@@ =1; int@@ Fact@@ (intx,int@@ y); intmain(){ intn,@@ a; cin>>n; for(inti=0;i<n;i++){ cin>>a; sum=1; Fact@@ (a,@@ 2); cout<<sum<<endl; } return0; } int@@ Fact@@ (intx,int@@ y){ if(x==1) return0; else{ for(;@@ y@@ <=@@ sqrt(@@ x@@ );@@ y@@ ++) if(x%@@ y@@ ==0){ sum=sum+@@ Fact@@ (x@@ /@@ y,@@ y); } return1; } }  
c -1
h -1
intmain() { structstu { charid@@ [@@ 9@@ ]; int@@ chn@@ ; intmath; int@@ both@@ ; structstu*next; }; intn,i; scanf("%d",&n); structstu@@ *head,*p1,*p2; for(i=0;i<n;i++) { if(i==0) { head=(struct@@ stu*)malloc(sizeof(structstu)); p1=head; } else { p1->next@@ =(struct@@ stu*)malloc(sizeof(structstu)); p1=p1->next; } scanf("%s%d%d",@@ p1->id,&p1->@@ chn@@ ,&p1->math); p1->@@ both@@ =p1->@@ chn@@ +p1->@@ math; } p1->next=NULL; int@@ max; for(i=0;i<3;i++) { max=@@ head->@@ both@@ ; p1=head; do { p1=p1->next; if(max<@@ p1->@@ both@@ ) { max=@@ p1->@@ both@@ ; p2=p1; } }while(@@ p1->next@@ !=NULL); printf("%s%d\n",@@ p2->@@ id,@@ p2->@@ both@@ ); p2->@@ both@@ =0; } return0; }  
c -1
h -1
0

intmain() { inta[@@ 999@@ ];@@ char@@ r@@ [@@ 999@@ ][@@ 26@@ ];@@ intb[@@ 125@@ ]={0@@ }@@ ;@@ intn,i,j,@@ maxi@@ ,@@ s; scanf("%d",&n); for(i=0;i<=n-1;i++) { scanf("%d",&a[i]); scanf("%s",@@ r@@ [i]); s@@ =strlen(@@ r@@ [i])@@ -1; for(j=0;j<=@@ s@@ ;j++) { b[r@@ [i][j]@@ ]=@@ b[r@@ [i][j]@@ ]+1; } } maxi@@ =@@ 65@@ ; for(i=@@ 66@@ ;i<=@@ 90@@ ;i++) { if(b[i]>@@ b[@@ maxi@@ ])@@ maxi@@ =i; } printf("%c\n",@@ maxi@@ ); printf("%d\n",@@ b[@@ maxi@@ ]); for(i=0;i<=n-1;i++) { s@@ =strlen(@@ r@@ [i])@@ -1; for(j=0;j<=@@ s@@ ;j++) { if(r@@ [i][j]==@@ maxi@@ ) { printf("%d\n",a[i]); break; } } } return0; }  
c -1
h -1
intmain() { inta[@@ 1000][1000],@@ i,n,@@ j,@@ b,@@ c,d,@@ e,@@ x; scanf("%d",&n); for(i=0;i<n;i++) { for(j=0;j<n;j++) { scanf("%d",&a[i][j]); } } for(i=0;i<n;i++) { for(j=0;j<n;j++) { if(a[i][j]==0) { b=i; c@@ =j; j=@@ n; i=@@ n; } } } for(i=n-1;i>=0;i--) { for(j=n-1;j>=0;j--) { if(a[i][j]==0) { d@@ =i; e@@ =j; i@@ =-1; j@@ =-1; } } } x@@ =(@@ d-b@@ +1)*(@@ e@@ -c@@ +1)@@ -2@@ *(@@ d-b@@ +1)@@ -2@@ *(@@ e@@ -c@@ +1)@@ +@@ 4@@ ; printf("%d",x); return0; }  
c -1
h -1
0

intmain() { chars1@@ [256]; char@@ s2@@ [256]; char@@ s3@@ [256]; inti,j,@@ q; scanf("%s\n@@ %s@@ \n@@ %s",@@ s1,@@ s2,@@ s3); int@@ k1@@ =strlen(@@ s1); int@@ k2@@ =strlen(@@ s2); for(i=0;i<@@ k1@@ ;i++) { intk=0; for(j=0;j<@@ k2@@ ;j++) { if(s1@@ [i+j]!=@@ s2@@ [j]) { break; } if(s1@@ [i+j]==@@ s2@@ [j]) { k++; } } if(k==@@ k2@@ ) { q@@ =i; break; } } for(i=0;i<@@ k1@@ ;i++) { if(i!=@@ q) { printf("%c",@@ s1[i]); } if(i==@@ q) { printf("%s",@@ s3); i@@ =i+@@ k2@@ -1; } } return0; }  
c -1
h -1
intmain() { inta,b,c,@@ D@@ ; scanf("%d%d%d",&a,&b,&c); if(((@@ a%@@ 4==0)&&(@@ a%100!=0@@ )@@ )||(@@ a%400==0)) { switch(@@ b) { case1: D=@@ c; break; case2: D=@@ c+@@ 31; break; case3: D=@@ c+@@ 60@@ ; break; case4: D=@@ c+@@ 91@@ ; break; case5: D=@@ c+@@ 121@@ ; break; case6: D=@@ c+@@ 152@@ ; break; case7: D=@@ c+@@ 182@@ ; break; case8: D=@@ c+@@ 213@@ ; break; case9: D=@@ c+@@ 244@@ ; break; case10: D=@@ c+@@ 274@@ ; break; case11: D=@@ c+@@ 305@@ ; break; case12: D=@@ c+@@ 335@@ ; break; } printf("%d",D@@ ); } else { switch(@@ b) { case1: D=@@ c; break; case2: D=@@ c+@@ 31; break; case3: D=@@ c+@@ 60@@ -1; break; case4: D=@@ c+@@ 91@@ -1; break; case5: D=@@ c+@@ 121@@ -1; break; case6: D=@@ c+@@ 152@@ -1; break; case7: D=@@ c+@@ 182@@ -1; break; case8: D=@@ c+@@ 213@@ -1; break; case9: D=@@ c+@@ 244@@ -1; break; case10: D=@@ c+@@ 274@@ -1; break; case11: D=@@ c+@@ 305@@ -1; break; case12: D=@@ c+@@ 335@@ -1; break; } printf("%d",D@@ ); } return0; }  
c -1
h -1
0

charid@@ [@@ 101][@@ 11]; intmain() {@@ intn; intage@@ [@@ 101],@@ a[@@ 101]; scanf("%d",&n); for(inti=1;i<=n;i++) { scanf("%s%d",@@ id[i],&@@ age[i]); int@@ j=i; if(age[i]@@ >=60) { for(@@ ;j>@@ 1@@ &&@@ age@@ [a@@ [j-1]@@ ]<@@ age@@ [i]@@ ;j--) a[j]=@@ a@@ [j-1]; } a[j]@@ =i; } for(inti=1;i<=n;i++) printf("%s\n",@@ id@@ [@@ a[i]@@ ]); getchar(); getchar(); return0; }  
c -1
h -1
intmain() { int@@ year; int@@ month@@ ; int@@ day; int@@ data1@@ [13]={0,31,28,31,30,31,30,31,31,30,31,30,31}; int@@ data2@@ [@@ 13]={0,31,@@ 29,31,30,31,30,31,31,30,31,30,31}; int@@ in@@ =0; scanf("%d%d%d",&year,&month,&day); if(year%@@ 4@@ ==0||@@ year%@@ 100==0&&@@ year%400==0) { int@@ i=@@ month@@ -1; for(@@ ;i>=0;i--) { in@@ +=@@ data2@@ [i]; } in@@ +=@@ day; } else { int@@ i=@@ month@@ -1; for(@@ ;i>=0;i--) { in@@ +=@@ data1@@ [i]; } in@@ +=@@ day; } printf("%d\n",@@ in@@ ); return0; }  
c -1
h -1
0

intmain() { intn,k,@@ sl@@ [1000],@@ sz[@@ 1000][1000],@@ i,@@ p,@@ s; s=0; scanf("%d%d",&n,&k); for(i=0;i<n;i++){ scanf("%d",&@@ sl@@ [i]); } for(i=0;i<n;i++){ for(p=0;p@@ <n;@@ p++){ sz[i]@@ [p@@ ]=@@ sl@@ [i]+@@ sl@@ [p@@ ]; } } for(i=0;i<n;i++){ for(p=0;p@@ <n;@@ p++){ if(sz[i]@@ [p@@ ]==k){ sz[i]@@ [p@@ ]=1; } else{ sz[i]@@ [p@@ ]=0; } s=s+@@ sz[i]@@ [p@@ ]; } } if(s@@ ==0){ printf("no"); } else{ printf("yes"); } return0; }  
c -1
h -1
intmain(){ intn,k,@@ i,j; intt=0; scanf("%d%d",&n,&k); intsz[1000]; for(i=0;i<n;i++){ scanf("%d",&(sz[i]@@ )); } for(i=0;i<n;i++) { for(j=0;j<n;j++) { if(sz[i]+sz@@ [j]==k) { if(t==0) { t=1; } else { t=1; } } } } if(t@@ ==1){ printf("yes"); }else{ printf("no"); } return0; }  
c -1
h -1
1


intmain(){ intn,@@ s,@@ r,@@ l; intsz[100][100]; s=0; scanf("%d",&n); for(inti=0;i<n;i++){ scanf("%d",&@@ r); scanf("%d",&@@ l); for(intj=0;j<@@ r@@ ;j++){ for(intk=0;k<@@ l@@ ;k++){ scanf("%d",&(@@ sz[j]@@ [k]@@ )); if((@@ j@@ ==0)||(@@ j==@@ r@@ -1)@@ ||(@@ (j@@ !=0)&&(@@ k@@ ==0)@@ )||(@@ (j@@ !=0)&&(@@ k==@@ l@@ -1)@@ )){ s=s+@@ sz[j]@@ [k]; }@@ }@@ }@@ printf("%d\n",s); s=0; } return0; }  
c -1
h -1
int@@ A@@ ,@@ B@@ ; inta[@@ 250@@ ],b[@@ 250@@ ],c[@@ 501]; voidinput() {scanf("%d",&@@ A@@ ); scanf("%d",&@@ B@@ ); for(inti=0;i<@@ A@@ ;i++){ scanf("%d",&a[i]);} for(intj=0;j<@@ B@@ ;j++){ scanf("%d",&@@ b[j]@@ );} } voidpaixu@@ () { for(intj=@@ A@@ -1@@ ;j>0;j--) { for(int@@ r=0;r@@ <j@@ ;r++) {@@ if(a[@@ r@@ ]>@@ a[r@@ +1]) {int@@ tmp; tmp=@@ a[r@@ +1]; a[r@@ +1@@ ]=a[@@ r@@ ]; a[r@@ ]=@@ tmp; } } } for(intj=@@ B@@ -1@@ ;j>0;j--) { for(int@@ r=0;r@@ <j@@ ;r++) {if(@@ b[r@@ ]>@@ b[r@@ +1]) {int@@ tmp; tmp=@@ b[r@@ +1]; b[r@@ +1]=@@ b[r@@ ]; b[r@@ ]=@@ tmp; } } } } voidhebing@@ () { for(inti=0;i<@@ A@@ ;i++) {@@ c[i]=@@ a[i];} for(inti=@@ A@@ ;i<@@ A@@ +@@ B@@ ;i++) {@@ c[i]=b[i-@@ A@@ ];} } void@@ show@@ () { for(intj=0;j<@@ A@@ +@@ B@@ ;j++) {printf("%d",@@ c@@ [j]); if(j<@@ A@@ +@@ B@@ -1) {@@ printf("@@ ");@@ }} } main() { scanf("%d",&@@ A@@ ); scanf("%d",&@@ B@@ ); for(inti=0;i<@@ A@@ ;i++){ scanf("%d",&a[i]);} for(intj=0;j<@@ B@@ ;j++){ scanf("%d",&@@ b[j]@@ );} for(intj=@@ A@@ -1@@ ;j>0;j--) { for(int@@ r=0;r@@ <j@@ ;r++) {@@ if(a[@@ r@@ ]>@@ a[r@@ +1]) {int@@ tmp; tmp=@@ a[r@@ +1]; a[r@@ +1@@ ]=a[@@ r@@ ]; a[r@@ ]=@@ tmp; } } } for(intj=@@ B@@ -1@@ ;j>0;j--) { for(int@@ r=0;r@@ <j@@ ;r++) {if(@@ b[r@@ ]>@@ b[r@@ +1]) {int@@ tmp; tmp=@@ b[r@@ +1]; b[r@@ +1]=@@ b[r@@ ]; b[r@@ ]=@@ tmp; } } } for(inti=0;i<@@ A@@ ;i++) {@@ c[i]=@@ a[i];} for(inti=@@ A@@ ;i<@@ A@@ +@@ B@@ ;i++) {@@ c[i]=b[i-@@ A@@ ];} for(intj=0;j<@@ A@@ +@@ B@@ ;j++) {printf("%d",@@ c@@ [j]); if(j<@@ A@@ +@@ B@@ -1) {@@ printf("@@ ");@@ }} }  
c -1
h -1
0

int@@ a=0,@@ i=0,@@ sum=1; voidf@@ (inti,int@@ a){ intj; for(j=i;j<=@@ sqrt(@@ a)@@ ;j++) if(a%@@ j@@ ==0){@@ sum@@ ++;@@ f(@@ j,@@ a/@@ j@@ );} } intmain(){ intn; cin>>n; while(@@ n){ cin>>a; f(@@ 2,@@ a); cout<<sum<<endl; n--; sum=1; } }  
c -1
h -1
struct@@ sick { charnum[10]; intage; }; intmain() { inti,j,n; ints; char@@ swap@@ [10]; struct@@ sick@@ all@@ [100]; scanf("%d",&n); for(i=0;i<n;i++){ scanf("%s",&@@ all@@ [i].num); scanf("%d",&@@ all@@ [i].age); } for(i=1;i<n;i++){ for(j=i@@ ;j>0@@ ;j--){ if(@@ all@@ [j].age@@ >=60&&@@ all@@ [j].age@@ >@@ all@@ [j-1@@ ].age){ s=@@ all@@ [j].@@ age; all@@ [j].age@@ =@@ all@@ [j-1].@@ age; all@@ [j-1@@ ].age=@@ s; strcpy(@@ swap@@ ,@@ all@@ [j].@@ num); strcpy(@@ all@@ [j].@@ num,@@ all@@ [j-1].@@ num); strcpy(@@ all@@ [j-1@@ ].num,@@ swap@@ ); } else{ break; } } } for(i=0;i<n;i++){ puts(@@ all@@ [i].num); } return0; }  
c -1
h -1
0

intmain() { intn,k,i,@@ a[@@ 10000@@ ],b[@@ 10000],@@ j; scanf("%d%d",&n,&k); for(i=0;i<n;i++) { scanf("%d",&a[i]); } for(i=0;i<n-1;i++) { for(j=1;j<n;j++) { b[i]=@@ a[i]+a[j]; if(b[i]@@ ==k) { break; } else { continue; } } if(b[i]@@ ==k) { break; } else { continue; } } if(b[i]@@ ==k) { printf("yes"); } else { printf("no"); } return0; }  
c -1
h -1
intmain(){ intn,k,@@ i=0,@@ j,@@ sign@@ =1; scanf("%d%d",&n,&k); ints[@@ n]; while(i<@@ n){ scanf("%d",&s[i]); i=i+1; } i=0; while(i<@@ n){ j@@ =i+1; while(j<@@ n){ if(s@@ [i]+@@ s@@ [j]==k){ sign@@ =0; } j=j+1; } i=i+1; } if(@@ sign@@ ==0){ printf("yes"); }else{ printf("no"); } return0; }  
c -1
h -1
1


intmain() { intn,i,j,@@ k=0,@@ t=0,@@ y@@ [100],@@ x,@@ a[100@@ ]={0},@@ b[100@@ ]; chars@@ [100][@@ 20],@@ temp@@ [@@ 20],@@ s1@@ [100][@@ 20],@@ s2@@ [100][@@ 20]; scanf("%d",&n); for(i=0;i<n;i++) { scanf("%s%d",@@ s[i]@@ ,&@@ y@@ [i]); } for(i=0;i<n;i++) { if(y@@ [i]@@ >=60) { strcpy(@@ s1@@ [k],@@ s[i]); a[k]=@@ y@@ [i]; k++; } } for(i=0;i<@@ k-1;i++) for(j=0;j<@@ k@@ -i-1;j++) if(a[j]@@ <@@ a[j+1@@ ]) { x=@@ a[j]; a[j]=a[j+1]; a[j+1]=@@ x; strcpy(@@ temp,@@ s1@@ [j]); strcpy(@@ s1@@ [j],@@ s1@@ [j+1]); strcpy(@@ s1@@ [j+1],@@ temp); } for(i=0;i<k;i++) printf("%s\n",@@ s1@@ [i],@@ a[i]); for(i=0;i<n;i++) { if(y@@ [i]@@ <60) { strcpy(@@ s2@@ [t@@ ],@@ s[i]); t++; } } for(i=0;i<t;i++) printf("%s\n",@@ s2@@ [i]); return0; }  
c -1
h -1
voidmain() { intk,@@ data@@ [25],@@ ans@@ [25],@@ max; inti,j; scanf("%d",&k); for(i=0;i<@@ 25;i++) ans@@ [i]=1; for(i=1;i<k;i++) scanf("%d",&@@ data@@ [i@@ -1]); scanf("%d",&@@ data@@ [k@@ -1]); ans@@ [0]=1; max=1; for(j=1;j<@@ k;j++) { for(i=0;i<j;i++) { if(@@ data@@ [j]<=@@ data@@ [i]) { if(@@ ans@@ [i]@@ +1>@@ ans@@ [j]) ans@@ [j]=@@ ans@@ [i]@@ +1; } } if(@@ ans@@ [j]@@ >max) max=@@ ans@@ [j]; } printf("%d",max); }  
c -1
h -1
0

intx[@@ 200],@@ y[@@ 200],@@ m,n; void@@ sca@@ (void) { inti; scanf("%d%d",&m,&n); for(i=0;i<m;i++) { scanf("%d",&@@ x[i]); } for(i=0;i<n;i++) { scanf("%d",&@@ y@@ [i]); } } void@@ bubble@@ (inta[],intn) { inti,j,@@ b; for(i=1;i<n;i++) { for(j=0;j<n-i;j++) { if(a[j]>a[j+1]) { b=@@ a[j]; a[j]=a[j+1]; a[j+1]=@@ b; } } } } void@@ bing@@ (inta[],int@@ l1@@ ,int@@ b[],int@@ l2@@ ) { inti,j,@@ z@@ [500]; for(i=0;i<l1;i++) z@@ [i]=@@ a[i]; for(j=0@@ ;i<@@ (@@ l1@@ +@@ l2@@ )@@ ;j++@@ ,i++) z@@ [i]=@@ b[j]; printf("%d",@@ z@@ [0]); for(i=1;i<@@ (@@ l1@@ +@@ l2@@ );i++) printf("%d",@@ z@@ [i]); } intmain() { sca@@ (); bubble@@ (x,@@ m); bubble@@ (@@ y,@@ n); bing@@ (x,@@ m,@@ y,@@ n); return0; }  
c -1
h -1
intmain() { int@@ c,@@ a[@@ 20000],@@ n,@@ i,@@ l=0,@@ p,@@ k=0,@@ j; scanf("%d",&n); for(i=0;i<n;i++) { l=0; scanf("%d",&@@ c); for(j=0;j<k;j++) { if(c==@@ a[j]) l=l@@ +1; } if(l@@ ==0) { a[k]=@@ c; k++; } } for(i=0;i<k;i++) { if(i==0) printf("%d",a[i]); else { printf("%d",a[i]); } } getchar(); getchar(); }  
c -1
h -1
0

intmain(){ doublen,@@ w; inti,@@ m,@@ z@@ =0,@@ e=0; chara[@@ 600@@ ],b[@@ 600]; scanf("%lf",&n); scanf("%s%s",a,b); m=strlen(a); for(i=0;i<m;i++){ if(a[i]==b[i]@@ )@@ z@@ ++; if((a[i]!='@@ A'&&a[i]!='T'&&a[i]!='C'&&a[i]!='G')||(b[i]!='A'&&b[i]!='T'&&b[i]!='C'&&b[i]!='@@ G')){ printf("error"); e=1; break; } } w@@ =1.0*@@ z@@ /@@ m; if(e@@ ==0){ if(w@@ >=@@ n)@@ printf("yes"); elseprintf("no"); } return0; }  
c -1
h -1
voidmain() { inta,@@ k,i,j,@@ s=0,@@ m,@@ n@@ ,*@@ p@@ [100][100]; scanf("%d",&k); for(a=0;a@@ <k;@@ a++) { scanf("%d%d",&m,&n); for(i=0;i<m;i++) { for(j=0;j<n;j++) {@@ p@@ [i][j]=@@ (int*)malloc(@@ 1@@ *sizeof(int)); scanf("%d",@@ &*@@ p@@ [i][j]); if(j==@@ n-1)@@ scanf("\n@@ ");} } for(j=0;j<n;j++) s=s+@@ (*p@@ [0]@@ [j]@@ )+@@ (*p@@ [m@@ -1]@@ [j]); for(i=1;i<m-1;i++) s=s+@@ (*p@@ [i][0]@@ )+@@ (*p@@ [i]@@ [@@ n-1]); printf("%d\n",s@@ );@@ s=0; } }  
c -1
h -1
0

intmain(){ float@@ a; int@@ bar@@ =0; scanf("%f",&@@ a); charzfc@@ [2][@@ 500]; scanf("%s",@@ zfc@@ [0]); scanf("%s",@@ zfc@@ [1]); float@@ count@@ =0@@ .0@@ ; if(strlen(@@ zfc[0]@@ )!=strlen(@@ zfc[1]@@ )) printf("error"); else{ float@@ len=strlen(@@ zfc@@ [0]); for(inti=0;i<@@ len@@ ;i++){ if((@@ zfc[0]@@ [i]!='A'&&@@ zfc[0]@@ [i]!='T'&&@@ zfc[0]@@ [i]!='C'&&@@ zfc[0]@@ [i]!='G')||(@@ zfc[1]@@ [i]!='A'&&@@ zfc[1]@@ [i]!='T'&&@@ zfc[1]@@ [i]!='C'&&@@ zfc[1]@@ [i]!='G')){ printf("error"); bar@@ =1; break; } elseif(@@ zfc[0]@@ [i]==@@ zfc[1]@@ [i]) count+=@@ 1.0@@ ; } if(count@@ /@@ len@@ >=@@ a@@ &&@@ bar@@ ==0) printf("yes"); if(count@@ /@@ len@@ <a@@ &&@@ bar@@ ==0) printf("no"); } return0; }  
c -1
h -1
intmain() { intn,i,j,@@ a[100][100],@@ num=0,@@ v@@ ,@@ k; cin>>n; for(i=0;i<n;i++) { for(j=0;j<n;j++) { cin>>a[i][j]; } } for(i=0;i<n;i++) { for(j=0;j<n;j++) { if(a[i][j]==0) { for(k=j@@ ;@@ ;k++) { if(a[i]@@ [k]@@ !=0) { break; } } for(@@ v@@ =i;@@ ;@@ v@@ ++) { if(a[@@ v@@ ][j]@@ !=0) { break; } } num@@ =(@@ k@@ -j@@ -2)*(@@ v@@ -i@@ -2); break; } if(num@@ !=0) break; } } cout<<num<<endl; return0; }  
c -1
h -1
0

intmain() { inta[100][100]; intn,@@ row,col,@@ i,j; scanf("%d%d",&row,&col); for(i=0;i<=@@ row-1;i++) for(j=0;j<=@@ col@@ -1;j++) scanf("%d",&a[i][j]); if(row@@ >=@@ col) { for(n=0;n@@ <=col@@ -1;@@ n++) for(i=0;i<=@@ n;i++)@@ printf("%d\n",a[i]@@ [n@@ -i]); for(n=@@ col@@ ;n@@ <=row@@ -1;@@ n++) for(i=@@ n-@@ col@@ +1;i<=@@ n;i++)@@ printf("%d\n",a[i]@@ [n@@ -i]); for(n=@@ row@@ ;n@@ <=@@ row+col-2@@ ;n++) for(i=@@ n-@@ col@@ +1;i<=@@ row-1@@ ;i++)@@ printf("%d\n",a[i]@@ [n@@ -i]); } else { for(n=0;n@@ <=row@@ -1;@@ n++) for(i=0;i<=@@ n;i++)@@ printf("%d\n",a[i]@@ [n@@ -i]); for(n=@@ row@@ ;n@@ <=col@@ -1;@@ n++) for(i=0;i<=@@ row-1@@ ;i++)@@ printf("%d\n",a[i]@@ [n@@ -i]); for(n=@@ col@@ ;n@@ <=@@ row+col-2@@ ;n++) for(i=@@ n-@@ col@@ +1;i<=@@ row-1@@ ;i++)@@ printf("%d\n",a[i]@@ [n@@ -i]); } return0; }  
c -1
h -1
intmain() { intn; cin>>n; int@@ mark@@ [@@ 101]; for(inti=0;i<@@ 101@@ ;i++) mark@@ [i]=0; intnum[@@ 20005@@ ]; for(inti=0;i<n;i++) { cin>>num[i]; } cout<<@@ num[@@ 0]; mark@@ [@@ num@@ [0]@@ ]=1; for(inti=0;i<n;i++) { if(@@ mark@@ [@@ num[i]@@ ]==0) { mark@@ [@@ num[i]@@ ]=1; cout<<""<<@@ num[i]; } } cout<<endl; return0; }  
c -1
h -1
0

voidmain() { inti,j,@@ m,n,@@ a[@@ 3@@ ][2@@ ],@@ k; structstudent { intnum; int@@ s1@@ ; int@@ s2; int@@ l; }stu[100000]; scanf("%d",&n); for(i=0;i<n;i++) { scanf("%d%d%d",&stu[i].num,&stu[i].@@ s1@@ ,&stu[i].@@ s2); stu[i].@@ l=@@ stu[i].@@ s1@@ +stu[i].@@ s2; } for(i=0;i<3;i++) { for(m@@ =0,@@ j@@ =0;j<@@ n;j++) { if(m@@ <@@ stu[j].@@ l) { m=@@ stu[j].@@ l; k=j; } } a[i][@@ 0]=@@ k; a[i]@@ [1]=@@ m; stu[k].@@ l=0; } for(i=0;i<3;i++) { printf("%d%d\n",@@ a[i][0]@@ +1,@@ a[i]@@ [1]); } }  
c -1
h -1
voidmain() { intn,i,j,k,@@ c,@@ x=0,@@ d,@@ m,@@ a[@@ 500@@ ][@@ 500]; scanf("%d",&n); for(i=0;i<n;i++) { for(j=0;j<n;j++) scanf("%d",&a[i][j]); } for(i=0;i<n;i++) { for(j=0;j<n;j++) { if(a[i][j]==0) { k@@ =i@@ ;m@@ =j@@ ;@@ continue; } } } c@@ =0;@@ d=0; for(i=k@@ ;i>0;i--) { if(a[i]@@ [m]@@ ==0)@@ c=c@@ +1; elsebreak; } for(j=@@ m@@ ;j>0;j--) { if(a[k]@@ [j]@@ ==0)@@ d=d@@ +1; elsebreak; } for(i=k@@ -1@@ ;i@@ >=@@ (@@ k-@@ c+@@ 2)@@ ;i--) { for(j=@@ m-1@@ ;j@@ >=@@ (m@@ -@@ d+@@ 2)@@ ;j--) { if(a[i][j]==@@ 255@@ )@@ x=x@@ +1; else@@ if(a[i][j]@@ ==0)break; } } printf("%d",x); }  
c -1
h -1
0

intmain() { charstring@@ [257]; char@@ substring@@ [257]; char@@ replacement@@ [257]; int@@ h,@@ i,j,k,@@ l1,l2,@@ l3@@ ,@@ temp,@@ r=0,@@ flag=0; scanf("%s",@@ string); scanf("%s",@@ substring); scanf("%s",@@ replacement); l1=strlen(@@ string); l2=strlen(@@ substring); l3@@ =strlen(@@ replacement); for(i=0;i<l1;i++){ if(string@@ [i]==@@ substring@@ [0]){ temp@@ =i; r=0; for(j=0;j<@@ l2@@ ;j++){ if(string@@ [@@ temp@@ +j@@ ]==@@ substring@@ [j]){ r=r@@ +1; } } if(r@@ ==@@ l2@@ ){ for(h=0;h@@ <@@ temp@@ ;@@ h@@ ++){ printf("%c",@@ string@@ [h@@ ]); } for(j=0;j<@@ l3@@ ;j++){ printf("%c",@@ replacement@@ [j]); } for(k=@@ temp@@ +@@ l2@@ ;k<@@ l1@@ ;k++){ printf("%c",@@ string@@ [k]); } return0; } } } printf("%s",@@ string); return0; }  
c -1
h -1
voidmain() { structpatient { charid[10]; intage; }@@ pa@@ [100]={0},@@ old@@ [100]={0},@@ young@@ [100]={0},@@ t; inti,j,@@ k=0,@@ l=0,@@ n; scanf("%d",&n); for(i=0;i<n;i++) { scanf("%s%d",@@ pa@@ [i].id,&@@ pa@@ [i].age); } for(i=0;i<n;i++) { if(pa@@ [i].age>=60) { old@@ [k]=@@ pa@@ [i]; k++; } else { young@@ [l@@ ]=@@ pa@@ [i]; l++; } } for(i=0;i<n-1;i++) {@@ for(j=0;j<n-1-i;j++) { if(old@@ [j].age@@ <@@ old@@ [j+1@@ ].age) { t=@@ old@@ [j]; old@@ [j]=@@ old@@ [j+1]; old@@ [j+1]=t; } } } for(i=0;i<k;i++) { printf("%s\n",old@@ [i].id); } for(i=0;i<l;i++) { printf("%s\n",@@ young@@ [i].id); } }  
c -1
h -1
0

voidmain() { intm,n,@@ i,j,k,@@ l,@@ a[100][100]; scanf("%d%d",&m,&n); for(i=0;i<m;i++) for(j=0;j<n;j++) scanf("%d",&a[i][j]); for(j=0;j<n;j++) for(l=0;@@ (@@ l<@@ m@@ )&&(@@ l@@ <=j@@ );@@ l++) printf("%d\n",@@ a[l@@ ]@@ [j@@ -l@@ ]); for(i=1;i<m;i++) for(k=0;@@ (k@@ <m@@ -i@@ )&&(@@ k@@ <@@ n)@@ ;k++) printf("%d\n",@@ a[i@@ +k@@ ][@@ n-@@ k@@ -1]); }  
c -1
h -1
intmain() {int@@ order@@ (int@@ m); int@@ n1,n2; cin>>@@ n1@@ >>@@ n2; order@@ (@@ n1); cout<<"@@ "; order@@ (@@ n2); return0; } int@@ order@@ (intm) {@@ inta[1000]; inti,j,temp; for(i=1;i<=m;i++) cin>>a[i]; for(i=1;i<=@@ m-1;i++) for(j=1;j<=@@ m@@ -i;j++) if(a[j]>a[j+1]) {@@ temp=@@ a[j];a[j]=a[j+1];@@ a[j+1]=@@ temp;} for(i=1;i<=@@ m-1;i++) cout<<a[i]<<""; cout<<@@ a[m@@ ]; return0; }  
c -1
h -1
0

intmain(intargc,char*argv[]) { intn,k,@@ a[1000],@@ i,j,@@ t=0; scanf("%d%d",&n,&k); for(i=0;i<n;i++){ scanf("%d",&a[i]);} for(i=0;i<n@@ /2@@ +1@@ ;i++){ for(j=i+1;j<n;j++){ if(a[i]+a[j]==@@ k){@@ t@@ =1;break;} } if(t@@ ==1)break; } if(t@@ ==1)@@ printf("yes"); elseprintf("no"); return0; }  
c -1
h -1
intmain(){ introw,col,@@ i,j; cin>>row>>col; inta[100][100]; for(i=0;i<row;i++) for(j=0;j<col;j++) cin>>*(*(a+i)+j); for(intt@@ =0;t@@ <row@@ +col@@ -1;@@ t++) for(j@@ =(@@ col-1@@ >@@ t@@ ?@@ t@@ :@@ col@@ -1)@@ ;t@@ -j@@ <=row-1@@ &&j>=0@@ ;j--) cout<<*(*(a@@ +@@ t@@ -j@@ )@@ +j)<<endl; return0; }  
c -1
h -1
0

intmain() { inta[@@ 101][@@ 101],@@ row,col,@@ i,j,k,@@ sum; cin>>row>>col; sum=@@ row@@ +@@ col; for(i=1;i<=@@ row;i++) for(j=1;j<=col;j++) cin>>a[i][j]; for(k=@@ 2@@ ;k<=@@ sum@@ ;k++) { if(k@@ <=col@@ +1) { i=1; j=@@ k@@ -1; do { cout<<a[i]@@ [j]@@ <<endl@@ ;@@ ; i@@ +=1; j@@ -=@@ 1; } while(i@@ <=row@@ &&j@@ >=1@@ ); } else { i=@@ k-@@ col; j=@@ k-@@ i; do { cout<<a[i][j]<<endl; i@@ +=1; j@@ -=@@ 1; } while(i@@ <=row@@ &&j@@ >=1@@ ); } } return0; }  
c -1
h -1
intmain() { inta[16]; while(cin>>@@ a[0]@@ &&@@ a[0]@@ !=-1) { intn=0,@@ count=0; while(@@ a[n@@ ]!=0) cin>>@@ a[@@ ++@@ n]; for(inti=0;i<n;i++) { for(intj=i@@ ;j<n;j++) if(a[i]==2*@@ a[j]||a[j]==2*@@ a[i]) count++; } cout<<count<<endl; } return0; }  
c -1
h -1
0

intmain() { intn,i,j,@@ max=0,@@ maxi@@ =0; inta[@@ 1100@@ ]={0},b[@@ 30@@ ]={0},@@ c[@@ 30@@ ][@@ 1100@@ ]={0}; char@@ zz@@ [@@ 1100@@ ][@@ 30]; cin>>n; for(i=1;i<=n;i++) { cin>>@@ a[i]@@ >>@@ zz@@ [i]; for(j=0;@@ zz@@ [i][j]@@ !='\0';j++) { b[@@ (int)@@ zz@@ [i][j]@@ -'A']++; c[@@ (int)@@ zz@@ [i][j]@@ -'A'@@ ]@@ [i]=1; } } for(i=0;i<=25;i++) { if(b[i]>max) { max=b[i]; maxi@@ =i; } } cout<<@@ (char)(@@ maxi@@ +@@ '@@ A')@@ <<endl; cout<<max<<endl; for(i=1;i<=@@ 1000@@ ;i++) { if(@@ c[@@ maxi@@ ]@@ [i]@@ ==1) cout<<a[i]@@ <<endl; } return0; }  
c -1
h -1
struct@@ author { charname@@ ; int@@ count; }@@ aut@@ [26]; intmax@@ (struct@@ author@@ a[@@ 26@@ ]) { inti,@@ max; max=@@ a[0].@@ count; for(i=0;i<26;i++) if(a[i].@@ count@@ >max) max=@@ a[i].@@ count; return(@@ max); } voidmain() { intm,@@ h=0; scanf("%d",&m); inti,j,n,@@ l@@ [1000],@@ book_name@@ [1000]; char@@ author_name@@ [1000][@@ 27]; for(i=0;i<26;i++) { aut@@ [i].name@@ ='A'+i; aut@@ [i].@@ count=0; } for(i=0;i<m;i++) { scanf("%d%s",&@@ book_name@@ [i],@@ author_name@@ [i]); l@@ [i]@@ =strlen(@@ author_name@@ [i]); for(j=0;j<26;j++) for(n=0;n@@ <@@ l@@ [i]@@ ;n++) if(@@ author_name@@ [i]@@ [n@@ ]==@@ aut@@ [j].@@ name@@ ) aut@@ [j].@@ count++; } for(i=0;i<26;i++) { if(@@ aut@@ [i].@@ count@@ ==@@ max(@@ aut@@ )) { printf("%c\n",@@ aut@@ [i].@@ name); h@@ =i; } } printf("%d\n",@@ max(@@ aut@@ )); for(i=0;i<m;i++) { l@@ [i]@@ =strlen(@@ author_name@@ [i]); for(n=0;n@@ <@@ l@@ [i]@@ ;n++) if(@@ author_name@@ [i]@@ [n@@ ]==@@ aut@@ [h@@ ].@@ name@@ ) printf("%d\n",@@ book_name@@ [i]); } }  
c -1
h -1
1


intmax@@ (inta,intb) { if(a@@ >b@@ )@@ return@@ a; else@@ return@@ b; } intmain() { intk,i,j,@@ h@@ [25],@@ dp@@ [25]; scanf("%d",&k); for(i=0;i<@@ k;i++)@@ scanf("%d",&h[i]); for(i=0;i<@@ k;i++)@@ dp@@ [i]=1; for(i=1;i<k;i++) for(j=0;j<i;j++) if(h@@ [j]>=@@ h@@ [i])@@ dp@@ [i]=@@ max(@@ dp@@ [i],@@ dp@@ [j]@@ +1); intm=0; for(i=0;i<@@ k;i++)@@ m=@@ max(@@ m,@@ dp@@ [i]); printf("%d\n",m); }  
c -1
h -1
intmain(){ intn=0,@@ i=0,@@ j=0; cin>>n; int@@ sum[@@ n]; structstudent{ int@@ stuid@@ ; int@@ chin@@ ; intmath; }stu[@@ n@@ ],@@ t; for(i=0;i<n;i++){ cin>>@@ stu[i].@@ stuid@@ >>stu[i].@@ chin@@ >>stu[i].@@ math; sum[i]=@@ stu[i].@@ chin@@ +stu[i].@@ math; } for(i=0;i<3;i++) for(j=0;j<n-1;j++) if((@@ stu[j].@@ chin@@ +@@ stu[j].@@ math@@ )@@ >=@@ (stu@@ [j+1].@@ chin +@@ stu[j+1].@@ math@@ )){ t=@@ stu@@ [j]; stu@@ [j]=@@ stu@@ [j+1]; stu@@ [j+1]=t; } for(i=n-1;i@@ >@@ n-@@ 4@@ ;i--) cout<<@@ stu[i].@@ stuid@@ <<""<<@@ stu[i].@@ chin@@ +stu[i].@@ math@@ <<endl; return0; }  
c -1
h -1
0

int@@ digui@@ (intm,@@ intn,@@ int@@ sum) { inti; sum++; if(@@ sqrt(@@ m)@@ <n) returnsum; else{ for(i=n@@ ;i<=sqrt(@@ m)@@ ;i++){ if(m@@ %i==0) sum=@@ digui@@ (m@@ /i,@@ i,@@ sum); } returnsum; } } voidmain() { intn,@@ a; scanf("%d",&n); while(n@@ --){ scanf("%d",&a); printf("%d\n",@@ digui@@ (a,@@ 2,@@ 0@@ )); } }  
c -1
h -1
intmain() { intn,k,@@ a[1000],@@ i,@@ m,@@ s; scanf("%d%d",&n,&k); for(i=0;i<n;i++) { scanf("%d",&a[i]); } for(i=0;i<n;i++) { for(m=0;m@@ <n;m++) { if((@@ a[i]+@@ a[m@@ ])@@ ==@@ k@@ &&a[i]@@ !=@@ a[m@@ ]) { s=1; } } } if(s@@ ==1) { printf("yes"); } else { printf("no"); } return0;}  
c -1
h -1
0

intmain() { intnum[@@ 16@@ ],i,j,@@ count,@@ a,@@ n; while(1) { count@@ =0;@@ n=0; for(i=0;;i++) { scanf("%d",&@@ num[i]); if(num@@ [i]==@@ -1) break; if(num@@ [i]==0) break; n@@ +=1; } if(num@@ [0]@@ ==-1) break; else { for(i=0;i<n;i++) { a=@@ num[i]; for(j=0;j<n;j++) if(num@@ [j]==2*@@ a) count@@ +=1; } } printf("%d\n",@@ count); } return0; }  
c -1
h -1
intn; structstu { int@@ xh@@ ; int@@ yw@@ ; int@@ sx; int@@ all@@ ; structstu*next; }; structstu*@@ a,*@@ b@@ ,*@@ c,@@ q,@@ t,@@ r; structstu*@@ creat@@ () { structstu*@@ head; structstu*@@ p1,*p2; inti; p1=p2=(struct@@ stu*)malloc(sizeof(structstu)); scanf("%d%d%d",&p1->@@ xh@@ ,&p1->@@ yw@@ ,&p1->@@ sx@@ ); p1->@@ all@@ =p1->@@ yw@@ +p1->@@ sx; head=p1; a=@@ b=@@ c=@@ head; for(i=1;i<n;i++) { p2->next=p1; p2=p1; p1=(struct@@ stu*)malloc(sizeof(structstu)); scanf("%d%d%d",&p1->@@ xh@@ ,&p1->@@ yw@@ ,&p1->@@ sx@@ ); p1->@@ all@@ =p1->@@ yw@@ +p1->@@ sx; if(p1->@@ all@@ >@@ a@@ ->@@ all@@ ) { c=@@ b; b=@@ a; a@@ =p1; } else if(p1->@@ all@@ >b@@ ->@@ all@@ ) { c=@@ b; b@@ =p1; } else { if(p1->@@ all@@ >@@ c@@ ->@@ all@@ ) c@@ =p1; } }@@ p2->next=NULL; returnhead; } voidmain() { structstu@@ *p; a@@ =&@@ q@@ ;@@ b@@ =&@@ t@@ ;c@@ =&@@ r; scanf("%d",&n); p=@@ creat@@ (); printf("%d%d\n%d%d\n%d%d\n",@@ a@@ ->@@ xh@@ ,@@ a@@ ->@@ all@@ ,@@ b@@ ->@@ xh@@ ,@@ b@@ ->@@ all@@ ,@@ c@@ ->@@ xh@@ ,@@ c@@ ->@@ all@@ ); }  
c -1
h -1
0

main() { charID@@ [N@@ ][@@ L@@ ],@@ IDup60@@ [N@@ ][@@ L@@ ],@@ IDunder60@@ [N@@ ][@@ L@@ ],@@ s[@@ L@@ ]; intb,@@ h,@@ i,j,k,@@ l,@@ m,@@ max=0,@@ n,@@ o@@ ,@@ p,q,@@ t=0,@@ u@@ =0,@@ YearOld@@ [N@@ ],@@ YearOldup60@@ [N@@ ],@@ id@@ [N@@ ],@@ idup60@@ [N]; scanf("%d",&n); for(h=0;h@@ <n;@@ h++) { scanf("%s%d",@@ ID@@ [h@@ ]@@ ,&@@ YearOld@@ [h@@ ]); id@@ [h@@ ]=0; } for(i=0;i<n;i++) { for(j=0;@@ ID@@ [i][j]@@ !='\0';j++) { id@@ [i]=@@ 10@@ *@@ id@@ [i]; id@@ [i]=@@ id@@ [i]+@@ (@@ ID@@ [i][j]@@ -'@@ 0'@@ ); } } for(m=0;m@@ <n;m++) { if(@@ YearOld@@ [m]@@ >max) max=@@ YearOld@@ [m]; } for(k=0;k<=@@ max@@ ;k++) { for(l=0;l<n;l++) { if(@@ YearOld@@ [l@@ ]==@@ max@@ -k@@ &&@@ max@@ -k@@ >=60) { YearOldup60@@ [t@@ ]=@@ YearOld@@ [l]; idup60@@ [t@@ ]=@@ id@@ [l]; strcpy(@@ IDup60@@ [t@@ ],@@ ID@@ [l]); t++; } } } for(b=0;b@@ <n;@@ b++) { if(@@ YearOld@@ [b@@ ]@@ <60) { strcpy(@@ IDunder60@@ [@@ u@@ ],@@ ID@@ [b@@ ]); u@@ ++; } } for(p=0;p@@ <@@ t@@ ;p++) { printf("%s\n",@@ IDup60@@ [p@@ ]); } for(q=0;q@@ <@@ u@@ ;q++) { printf("%s\n",@@ IDunder60@@ [q@@ ]); } }  
c -1
h -1
intmain(){ intn,i,j,@@ timer@@ ,@@ k,@@ k0@@ ; timer@@ =0; k0@@ =0; k@@ =-1; int@@ l@@ [100000],@@ r@@ [100]; scanf("%d",&n); for(i=0;i<n;i++){ scanf("%d",&@@ l@@ [i]); } for(i=0;i<n;i++){ for(j=i+1;j<n;j++){ if(l@@ [i]==@@ l@@ [j]){ l@@ [j]=@@ 10000@@ ; } } } for(i=0;i<n;i++){ if(l@@ [i]==@@ 10000@@ ){ timer@@ ++; } } for(i=0;i<n;i++){ if(l@@ [i]!=@@ 10000@@ ){ k0@@ ++; k++; r@@ [k]=@@ l@@ [i]; }else{ continue; } } for(i=0;i<@@ k0@@ ;i++){ if(k@@ ==0){ printf("%d",@@ r@@ [i]); }elseif(@@ k@@ !=0@@ &&i@@ <@@ k0@@ -1){ printf("%d",@@ r@@ [i]); }elseif(@@ i==@@ k0@@ -1){ printf("%d",@@ r@@ [i]); } } return0; }  
c -1
h -1
0

main() {@@ intn,i,k,@@ j,@@ x,y,@@ max; scanf("%d",&n); inta[@@ 26@@ ],b[@@ 26]; for(i=n-1;i>=0;i--) scanf("%d",&a[i]); b[0]@@ =1; i=0; while(i<=@@ n-1) {@@ j=0; x=0; while(j<@@ i) {@@ if(a[j]<=@@ a[i]) { if(b[j]@@ >=@@ x) x=@@ b[j]@@ ;} j++; } b[i]=@@ x@@ +1; i++; } max=1; for(i=0;i<=n-1;i++) if(b[i]@@ >=@@ max) max=b[i]; printf("%d",max); }  
c -1
h -1
voidmain() { while(1) { inta[100@@ ]={@@ -2@@ },@@ i,j,@@ count=0; for(i=0;;i++) { scanf("%d",&a[i]); if(a[0]@@ ==@@ -1@@ ||@@ a[i]@@ ==0)break; } if(a[0]==-1)break; for(i=0;@@ a[i+1@@ ]@@ !=0;i++) for(j=i+1@@ ;@@ a[j]@@ !=0;j++) if(a[i]==2*@@ a[j]||@@ a[i]@@ *2==@@ a[j]) count++; printf("%d\n",@@ count); } }  
c -1
h -1
0

intmain() { chara[@@ 600@@ ],b[@@ 600]; doublen,@@ x; scanf("%lf\n",&@@ n); gets(a); gets(b); inti,j,@@ a1,@@ b1,@@ xiangtong@@ =0,@@ zhengfou@@ =1,@@ y=0; a1@@ =strlen(a); b1@@ =strlen(b); if(@@ a1@@ !=@@ b1@@ ) {@@ printf("error");@@ y@@ =1;} else { for(i=0;i<@@ a1@@ ;i++) { if(a[i]==b[i]) xiangtong@@ ++; if(a[i]!='@@ A'&&a[i]!='T'&&a[i]!='G'&&a[i]!='@@ C') zhengfou@@ =0; if(@@ b[i]!='A'&&b[i]!='T'&&b[i]!='G'&&b[i]!='@@ C') zhengfou@@ =0; } } if(@@ zhengfou@@ ==0) printf("error"); else if(y@@ !=1) { x=@@ xiangtong@@ *1.0/@@ a1@@ ; if(x@@ <=@@ n) printf("no"); else printf("yes"); } return0; }  
c -1
h -1
intmain() { struct@@ st {int@@ id; int@@ yu@@ ; int@@ ma; }; intn,i; struct@@ st@@ st1@@ =@@ {@@ 0,0,@@ 0},@@ st2@@ =@@ {@@ 0,0,@@ 0},@@ st3@@ =@@ {@@ 0,0,@@ 0},@@ stn@@ ; scanf("%d",&n); for(i=0;i<n;i++){ scanf("%d%d%d",&@@ stn@@ .@@ id,&@@ stn@@ .@@ yu@@ ,&@@ stn@@ .@@ ma@@ ); if(@@ stn@@ .@@ yu@@ +@@ stn@@ .@@ ma@@ >@@ st1@@ .@@ yu@@ +@@ st1@@ .@@ ma@@ ){ st3@@ =@@ st2@@ ; st2@@ =@@ st1@@ ; st1@@ =@@ stn@@ ; }else{ if(@@ stn@@ .@@ yu@@ +@@ stn@@ .@@ ma@@ >@@ st2@@ .@@ yu@@ +@@ st2@@ .@@ ma@@ ){ st3@@ =@@ st2@@ ; st2@@ =@@ stn@@ ; }else{ if(@@ stn@@ .@@ yu@@ +@@ stn@@ .@@ ma@@ >@@ st3@@ .@@ yu@@ +@@ st3@@ .@@ ma@@ ){ st3@@ =@@ stn@@ ; } } } } printf("%d%d\n%d%d\n%d@@ %d",@@ st1@@ .@@ id,@@ st1@@ .@@ yu@@ +@@ st1@@ .@@ ma@@ ,@@ st2@@ .@@ id,@@ st2@@ .@@ yu@@ +@@ st2@@ .@@ ma@@ ,@@ st3@@ .@@ id,@@ st3@@ .@@ yu@@ +@@ st3@@ .@@ ma@@ ); }  
c -1
h -1
0

intmain() { intn,@@ d,@@ i,j,@@ l; struct@@ a { charname@@ [27]; intc; }@@ m@@ [1000]; struct@@ b { intnum,@@ book[1000]; char@@ t; }; struct@@ b@@ author@@ [27]; for(i=1;i<=@@ 26;i++) { author@@ [i].@@ t@@ =i+@@ 64@@ ; } scanf("%d",&n); for(i=1;i<=n;i++) { scanf("%d",&@@ m@@ [i].@@ c); scanf("%s",@@ m@@ [i].@@ name); } for(i=1;i<=n;i++) { l=strlen(@@ m@@ [i].@@ name); for(j=0;j<=@@ l@@ -1;j++) { d=@@ m@@ [i].name@@ [j]@@ -@@ 64@@ ; author@@ [d@@ ].@@ num++; author@@ [d@@ ].@@ book[@@ author@@ [d@@ ].num@@ ]=@@ m@@ [i].@@ c; } } for(i=1;i<=@@ 25;i++) { if(@@ author@@ [i].@@ num@@ >@@ author@@ [i+1].@@ num) author@@ [i+1]=@@ author@@ [i]; } printf("%c\n",@@ author@@ [26@@ ].@@ t); printf("%d\n",@@ author@@ [26@@ ].@@ num); for(i=1;i<=@@ author@@ [26@@ ].@@ num;i++) { printf("%d\n",@@ author@@ [26@@ ].@@ book@@ [i]); } return0; }  
c -1
h -1
intmain() { intk,@@ n,@@ a[1000],@@ i=0,j=0,@@ m,@@ t; cin>>n>>k; for(i=0;i<n;i++) cin>>a[i]; for(i=0;i<n-1;i++) { for(j=i+1;j<n;j++) { m=@@ a[i]+a[j]; if(m==@@ k) t=1; } } if(t@@ ==1)@@ cout<<"yes"; else@@ cout<<"no"; return0; }  
c -1
h -1
0

intmain(intargc,char*argv[]) { char@@ dna1@@ [@@ 600@@ ],@@ dna2@@ [@@ 600]; inta,b,@@ i; double@@ x=0,@@ ratio@@ ; scanf("%lf",&@@ ratio@@ ); scanf("%s",@@ dna1); scanf("%s",@@ dna2); a=strlen(@@ dna1); b=strlen(@@ dna2); if(a!=@@ b){ printf("error"); return0; } for(i=0;i<a;i++){ if(dna1@@ [i]!='A'&&@@ dna1@@ [i]!='T'&&@@ dna1@@ [i]!='G'&&@@ dna1@@ [i]!='@@ C'){ printf("error"); return0; } if(@@ dna2@@ [i]!='A'&&@@ dna2@@ [i]!='T'&&@@ dna2@@ [i]!='G'&&@@ dna2@@ [i]!='@@ C'){ printf("error"); return0; } if(dna1@@ [i]==@@ dna2@@ [i])@@ x++; } if(x@@ /@@ a@@ >=@@ ratio@@ )@@ printf("yes"); elseprintf("no"); return0; }  
c -1
h -1
voidoutput@@ (intn,@@ intm,@@ inta[@@ ],intb[@@ ]) { inti; printf("%d",a[0]); for(i=1;i<n;i++) printf("%d",a[i]); for(i=0;i<m;i++) printf("%d",b[i]); } void@@ swap@@ (inta[],int@@ i,@@ int@@ j) { inttemp; temp=a[i]; a[i]=a[j]; a[j]=@@ temp; } void@@ quicksort@@ (inta[],int@@ l@@ ,int@@ r@@ ) { intm,@@ i,j; i=@@ l@@ ;j@@ =@@ r@@ ;@@ m=@@ a[i]; while(i<=@@ j) { while((@@ a[i]@@ <m@@ )&&(i@@ <@@ r@@ ))@@ i++; while((@@ a[j]@@ >@@ m@@ )&&(@@ j@@ >@@ l@@ ))@@ j--; if(i@@ <=@@ j) { swap@@ (a,@@ i,j@@ ); i++; j--; } } if(i<@@ r@@ )@@ quicksort@@ (a,@@ i,@@ r); if(j@@ >@@ l@@ )@@ quicksort@@ (a,@@ l@@ ,j); } voidinput() { inti,n,@@ m,@@ a[100],b[100]; scanf("%d%d",&n,&m); for(i=0;i<n;i++) scanf("%d",&a[i]); for(i=0;i<m;i++) scanf("%d",&b[i]); quicksort@@ (a,0,@@ n-1); quicksort@@ (b,@@ 0,@@ m-1@@ ); output@@ (n,@@ m,@@ a,b); } main() { input(); }  
c -1
h -1
0

intmain(intargc,char*argv[]) { intn,k,i,@@ a[1000],@@ x@@ ,j,@@ z=0; scanf("%d%d",&n,&k); for(i=0;i<n;i++) scanf("%d",&a[i]); for(i=0;i<n;i++) { x=@@ k-@@ a[i]; for(j=0;j<n;j++) { if(j==@@ i)@@ continue; if(a[j]==@@ x)@@ z=1; } } if(z@@ ==1)@@ printf("yes"); elseprintf("no"); return0; }  
c -1
h -1
intmain() { intn,i,j,k,@@ t; inta[20000]; scanf("%d",&n); for(i=0;i<n;i++){ scanf("%d",&a[i]); } printf("%d",a[0]); for(j=1;j<@@ n;j++){ for(k=0;k<j@@ ;k++){ if(a[j]==@@ a[k]) a[j]=0; } if(a[j]@@ ) printf("%d",@@ a[j]); } return0; }  
c -1
h -1
0

int@@ divide@@ (int,int); intmain(void) { intn,@@ a; cin>>n; while(n@@ !=0) { cin>>a; cout<<@@ divide@@ (a,@@ 2)<<endl; n--; } return0; } int@@ divide@@ (intx,int@@ t) { inti,@@ sum=0; if(x@@ ==1)@@ return1; for(i=@@ t@@ ;i<=@@ x;i++) { if(x@@ %i==0)@@ sum+=@@ divide@@ (x/i,i); } returnsum; }  
c -1
h -1
const@@ int@@ mmax@@ =@@ 1000@@ ; inta[@@ mmax@@ ]; intb[@@ mmax@@ ]; intm,n; void@@ mread@@ (); void@@ msort@@ (); void@@ mcomb@@ (); void@@ mdisp@@ (); intmain() { mread@@ (); msort@@ (); mcomb@@ (); mdisp@@ (); return0; } void@@ mread@@ (){ cin>>m>>n; for(inti=0;i<m;i++) cin>>a[i]; for(inti=0;i<n;i++) cin>>b[i]; } void@@ msort@@ (){ intt; for(inti=0;i<m;i++) for(intj=@@ m-1@@ ;j>i;j--) if(a@@ [j-1]@@ >@@ a[j]) { t=@@ a@@ [j-1]; a@@ [j-1]=@@ a[j]; a[j]=@@ t; } for(inti=0;i<n;i++) for(intj=@@ n-1@@ ;j>i;j--) if(b@@ [j-1]@@ >@@ b[j]) { t=@@ b@@ [j-1]; b@@ [j-1]=@@ b[j]; b[j]=@@ t; } } void@@ mcomb@@ () { for(inti=0;i<n;i++) a[i@@ +m@@ ]=b[i]; } void@@ mdisp@@ () { for(inti=0;i<@@ m+n;i++) { if(i@@ !=0) cout<<'@@ '; cout<<a[i]; } }  
c -1
h -1
0

intm,n,@@ a[@@ 1000@@ ]={0},b[@@ 1000]={0}; intmain() { inti,j,k; voidread@@ (int@@ array1@@ [],int@@ array2@@ [@@ ]); voidsort@@ (intarray[],int@@ x); voidprint@@ (int@@ array5@@ [],int@@ array6@@ [@@ ]); scanf("%d%d",&m,&n); read@@ (a,b); sort@@ (a,m); sort@@ (b,n); print@@ (a,b); } voidread@@ (int@@ array1@@ [],int@@ array2@@ []) { inti; for(i=0;i<m;i++) scanf("%d",&a[i]); for(i=0;i<n;i++) scanf("%d",&b[i]); } voidsort@@ (intarray[],int@@ x) { inti,j,k,@@ t; for(i=0;i<x@@ -1;i++) for(j=i+1;j<@@ x;j++) if(array@@ [ j@@ ]<@@ array@@ [i]) {t=@@ array@@ [i];@@ array@@ [i]=@@ array@@ [j];@@ array@@ [j]=@@ t;} } voidprint@@ (int@@ array5@@ [],int@@ array6@@ []) { intj; for(j=0;j<m;j++) printf("%d",@@ array5@@ [j]); for(j=0;j<n-1;j++) printf("%d",@@ array6@@ [j]); printf("%d",@@ array6@@ [@@ n-1]); }  
c -1
h -1
void@@ swap@@ (int*@@ i,@@ int*@@ j) { int*p=@@ i,@@ t@@ =*@@ i; *p@@ =*@@ j; p=@@ j; *@@ p=@@ t; } structStudent { intid; intchinese; intmath; }; intmain() { void@@ swap@@ (int*@@ i,@@ int*@@ j); intn,i,@@ first@@ ,@@ second@@ ,@@ third@@ ,@@ one@@ ,@@ two@@ ,@@ three@@ ; int*@@ f@@ =&@@ first@@ ,*@@ s@@ =&@@ second@@ ,*@@ t@@ =&@@ third@@ ,*@@ on@@ =&@@ one@@ ,*@@ tw@@ =&@@ two@@ ,*@@ th@@ =&@@ three@@ ; structStudent@@ stu[100000]; scanf("%d",&n); for(i=0;i<n;i++) { scanf("%d%d%d",&stu[i].@@ id@@ ,&stu[i].@@ chinese@@ ,&stu[i].math); int@@ total=@@ stu[i].@@ chinese+@@ stu[i].@@ math@@ ,@@ k; int*@@ to@@ =&@@ total@@ ,*@@ K@@ =&@@ k; if(i==0) { first=@@ total; one@@ =i; } else { if(i==1) { if(@@ total>@@ first@@ ) { swap(@@ to@@ ,@@ f); second=@@ total; k=i; swap(@@ K@@ ,@@ on@@ ); two@@ =k; } else { second=@@ total; two@@ =i; } } else { if(i==@@ 2) { if(@@ total>@@ first@@ ) { swap(@@ to@@ ,@@ f); swap(@@ to@@ ,@@ s); third=@@ total; k=i; swap(@@ K@@ ,@@ on@@ ); swap(@@ K@@ ,@@ tw@@ ); three@@ =k; } else { if(@@ total>@@ second@@ &&@@ total@@ <=@@ first@@ ) { swap(@@ to@@ ,@@ s); third=@@ total; k=i; swap(@@ K@@ ,@@ tw@@ ); three@@ =k; } else { third=@@ total; three@@ =i; } } } else { if(@@ total>@@ first@@ ) { swap(@@ to@@ ,@@ f); swap(@@ to@@ ,@@ s); swap(@@ to@@ ,@@ t); k=i; swap(@@ K@@ ,@@ on@@ ); swap(@@ K@@ ,@@ tw@@ ); swap(@@ K@@ ,@@ th@@ ); } else { if(@@ total>@@ second@@ ) { swap(@@ to@@ ,@@ s); swap(@@ to@@ ,@@ t); k=i; swap(@@ K@@ ,@@ tw@@ ); swap(@@ K@@ ,@@ th@@ ); } else { if(@@ total>@@ third@@ ) { swap(@@ to@@ ,@@ t); k=i; swap(@@ K@@ ,@@ th@@ ); } } } } } } } printf("%d%d\n",stu[@@ one@@ ].id,@@ first@@ ); printf("%d%d\n",stu[@@ two@@ ].id,@@ second@@ ); printf("%d%d\n",stu[@@ three@@ ].id,@@ third@@ ); return0; }  
c -1
h -1
0

intsum=0; void@@ devide@@ (inta,intb) { if(a==1) sum++; else { if(a@@ >=@@ b) devide@@ (a,@@ b@@ +1); if(a%@@ b@@ ==0) devide@@ (a@@ /@@ b,@@ b); } } intmain() { intn,@@ a; cin>>n; for(inti=0;i<n;i++) { cin>>a; sum=0; devide@@ (a,@@ 2); cout<<sum<<endl; } return0; }  
c -1
h -1
intmain(intargc,char*argv[]) { intn,i,j,@@ ta@@ ,@@ tb@@ ,@@ ts@@ ,@@ tnum@@ ; int*@@ a,*@@ b@@ ,*@@ s@@ ,*@@ num; scanf("%d",&n); a=@@ (int*)malloc(sizeof(int)*n); b=@@ (int*)malloc(sizeof(int)*n); s=@@ (int*)malloc(sizeof(int)*n); num=@@ (int*)malloc(sizeof(int)*n); for(i=1;i<=n;i++) { scanf("%d%d%d",&@@ num[i]@@ ,&@@ a[i],&@@ b[i]); s[i]=@@ a[i]+@@ b[i]; } for(j=0;j<@@ 3@@ ;j++){ for(i=n@@ ;i@@ >1@@ ;i--){ if(s@@ [i]>@@ s@@ [i-1@@ ]) { ta@@ =@@ a[i-1]@@ ;@@ tb@@ =@@ b@@ [i-1]@@ ;@@ ts@@ =@@ s@@ [i-1]@@ ;@@ tnum@@ =@@ num@@ [i-1]; a[i-1@@ ]=@@ a[i];@@ b@@ [i-1@@ ]=@@ b[i]@@ ;s@@ [i-1@@ ]=@@ s[i]@@ ;@@ num@@ [i-1@@ ]=@@ num[i]; a[i]=@@ ta@@ ;@@ b[i]=@@ tb@@ ;@@ s[i]=@@ ts@@ ;@@ num[i]=@@ tnum@@ ; } } } printf("%d%d\n%d%d\n%d%d\n",@@ num@@ [1@@ ],@@ s@@ [1@@ ],@@ num[@@ 2@@ ],@@ s[2@@ ],@@ num[@@ 3@@ ],@@ s[@@ 3@@ ]); return0; }  
c -1
h -1
0

intmain() { inti,j,k,@@ a,b; ints@@ [100][100]; scanf("%d%d",&a,&b); for(j=0;j<a@@ ;j++) { for(i=0;i<b;i++) { scanf("%d",&@@ s[j]@@ [i]); } } for(j=0;j<@@ b;j++) { k=j; for(i=0;;i++) { if(i==@@ a) { break; } printf("%d\n",@@ s[i]@@ [k]); k--; if(k@@ <0) { break; } } } for(j=1;j<@@ a@@ ;j++) { k=j; for(i=b@@ -1;i>=0;i--) { printf("%d\n",@@ s[k]@@ [i]); k++; if(k==@@ a) {break;} } } return0; }  
c -1
h -1
intmain() { intn,i,j,@@ num[@@ 20000],@@ st@@ [@@ 91@@ ],@@ tot@@ =0; scanf("%d",&n); for(i=0;i<n;i++)@@ scanf("%d",&@@ num[i]); for(i=0;i<n;i++) { for(j=0;j<@@ i@@ ;j++)@@ if(num@@ [j]==@@ num[i]@@ )break; if(j==@@ i)@@ st@@ [@@ ++@@ tot@@ ]=@@ num[i]; } for(i=1;i<@@ tot@@ ;i++)@@ printf("%d",@@ st@@ [i]); printf("%d",@@ st@@ [@@ tot@@ ]); }  
c -1
h -1
0

intmain() { intk,m,n,i,j,@@ p,@@ sum1@@ ,@@ sum2@@ ,@@ sum3@@ ,@@ sum4@@ ,sum; scanf("%d",&k); for(i=0;i<k;i++){ intsz[100][100]; scanf("%d%d",&m,&n); for(j=0;j<m;j++){ for(p=0;p@@ <n;@@ p++){ scanf("%d",&sz@@ [j]@@ [p@@ ]); } } if(m@@ !=1@@ &&m@@ !=@@ 2@@ &&n@@ !=1@@ &&n@@ !=@@ 2@@ ){ sum1@@ =@@ sum2@@ =@@ sum3@@ =@@ sum4@@ =0; for(p=0;p@@ <n;@@ p++){ sum1@@ +=@@ sz[0][@@ p@@ ]; } for(p=0;p@@ <n;@@ p++){ sum2@@ +=@@ sz[@@ m-1][@@ p@@ ]; } for(j=0;j<m;j++){ sum3@@ +=@@ sz[j]@@ [0]; } for(j=0;j<m;j++){ sum4@@ +=@@ sz[j]@@ [n-1]; } printf("%d\n",@@ sum1@@ +@@ sum2@@ +@@ sum3@@ +@@ sum4@@ -@@ sz[0][@@ 0]-@@ sz[0][@@ n-1]-@@ sz[@@ m-1][0]-@@ sz[@@ m-1][@@ n-1]); }else{ sum=0; for(j=0;j<m;j++){ for(p=0;p@@ <n;@@ p++){ sum+=@@ sz[j]@@ [p@@ ]; } } printf("%d\n",sum); } } return0; }  
c -1
h -1
intmain() { intn,i; int@@ sum[@@ 100000]; int@@ max1,@@ max2@@ ,max3@@ ; int@@ x=0; scanf("%d",&n); struct{ intnumber; int@@ chin@@ ; intmath; }@@ student[@@ 100000]; for(i=0;i<n;i++){ scanf("%d%d%d",&@@ student[i].@@ number@@ ,&@@ student[i].@@ chin@@ ,&@@ student[i].@@ math); sum[i]=@@ student[i].@@ chin@@ +@@ student[i].@@ math@@ ;} max1=@@ sum[@@ 0]; max2=@@ sum[@@ 0]; max3=@@ sum[@@ 0]; for(i=0;i<n;i++){ if(sum[i]>@@ max1@@ ) max1=@@ sum[i]@@ ;} for(i=0;i<n;i++){ if(sum@@ [i]==@@ max1@@ ){ printf("%d%d\n",@@ student[i].@@ number,@@ sum@@ [i]); x@@ ++;} if(x@@ >=@@ 3) break; } for(i=0;i<n;i++){ if((@@ sum@@ [i]>@@ max2@@ )&&(@@ sum@@ [i]!=@@ max1@@ )) max2=@@ sum[i]@@ ;} for(i=0;i<n;i++){ if(x@@ >=@@ 3) break; if(sum@@ [i]==@@ max2@@ ){ printf("%d%d\n",@@ student[i].@@ number,@@ sum@@ [i]); x@@ ++;} } for(i=0;i<n;i++){ if((@@ sum@@ [i]>@@ max3@@ )&&(@@ sum@@ [i]!=@@ max1@@ )&&(@@ sum@@ [i]!=@@ max2@@ )) max3=@@ sum[i]@@ ;} for(i=0;i<n;i++){ if(x@@ >=@@ 3) break; if(sum@@ [i]==@@ max3@@ ){ printf("%d%d",@@ student[i].@@ number,@@ sum@@ [i]); x@@ ++;} } return0; }  
c -1
h -1
0

intmain() { intn=0,@@ k=0; cin>>n>>k; inta[1000]; inti=0; int@@ c=0; for(i=0;i<n;i++) { cin>>a[i]; } int@@ b=0; for(i=0;i<n@@ &&@@ c@@ !=@@ 250@@ ;i++) { for(b=0;b@@ <n@@ -i@@ &&@@ c@@ !=@@ 250@@ ;@@ b++) { if(k==@@ a[i]+@@ a[i@@ +@@ b@@ ]) { cout<<"yes@@ "<<endl; c=@@ 250@@ ; } } } if(c@@ ==0) cout<<"no@@ "<<endl; return0; }  
c -1
h -1
int@@ compare@@ (intx,inty) { if(x@@ <=@@ y){ x@@ =(@@ y@@ +1); } return@@ x; } intmain(void) { inti,n,@@ r,@@ a,@@ j; scanf("%d",&n); int*p=@@ (int*)malloc(n*sizeof(int)); for(i=0@@ ;i@@ !=@@ n;i++){ scanf("%d",&@@ p[i]); } int*@@ q=@@ (int*)malloc(n*sizeof(int)); for(j=0@@ ;j@@ !=@@ n;j++) { q@@ [j]@@ =1; for(r=0;r@@ !=@@ j@@ ;r@@ ++){ if(p@@ [j]<=@@ p[@@ r@@ ]){ q@@ [j]=@@ compare@@ (@@ q@@ [j],@@ q@@ [r@@ ]); } } } int@@ max; max=@@ q@@ [0]; for(a=0;a@@ <n;@@ a++){ if(q@@ [a]@@ >max) max=@@ q@@ [a@@ ]; } printf("%d",max); return0; }  
c -1
h -1
0

struct@@ a@@ { intn; chars[@@ 26]; }b[@@ 1000]; intmain() { intn,i,j,@@ c[@@ 26]={0}; char@@ t; scanf("%d",&n); for(i=0;i<n;i++) { int@@ d,@@ m; scanf("%d%s",&@@ b[i].@@ n,@@ b[i].@@ s); d@@ =strlen(@@ b[i].@@ s); for(m=0;m<@@ d@@ ;m++) c[@@ b[i].@@ s[m@@ ]@@ -65@@ ]@@ +=1; } for(i=0;i<26;i++) { for(j=i+1;j<@@ 26@@ ;j++) if(c@@ [j]>@@ c@@ [i]) break; if(j==@@ 26@@ ) break; } t=@@ 65@@ +@@ i; printf("%c\n%d\n",@@ t,@@ c[i]); for(i=0;i<n;i++) { if(@@ strchr(@@ b[i].@@ s,@@ t)@@ !=NULL) printf("%d\n",b[i].@@ n); } return0; }  
c -1
h -1
intmain() { structstudent { intnum; intchinese; intmath; intsum; }@@ m[@@ 4@@ ],@@ t; intn,i; scanf("%d",&n); for(i=1;i<=@@ 3;i++) m@@ [i].@@ sum@@ =-1; for(i=1;i<=n;i++) { scanf("%d%d%d",&@@ t@@ .@@ num,&@@ t@@ .@@ chinese@@ ,&@@ t@@ .@@ math); t@@ .@@ sum=@@ t@@ .@@ chinese+@@ t@@ .@@ math; if(t@@ .@@ sum>@@ m@@ [1].@@ sum) { m@@ [3@@ ]=@@ m@@ [2]; m@@ [2]=@@ m@@ [1]; m@@ [1]=@@ t; } else if(t@@ .@@ sum>@@ m@@ [2].@@ sum) { m@@ [3@@ ]=@@ m@@ [2]; m@@ [2]=@@ t; } else if(t@@ .@@ sum>@@ m@@ [3].@@ sum) m@@ [3@@ ]=t; } for(i=1;i<=@@ 3;i++) printf("%d%d\n",@@ m@@ [i].@@ num,@@ m@@ [i].@@ sum); }  
c -1
h -1
0

structstudent { charnum[@@ 30]; intsum; structstudent*next; }; voidmain() { intn,i; structstudent*@@ p1,*p2,*@@ p3@@ ,*@@ head; scanf("%d",&n); for(i=0;i<n;i++) { p1@@ =(structstudent*)malloc(sizeof(structstudent)); if(i==0) head=p1; scanf("%s%d",@@ p1->num,&p1->@@ sum); p1->next=NULL; if(i@@ !=0) { p3@@ =head; if(p1->@@ sum@@ >=60){ while((@@ p1->@@ sum<=@@ p3->@@ sum@@ )&&@@ p3@@ ->next@@ !=NULL) { p2=@@ p3; p3=@@ p3@@ ->next; } if(p1->@@ sum>@@ p3->@@ sum) { if(head@@ ==@@ p3@@ ) { head=p1; p1->next=@@ p3; } else { p2->next=p1; p1->next=@@ p3; } } else { p3@@ ->next@@ =p1; p1->next=NULL; } } else{@@ for(@@ p2=@@ head;@@ ;@@ p2=@@ p2->next@@ ){@@ if(@@ p2->next@@ ==NULL@@ )@@ break;} p2->next=p1; p1->next@@ =NULL@@ ;} } } p1=head; for(i=0;@@ (i@@ <n@@ &&@@ p1@@ !=NULL@@ );i++) { printf("%s\n",@@ p1->num); p1=p1->next; } }  
c -1
h -1
int@@ run@@ (intx) { if((x@@ %4==0&&@@ x@@ %100!=0@@ )||(@@ x%@@ 400==0)@@ )@@ return1; return0; } intmain() { inty,m,d,@@ x; scanf("%d%d%d",&y,&m,&d); if(@@ run@@ (y@@ )) { switch(m) { case1:@@ x=@@ d;break; case2:@@ x=31+@@ d;break; case3:@@ x=@@ 60@@ +d;break; case4:@@ x=@@ 91@@ +d;break; case5:@@ x=@@ 121@@ +d;break; case6:@@ x=@@ 152@@ +d;break; case7:@@ x=@@ 182@@ +d;break; case8:@@ x=@@ 213@@ +d;break; case9:@@ x=@@ 244@@ +d;break; case10:@@ x=@@ 274@@ +d;break; case11:@@ x=@@ 305@@ +d;break; case12:@@ x=@@ 335@@ +d;break; } } else{ switch(m) { case1:@@ x=@@ d;break; case2:@@ x=31+@@ d;break; case3:@@ x=@@ 59@@ +d;break; case4:@@ x=@@ 90@@ +d;break; case5:@@ x=@@ 120@@ +d;break; case6:@@ x=@@ 151@@ +d;break; case7:@@ x=@@ 181@@ +d;break; case8:@@ x=@@ 212@@ +d;break; case9:@@ x=@@ 243@@ +d;break; case10:@@ x=@@ 273@@ +d;break; case11:@@ x=@@ 304@@ +d;break; case12:@@ x=@@ 334@@ +d;break; } } printf("%d",x); return0; }  
c -1
h -1
0

intmain() { intm,n,i,j,@@ t=0; charc[@@ 256],@@ d@@ [256],@@ e@@ [256]; scanf("%s",c); scanf("%s",@@ d); scanf("%s",@@ e); m=strlen(@@ c); n=strlen(@@ d); for(i=0;i<m;i++) { if(c@@ [i]==@@ d@@ [0]) { t=0; for(j=i;j<i+@@ n;j++) { if(c@@ [j]==@@ d@@ [j-i@@ ]) { t=t+1; } } if(t==@@ n) { for(j=i;j<i+@@ n;j++) { c[j]=@@ e@@ [j-i@@ ]; } break; } } } printf("%s",@@ c); return0; }  
c -1
h -1
intmain(){ intn,@@ q@@ =1,@@ k; intsz[@@ 20000],@@ jieguo@@ [@@ 20000]; scanf("%d",&n); for(inti=0;i<n;i++){ scanf("%d",&sz[i]); } jieguo@@ [0]=@@ sz[@@ 0]; for(inti=1;i<=@@ n;i++){ k=0; for(intj=0;j<@@ q@@ ;j++){ if(@@ jieguo@@ [j]==@@ sz[i]@@ ){ break; }else{ k@@ +=1; } } if(k==@@ q@@ ){ jieguo@@ [q@@ ]=@@ sz[i]; q@@ +=1; } } for(inti=0;i<@@ q@@ -1;i++){ if(i!=@@ q@@ -2@@ ){ printf("%d",@@ jieguo@@ [i]); }else{ printf("%d",@@ jieguo@@ [i]); } } return0; }  
c -1
h -1
0

intn,m,@@ N@@ [100],@@ M@@ [100]; void@@ scan@@ () {inti; scanf("%d%d",&n,&m); for(i=0;i<n;i++) scanf("%d",&@@ N@@ [i]); for(i=0;i<m;i++) scanf("%d",&@@ M@@ [i]); } voidsort@@ (int@@ q,@@ inta[]) { inti,j,k,@@ t; for(i=0;i<@@ q@@ -1;i++) {@@ k=i; for(j=i+1;j<@@ q@@ ;j++) if(a[j]@@ <@@ a[k]@@ )@@ k=j; if(k!=@@ i) {t=@@ a[i]; a[i]=@@ a[k]; a[k]=@@ t;} } } voidprint() {inti; printf("%d",@@ N@@ [0]); for(i=1;i<n;i++) printf("%d",@@ N@@ [i]); for(i=0;i<m;i++) printf("%d",@@ M@@ [i]); printf("\n"); } voidmain() { scan@@ (); sort(@@ n,@@ N); sort(@@ m,@@ M@@ ); print(); }  
c -1
h -1
ints[@@ 100001@@ ]; intmain() { intn,i,j; scanf("%d",&n); struct{ int@@ id,@@ chin@@ ,@@ math@@ ,@@ su@@ ; }@@ s[@@ 100001@@ ]; for(i=0;i<n;i++) { scanf("%d%d%d",&@@ s[i].@@ id,&@@ s[i].@@ chin@@ ,&@@ s[i].@@ math); s[i].@@ su@@ =@@ s[i].@@ chin@@ +@@ s[i].@@ math; } for(i=0;i<3;i++) { for(j=i+1;j<n;j++) { if(s@@ [i].@@ su@@ <@@ s[j].@@ su@@ ) { s[@@ 100000@@ ]=@@ s[i]; s[i]=@@ s[j]; s[j]=@@ s[@@ 100000]; } } } printf("%d%d\n%d%d\n%d@@ %d",@@ s@@ [0].@@ id,@@ s@@ [0].@@ su@@ ,@@ s[1].@@ id,@@ s[1].@@ su@@ ,@@ s[2@@ ].id,@@ s[2].@@ su@@ ); return0; }  
c -1
h -1
0

intmain() { inti,j,@@ p,@@ changdu1@@ ,@@ changdu2@@ ,@@ changdu3@@ ,@@ m; char@@ x@@ [256@@ ]={0},@@ y@@ [256@@ ]={0},@@ z[@@ 513@@ ]={0},@@ media@@ [256@@ ][@@ 256@@ ]={0}; scanf("%s",@@ x); scanf("%s",@@ y); scanf("%s",@@ z); changdu1@@ =strlen(@@ x); changdu2@@ =strlen(@@ y); changdu3@@ =strlen(@@ z); for(i=0;i<@@ changdu1@@ -@@ changdu2@@ +1;i++) { for(j=0;j<@@ changdu2@@ ;j++) media@@ [i][j]=@@ x@@ [i+j@@ ]; } for(i=0;i<@@ changdu1@@ -@@ changdu2@@ +1;i++) { if(strcmp(@@ media@@ [i],@@ y)@@ ==0) { p=i; break; } } if(i>=@@ changdu1@@ -@@ changdu2@@ +1) { for(i=0;i<@@ changdu1@@ ;i++) printf("%c",@@ x[i]); } else { strcpy(@@ media@@ [p@@ ],@@ z); if(p@@ !=0) { for(i=0;i<p@@ ;i++) printf("%c",@@ x[i]); printf("%s",@@ media@@ [p@@ ]); if(@@ changdu2@@ >@@ changdu3@@ )@@ m=@@ changdu2@@ ; else@@ m=@@ changdu3@@ ; for(i=@@ p@@ +m@@ ;i<@@ changdu1@@ ;i++) printf("%c",@@ x[i]); printf("\n"); } else { printf("%s",@@ media@@ [p@@ ]); for(i=@@ p+@@ changdu3@@ ;i<@@ changdu1@@ ;i++) printf("%c",@@ x[i]); printf("\n"); } } return0; }  
c -1
h -1
intmain(){ intn,i,j,@@ k=0,@@ h=0; cin>>n; inta[n@@ ],b[@@ n]; for(i=0;i<=@@ (n-1);i++) cin>>a[i]; for(i=0;i<=@@ (@@ n-1)@@ ;i++){ if(a[i]!=@@ -1){ for(j=i+1;j<=@@ (@@ n-1)@@ ;j++){ if(a[i]==a[j]@@ ){ a[j]@@ =-1; k=k+1; } } } } for(i=0;i<=@@ (n-1);i++) b[i]=@@ a[i]; for(i=0;i<=@@ (@@ n-1)@@ ;i++){ if(b[i]@@ !=@@ -1){ cout<<@@ b[i]; h@@ ++; } if(h@@ ==1) break; } for(i@@ =i+1@@ ;i<=@@ n-1;i++){ if(b[i]@@ !=@@ -1){ cout<<""<<@@ b[i]; h@@ ++; } if(h@@ ==@@ n-@@ k) break; } return0; }  
c -1
h -1
0

int@@ fj@@ (intn,int@@ m) { inti,j,@@ k=0; if(n@@ ==1)@@ return1; for(i=m@@ ;i<=n;i++) { if(n%i==0) k@@ +=@@ fj@@ (n/i,i); } return@@ k; } intmain() { intn,i; scanf("%d",&n); for(@@ ;n@@ >0@@ ;n@@ --) { scanf("%d",&@@ i); printf("%d",@@ fj@@ (i,@@ 2)); if(@@ n-1)@@ printf("\n"); } }  
c -1
h -1
intmain(){ int@@ k=1; while(k@@ ==1){ inta[16]; cin>>a[0]; int@@ l=0; if(a[0]==-1) k=0; else{ while(@@ a[l@@ ]!=0) { l++; cin>>@@ a[l@@ ]; } inti,j,@@ num=0; for(i=0;i<l@@ -1;i++) for(j=i+1;j<@@ l@@ ;j++) if(a[i]@@ -2*@@ a[j]@@ ==0||@@ a[j]@@ -2*@@ a[i]@@ ==0) num++; cout<<num<<endl; } } return0; }  
c -1
h -1
0

intf@@ (inta,intb) { inti,@@ p,q; for(i=@@ b,@@ p@@ =0;i<=@@ sqrt(@@ a)@@ ;i++) { if(a%i==0) { q=@@ f(a@@ /i,i); p=p+@@ q; } } p++; return(@@ p); } voidmain() { inti,@@ a,@@ n,@@ k; scanf("%d",&n); for(i=1;i<=n;i++) { scanf("%d",&a); k=@@ f(a,@@ 2); printf("%d\n",@@ k); } }  
c -1
h -1
voidmain() { intn,@@ high@@ [@@ 30],@@ point@@ ,@@ m,@@ sum1@@ ,@@ sum2@@ ,@@ check@@ ; scanf("%d",&n); for(m=0;m@@ <n;m++) scanf("%d",&@@ high@@ [m]); for(@@ check@@ =1;@@ check@@ ==1@@ ;) { check@@ =0; for(@@ point@@ =0;@@ point@@ <@@ n-1;@@ point@@ ++) { if(@@ high@@ [@@ point@@ ]<@@ high@@ [@@ point@@ +1]) { check@@ =1; for(m@@ =0,@@ sum1@@ =0;m@@ <@@ point@@ ;m++) if(@@ high@@ [m]@@ >=@@ high@@ [@@ point@@ ]@@ &&@@ high@@ [m@@ ]<@@ high@@ [@@ point@@ +1@@ ])@@ sum1@@ ++; for(m=@@ point@@ +@@ 2,@@ sum2@@ =0;m@@ <n;m++) if(@@ high@@ [m@@ ]>@@ high@@ [@@ point@@ ]@@ &&@@ high@@ [m@@ ]<=@@ high@@ [@@ point@@ +1@@ ])@@ sum2@@ ++; if(@@ sum1@@ >=@@ sum2@@ ) { for(m=@@ point@@ +1@@ ;m@@ <@@ n-1@@ ;m++) { high@@ [m]=@@ high@@ [m@@ +1]; } } else { for(m=@@ point@@ ;m@@ <@@ n-1@@ ;m++) { high@@ [m]=@@ high@@ [m@@ +1]; } point@@ --; } n--; } } } printf("%d\n",n); }  
c -1
h -1
0

intmain(){ charstr[256],@@ a[100],b[100]; inti,j,@@ h; intn,m,@@ result=0; int@@ count; gets(str); scanf("%s%s",a,b); n=strlen(@@ str); m=strlen(a); for(i=0;i<n;i++){ count=0; if(str[i]==@@ a[0]@@ ){ h@@ =i; for(j=0;j<m;j++){ if(str@@ [h@@ +j@@ ]==@@ a[j]@@ ){ count++; } } if(count==@@ m){ printf("%s",@@ b); result=1; break; } if(count@@ !=@@ m){ printf("%c",@@ str[i]); } } else@@ printf("%c",@@ str[i]); if(result@@ ==1) break; } for(i=@@ h@@ +m@@ ;i<@@ n;i++){ printf("%c",@@ str[i]); } return0; }  
c -1
h -1
intmain() { inta,@@ i,j,k,@@ h; intb[@@ 16@@ ]={0}; while(1) { i=0; while(cin>>@@ a) { if(a==@@ (@@ -1)) return0; else { if(a@@ !=0) { b[i]=@@ a; i++; } else break; } } h=0; for(j=0;j<=i-1;j++) { if(b[j]@@ !=0) { for(k=0;k<=@@ i-1;k++) { if(b[j]@@ ==@@ b[k@@ ]*@@ 2) h@@ ++; } } else break; } cout<<@@ h@@ <<endl; } return0; }  
c -1
h -1
0

int@@ part@@ (intx,int@@ t) { inti; intnumber@@ =1; if(x==1) { return0; } if(x==@@ 2) { return1; } for(i=@@ t@@ ;i<=sqrt(@@ x@@ );i++) { if(x%i==0) { number@@ +=@@ part@@ (x/i,i); } } return@@ number; } intmain() { inti,n,@@ a; cin>>n; for(i=1;i<=n;i++) { cin>>a; cout<<@@ part@@ (a,@@ 2)<<endl; } return0; }  
c -1
h -1
intmain() { intn,i,j,@@ y[@@ 200],@@ p[@@ 200]; chara[100@@ ][@@ 11]; scanf("%d",&n); for(i=0;i<@@ 200@@ ;i++) { p[i]=@@ 200@@ -@@ i; } for(i=0;i<n;i++) { scanf("%s%d",@@ a[i],&@@ y@@ [i]); } for(i=0;i<=@@ 140@@ ;i++) { for(j=0;j<n;j++) { if(y@@ [j]==@@ p@@ [i]) printf("%s\n",@@ a[j]); } } for(i=0;i<n;i++) { if(y@@ [i]@@ <60) printf("%s\n",@@ a[i]); } getchar(); getchar(); }  
c -1
h -1
0

inta[@@ 70000@@ ]={0}; intmain() { intn,k,@@ c[@@ 1001@@ ],@@ i; scanf("%d%d",&n,&k); for(i=1;i<=n;i++) { scanf("%d",&@@ c[i]); a[@@ c[i]@@ +@@ 32768@@ ]=1; } for(i=1;i<=n;i++) { if(a[@@ c[i]@@ +@@ 32768@@ ]@@ &&@@ a[k@@ -@@ c[i]@@ +@@ 32768@@ ]@@ )break; } if(i<@@ n)@@ printf("yes"); elseprintf("no"); }  
c -1
h -1
intmain() { introw,col; intarray[@@ 110][110@@ ]; scanf("%d%d",&row,&col); inti,j; for(i=0;i<row;i++) for(j=0;j<col;j++) scanf("%d",@@ *(@@ array@@ +i)@@ +j); for(i=0;i<col;i++) { for(j=0;@@ ((@@ j@@ <=i@@ )&&(@@ j@@ <row@@ ))@@ ;j++) { printf("%d\n",@@ *(*(@@ array@@ +j)@@ +i-j@@ )); } } for(i=1;i<row;i++) { for(j=0;@@ ((@@ j@@ <=col@@ -1)@@ &&(@@ j@@ <row@@ -i@@ ))@@ ;j++) { printf("%d\n",@@ *(*(@@ array@@ +i@@ +j)@@ +col@@ -1-j@@ )); } } return0; }  
c -1
h -1
0

intmain() { inta[100][100]; inti,j,k,@@ m,n; cin>>k; for(intp@@ =0;p@@ <k@@ ;p++) { intsum=0,@@ sum1@@ =0,@@ sum2@@ =0,@@ sum3@@ =0,@@ sum4@@ =0; cin>>m>>n; for(i=0;i<m;i++) { for(j=0;j<n;j++) { cin>>a[i][j]; } } if(n@@ ==1&&@@ m@@ !=1) { for(i=0;i<m;i++) { sum=sum+@@ a[i][0]; } cout<<sum<<endl; } elseif(m@@ ==1&&n@@ !=1) { for(i=0;i<n;i++) { sum=sum+@@ a[0][i]; } cout<<sum<<endl; } elseif(m@@ ==1&&n@@ ==1) { cout<<@@ a[0][0]@@ <<endl; } else { for(i=0;i<n;i++) { sum1@@ =@@ sum1@@ +@@ a[0][i]; sum2@@ =@@ sum2@@ +@@ a[m-1]@@ [i]; } for(i=0;i<m;i++) { sum3@@ =@@ sum3@@ +@@ a[i][0]; sum4@@ =@@ sum4@@ +@@ a[i][n-1]; } sum=@@ sum1@@ +@@ sum2@@ +@@ sum3@@ +@@ sum4@@ -(@@ a[0][0]@@ +@@ a[0][@@ n-1@@ ]+@@ a[@@ m-1@@ ][0]+@@ a[m-1][@@ n-1]); cout<<sum<<endl; } } return0; }  
c -1
h -1
intmain() { inta[@@ 30@@ ],i,j,@@ count1@@ ,@@ count2@@ ; while(@@ scanf("%d",&@@ a[0]@@ ),@@ a[0]@@ !=-1) { count2@@ =0; i=0; while(a[i]@@ ){@@ scanf("%d",&a[@@ ++@@ i@@ ]@@ );} count1@@ =i-1; for(i=0;i<=@@ count1@@ ;i++) { for(j=i+1;j<=@@ count1@@ ;j++) if(a[i]==2*@@ a[j]||a[j]==2*@@ a[i]) count2@@ ++; } cout<<@@ count2@@ <<endl; } return0; }  
c -1
h -1
0

voidmain() { inta[100@@ ],@@ i,@@ l,@@ c[@@ 26]={0},@@ k,@@ max,@@ n,@@ j; char@@ b[100@@ ][@@ 26],@@ d@@ [26@@ ]={'A','B','C','D','E','F','G','H','I','J','K','L','M','N','O','P','@@ Q','R','S','T','U','V','W','X','Y','@@ Z'}; scanf("%d",&n); for(i=0;i<n;i++) scanf("%d%s",&a[i],@@ b[i]); for(i=0;i<n;i++) { l=strlen(@@ b[i]); for(j=0;j<l;j++) { if(b[i][j]=='@@ A'@@ ) c@@ [0]@@ ++; elseif(b[i]@@ [j]=='@@ B@@ ') c[@@ 1@@ ]++; elseif(b[i]@@ [j]=='@@ C') c[@@ 2@@ ]++; elseif(b[i]@@ [j]=='@@ D@@ ') c[@@ 3@@ ]++; elseif(b[i]@@ [j]=='@@ E@@ ') c[@@ 4@@ ]++; elseif(b[i]@@ [j]=='@@ F@@ ') c[@@ 5@@ ]++; elseif(b[i]@@ [j]=='@@ G') c[@@ 6@@ ]++; elseif(b[i]@@ [j]=='@@ H@@ ') c[@@ 7@@ ]++; elseif(b[i]@@ [j]=='@@ I@@ ') c[@@ 8@@ ]++; elseif(b[i]@@ [j]=='@@ J@@ ') c[@@ 9@@ ]++; elseif(b[i]@@ [j]=='@@ K@@ ') c[@@ 10@@ ]++; elseif(b[i]@@ [j]=='@@ L@@ ') c[@@ 11@@ ]++; elseif(b[i]@@ [j]=='@@ M@@ ') c[@@ 12@@ ]++; elseif(b[i]@@ [j]=='@@ N@@ ') c[@@ 13@@ ]++; elseif(b[i]@@ [j]=='@@ O@@ ') c[@@ 14@@ ]++; elseif(b[i]@@ [j]=='@@ P@@ ') c[@@ 15@@ ]++; elseif(b[i]@@ [j]=='@@ Q@@ ') c[@@ 16@@ ]++; elseif(b[i]@@ [j]=='@@ R@@ ') c[@@ 17@@ ]++; elseif(b[i]@@ [j]=='@@ S@@ ') c[@@ 18@@ ]++; elseif(b[i]@@ [j]=='@@ T@@ ') c[@@ 19@@ ]++; elseif(b[i]@@ [j]=='@@ U@@ ') c[@@ 20@@ ]++; elseif(b[i]@@ [j]=='@@ V@@ ') c[@@ 21@@ ]++; elseif(b[i]@@ [j]=='@@ W@@ ') c[@@ 22@@ ]++; elseif(b[i]@@ [j]=='@@ X@@ ') c[@@ 23@@ ]++; elseif(b[i]@@ [j]=='@@ Y@@ ') c[@@ 24@@ ]++; elseif(b[i]@@ [j]=='@@ Z@@ ') c[@@ 25@@ ]++; } } max=@@ c[@@ 0]; for(i=0;i<26;i++) if(c@@ [i]>=@@ max) { max=@@ c[i]; k=i; } printf("%c\n",@@ d@@ [k]); printf("%d\n",c@@ [k]); for(i=0;i<n;i++) { l=strlen(@@ b[i]); for(j=0;j<l;j++) { if(b[i]@@ [j]==@@ d@@ [k]) printf("%d\n",a[i]); } } }  
c -1
h -1
structstu { int@@ w; charc[@@ 10]; structstu*next; }; intn; structstu*@@ creat@@ (intm) { structstu@@ *head,*@@ p1,*p2,*@@ p3; inti; n=0; p1=p2=(struct@@ stu*)malloc(sizeof(structstu)); head=p1; p1->next=NULL; n=0; scanf("%s%d",p1->@@ c@@ ,&p1->@@ w); for(i=0;i<m-1;i++) {@@ p1=(struct@@ stu*)malloc(sizeof(structstu)); scanf("%s%d",p1->@@ c@@ ,&p1->@@ w); if(p1->@@ w@@ <60) {@@ for(@@ p2=@@ head;@@ p2->next@@ !=NULL;@@ p2=@@ p2->next@@ ) ; p2->next=p1; p1->next=NULL; } else { p2=head; while((@@ p1->@@ w@@ <=@@ p2->@@ w@@ )&&(@@ p2->next@@ !=NULL@@ )) { p3@@ =p2; p2=p2->next; } if(p1->@@ w@@ >@@ p2->@@ w@@ ) { if(head@@ ==@@ p2@@ ) head=p1; else@@ p3@@ ->next@@ =p1; p1->next@@ =p2; } else {@@ p2->next@@ =p1;@@ p1->next=NULL; } } } return(head); } voidmain() { intm,@@ i; structstu@@ *head,*p; scanf("%d",&m); head=creat@@ (m); p=head; for(i=0;i<m;i++) {@@ printf("%s\n",p->@@ c); p=p->next; } }  
c -1
h -1
0

intmain() { float@@ s[@@ 16],@@ t[@@ 16]; int@@ u@@ =0,@@ g=0; for(intk@@ =1@@ ;k<@@ 100@@ ;k++) { int@@ a=0; for(inti=0;i<@@ 16@@ ;i++) { scanf("%f",&@@ s[i]); if(s@@ [0]==@@ -1@@ ||@@ scanf(@@ ""@@ )) printf(@@ ""@@ ); else { u@@ +=1; if(s@@ [i]@@ ==0)break; else { t@@ [i]=@@ s[i]; a++; } } } int@@ b=0; for(int@@ h@@ =0;h@@ <@@ a;@@ h++) { for(intk=0;k<@@ a@@ ;k++) { if(t@@ [h@@ ]@@ /@@ t@@ [k]==@@ 2) b++; } } printf("%d\n",@@ b); g@@ ++; if(g@@ ==@@ u@@ ) printf(@@ ""@@ ); } return0; }  
c -1
h -1
main() { int@@ j@@ [@@ 101@@ ]={0},@@ a[@@ 20000],b[@@ 20000@@ ]={0},@@ i,n,@@ x=0,@@ m=0; scanf("%d",&n); for(i=0;i<n;i++)@@ scanf("%d",&a[i]); for(i=0;i<n;i++) {@@ if(j@@ [@@ a[i]@@ ]==0) {@@ j@@ [@@ a[i]@@ ]=1; b[@@ x@@ ]=@@ a[i]@@ ;x@@ ++; } } for(i=0;i<x@@ -1;i++) printf("%d",b[i]); printf("%d",b[i]); }  
c -1
h -1
0

intmain() { inti,@@ t=0,@@ s=0,@@ l1,l2@@ ; doublen,@@ m; chara[256],b[@@ 256]; scanf("%lf",&n); scanf("%s",&@@ a); scanf("%s",&@@ b); l1@@ =strlen(a); l2@@ =strlen(b); for(i=0;i<l1;i++) { if((a[i]!='@@ A'&&a[i]!='T'&&a[i]!='C'&&a[i]!='G')||(b[i]!='A'&&b[i]!='T'&&b[i]!='C'&&b[i]!='@@ G')) { s=s+1; } } if(s@@ !=0@@ ||@@ l1@@ !=l2@@ ) { printf("error"); } else { for(i=0;i<l1;i++) { if(a[i]==b[i]) { t=t+1; } } m@@ =(double)@@ t@@ /@@ l1; if(m@@ >n) { printf("yes"); } elseprintf("no"); } return0; }  
c -1
h -1
intmain() { int@@ A[@@ 20000],@@ B@@ [@@ 20000],@@ n,@@ i,j,k; int@@ flag; intnumber@@ =0; j=0; scanf("%d",&n); for(i=0;i<n;i++) { scanf("%d",&@@ A@@ [i]); } for(i=0;i<n;i++) { flag=0; for(k=0;k<i;k++) { if(A@@ [k]==@@ A@@ [i]) { flag=1; break; } } if(flag==0) { B@@ [j]=@@ A@@ [i]; number=@@ number@@ +1; j=j+1; } } for(j=0;j<@@ number@@ ;j++) { if(j@@ ==0) { printf("%d",@@ B@@ [j]); } else { printf("%d",@@ B@@ [j]); } } return0; }  
c -1
h -1
0

intmain() { double@@ m@@ =0@@ .0@@ ; intt,@@ i,@@ r; doublen; scanf("%lf",&n); char@@ z@@ [100],@@ c[100]; scanf("%s",@@ z); scanf("%s",c); t@@ =strlen(@@ z); r@@ =strlen(c); if(t@@ !=@@ r@@ ){ printf("error"); } else{ for(i=0;i<@@ t@@ ;i++){ if((@@ z@@ [i]!='A'&&@@ z@@ [i]!='T'&&@@ z@@ [i]!='C'&&@@ z@@ [i]!='G')||(@@ c@@ [i]!='A'&&@@ c@@ [i]!='T'&&@@ c@@ [i]!='C'&&@@ c@@ [i]!='G')){ printf("error"); return0; } if(z@@ [i]==@@ c[i]@@ ){ m++; } } if(1.0*@@ m/@@ t@@ >n){ printf("yes"); } else{ printf("no"); } } return0; }  
c -1
h -1
intmax@@ (intx,inty) { if(x@@ >=@@ y)@@ return@@ x; else@@ return@@ y; } int@@ haha@@ (inta[],intb[],int@@ k) { inti,j,@@ c=0; b[k@@ -1]@@ =1; for(i=k-2;i>=0;i--) { for(j=i+1;j<k;j++) { if(a[i]>=@@ a[j])@@ c=@@ max(@@ c,@@ b[j]); } b[i]=@@ c@@ +1; c=0; } for(i=k@@ -1@@ ;i@@ >-@@ 1@@ ;i@@ --@@ )@@ c=@@ max(@@ c,@@ b[i]); return@@ c; } intmain() { inta[@@ 25],b[@@ 25@@ ]={0},@@ k,@@ i; scanf("%d",&k); for(i=0;i<@@ k;i++)@@ scanf("%d",&a[i]); printf("%d",@@ haha@@ (a,b,@@ k@@ )); }  
c -1
h -1
0

inta[100],b[100]; intm,n,@@ i,j; void@@ temp@@ () { cin>>m>>n; for(i=0;i<m;i++) { cin>>a[i]; } for(i=0;i<n;i++) { cin>>b[i]; } } void@@ temp1@@ () { intx; for(i=0;i<m-1;i++) { for(j=0;j<m@@ -i-1;j++) { if(a[j]>a[j+1]) { x=@@ a[j]; a[j]=a[j+1]; a[j+1]=@@ x; } } } } void@@ temp2@@ () { intx; for(i=0;i<n-1;i++) { for(j=0;j<n@@ -i-1;j++) { if(b[j]>b[j+1]) { x=@@ b[j]; b[j]=b[j+1]; b[j+1]=@@ x; } } } } void@@ temp3@@ () { for(i=0;i<m;i++) { cout<<a[i]<<""; } for(i=0;i<n-1;i++) { cout<<b[i]<<""; } cout<<b[@@ n-1]; } intmain() { temp@@ (); temp1@@ (); temp2@@ (); temp3@@ (); return0; }  
c -1
h -1
structstudent{ intj; int@@ x,y; int@@ z; }stu[100000]; intmain(intargc,char*argv[]) { intn,i,@@ a=0,b=0,@@ c=0,@@ a1,@@ b1,@@ c1@@ ; scanf("%d",&n); for(i=0;i<n;i++) { scanf("%d%d%d",&stu[i].@@ j@@ ,&stu[i].@@ x@@ ,&stu[i].@@ y); stu[i].@@ z=@@ stu[i].@@ x+@@ stu[i].@@ y; } for(i=0;i<n;i++) { if(a<@@ stu[i].@@ z) { a=@@ stu[i].@@ z; a1@@ =i; } } for(i=0;i<n;i++) { if(b@@ <@@ stu[i].@@ z@@ &&i!=@@ a1@@ ) { b=@@ stu[i].@@ z; b1@@ =i; } } for(i=0;i<n;i++) { if(c@@ <@@ stu[i].@@ z@@ &&i!=@@ a1@@ &&i!=@@ b1@@ ) { c=@@ stu[i].@@ z; c1@@ =i; } } printf("%d%d\n%d%d\n%d%d\n",@@ stu[@@ a1@@ ].@@ j,@@ stu[@@ a1@@ ].@@ z,@@ stu[@@ b1@@ ].@@ j,@@ stu[@@ b1@@ ].@@ z,@@ stu[@@ c1@@ ].@@ j,@@ stu[@@ c1@@ ].@@ z); return0; }  
c -1
h -1
0

intmain() { intn,k,@@ a,@@ e@@ [@@ 10008@@ ],i,j,@@ m,@@ log@@ ; log@@ =0; scanf("%d%d",&n,&k); if(n==1) { if(n@@ ==k) { printf("yes"); }else{ printf("no"); } }else{ scanf("%d",&a); e@@ [1]=@@ a; for(i=2;i<=n;i++) { scanf("%d",&a); e@@ [i]=@@ a; } for(j=1;j<=n;j++) { for(m=@@ n;@@ m@@ >@@ j@@ ;m@@ --) { if((@@ e@@ [j]+@@ e@@ [m@@ ])@@ ==k) { printf("yes"); log@@ =1; break; } } if(@@ log@@ >0@@ .@@ 1) { break; } } if(@@ log@@ <0@@ .@@ 1) { printf("no"); } } return0; }  
c -1
h -1
intmain() {@@ inti,j,@@ m,n; cin>>m>>n; inta[@@ m@@ +1@@ ][n@@ +1]; for(i=1;i<=m;i++) for(j=1;j<=n;j++) cin>>a[i][j]; intk; for(k=1;k<=n;k++) for(i=@@ k;@@ (i@@ >=1@@ )&&(@@ k@@ +1@@ -i@@ <=@@ m)@@ ;i--) cout<<@@ a[k@@ +1@@ -i@@ ]@@ [i]<<endl; for(k=@@ 2@@ ;k<=@@ m;k++) for(i=@@ n;@@ (i@@ >=1@@ )&&(@@ k+@@ n-i@@ <=@@ m)@@ ;i--) cout<<@@ a[k@@ +@@ n-i@@ ]@@ [i]<<endl; return0; }  
c -1
h -1
0

intfenjie@@ (inta,int@@ max@@ ){ inti=0; intsum=0; if(a@@ ==1)@@ return1; for(i=@@ max@@ ;i@@ >=@@ 2@@ ;i--) { if((@@ a@@ %i@@ )@@ ==0)@@ sum+=@@ fenjie@@ (a/i,i); } returnsum; } intmain(){ intk=0; intn=0; intnum=0; cin>>n; for(k=1;k<=n;k++) { cin>>num; cout<<@@ fenjie@@ (num,@@ num); if(k@@ <@@ n)@@ cout<<endl; } return0; }  
c -1
h -1
intm,n,@@ a[@@ 1000],b[1000],@@ c[@@ 2000@@ ],@@ s,@@ t; voidinput() { scanf("%d%d",&m,&n); for(s=0;s@@ <m;@@ s++) scanf("%d",&a[@@ s@@ ]); for(s=0;s@@ <n;@@ s++) scanf("%d",&@@ b[@@ s@@ ]); } voidorder@@ () { intk; for(@@ s@@ =1;@@ s@@ <m;@@ s++) for(t=0;t@@ <m@@ -@@ s@@ ;t++) if(a[@@ t@@ ]>@@ a[t@@ +1]) { k=@@ a[t@@ ]; a[t@@ ]=a[@@ t@@ +1]; a[t@@ +1]=@@ k; } for(@@ s@@ =1;@@ s@@ <n;@@ s++) for(t=0;t@@ <@@ n-@@ s@@ ;t++) if(@@ b[t@@ ]>@@ b[t@@ +1]) { k=@@ b[t@@ ]; b[t@@ ]=@@ b[t@@ +1]; b[t@@ +1]=@@ k; } } void@@ add@@ () { for(s=0;s@@ <m;@@ s++) c[@@ s@@ ]=a[@@ s@@ ]; for(@@ s=@@ m,@@ t@@ =0;@@ s@@ <@@ m+@@ n;@@ s@@ ++,@@ t++) c[@@ s@@ ]=@@ b[t@@ ]; } voidoutput@@ () { for(s=0;s@@ <@@ m+@@ n;@@ s++) { if(s@@ !=@@ m+@@ n-1)@@ printf("%d",c[@@ s@@ ]); else@@ printf("%d",c[@@ s@@ ]); } } intmain() { input(); order@@ (); add@@ (); output@@ (); return0; }  
c -1
h -1
0

voidmain() { struct@@ books { intnum; charauthor[26]; }@@ books@@ [999]; intn,a[@@ 26]={0},@@ max,@@ i,j,@@ u@@ ,@@ lenth@@ ,@@ temp; scanf("%d",&n); for(i=0;i<n;i++) scanf("%d%s",&@@ books@@ [i].@@ num,@@ books@@ [i].@@ author); for(i=0;i<n;i++) { lenth@@ =strlen(@@ books@@ [i].@@ author); for(j=0;j<@@ lenth@@ ;j++) { for(@@ u@@ =0;@@ u@@ <26@@ ;@@ u@@ ++) { if(@@ books@@ [i].@@ author@@ [j]=='@@ A'+@@ u@@ ) a[@@ u@@ ]++; } } } temp=@@ a[0]; for(@@ u@@ =0;@@ u@@ <26@@ ;@@ u@@ ++) if(a[@@ u@@ ]>=@@ temp@@ ) { max=@@ u@@ ; temp=@@ a[@@ u@@ ]; } printf("%c\n%d\n",@@ 'A'+@@ max,@@ a[@@ max@@ ]); for(i=0;i<n;i++) { lenth@@ =strlen(@@ books@@ [i].@@ author); for(j=0;j<@@ lenth@@ ;j++) { if(@@ books@@ [i].@@ author@@ [j]=='@@ A'+@@ max) printf("%d\n",@@ books@@ [i].num); } } }  
c -1
h -1
intn,m; int*@@ pfCompare@@ (constvoid*a,constvoid*@@ b) { return@@ *(int*)@@ a@@ -*@@ (int*)@@ b; } int@@ shuru@@ (intx,inty) { intk; scanf("%d",&x); scanf("%d",&@@ y); int*p=@@ (int*)malloc(@@ x@@ *sizeof(int)); for(k=0;k<=@@ x@@ -1;k++) scanf("%d",&@@ p@@ [k]); int*@@ q=@@ (int*)malloc(@@ y@@ *sizeof(int)); for(k=0;k<=@@ y@@ -1;k++) scanf("%d",&@@ q@@ [k]); qsort@@ (p,@@ x,@@ sizeof(int),@@ pfCompare@@ ); qsort(@@ q,@@ y,@@ sizeof(int),@@ pfCompare@@ ); int*@@ c=@@ (int*)malloc(@@ (@@ x+@@ y)@@ *sizeof(int)); for(k=0;k<=@@ x@@ -1;k++) c@@ [k]=@@ p@@ [k]; for(k=0;k<=@@ y@@ -1;k++) c[@@ x@@ +k@@ ]=@@ q@@ [k]; for(k=0;k<=@@ x+@@ y@@ -2@@ ;k++) printf("%d",c@@ [k]); printf("%d",c[@@ x+@@ y@@ -1]); } main() { shuru@@ (n,@@ m); }  
c -1
h -1
0

intmax@@ (int*@@ data@@ ,int@@ lens@@ ) { int@@ r@@ =*@@ data@@ ; for(intj=0;j<@@ lens@@ ;j++)@@ if(*(@@ data@@ +j)@@ >@@ r@@ )@@ r@@ =*(@@ data@@ +j); return@@ r; } intf@@ (int*@@ data@@ ,int@@ lens@@ ,int@@ height@@ ) { int@@ tempResult@@ [25]; if(@@ lens@@ ==0)@@ return0; intcount@@ =0,@@ tempHeight@@ =0; for(inti=0;i<@@ lens@@ ;i++) { if(@@ data@@ [i]<=@@ height@@ &&@@ data@@ [i]>=@@ tempHeight@@ ) {@@ tempHeight@@ =@@ data@@ [i];@@ tempResult@@ [@@ count@@ ]=@@ f(@@ data@@ +i@@ +1,@@ lens@@ -i@@ -1,@@ data@@ [i]@@ );@@ count@@ ++;} } if(count@@ ==0)@@ return0; return@@ max(@@ tempResult@@ ,@@ count@@ )@@ +1; } intmain() { int@@ data@@ [25]; intn; cin>>n; for(inti=0;i<@@ n;i++)@@ cin>>@@ data@@ [i]; cout<<@@ f(@@ data@@ ,@@ n,@@ max(@@ data@@ ,@@ n@@ )); return0; }  
c -1
h -1
voidmain() { intn,m,@@ a[@@ 20000@@ ],i,j,@@ k; scanf("%d",&n); if(n@@ >=1@@ &&n@@ <=@@ 20000@@ ) { scanf("%d",&a[0]); for(i=1;i<n;i++) scanf("%d",&a[i]); for(i=0,@@ m@@ =0;i<@@ n-@@ m-1;i++) { for(j=i+1;j<@@ n-@@ m;j++) { if(a[i]!=@@ a[j]) continue; else { for(k=j@@ ;k<@@ n-@@ m-1@@ ;k++) a[k]=a[k@@ +1]; m++; j--; } } } printf("%d",a[0]); for(i=1;i<@@ n-@@ m;i++) printf("%d",a[i]); } }  
c -1
h -1
0

intmain(){ double@@ z,@@ q; char@@ a[1@@ ][@@ 1000],b[@@ 1@@ ][@@ 1000]; intx,y,@@ m,n,@@ s=0,@@ i; scanf("%lf",&@@ q); scanf("%s%s",@@ a[@@ 0@@ ],b[@@ 0]@@ ); m=strlen(@@ a[0]); n=strlen(@@ b[0]@@ ); if(m!=@@ n){ printf("error"); return0; } for(i=0;i<m;i++){ if(a[0]@@ [i]!='A'&&@@ a[0]@@ [i]!='T'&&@@ a[0]@@ [i]!='C'&&@@ a[0]@@ [i]!='G@@ '||@@ b[0]@@ [i]!='A'&&@@ b[0]@@ [i]!='T'&&@@ b[0]@@ [i]!='C'&&@@ b[0]@@ [i]!='G'){ printf("error"); return0; } if(a[0]@@ [i]==@@ b[0]@@ [i]){ s++; } } z@@ =1.0*@@ s/@@ m; if(z@@ >@@ q@@ ){printf("yes");} else{printf("no");} return0; }  
c -1
h -1
intmain() {int@@ a,@@ i,j,@@ m,@@ k,@@ p; char@@ r@@ [257],@@ s[@@ 257@@ ],@@ w@@ [257]; scanf("%s",@@ w); scanf("%s",s); scanf("%s",@@ r); a@@ =strlen(s); p=0; for(i=0;@@ w@@ [i]@@ ;i++) { if(w@@ [i]==@@ s@@ [0]) {@@ m=0; for(j=0;j<a@@ ;j++) {if(@@ w@@ [i+j]==@@ s@@ [j]) {@@ m=m+1; } } if(m==@@ a) {@@ p=p@@ +1; for(k=0;k<@@ a@@ ;k++) {@@ w@@ [i+k@@ ]=@@ r@@ [k]; } printf("%s",@@ w); break; } } } if(p@@ ==0) {@@ printf("%s",@@ w); } return0; }  
c -1
h -1
0

intt=0; int@@ mini@@ (int@@ k,int@@ i) { if(k@@ ==1)@@ t=t+1; for(@@ ;i<=@@ k;i++) { if(k@@ %i==0)@@ mini@@ (k@@ /i,i); } return0; } intmain() { intN@@ ,@@ n; scanf("%d",&N); for(n=0;n@@ <=@@ N@@ -1;@@ n++) { int@@ M@@ ; scanf("%d",&@@ M@@ ); mini@@ (@@ M@@ ,@@ 2); printf("%d\n",t); t=0; } }  
c -1
h -1
intmain() { int@@ p[@@ row@@ ][@@ row@@ ]; intn,@@ word@@ ,@@ i,j; inta,b,@@ c,d,@@ s; scanf("%d",&n); for(i=0;i<n;i++){ for(j=0;j<n;j++){ scanf("%d",&@@ p@@ [i][j]); } } word@@ =0; for(i=0;i<n;i++){ for(j=0;j<n;j++){ if(@@ word@@ ==0){ if(p@@ [i][j]==0){ a=i; b=j; word@@ =1; } } } } word@@ =0; for(i=n-1;i>=0;i--){ for(j=n-1@@ ;j>=0;j--){ if(@@ word@@ ==0){ if(p@@ [i][j]==0){ c=i; d=j; word@@ =1; } } } } s=(@@ c-a-1)*(d-b-1); printf("%d",s); return0; }  
c -1
h -1
0

intmain(){ double@@ s,@@ t; intm,n,@@ flag=0; int@@ e=0; chara[@@ LEN@@ ],b[@@ LEN@@ ]; scanf("%lf",&@@ s); scanf("%s",a); scanf("%s",b); m=strlen(a); n@@ =strlen(b); for(intp@@ =0;p@@ <m@@ ;p++){ if(a[@@ p@@ ]@@ =='@@ A'||@@ a[p@@ ]@@ =='@@ G'||@@ a[p@@ ]@@ =='@@ C'||@@ a[p@@ ]@@ =='@@ T@@ '){ flag=0; }else{ flag=1; break; } } if((@@ m@@ !=@@ n@@ )||(@@ flag@@ ==1)@@ ){ printf("error"); }else{ for(inti=0;i<n;i++){ if(a[i]==b[i]){ e++; } } t@@ =1.0*@@ e@@ /n; if(t@@ >@@ s@@ ){ printf("yes"); }else{ printf("no"); } } return0; }  
c -1
h -1
intmain(){ inti,j,n,@@ k=0,@@ b[100@@ ],@@ c=0,@@ eb@@ ; chara[100@@ ][@@ 10],@@ ea@@ [10]; scanf("%d",&n); for(i=0;i<n;i++) scanf("%s%d",@@ a[i],&@@ b[i]); for(j=0;j<n;j++){ for(i=n-1;i@@ >@@ j@@ ;i--){ if(b[i]>b@@ [i-1]@@ &&@@ b[i]@@ >=60){ eb@@ =@@ b[i]; b[i]=b@@ [i-1]; b@@ [i-1@@ ]=@@ eb@@ ; strcpy(@@ ea@@ ,@@ a[i]); strcpy(@@ a[i],@@ a[i@@ -1]); strcpy(@@ a[i-1@@ ],@@ ea@@ ); } } } for(i=0;i<n;i++) printf("%s\n",@@ a[i]); return0; }  
c -1
h -1
0

intmain(){ introw,col,@@ sz@@ [100][100]; int@@ xx_row@@ ,@@ sx_row@@ ,@@ xx_col@@ ,@@ sx_col@@ ; inti,j,@@ c,@@ r; scanf("%d%d",&row,&col); for(i=0;i<row;i++){ for(j=0;j<col;j++){ scanf("%d",&sz[i][j]); } } xx_row@@ =0; sx_row@@ =@@ row@@ -1; xx_col@@ =0; sx_col@@ =@@ col-1; if(col@@ >@@ row@@ ){ for(@@ c=@@ xx_col@@ ;c@@ <=@@ sx_row@@ ;c@@ ++){ i=0; for(j=@@ c@@ ;j@@ >=@@ xx_col@@ ;j--){ printf("%d\n",sz@@ [i][j]); i++; } } for(@@ c=@@ sx_row@@ +1;@@ c@@ <@@ sx_col@@ ;c@@ ++){ j=@@ c; for(i=0;i<=@@ sx_row@@ ;i++){ printf("%d\n",sz@@ [i][j]); j--; } } for(@@ r=@@ xx_row@@ ;r@@ <=@@ sx_row@@ ;r@@ ++){ j=@@ sx_col@@ ; for(i=@@ r@@ ;i<=@@ sx_row@@ ;i++){ printf("%d\n",sz@@ [i][j]); j--; } } } if(col@@ <row@@ ){ for(@@ c=@@ xx_col@@ ;c@@ <=@@ sx_col@@ ;c@@ ++){ i=0; for(j=@@ c@@ ;j@@ >=@@ xx_col@@ ;j--){ printf("%d\n",sz@@ [i][j]); i++; } } for(@@ r=@@ xx_row@@ +1;@@ r@@ <row@@ -col@@ ;r@@ ++){ i=@@ r; for(j=@@ sx_col@@ ;j@@ >=@@ xx_col@@ ;j--){ printf("%d\n",sz@@ [i][j]); i++; } } for(@@ r=@@ row@@ -col@@ ;r@@ <=@@ sx_row@@ ;r@@ ++){ j=@@ sx_col@@ ; for(i=@@ r@@ ;i<=@@ sx_row@@ ;i++){ printf("%d\n",sz@@ [i][j]); j--; } } } if(col@@ ==@@ row@@ ){ for(@@ c=@@ xx_col@@ ;c@@ <=@@ sx_row@@ ;c@@ ++){ i=0; for(j=@@ c@@ ;j@@ >=@@ xx_col@@ ;j--){ printf("%d\n",sz@@ [i][j]); i++; } } for(@@ r=@@ xx_row@@ +1;@@ r@@ <=@@ sx_row@@ ;r@@ ++){ j=@@ sx_col@@ ; for(i=@@ r@@ ;i<=@@ sx_row@@ ;i++){ printf("%d\n",sz@@ [i][j]); j--; } } } return0; }  
c -1
h -1
structstu { intnum; intchi; intmath; ints; structstu*next; }; structstu*@@ creat@@ (intn) { inti; structstu*@@ head; structstu*@@ p1,*p2; p1=p2=(struct@@ stu@@ *)malloc(LEN); scanf("%d%d%d",&p1->num,&p1->@@ chi@@ ,&p1->math); head=p1; for(i=1;i<n;i++) { p1=(struct@@ stu*)malloc(sizeof(structstu)); scanf("%d%d%d",&p1->num,&p1->@@ chi@@ ,&p1->math); p2->next=p1; p2=p1; } p2->next=NULL; return(head); } voidmain() { inti,n,@@ t,@@ m; structstu@@ *head,*p1,*p2; scanf("%d",&n); head=creat(n); p1=head; for(i=0;i<n;i++) { p1->@@ s=@@ p1->@@ chi@@ +p1->@@ math; p1=p1->next; } p1=head; p2=p1->next; for(i=0;i<3;i++) { while(@@ p2@@ !=NULL) { if(@@ p2->@@ s@@ >@@ p1->@@ s) { t=@@ p2->@@ s; p2->@@ s=@@ p1->@@ s; p1->@@ s=@@ t; m=@@ p2->@@ num; p2->@@ num=@@ p1->@@ num; p1->@@ num=@@ m; }@@ p2=p2->next; }@@ printf("%d%d\n",@@ p1->@@ num,p1->@@ s); if(i==@@ 2@@ )break; p1=p1->next@@ ;@@ p2=p1->next; } }  
c -1
h -1
0

int@@ dispose@@ (int,int); intmain() { intn,i,@@ p; cin>>n; for(i=0;i<n;i++) { cin>>@@ p; cout<<@@ dispose@@ (p,@@ 2)<<endl; } return0; } int@@ dispose@@ (intp@@ ,int@@ y) { inti,@@ sol@@ =1; for(i=y@@ ;i<=@@ (int)@@ (@@ sqrt@@ (p@@ ))@@ ;i++) { if(p@@ %i==0) { sol@@ +=@@ dispose@@ (p@@ /i,i); } } return@@ sol@@ ; }  
c -1
h -1
intmain() { int@@ aaa@@ [5@@ ][@@ 3@@ ]; intyear,@@ mon@@ ,@@ day,@@ i,n,@@ m; int@@ month@@ [12@@ ]; month@@ [0]=@@ 31,@@ month@@ [1]=@@ 28@@ ,@@ month@@ [2]=@@ 31,@@ month@@ [3@@ ]=30@@ ,@@ month@@ [4@@ ]=@@ 31,@@ month@@ [5@@ ]=30@@ ,@@ month@@ [@@ 6@@ ]=@@ 31,@@ month@@ [@@ 7@@ ]=@@ 31,@@ month@@ [@@ 8@@ ]=30@@ ,@@ month@@ [@@ 9@@ ]=@@ 31,@@ month@@ [10@@ ]=30@@ ,@@ month@@ [11@@ ]=31; for(i=0;i<@@ 5;i++) { scanf("%d%d@@ %d@@ \n",&@@ year@@ ,&@@ mon@@ ,&@@ day); aaa@@ [i]@@ [0]=@@ year; aaa@@ [i]@@ [1]=@@ mon@@ ; aaa@@ [i]@@ [2]=@@ day; } for(i=0;i<@@ 5;i++) { year@@ =@@ aaa@@ [i]@@ [0]; mon@@ =@@ aaa@@ [i]@@ [1]; day=@@ aaa@@ [i]@@ [2]; if((year%4==0&&year%100!=0@@ )||@@ year%400==0) month@@ [1]=@@ 29; else@@ month@@ [1]=@@ 28; n=0; for(m=0;m<@@ (@@ mon@@ -1)@@ ;m++) { n=n+@@ month@@ [m]; } n=n+@@ day; printf("%d\n",n); } }  
c -1
h -1
0

intn,@@ t,@@ cnt@@ ; voidf@@ (int@@ left@@ ,int@@ last@@ ){ if(@@ left@@ <@@ last@@ ){@@ if(@@ left@@ ==1)@@ cnt@@ ++;@@ return@@ ;} for(inti=@@ last@@ ;i<=@@ left@@ ;i++)@@ if(@@ left@@ %i==0)@@ f(@@ left@@ /i,i); } intmain(){ scanf("%d",&t); while(t@@ --){ scanf("%d",&n); cnt@@ =0;@@ f(@@ n,@@ 2); printf("%d\n",@@ cnt@@ ); } return0; }  
c -1
h -1
intmain() { intn=0,@@ i=0,j=0,@@ num@@ [100],@@ k=0,@@ count@@ [26]={0},@@ max=0; char@@ nam@@ [100][@@ 30@@ ]={@@ NULL@@ }; cin>>n; for(i=0;i<n;i++) { cin>>num[i]; cin.get(); gets(@@ nam@@ [i]); for(j=0;j<strlen(@@ nam@@ [i]@@ );j++) count[@@ nam@@ [i][j]@@ -'A']++; } max=count@@ [0]; for(i=0;i<26;i++) { if(max<@@ count@@ [i]) {max=@@ count@@ [i]@@ ;k@@ =i;} else continue; } j=0; cout<<@@ (char)@@ (k@@ +'@@ A')@@ <<endl; cout<<max<<endl; for(i=0;i<n;i++) for(j=0;;j++) { if(@@ nam@@ [i][j]==@@ k@@ +'A'@@ ) {@@ cout<<@@ num[i]@@ <<endl@@ ;break;} if(@@ nam@@ [i][j]==@@ NULL@@ ) break; } return0; }  
c -1
h -1
0

voidmain() { structbook { intnumber; charauthor@@ [10]; }; structbook@@ a[1000]; inti,n,@@ j,@@ count@@ [26]={0},@@ temp,@@ max,@@ index@@ =0; charc; scanf("%d",&n); for(i=0;i<n;i++) scanf("%d%s",&@@ a[i].@@ number@@ ,&a[i].@@ author); for(i=0;i<n;i++) for(j=0;@@ a[i].@@ author@@ [j]!='\0';j++) {@@ temp@@ =(@@ a[i].@@ author@@ [j]@@ )@@ -'A'; count[@@ temp@@ ]++; } max=count@@ [0]; for(i=1;i<26;i++) if(count@@ [i]>max) {max=@@ count@@ [i]; index@@ =i; } c=@@ index@@ +'A'@@ ; printf("%c\n%d\n",@@ c,@@ max); for(i=0;i<n;i++) for(j=0;@@ a[i].@@ author@@ [j]!='\0';j++) if(a[i].@@ author@@ [j]==@@ c) printf("%d\n",@@ a[i].@@ number); }  
c -1
h -1
void@@ duqu@@ (intm,@@ inta[@@ ]); voidpaixu@@ (intm,@@ inta[@@ ]); voidhebing@@ (intm,@@ intn,@@ inta[@@ ],intb[@@ ]); voidshuchu@@ (intm,@@ intn,@@ inta[@@ ]); voidmain() { intx@@ [100]={0},@@ y@@ [100]={0},@@ m,n; scanf("%d%d",&m,&n); duqu@@ (m,@@ x); duqu@@ (n,@@ y); paixu@@ (m,@@ x); paixu@@ (n,@@ y); hebing@@ (@@ m,n,@@ x,@@ y); shuchu@@ (@@ m,n,@@ x); } void@@ duqu@@ (intm,@@ inta[]) { inti; for(i=1;i<=m;i++) scanf("%d",&a[i]); } voidpaixu@@ (intm,@@ inta[]) { inti,j,k; for(i=1;i<=m;i++) for(j=1;j<=@@ m@@ -i;j++) if(a[j]>a[j+1]) {@@ k=@@ a[j];a[j]=a[j+1];@@ a[j+1]=@@ k@@ ;} } voidhebing@@ (intm,@@ intn,@@ inta[@@ ],intb[@@ ]) { inti; for(i=m@@ +1;i<=@@ m+n;i++) a[i]=b[i-@@ m]; } voidshuchu@@ (intm,@@ intn,@@ inta[]) { inti; for(i=1;i<@@ m+n;i++) printf("%d",a[i]); printf("%d",a[@@ m+@@ n@@ ]); }  
c -1
h -1
0

intmain() { double@@ rate@@ ; scanf("%lf",&@@ rate@@ ); chara[501],b[501]; scanf("%s%s",a,b); int@@ len1@@ =strlen(a); int@@ len2@@ =strlen(b); if(len1!=@@ len2) { printf("error\n"); return0; } inti,@@ sum=0; for(i=0;i<len1;i++) { switch(@@ a[i]) { case'@@ A@@ ':@@ break; case'@@ T@@ ':@@ break; case'@@ C@@ ':@@ break; case'@@ G@@ ':@@ break; default@@ :@@ printf("error\n"); return0; } switch(@@ b[i]) { case'@@ A@@ ':@@ break; case'@@ T@@ ':@@ break; case'@@ C@@ ':@@ break; case'@@ G@@ ':@@ break; default@@ :@@ printf("error\n"); return0; } if(a[i]==b[i]@@ )@@ sum++; } if((@@ double)@@ sum/@@ len1@@ >@@ rate@@ )@@ printf("yes@@ \n@@ ");@@ else@@ printf("no\n"); return0; }  
c -1
h -1
int@@ month@@ [2][@@ 12]={31,@@ 28@@ ,31,30,31,30@@ ,31,30@@ ,31@@ ,31,30@@ ,31@@ , 31,@@ 29@@ ,31,30,31,30@@ ,31,30@@ ,31@@ ,31,30@@ ,31@@ }; intmain() { intyear,@@ monthq@@ ,@@ day; cin>>year>>@@ monthq@@ >>@@ day; int@@ ans=0; for(inti=1;i<@@ monthq@@ ;i++) { int@@ xx@@ ; if(year%@@ 400==0||(@@ year%4==0&&year%100!=0@@ )) xx@@ =1; else@@ xx@@ =0; ans@@ +=@@ month@@ [@@ xx@@ ]@@ [i-1]; } ans@@ +=@@ day; cout<<ans@@ <<endl; return0; }  
c -1
h -1
0

intmain() { intn,i,@@ m,@@ j; cin>>n; inta[20000]; for(i=0;i<=n-1;i++) { cin>>m; for(j=0;j<i;j++) { if(a[j]==@@ m) { break; } } if(j==i) { a[i]=@@ m; } else { n=@@ n-1; i@@ =i-1; } } cout<<a[0]; for(i=1;i<=n-1;i++) { cout<<""<<a[i]; } return0; }  
c -1
h -1
intmain() { intn,i,@@ x0@@ ,@@ y0@@ ,@@ x1,@@ y1@@ ; int@@ pixel@@ ; scanf("%d",&n); for(i=0;i<n@@ *@@ n;i++) { scanf("%d",&@@ pixel@@ ); if(@@ pixel@@ ==0) { x0@@ =i@@ /n; y0@@ =i@@ %@@ n; break; } } for(i@@ =i+1@@ ;i<@@ n*@@ n;i++) { scanf("%d",&@@ pixel@@ ); if(@@ pixel@@ ==0) { x1@@ =i@@ /n; y1@@ =i@@ %@@ n; } } printf("%d\n",@@ (@@ x1@@ -@@ x0@@ -1)*(@@ y1@@ -@@ y0@@ -1)); return0; }  
c -1
h -1
0

intmain(){ inta[@@ MAX@@ ],@@ n,k,@@ i,j,@@ l=0; scanf("%d%d",&n,&k); for(i=0;i<n;i++){ scanf("%d",&a[i]); } for(i=0;i<(@@ n-1)@@ ;i++){ for(j@@ =(@@ n-1)@@ ;j>i@@ ;j--){ if(k==@@ a[i]+@@ a[j]@@ ){ printf("yes"); l@@ =1; break;} } if(l@@ ==1) break; } if(i==@@ (n-1@@ )) printf("no"); return0; }  
c -1
h -1
intmain() { int@@ id,@@ chinese@@ ,@@ math@@ ,@@ total; intn,i,@@ a=0,b=0,@@ c=0,@@ x=0,@@ y=0,@@ z=0; scanf("%d",&n); for(i=1;i<=n;i++) { scanf("%d%d%d",&@@ id,&@@ chinese@@ ,&@@ math); total=@@ chinese+@@ math; if(@@ total>@@ a) { c=@@ b; z=@@ y; b=@@ a; y=@@ x; a=@@ total; x=@@ id; } elseif(@@ total@@ <=@@ a@@ &&@@ total>@@ b) { c=@@ b; z=@@ y; b=@@ total; y=@@ id; } elseif(@@ total@@ <=@@ b@@ &&@@ total>@@ c) { c=@@ total; z=@@ id; } } printf("%d%d\n",@@ x,@@ a); printf("%d%d\n",@@ y,@@ b); printf("%d%d\n",@@ z,@@ c); return0; }  
c -1
h -1
0

intmain(intargc,char*argv[]) { intyear,month,@@ date; intm=0,@@ n=0; scanf("%d%d%d",&@@ year,@@ &@@ month,@@ &@@ date@@ ); if(month==1) { n=@@ date; } m=m+@@ 31; if(month==2) { n=@@ m+@@ date; } if((year%4==0&&year%100!=0)||(year%400==0)) { m=m+@@ 29; } else { m=m+@@ 28; } if(month==3) { n=@@ m+@@ date; } m=m+@@ 31; if(month==@@ 4) { n=@@ m+@@ date; } m=m+@@ 30; if(month==@@ 5) { n=@@ m+@@ date; } m=m+@@ 31; if(month==@@ 6) { n=@@ m+@@ date; } m=m+@@ 30; if(month==@@ 7) { n=@@ m+@@ date; } m=m+@@ 31; if(month==8) { n=@@ m+@@ date; } m=m+@@ 31; if(month==@@ 9) { n=@@ m+@@ date; } m=m+@@ 30; if(month==@@ 10) { n=@@ m+@@ date; } m=m+@@ 31; if(month==@@ 11) { n=@@ m+@@ date; } m=m+@@ 30; if(month==@@ 12) { n=@@ m+@@ date; } printf("%d\n",n); return0; }  
c -1
h -1
intmain() { inta[@@ 15],@@ count=0; inti,j,k; for(i=0;;i++) { cin>>a[i]; if(a[0]==-1) break; else@@ if(a[i]==0) { for(j=0;j<i;j++) for(k=0;k<i;k++) { if(a[k@@ ]==@@ a[j]@@ *2) count++; } cout<<count<<endl; count=0; i=@@ -1; } } return0; }  
c -1
h -1
0

intf@@ (intm,int@@ min); intmain() { intn,m,@@ i; scanf("%d",&n); for(i=0;i<n;i++) { scanf("%d",&m); printf("%d\n",@@ f(@@ m,@@ 2)); } return0; } intf@@ (intm,int@@ min) { intcount@@ =1,i; if(m==1) return1; elseif(m==@@ 2) return1; else { for(i=min@@ ;i<=sqrt(@@ m@@ );i++) { if(m@@ %i==0) { count+=@@ f(@@ m@@ /i,i); } } returncount; } }  
c -1
h -1
intmain(){ inta[@@ 1000],@@ i,j,@@ n,@@ k; while(1) { n=0; cin>>@@ a[1]; if(@@ a[1]@@ !=-1) { for(i=2@@ ;@@ a[i-1]@@ !=0;i++) cin>>a[i]; for(j=1;j<@@ i-1;j++) for(k=1;k<@@ i-1;k++) if(a[k@@ ]==2*@@ a[j]) n=n+1; cout<<n<<endl; } elsebreak; } return0;}  
c -1
h -1
0

intmain() { intn,k; intc[@@ 1000]; inti=0,j=0,@@ A@@ =0; scanf("%d%d",&n,&k); while(i<n) { scanf("%d",&@@ c[i]); i++; } i=0; while(i<n) { j@@ =i+1; while(j@@ <n) { if(c@@ [i]+@@ c@@ [j]==@@ k)@@ A@@ =1; j++; } i++; } if(A@@ ==1)@@ printf("yes"); elseprintf("no"); return0; }  
c -1
h -1
intmain() { double@@ a; inti,j=0,@@ b,@@ c; charzfc@@ [2][@@ 501]; scanf("%lf",&a); for(i=0;i<2@@ ;i++) { scanf("%s",@@ zfc@@ [i]); } b=strlen(@@ zfc@@ [0]); c=strlen(@@ zfc@@ [1]); if(b@@ !=@@ c) { printf("error"); return0; }else { for(i=0;@@ zfc[0]@@ [i]!='\0';i++) { if((@@ zfc[0]@@ [i]!='A'&&@@ zfc[0]@@ [i]!='T'&&@@ zfc[0]@@ [i]!='C'&&@@ zfc[0]@@ [i]!='G')||(@@ zfc[1]@@ [i]!='A'&&@@ zfc[1]@@ [i]!='T'&&@@ zfc[1]@@ [i]!='C'&&@@ zfc[1]@@ [i]!='G')@@ ) { printf("error"); return0; } elseif(@@ zfc[0]@@ [i]==@@ zfc[1]@@ [i]) { j++; } } } if((@@ double)@@ 1.0*@@ j@@ /@@ strlen(@@ zfc[0]@@ )>@@ a) {@@ printf("yes"); }else { printf("no"); } return0; }  
c -1
h -1
0

structpatient { charid[10]; int@@ old@@ ; }@@ pt@@ [100]; main() { intn,i,j,k,@@ e,@@ h; int@@ yx@@ [100],@@ byx@@ [100]; scanf("%d",&n); j=0; k=0; for(i=0;i<n;i++){ scanf("%s%d",&@@ pt@@ [i].id,&@@ pt@@ [i].@@ old@@ ); if(@@ pt@@ [i].@@ old@@ >=60){ yx@@ [j]@@ =i; j++; } else{ byx@@ [k]=@@ i; k++; } } for(i=0;i<j@@ ;i++){ for(h=0;h@@ <j@@ -1;@@ h@@ ++){ if(@@ pt@@ [@@ yx@@ [h@@ ]@@ ].@@ old@@ <@@ pt@@ [@@ yx@@ [h@@ +1@@ ]@@ ].@@ old@@ ){ e=@@ yx@@ [h@@ ]; yx@@ [h@@ ]=@@ yx@@ [h@@ +1]; yx@@ [h@@ +1]=@@ e; } } } for(i=0;i<j@@ ;i++){ printf("%s\n",@@ pt@@ [@@ yx@@ [i]@@ ].id); } for(i=0;i<k;i++){ printf("%s\n",@@ pt@@ [@@ byx@@ [i]@@ ].id); } }  
c -1
h -1
intmain() { inta[@@ 20002@@ ],b[@@ 20001@@ ],@@ n,@@ i,j; cin>>n; for(i=1;i<=n;i++) cin>>a[i]; for(i=1;i<=n@@ +1;i++) b[i]=0; a[n@@ +1@@ ]=0; for(i=2;i<=n;i++) { for(j=1;j<i;j++) if(a[i]==@@ a[j])@@ a[i]=0; } for(i=1;i<=n;i++) { for(j=i+1;j<=@@ n+1@@ ;j++) b[i]@@ +=@@ a[j]; } for(i=1;i<=n;i++) { if(a[i]@@ !=0&&@@ b[i]@@ !=0) cout<<a[i]<<""; else@@ if(a[i]@@ !=0&&@@ b[i]@@ ==0) cout<<a[i]@@ <<endl; } return0; }  
c -1
h -1
0

voidmain() { inti,j,k,n,@@ row,col,@@ c@@ [100][100],@@ result@@ [100]={0}; scanf("%d",&n); for(i=0;i<n;i++) { scanf("%d%d",&row,&col); for(j=0;j<row@@ ;j++) { for(k=0;k<col@@ ;k++) { scanf("%d",@@ *(@@ c@@ +j)+@@ k); if(k@@ ==0||@@ k==@@ col-1@@ ||j@@ ==0||j==@@ row@@ -1) result@@ [i]@@ +=@@ *(*(@@ c@@ +j)+@@ k); } } } for(i=0;i<n;i++) printf("%d\n",@@ result@@ [i]); }  
c -1
h -1
int@@ maxii@@ (intn,@@ int*@@ a) { intk,i,@@ s; k=1; for(i=1;i<n;i++) { if((@@ a[i]@@ <=@@ a[0]@@ )&&(@@ maxii@@ (@@ n-@@ i,@@ a@@ +i)@@ >@@ (k@@ -1)@@ )) k=@@ maxii@@ (@@ n-@@ i,@@ a@@ +i)@@ +1; } return@@ k; } main() { intn@@ ,*@@ k,i,j,@@ c; inta[@@ 25]; scanf("%d",&n); for(i=0;i<n;i++) scanf("%d",&a[i]); k=@@ (int*)malloc(n*sizeof(int)); c=1; for(j=0;j<n;j++) { if(c@@ <@@ maxii@@ (n@@ -j@@ ,@@ a@@ +j@@ )) c=@@ maxii@@ (n@@ -j@@ ,@@ a@@ +j); } printf("%d",@@ c); }  
c -1
h -1
0

int@@ g=0; void@@ s@@ (intn,int@@ z) { for(inti=2;i<=@@ sqrt(n@@ );i++) { if(n@@ %i==0&&@@ i>=@@ z) { g=@@ g@@ +1; s@@ (n/i,i); } } } intmain() { inta,b; cin>>a; while(cin>>@@ b) { for(intj=@@ 2@@ ;j<=@@ sqrt(@@ b@@ );j++) { if(b@@ %j==0) { g=@@ g@@ +1; s@@ (@@ b@@ /j,j); } } cout<<@@ g@@ +1<<endl; g=0; } return0; }  
c -1
h -1
intmain() { int@@ an@@ [100][100],@@ i,j,@@ n,@@ s,@@ a,b,@@ flag=0; scanf("%d",&n); for(i=0;i<n;i++) { for(j=0;j<n;j++) { scanf("%d",&@@ an@@ [i][j]); } } for(i=0;i<n;i++) { for(j=0;j<n;j++) { if(@@ an@@ [i][j]==0) { flag=1; break; } } if(flag==1) { break; } } flag=0; for(@@ a=@@ n-1;@@ a@@ >=0@@ ;a@@ --) { for(@@ b=@@ n-1;@@ b@@ >=0;@@ b@@ --) { if(@@ an@@ [a@@ ][b@@ ]==0) { flag=1; break; } } if(flag==1) { break; } } s=(@@ b@@ -j@@ -1)@@ *(a@@ -i@@ -1); printf("%d",s); return0; }  
c -1
h -1
0

voidmain() { intn,@@ l,@@ i,j,@@ x; scanf("%d",&n); l=0; inta[20000]; for(i=0;i<n;i++) scanf("%d",&a[i]); for(j=0;j<n;j++) { for(i=@@ (j@@ +1)@@ ;i<n;i++) { if(a[j]==a[i]) a[i]@@ ='@@ *'@@ ; } } if(a[@@ n-1@@ ]!=@@ '*@@ ') { for(i=0;i<n-1;i++) { if(a[i]!=@@ '*@@ ') printf("%d",a[i]); } printf("%d",a[@@ n-1]); } else { for(i=n-1@@ ;i>0;i--) { if(a[i]==@@ '*@@ ')@@ l=l@@ +1; elsebreak; } for(j=0;j<@@ n-@@ l@@ -1;j++) { if(a[j]!=@@ '*@@ ') printf("%d",@@ a[j]); } printf("%d",a[@@ n-@@ l@@ -1]); } }  
c -1
h -1
intmain() { inta[100][100]; inti,j,@@ l,@@ m,n,@@ s; scanf("%d",&n); for(i=0;i<n;i++) {@@ for(j=0;j<n-1;j++) scanf("%d",&a[i][j]); scanf("%d",&a[i]@@ [n-1@@ ]@@ );} m=0; for(i=0;i<n;i++) {@@ for(j=0;j<n;j++) {@@ if(a[i][j]==0) {m@@ ++@@ ;break; } } } l=0; for(j=0;j<n;j++) for(i=0;i<n;i++) {@@ if(a[i][j]==0) {@@ l++; break;} } s=(@@ l@@ -2)*(@@ m@@ -2); printf("%d",s); }  
c -1
h -1
0

intmain() { struct@@ books { int@@ book@@ ; charwriter@@ [20]; }@@ bk@@ [1000]; intn,i,j,@@ m,@@ max,@@ k,@@ maxw@@ =0,@@ flag=0,@@ a[@@ 26]={0}; scanf("%d",&n); for(i=0;i<n;i++) { scanf("%d%s",&@@ bk[i].@@ book@@ ,@@ bk[i].@@ writer); } for(i=0;i<n;i++) { m=strlen(@@ bk[i].@@ writer); for(j=0;j<m;j++) { k=@@ bk[i].@@ writer@@ [j]; a[k@@ -65]++; } } max=@@ a[0]; for(i=1;i<26;i++) { if(a[i]>max) { max=a[i]; maxw@@ =i; } } printf("%c\n%d\n",@@ maxw@@ +65@@ ,max); for(i=0;i<n;i++) { m=strlen(@@ bk[i].@@ writer); for(j=0;j<m;j++) { if(@@ maxw@@ +65@@ ==@@ bk[i].@@ writer@@ [j]) printf("%d\n",@@ bk[i].@@ book@@ ); } } return0; }  
c -1
h -1
intmain(){ structpatient{ charid@@ [11]; intage; }@@ patients@@ [100],@@ old@@ [100],@@ young@@ [100],@@ jh@@ ; intn,i,j,@@ d,@@ k; j@@ =-1; d@@ =-1; scanf("%d",&n); for(i=0;i<n;i++){ scanf("%s%d",@@ patients@@ [i].id,&@@ patients@@ [i].age); } for(i=0;i<n;i++){ if(@@ patients@@ [i].age>=60){ d++; old@@ [d@@ ]=@@ patients@@ [i]; }else{ j++; young@@ [j]=@@ patients@@ [i]; } } for(k=1;k<=@@ d@@ +1@@ ;k++){ for(i=0;i<d@@ ;i++){ if(old@@ [i].age@@ <@@ old@@ [i+1@@ ].age){ jh@@ =@@ old@@ [i]; old@@ [i]=@@ old@@ [i+1]; old@@ [i+1]=@@ jh@@ ; } } } for(i=0;i<=@@ d@@ ;i++){ printf("%s\n",old@@ [i].id); } for(i=0;i<=@@ j@@ ;i++){ printf("%s\n",@@ young@@ [i].id); } return0; }  
c -1
h -1
0

intf(inta,int@@ min) { intj,@@ num; if(a<@@ min@@ )return0; num@@ =1; for(j=@@ min@@ ;j<@@ a@@ ;j++) if(a%@@ j@@ ==0)@@ num=num+@@ f(@@ a/@@ j@@ ,j); returnnum; } intmain() { intn,i,@@ out@@ ,@@ a; cin>>n; for(i=0;i<n;i++) { cin>>a; out@@ =@@ f(a,@@ 2); cout<<@@ out@@ <<endl; } return0; }  
c -1
h -1
intmain() { chars1@@ [257],@@ s2@@ [257],@@ s3@@ [257]; char*@@ p; gets(@@ s1); gets(@@ s2); gets(@@ s3); p=strstr(@@ s1,@@ s2); if(p@@ ){ int@@ i=@@ p@@ -@@ s1@@ ; s1@@ [i]@@ ='\0'; printf("%s",@@ s1); printf(@@ s3); printf("%s\n",@@ p+@@ strlen(@@ s2@@ )); } else{ puts(@@ s1); } return0; }  
c -1
h -1
0

intmain() { inta[@@ 100000]; inti,@@ I@@ ,@@ n,@@ j; intk=0; scanf("%d",&n); for(i=0;i<n;i++) scanf("%d",&a[i]); for(@@ I@@ =1;@@ I@@ <n;@@ I@@ ++){ for(i=0;i<@@ I@@ ;i++){ if(a[@@ I@@ ]==@@ a[i]@@ ){ a[@@ I@@ ]=0; k++; break; } } } for(i=0;i<n;i++){ if(a[i]@@ ==0){ for(j=i+1;j<n;j++){ if(a[j]@@ !=0){ a[i]=a[j]; a[j]=0; break; } } } } for(i=0;i<n@@ -k@@ -1;i++) printf("%d",a[i]); printf("%d",a[@@ n-@@ k@@ -1]); return0; }  
c -1
h -1
intmain(){ intn=0,@@ i=0,@@ j=0; cin>>n; int@@ sum[@@ n]; structstudent{ int@@ stuid@@ ; int@@ chin@@ ; intmath; }stu[@@ n@@ ],@@ t; for(i=0;i<n;i++){ cin>>@@ stu[i].@@ stuid@@ >>stu[i].@@ chin@@ >>stu[i].@@ math; sum[i]=@@ stu[i].@@ chin@@ +stu[i].@@ math; } for(i=0;i<3;i++) for(j=0;j<n-1;j++) if((@@ stu[j].@@ chin@@ +@@ stu[j].@@ math@@ )@@ >=@@ (stu@@ [j+1].@@ chin +@@ stu[j+1].@@ math@@ )){ t=@@ stu@@ [j]; stu@@ [j]=@@ stu@@ [j+1]; stu@@ [j+1]=t; } for(i=n-1;i@@ >@@ n-@@ 4@@ ;i--) cout<<@@ stu[i].@@ stuid@@ <<""<<@@ stu[i].@@ chin@@ +stu[i].@@ math@@ <<endl; return0; }  
c -1
h -1
0

intnum=0; voidf@@ (int@@ k,int@@ n) { inti,@@ flag=0; for(i=k@@ ;i<=n;i++) { if(n%i==0) { f(@@ i,@@ n@@ /i); flag=1; } } if((@@ flag@@ ==0&&@@ k@@ <=@@ n)@@ ||@@ n@@ ==1) num++; } intmain() { inti,n,@@ m; cin>>m; for(i=1;i<=m;i++) { cin>>n; f(@@ 2,@@ n); cout<<num<<endl; num=0; } return0; }  
c -1
h -1
int@@ n1,n2; int@@ num1@@ [100],@@ num2@@ [100]; void@@ in@@ (intn,@@ inta[]) { for(inti=0;i<n;i++) cin>>a[i]; } void@@ com@@ (intn,@@ inta[]) { inttemp; for(inti=0;i<@@ n-1;i++) for(intj=0;j<@@ n@@ -i-1;j++) if(a[j]>a[j+1]) { temp=a[j]; a[j]=a[j+1]; a[j+1]=temp; } } intmain() { cin>>@@ n1@@ >>@@ n2; in@@ (@@ n1,@@ num1@@ ); com@@ (@@ n1,@@ num1@@ ); in@@ (@@ n2,@@ num2@@ ); com@@ (@@ n2,@@ num2@@ ); for(inti=0;i<@@ n1@@ ;i++) cout<<@@ num1@@ [i]@@ <<''; for(intj=0;j<@@ n2@@ -1;j++) cout<<@@ num2@@ [j]@@ <<''; cout<<@@ num2@@ [@@ n2@@ -1]@@ <<endl; return0; }  
c -1
h -1
0

intmain() { doublen,@@ m=0; char@@ dna1@@ [@@ MAX@@ +1],@@ dna2@@ [@@ MAX@@ +1]; int@@ len1@@ =0,@@ len2@@ =0,@@ count=0,@@ i=0; scanf("%lf%s%s",&@@ n,@@ dna1@@ ,@@ dna2); len1=strlen(@@ dna1); len2=strlen(@@ dna2); if(len1!=@@ len2){ printf("error"); return0; } if(len1@@ ==@@ len2){ for(i=0;i<len1@@ -1;i++){ if((@@ dna1@@ [i]!='A'&&@@ dna1@@ [i]!='T'&&@@ dna1@@ [i]!='C'&&@@ dna1@@ [i]!='G')||(@@ dna2@@ [i]!='A'&&@@ dna2@@ [i]!='T'&&@@ dna2@@ [i]!='C'&&@@ dna2@@ [i]!='G')){ printf("error"); return0; } elseif(@@ dna1@@ [i]!=@@ dna2@@ [i]){ count++; } } m@@ =(double)@@ count@@ /@@ len1; if((@@ 1@@ -@@ m)@@ >=@@ n){ printf("yes"); } if((@@ 1@@ -@@ m)@@ <@@ n){ printf("no"); } } return0; }  
c -1
h -1
intmain() { intN@@ =0,@@ n=0,@@ m=0,@@ i=0,j=0,@@ k=0; cin>>@@ N; for(i=0;i<N;i++) { intsum=0; inta[@@ 102@@ ][@@ 102@@ ]; int@@ *p@@ =*@@ a; cin>>n>>m; for(j=0;j<n;j++) { for(k=0;k<@@ m;k++) { cin>>a[j]@@ [k]; } } for(k=0;k<@@ m@@ ;k@@ ++,@@ p++) sum=sum+*@@ p; for(@@ p=p+@@ 101@@ ,j@@ =1@@ ;j<n;j++) sum=sum+*@@ p,@@ p=p+@@ 102@@ ; for(@@ p=p@@ -@@ 103@@ ,@@ k=@@ m@@ -2@@ ;k>=0@@ ;k@@ --@@ ,@@ p@@ --) sum=sum+*@@ p; for(@@ p=p@@ -@@ 101@@ ,j=@@ n-2@@ ;j>0@@ ;j--@@ ,@@ p=p@@ -@@ 102@@ ) sum=sum+*@@ p; cout<<sum<<endl; } return0; }  
c -1
h -1
0

inta[@@ 10000@@ ],b[@@ 10000],@@ n,@@ m; void@@ duru@@ () { inti,j; cin>>n>>m; for(i=0;i<n;i++)@@ cin>>a[i]; for(j=0;j<m@@ ;j++)@@ cin>>@@ b[j]; } voidsort@@ () { int@@ t1@@ ,@@ t2@@ ,@@ i,j; for(i=0;i<n-1;i++) { for(j=0;j<n-1-i;j++) { if(a[j]>a[j+1]) { t1@@ =@@ a[j]; a[j]=a[j+1]; a[j+1]=@@ t1@@ ; } } } for(i=0;i<m-1;i++) { for(j=0;j<@@ m-1@@ -i;j++) { if(b[j]>b[j+1]) { t2@@ =@@ b[j]; b[j]=b[j+1]; b[j+1]=@@ t2@@ ; } } } } voidhebing@@ () { inti; for(i=n@@ ;i<@@ n+m;i++) { a[i]=b[i-@@ n]; } } void@@ put@@ () { inti; for(i=0;i<n@@ +m@@ -1;i++) cout<<a[i]@@ <<''; cout<<a[@@ n+@@ m@@ -1]@@ <<endl; } intmain() { duru@@ (); sort@@ (); hebing@@ (); put@@ (); return0; }  
c -1
h -1
main() { intk,i,@@ a[@@ 25@@ +@@ 10],@@ n[@@ 25@@ +@@ 10],@@ s; scanf("%d",&k); for(i=0;i<k;i++) { scanf("%d",&a[i]); n@@ [i]=1; } for(i=k-2;i>=0;i--) { intj; for(j=i+1;j<=@@ k@@ -1;j++) { if((@@ a[i]@@ >=@@ a[j]@@ )&&(@@ n[i]@@ <=@@ n@@ [j]@@ ))@@ n[i]=@@ n@@ [j]+1; } } s=@@ n@@ [0]; for(i=0;i<k;i++) { if(n@@ [i]>@@ s)@@ s=@@ n[i]; } printf("%d",s); return0; }  
c -1
h -1
0

intmain(){ inti,j,@@ u@@ ; inta[@@ 101][101]; intr,@@ c; scanf("%d%d",&@@ r@@ ,&c); for(i=0;i<@@ r@@ ;i++){ for(j=0;j<@@ c@@ ;j++){ scanf("%d",&a[i][j]); } } i=0; j=0; u@@ =0; for(i=0;@@ (i@@ <@@ r@@ )&&(@@ u@@ !=@@ c@@ );i++){ if((i@@ ==0)&&(@@ j@@ ==0)@@ ){ printf("%d",@@ a[i]@@ [j]); } else{ printf("\n%d",@@ a[i]@@ [j]); } if((i@@ !=@@ r@@ -1)@@ &&(@@ j@@ !=0@@ )){ j--; } else{ u@@ ++; j=@@ u@@ ; i@@ =-1; } } i=1; u@@ =1; for(j=@@ c@@ -1;@@ (j@@ >=0@@ )&&(@@ u@@ <@@ r@@ )@@ ;j--){ printf("\n%d",@@ a[i]@@ [j]); if((@@ j@@ !=0@@ )&&(i@@ !=@@ r@@ -1)@@ ){ i++; } else{ u@@ ++; i=@@ u@@ ; j=@@ c; } } return0; }  
c -1
h -1
intmain() { intk,@@ n,m,@@ i@@ ,*p; scanf("%d",&k); for(i=0;i<k;i++) { scanf("%d%d",&m,&n); intj,@@ sum=0; p=@@ (int*)malloc(sizeof(int)@@ *@@ m@@ *n); for(j=0;j<m@@ *@@ n;j++) { scanf("%d",p@@ +j); if(j@@ <n@@ ||(@@ j@@ <@@ n*@@ m@@ &&j@@ >=@@ (m@@ -1)*@@ n)@@ ||j@@ %n@@ ==0@@ ||(@@ j@@ +1)@@ %n@@ ==0) sum+=@@ *(p@@ +j); } printf("%d\n",sum); } }  
c -1
h -1
0

intmain() { intf(inta,int@@ min); intn,a[@@ 150@@ ],@@ i,@@ b; scanf("%d",&n); for(i=0;i<n;i++) { scanf("%d",&a[i]); } for(i=0;i<n;i++) { b=@@ f(@@ a[i],@@ 2); printf("%d\n",@@ b); } return0; } intf(inta,int@@ min) { int@@ result@@ =1,i; if(a<@@ min) { return0; } for(i=min@@ ;i<@@ a;i++) { if(a%i==0) { result+=@@ f(a@@ /i,i); } } returnresult; }  
c -1
h -1
intmain() { intn,@@ d,@@ i,j,@@ l; struct@@ a { charname@@ [27]; intc; }@@ m@@ [1000]; struct@@ b { intnum,@@ book[1000]; char@@ t; }; struct@@ b@@ author@@ [27]; for(i=1;i<=@@ 26;i++) { author@@ [i].@@ t@@ =i+@@ 64@@ ; } scanf("%d",&n); for(i=1;i<=n;i++) { scanf("%d",&@@ m@@ [i].@@ c); scanf("%s",@@ m@@ [i].@@ name); } for(i=1;i<=n;i++) { l=strlen(@@ m@@ [i].@@ name); for(j=0;j<=@@ l@@ -1;j++) { d=@@ m@@ [i].name@@ [j]@@ -@@ 64@@ ; author@@ [d@@ ].@@ num++; author@@ [d@@ ].@@ book[@@ author@@ [d@@ ].num@@ ]=@@ m@@ [i].@@ c; } } for(i=1;i<=@@ 25;i++) { if(@@ author@@ [i].@@ num@@ >@@ author@@ [i+1].@@ num) author@@ [i+1]=@@ author@@ [i]; } printf("%c\n",@@ author@@ [26@@ ].@@ t); printf("%d\n",@@ author@@ [26@@ ].@@ num); for(i=1;i<=@@ author@@ [26@@ ].@@ num;i++) { printf("%d\n",@@ author@@ [26@@ ].@@ book@@ [i]); } return0; }  
c -1
h -1
0

intmain() { intn,k,i,j,@@ z,@@ sum=0,@@ x=0; intsz[1000]; scanf("%d%d",&n,&k); for(i=0;i<n;i++){ scanf("%d",&@@ sz[i]@@ );} for(j=0;j<n-1;j++) for(z@@ =j+1@@ ;@@ z@@ <n;@@ z++) { sum=@@ sz@@ [j]+@@ sz[@@ z@@ ]; if(sum@@ ==k) {@@ x@@ ++;@@ }} if(x@@ ==0)@@ printf("no"); elseif(x@@ !=0)@@ printf("yes"); return0; }  
c -1
h -1
int@@ kMis@@ ; int@@ Mis@@ [30]; int@@ Array@@ [30]; void@@ Lanjie@@ (int@@ iM@@ ) { for(inti=@@ iM@@ ;i<@@ kMis@@ ;i++) { if(@@ Mis@@ [@@ iM@@ -1]@@ >=@@ Mis@@ [i]@@ &&@@ Array@@ [@@ iM@@ -1]@@ <=@@ Array@@ [i]) Array@@ [@@ iM@@ -1@@ ]=@@ Array@@ [i]@@ +1; } if(@@ iM@@ >1@@ )@@ Lanjie@@ (@@ iM@@ -1); return; } intmain() { cin>>@@ kMis@@ ; for(inti=0;i<@@ kMis@@ ;i++) cin>>@@ Mis@@ [i]; for(inti=0;i<@@ kMis@@ ;i++) { Array@@ [i]=1; } Lanjie@@ (@@ kMis@@ ); int@@ MaxLen@@ =@@ -1; for(inti=0;i<@@ kMis@@ ;i++) if(@@ MaxLen@@ <@@ Array@@ [i])@@ MaxLen@@ =@@ Array@@ [i]; cout<<@@ MaxLen@@ <<endl; }  
c -1
h -1
0

intmain(){ char@@ mid@@ ,@@ a[100],b[100]; inti,j,@@ stop@@ ,@@ lengtha@@ ,@@ lengthb@@ ,@@ dif@@ ,@@ error@@ ; double@@ r,@@ odd@@ ; dif@@ =0; error@@ =0; scanf("%lf",&@@ odd@@ ); getchar(); gets(a); gets(b); lengtha@@ =strlen(a); lengthb@@ =strlen(b); for(i=0;i<@@ lengtha@@ ;i++){ if(a[i]==b[i]){ dif@@ ++; } if((a[i]!='@@ A'&&a[i]!='T'&&a[i]!='G'&&a[i]!='@@ C')||(@@ b[i]!='A'&&b[i]!='T'&&b[i]!='G'&&b[i]!='@@ C')){ error@@ ++; } } r@@ =1.0*@@ dif@@ /@@ lengtha@@ ; if(@@ error@@ >0@@ ||@@ lengtha@@ !=@@ lengthb@@ ){ printf("error"); }else{ if(r@@ >@@ odd@@ ){ printf("yes"); }else{ printf("no"); } } scanf("%d",&@@ stop@@ ); return0; }  
c -1
h -1
voidmain() { intn; inti,j; intk=0; charstr@@ [100][@@ 10@@ ]={0}; char@@ str1@@ [100][@@ 10@@ ]={0}; char@@ str2@@ [100][@@ 10@@ ]={0}; inttemp; char@@ t@@ [10@@ ]={0}; inta[100]; int@@ a1@@ [100]={0}; int@@ a2@@ [100]={0}; scanf("%d",&n); for(i=0;i<n;i++) scanf("%s%d",@@ str@@ [i],&@@ a[i]); for(i=0;i<n;i++) { strcpy(@@ str1@@ [i],@@ str[i]); a1@@ [i]=@@ a[i]; } for(i=0;i<n;i++) if(a[i]@@ >=60) { strcpy(@@ str2@@ [k],@@ str[i]); a2@@ [k]=@@ a[i]; k=k+1; } for(j=1;j<@@ k;j++) for(i=0;i<@@ k@@ -j;i++) if(@@ a2@@ [i]<@@ a2@@ [i+1]) { temp=@@ a2@@ [i]; a2@@ [i]=@@ a2@@ [i+1]; a2@@ [i+1]=@@ temp; strcpy(@@ t,@@ str2@@ [i]); strcpy(@@ str2@@ [i],@@ str2@@ [i+1]); strcpy(@@ str2@@ [i+1],@@ t); } for(i=0;i<k;i++) printf("%s\n",@@ str2@@ [i]); for(i=0;i<n;i++) if(@@ a1@@ [i]@@ <60) printf("%s\n",@@ str1@@ [i]); }  
c -1
h -1
0

intmain() { chars[256],@@ a[@@ 256],b[@@ 256],c[256]; inti,j,@@ m,n,@@ k,@@ t,@@ q=0,@@ p=0; gets(s); gets(a); gets(b); m@@ =strlen(s); n@@ =strlen(a); k@@ =strlen(b); for(i=0;i<=@@ m@@ -@@ n;i++) { for(j=i;j<i+@@ n;j++) { if(s@@ [j]==@@ a@@ [j-i@@ ]) p++; else break; } if(p==@@ n) { q++; t=i; for(j=0;j<=@@ t@@ -1;j++) c[j]=@@ s[j]; for(j=@@ t@@ ;j<@@ t@@ +k@@ ;j++) c[j]=@@ b@@ [j-i@@ ]; for(j=@@ t@@ +k@@ ;j<@@ m@@ -@@ n+@@ k;j++) c[j]=@@ s[@@ n@@ +j@@ -k@@ ]; c[m@@ -@@ n+@@ k@@ ]='\0'; puts(@@ c); break; } p=0; } if(q@@ ==0) puts(@@ s); return0; }  
c -1
h -1
int@@ num1@@ [@@ 1000]={0},@@ num2@@ [@@ 1000]={0},@@ m,n; void@@ gets(@@ ) { inti,j; cin>>m>>n; for(i=0;i<m;i++) cin>>@@ num1@@ [i]; for(j=0;j<n;j++) cin>>@@ num2@@ [j]; } voidpaixu@@ () { inti,j,@@ a=0,@@ b=0; for(i=0;i<m-1;i++) { for(j=0;j<@@ m-1@@ -i;j++) { if(@@ num1@@ [j]>@@ num1@@ [j+1]) { a=@@ num1@@ [j]; num1@@ [j]=@@ num1@@ [j+1]; num1@@ [j+1]=@@ a; } } } for(i=0;i<n-1;i++) { for(j=0;j<n-1-i;j++) { if(@@ num2@@ [j]>@@ num2@@ [j+1]) { a=@@ num2@@ [j]; num2@@ [j]=@@ num2@@ [j+1]; num2@@ [j+1]=@@ a; } } } } voidhebing@@ () { inti; for(i=0;i<n;i++) num1@@ [m@@ +i]=@@ num2@@ [i]; } voidshuchu@@ () { inti; cout<<@@ num1@@ [0]; for(i=1;i<@@ m+n;i++) cout<<""<<@@ num1@@ [i]; } intmain() { gets@@ (); paixu@@ (); hebing@@ (); shuchu@@ (); return0; }  
c -1
h -1
0

intmain(){ intb,@@ c,@@ i,@@ j1@@ ,j; doublea,@@ m,n; chars1@@ [100],@@ s2@@ [100]; c=0; scanf("%lf",&a); scanf("%s",@@ s1); scanf("%s",@@ s2); if(strlen(@@ s1@@ )!=strlen(@@ s2@@ )){ printf("error"); return0; }else{ for(i=0;@@ s1@@ [i]!='\0';i++){ if(s1@@ [i]!='A'&&@@ s1@@ [i]!='G'&&@@ s1@@ [i]!='C'&&@@ s1@@ [i]!='T@@ '||@@ s2@@ [i]!='A'&&@@ s2@@ [i]!='G'&&@@ s2@@ [i]!='C'&&@@ s2@@ [i]!='T'){ printf("error"); return0; }else{ if(s1[i]==s2@@ [i]){ c++; } } } } m@@ =1.0*@@ strlen(@@ s1); n@@ =1.0*@@ c; if(n@@ /@@ m@@ >@@ a){ printf("yes"); }else{ printf("no"); } return0; }  
c -1
h -1
voidmain() { chars[@@ 300],@@ a[@@ 300],b[@@ 300]; intn,m,@@ i,j,@@ p; scanf("%s\n@@ %s@@ \n@@ %s",@@ s,@@ a,b); n@@ =strlen(s); m=strlen(a); for(i=0,j@@ =0;i<@@ m,@@ j@@ <@@ n;j++) { if(a[i]==@@ s@@ [j]) { p=@@ j; i++; if(i==@@ m@@ )break; } else@@ i=0; } if(i==@@ m) for(i=0;i<m;i++) s[p@@ -m@@ +1@@ +i]=b[i]; printf("%s\n",@@ s); }  
c -1
h -1
0

intmain(){ intn,k,i,j,@@ sz[@@ 1000]; j=1; scanf("%d%d",&n,&k); for(i=1;i<=n@@ ;i++){@@ scanf("%d",&@@ sz[i]@@ );} for(i=j@@ ;i<@@ n;i++){ if(sz@@ [j]+@@ sz@@ [i+1@@ ]==@@ k){@@ printf("yes");@@ break;} if(i==@@ n-1@@ ){@@ j@@ ++@@ ;i@@ =j;} if(j==@@ n-1){ if(sz@@ [j]+@@ sz@@ [i+1@@ ]==k){ printf("yes"); break; } else{printf("no");} } } return0; }  
c -1
h -1
intmain(){ inti,j,n,@@ a,b; int@@ c1@@ ,@@ c2@@ ,@@ c,@@ k1@@ ,@@ k2@@ ,@@ k; intsz[@@ 1000][1000]; scanf("%d",&n); for(inti=0;i<n;i++){ for(intj=0;j<n;j++){ scanf("%d",&(@@ sz@@ [i][j]@@ )); } } for(inti=0;i<n;i++){ for(intj=0;j<n;j++){ if(sz@@ [i][j]==0){ c1@@ =i; k1@@ =j; } } } for(int@@ a=@@ n-1;@@ a@@ >=0@@ ;a@@ --){ for(int@@ b=@@ n-1;@@ b@@ >=0;@@ b@@ --){ if(@@ sz[a@@ ][b@@ ]==0){ c2@@ =@@ a; k2@@ =@@ b; } } } c=@@ c1@@ -@@ c2@@ -1; k=@@ k1@@ -@@ k2@@ -1; printf("%d",c@@ *@@ k); return0; }  
c -1
h -1
0

intmain() { inti,@@ (*p)@@ [100],@@ row,col,@@ r,@@ c@@ ,j; scanf("%d%d",&row,&col); p=@@ (int@@ (@@ *)@@ [100@@ ])@@ calloc@@ (@@ 100@@ ,@@ 100*sizeof(int)); for(i=0;i<row;i++) for(j=0;j<col;j++) scanf("%d",*(p+i)+j); for(i=0;i<col;i++) { r=0;@@ c=i; while(@@ r@@ <row@@ &&@@ c@@ >=0) {printf("%d\n",@@ *(@@ *(p+@@ r@@ )+@@ c)@@ );@@ r@@ ++;@@ c@@ --@@ ;} } for(i=1;i<row;i++) { r@@ =i;@@ c=@@ col-1; while(@@ r@@ <row@@ &&@@ c@@ >=0) { printf("%d\n",*(@@ *(p+@@ r@@ )+@@ c@@ )); r@@ ++;@@ c@@ --; } } return0; }  
c -1
h -1
structpatient { char@@ No@@ [10]; intage; }@@ grp1@@ [100],@@ grp2@@ [100],@@ grp3@@ [100]; intmain() { intn; scanf("%d",&n); inti; for(i=0;i<n;i++) { scanf("%s%d",&@@ grp1@@ [i].@@ No@@ ,&@@ grp1@@ [i].age); } for(i=0;i<n;i++) { grp2@@ [i].age@@ =-1; grp3@@ [i].age@@ =-1; } for(i=0;i<n;i++) { if(@@ grp1@@ [i].age>=60) { strcpy(@@ grp2@@ [i].@@ No@@ ,@@ grp1@@ [i].@@ No@@ ); grp2@@ [i].age@@ =@@ grp1@@ [i].age; } if(@@ grp1@@ [i].age<60) { strcpy(@@ grp3@@ [i].@@ No@@ ,@@ grp1@@ [i].@@ No@@ ); grp3@@ [i].age@@ =@@ grp1@@ [i].age; } } char@@ y@@ [10]; intx; intk,@@ m; for(k=1;k<@@ n;k++) { for(m=0;m<@@ n-@@ k@@ ;m++) { if(@@ grp2@@ [m@@ ].age@@ <@@ grp2@@ [m@@ +1@@ ].age) { x=@@ grp2@@ [m@@ +1@@ ].@@ age; grp2@@ [m@@ +1@@ ].age=@@ grp2@@ [m@@ ].@@ age; grp2@@ [m@@ ].age=@@ x; strcpy(@@ y,@@ grp2@@ [m@@ +1@@ ].@@ No@@ ); strcpy(@@ grp2@@ [m@@ +1@@ ].@@ No@@ ,@@ grp2@@ [m@@ ].@@ No@@ ); strcpy(@@ grp2@@ [m@@ ].@@ No@@ ,@@ y); } } } for(i=0;i<n;i++) { if(@@ grp2@@ [i].age@@ !=-1) printf("%s\n",@@ grp2@@ [i].@@ No@@ ); } for(i=0;i<n;i++) { if(@@ grp3@@ [i].age@@ !=-1) printf("%s\n",@@ grp3@@ [i].@@ No@@ ); } return0; }  
c -1
h -1
0

int@@ mins@@ (intx,int@@ y){ if(x>@@ y)@@ return@@ y; else@@ return@@ x; } int@@ maxs@@ (intx,int@@ y){ if(x>@@ y) return@@ x; else return@@ y; } intmain(){ introw,col,@@ i,j,@@ n; cin>>row>>col; n=@@ row@@ *@@ col; inta[@@ row][col]; for(i=0;i<row;i++){ for(j=0;j<col;j++){ cin>>a[i][j]; } } for(i=0;i<@@ mins@@ (@@ row,@@ col@@ );i++){ for(j=0;j<=@@ i;j++){ cout<<@@ a[j][i-j@@ ]<<endl; } } if(row@@ >=@@ col@@ ){ for(i=@@ col@@ ;i<@@ row;i++){ for(j=i@@ -col@@ +1@@ ;j<=@@ i;j++){ cout<<@@ a[j][i-j@@ ]<<endl; } } for(i=@@ row@@ ;i<=@@ row+col-2@@ ;i++){ for(j=i@@ -col@@ +1@@ ;j<@@ row@@ ;j++){ cout<<@@ a[j][i-j@@ ]<<endl; } } } else{ for(i=@@ row@@ ;i<@@ col@@ ;i++){ for(j=0;j<row@@ ;j++){ cout<<@@ a[j][i-j@@ ]<<endl; } } for(i=@@ col@@ ;i<=@@ row+col-2@@ ;i++){ for(j=i@@ -col@@ +1@@ ;j<@@ row@@ ;j++){ cout<<@@ a[j][i-j@@ ]<<endl; } } } return0; }  
c -1
h -1
intmain() { intn,m,@@ a[100@@ ]={0},@@ b[100@@ ]={0}; scanf("%d%d",&n,&m); void@@ type@@ (intarray[],int@@ n); voidorder@@ (intarray[],int@@ q); void@@ join@@ (int@@ array1@@ [],int@@ array2@@ [],int@@ q1@@ ,int@@ q2@@ ); voidout@@ (intarray[],int@@ q1@@ ,int@@ q2@@ ); type@@ (a,@@ n); type@@ (b,@@ m); order@@ (a,@@ n); order@@ (b,@@ m); join@@ (a,b,@@ n,@@ m); out@@ (a,n,@@ m); } int@@ type@@ (intarray[],int@@ n) { intc; for(c=0;c@@ <n;@@ c++) { scanf("%d",&@@ array[@@ c@@ ]); } } int@@ order@@ (intarray[],int@@ q) { inti,j,t; for(i=0;i<@@ q@@ -1;i++) { for(j=0;j<@@ q@@ -1;j++) { if(array@@ [j]>=@@ array@@ [j+1]) { t=@@ array@@ [j+1]; array@@ [j+1]=@@ array@@ [j]; array@@ [j]=@@ t; } } } } int@@ join@@ (int@@ array1@@ [],int@@ array2@@ [],int@@ q1@@ ,int@@ q2@@ ) { intk; for(k=0;k<@@ q2@@ ;k++) { array1@@ [@@ q1@@ +k@@ ]=@@ array2@@ [k]; } } int@@ out@@ (intarray[],int@@ q1@@ ,int@@ q2@@ ) { intk; for(k=0;k<@@ q1@@ +@@ q2@@ -1;k++) { printf("%d",@@ array@@ [k]); } printf("%d\n",@@ array[@@ q1@@ +@@ q2@@ -1]); }  
c -1
h -1
0

intmain() { intn; cin>>n; inta[@@ 25]; int@@ rem@@ [25@@ ]={@@ 1@@ }; for(inti=0;i<n;i++) cin>>a[i]; int@@ MMax@@ =0; for(inti=1;i<@@ n;i++) { intmax=0; for(intj=i@@ -1@@ ;j>=0;j--) { if(j<@@ max@@ )break; if(a[j]>=a[i]&&@@ rem@@ [j]@@ >max)max=@@ rem@@ [j]; } rem@@ [i]=@@ max+1; if(@@ rem@@ [i]>@@ MMax@@ )@@ MMax@@ =@@ rem@@ [i]; } cout<<@@ MMax@@ <<endl; return0; }  
c -1
h -1
intmain() { int@@ yn@@ ,@@ mn@@ ,@@ dn@@ ; int@@ result=0; scanf("%d%d@@ %d@@ "@@ ,&@@ yn@@ ,&@@ mn@@ ,&@@ dn@@ ); if(@@ yn@@ %4==0&&@@ yn@@ %100!=0@@ ||@@ yn@@ %@@ 400==0) { int@@ day_of_month@@ [@@ 13]={0,31,@@ 29@@ ,31,30,31,30@@ ,31,30@@ ,31@@ ,31,30@@ ,31@@ }; inti=1; while(i<@@ mn@@ ) { result=result+@@ day_of_month@@ [i]; i++; } result=result+@@ dn@@ ; } else { int@@ day_of_month@@ [@@ 13]={0,31,@@ 28@@ ,31,30,31,30@@ ,31,30@@ ,31@@ ,31,30@@ ,31@@ }; inti=1; while(i<@@ mn@@ ) { result=result+@@ day_of_month@@ [i]; i++; } result=result+@@ dn@@ ; } printf("%d@@ "@@ ,@@ result); return0; }  
c -1
h -1
0

intmain(){ intn,k,i,@@ t,@@ e@@ ,j,@@ h=0; inta[1000]; scanf("%d%d",&n,&k); for(i=0;i<n;i++){ scanf("%d",&a[i]); } for(i=0;i<n;i++){ for(t=0;t@@ <n@@ -i@@ -1;@@ t++){ if(a[@@ t@@ ]<@@ a[t@@ +1@@ ]){ e=@@ a[t@@ +1]; a[t@@ +1@@ ]=a[@@ t@@ ]; a[t@@ ]=@@ e; } } } for(i=0;i<n;i++){ for(j=i+1;j<n;j++){ if(a[i]==a[j]@@ ){ continue; } if(a[i]+a[j]==@@ k){ h@@ ++; } } } if(h@@ ==0){ printf("no"); }else{ printf("yes"); } return0; }  
c -1
h -1
intmain() { intn,i,@@ a[@@ 150@@ ],@@ tmp@@ ,j; chars[@@ 150@@ ][@@ 20],@@ ts@@ [20]; scanf("%d",&n); for(i=1;i<=n;i++) { scanf("%s",@@ s[i]); scanf("%d",&a[i]); } for(i=1;i<n;i++) for(j=1;j<=@@ n@@ -i;j++) if(((@@ a[j+1@@ ]@@ >=60@@ )&&(@@ a[j]@@ <60@@ )) ||(@@ (@@ a[j+1@@ ]>@@ a[j]@@ )&&(@@ a[j]@@ >=60@@ )@@ )) { memcpy@@ (@@ ts@@ ,@@ s[j]@@ ,@@ sizeof(@@ ts@@ )); memcpy@@ (@@ s[j]@@ ,@@ s@@ [j+1],@@ sizeof(@@ ts@@ )); memcpy@@ (@@ s@@ [j+1],@@ ts@@ ,@@ sizeof(@@ ts@@ )); tmp=@@ a[j]; a[j]=a[j+1]; a[j+1]=@@ tmp; } for(i=1;i<=n;i++) printf("%s\n",@@ s[i]); }  
c -1
h -1
0

main() { intn; scanf("%d",&n); inta[@@ 26],@@ f@@ [26]; for(inti=0;i<=@@ n-1;i++) scanf("%d",&a[i]); f@@ [0]=1; if(@@ a[1]@@ <=@@ a[0]) f@@ [1]=@@ 2; else f@@ [1]@@ =1; for(inti=2;i<=@@ n-1;i++) { intc[@@ 26]; for(int@@ q@@ =0;q@@ <=i@@ -1;@@ q++) { if(a[@@ q@@ ]>=@@ a[i]) c[@@ q@@ ]=@@ f@@ [q@@ ]; else c[@@ q@@ ]=0; } int@@ maxc@@ =@@ c[@@ 0]; for(intj=1;j<=@@ i-1;j++) { if(@@ maxc@@ <@@ c@@ [j]) maxc@@ =@@ c[j]; } f[i]=@@ maxc@@ +1; } intmax=@@ f@@ [0]; for(intm@@ =1;m@@ <=@@ n-1@@ ;m++) { if(f@@ [m]@@ >max) max=@@ f@@ [m]; } printf("%d",max); }  
c -1
h -1
intmain() { intn,i,j; scanf("%d",&n); inta[n]; for(i=0;i<n;i++) { scanf("%d",&a[i]); } if(n==1) printf("%d",a[0]); else { printf("%d",a[0]); for(i=1;i<n-1;i++) { for(j=0;j<i;j++) { if(a[i]==a[j]) break; } if(i==@@ j@@ &&a[i]@@ !=@@ a[i-1@@ ]) printf("%d",a[i]); } for(j=0;j<n-1;j++) { if(a[@@ n-1@@ ]==@@ a[j]) break; } if(@@ n-1@@ ==@@ j@@ &&@@ a[@@ n-1@@ ]!=@@ a[@@ n-2@@ ]) printf("%d",a[@@ n-1]); } getchar(); getchar(); }  
c -1
h -1
0

intmain() { inty,m,d,@@ t=0; cin>>y>>m>>d; inta[@@ 12]={31,28,31,30,31,30,31,31,30,31,30,31}; if((y%@@ 4==0&&y%100!=0@@ )||(y%@@ 400==0)) a[1]=29; if(m==1) cout<<@@ d; else { for(inti=0;i<@@ m-1;i++) { t=t+@@ a[i]; } cout<<t@@ +d; } return0; }  
c -1
h -1
voidmain() { inti,j,@@ s,@@ sum,@@ num[@@ 100000@@ ]={0}; scanf("%d",&@@ sum); for(i=0;i<@@ sum@@ ;i++) { scanf("%d",&@@ num[i]); } for(i=0;i<@@ sum@@ ;i++) { for(j=0;j<i;j++) { if(num@@ [i]==@@ num@@ [j]) { num@@ [i]=0; break; } } } printf("%d",@@ num@@ [0]); for(i=1;i<@@ sum@@ ;i++) { if(num@@ [i]==0) continue; else@@ printf("%d",@@ num[i]); } }  
c -1
h -1
0

intmain() { intm,n; cin>>m>>n; inta[100][100]; for(inti=0;i<m;i++) { for(intj=0;j<n;j++) { cin>>a[i][j]; } } for(inti=0;i<@@ (@@ m+@@ n@@ );i++) { for(intj=0;j<m;j++) { for(intk=0;k<@@ n;k++) { if(j@@ +k@@ ==@@ i) { cout<<@@ a[j]@@ [k]@@ <<endl; } } } } return0; }  
c -1
h -1
inta[100],b[100]; intm,n; voidshuru@@ (void) { inti; scanf("%d%d",&m,&n); for(i=0;i<m;i++) scanf("%d",&a[i]); for(i=0;i<n;i++) scanf("%d",&b[i]); } voidpaixu@@ (int*@@ p1,int*p2@@ ) { inti,j; inttemp; for(j=1;j<@@ m;j++) for(i=0;i<m-1;i++) if((@@ *(@@ p1@@ +i)@@ )>@@ (*(@@ p1@@ +i@@ +1)@@ )) { temp@@ =*(@@ p1@@ +i); *(@@ p1@@ +i)@@ =*(@@ p1@@ +i@@ +1); *(@@ p1@@ +i@@ +1)@@ =temp; } for(j=1;j<n;j++) for(i=0;i<n-1;i++) if(*(@@ p2@@ +i)@@ >*@@ (@@ p2@@ +i@@ +1@@ )) { temp@@ =*(@@ p2@@ +i); *(@@ p2@@ +i)@@ =*(@@ p2@@ +1@@ +i); *(@@ p2@@ +i@@ +1)@@ =temp; } } voidhebing@@ (void) { inti; for(i=0;i<n;i++) a[m@@ +i]=b[i]; } voidshuchu@@ (void) { inti; printf("%d",a[0]); for(i=1;i<@@ m+n;i++) printf("%d",a[i]); } intmain() { shuru@@ (); paixu@@ (a,b); hebing@@ (); shuchu@@ (); return0; }  
c -1
h -1
0

intmain() { intn,k,@@ a[1000],@@ t@@ ,j,@@ p=0,@@ i; scanf("%d%d",&n,&k); scanf("%d",&a[0]); for(i=1;i<n;i++){ t=i; scanf("%d",&a[i]); for(j=0;j<@@ t@@ ;j++){ if(a[j]==@@ k-@@ a[i]@@ ){ p=1; break;} } } if(p@@ ==0)@@ printf("no"); if(p@@ ==1)@@ printf("yes"); return0; }  
c -1
h -1
intmain(){ inta[@@ 20],@@ i,j,k,@@ s; for(@@ s=0,@@ cin>>@@ a[1@@ ];@@ a[1]@@ !=@@ -1;@@ s=0,@@ cin>>@@ a[1@@ ]){ i=1; while(a[i]@@ !=0){ i++; cin>>a[i]; } for(j=1;j<i;j++) for(k=1;k<@@ i;k++) if(a[j]==2*@@ a[k]@@ )@@ s++; cout<<s<<endl; } return0; }  
c -1
h -1
0

intmain(){ char@@ sz[@@ 2][@@ 510@@ ]; doublea,@@ e; intb,@@ c,d,@@ f; ints[@@ 2@@ ]; d=0; scanf("%lf",&a); for(b=0;b@@ <@@ 2;@@ b++){ scanf("%s",&@@ sz[@@ b@@ ]); s[@@ b@@ ]=@@ strlen(@@ sz@@ [0]); for(@@ f@@ =0;@@ f@@ <@@ s[@@ b@@ ];@@ f@@ ++){ if(sz[@@ b@@ ][@@ f@@ ]!='@@ A'&&@@ sz[@@ b@@ ][@@ f@@ ]!='@@ T'&&@@ sz[@@ b@@ ][@@ f@@ ]!='@@ G'&&@@ sz[@@ b@@ ][@@ f@@ ]!='@@ C'){ printf("error"); return0; } } } if(s@@ [0]@@ !=@@ s[1]@@ ){ printf("error\n"); return0; } for(b=0;b@@ <@@ s[0]@@ ;@@ b++){ if(@@ sz[0][@@ b@@ ]==@@ sz@@ [1@@ ][b@@ ]){ d++; } } e@@ =1.0*@@ d@@ /@@ s[@@ 0]; if(e@@ >@@ a){ printf("yes\n"); } else{ printf("no\n"); } return0; }  
c -1
h -1
structstudent { intnum; int@@ score1@@ ; int@@ score2; int@@ score; }; voidmain() { intn; scanf("%d",&n); structstudentstu[100000]; structstudent@@ *p,*@@ p1,*@@ t1@@ ,*@@ t2@@ ,*@@ t3@@ ; int@@ tem@@ ,@@ tem1@@ ; for(p=@@ stu@@ ;p<@@ stu@@ +n;@@ p++) { scanf("%d%d%d",&@@ p->@@ num,&@@ p->@@ score1@@ ,&p->@@ score2); p->@@ score@@ =p->@@ score1@@ +p->@@ score2; } int@@ max; for(p=@@ stu@@ ,@@ t1@@ =stu@@ ,@@ max=@@ stu@@ ->score@@ ;p<@@ stu@@ +n;@@ p++) { if(p->@@ score@@ >max@@ ){@@ t1@@ =p@@ ;@@ max=@@ p->@@ score@@ ;} } for(p=@@ stu@@ ,@@ t2@@ =stu@@ ,@@ max=@@ stu@@ ->score@@ ;p<@@ stu@@ +n;@@ p++) { if(p==@@ t1@@ )continue; if(p->@@ score@@ >max@@ ){@@ t2@@ =p@@ ;@@ max=@@ p->@@ score@@ ;} } for(p=@@ stu@@ ,@@ t3@@ =stu@@ ,@@ max=@@ stu@@ ->score@@ ;p<@@ stu@@ +n;@@ p++) { if((@@ p@@ ==@@ t1@@ )||(@@ p@@ ==@@ t2@@ ))@@ continue; if(p->@@ score@@ >max@@ ){@@ t3@@ =p@@ ;@@ max=@@ p->@@ score@@ ;} } printf("%d%d\n",@@ t1@@ ->num,@@ t1@@ ->score@@ ); printf("%d%d\n",@@ t2@@ ->num,@@ t2@@ ->score@@ ); printf("%d%d\n",@@ t3@@ ->num,@@ t3@@ ->score@@ ); }  
c -1
h -1
0

intmain(){ inti,j,@@ count=0; double@@ bl@@ ; chara[@@ 508@@ ],b[@@ 508@@ ]; scanf("%lf",&@@ bl@@ ); scanf("%s%s",a,b); if(strlen(a)!=strlen(b@@ )){ printf("error");@@ return0; } for(i=0;a[i]@@ !=0@@ ;i++){ if(a[i]!='A'&&a[i]!='T'&&a[i]!='C'&&a[i]!='@@ G'){ printf("error");@@ return0; } } for(i=0;@@ b[i]@@ !=0@@ ;i++){ if(@@ b[i]!='A'&&b[i]!='T'&&b[i]!='C'&&b[i]!='@@ G'){ printf("error");@@ return0; } } for(i=0;a[i]@@ ;i++){ if(a[i]==b[i]){ count++; } } if((@@ 1.0*@@ count@@ /@@ (@@ strlen(a)@@ ))@@ >@@ bl@@ ){ printf("yes"); }else{ printf("no"); } return0; }  
c -1
h -1
intmain() { chars[@@ 300],@@ w@@ [100],@@ t@@ [100]; gets(@@ w); gets(s); gets(@@ t); inti,j,k,@@ p,q,@@ f@@ =1,@@ n,m,@@ e; n=strlen(@@ w@@ );@@ m@@ =strlen(s); for(i=j@@ =0;i<n;i++) { k@@ =i@@ ;p@@ =i;@@ q@@ =j; if(w@@ [p@@ ]==@@ s[@@ q@@ ]) { for(q=0;q@@ <m;@@ q@@ ++){ if(w@@ [p@@ ]!=@@ s[@@ q@@ ]){ f=0; } p++; } if(f@@ ==1) { for(e@@ =0;e@@ <k;@@ e++) { printf("%c",@@ w@@ [@@ e@@ ]); } printf("%s",@@ t); for(@@ e=@@ k@@ +m@@ ;@@ e@@ <n;@@ e@@ ++){ printf("%c",@@ w@@ [@@ e@@ ]); } return0; } f=1; } } printf("%s",@@ w); return0; }  
c -1
h -1
0

intmain() { inta,b,@@ o@@ ,@@ p,@@ sum,@@ area@@ [@@ 111@@ ][@@ 111@@ ]; intk,@@ i=0; scanf("%d",&k); for(i=0;i<k;i++){ sum=0; scanf("%d%d",&a,&b); for(@@ o@@ =0;@@ o@@ <@@ a;@@ o@@ ++){ for(p=0;p@@ <b@@ ;p++){ scanf("%d",&@@ area@@ [@@ o@@ ][p@@ ]); } } if(a@@ !=1@@ &&@@ b@@ !=1) {@@ for(p=0;p@@ <b@@ ;p@@ ++@@ ){@@ sum+=@@ area@@ [0][@@ p@@ ]+@@ area@@ [a@@ -1@@ ][p@@ ];} for(@@ o@@ =1;@@ o@@ <a@@ -1;@@ o@@ ++@@ ){@@ sum+=@@ area@@ [@@ o@@ ][0]+@@ area@@ [@@ o@@ ][b@@ -1]@@ ;@@ }@@ }else{@@ for(@@ o@@ =0;@@ o@@ <@@ a;@@ o@@ ++@@ ){@@ for(p=0;p@@ <b@@ ;p@@ ++@@ ){@@ sum+=@@ area@@ [@@ o@@ ][p@@ ];@@ }}} printf("%d\n",sum); } return0; }  
c -1
h -1
int@@ result@@ [@@ 40@@ ]; intmax@@ (inta,intb) { if(a@@ >b@@ )@@ return@@ a; else@@ return@@ b; } voidf@@ (inta[],intn) { inti,j,@@ maxmium@@ ; result@@ [1]@@ =1; for(i=2;i<=n;i++) { maxmium@@ =0; for(j=1;j<i;j++) { if(a[j]>=@@ a[i])@@ maxmium@@ =@@ max(@@ result@@ [j],@@ maxmium@@ ); } result@@ [i]@@ =1@@ +@@ maxmium@@ ; } } main() { intn,i,@@ outcome@@ =0; scanf("%d",&n); inta[@@ 40@@ ]; for(i=1;i<=n;i++) { scanf("%d",&a[i]); } f(a,@@ n); for(i=1;i<=n;i++) outcome@@ =@@ max(@@ outcome@@ ,@@ result@@ [i]); printf("%d\n",@@ outcome@@ ); }  
c -1
h -1
0

intmain() { intr,@@ c,@@ i,j; inta[100][100]; scanf("%d%d",&@@ r@@ ,&c); for(i=0;i<@@ r;i++) for(j=0;j<@@ c;j++) scanf("%d",&a[i][j]); for(i=0;i<@@ r@@ +c@@ -1;i++) { if(i<@@ c@@ &&@@ c@@ <=@@ r@@ ) for(j=0;j<=i;j++) printf("%d\n",@@ a[j][i-j@@ ]); elseif(@@ i>=@@ c@@ &&@@ c@@ <=@@ r@@ &&i@@ <@@ r@@ ) for(j=i@@ -c@@ +1@@ ;j<=@@ i;j++) printf("%d\n",@@ a[j][i-j@@ ]); elseif(@@ i>=@@ r@@ &&@@ c@@ <=@@ r@@ ) for(j=i@@ -c@@ +1@@ ;j<@@ r@@ ;j++) printf("%d\n",@@ a[j][i-j@@ ]); elseif(@@ i@@ <@@ r@@ &&@@ c@@ >@@ r@@ ) for(j=0;j<=i;j++) printf("%d\n",@@ a[j][i-j@@ ]); elseif(@@ i>=@@ r@@ &&@@ c@@ >@@ r@@ &&i@@ <@@ c) for(j=0;j<@@ r@@ ;j++) printf("%d\n",@@ a[j][i-j@@ ]); elseif(@@ i>=@@ c@@ &&@@ c@@ >@@ r@@ ) for(j=i@@ -c@@ +1@@ ;j<@@ r@@ ;j++) printf("%d\n",@@ a[j][i-j@@ ]); } return0; }  
c -1
h -1
structstu { intnum; int@@ yu@@ ; int@@ shu; int@@ tol@@ ; structstu*next; }; intn; structstu*@@ creat@@ (void) { structstu*@@ p1,*p2,*@@ head@@ ,*p; inti,@@ k; p1=p2=(struct@@ stu*)malloc(sizeof(structstu)); scanf("%d%d%d",&p1->num,&p1->@@ yu@@ ,&p1->@@ shu); p1->@@ tol@@ =p1->@@ yu@@ +p1->@@ shu; p1->next@@ =0; head=p1; p=@@ p1; p1=(struct@@ stu*)malloc(sizeof(structstu)); for(i=1;i<n;i++) { p=head; p2=p1; k=0; scanf("%d%d%d",&p1->num,&p1->@@ yu@@ ,&p1->@@ shu); p1->@@ tol@@ =p1->@@ yu@@ +p1->@@ shu; while(p@@ !=0&&@@ p->@@ tol@@ >=@@ p1->@@ tol@@ ) { p2=@@ p; p=p->next; k++; } if(k@@ <=@@ 3) { if(p==@@ head@@ ) { head=p1; p1->next@@ =p; } if(p@@ ==0) { p2->next=p1; p1->next@@ =0; } if(p@@ !=@@ head@@ &&p@@ !=0) { p2->next=p1; p1->next@@ =p; } } p1=(struct@@ stu*)malloc(sizeof(structstu)); } returnhead; } voidmain() { structstu@@ *head,*p; inti=0; scanf("%d",&n); head=creat(); p=head; while(i<@@ 3) { printf("%d%d\n",@@ p->@@ num,@@ p->@@ tol@@ ); i++; p=p->next; } }  
c -1
h -1
0

intmain() { intn,i,@@ l@@ ,j,@@ t,@@ k@@ [@@ 30@@ ][@@ 99@@ ],@@ a[@@ 30],@@ o@@ ,@@ q,@@ max=0,@@ maxman@@ ; for(i=0;i<@@ 30@@ ;i++) a[i]=0; chars[@@ 40@@ ]; scanf("%d",&n); for(j=0;j<n;j++) { scanf("%d%s",&@@ o@@ ,@@ s); l@@ =strlen(s); for(i=0;i<l;i++) { q=@@ s[i]@@ -'A'; a[q@@ ]++; t=@@ a[q@@ ]; k@@ [q@@ ][@@ t@@ ]=@@ o@@ ; } } for(i@@ ='@@ A@@ '-@@ 'A'@@ ;i<=@@ '@@ Z@@ '-@@ 'A'@@ ;i++) { if(a[i]>max) { max=a[i]; maxman@@ =i; } } printf("%c\n%d\n",@@ maxman@@ +'A',@@ max); for(i=1;i<=@@ max@@ ;i++) printf("%d\n",@@ k@@ [@@ maxman@@ ][i]); return0; }  
c -1
h -1
intmain(){ doublea,@@ y=0,@@ m,n,@@ t; inti,@@ q=0; char@@ dna1@@ [501]; char@@ dna2@@ [501]; scanf("%lf",&a); scanf("%s",@@ dna1); scanf("%s",@@ dna2); m=strlen(@@ dna1); n=strlen(@@ dna2); if(m==@@ n){ for(i=0;i<m;i++){ if((@@ dna1@@ [i]=='A'||@@ dna1@@ [i]=='T'||@@ dna1@@ [i]=='C'||@@ dna1@@ [i]=='@@ G')&&(@@ dna2@@ [i]=='A'||@@ dna2@@ [i]=='T'||@@ dna2@@ [i]=='C'||@@ dna2@@ [i]=='@@ G')){ }else{ q=1; break; } } for(i=0;i<m;i++){ if(q@@ ==1){ break; }elseif(@@ dna1@@ [i]==@@ dna2@@ [i]){ y++; }elseif(@@ dna1@@ [i]!=@@ dna2@@ [i]){ } } t=@@ y@@ /@@ m; }@@ elseif(m@@ !=@@ n){ q=1; } if((@@ t@@ >=@@ a@@ &&@@ a@@ !=0&&@@ q@@ ==0)||(@@ q@@ ==0&&@@ t@@ >@@ a@@ &&@@ a@@ ==0)@@ ){ printf("yes"); }elseif(@@ (@@ t@@ <a@@ )&&(@@ a@@ !=0)&&(@@ q@@ ==0)||(@@ (@@ q@@ ==0)&&(@@ t@@ ==0)&&(@@ a@@ ==0)@@ )){ printf("no"); }elseif(@@ q@@ ==1){ printf("error"); } return0; }  
c -1
h -1
0

intmain() { intsz[1000]; intn,k,i,@@ r,@@ e=0; scanf("%d%d",&n,&k); for(i=0;i<n@@ ;i=i+1@@ ){ scanf("%d",&sz[i]); } for(i=0;i<n@@ ;i=i+1@@ ){ for(@@ r@@ =i+1@@ ;r@@ <n;@@ r=r@@ +1@@ ){ if(sz[i]@@ +@@ sz[@@ r@@ ]==k){ e=1; break; } } if(e@@ ==1)break; } if(e@@ ==1)@@ printf("yes"); if(e@@ ==0)@@ printf("no"); return0; }  
c -1
h -1
intleap@@ (int@@ ); intmain() { int@@ daymonth@@ [2][@@ 12]={31,@@ 28,31,30,31,30,31,31,30,31,30,31@@ ,31,@@ 29,31,30,31,30,31,31,30,31,30,31}; int@@ YEAR@@ ,@@ MON@@ ,@@ DAY@@ ,i,@@ counter@@ =0; cin>>@@ YEAR@@ >>@@ MON@@ >>@@ DAY@@ ; for(i=0;i<@@ MON@@ -1;i++) { counter@@ +=@@ daymonth@@ [@@ leap@@ (@@ YEAR@@ )@@ ]@@ [i]; } counter@@ +=@@ DAY@@ ; cout<<@@ counter@@ <<endl; return0; } intleap@@ (int@@ YEAR@@ ) { if((@@ YEAR@@ %@@ 4==0)&&(@@ YEAR@@ %100!=0@@ )||(@@ YEAR@@ %@@ 400==0)) return1; else return0; }  
c -1
h -1
0

intmain() { float@@ x,y,@@ k=0; inti,j; chara[501],b[501]; scanf("%f",&@@ x); scanf("%s",a); scanf("%s",b); for(i=0;a[i]@@ ;i++) if(!@@ (@@ a[i]=='@@ A'||a[i]=='T'||a[i]=='@@ G'||@@ a[i]=='@@ C')){ printf("error\n"); return0; } for(j=0;@@ b[j]@@ ;j++) if(!@@ (@@ b[j]@@ =='@@ A'||@@ b[j]@@ =='@@ T'||@@ b[j]@@ =='@@ G'||@@ b[j]@@ =='@@ C')){ printf("error\n"); return0; } if(i!=@@ j){ printf("error\n"); return0; } for(i=0;a[i]@@ ;i++) if(a[i]==b[i]) k@@ +=1; y=@@ k/@@ j; if(y@@ >@@ x) printf("yes\n"); else printf("no\n"); return0; }  
c -1
h -1
intmain() { inta[@@ 20000],@@ i,j,k,@@ n,@@ count=0; cin>>n; for(i=0;i<n;i++) { cin>>a[i]; } for(i=1@@ ,k@@ =1@@ ;i<n;i++) { for(j=0;j<i;j++) { if(a[j]==@@ a[i]@@ )break; } if(j==i) { a[k]=@@ a[i]; k++; count++; } } cout<<a[0]; for(k=1;k<=@@ count@@ ;k++) cout<<""<<@@ a[k]; return0; }  
c -1
h -1
0

intmain() { charzfc@@ [@@ 2000]; gets(@@ zfc); intc; c=strlen(@@ zfc); char@@ tzfc@@ [@@ 2000]; char@@ hzfc@@ [@@ 2000]; gets(@@ tzfc@@ ); gets(@@ hzfc@@ ); int@@ ct@@ ,@@ ch; ct@@ =strlen(@@ tzfc@@ ); ch@@ =strlen(@@ hzfc@@ ); inti,@@ wei@@ ,@@ an@@ =0,@@ x,@@ deng@@ =0; for(i=0;i<c@@ ;i++) { int@@ flag=0; for(x@@ =i;@@ x@@ <@@ ct@@ +i@@ ;x@@ ++) { if(@@ zfc@@ [x@@ ]!=@@ tzfc@@ [x@@ -i@@ ]) { flag=1; } if(flag==1) { break; } } if(flag==0) { wei@@ =i; an@@ ++; deng@@ =1; } if(@@ an@@ ==1) { break; } } if(@@ deng@@ ==0) { puts(@@ zfc); } else { int@@ xzfc@@ [@@ 2000]; for(i=0;i<@@ wei@@ ;i++) { xzfc@@ [i]=@@ zfc@@ [i]; } for(i=@@ wei@@ ;i<@@ ch@@ +@@ wei@@ ;i++) { xzfc@@ [i]=@@ hzfc@@ [i-@@ wei@@ ]; } for(i=@@ ch@@ +@@ wei@@ ;i<@@ c-@@ ct@@ +@@ ch@@ ;i++) { xzfc@@ [i]=@@ zfc@@ [i-@@ (@@ ch@@ -@@ ct@@ )@@ ]; } for(i=0;i<@@ c-@@ ct@@ +@@ ch@@ ;i++) { printf("%c",@@ xzfc@@ [i]); } } return0; }  
c -1
h -1
intmain() { register@@ inti,j,@@ flag; intn; flag=0; char@@ str1@@ [@@ 20000]; scanf("%d",&n); for(i=1;i<=n;i++) { scanf("%d",&@@ str1@@ [i@@ -1]); if(i>=@@ 2) { flag=0; for(j=1;j<=@@ i-1;j++) { if(@@ str1@@ [i-1@@ ]==@@ str1@@ [j-1]) { flag=1; break; } } if(flag==0) { printf("%d",@@ str1@@ [i@@ -1]); } } else { printf("%d",@@ str1@@ [0]); } } return0; }  
c -1
h -1
0

structstu { long@@ xh@@ ; int@@ yw@@ ; int@@ sx; int@@ zh@@ ; structstu*next; }; structstu*@@ scan@@ () { long@@ n; long@@ num=0; structstu@@ *head,*p1,*p2; p1=p2=(struct@@ stu*)malloc(sizeof(structstu)); scanf("%ld",&n); head=p1; while(@@ num@@ <n) { scanf("%ld",&@@ p1->@@ xh@@ ); scanf("%d",&@@ p1->@@ yw@@ ); scanf("%d",&@@ p1->@@ sx@@ ); p1->@@ zh@@ =p1->@@ yw@@ +p1->@@ sx; p2=p1; p1=(struct@@ stu*)malloc(sizeof(structstu)); p2->next=p1; p1->next@@ =0; num++; } return(head); } structstu*@@ del@@ (struct@@ stu@@ *head@@ ,int@@ max) { structstu*@@ p1,*p2; p1=head; while(@@ max@@ !=@@ p1->@@ zh@@ &&@@ p1->next@@ !=0) { p2=p1; p1=p1->next; } if(max@@ ==@@ p1->@@ zh@@ ) { if(@@ p1@@ ==@@ head@@ ) { head=@@ p1->next; } else { p2->next=@@ p1->next; } } return(head); } voidprint(struct@@ stu@@ *head) { structstu@@ *p,*@@ p1,*p2,*@@ p3@@ ,*@@ w; intmax=0,@@ num=0; while(@@ num@@ <@@ 3) { for(p=head@@ ;p@@ !=0@@ ;@@ p=p->next) { if(p->@@ zh@@ >max) { max=@@ p->@@ zh@@ ; w@@ =p; } } num++; if(num@@ ==1) { p1=@@ w; head=@@ del@@ (@@ head@@ ,max); max=0; } if(num@@ ==@@ 2) { p2=@@ w; head=@@ del@@ (@@ head@@ ,max); max=0; } if(num@@ ==@@ 3) { p3=@@ w; } } printf("%ld@@ %d\n@@ %ld@@ %d\n@@ %ld@@ %d\n",@@ p1->@@ xh@@ ,@@ p1->@@ zh@@ ,@@ p2->@@ xh@@ ,@@ p2->@@ zh@@ ,@@ p3->@@ xh@@ ,@@ p3->@@ zh@@ ); } voidmain() { structstu*@@ head; head=@@ scan@@ (); print(head); }  
c -1
h -1
voidmain() { inta[@@ 100000@@ ],b[@@ 100000],@@ d[@@ 100000@@ ],i,j,@@ n,@@ t,@@ s; scanf("%d",&n); for(i=0;i<n;i++) { scanf("%d%d%d",&@@ a[i],&@@ b[i]@@ ,&@@ d[i]); d[i]=@@ b[i]@@ +d@@ [i]; } for(i=0;i<3;i++) { for(j=n-1;j>i;j--) { if(d@@ [j]>@@ d@@ [j-1]) { t=@@ d@@ [j];@@ s=@@ a[j]; d@@ [j]=@@ d@@ [j-1]@@ ;@@ a[j]=@@ a@@ [j-1]; d@@ [j-1]=@@ t@@ ;a@@ [j-1]=@@ s; } } } for(i=0;i<3;i++) { printf("%d%d\n",@@ a[i],@@ d[i]); } }  
c -1
h -1
1


struct{ charID[10]; int@@ nian@@ ; }@@ patient@@ [100],@@ old@@ [100],@@ qita@@ [100],@@ temp; intmain() { intn,i,k,@@ e,@@ num,@@ j; scanf("%d",&n); for(i=0;i<n;i++){ scanf("%s%d",@@ patient@@ [i].@@ ID,&@@ patient@@ [i].@@ nian@@ ); } num=0; for(i=0;i<n;i++){ if(@@ patient@@ [i].@@ nian@@ >=60){ num=num@@ +1; } } k=0; for(i=0;i<n;i++){ if(@@ patient@@ [i].@@ nian@@ >=60){ old@@ [k]=@@ patient@@ [i]; k=k+1; } } k=0; for(i=0;i<n;i++){ if(@@ patient@@ [i].@@ nian@@ <60){ qita@@ [k]=@@ patient@@ [i]; k=k+1; } } for(j=1;j<@@ num@@ ;j++){ for(k=0;k<@@ num@@ -j@@ ;k++){ if(old@@ [k+1@@ ].@@ nian@@ >@@ old@@ [k].@@ nian@@ ){ temp=@@ old@@ [k+1]; old@@ [k+1]=@@ old@@ [k]; old@@ [k]=@@ temp; } } } for(k=0;k<@@ num@@ ;k++){ printf("%s\n",old@@ [k].@@ ID); } for(k=0;k<@@ n-@@ num@@ ;k++){ printf("%s\n",@@ qita@@ [k].@@ ID); } return0; }  
c -1
h -1
struct@@ w {int@@ id; int@@ ch; int@@ ma; intsum; struct@@ w@@ *next; }; inti,n,@@ k@@ =1,@@ max,@@ s=0; struct@@ w@@ *head,*p1,*p2; struct@@ w@@ *@@ make@@ (void) { head=@@ null@@ ; scanf("%d",&n); p1=p2=(struct@@ w@@ *)malloc(len); scanf("%d%d%d",&@@ p1->id,&p1->@@ ch@@ ,&p1->@@ ma@@ ); for(k=1;k<@@ n;k++) { if(k@@ ==1)head=p1; elsep2->next=p1; p2=p1; p1=(struct@@ w@@ *)malloc(len); scanf("%d%d%d",&@@ p1->id,&p1->@@ ch@@ ,&p1->@@ ma@@ ); } p2->next=p1; p1->next=@@ head; returnhead; } voidmain() { head=@@ make@@ (); while(@@ s@@ <@@ 3) { for(i=1;i<=n;i++) {@@ if(i==@@ n)@@ p1=@@ null@@ ; else {@@ p1->sum=p1->@@ ch@@ +p1->@@ ma; p1=p1->next; } } p1=@@ head;@@ max=0; for(i=1;i<=n;i++) {if((@@ p1->@@ sum@@ )@@ >max) max=@@ p1->@@ sum; p1=p1->next; } p1=head; for(i=1;i<=n;i++) {@@ p2=p1; p1=p1->next; if(p1->@@ ch@@ +p1->@@ ma@@ ==@@ max) {@@ printf("%d%d\n",@@ p1->@@ id,@@ p1->@@ sum); if(@@ p1@@ ==@@ head@@ ) head=@@ p1->next; else@@ p2->next=@@ p1->next; break;} } s++; } }  
c -1
h -1
0

intmain() { int@@ record@@ [26@@ ][@@ 1000]; memset(@@ record@@ ,0,sizeof(@@ record@@ )); charname@@ [10]; intm,@@ temp; cin>>m; for(inti=0;i<m;i++) { cin>>@@ temp; cin.get(); cin.getline(@@ name,@@ 10@@ ); for(inti=0;i<@@ strlen(@@ name@@ );i++) { record@@ [@@ name@@ [i]@@ -65@@ ][@@ record@@ [@@ name@@ [i]@@ -65@@ ][0]@@ +1]=@@ temp; record@@ [@@ name@@ [i]@@ -65@@ ][0]@@ ++; } } int@@ flag=0; for(inti=0;i<@@ 25;i++) { if(@@ record@@ [i][0]@@ >@@ record@@ [@@ flag@@ ][0]@@ ) { flag@@ =i; } } cout<<@@ (char)(@@ flag@@ +65@@ )@@ <<endl@@ <<@@ record@@ [@@ flag@@ ][0]@@ <<endl; for(inti=1;i<=@@ record@@ [@@ flag@@ ][0]@@ ;i++) { cout<<@@ record@@ [@@ flag@@ ]@@ [i]<<endl; } return0; }  
c -1
h -1
structstudent { intid; intc; intm; ints; structstudent*next; }; structstudent*creat@@ (void) { structstudent*head,*p1,*p2; intn,i; p1=p2=(structstudent*)malloc(LEN); scanf("%d",&n); head=NULL; for(i=0;i<n;i++) { scanf("%d%d%d",&@@ p1->id,&p1->@@ c@@ ,&p1->@@ m); p1->@@ s=@@ p1->@@ c+@@ p1->@@ m; if(i==0)@@ head=p1; elsep2->next=p1; p2=p1; p1=(structstudent*)malloc(LEN); } p2->next=NULL; return(head); } void@@ exchange@@ (@@ structstudent*@@ x,@@ structstudent*@@ y) { intt; t=@@ x@@ ->@@ id@@ ;x@@ ->@@ id@@ =@@ y@@ ->@@ id@@ ;y@@ ->@@ id@@ =t; t=@@ x@@ ->@@ c@@ ;x@@ ->@@ c=@@ y@@ ->@@ c@@ ;y@@ ->@@ c=@@ t; t=@@ x@@ ->@@ m;@@ x@@ ->@@ m=@@ y@@ ->@@ m;@@ y@@ ->@@ m=@@ t; t=@@ x@@ ->@@ s@@ ;x@@ ->@@ s=@@ y@@ ->@@ s@@ ;y@@ ->@@ s=@@ t; } voidmain() { structstudent@@ *p,*@@ q@@ ,*@@ head; int@@ temp,@@ i; head=@@ p=@@ creat@@ (); for(p=head@@ ,i@@ =0;p@@ ->next@@ !=NULL@@ ,i@@ <@@ 3@@ ;@@ p=p@@ ->next@@ ,i++) { temp=@@ p->@@ s; for(q=@@ p->next@@ ;q@@ !=NULL;@@ q=q@@ ->next) { if(p->@@ s@@ <@@ q->@@ s)@@ temp=@@ q->@@ s; if(p->@@ s@@ !=@@ temp@@ )@@ exchange@@ (p,@@ q); } } for(p=head@@ ,i@@ =0;i<@@ 3@@ ;@@ p=p@@ ->next@@ ,i++) printf("%d%d\n",@@ p->@@ id,@@ p->@@ s); }  
c -1
h -1
0

intmain(){ intk,@@ n,@@ i,@@ b,@@ c,d; inta[@@ LEN@@ ]; c=0; scanf("%d%d",&n,&k); for(i=0;i<n;i++){ scanf("%d",&a[i]); } for(d@@ =0;d@@ <n;@@ d@@ ++){ b=@@ k-@@ a[d@@ ]; for(i=0;i<n;i++){ if((@@ b==@@ a[i]@@ )&&(i@@ !=@@ d@@ )){ c=1; break;}} ;} if(c@@ ==0){@@ printf("no");} elseif(@@ c@@ ==1){@@ printf("yes");} return0; }  
c -1
h -1
int@@ dd@@ [25]; intk; int@@ maxnum@@ =0; void@@ fun@@ (intp@@ ,int@@ num,int@@ hight@@ ) { if(p@@ >@@ k) { if(num@@ >@@ maxnum@@ ) maxnum@@ =@@ num; return; } if(@@ dd@@ [p@@ ]<=@@ hight@@ ) { fun@@ (p@@ +1,@@ num@@ +1,@@ dd@@ [p@@ ]); fun@@ (p@@ +1,@@ num,@@ hight@@ ); } else fun@@ (p@@ +1,@@ num,@@ hight@@ ); return; } intmain() { cin>>k; for(inti=0;i<k;i++) cin>>@@ dd@@ [i]; fun@@ (@@ 0,0,@@ 65535@@ ); cout<<@@ maxnum@@ -1@@ <<endl; }  
c -1
h -1
0

intmain() { intfenjie@@ (intx,int@@ y); inta,@@ n,@@ i; cin>>n; for(i=1;i<=n;i++) { cin>>a; cout<<@@ fenjie@@ (a,@@ 2)<<endl; } return0; } intfenjie@@ (intx,inty) { intb,@@ i,@@ count@@ =1; if(x==1) return0; if(x==@@ 2) return1; b=@@ sqrt(@@ (double)@@ x); for(i=y@@ ;i<=@@ b;i++) { if(x%i==0) { count+=@@ fenjie@@ (x/i,i); } } returncount; }  
c -1
h -1
intmax@@ (intx,inty) { if(x@@ >=@@ y)@@ return@@ x; else@@ return@@ y; } int@@ haha@@ (inta[],intb[],int@@ k) { inti,j,@@ c=0; b[k@@ -1]@@ =1; for(i=k-2;i>=0;i--) { for(j=i+1;j<k;j++) { if(a[i]>=@@ a[j])@@ c=@@ max(@@ c,@@ b[j]); } b[i]=@@ c@@ +1; c=0; } for(i=k@@ -1@@ ;i@@ >-@@ 1@@ ;i@@ --@@ )@@ c=@@ max(@@ c,@@ b[i]); return@@ c; } intmain() { inta[@@ 25],b[@@ 25@@ ]={0},@@ k,@@ i; scanf("%d",&k); for(i=0;i<@@ k;i++)@@ scanf("%d",&a[i]); printf("%d",@@ haha@@ (a,b,@@ k@@ )); }  
c -1
h -1
0

intmain() { intyear,@@ mon@@ ,@@ d; int@@ month@@ =1,@@ day@@ =1,@@ lunar@@ =0,@@ days@@ =1; cin>>year>>@@ mon@@ >>@@ d; if(((@@ year%@@ 4==0)&&(@@ year%100!=0@@ )@@ )||(year%400==0)) lunar@@ =1; while((@@ mon@@ !=@@ month@@ )||(@@ d@@ !=@@ day@@ )) { day@@ ++; days@@ ++; if((@@ day@@ ==@@ 32@@ )&&(@@ (@@ month@@ ==1)@@ ||(@@ month==@@ 3@@ )||(@@ month==@@ 5@@ )||(@@ month==@@ 7@@ )||(@@ month==@@ 8@@ )||(@@ month==@@ 10@@ )||(@@ month==@@ 12@@ )@@ )) { month@@ ++; day@@ =1; } if((@@ day@@ ==@@ 31@@ )&&(@@ (@@ month==@@ 4@@ )||(@@ month==@@ 6@@ )||(@@ month==@@ 9@@ )||(@@ month==@@ 11@@ )@@ )) { month@@ ++; day@@ =1; } if((@@ day@@ ==@@ 30@@ )&&(@@ month==@@ 2@@ )&&(@@ lunar@@ ==1@@ )) { month@@ ++; day@@ =1; } if((@@ day@@ ==@@ 29@@ )&&(@@ month==@@ 2@@ )&&(@@ lunar@@ ==0)) { month@@ ++; day@@ =1; } } cout<<@@ days@@ <<endl; return0; }  
c -1
h -1
int@@ run@@ (int@@ a) { if(a%@@ 4==0&&a%100!=0@@ ||a%@@ 400==0) { return1; } else { return0; } } intmain() { inty,m,@@ d; cin>>y>>m>>d; int@@ isr@@ =@@ run@@ (@@ y); int@@ p[@@ 13]={0,31,28,31,30,31,30,31,31,30,31,30,31}; intdays@@ =0; for(inti=1;i<@@ m;i++) { days=@@ days@@ +@@ p[i]; } days=@@ days@@ +d; if(@@ isr@@ ==1&&@@ m@@ >=@@ 3) days@@ ++; cout<<@@ days; }  
c -1
h -1
1


sum@@ (int*@@ x@@ [],int@@ m,intn) { int@@ z@@ =0,@@ i; for(i=0;i<n;i++) z=@@ z@@ +*(@@ x@@ [0]@@ +i)@@ +*(@@ x@@ [m@@ -1]@@ +i); for(i=1;i<m-1;i++) z=@@ z@@ +*(@@ x@@ [i])@@ +*(@@ x@@ [i]+@@ n-1); return(@@ z); } main() { intk,i,j,@@ m,n,@@ z,@@ l; int*@@ a[100]; scanf("%d",&k); for(l=0;l<@@ k;@@ l++) { scanf("%d%d",&m,&n); for(i=0;i<m;i++) a[i]=@@ (int*)malloc(n*sizeof(int)); for(i=0;i<m;i++) for(j=0;j<n;j++) scanf("%d",@@ a[i]@@ +j); z=@@ sum@@ (a,@@ m,n); printf("%d\n",@@ z); } }  
c -1
h -1
intmain(){ intk,@@ jz@@ [100][100],@@ ROW@@ ,@@ COL@@ ,@@ h@@ [100],@@ y,@@ i,@@ row,col; scanf("%d",&k); for(i=0;i<k;i++){ scanf("%d%d",&@@ ROW@@ ,&@@ COL@@ ); for(row=0;row@@ <ROW@@ ;@@ row++){ for(col=0;col@@ <@@ COL@@ ;col@@ ++){ scanf("%d",&@@ jz@@ [@@ row][col@@ ]); }} y=0; for(row=0;row@@ <ROW@@ ;@@ row++){ y@@ +=@@ jz@@ [@@ row@@ ][0]; } for(row=0;row@@ <ROW@@ ;@@ row++){ y@@ +=@@ jz@@ [@@ row@@ ][@@ COL@@ -1]; } for(col=0;col@@ <@@ COL@@ ;col@@ ++){ y@@ +=@@ jz@@ [0][@@ col@@ ]; } for(col=0;col@@ <@@ COL@@ ;col@@ ++){ y@@ +=@@ jz@@ [@@ ROW@@ -1@@ ][col@@ ]; } h@@ [i]=@@ y@@ -@@ jz@@ [0][@@ 0]-@@ jz@@ [0][@@ COL@@ -1]@@ -@@ jz@@ [@@ ROW@@ -1@@ ][0]-@@ jz@@ [@@ ROW@@ -1@@ ][@@ COL@@ -1]; } for(i=0;i<k;i++){ printf("%d\n",@@ h[i]); }@@ return0; }  
c -1
h -1
1


intn,m,@@ a[100@@ ],b[100],c[@@ 200]; voidf1@@ () { inti; scanf("%d%d",&m,&n); for(i=0;i<m;i++) scanf("%d",&a[i]); for(i=0;i<n;i++) scanf("%d",&b[i]); } voidf2@@ (int@@ k@@ [],int@@ l) { inti,j,t; for(i=0;i<l@@ -1;i++) for(j=i;j<@@ l@@ ;j++) if(k@@ [i]>@@ k@@ [j]) { t=@@ k@@ [i]; k@@ [i]=@@ k@@ [j]; k@@ [j]=@@ t; } } void@@ f3@@ () { f2@@ (a,m); f2@@ (b,n); inti; for(i=0;i<m;i++) c[i]=a[i]; for(i=0;i<n;i++) c@@ [i@@ +m@@ ]=b[i]; } void@@ f4@@ () { inti; for(i=0;i<m+@@ n-1;i++) printf("%d",c[i]); printf("%d",c[@@ m+@@ n-1]); } voidmain() { f1@@ (); f3@@ (); f4@@ (); }  
c -1
h -1
intmain() { intn,@@ t; char@@ tc@@ [@@ 16]; struct@@ per { charid@@ [@@ 16]; inta; }@@ a[100]; scanf("%d",&n); for(inti=0;i<n;i++) { scanf("%s%d",@@ a[i].@@ id,&@@ a[i].@@ a); } for(intj=@@ n-1@@ ;j>0;j--) { for(int@@ r=0;r@@ <j@@ ;r++) { if(a[@@ r@@ ].@@ a@@ >@@ 59@@ &&@@ a[r@@ +1@@ ].@@ a@@ >@@ 59@@ &&@@ a[r@@ ].@@ a@@ <@@ a[r@@ +1@@ ].@@ a) { strcpy(@@ tc@@ ,@@ a[r@@ +1@@ ].id); strcpy(@@ a[r@@ +1@@ ].id,@@ a[r@@ ].id); strcpy(@@ a[r@@ ].id,@@ tc@@ ); t=@@ a[r@@ +1@@ ].@@ a; a[r@@ +1@@ ].@@ a=@@ a[r@@ ].@@ a; a[r@@ ].@@ a=@@ t; r=0; } if(a[@@ r@@ ].@@ a@@ <=@@ 59@@ &&@@ a[r@@ +1@@ ].@@ a@@ >@@ 59@@ ) { strcpy(@@ tc@@ ,@@ a[r@@ +1@@ ].id); strcpy(@@ a[r@@ +1@@ ].id,@@ a[r@@ ].id); strcpy(@@ a[r@@ ].id,@@ tc@@ ); t=@@ a[r@@ +1@@ ].@@ a; a[r@@ +1@@ ].@@ a=@@ a[r@@ ].@@ a; a[r@@ ].@@ a=@@ t; r=0; } } } for(int@@ f@@ =0;@@ f@@ <n;@@ f@@ ++) { printf("%s\n",@@ a[@@ f@@ ].id); } return0; }  
c -1
h -1
0

typedef@@ struct{ charid[20]; intage; }@@ patient@@ ; intmain() { patient@@ a[100],b[100],@@ c[100],@@ temp; intn,i,j,@@ k=0,@@ l=0; scanf("%d",&n); for(i=0;i<n;i++) { scanf("%s%d",@@ a[i].@@ id,&@@ a[i].@@ age); if(a[i].age@@ >=60) {@@ for(j=0;j<@@ 20@@ ;j++) {@@ b[k@@ ].@@ id@@ [j]=@@ a[i].@@ id@@ [j]; b[k@@ ].age=@@ a[i].@@ age@@ ;@@ }@@ k@@ ++;} else{@@ for(j=0;j<@@ 20@@ ;j++) {@@ c[@@ l@@ ].@@ id@@ [j]=@@ a[i].@@ id@@ [j];@@ }@@ l@@ ++;} } for(i=k@@ -1@@ ;i>0;i--) { for(j=0;j<i;j++) { if(b[j]@@ .@@ age@@ <b@@ [j+1@@ ].age) { temp=@@ b[j]; b[j]=b[j+1]; b[j+1]=@@ temp; } } } for(i=0;i<k;i++) printf("%s\n",@@ b[i].@@ id); for(i=0;i<l;i++) printf("%s\n",@@ c@@ [i].id); }  
c -1
h -1
intmain() { inty,m,d,@@ s=0,@@ a[@@ 12@@ ],@@ i; scanf("%d%d%d",&y,&m,&d); if((y%@@ 400==0)||(@@ y%@@ 4==0&&y%100!=0@@ )) a[1]=29; else a[1]=@@ 28; a[0]=@@ a[2@@ ]=a[@@ 4@@ ]=a[@@ 6@@ ]=a[@@ 7@@ ]=a[@@ 9@@ ]=a[@@ 11@@ ]=31; a[@@ 3@@ ]=a[@@ 5@@ ]=a[@@ 8@@ ]=a[@@ 10@@ ]=30; for(i=0;i<m-1;i++) { s=s+@@ a[i]; } s=s@@ +d; printf("%d",s); }  
c -1
h -1
0

void@@ bianli@@ (){ } intmain(){ inti=0,j=0,@@ row@@ =0,@@ col@@ =0; cin>>row>>col; inta[@@ row][col@@ ],@@ *p@@ =*@@ a; for(i=0;i<row;i++) for(j=0;j<col;j++) cin>>*(*(a+i)+j); for(i=0;i<@@ col@@ ;i++){ p@@ =*@@ a+@@ i; j@@ =i+1; while(j@@ ){ cout<<*p<<endl; p=p@@ +col@@ -1; if(j@@ >@@ row@@ )@@ j=@@ row@@ -1; else@@ j--; } } for(i=1;i<@@ row;i++){ p@@ =*@@ (a@@ +i)@@ +col@@ -1; j=@@ row@@ -@@ i; while(j@@ ){ cout<<*p<<endl; p=p@@ +col@@ -1; if(j@@ >@@ col@@ )@@ j=col-1; else@@ j--; } } return0; }  
c -1
h -1
intmain() { int@@ n1,n2,@@ mianji@@ ,@@ temp@@ =0,@@ a=0,b=0,@@ n,@@ c; scanf("%d",&n); for(@@ n1@@ =1;@@ n1@@ <=n;@@ n1@@ ++) { for(@@ n2@@ =1;@@ n2@@ <=n;@@ n2@@ ++) { scanf("%d",&@@ c); if(c@@ ==0) b++; } if(b@@ !=@@ temp@@ ) { a++; temp=@@ b; } } mianji@@ =(@@ a@@ -2)*(@@ b@@ /2@@ -@@ a); printf("%d",@@ mianji@@ ); }  
c -1
h -1
0

intmain() { double@@ a; cin>>a; cin.get(); charb[@@ 501@@ ],c[@@ 501]; inti,j; cin.getline@@ (b,@@ 501@@ ); cin.getline@@ (c,@@ 501@@ ); int@@ flag=0; for(i=0;@@ b[i]@@ !='\0';i++) { if(@@ b[i]!='A'&&b[i]!='T'&&b[i]!='C'&&b[i]!='@@ G') { cout<<"@@ error@@ "<<endl; flag=1; break; } } if(flag==0) { for(j=0;@@ c@@ [j]!='\0';j++) { if(c@@ [j]!='@@ A'&&@@ c@@ [j]!='@@ T'&&@@ c@@ [j]!='@@ C'&&@@ c@@ [j]!='@@ G') { cout<<"@@ error@@ "<<endl; flag=1; break; } } } if(flag==0) { if(i!=@@ j) { cout<<"@@ error@@ "<<endl; flag=1; } } intt=0; if(flag==0) { for(i=0;i<j;i++) { if(b[i]==@@ c@@ [i]) t++; } double@@ k@@ =(double)@@ t@@ /@@ j; if(k@@ >@@ a) cout<<"yes@@ "<<endl; else cout<<"no@@ "<<endl; } return0; }  
c -1
h -1
intmain() { inta[@@ 15],@@ s,@@ i,j,k,@@ flag=1; while(@@ flag@@ ) { s=0; for(i=0;i<16;i++) { scanf("%d",&a[i]); k=i; if(a[i]==-1) { flag=0; break; } if(a[i]==0)break; } if(flag) { for(i=0;i<k;i++) for(j=0;j<k;j++) { if(a[i]==2*@@ a[j]) s++; } printf("%d\n",s); } } return0; }  
c -1
h -1
0

intmain(){ chara[@@ 300],b[@@ 300@@ ],c[@@ 300]; inti,j,@@ f,@@ d,@@ k=0; scanf("%s%s%s",a,b,c); d@@ =strlen(a); f@@ =strlen(c); for(i=0;i<d@@ ;i++){ if(a[i]==@@ b[0]@@ &&@@ a[i+1@@ ]==@@ b[1@@ ]@@ &&@@ a[i@@ +@@ 2@@ ]==@@ b[2@@ ]@@ &&@@ a[i@@ +@@ 3@@ ]==@@ b[@@ 3@@ ]){ for(j=i;j<i+@@ f@@ ;j++){ a[j]=@@ c@@ [k]; k++; } break; } } printf("%s",a); return0; }  
c -1
h -1
intmain() { intf(int@@ m); int@@ month@@ [5],@@ day@@ [5],@@ year@@ [5],@@ tian@@ [5],@@ i; for(i=0;i<=@@ 4;i++) scanf("%d%d%d",&year@@ [i],&@@ month@@ [i],&@@ day@@ [i]); for(i=0;i<=@@ 4;i++) { if(@@ year[i]@@ %4==0&&@@ year[i]@@ %100!=0@@ ||@@ year[i]@@ %@@ 400==0) {if(@@ month@@ [i]<=@@ 2) tian@@ [i]=@@ f(@@ month@@ [i]@@ )+@@ day@@ [i]; else tian@@ [i]=@@ f(@@ month@@ [i]@@ )+@@ day@@ [i]@@ +1; } else tian@@ [i]=@@ f(@@ month@@ [i]@@ )+@@ day@@ [i]; printf("%d\n",@@ tian@@ [i]); } return0; } intf(int@@ m) { intsum; switch(m) {@@ case1:@@ sum=0; break; case2:@@ sum=@@ 31; break; case3:@@ sum=(@@ 31+28@@ ); break; case4:@@ sum=(@@ 31+28@@ +31@@ ); break; case5:@@ sum=(@@ 31@@ *2@@ +28@@ +30@@ ); break; case6:@@ sum=(@@ 31*3@@ +28@@ +30@@ ); break; case7:@@ sum=(@@ 31*3@@ +28@@ +30*2@@ ); break; case8:@@ sum=(@@ 31*@@ 4@@ +28@@ +30*2@@ ); break; case9:@@ sum=(@@ 31*5@@ +28@@ +30*2@@ ); break; case10:@@ sum=(@@ 31*5@@ +28@@ +30@@ *3@@ ); break; case11:@@ sum=(@@ 31*6@@ +28@@ +30@@ *3@@ ); break; case12:@@ sum=(@@ 31*6@@ +28@@ +30@@ *@@ 4@@ ); } return(@@ sum); }  
c -1
h -1
0

intmain(){ inty,@@ i,j,k,@@ m,n,@@ u@@ [100][100],@@ s,@@ d,@@ x; scanf("%d",&k); for(@@ y@@ =1;@@ y@@ <=k;@@ y@@ ++@@ ){@@ scanf("%d%d",&@@ m,&@@ n);@@ for(i=0;i<m;i++){ for(j=0;j<n@@ ;j++){@@ scanf("%d",&@@ u@@ [i][j]@@ );}} s=0;@@ for(i=0;i<m;i++){ for(j=0;j<n@@ ;j++){@@ s+=@@ u@@ [i][j]@@ ;}} d@@ =0;@@ for(i=1;i<@@ m-1@@ ;i++){@@ for(j=1;j<@@ n-1@@ ;j++){@@ d@@ +=@@ u@@ [i][j]@@ ;}} x=@@ s@@ -@@ d@@ ;@@ printf("%d\n",@@ x);} return0; }  
c -1
h -1
intmain() { intn,i,j; scanf("%d",&n); inta[n]; for(i=0;i<n;i++) { scanf("%d",&a[i]); } if(n==1) printf("%d",a[0]); else { printf("%d",a[0]); for(i=1;i<n-1;i++) { for(j=0;j<i;j++) { if(a[i]==a[j]) break; } if(i==@@ j@@ &&a[i]@@ !=@@ a[i-1@@ ]) printf("%d",a[i]); } for(j=0;j<n-1;j++) { if(a[@@ n-1@@ ]==@@ a[j]) break; } if(@@ n-1@@ ==@@ j@@ &&@@ a[@@ n-1@@ ]!=@@ a[@@ n-2@@ ]) printf("%d",a[@@ n-1]); } getchar(); getchar(); }  
c -1
h -1
0

intmain() { intk,@@ n,m,@@ i,j,@@ x,@@ sum; cin>>k; while(k@@ --) { cin>>m>>n; sum=0; for(i=1;i<=m;i++) { for(j=1;j<=n;j++) { cin>>x; if((i@@ ==1)@@ ||(@@ i==@@ m@@ )||(@@ j@@ ==1)@@ ||(@@ j==@@ n@@ )) sum=sum+@@ x; } } cout<<sum<<endl; } return0; }  
c -1
h -1
voidmain(){ int@@ length@@ ,i,j,@@ temp,@@ start@@ =-1,@@ end@@ ; scanf("%d",&@@ length@@ ); for(i=0;i<@@ length@@ ;i++) for(j=0;j<@@ length@@ ;j++){ scanf("%d",&@@ temp); if(temp@@ ==0){ if(@@ start@@ ==@@ -1)@@ start@@ =i@@ *@@ length@@ +j@@ ; end@@ =i@@ *@@ length@@ +j@@ ; } } printf("%d",(@@ end@@ /@@ length@@ -@@ start@@ /@@ length@@ -1)*(@@ end@@ %@@ length@@ -@@ start@@ %@@ length@@ -1)); }  
c -1
h -1
0

intmain() { introw,col,@@ i,j; inta[100][100]; cin>>row>>col; for(i=0;i<=@@ row-1;i++) { for(j=0;j<=@@ col@@ -1;j++) { cin>>a[i][j]; } } if(col@@ >=@@ row) { for(j=0;j<=@@ row@@ -1;j++) { for(i=0;i<=@@ j@@ ;i++) { cout<<a[i]@@ [j-i@@ ]<<endl; } } for(j=@@ row@@ ;j<=@@ col@@ -1;j++) { for(i=0;i<=@@ row-1;i++) { cout<<a[i]@@ [j-i@@ ]<<endl; } } for(i=1;i<=@@ row-1;i++) { for(j=col-1@@ ;j@@ >=@@ col@@ +i@@ -@@ row@@ ;j--) { cout<<@@ a[i@@ +col@@ -1-j@@ ][j]@@ <<endl; } } } elseif(@@ col@@ <row) { for(j=0;j<=@@ col@@ -1;j++) { for(i=0;i<=@@ j@@ ;i++) { cout<<a[i]@@ [j-i@@ ]<<endl; } } for(i=1;i<=@@ row@@ -col@@ -1;i++) { for(j=col-1@@ ;j>=0;j--) { cout<<@@ a[i@@ +col@@ -j@@ -1]@@ [j]<<endl; } } for(i=@@ row@@ -col@@ ;i<=@@ row-1;i++) { for(j=col-1@@ ;j@@ >=@@ col@@ -@@ row@@ +i@@ ;j--) { cout<<@@ a[i@@ +col@@ -1-j@@ ][j]@@ <<endl; } } } return0; }  
c -1
h -1
voidmain() { voidsort@@ (int*p,int@@ n); int@@ n1,n2,@@ a[@@ 50@@ ],b[@@ 50@@ ],@@ i; int*@@ pa@@ ,*@@ pb@@ ; scanf("%d%d",&n1,&n2); for(i=0;i<n1@@ ;i++)@@ scanf("%d",&a[i]); for(i=0;i<n2@@ ;i++)@@ scanf("%d",&b[i]); pa@@ =&@@ a[0]@@ ;@@ pb@@ =&@@ b[0]; sort(@@ pa@@ ,@@ n1); sort(@@ pb@@ ,@@ n2); for(i=0;i<n1@@ ;i++)@@ printf("%d",a[i]); for(i=0;i<n2@@ -1;i++)@@ printf("%d",b[i]); printf("%d\n",@@ b[@@ n2@@ -1]); } voidsort@@ (int*p@@ ,intn) { inti,j,temp; for(i=n-1@@ ;i>0;i--) for(j=0;j<i;j++) { if(@@ *(p+j)@@ >*@@ (p@@ +j@@ +1@@ )) { temp@@ =*(p@@ +j); *(p+j)@@ =*(p@@ +j@@ +1); *(p@@ +j+1)@@ =temp; } } }  
c -1
h -1
0

intmain() { inta[20000]; inti,j,k,@@ x; scanf("%d",&x); for(i=0;i<x;i++) scanf("%d",&a[i]); for(i=0;i<x;i++) { for(j=i+1;j<@@ x;j++) { if(a[i]==a[j]) { x@@ --; for(k=j@@ ;k<@@ x@@ ;k++) a[k]=a[k@@ +1]; j--; } } } for(i=0;i<x@@ -1;i++)@@ printf("%d",a[i]); if(i<@@ x)@@ printf("%d",a[i]); return0; }  
c -1
h -1
intmain() { intn,i,@@ a[@@ 20000],@@ k,@@ j=0; cin>>n; for(i=0;i<n;i++) {@@ cin>>@@ a[i];} cout<<a[0]; for(i=1;i<n;i++) { for(k=0;k<i;k++) { if(a[i]==@@ a[k]@@ ){@@ j@@ =j+1@@ ;break;} } if(j@@ ==0)@@ cout<<""<<a[i]; j=0; } return0; }  
c -1
h -1
1


intmain() { inta[16@@ ],i,j,@@ temp,@@ count; i=0; while(cin>>@@ a[0]) { count=0; if(a[0]==-1) break; i=1; while(cin>>@@ a[i]) { if(a[i]@@ <@@ 1) { temp@@ =i; break; } i++; } for(i=0;i<@@ temp@@ -1;i++) { for(j=i+1;j<@@ temp@@ ;j++) { if(a[i]==2*@@ a[j]||a[j]==2*@@ a[i]) { count++; } } } cout<<count<<endl; } return0; }  
c -1
h -1
structstudent { int@@ No@@ ; intchinese; intmath; int@@ all@@ ; }stu[@@ STUDENT_NUM@@ ],@@ temp; voidmain() { intn; scanf("%d",&n); inti,@@ k; for(i=0;i<n;i++){ scanf("%d%d%d",&stu[i].@@ No@@ ,&stu[i].@@ chinese@@ ,&stu[i].math); stu[i].@@ all@@ =stu[i].@@ chinese+@@ stu[i].@@ math; } for(k=1;k<@@ 4@@ ;k++){ for(i=0;i<n-@@ k;i++){ if(stu[i].@@ all@@ >=@@ stu[i+1].@@ all@@ ){ temp=@@ stu@@ [i+1]; stu@@ [i+1]=@@ stu[i]; stu[i]=@@ temp; } } } for(i=n-1;i@@ >@@ n-@@ 4@@ ;i--){ printf("%d%d\n",stu[i].@@ No@@ ,@@ stu[i].@@ all@@ ); } }  
c -1
h -1
0

main() { int@@ *p,@@ i,@@ all@@ ,@@ m,n,@@ cycle@@ ,@@ ii@@ ; scanf("%d",&@@ cycle@@ ); for(@@ ii@@ =0;@@ ii@@ <@@ cycle@@ ;@@ ii@@ ++) { scanf("%d%d",&m,&n); p=@@ (int*)@@ calloc@@ (m@@ *@@ n,@@ sizeof(int@@ )); for(i=0;i<m@@ *@@ n;i++) scanf("%d",p@@ +i); all@@ =0; for(i=0;i<n;i++) all@@ +=@@ *(p@@ +i); if(m@@ >1) { for(i=0;i<n;i++) all@@ +=@@ *(p@@ +i@@ +@@ (m@@ -1)@@ *n); } for(i=2@@ ;i<@@ m;i++) all@@ +=@@ *(p+@@ (i@@ -1)@@ *n); if(n@@ >1) { for(i=2@@ ;i<@@ m;i++) all@@ +=@@ *(p+@@ n-1@@ +@@ (i@@ -1)@@ *n); } printf("%d\n",@@ all@@ ); free@@ (p); } }  
c -1
h -1
intmain() { intn,i,@@ a[@@ 20000],@@ k,@@ j=0; cin>>n; for(i=0;i<n;i++) {@@ cin>>@@ a[i];} cout<<a[0]; for(i=1;i<n;i++) { for(k=0;k<i;k++) { if(a[i]==@@ a[k]@@ ){@@ j@@ =j+1@@ ;break;} } if(j@@ ==0)@@ cout<<""<<a[i]; j=0; } return0; }  
c -1
h -1
0

intmain() { intn,i,j,k,@@ t=0,@@ c=0; int@@ A@@ [25]; char@@ g@@ [@@ ]@@ ="@@ ABCDEFGHIJKLMNOPQRSTUVWXYZ@@ "; struct@@ point@@ { inta; chars[@@ 80@@ ]; }@@ tope@@ [1000]; scanf("%d",&n); for(i=0;i<n;i++) { scanf("%d%s",&@@ tope@@ [i].@@ a,@@ tope@@ [i].@@ s); } for(k=0;k<26;k++) { A@@ [k]@@ =0; for(i=0;i<n;i++){ for(j=0;@@ tope@@ [i].@@ s[j]@@ !='\0';j++) { if(@@ tope@@ [i].@@ s@@ [j]==@@ g@@ [k]) { A@@ [k]++; } } } } for(i=0;i<26;i++) { if(A@@ [i]>@@ t) { t=@@ A@@ [i]; c=i; } } printf("%c\n%d\n",@@ g@@ [c@@ ],@@ t); for(i=0;i<n;i++) { for(j=0;@@ tope@@ [i].@@ s[j]@@ !='\0';j++) { if(@@ tope@@ [i].@@ s@@ [j]==@@ g@@ [c@@ ]) { printf("%d\n",@@ tope@@ [i].@@ a); } } } return0; }  
c -1
h -1
voidmain() { intn,@@ len,@@ i,j,k,@@ max; intc[@@ 26]={0}; chara[@@ 26],@@ f,@@ x; structbook@@ {int@@ num;@@ charauthor@@ [26@@ ];@@ }; structbook@@ b[@@ 1000]; scanf("%d",&n); for(i=0;i<n;i++) scanf("%d%s",&@@ b[i].@@ num,&@@ b[i].@@ author); for(i=0;i<n;i++) { strcpy(@@ a,@@ b[i].@@ author); len@@ =strlen(a); for(j=0;j<len;j++) if(@@ '@@ A@@ '<=@@ (@@ x=@@ a[j]@@ )&&(@@ x=@@ a[j])@@ <=@@ '@@ Z@@ ') c[@@ x@@ -'A']++; } max=@@ c@@ [0]@@ ;k@@ =0; for(i=0;i<26;i++) {@@ if(c@@ [i]>max) {max=@@ c[i]; k=i; }} printf("%c\n%d\n",@@ k@@ +'A',@@ max); for(i=0;i<n;i++) { strcpy(@@ a,@@ b[i].@@ author); len@@ =strlen(a); for(j=0;j<len;j++) if((@@ f=@@ a[j]@@ )==@@ k@@ +'A'@@ ) printf("%d\n",b[i].@@ num); } }  
c -1
h -1
1


intmain() { struct@@ m@@ { charid[10]; int@@ year; }@@ p@@ [100],@@ a[100],@@ tmp; intn,i,j,@@ k=0; scanf("%d",&n); for(i=0;i<n;i++){ scanf("%s%d",@@ p[i].@@ id,&@@ p[i].@@ year@@ ); if(p@@ [i].@@ year@@ >=60){ a[k]=@@ p[i]; k++; p[i].@@ year@@ =0; } } for(i=0;i<k;i++){ for(j=@@ k-1@@ ;j>i@@ ;j--){ if(a[j]@@ .@@ year@@ >@@ a@@ [j-1].@@ year@@ ){ tmp=@@ a@@ [j-1]; a@@ [j-1]=@@ a[j]; a[j]=@@ tmp; } } } for(i=0;i<k;i++){ printf("%s\n",@@ a[i].@@ id); } for(i=0;i<n;i++){ if(p@@ [i].@@ year@@ ==0) continue; printf("%s\n",@@ p@@ [i].id); } return0; }  
c -1
h -1
intmain() { intn,i,@@ k; scanf("%d",&n); inta[100@@ ]={0}; scanf("%d",&k); a[k]=@@ a[k]@@ +1; printf("%d",k); for(i=2;i<=n;i++) { scanf("%d",&k); a[k]=@@ a[k]@@ +1; if(a[k]@@ ==1) printf("%d",k); } return0; }  
c -1
h -1
0

void@@ breakup@@ (int,int); intsum; intmain() { intn,@@ x,@@ count=0; cin>>n; while(@@ count@@ <n) { sum=0; count++; cin>>x; if(x>@@ 3) breakup@@ (x,@@ 2); cout<<sum@@ +1<<endl; } return0; } void@@ breakup@@ (intx,int@@ j) { inti,@@ p,@@ m; m=@@ x; p=@@ sqrt(@@ (double)@@ x); for(i=j@@ ;i<=@@ p@@ ;i++) if(m@@ %i==0) { sum++; x=@@ m/@@ i; breakup@@ (x,@@ i); } return; }  
c -1
h -1
intmain(intargc,char*argv[]) { inti,@@ a,@@ n,@@ b=0,@@ c=0,@@ d=0; scanf("%d",&n); for(i=1;i<=@@ n*@@ n;i++) { scanf("%d",&a); if(a==0) { b++; c++; d=@@ b@@ >@@ d@@ ?@@ b@@ :@@ d; } if(a==@@ 255) b=0; } b@@ =(@@ c@@ -2*@@ d@@ )@@ /2; printf("%d\n",@@ (@@ b@@ *(@@ d@@ -2@@ )@@ )); return0; }  
c -1
h -1
0

int@@ factor@@ (int@@ N@@ ,int@@ min); intmain() { intm,n,@@ i,@@ k; scanf("%d",&n); for(i=0;i<n;i++) { scanf("%d",&m); k=@@ factor@@ (m,@@ 2); printf("%d\n",@@ k); } return0; } int@@ factor@@ (int@@ N@@ ,int@@ min) { int@@ result@@ =1,i; if(N@@ <@@ min) return0; for(i=min@@ ;i<@@ N;i++) { if(N@@ %i==0) result+=@@ factor@@ (@@ N@@ /i,i); } returnresult; }  
c -1
h -1
intmain() { inta,b,c,@@ d[@@ 12@@ ],@@ sum=0; inti; scanf("%d%d%d",&@@ a,@@ &@@ b,@@ &@@ c); for(i=1;i<@@ b;i++) { if(i==1||i==3||i==5||i==7||i==8||i==10@@ ||i==@@ 12) { d[i]=@@ 31; } elseif(i==@@ 4||i==6||i==9||i==11) { d[i]=@@ 30; } else { if(a%@@ 4==0&&a%100!=0@@ ||a%@@ 400==0) { d@@ [2]=@@ 29; } else { d@@ [2]=@@ 28; } } sum+=@@ d[i]; } printf("%d\n",sum@@ +c); return0; }  
c -1
h -1
0

voidmain() { void@@ px@@ (intx@@ [100],int@@ k); void@@ lh@@ (int@@ c@@ [100],int@@ p@@ ,int@@ d@@ [100],int@@ q); inta[100],b[100]; inti,@@ m,n; scanf("%d%d",&m,&n); for(i=0;i<m;i++) scanf("%d",&a[i]); for(i=0;i<n;i++) scanf("%d",&b[i]); px@@ (a,m); px@@ (b,n); lh@@ (a,@@ m,@@ b,@@ n); for(i=0;i<m+@@ n;i++) { printf("%d",a[i]); if(i<@@ m+@@ n-1) printf(""); } } void@@ px@@ (intx@@ [100],int@@ k) { inti,j,t; for(i=0;i<@@ k-1;i++) for(j=i+1;j<k;j++) { if(x@@ [i]>@@ x@@ [j]) { t=@@ x[i]; x@@ [i]=@@ x@@ [j]; x@@ [j]=@@ t; } } } void@@ lh@@ (int@@ c@@ [100],int@@ p@@ ,int@@ d@@ [100],int@@ q) { inty; for(y=0;y@@ <@@ q@@ ;y@@ ++) c[@@ p+@@ y@@ ]=@@ d[@@ y@@ ]; }  
c -1
h -1
voidmain() { inta[@@ 20000],b[@@ 20000]; intn,i,k,@@ j,@@ l,@@ m,@@ bn@@ ; scanf("%d",&n); for(i=0;i<n;i++) { scanf("%d",&a[i]); } b[0]=@@ a[0]; m=0; for(j=1;j<n;j++) { for(k@@ =0,@@ l@@ =1@@ ;k<@@ j@@ ;k++) { if(a[j]==@@ a[k]) { l=0; break; } } if(l@@ !=0) { m@@ +=1; b[m@@ ]=@@ a[j]; } } for(@@ bn@@ =0;@@ bn@@ <m;@@ bn@@ ++) { printf("%d",b[@@ bn@@ ]); } printf("%d",@@ b[m@@ ]); }  
c -1
h -1
0

intmain() { intm; cin>>m; char@@ writter@@ [27]; int@@ data@@ [26@@ ][@@ 1000]; memset(@@ data@@ ,0,sizeof(@@ data@@ )); intmax=0; char@@ max_name@@ ; for(inti=1;i<=@@ m;i++){ intnumber; cin>>@@ number@@ >>@@ writter@@ ; for(intj=0;j<@@ strlen(@@ writter@@ )@@ ;j++){ data@@ [@@ writter@@ [j]-65@@ ][0]@@ ++; data@@ [@@ writter@@ [j]-65@@ ][@@ data@@ [@@ writter@@ [j]-65@@ ][0]@@ ]=@@ number; if(max<@@ data@@ [@@ writter@@ [j]-65@@ ][0]@@ ){ max=@@ data@@ [@@ writter@@ [j]-65@@ ][0]; max_name@@ =@@ writter@@ [j]; } } } cout<<@@ max_name@@ <<endl@@ <<@@ max<<endl; for(inti=1;i<=@@ max@@ ;i++) cout<<@@ data@@ [@@ max_name@@ -65@@ ]@@ [i]<<endl; return0; }  
c -1
h -1
intmain(){ intk,i,@@ m,n,@@ a,b,@@ s[@@ N]; intsz[@@ M@@ ][@@ N]; scanf("%d",&k); for(i=0;i<k;i++){ scanf("%d%d",&m,&n); for(a=0;a@@ <m;@@ a++){ for(b=0;b@@ <n;b++){ scanf("%d",&(@@ sz[a@@ ][b@@ ]@@ )); } } s[i]@@ =0; for(b=0;b@@ <n;b++){ s[i]@@ +=@@ sz[0][@@ b@@ ]; } for(a@@ =1;@@ a@@ <m;@@ a++){ s[i]@@ +=@@ sz[a@@ ][n-1]; } for(@@ b=@@ n-2@@ ;@@ b@@ >=0;@@ b@@ --){ s[i]@@ +=@@ sz[@@ m-1][@@ b@@ ]; } for(@@ a=@@ m@@ -2@@ ;a@@ >=1@@ ;a@@ --){ s[i]@@ +=@@ sz[a@@ ][0]; } } for(i=0;i<k;i++){ printf("%d\n",@@ s[i]); } return0; }  
c -1
h -1
0

int@@ juzhen@@ (intm,int@@ n){ inta[100][100@@ ];@@ int@@ s=0,@@ i,j; for(i=1;i<=@@ m;i++){ for(j=1;j<=n;j++){ cin>>a[i][j]; }} int(*p)@@ [100@@ ]=a; for(i=1;i<=n;i++) s+=@@ *(*(p@@ +1)@@ +i); for(i=2;i<=@@ m;i++) s+=@@ *(*(p+i)@@ +@@ n); for(i=n-1@@ ;i>=1;i--) s+=@@ *(*(p@@ +m@@ )@@ +i); for(i=@@ m-1@@ ;i@@ >1@@ ;i--) s+=@@ *(*(p+i)@@ +1); return@@ s; } intmain(){ intk,m,n,@@ t; cin>>k; for(t@@ =1;t@@ <=k;@@ t++){ cin>>m>>n; cout<<@@ juzhen@@ (m,@@ n@@ )<<endl; } return0; }  
c -1
h -1
struct@@ f@@ { charid[10]; int@@ old@@ ; }@@ st@@ [1000],@@ stu[@@ 1000],@@ temp; intmain() { intn,i,j,@@ a,b,@@ c; char@@ cc@@ ,@@ aa@@ ,@@ x[@@ 1000],@@ y@@ [1000]; scanf("%d",&n); for(i=1;i<=n;i++){ scanf("%s@@ %c@@ %d@@ %c@@ ",@@ st[i].@@ id,&@@ aa@@ ,&@@ st[i].@@ old@@ ,&@@ cc@@ );} a=0; for(j=1;j<=n;j++){ if(@@ st@@ [j].@@ old@@ >=60){ a++; stu[@@ a@@ ]=@@ st@@ [j]; }} for(i=a@@ -1@@ ;i>=0;i--){ for(j=1;j<=@@ i;j++){ if(stu[j].@@ old@@ <@@ stu[j+1].@@ old@@ ){ temp=@@ stu@@ [j]; stu@@ [j]=@@ stu@@ [j+1]; stu@@ [j+1]=@@ temp@@ ;@@ }}} for(i=1;i<=@@ a;i++){ puts(@@ stu[i].@@ id@@ );} for(i=1;i<=n;i++){ if(@@ st[i].@@ old@@ <60@@ )@@ puts(@@ st[i].@@ id@@ );} }  
c -1
h -1
0

voidmain() { inti,j,n,@@ row,@@ col@@ ,*@@ p@@ [100]; for(i=0;i<100;i++) *(p+i)@@ =@@ (int*)malloc(@@ 100*sizeof(int)); scanf("%d%d",&row,&col); for(i=0;i<row;i++) for(j=0;j<col;j++) scanf("%d",*(p+i)+j); for(n=0;n@@ <=@@ row+col-2@@ ;n++) for(i=0;i<=@@ n;i++) { j=@@ n-@@ i; if(i@@ <row@@ &&j@@ <col) printf("%d\n",@@ *(*(p+i)@@ +j)); } }  
c -1
h -1
intmain() { int@@ i@@ =1,@@ n,@@ j,@@ r=0,@@ a[@@ 20001@@ ],b[@@ 101]; cin>>n; memset@@ (b,@@ 1,@@ sizeof(@@ b@@ )); do { r=r@@ +1; cin>>@@ j; if(b[j]@@ !=0) { a[i]@@ =j; b[@@ a[i]@@ ]=0; i=i+1; } } while(@@ r@@ <@@ n); for(j=1;j<@@ i@@ -1@@ ;j++)@@ cout<<@@ a[j]@@ <<''; cout<<@@ a[i@@ -1]; return0; }  
c -1
h -1
0

intmain() { intn,k,@@ i,j; ints=0; scanf("%d%d",&n,&k); int*@@ pi@@ =@@ (int*)malloc(sizeof(int)*n); for(i=0;i<n;i++){ scanf("%d",@@ pi@@ +i); } for(i=0;i<n;i++){ for(j=i+1;j<n;j++){ if(*(@@ pi@@ +i)@@ +*(@@ pi@@ +j)@@ ==k){ s=s+1; } } } if(s@@ ==0){ printf("no"); } else{ printf("yes"); } free(@@ pi@@ ); return0; }  
c -1
h -1
intmain() { inta[16],@@ i,@@ b,@@ j,k,@@ m; a[1]@@ =1; while(@@ a[1]@@ !=-1) { i=1; m=0; while(cin>>@@ b) { a[i]=@@ b; if(a[i]@@ ==0||@@ a[i]@@ ==-1) break; i=i+1; } for(j=1;j<=@@ i-1;j++) { for(k=1;k<=@@ i-1;k++) { if(a[j]==2*@@ a[k]) m++; } } if(a[i]@@ !=-1) cout<<@@ m@@ <<endl; } return0; }  
c -1
h -1
0

intmain(){ intn,i,j,k,@@ z; char@@ max; int@@ sum[@@ 999@@ ]={0}; structstudent{ inta; charb[@@ 26]; intc[@@ 26]; }@@ x[@@ 999]; scanf("%d\n",&n); for(i=0;i<n;i++){ scanf("%d",&@@ x@@ [i].@@ a); for(j=0;@@ ;j++){ scanf("%@@ c@@ ",&@@ x@@ [i].@@ b[j]); if(x@@ [i].@@ b[j]@@ ==@@ '\n@@ ') break; x@@ [i].@@ c[@@ x@@ [i].@@ b[j]@@ -65@@ ]@@ ++;} } for(k=0;k<26@@ ;k++){ for(i=0;i<@@ 999@@ ;i++){ sum@@ [k]=@@ sum@@ [k]@@ +@@ x@@ [i].@@ c@@ [k]; } } z=@@ sum[@@ 0]; max=@@ 65@@ ; for(k=1;k<@@ 26@@ ;k++){ if(sum@@ [k]@@ >@@ z@@ ){ max=@@ k@@ +65; z=@@ sum@@ [k]; } } printf("%c\n",@@ max); printf("%d\n",@@ z); for(i=0;i<n;i++){ if(x@@ [i].@@ c[@@ max@@ -65@@ ]@@ >0){ printf("%d\n",@@ x@@ [i].@@ a); } } scanf("%d",@@ i); return0;}  
c -1
h -1
structstu { long@@ intnum; intchi; int@@ mat@@ ; int@@ tot@@ ; }; intmain() { structstu@@ a[@@ 100050@@ ]; intn,k,i,j,@@ temp2@@ ,@@ max; long@@ int@@ temp1@@ ; scanf("%d",&n); for(i=1;i<=n;i++) { scanf("%ld%d%d",&@@ a[i].@@ num,&@@ a[i].@@ chi@@ ,&a[i].@@ mat@@ ); a[i].@@ tot@@ =@@ a[i].@@ chi@@ +a[i].@@ mat@@ ; } for(j=1;j<=@@ 3;j++) { max=0; a[0].@@ tot@@ =0; for(i=1;i<=n;i++) if(a[@@ max@@ ].@@ tot@@ <@@ a[i].@@ tot@@ )@@ max=i; printf("%ld%d\n",@@ a[@@ max@@ ].num,@@ a[@@ max@@ ].@@ tot@@ ); a[@@ max@@ ].@@ tot@@ =0; } scanf("\n@@ "); return(0); }  
c -1
h -1
0

int@@ disassamble@@ (int,int); intmain() { intn; inti=1; inta,@@ result; cin>>n; while(i<=@@ n) { i++; cin>>a; result=@@ disassamble@@ (a,@@ 2); cout<<@@ result@@ <<endl; } return0; } int@@ disassamble@@ (inta,int@@ y) { inti,@@ count@@ =1; if(a==1) return0; if(a==@@ 2) return1; for(i=y@@ ;i@@ *@@ i<=@@ a;i++) { if(a%i==0) { count=@@ disassamble@@ (a@@ /i,@@ i@@ )+@@ count; } } returncount; }  
c -1
h -1
intmain(){ intsum=0,@@ lena@@ ,@@ lenb@@ ,i,@@ c; char@@ yi@@ [501],@@ er@@ [501]; double@@ rate@@ ,@@ a; scanf("%lf",&a); scanf("%s%s",@@ yi@@ ,@@ er@@ ); lena@@ =strlen(@@ yi@@ ); lenb@@ =strlen(@@ er@@ ); if(@@ lenb@@ !=@@ lena@@ ){ printf("error"); }else{ for(i=0;i<@@ lena@@ ;i++){ if(@@ yi@@ [i]@@ ==0){ break; }elseif(@@ yi@@ [i]>=@@ '@@ A'&&@@ yi@@ [i]<=@@ '@@ Z@@ '&&@@ er@@ [i]>=@@ '@@ A'&&@@ er@@ [i@@ <=@@ 'Z'@@ ]){ if(@@ yi@@ [i]==@@ er@@ [i]){ sum++; }else{ continue; } }else{ c=1; printf("error"); break; } } rate@@ =@@ sum@@ *1.0/@@ lena@@ ; if(c@@ !=1@@ ){ if(@@ rate@@ >@@ a){ printf("yes"); }elseif(@@ rate@@ <=@@ a){ printf("no"); } } } return0; }  
c -1
h -1
0

intnum; void@@ divide@@ (intn,int@@ n2) { inti,@@ m1@@ ; m1=@@ (int)sqrt(@@ (double)@@ n); for(i=@@ n2@@ ;i<=@@ m1@@ ;i++) {@@ if(n%i==0) {@@ num@@ ++;@@ divide@@ (n@@ /i,@@ i@@ );} } } intmain() { intn,i,@@ m; cin>>n; for(i=0;i<n;i++) { num@@ =1; cin>>m; divide@@ (m,@@ 2); cout<<num<<endl; } return0; }  
c -1
h -1
intfenjie@@ (int,int); intmain() { inti,n,@@ t,@@ r,@@ num; cin>>n; for(i=1;i<=n;i++) { cin>>num; r=@@ fenjie@@ (num,@@ 2); cout<<@@ r@@ <<endl; } return0; } intfenjie@@ (int@@ num,int@@ min) { inti,j,k,@@ r=0; for(i=min@@ ;i<=@@ num;i++) { if(num@@ %i==0) { r=r@@ +@@ fenjie@@ (@@ num@@ /i,i); } if(i==@@ num@@ )@@ r++; } return@@ r; }  
c -1
h -1
1


int@@ isrn@@ (intn) { if(n%@@ 400==0) return1; else { if(n%@@ 100==0) return0; else { if(n%@@ 4==0) return1; else return0; } } } voidmain() { inty,m,d,@@ sum=0,@@ i; scanf("%d%d%d",&y,&m,&d); for(i=1;i<m;i++) { if(i==1||i==3||i==5||i==7||i==8||i==@@ 10) { sum+=@@ 31; } if(i==@@ 4||i==6||i==9||i==11) { sum+=@@ 30; } if(i==@@ 2) { if(@@ isrn@@ (y@@ )) sum+=@@ 29; else sum+=@@ 28; } } sum+=@@ d; printf("%d\n",sum); }  
c -1
h -1
intmain() { intn,i,j,k,@@ h,@@ b; scanf("%d",&n); struct@@ sb { intID; intm; intc; intsum; }a[@@ n]; for(i=0;i<n;i++) { scanf("%d%d%d",&a[i].@@ ID,&@@ a[i].@@ m,&@@ a[i].@@ c); a[i].@@ sum=@@ a[i].@@ m+@@ a[i].@@ c; } for(i=0,@@ b@@ =0;i<n;i++) { if(a[i].@@ sum>@@ b) { b=@@ a[i].@@ sum; h@@ =i; } } printf("%d%d\n",@@ a[h@@ ].ID,@@ a[h@@ ].sum); a[h@@ ].@@ sum@@ =-1; for(i=0,@@ b@@ =0;i<n;i++) { if(a[i].@@ sum>@@ b) { b=@@ a[i].@@ sum; h@@ =i; } } printf("%d%d\n",@@ a[h@@ ].ID,@@ a[h@@ ].sum); a[h@@ ].@@ sum@@ =-1; for(i=0,@@ b@@ =0;i<n;i++) { if(a[i].@@ sum>@@ b) { b=@@ a[i].@@ sum; h@@ =i; } } printf("%d%d\n",@@ a[h@@ ].ID,@@ a[h@@ ].sum); getchar(); getchar(); }  
c -1
h -1
0

intmain() { double@@ k; scanf("%lf",&@@ k); int@@ flag@@ ,i,@@ x=0; char@@ d1@@ [501],@@ d2@@ [501]; scanf("%s%s",@@ d1@@ ,@@ d2@@ ); for(i=0;i<(@@ strlen(@@ d1@@ )@@ -1)@@ &&i@@ <(@@ strlen(@@ d2@@ )@@ -1);i++) { if((@@ d1@@ [i]=='A'||@@ d1@@ [i]=='T'||@@ d1@@ [i]=='C'||@@ d1@@ [i]=='@@ G')&&(@@ d2@@ [i]=='A'||@@ d2@@ [i]=='T'||@@ d2@@ [i]=='C'||@@ d2@@ [i]=='@@ G')) flag=1; else { flag=0; break; } } if(strlen(@@ d1@@ )!=strlen(@@ d2@@ )||@@ flag@@ ==0) { printf("error"); return0; } else { for(i=0;i<strlen(@@ d1@@ );i++) { if(@@ d1@@ [i]==@@ d2@@ [i]) x++; } } if(1.0*@@ x/@@ (@@ strlen(@@ d1@@ )@@ -1)@@ >@@ k) printf("yes"); else printf("no"); return0; }  
c -1
h -1
voidmain() { intn,i,@@ d=0,@@ q@@ ,j; intb[@@ 101],@@ f[@@ 101]; chara[@@ 101][@@ 10@@ ],c[@@ 101][@@ 10],@@ e@@ [@@ 101][@@ 10]; scanf("%d",&n); for(i=0;i<n;i++) { scanf("%s%d",@@ a[i],&@@ b[i]); } q=@@ n-1@@ ;j@@ =0; for(i=n-1;i>=0;i--) { if(b[i]@@ <60) { strcpy(@@ c[@@ q@@ ],@@ a[i]); q=q@@ -1; } } for(i=0;i<n;i++) { if(b[i]@@ >=60) { strcpy(@@ c@@ [j],@@ a[i]); f@@ [j]=@@ b[i]; d=d@@ +1; j=j+1; } } for(i=0;i<d@@ ;i++) { for(j=0;j<@@ d@@ -1;j++) { if(f@@ [j]<@@ f@@ [j+1]) { f@@ [100@@ ]=@@ f@@ [j]; f@@ [j]=@@ f@@ [j+1]; f@@ [j+1]=@@ f@@ [100]; strcpy(@@ c[100],@@ c@@ [j]); strcpy(@@ c@@ [j],@@ c@@ [j+1]); strcpy(@@ c[@@ 1@@ +j@@ ],@@ c@@ [100@@ ]); } } } for(i=0;i<n;i++) printf("%s\n",@@ c[i]); }  
c -1
h -1
0

intmain() { intn,i,j,k,@@ p,q,@@ m; inta[20000]; intb[@@ 20000]; scanf("%d",&n); for(i=0;i<n;i++) scanf("%d",&a[i]); b[0]@@ =0; for(j=1;j<n;j++) { b[j]@@ =0; for(k=0;k<j@@ ;k++) { if(a[j]==@@ a[k]) b[j]@@ ++; } } printf("%d",a[0]); for(p=1@@ ;p@@ <n;p++) { if(@@ b[p@@ ]==0) printf("%d",@@ a[p@@ ]); } return0; }  
c -1
h -1
intmain() { intn,a[@@ 1000][@@ 1000]={0},@@ j,@@ m@@ [100],@@ i,@@ k@@ [100],@@ p@@ [100@@ ],b[100],@@ s=0,@@ g=0; scanf("%d",&n); for(j=0;j<n;j++) { for(i=0;i<n;i++) { scanf("%d",&a[j]@@ [i]); } } for(j=0;j<n;j++) { for(i=0;i<n;i++) { if(a[j]@@ [i]==0) { s@@ +=1; m[@@ s@@ ]=@@ j; k@@ [s@@ ]=i; break; } } } for(j=n-1@@ ;j>0;j--) { for(i=n-1@@ ;i>0;i--) { if(a[j]@@ [i]==0) { g@@ +=1; p[@@ g@@ ]=@@ j; b[@@ g@@ ]=i; break; } } } printf("%d",@@ (p@@ [1]@@ -m@@ [1]@@ -1)*(@@ b[1@@ ]@@ -k@@ [1]@@ -1)); return0; }  
c -1
h -1
0

structbook { int@@ order@@ ; intnum; charwriter@@ [26]; }b[@@ 1000]; intmain() { intn,i,j,k,@@ p,@@ q@@ [1000]; scanf("%d",&n); for(i=0;i<=@@ (n-1);i++) { scanf("%d%s",&@@ b[i].@@ num,@@ b[i].@@ writer); b[i].@@ order@@ =i; } chara[@@ 26@@ ]={'A','B','C','D','E','F','G','H','I','J','K','L','M','N','O','P','@@ Q','R','S','T','U','V','W','X','Y','@@ Z'}; intc[@@ 26]; char@@ d@@ [26]; for(j=0;j<=@@ 25@@ ;j++) { d@@ [j]@@ =0; c[j]@@ =0; } for(k=0;k<=@@ 25@@ ;k++) { for(i=0;i<=@@ (n-1);i++) { p@@ =strlen(@@ b[i].@@ writer); strcpy(@@ d,@@ b[i].@@ writer); for(j=0;j<=@@ (p@@ -1)@@ ;j++) { if(d@@ [j]==@@ a[k]) { c@@ [k]=@@ c@@ [k]@@ +1; } } for(j=0;j<=@@ 25@@ ;j++) { d@@ [j]@@ =0; } } } intmax=@@ c[@@ 0]; for(i=0;i<=25;i++) { if(c@@ [i]>max) { max=@@ c[i]; } } char@@ x; for(i=0;i<=25;i++) { if(c@@ [i]==@@ max) { x=@@ a[i]; printf("%c\n",@@ a[i]); printf("%d\n",@@ c[i]); } } for(i=0;i<=@@ 999@@ ;i++) { q@@ [i]=0; } int@@ r=0; char@@ e@@ [26]; for(i=0;i<=25;i++) { e@@ [i]=0; } for(i=0;i<=@@ (n-1);i++) { p@@ =strlen(@@ b[i].@@ writer); strcpy(@@ e,@@ b[i].@@ writer); for(j=0;j<=@@ (p@@ -1)@@ ;j++) { if(e@@ [j]==@@ x) { q@@ [r@@ ]=@@ b[i].@@ num; r=r@@ +1; } } for(j=0;j<=@@ 25@@ ;j++) { e@@ [j]@@ =0; } } ints=0; for(i=0;i<=@@ 999@@ ;i++) { if(q@@ [i]!=0) { s=s+1; } } for(i=0;i<=@@ (@@ s@@ -2@@ );i++) { printf("%d\n",@@ q@@ [i]); } printf("%d",@@ q@@ [s@@ -1]); return0; }  
c -1
h -1
voidmain() { char@@ c,d,@@ str1@@ [256],@@ str2@@ [256],@@ str3@@ [256]; intl,@@ h,@@ i,j=0,@@ k,@@ st@@ =0; scanf("%s",@@ str1); scanf("%s",@@ str2); scanf("%s",@@ str3@@ ); l=strlen(@@ str2); for(i=0;@@ ((@@ c=@@ str2@@ [i])@@ !=@@ '\0')@@ ;i++) { c=@@ str2@@ [i]; for(;@@ ((@@ d=@@ str1@@ [j]@@ )!=@@ '\0')@@ ;j++) { d=@@ str1@@ [j]; if(c==@@ d) { st@@ =@@ st@@ +1; j=j+1; break; } elseif((@@ c@@ !=@@ d@@ )&&(@@ st@@ !=0)) { st@@ =0; i@@ =-1; break; } } } if(@@ st@@ ==@@ l) { for(h@@ =0,@@ k@@ =(@@ j@@ -l@@ )@@ ;k<@@ j@@ ;k@@ ++,@@ h++) { str1@@ [k]=@@ str3@@ [h@@ ]; } printf("%s\n",@@ str1); } else@@ printf("%s\n",@@ str1); }  
c -1
h -1
0

intmain() { intn,k,@@ a[1000]; cin>>n>>k; for(inti=0;i<@@ n;i++)@@ cin>>a[i]; for(inti=0;i<n;i++){ for(intj=0;j<n;j++){ if(a[j]==@@ k-@@ a[i]@@ ){ cout<<"yes"; return0; } } } cout<<"no"; return0; }  
c -1
h -1
struct@@ pat { charnum[@@ 11]; intage; structpat@@ *next; }; voidmain() { intn,i; scanf("%d",&n); structpat@@ *head,*@@ p1,*p2,*@@ pre@@ ; p1=(struct@@ pat@@ *)malloc(sizeof(struct@@ pat@@ )); scanf("%s%d",@@ p1->num,&p1->@@ age); head=p1; p1->next=NULL; for(i=1;i<n;i++) { p1=(struct@@ pat@@ *)malloc(sizeof(struct@@ pat@@ )); scanf("%s%d",@@ p1->num,&p1->@@ age); if(p1->age@@ <60) { p2=head; while(@@ p2@@ ) { if(@@ p2->next@@ ==NULL) { p2->next@@ =p1;@@ p1->next@@ =NULL@@ ;break; } p2=p2->next; } } elseif(@@ p1->age@@ >=60) {@@ p2=head; while(@@ p2@@ ) { if(@@ p2@@ ==@@ head@@ &&@@ p1->age@@ >@@ p2->age@@ ) { head@@ =p1;@@ p1->next@@ =p2@@ ;break; } elseif(@@ p1->age@@ >@@ p2->age@@ ) { pre@@ ->next@@ =p1;@@ p1->next@@ =p2@@ ;break; } elseif(@@ p2->next@@ ==NULL) { p2->next@@ =p1;@@ p1->next@@ =NULL@@ ;break; } else{@@ pre@@ =p2@@ ;@@ p2=@@ p2->next@@ ;} } } } p1=head; while(p1@@ ) { printf("%s\n",@@ p1->num); p1=p1->next; } }  
c -1
h -1
0

intmain(){ inti,j,@@ m,n,@@ k,@@ sum=0,@@ x,@@ q,@@ w,@@ e,@@ r; int@@ ss@@ [100]; intsz[100][100]; scanf("%d",&k); for(x=0;x@@ <k;@@ x@@ ++){ scanf("%d%d",&m,&n); for(i=0;i<m;i++){ for(j=0;j<n;j++){ scanf("%d",&sz@@ [i][j]@@ );} } q=0; w@@ =0; e=0; r=0; for(j=0;j<n;j++){ q=q@@ +sz@@ [0]@@ [j]@@ ;} for(j=0;j<n;j++){ w=@@ w@@ +@@ sz[m@@ -1]@@ [j]@@ ;} for(i=1;i<@@ m-1@@ ;i++){ e=@@ e+@@ sz[i]@@ [0]@@ ;} for(i=1;i<@@ m-1@@ ;i++){ r=r@@ +@@ sz[i]@@ [n-1@@ ];} sum=@@ q@@ +@@ w@@ +@@ e+@@ r; printf("%d\n",sum); } return0; }  
c -1
h -1
intmain(){ chars@@ [100],@@ a[100],b[100],@@ zfc@@ [100],@@ s2[@@ 200]; gets(s); gets(a); gets(b); inti,k,@@ l,@@ la@@ ,lb@@ ,@@ ls@@ ,@@ th@@ =@@ 200@@ ; ls@@ =strlen(s); la@@ =strlen(a); lb@@ =strlen(b); for(i=0;i<@@ ls@@ ;i++){ l=0; for(k=i@@ ;k<@@ la@@ +i@@ ;k++){ zfc@@ [l@@ ]=@@ s@@ [k]; l++; } zfc@@ [l@@ ]='\0'; if(strcmp(@@ zfc@@ ,@@ a)@@ ==0){ th@@ =i; break; } } if(@@ th@@ <@@ 200@@ ){ for(i=0;i<@@ th@@ ;i++){ s2@@ [i]=@@ s[i]; } for(i=@@ th@@ ;i<@@ th@@ +lb@@ ;i++){ s2@@ [i]=@@ b[i-@@ th@@ ]; } for(i=@@ th@@ +lb@@ ;i<@@ ls@@ +lb@@ -@@ la@@ ;i++){ s2@@ [i]=@@ s@@ [i-@@ lb@@ +@@ la@@ ]; } s2[@@ ls@@ +lb@@ -@@ la@@ ]='\0'; puts(@@ s2@@ );} if(@@ th@@ ==@@ 200@@ ){ puts(@@ s); } return0; }  
c -1
h -1
0

int@@ factor@@ (int,int); intmain() { intn,i,@@ a; cin>>n; for(i=0;i<n;i++) { cin>>a; cout<<@@ factor@@ (a,@@ 2)<<endl; } return0; } int@@ factor@@ (inta,intb) { int@@ c,@@ i; intnum@@ =1; if(a==1) return0; c=@@ sqrt(@@ a); for(i=b@@ ;i<=@@ c@@ ;i++) if(a%i==0) num+=@@ factor@@ (a/i,i); returnnum; }  
c -1
h -1
intm,n,@@ a[100],b[100],@@ c[100]; voidinput() { cin>>m>>n; inti,j,k,@@ l; for(i=1;i<=m;i++) cin>>a[i]; for(j=1;j<=n;j++) cin>>@@ b[j]; } voidpaixu@@ (inta[100],int@@ b[100@@ ]) { inti,j,k,@@ l; for(i=1;i<m;i++) { for(j=1;j<@@ m@@ -i@@ +1@@ ;j++) { if(a[j]>a[j+1]) { k=@@ a[j]; a[j]=a[j+1]; a[j+1]=@@ k; } } } for(i=1;i<n;i++) { for(j=1;j<@@ n-i@@ +1@@ ;j++) { if(b[j]>b[j+1]) { k=@@ b[j]; b[j]=b[j+1]; b[j+1]=@@ k; } } } } void@@ he@@ (inta[100],int@@ b[100@@ ]) { inti,j; for(i=1;i<=m;i++) c[i]=a[i]; for(j=i;j<=@@ i+@@ n;j++) c[j]=@@ b@@ [j-i@@ +1]; } voidoutput@@ (int@@ c@@ [100@@ ]) { cout<<c[@@ 1@@ ]; inti; for(i=2;i<=@@ m+n;i++) cout<<''<<@@ c[i]; } intmain() { input(); paixu@@ (a,b); he@@ (a,b); output@@ (@@ c); return0; }  
c -1
h -1
0

struct@@ pa { charid@@ [11]; intage; }; voidmain() { structpa@@ p[@@ 200]; intn,i,@@ t[@@ 200],@@ j,@@ m; scanf("%d",&n); for(i=0;i<n;i++) scanf("%s%d",@@ p[i].@@ id,&@@ p[i].age); i=0; t@@ [0]@@ =0; while(i<n) { if(p@@ [i].age>=60) { for(j=0;j<@@ i@@ &&p@@ [t@@ [j]@@ ].age@@ >=@@ p@@ [i].age@@ ;j++@@ ); for(m@@ =i@@ ;m@@ >@@ j@@ ;m@@ --) t@@ [m]=@@ t[@@ m-1@@ ]; t@@ [j]@@ =i; i++; } else { t@@ [i]=@@ i; i++; } } for(i=0;i<n;i++) printf("%s\n",@@ p@@ [t@@ [i]@@ ].id); }  
c -1
h -1
intmain() { inta[@@ 20000],@@ k,@@ j,@@ b,@@ c,d,@@ e,f,@@ i; scanf("%d",&b); for(i=0;i<b;i++) {@@ scanf("%d",&a[i]);} printf("%d",a[0]); for(j=1;j<@@ b;j++) {@@ for(k=0;k<j@@ ;k++) {if(@@ a[k]==@@ a[j])@@ break;} if(k==@@ j)@@ printf("%d",@@ a[j]@@ );} return0; }  
c -1
h -1
0

intmain() { intsz[1000]; inti,n,@@ m,@@ a,@@ j,@@ b,@@ c,d,@@ e,@@ k; scanf("%d%d",&n,&m); for(i=0;i<n;i++) { scanf("%d",&(sz[i]@@ )); } b=0; for(i=0;i<n;i++) { for(k=0;k<n;k++) { a=@@ sz@@ [k]@@ +sz@@ [i]; if(a==@@ m) b=b@@ +1; } } if(b@@ >0) printf("yes"); elseif(@@ b@@ ==0) printf("no"); return0; }  
c -1
h -1
structpatient { charid[10]; intage; structpatient*next; }; structpatient*@@ sort@@ (structpatient@@ *head,@@ char@@ d[@@ 10@@ ],int@@ a) { structpatient*@@ pp@@ ,*@@ p,*@@ s; p=head; pp@@ =p; p=p->next; s@@ =(struct@@ patient@@ *)malloc(LEN); strcpy(@@ s@@ ->id,@@ d); s@@ ->age=@@ a; while(p@@ !=NULL@@ &&@@ p->age@@ >=@@ a) { pp@@ =p; p=p->next; } s@@ ->next=p; pp@@ ->next=@@ s; } structpatient*@@ creat@@ (structpatient@@ *@@ hhead@@ ,@@ char@@ d[@@ 10@@ ],int@@ a) { structpatient@@ *p,*@@ pp@@ ,*@@ s; p=@@ hhead@@ ; pp@@ =p; p=p->next; while(p!=NULL) { pp@@ =p; p=p->next; } s@@ =(struct@@ patient@@ *)malloc(LEN); s@@ ->age=@@ a; strcpy(@@ s@@ ->id,@@ d); s@@ ->next=p; pp@@ ->next=@@ s; } voidmain() { structpatient@@ *head,*@@ hhead@@ ,*@@ p1,*p2; intn,a,@@ i; char@@ d@@ [10]; scanf("%d",&n); head=(struct@@ patient@@ *)malloc(LEN); head@@ ->next=NULL; hhead@@ =(struct@@ patient@@ *)malloc(LEN); hhead@@ ->next=NULL; for(i=0;i<n;i++) { scanf("%s@@ %d\n",@@ d@@ ,&@@ a); if(a@@ >=60) sort(@@ head,@@ d,@@ a); else@@ creat@@ (@@ hhead@@ ,@@ d,@@ a); } p1=@@ head->next; p2=@@ hhead@@ ->next; while(p1!=NULL) { printf("%s\n",@@ p1->@@ id); p1=p1->next; } while(@@ p2@@ !=NULL) { printf("%s\n",@@ p2->@@ id); p2=p2->next; } }  
c -1
h -1
0

int@@ l=0,@@ num=0,@@ o@@ ; voidf@@ (inti,int@@ in@@ ) { intj; for(j=i;j<@@ (@@ in@@ +1)@@ ;j++) { if(j@@ *(@@ in@@ /j@@ )==@@ in@@ ) { o@@ =@@ in@@ /@@ j; f(@@ j,@@ in@@ /j@@ ); o@@ =@@ o@@ *@@ j; } } if(@@ o@@ ==1){@@ num=num@@ +1;} } intmain() { intt; cin>>t; inti; int@@ in@@ ; for(i=0;i<t;i++) { cin>>@@ in@@ ; f(@@ 2,@@ in@@ ); cout<<num<<endl; num=0; } return0; }  
c -1
h -1
struct@@ mouse { charid[10]; intage; struct@@ mouse@@ *next; }; struct@@ mouse@@ *creat@@ (intn) { struct@@ mouse@@ *head,*p1,*p2; inti; for(i=0;i<n;i++) { if(i@@ ==1)head=p1; if(i@@ >1@@ )@@ p2->next=p1; p2=p1; p1=(struct@@ mouse@@ *)malloc(sizeof(struct@@ mouse@@ )); scanf("%s%d",@@ p1->id,&p1->age); } p2->next@@ =p1;@@ p1->next=NULL; return(head); } struct@@ mouse@@ *@@ order@@ (struct@@ mouse@@ *head@@ ,intn) { struct@@ mouse@@ *p1,*p2; inti,j,@@ x; chara[@@ 10]; for(i=1;i<n;i++) { p2=@@ head;@@ p1=@@ p2->next; for(j=0;j<n-i;j++) { if(@@ p2->age@@ <@@ p1->age@@ &&@@ p1->age@@ >=60) { x=@@ p2->age@@ ;@@ p2->age@@ =p1->@@ age@@ ;@@ p1->age@@ =@@ x; strcpy(@@ a,@@ p2->@@ id@@ );strcpy(@@ p2->@@ id,@@ p1->id@@ );strcpy(@@ p1->@@ id,@@ a); } p2@@ =p1;@@ p1=p1->next; } } return(head); } main() { struct@@ mouse@@ *head,*p; inti,n; scanf("%d",&n); head=creat(n); head=@@ order@@ (head,@@ n); p=head; for(i=0;i<n;i++) { printf("%s\n",p->id); p=p->next; } }  
c -1
h -1
0

structpatient { charnum[10]; intage; structpatient*next; }; intn; structpatient*@@ creat@@ (void) { structpatient*@@ head; structpatient*@@ p1,*p2; intnum@@ =1; head=NULL; while(@@ num@@ <=@@ n) { p1=(struct@@ patient@@ *)malloc(LEN); scanf("%s%d",@@ p1->num,&p1->@@ age); if(num@@ ==1) head=p1; else p2->next=p1; p2=p1; num++; } p2->next=NULL; return(head); } intmain() { structpatient*@@ pt@@ ,*@@ p,*@@ pre@@ ; inti,@@ max,@@ num=0; scanf("%d",&n); pt@@ =@@ creat@@ (); for(p=@@ pt@@ ;p@@ ;@@ p=p->next) { if(p->@@ age@@ >=60) num++; } for(i=1;i<=@@ num;i++) { max=@@ 59@@ ; for(p=@@ pt@@ ;p@@ ;@@ p=p->next) { if(max<@@ p->age@@ ) max=@@ p->@@ age; } for(p=@@ pre@@ =@@ pt@@ ;p@@ ;@@ p=p->next) { if(p->@@ age@@ !=@@ max) pre@@ =p; else break; } printf("%s\n",p->@@ num); if(p==@@ pt@@ ) pt@@ =p@@ ->next; else pre@@ ->next=@@ p@@ ->next; } for(p=@@ pt@@ ;p@@ ;@@ p=p->next) printf("%s\n",p->@@ num); return0; }  
c -1
h -1
unsigned@@ inth@@ [26],@@ n; int@@ go@@ (int@@ maxh@@ ,int@@ cp@@ ) { intx,y,@@ max; while(@@ h@@ [@@ cp@@ ]>@@ maxh@@ )@@ cp@@ =@@ cp@@ +1; if(h@@ [@@ cp@@ ]@@ ==0)@@ return0; x=@@ go@@ (@@ maxh@@ ,@@ cp@@ +1); maxh@@ =@@ h@@ [@@ cp@@ ]; y@@ =1@@ +@@ go@@ (@@ maxh@@ ,@@ cp@@ +1); max@@ =(@@ x@@ >@@ y)@@ ?@@ x@@ :@@ y; return@@ max; } intmain() { unsigned@@ inti,@@ c,@@ t; scanf("%d",&n); for(i=0;i<n;i++)@@ scanf("%d",&h[i]); h@@ [n@@ ]=0; t=@@ go@@ (@@ 65535@@ ,@@ 0); printf("%d",t); return0; }  
c -1
h -1
0

intmain(){ inta[100@@ ],@@ e@@ [100],@@ f@@ [100]; char@@ c@@ [100][100@@ ],b[100@@ ][100],@@ d@@ [100][100],@@ x@@ [100]; intn,@@ p=0,@@ q=0,@@ k,@@ z,@@ i; scanf("%d",&n); for(i=0;i<n;i++){ scanf("%s%d",@@ c[i]@@ ,&@@ a[i]); if(a[i]@@ >=60){ p++; e@@ [i-@@ q@@ ]=a[i]; strcpy(@@ b[i-@@ q@@ ],@@ c[i]); } if(a[i]@@ <60){ q++; f@@ [i-@@ p@@ ]=a[i]; strcpy(@@ d@@ [i-@@ p@@ ],@@ c[i]); } } for(k=1;k<=@@ p@@ ;k++){ for(i=0;i<p@@ -@@ k;i++){ if(e@@ [i]<@@ e@@ [i+1@@ ]){ z=@@ e@@ [i]; e@@ [i]=@@ e@@ [i+1]; e@@ [i+1]=@@ z; strcpy(@@ x,@@ b[i]); strcpy(@@ b[i]@@ ,@@ b@@ [i+1]); strcpy(@@ b@@ [i+1],@@ x); } } } for(i=0;i<p@@ ;i++){ puts(@@ b[i]); } for(i=0;i<@@ q@@ ;i++){ puts(@@ d[i]); } return0; }  
c -1
h -1
intmain(){ intn,i,j,k; scanf("%d",&n); charid@@ [100][10]; int@@ old@@ [100]; for(i=0;i<n;i++){ scanf("%s",@@ id[i]); scanf("%d",&@@ old@@ [i]); } int@@ e; chars@@ [100][10]; for(j=1;j<@@ n;j++){ for(k=0;k<@@ n@@ -j@@ ;k++){ if(old@@ [k]@@ <@@ old@@ [k+1@@ ]@@ &&@@ old@@ [k+1@@ ]@@ >=60){ e=@@ old@@ [k+1]; old@@ [k+1]=@@ old@@ [k]; old@@ [k]=@@ e; strcpy(@@ s@@ [k],@@ id@@ [k+1@@ ]); strcpy(id@@ [k+1@@ ],@@ id@@ [k]); strcpy(id@@ [k],@@ s@@ [k]); } } } for(i=0;i<n;i++){ printf("%s\n",@@ id[i]); } return0; }  
c -1
h -1
1


intf@@ (intm,int@@ min); intmain() { intn,m,@@ i; scanf("%d",&n); for(i=0;i<n;i++) { scanf("%d",&m); printf("%d\n",@@ f(@@ m,@@ 2)); } return0; } intf@@ (intm,int@@ min) { intcount@@ =1,i; if(m==1) return1; elseif(m==@@ 2) return1; else { for(i=min@@ ;i<=sqrt(@@ m@@ );i++) { if(m@@ %i==0) { count+=@@ f(@@ m@@ /i,i); } } returncount; } }  
c -1
h -1
intmain(){ inta[@@ 20@@ ][@@ 20@@ ],i,j,@@ b[@@ 20],@@ s,@@ n=0,@@ k; for(i=0;i<@@ 20@@ ;i++){ for(j=0;j<@@ 16@@ ;j++){ cin>>a[i][j]; if(a[i]@@ [0]@@ ==-1)break; if(a[i][j]@@ ==0){@@ b[i]@@ =j@@ ;break;} } if(a[i]@@ [0]@@ ==-1)break; } s@@ =i; for(i=0;i<@@ s@@ ;i++){ for(j=0;j<@@ b[i]@@ ;j++){ for(k=j+1;k<@@ b[i]@@ ;k++){ if(((@@ a[i][j]@@ %@@ a[i][k]@@ ==0)&&(@@ a[i][j]@@ /@@ a[i]@@ [k]==@@ 2)@@ )||((@@ a[i][k]@@ %@@ a[i][j]@@ ==0)&&(@@ a[i][k]@@ /@@ a[i]@@ [j]==@@ 2)@@ )) n=n+1; } } cout<<n<<endl; n=0; } return0; }  
c -1
h -1
0

voidmain() { inta[100],b[100]; void@@ sca@@ (intx@@ [100],int@@ y@@ [100@@ ]); void@@ res@@ (intx@@ [100],int@@ y@@ [100@@ ]); void@@ pri@@ (intx@@ [100],int@@ y@@ [100@@ ]); sca@@ (a,b); } void@@ sca@@ (intx@@ [100],int@@ y@@ [100@@ ]) { intm,n,@@ i,j,k; scanf("%d%d",&m,&n); for(i=1;i<=m;i++) scanf("%d",&@@ x[i]); for(i=1;i<=n;i++) scanf("%d",&@@ y@@ [i]); for(i=1;i<=m;i++) { for(j=1;j<=@@ m@@ -i;j++) { if(x@@ [j]>@@ x@@ [j+1]) { k=@@ x@@ [j]; x@@ [j]=@@ x@@ [j+1]; x@@ [j+1]=@@ k; } } } for(i=1;i<=m;i++) printf("%d",@@ x[i]); for(i=1;i<=n;i++) { for(j=1;j<=@@ n@@ -i;j++) { if(y@@ [j]>@@ y@@ [j+1]) { k=@@ y@@ [j]; y@@ [j]=@@ y@@ [j+1]; y@@ [j+1]=@@ k; } } } for(i=1;i<n;i++) printf("%d",y@@ [i]); printf("%d",y@@ [n@@ ]); }  
c -1
h -1
intmain() { inti,j,@@ k@@ =1,@@ flag=1; inta[16@@ ]={0}; int@@ c@@ [100]={0}; while(@@ flag@@ ) { for(i=1;i<@@ 16@@ ;i++) { scanf("%d",&a[i]); if(a[i]==@@ -1@@ ){@@ flag@@ =0;@@ break;} if(a[i]@@ ==0){@@ k@@ ++;@@ break;} for(j=i-1@@ ;j>0;j--) { if(a[i]==2*@@ a[j]||@@ 2*@@ a[i]==@@ a[j])@@ c@@ [k]++; } } } for(i=1@@ ;k@@ >0@@ &&i@@ <k@@ ;i++)@@ printf("%d\n",@@ c[i]); return0; }  
c -1
h -1
0

intmain(){ chara[@@ 505@@ ],b[@@ 505@@ ]; inti,j,@@ m,@@ sum=0,@@ SUM@@ =0; double@@ e,@@ n; scanf("%lf",&n); scanf("%s@@ %s",&@@ a,&b); if(strlen(a)!=strlen(b@@ )){ printf("error"); } else{ for(i=0;i<@@ strlen(a)@@ ;i++){ if(((@@ a[i]!='@@ A')&&(@@ a[i]!='@@ G')&&(@@ a[i]!='@@ C')&&(@@ a[i]!='@@ T')@@ )||((@@ b[i]!='@@ A')&&(@@ b[i]!='@@ G')&&(@@ b[i]!='@@ C')&&(@@ b[i]!='@@ T')@@ )){ SUM@@ ++; } else@@ if(a[i]==b[i]){ sum++; } } if(@@ SUM@@ !=0){ printf("error"); } else{ m=strlen(a); e@@ =(double)@@ sum/@@ m; if(e@@ >n){ printf("yes"); } else{ printf("no"); } } } return0; }  
c -1
h -1
intmain() { intk,@@ j; intm,n; inta[@@ 10000]; int@@ *p,@@ r; intsum=0; scanf("%d\n",&@@ k); inti; p=a; for(i=1;i<=k;i++) { scanf("%d%d\n",&@@ m,&n); for(j=0;j<@@ 10000@@ ;j++) *(p+j)@@ =0; for(j=0;j<m@@ *@@ n;j++) scanf("%d",@@ &*@@ (p@@ +j)); for(j=0;j<n;j++) sum=sum+*@@ (p@@ +j); for(@@ r@@ =1;@@ r@@ <m-1@@ ;r++) { sum=sum+*@@ (p@@ +@@ n*@@ r@@ )@@ +*@@ (p@@ +@@ n*@@ r@@ +n-1); } if(m@@ !=1) { for(j=0;j<n;j++) sum=sum+*@@ (p@@ +@@ (m@@ -1)*@@ n@@ +j); } printf("%d\n",sum); sum=0; } }  
c -1
h -1
0

intmain(){ int@@ h,@@ k,@@ e,@@ s,@@ i,@@ l; scanf("%d%d",&@@ h@@ ,&@@ l); int@@ juzhen@@ [@@ hang@@ ][@@ lie@@ ]; for(i=0;i<@@ h@@ ;i++){ for(k=0;k<@@ l@@ ;k++){ scanf("%d",&(@@ juzhen@@ [i][k]@@ )); } } for(s=0;s@@ <@@ l@@ ;s@@ ++){ k=@@ s; i=0; for(e@@ =0;e@@ <=@@ s@@ ;@@ e@@ ++){ printf("%d\n",@@ juzhen@@ [i]@@ [k]); i++; k--; if(i==@@ h@@ ){ break; } } } for(e@@ =1;@@ e@@ <@@ h@@ ;@@ e@@ ++){ i=@@ e; k=@@ l@@ -1; for(s=0;s@@ <(@@ h@@ -@@ e@@ );@@ s@@ ++){ printf("%d\n",@@ juzhen@@ [i]@@ [k]); i++; k--; if(k@@ <0@@ ){ break; } } } return0; }  
c -1
h -1
structstudent { intnum; int@@ s1@@ ; int@@ s2; intsum; }; structstudentstu[100000]; intmain() { intn,i,@@ p,q,@@ r,@@ max; scanf("%d",&n); for(i=0;i<n;i++) { scanf("%d%d%d",&stu[i].num,&stu[i].@@ s1@@ ,&stu[i].@@ s2); stu[i].sum=stu[i].@@ s1@@ +stu[i].@@ s2; } max=0; for(i=0;i<n;i++) { if(stu[i].@@ sum@@ >max) { max=@@ stu[i].@@ sum; p=i; } } max=0; for(i=0;i<n;i++) { if(i!=@@ p) { if(stu[i].@@ sum@@ >max) { max=@@ stu[i].@@ sum; q@@ =i; } } } max=0; for(i=0;i<n;i++) { if((i@@ !=@@ p@@ )&&(i@@ !=@@ q@@ )) { if(stu[i].@@ sum@@ >max) { max=@@ stu[i].@@ sum; r@@ =i; } } } printf("%d%d\n",stu[@@ p@@ ].num,stu[@@ p@@ ].sum); printf("%d%d\n",stu[@@ q@@ ].num,stu[@@ q@@ ].sum); printf("%d%d\n",stu[@@ r@@ ].num,stu[@@ r@@ ].sum); return0; }  
c -1
h -1
0

structbook { charid@@ [11]; charname@@ [30]; }; struct@@ au { intnum; charid@@ [1000][@@ 11]; }; voidmain() { structbook@@ b; struct@@ au@@ a[@@ 26]; intn,i,j=0,@@ k; charc; for(i=0;i<26;i++) a[i].@@ num=0; scanf("%d",&n); for(i=0;i<n;i++) { scanf("%s%s",@@ b@@ .@@ id,@@ b@@ .@@ name); while(@@ b@@ .@@ name@@ [j]@@ !='\0') { k=@@ b@@ .@@ name@@ [j]@@ -'A'; strcpy(@@ a[k@@ ].@@ id@@ [@@ a[k@@ ].num@@ ],@@ b@@ .@@ id); a[k@@ ].@@ num++; j++; } j=0; } k=0; j=0; for(i=0;i<26;i++) { j@@ =(@@ a[i].@@ num@@ >@@ k)@@ ?@@ i@@ :@@ j; k@@ =(@@ a[i].@@ num@@ >@@ k)@@ ?@@ a[i].@@ num@@ :@@ k; } printf("%c\n",@@ 'A'+@@ j); printf("%d\n",@@ k); for(i=0;i<k;i++) printf("%s\n",@@ a[j].@@ id[i]); }  
c -1
h -1
intmain() { intn; int@@ times@@ ; int@@ p[@@ 200][@@ 200]; int@@ hang@@ ,@@ lie@@ ; intsum=0; inti,j; cin>>n; for(@@ times@@ =0;@@ times@@ <n;@@ times@@ ++) { cin>>@@ hang@@ >>@@ lie@@ ; for(i=0;i<@@ hang@@ ;i++) for(j=0;j<@@ lie@@ ;j++) cin>>@@ *(*(p+i)+j); for(i=0;i<@@ hang@@ ;i@@ =i+@@ hang@@ -1) for(j=0;j<@@ lie@@ ;j++) sum=sum+*(@@ *(p+i)+j); for(i=0;i<@@ hang@@ ;i++) for(j=0;j<@@ lie@@ ;j@@ =j@@ +@@ lie@@ -1) sum=sum+*(@@ *(p+i)+j); sum=sum@@ -*@@ (*p)@@ -*@@ (*p@@ +@@ lie@@ -1)@@ -*(@@ *(p+@@ hang@@ -1)@@ )@@ -*(@@ *(p+@@ hang@@ -1)@@ +@@ lie@@ -1); cout<<sum<<endl; sum=0; } return0; }  
c -1
h -1
0

int@@ w@@ [26]={0}; int@@ p=0; void@@ zimu@@ (@@ chara[@@ ]){ intm,@@ i,j; charc; m=strlen(a); for(j=0;j<26@@ ;j++){ c@@ ='A'+@@ j; for(i=0;i<m;i++){ if(a[i]==@@ c) w@@ [j]@@ ++; } } } intmax(int@@ w@@ [26@@ ]){ inti,@@ max; max=@@ w@@ [0]; for(i=1;i<26;i++) if(w@@ [i]@@ >max){ max=@@ w@@ [i]; p=i; } return@@ max; } voidmain(){ charb[@@ 300@@ ][@@ 20]; inta[@@ 300]; intm,i,j,@@ mm@@ ; scanf("%d",&m); for(i=0;i<m;i++) scanf("%d%s",&a[i],@@ b[i]); for(i=0;i<m;i++) zimu@@ (@@ b[i]); mm@@ =@@ max(@@ w); printf("%c\n",@@ p@@ +'A'@@ ); printf("%d\n",@@ mm@@ ); for(i=0;i<m;i++){ for(j=0;j<@@ (@@ strlen(@@ b[i]@@ ))@@ ;j++) if(b[i]@@ [j]==@@ (p@@ +'@@ A')@@ ){ printf("%d\n",a[i]); break; } } }  
c -1
h -1
intmain() { inti,j,n,@@ k,@@ f; inta[1000]; scanf("%d%d",&n,&k); for(i=0;i<n;i++) scanf("%d",&a[i]); f=1; for(i=0;i<n;i++) for(j=0;j<n;j++) if(i!=@@ j) if(a[i]+a[j]==k) { f=0; break; } if(f@@ ) printf("no"); else printf("yes"); return0; }  
c -1
h -1
0

intmain() { double@@ x,@@ n; inti,@@ k=0,@@ s=0,@@ len1,len2@@ ,j@@ =0; chara[@@ 10],@@ dna1@@ [@@ 510@@ ],@@ dna2@@ [@@ 510@@ ]; scanf("%lf",&n); gets(a); gets(@@ dna1); gets(@@ dna2); len1=strlen(@@ dna1); len2=strlen(@@ dna2); if(len1!=@@ len2) { printf("error"); } else { for(i=0;@@ dna1@@ [i]!='\0';i++) { if((@@ dna1@@ [i]!='A'&&@@ dna1@@ [i]!='G@@ '&&@@ dna1@@ [i]!='C'&&@@ dna1@@ [i]!='T')@@ ||(@@ dna2@@ [i]!='A'&&@@ dna2@@ [i]!='G@@ '&&@@ dna2@@ [i]!='C'&&@@ dna2@@ [i]!='T')@@ ) { printf("error"); j++; break; }else{ if(dna1@@ [i]==@@ dna2@@ [i]) { k++; } s++; } } if(j@@ ==0) { x@@ =1.0*@@ k/@@ s; if(x@@ >n) { printf("yes"); }else{ printf("no"); } } } return0; }  
c -1
h -1
intmain() { intyear,month,day; int@@ result; scanf("%d%d%d",&year,&month,&day); result@@ =(@@ month@@ -1)*@@ 30@@ +day; if((year%4==0&&year%100!=0)||(year%400==0)) { if(month==@@ 2@@ ||@@ month==@@ 4@@ ||@@ month==@@ 5) {@@ result=result@@ +1;} if(month==@@ 6@@ ||@@ month==@@ 7) {@@ result=result+@@ 2@@ ;} if(month==8) {@@ result=result+@@ 3@@ ;} if(month==@@ 9@@ ||@@ month==@@ 10) {@@ result=result+@@ 4@@ ;} if(month==@@ 11@@ ||@@ month==@@ 12) {@@ result=result+@@ 5@@ ;} } else { if(month==2) {@@ result=result@@ +1;} if(month==3) {@@ result=result@@ -1@@ ;} if(month==@@ 6@@ ||@@ month==@@ 7) {@@ result=result@@ +1;} if(month==8) {@@ result=result+@@ 2@@ ;} if(month==@@ 9@@ ||@@ month==@@ 10) {@@ result=result+@@ 3@@ ;} if(month==@@ 11@@ ||@@ month==@@ 12) {@@ result=result+@@ 4@@ ;} } printf("%d",@@ result); return0; }  
c -1
h -1
0

struct@@ arr { charid[10]; intage; struct@@ arr@@ *next; }; intn; struct@@ arr@@ *@@ create@@ (intm) { struct@@ arr@@ *@@ head; struct@@ arr@@ *p1,*p2; n=1; p1=p2=(struct@@ arr@@ *)malloc(LEN); scanf("%s%d",&@@ p1->id,&p1->age); head=p1; while(n@@ <@@ m) { p1=(struct@@ arr@@ *)malloc(LEN); p2->next=p1; n++; p2=p1; scanf("%s%d",&@@ p1->id,&p1->age); } p1->next=NULL; return(head); } struct@@ arr@@ *@@ del@@ (struct@@ arr@@ *head,@@ long@@ int@@ dnum@@ ) { struct@@ arr@@ *p1,*p2; p1=@@ p2=head; while(p1@@ !=NULL@@ &&@@ p1->age@@ ==@@ dnum@@ ) { head=@@ p1->next; p2=head; free(@@ p1); p1=head; } while(p1!=NULL) { p2=p1; p1=p1->next; while(p1@@ !=NULL@@ &&@@ p1->age@@ ==@@ dnum@@ ) { p2->next=@@ p1->next; free(@@ p1); p1=@@ p2->next; } } return(head); } voidprint(struct@@ arr@@ *head) { struct@@ arr@@ *p; p=head; while(p!=NULL) { if(p==@@ head@@ ) printf("%s\n",p->id); else@@ printf("%s\n",p->id); p=p->next; } } void@@ freelist@@ (struct@@ arr@@ *head) { struct@@ arr@@ *@@ p=head; if(head@@ !=NULL) { while(p!=NULL) { head=@@ head->next; free@@ (p); p=head; } } } voidmain() { struct@@ arr@@ *head,*@@ p1; intm,@@ max=0; scanf("%d",&m); head=@@ create@@ (m); for(;;) { max=0; for(p1=@@ head;@@ p1@@ !=NULL;@@ p1=p1->next) { max@@ =(@@ max@@ >@@ p1->age@@ )@@ ?@@ max@@ :@@ p1->@@ age; } if(max@@ >=60) { for(p1=@@ head;@@ p1@@ !=NULL;@@ p1=p1->next) { if(p1->age@@ ==@@ max) printf("%s\n",@@ p1->@@ id); } head=@@ del@@ (@@ head@@ ,max); } elsebreak; } print(head); freelist@@ (head); }  
c -1
h -1
intmain() { intn,@@ b,@@ a[@@ 20000],@@ i,j; scanf("%d",&n); scanf("%d",&a[0]); printf("%d",a[0]); for(i=1;i<n;i++) { scanf("%d",&b); a[i]=@@ b; for(j=0;j<i;j++) { if(a[i]==a[j]) a[i]=0; } } for(i=1;i<n;i++) { if(a[i]!=0) printf("%d",a[i]); } printf("\n"); return0; }  
c -1
h -1
0

intmain(){ intk,@@ jz@@ [100][100],@@ ROW@@ ,@@ COL@@ ,@@ h@@ [100],@@ y,@@ i,@@ row,col; scanf("%d",&k); for(i=0;i<k;i++){ scanf("%d%d",&@@ ROW@@ ,&@@ COL@@ ); for(row=0;row@@ <ROW@@ ;@@ row++){ for(col=0;col@@ <@@ COL@@ ;col@@ ++){ scanf("%d",&@@ jz@@ [@@ row][col@@ ]); }} y=0; for(row=0;row@@ <ROW@@ ;@@ row++){ y@@ +=@@ jz@@ [@@ row@@ ][0]; } for(row=0;row@@ <ROW@@ ;@@ row++){ y@@ +=@@ jz@@ [@@ row@@ ][@@ COL@@ -1]; } for(col=0;col@@ <@@ COL@@ ;col@@ ++){ y@@ +=@@ jz@@ [0][@@ col@@ ]; } for(col=0;col@@ <@@ COL@@ ;col@@ ++){ y@@ +=@@ jz@@ [@@ ROW@@ -1@@ ][col@@ ]; } h@@ [i]=@@ y@@ -@@ jz@@ [0][@@ 0]-@@ jz@@ [0][@@ COL@@ -1]@@ -@@ jz@@ [@@ ROW@@ -1@@ ][0]-@@ jz@@ [@@ ROW@@ -1@@ ][@@ COL@@ -1]; } for(i=0;i<k;i++){ printf("%d\n",@@ h[i]); }@@ return0; }  
c -1
h -1
voidmain() { struct@@ data { intnumber; intchinese; intmath; inttotal; }@@ student[@@ 100000],@@ temp; long@@ n,@@ i,j; scanf("%ld",&n); for(i=0;i<n;i++) { scanf("%d%d%d",&@@ student[i].@@ number@@ ,&@@ student[i].@@ chinese@@ ,&@@ student[i].@@ math); student[i].@@ total=@@ student[i].@@ chinese+@@ student[i].@@ math; } for(i=0;i<3;i++) for(j=i+1;j<n;j++) if(@@ student[i].@@ total@@ <@@ student[j].@@ total) { temp.@@ number=@@ student[i].@@ number; temp.@@ chinese@@ =@@ student[i].@@ chinese; temp.@@ math@@ =@@ student[i].@@ math; temp.@@ total=@@ student[i].@@ total; student[i].@@ number=@@ student[j].@@ number; student[i].@@ chinese@@ =@@ student[j].@@ chinese; student[i].@@ math@@ =@@ student[j].@@ math; student[i].@@ total=@@ student[j].@@ total; student[j].@@ number=@@ temp.@@ number; student[j].@@ chinese@@ =@@ temp.@@ chinese; student[j].@@ math@@ =@@ temp.@@ math; student[j].@@ total=@@ temp.@@ total; } for(i=0;i<3;i++) printf("%d%d\n",@@ student[i].@@ number,@@ student[i].@@ total); }  
c -1
h -1
0

struct@@ list { intnum; charauthor[26]; }; struct@@ number { inta; int@@ time@@ ; }; intmain() { inti,j,@@ m,@@ k,@@ length@@ ; struct@@ list@@ book@@ [100]; struct@@ number@@ name@@ [26],@@ most@@ ; scanf("%d",&m); for(i=0;i<m;i++) { scanf("%d%s",&book[i].num,@@ book[i].author); } for(i=0;i<26;i++) { name@@ [i].@@ a=i; name@@ [i].@@ time@@ =0; } for(i=0;i<m;i++) { length@@ =strlen(@@ book[i].author); for(j=0;j<@@ length@@ ;j++) { k@@ =(@@ book[i].author@@ [j]); name@@ [k@@ -65@@ ].@@ time@@ ++; } } most@@ =@@ name@@ [0]; for(i=1;i<26;i++) { if(name@@ [i].@@ time@@ >@@ most@@ .@@ time@@ ){ most@@ =@@ name@@ [i]; } } printf("%c\n%d\n",@@ most@@ .@@ a@@ +65@@ ,@@ most@@ .@@ time@@ ); for(i=0;i<m;i++) { length@@ =strlen(@@ book[i].author); for(j=0;j<@@ length@@ ;j++) { k@@ =(@@ book[i].author@@ [j]); if(@@ most@@ .@@ a@@ +65@@ ==k){ printf("%d\n",book[i].@@ num); } } } return0; }  
c -1
h -1
inta[@@ 102@@ ],b[@@ 102@@ ],c[@@ 202@@ ],@@ m,n; voidshuru@@ () { inti; cin>>m>>n; for(i=0;i<m;i++) cin>>a[i]; for(i=0;i<n;i++) cin>>b[i]; } voidpaixu@@ () { inti,j,t; for(i=0;i<m;i++) { for(j=@@ m-1@@ ;j>i;j--) { if(a[j]@@ <a@@ [j-1]) { t=a[j]; a[j]=@@ a@@ [j-1]; a@@ [j-1]=@@ t; } } } for(i=0;i<n;i++) for(j=n-1;j>i;j--) { if(b[j]@@ <b@@ [j-1]) { int@@ t=@@ b[j]; b[j]=b@@ [j-1]; b@@ [j-1]=@@ t; } } } voidhebing@@ () { inti=0,j=0; for(i=0;i<m;i++) c[i]=a[i]; for(i=0;i<n;i++) c[m@@ +i]=b[i]; } void@@ xianshi@@ () { inti=0; cout<<a[0]; for(i=1;i<@@ n+m;i++) cout<<''<<@@ c[i]; } intmain() { shuru@@ (); paixu@@ (); hebing@@ (); xianshi@@ (); return0; }  
c -1
h -1
0

intmain(){ intn,k,i,j,@@ sz[@@ 1000],@@ sum; scanf("%d%d",&n,&k); for(i=0;i<n-1;i++) scanf("%d",&sz[i]); for(i=0;i<n;i++){ for(j=i+1;j<n;j++){ sum=@@ sz[i]@@ +sz@@ [j]; if(k==@@ sum){ printf("yes"); break; } } if(k==@@ sum) break; if(i==@@ (n-1@@ )&&(@@ sz@@ [i-1]@@ +@@ sz[i]@@ )!=@@ k) printf("no"); } return0; }  
c -1
h -1
intmain() { intt,@@ m,n,@@ a[100][100],@@ i,j,k,@@ sum; int*p; cin>>t; for(k=1;k<=@@ t@@ ;k++) { cin>>m>>n; sum=0; for(i=0;i<=@@ m-1;i++) { for(j=0;j<=n-1;j++) { cin>>a[i][j]; } } for(p=@@ a[0]@@ ;p<=@@ a[0]@@ +@@ n-1@@ ;p++) { sum=sum+*@@ p; } for(i=1;i<=@@ m@@ -2;i++) { sum=sum+@@ a[i][0]+@@ a[i][n-1]; } for(p=@@ a[m-1]@@ ;p<=@@ a[m-1]@@ +@@ n-1@@ ;p++) { sum=sum+*@@ p; } cout<<sum<<endl; } return0; }  
c -1
h -1
0

intmain(){ double@@ m,@@ x; int@@ t=0,@@ a,b,@@ u@@ =0; char@@ ji@@ [501],@@ yin@@ [501]; scanf("%lf",&@@ m); scanf("%s",@@ ji@@ ); scanf("%s",@@ yin@@ ); a=strlen(@@ ji@@ ); b=strlen(@@ yin@@ ); if(a!=@@ b){ printf("error"); }else{ for(int@@ q@@ =0;q@@ <a@@ ;q@@ ++){ if((@@ ji@@ [q@@ ]!='@@ A'&&@@ ji@@ [q@@ ]!='@@ T'&&@@ ji@@ [q@@ ]!='@@ C'&&@@ ji@@ [q@@ ]!='@@ G')||(@@ yin@@ [q@@ ]!='@@ A'&&@@ yin@@ [q@@ ]!='@@ C'&&@@ yin@@ [q@@ ]!='@@ T'&&@@ yin@@ [q@@ ]!='@@ G')){ u@@ =1; } } if(@@ u@@ ==1){ printf("error"); }else{ for(int@@ h@@ =0;h@@ <@@ a;@@ h@@ ++){ if(@@ ji@@ [h@@ ]==@@ yin@@ [h@@ ]){ t++; } } x@@ =1.0*@@ t@@ /@@ a; if(x>@@ m){ printf("yes"); }else{ printf("no"); } } } return0; }  
c -1
h -1
intmain() { intn,i,j,@@ a[100][100],@@ x1,y1,x2,y2@@ ; cin>>n; for(i=0;i<n;i++) for(j=0;j<n;j++) cin>>a[i][j]; for(i=0;i<n;i++) for(j=0;j<n;j++) { if(a[i][j]==0) { x1=i; y1=j; i=@@ n; break; } } for(i=n-1;i>=0;i--) for(j=n-1;j>=0;j--) { if(a[i][j]==0) { x2=i; y2=j; i@@ =-1; break; } } cout<<(@@ x2-x1-1)*(y2-y1@@ -1)@@ <<endl; return0; }  
c -1
h -1
0

intmain(){ double@@ rate@@ ,@@ result; int@@ p=@@ 2,@@ num=0; scanf("%lf\n",&@@ rate@@ ); char@@ dna1@@ [@@ 510@@ ],@@ dna2@@ [@@ 510@@ ]; scanf("%s",@@ dna1); scanf("\n@@ "); scanf("%s",@@ dna2); for(inti=0;i<@@ strlen(@@ dna1@@ );i++){ if((@@ dna1@@ [i]!='A'&&@@ dna1@@ [i]!='T'&&@@ dna1@@ [i]!='C'&&@@ dna1@@ [i]!='G')||(@@ dna2@@ [i]!='A'&&@@ dna2@@ [i]!='T'&&@@ dna2@@ [i]!='C'&&@@ dna2@@ [i]!='G')){ p=0; break; } } if(strlen(@@ dna1@@ )!=strlen(@@ dna2@@ )){ p=0; } if(p==@@ 2@@ ){ for(inti=0;i<@@ strlen(@@ dna1@@ );i++){ if(dna1@@ [i]==@@ dna2@@ [i]){ num++; } } result@@ =1.0*@@ num@@ /@@ strlen(@@ dna1); if(result@@ >=@@ rate@@ ){ printf("yes"); }@@ elseprintf("no"); } if(p@@ ==0) printf("error"); return0; }  
c -1
h -1
intmain() { char@@ exp@@ ; inti,@@ c,@@ t,@@ w,@@ n,@@ s,@@ t2@@ ,j,@@ k,@@ a[@@ 16]; long@@ m,@@ e; float@@ x,y; double@@ r,@@ d,@@ b,@@ h,@@ g@@ [100]; for(;;) { for(i=0;i<=@@ 15@@ ;i++)@@ a[i]=0; for(i=0;i<=@@ 15;i++) { scanf("%d",&a[i]); if(a[i]==0)break; if(a[i]==@@ -1)@@ return0; } n=i; s=0; for(i=0;i<n;i++) { for(j=0;j<n;j++) if(a[j]==2*@@ a[i])@@ s=s+1; } printf("%d\n",s); } return0; }  
c -1
h -1
0

intmain() { intk,m,n,@@ a[@@ 101][@@ 101@@ ],i,j,@@ t,@@ sum=0; cin>>k; for(i=0;i<k;i++) { sum=0; cin>>m>>n; for(j=1;j<=m;j++) { for(t@@ =1;t@@ <=n;@@ t++) { cin>>a[j]@@ [t@@ ]; } } if(m@@ ==1&&n@@ ==1)@@ sum=@@ a[1@@ ][1@@ ]; else for(j=1;j<=m;j++) { sum=sum+@@ a[j]@@ [1]; sum=sum+@@ a[j]@@ [n]; } for(@@ t=@@ 2@@ ;t@@ <n;@@ t++) { sum=sum+@@ a[1@@ ][@@ t@@ ]; sum=sum+@@ a[m@@ ][@@ t@@ ]; } cout<<sum<<endl; } return0; }  
c -1
h -1
char@@ max(@@ chara[@@ ],@@ char@@ i) { char@@ j,@@ m=@@ a[0]; for(j=1;j<i;j++) if(m@@ <@@ a[j]) m=@@ a[j]; return(@@ m); } voidmain() { inth@@ [N@@ ]={0}; char@@ n,@@ i,j; scanf("%d",&n); for(i=n@@ ;i>=1;i--) scanf("%d",&h[i]); char@@ mis@@ [N@@ ]={0},@@ temp@@ [N@@ ]={0}; mis@@ [0]@@ =0; for(i=1;i<=n;i++) { for(j=0;j<=i-1;j++) { if(h@@ [i]>=@@ h@@ [j]) temp@@ [j]=@@ mis@@ [j]+1; else temp@@ [j]@@ =0; } mis@@ [i]=@@ max(@@ temp,@@ i); } for(i=0;i<=@@ n;i++) printf("%d",@@ mis@@ [i]); printf("%d",@@ max(@@ mis@@ ,@@ n+1@@ )); }  
c -1
h -1
0

struct@@ oldpeople { charid[20]; int@@ year; }@@ old@@ [100],@@ old60@@ [100],@@ cache@@ ; intmain() { int@@ n;@@ inti; scanf("%d",&n); for(i=0;i<n;i++) { scanf("%s%d",@@ old@@ [i].id,&@@ old@@ [i].@@ year@@ ); } intj=0; for(i=0;i<n;i++) { if(old@@ [i].@@ year@@ >=60) {@@ old60@@ [j]=@@ old@@ [i]@@ ;j++@@ ;} } intk; for(i=0;i<j;i++) { for(k=0;k<j@@ -i@@ ;k++) { if(@@ old60@@ [k].@@ year@@ <@@ old60@@ [k+1@@ ].@@ year@@ ) { cache@@ =@@ old60@@ [k+1]; old60@@ [k+1]=@@ old60@@ [k]; old60@@ [k]=@@ cache@@ ; } } } for(i=0;i<j;i++) { printf("%s\n",@@ old60@@ [i].id); } for(i=0;i<n;i++) { if(old@@ [i].@@ year@@ <60) printf("%s\n",old@@ [i].id); } return0; }  
c -1
h -1
intmain() { inta[@@ 20@@ ],i,j,@@ n,@@ court@@ ; while(1) { for(i=0;@@ 1@@ ;i++) { cin>>a[i]; if(a[i]==0) break; } if(a[0]==-1) break; n=i; for(i=0,@@ court@@ =0;i<=@@ n;i++) { for(j=i;j<=@@ n-1;j++) { if(a[j]==2*@@ a[i]@@ ||@@ a[i]==@@ 2*@@ a[j]) court@@ ++; } } cout<<@@ court@@ <<endl; } return0; }  
c -1
h -1
0

intmain() { chars[@@ 300],@@ a[@@ 256],b[@@ 256]; intn,m,@@ p,@@ i,j,k; cin.getline(@@ s,@@ 256); cin.getline@@ (a,@@ 256); cin.getline@@ (b,@@ 256); n@@ =strlen(s); m=strlen(a); p@@ =strlen(b); for(i=0;i<n;i++) { if(s[i]==@@ a[0]) { for(j=1;j<@@ m;j++) if(a[j]!=@@ s@@ [j+i@@ ]) break; if(j==@@ m) { if(m==@@ p) { for(j=0;j<m;j++) s[i+j@@ ]=@@ b[j]; } else { if(p@@ <@@ m) { for(j=0;j<@@ p@@ ;j++) s[i+j@@ ]=@@ b[j]; for(j=i@@ +p@@ ;@@ ;j++) { s[j]=@@ s@@ [j@@ +m@@ -@@ p@@ ]; if(s@@ [j]==@@ '\0')@@ break; } } else { for(j=0;;j++) { if(n@@ -j@@ ==@@ i@@ +m@@ -1) break; s[@@ n+@@ p@@ -m@@ -j@@ ]=@@ s[@@ n@@ -j@@ ]; } for(k=0;k<@@ p@@ ;k++) s@@ [i+k@@ ]=@@ b[k@@ ]; } } break; } } } cout<<s<<endl; return0; }  
c -1
h -1
intmain() {@@ inti,j,@@ e; chars[@@ 256]; charb[@@ 256]; chara[@@ 256]; gets(s); gets(a); gets(b); intc; i=0; for(i=0;s[i]@@ !='\0';i++) {@@ j@@ =0;c@@ =0;e@@ =i; if(s[i]==@@ a[j]) { for(;@@ a[j]@@ !='\0'@@ ;j++@@ ,i++) {@@ if(a[j]!=@@ s@@ [i]) { c++; } } if(c@@ ==0) { for(j=0;@@ a[j]@@ !='\0'@@ ;j++,@@ e++) { s[@@ e@@ ]=@@ b[j]; } break; } } i=@@ e; } printf("%s",s); return0; }  
c -1
h -1
1


intmain() { intn,k,@@ a[1000],@@ i,j; scanf("%d%d",&n,&k); for(i=0;i<n;i++) { scanf("%d",&a[i]); } for(i=0;i<n-1;i++) { for(j=i+1;j<n;j++) { if(a[i]+a[j]==k) { printf("yes"); break; } } if(a[i]+a[j]==k) break; if(i==@@ n-2@@ ) printf("no"); } return0; }  
c -1
h -1
intm,n,@@ a[@@ 500],b[@@ 200],@@ temp; voidread@@ (void) { cin>>m>>n; for(inti=0;i<@@ m@@ ;i++)@@ cin>>a[i]; for(inti=0;i<@@ n;i++)@@ cin>>b[i]; } void@@ rank@@ (void) { for(inti=0;i<@@ m-1;i++) for(intj=0;j<@@ m@@ -i-1;j++) { if(a[j]>a[j+1]) { temp=a[j]; a[j]=a[j+1]; a[j+1]=temp; } } for(inti=0;i<@@ n-1;i++) for(intj=0;j<@@ n@@ -i-1;j++) { if(b[j]>b[j+1]) { temp=@@ b[j]; b[j]=b[j+1]; b[j+1]=@@ temp; } } } void@@ merge@@ (void) { for(inti=0;i<@@ n;i++)@@ a[m@@ +i]=b[i]; } void@@ show@@ (void) { for(inti=0;i<@@ m+@@ n-1@@ ;i++)@@ cout<<a[i]@@ <<''; cout<<a[@@ m+@@ n-1]; } intmain(void) { read(); rank@@ (); merge@@ (); show@@ (); return0; }  
c -1
h -1
0

structstudent { intnum; int@@ liter@@ ; intmath; inttotal; }; intmain() { inti,j,k,@@ n; structstudent@@ a[@@ 100000],@@ n1,n2,@@ n3@@ ; scanf("%d",&n); scanf("%d%d%d",&@@ a[0].@@ num,&@@ a[0].@@ liter@@ ,&@@ a[0].@@ math); a[0].@@ total=@@ a[0].@@ liter@@ +@@ a[0].@@ math; n1@@ =@@ n2@@ =@@ n3@@ =@@ a[0]; for(i=1;i<n;i++) { scanf("%d%d%d",&a[i].@@ num,&@@ a[i].@@ liter@@ ,&a[i].@@ math); a[i].@@ total=@@ a[i].@@ liter@@ +a[i].@@ math; if(a[i].@@ total>@@ n1@@ .@@ total) { n3@@ =@@ n2; n2@@ =@@ n1@@ ; n1@@ =@@ a[i]; } elseif(a[i].@@ total>@@ n2@@ .@@ total) { n3@@ =@@ n2; n2@@ =@@ a[i]; } elseif(a[i].@@ total>@@ n3@@ .@@ total) n3@@ =@@ a[i]; } printf("%d%d\n",@@ n1@@ .num,@@ n1@@ .@@ total); printf("%d%d\n",@@ n2@@ .num,@@ n2@@ .@@ total); printf("%d%d",@@ n3@@ .num,@@ n3@@ .@@ total); return0; }  
c -1
h -1
intmain(intargc,char*argv[]) { int@@ A[@@ 1000][1000]; intn,@@ a,b,@@ c,d; inti=0,j=0; scanf("%d",&n); for(i=0;i<n;i++) { for(j=0;j<n;j++) { scanf("%d",&@@ A@@ [i][j]); if(A@@ [i][j]==0&&@@ A@@ [i]@@ [j-1]@@ !=0&&@@ A@@ [i-1][j]@@ !=0) { a=i; b=j; } if(A@@ [i][j]==0&&@@ A@@ [i]@@ [j-1]@@ ==0&&@@ A@@ [i-1][j]@@ ==0) { c=i; d=j; } } } printf("%d",(@@ c-a-1)*(d-b@@ -1)); return0; }  
c -1
h -1
0

intmain() { chara[@@ 501]; charb[@@ 501]; inti,n,@@ j,@@ k; float@@ v@@ ; j=0; k=0; n=0; scanf("%f",&@@ v@@ ); scanf("%s",a); scanf("%s",b); for(i=0;a[i]!='\0';i++) { j=j+1; if((a[i]!='@@ A')&&(@@ a[i]!='@@ T')&&(@@ a[i]!='@@ C')&&(@@ a[i]!='@@ G')) { printf("error"); return0; } } for(i=0;@@ b[i]@@ !='\0';i++) { k=k+1; if((@@ b[i]!='@@ A')&&(@@ b[i]!='@@ T')&&(@@ b[i]!='@@ C')&&(@@ b[i]!='@@ G')) { printf("error"); return0; } } if(j!=@@ k) { printf("error"); return0; } for(i=0;a[i]!='\0';i++) { if(a[i]==b[i]) { n=n+1; } } if(@@ v@@ *@@ j@@ <n) { printf("yes"); } else { printf("no"); } return0; }  
c -1
h -1
intmain() { chara[@@ 260@@ ],b[@@ 260@@ ],c[@@ 260@@ ]; scanf("%s%s%s",a,b,c); inti,j,@@ t,@@ l,@@ k=0,@@ m=0; l=@@ (int)@@ strlen(@@ a); t=@@ (int)@@ strlen(@@ b); for(i=0;i<l@@ -@@ t@@ +1;i++) { for(j=0;j<@@ t;j++) { if(a@@ [i+j]!=@@ b[j]) k=0; if(a@@ [i+j]==@@ b[j]) k=k+1; if(t@@ ==k) { m=i; i=@@ l; } } } if(m==0) printf("%s",a); if(m@@ !=0) { for(i=0;i<m;i++) printf("%c",a[i]); printf("%s",@@ c); for(i=@@ m+@@ t@@ ;i<@@ l@@ ;i++) printf("%c",a[i]); } return0; }  
c -1
h -1
0

intmain(){ intn; scanf("%d",&n); int@@ visit@@ [@@ 101@@ ]={0}; inti; for(i=0;i<n;i++){ intnum; scanf("%d",&num); if(@@ visit@@ [@@ num@@ ]@@ ==1){ }else{ if(i@@ !=0){ printf(""); } printf("%d",@@ num); visit@@ [@@ num@@ ]=1; } } printf("\n"); return0; }  
c -1
h -1
structstudent{ intID; int@@ yw@@ ; int@@ sx; }stu[100000]; intmain(){ intnum,@@ i,j,@@ sum[@@ 100000],@@ t,@@ m; cin>>num; for(i=1;i<=@@ num@@ ;i++){ cin>>@@ stu[i].@@ ID@@ >>stu[i].@@ yw@@ >>stu[i].@@ sx; sum[i]=@@ stu[i].@@ yw@@ +stu[i].@@ sx; } for(i=1;i<@@ 4@@ ;i++){ for(j=@@ num@@ ;j>@@ 1@@ ;j--){ if(sum@@ [j]>@@ sum@@ [j-1]@@ ){ t=@@ sum@@ [j-1]@@ ;@@ m=@@ stu[j-1].@@ ID; sum@@ [j-1]=@@ sum@@ [j];@@ stu[j-1].@@ ID@@ =@@ stu[j].@@ ID; sum@@ [j]=@@ t;@@ stu[j].@@ ID@@ =@@ m; } } } for(i=1;i<@@ 4@@ ;i++){ cout<<@@ stu[i].@@ ID@@ <<''<<@@ sum[i]@@ <<endl;} return0; }  
c -1
h -1
0

struct@@ wr {@@ char@@ w; intk; intnum[@@ 1000]; struct@@ wr@@ *next; }; struct@@ wr@@ *creat@@ (void) { struct@@ wr@@ *head,*@@ p1,*p2@@ ,@@ a; char@@ i; head=@@ p2@@ =(struct@@ wr@@ *)malloc(sizeof(struct@@ wr@@ )); head->@@ w@@ ='A'; head->@@ k=0; for(i@@ ='@@ B@@ '@@ ;i<=@@ 'Z'@@ ;i++) { p1=(struct@@ wr@@ *)malloc(sizeof(struct@@ wr@@ )); p1->@@ w@@ =i; p1->@@ k=0; p2->next=p1; p2=p1; } p2->next=NULL; returnhead; } void@@ add@@ (char@@ a,int@@ b,@@ struct@@ wr@@ *head) { struct@@ wr@@ *p; for(p=head@@ ;p!=NULL;p=p->next) if(a==@@ p->@@ w@@ ) {@@ (p->@@ k)@@ ++; *(@@ p->@@ num@@ +p->@@ k@@ -1)@@ =@@ b; } } void@@ max@@ (struct@@ wr@@ *head) { struct@@ wr@@ *@@ p1,@@ t; for(p1=@@ head@@ ->next@@ ;@@ p1@@ !=NULL;@@ p1=p1->next) if(p1->@@ k@@ >@@ head->@@ k) *head@@ =*@@ p1; } voidmain() { struct@@ wr@@ *head,*@@ t; intn@@ ,*@@ no@@ ,i; char*@@ ws@@ ,*p; ws@@ =(char@@ *)malloc(sizeof@@ (char)@@ *@@ 27@@ ); head=creat(); scanf("%d",&n); for(i=1;i<=n;i++) { scanf("%d",&@@ no@@ ); gets(@@ ws@@ ); for(p=@@ ws@@ ;@@ *p@@ !='\0'@@ ;p++) add@@ (*p@@ ,@@ no@@ ,@@ head); } max(@@ head); printf("%c\n",@@ head->@@ w); printf("%d\n",@@ head->@@ k); for(i=0;i<@@ head->@@ k;i++) printf("%d\n",*(@@ head->@@ num@@ +i)); }  
c -1
h -1
intk; inth@@ [25]; int@@ l@@ [25]; intmain() { cin>>k; inti,j; for(i=0;i<k;i++) { cin>>@@ h@@ [i]; l@@ [i]=0; } l@@ [0]=1; for(i=1;i<k;i++) { int@@ temp=@@ -1; for(j=0;j<i;j++) { if(h@@ [j]>=@@ h@@ [i]@@ &&@@ l@@ [j]+1>@@ temp@@ ) temp=@@ l@@ [j]+1; } if(temp@@ ==-1) l@@ [i]=1; else l[i]=@@ temp; } int@@ res@@ =@@ -1; for(i=0;i<k;i++) { if(l@@ [i]>@@ res@@ ) res@@ =@@ l@@ [i]; } cout<<@@ res@@ <<endl; return0; }  
c -1
h -1
0

inta; int@@ fj@@ (intx,int@@ y); intmain() { intn; cin>>n; inti; for(i=1;i<=n;i++) { cin>>a; cout<<@@ fj@@ (a,@@ 2)<<endl; } return0; } int@@ fj@@ (intx,inty) { int@@ xnumber@@ =1; inti; int@@ b=@@ sqrt(@@ x); if(x@@ ==1)@@ return0; else for(i=y@@ ;i<=@@ b;i++) { if(x@@ %i==0)@@ xnumber@@ =@@ xnumber@@ +@@ fj@@ (x/i,i); } return@@ xnumber@@ ; }  
c -1
h -1
struct@@ HaHa { intx,y,@@ z@@ [2][@@ 1000],@@ g@@ [@@ 2000]; }; struct@@ HaHa@@ scan@@ () { struct@@ HaHa@@ hehe@@ ; inti,j; scanf("%d%d",&@@ hehe@@ .@@ x,&@@ hehe@@ .@@ y); for(i=0;i<@@ hehe@@ .@@ x;i++) scanf("%d",&@@ hehe@@ .z@@ [0]@@ [i]); for(j=0;j<@@ hehe@@ .@@ y;j++) scanf("%d",&@@ hehe@@ .z@@ [1]@@ [j]); return(@@ hehe@@ ); } struct@@ HaHa@@ line@@ (struct@@ HaHa@@ yahoo@@ ) { inti,@@ temp@@ ,j; struct@@ HaHa@@ yahoo1@@ ; for(i=0;i<@@ yahoo@@ .@@ x;i++) { for(j=i;j<@@ yahoo@@ .@@ x;j++) { if(@@ yahoo@@ .z@@ [0]@@ [i]>@@ yahoo@@ .z@@ [0]@@ [j]) { temp=@@ yahoo@@ .z@@ [0]@@ [i]; yahoo@@ .z@@ [0]@@ [i]=@@ yahoo@@ .z@@ [0]@@ [j]; yahoo@@ .z@@ [0]@@ [j]=temp; } } } for(i=0;i<@@ yahoo@@ .@@ y;i++) { for(j=i;j<@@ yahoo@@ .@@ y;j++) { if(@@ yahoo@@ .z@@ [1]@@ [i]>@@ yahoo@@ .z@@ [1]@@ [j]) { temp=@@ yahoo@@ .z@@ [1]@@ [i]; yahoo@@ .z@@ [1]@@ [i]=@@ yahoo@@ .z@@ [1]@@ [j]; yahoo@@ .z@@ [1]@@ [j]=temp; } } } yahoo1@@ =@@ yahoo@@ ; return(@@ yahoo1@@ ); } struct@@ HaHa@@ combine@@ (struct@@ HaHa@@ xx@@ ) { inti; struct@@ HaHa@@ xx1@@ ; for(i=0;i<@@ xx@@ .@@ x;i++) { xx@@ .@@ g@@ [i]=@@ xx@@ .z@@ [0]@@ [i]; } for(i=0;i<@@ xx@@ .@@ y;i++) { xx@@ .@@ g@@ [i+@@ xx@@ .@@ x@@ ]=@@ xx@@ .z@@ [1]@@ [i]; } xx1@@ =@@ xx@@ ; return(@@ xx1@@ ); } voidprint(struct@@ HaHa@@ xxx@@ ) { inti; for(i=0;i<@@ xxx@@ .@@ x+@@ xxx@@ .@@ y@@ -1;i++) { printf("%d",@@ xxx@@ .@@ g@@ [i]); } printf("%d",@@ xxx@@ .@@ g@@ [@@ xxx@@ .@@ x+@@ xxx@@ .@@ y@@ -1]); } voidmain() { print(@@ combine@@ (@@ line@@ (@@ scan@@ (@@ ))@@ )); }  
c -1
h -1
0

intf(inta,int@@ min) { if(a<@@ min) { return0; } int@@ k@@ =1,i; for(i=min@@ ;i<@@ a;i++) { if(a%i==0) { k=k@@ +@@ f(a@@ /i,i); } } return(@@ k); } intmain() { intf(inta,int@@ min); intj,@@ n; inta[100],b[100]; scanf("%d",&n); for(j=0;j<n;j++) scanf("%d",&a[j]); for(j=0;j<n;j++) { b[j]=@@ f(@@ a[j]@@ ,@@ 2); printf("%d\n",@@ b[j]); } return0; }  
c -1
h -1
structpatient { charid[10]; intage; structpatient*next; }; intn; structpatient*@@ creat@@ (int@@ num) { structpatient@@ *head,*p1,*p2; n=0; p1=p2=(struct@@ patient*)malloc(sizeof(structpatient)); scanf("%s%d",@@ p1->id,&p1->age); head=NULL; while(n@@ <(@@ num@@ -1)) { n=n+1; if(n@@ ==1)head=p1; elsep2->next=p1; p2=p1; p1=(struct@@ patient*)malloc(sizeof(structpatient)); scanf("%s%d",@@ p1->id,&p1->age); } p2->next=p1; p1->next=NULL; return(head); } structpatient*@@ old@@ (structpatient@@ *head) { structpatient*@@ old@@ ,*@@ p1,*p2,*@@ p; n=0; p=head; p1=p2=(struct@@ patient*)malloc(sizeof(structpatient)); old@@ =NULL; while(p!=NULL) { if((@@ n@@ ==0)&&(@@ p->age@@ >=60@@ )) { strcpy(@@ p1->id@@ ,"@@ "); strcpy(@@ p1->@@ id,@@ p->@@ id); p1->age@@ =p->@@ age; old@@ =p1; p2=p1; n=1; } elseif(@@ p->age@@ >=60) { strcpy(@@ p1->id@@ ,"@@ "); strcpy(@@ p1->@@ id,@@ p->@@ id); p1->age@@ =p->@@ age; p2->next=p1; p2=p1; } p1=(struct@@ patient*)malloc(sizeof(structpatient)); p=p->next; } p2->next=NULL; return(@@ old@@ ); } structpatient*@@ sort@@ (structpatient@@ *head) { structpatient@@ head0@@ ,@@ end0@@ ; structpatient*@@ p0@@ ,*@@ p1,*p2,*@@ p; head0@@ .@@ next@@ =head; p=head; while(p@@ ->next@@ !=NULL) p=p->next; p=p@@ ->next@@ =&@@ end0@@ ; while(p@@ !=@@ head0@@ .@@ next@@ ) { p0@@ =&@@ head0@@ ; p1=@@ p0@@ ->next; p2=p1->next; while(@@ p2@@ !=@@ p) { if((@@ p1->age@@ )@@ <(@@ p2->age@@ )) { p0@@ ->next=@@ p2; p1->next=@@ p2->next; p2->next=p1; p0@@ =p2; p2=p1->next; } else { p0@@ =p1; p1=p2@@ ; p2=p2->next; } } p=@@ p1; } while(p@@ ->next@@ !=@@ &@@ end0@@ ) p=p->next; p@@ ->next=NULL; return(@@ p1); } void@@ print2@@ (structpatient@@ *head) { structpatient@@ *p; p=head; while(p!=NULL) { if(p->@@ age@@ <60@@ )@@ printf("%s\n",p->@@ id@@ ),@@ p=p->next; else@@ p=p->next; } } void@@ print1@@ (structpatient@@ *head) { structpatient@@ *p; p=head; while(p!=NULL) { printf("%s\n",p->id); p=p->next; } } voidmain() { structpatient*@@ creat@@ (int@@ num); structpatient*@@ old@@ (structpatient@@ *head@@ ); structpatient*@@ sort@@ (structpatient@@ *head@@ ); void@@ print1@@ (structpatient@@ *head@@ ); void@@ print2@@ (structpatient@@ *head@@ ); structpatient@@ *head,*@@ oldp@@ ,*@@ sortold@@ ; intnum; scanf("%d",&num); head=creat@@ (@@ num); oldp@@ =@@ old@@ (head); sortold@@ =@@ sort(@@ oldp@@ ); print1@@ (@@ sortold@@ ); print2@@ (head); }  
c -1
h -1
0

intmain() { intn,i,j,k,@@ t=0,@@ c=0; int@@ A@@ [25]; char@@ g@@ [@@ ]@@ ="@@ ABCDEFGHIJKLMNOPQRSTUVWXYZ@@ "; struct@@ point@@ { inta; chars[@@ 80@@ ]; }@@ tope@@ [1000]; scanf("%d",&n); for(i=0;i<n;i++) { scanf("%d%s",&@@ tope@@ [i].@@ a,@@ tope@@ [i].@@ s); } for(k=0;k<26;k++) { A@@ [k]@@ =0; for(i=0;i<n;i++){ for(j=0;@@ tope@@ [i].@@ s[j]@@ !='\0';j++) { if(@@ tope@@ [i].@@ s@@ [j]==@@ g@@ [k]) { A@@ [k]++; } } } } for(i=0;i<26;i++) { if(A@@ [i]>@@ t) { t=@@ A@@ [i]; c=i; } } printf("%c\n%d\n",@@ g@@ [c@@ ],@@ t); for(i=0;i<n;i++) { for(j=0;@@ tope@@ [i].@@ s[j]@@ !='\0';j++) { if(@@ tope@@ [i].@@ s@@ [j]==@@ g@@ [c@@ ]) { printf("%d\n",@@ tope@@ [i].@@ a); } } } return0; }  
c -1
h -1
int@@ shu1@@ ,@@ shu2@@ ; int@@ sum[@@ max@@ ],@@ sum2@@ [max@@ ]; int@@ comp@@ (constvoid*a,constvoid*@@ b) { return@@ *(int*)@@ a@@ -@@ *(int*)@@ b; } voidinput() { cin>>@@ shu1@@ >>@@ shu2@@ ; } void@@ input1@@ () { inti; for(i=0;i<@@ shu1@@ ;i++) cin>>@@ sum[i]; for(i=0;i<@@ shu2@@ ;i++) cin>>@@ sum2@@ [i]; } void@@ pai@@ () { qsort(@@ sum,@@ shu1@@ ,@@ sizeof(int),@@ comp@@ ); qsort(@@ sum2@@ ,@@ shu2@@ ,@@ sizeof(int),@@ comp@@ ); } voidprint() { inti; intk=0; for(i=0;i<@@ shu1@@ ;i++) if(k@@ ==0){@@ cout<<sum@@ [i]@@ ;k@@ ++;} else@@ cout<<""<<@@ sum[i]; for(i=0;i<@@ shu2@@ ;i++) if(k@@ ==0){@@ cout<<@@ sum2@@ [i]@@ ;k@@ ++;} else@@ cout<<""<<@@ sum2@@ [i]; } intmain() { input(); input1@@ (); pai@@ (); print(); }  
c -1
h -1
0

intmain() { intsum@@ [100]={0},@@ i,j,k,@@ h,@@ a[100],b[100],@@ juzhen@@ [100][100]; scanf("%d",&k); for(h=0;h@@ <k;@@ h++) { scanf("%d%d",&@@ (@@ a[h@@ ])@@ ,&@@ (@@ b[@@ h@@ ]@@ )); for(i=0;i<@@ a[h@@ ]@@ ;i++) { for(j=0;j<@@ b[@@ h@@ ]@@ ;j++) { scanf("%d",&(@@ juzhen@@ [i][j]@@ )); } } for(i=0;i<@@ a[h@@ ]@@ ;i++) { sum[@@ h@@ ]=sum[@@ h@@ ]+@@ juzhen@@ [i]@@ [0]+@@ juzhen@@ [i]@@ [@@ b[@@ h@@ ]@@ -1]; } for(j=1;j<@@ b[@@ h@@ ]@@ -1;j++) { sum[@@ h@@ ]=sum[@@ h@@ ]+@@ juzhen@@ [0]@@ [j]+@@ juzhen@@ [@@ a[h@@ ]@@ -1][j]; } } for(h=0;h@@ <k;@@ h++) { printf("%d\n",@@ sum[@@ h@@ ]); } return0; }  
c -1
h -1
intmain(intargc,char*argv[]) { inta,b,c,@@ x; scanf("%d%d%d",&a,&b,&c); if(a%@@ 4==0&&a%100!=0@@ ||a%@@ 400==0) { if(b@@ ==1)@@ printf("%d",@@ c); elseif(b==@@ 2) {@@ x=31+@@ c@@ ;printf("%d",@@ x);} elseif(b==@@ 3) {@@ x=31+29@@ +c@@ ;printf("%d",@@ x);} elseif(b==@@ 4) {@@ x=31+29@@ +31+@@ c@@ ;printf("%d",@@ x);} elseif(b==@@ 5) {@@ x=31+29@@ +31+30@@ +c@@ ;printf("%d",@@ x);} elseif(b==@@ 6) {@@ x=31+29@@ +31+30+31+@@ c@@ ;printf("%d",@@ x);} elseif(b==@@ 7) {@@ x=31+29@@ +31+30+31+30@@ +c@@ ;printf("%d",@@ x);} elseif(b==@@ 8) {@@ x=31+29@@ +31+30+31+30+31+@@ c@@ ;printf("%d",@@ x);} elseif(b==@@ 9) {@@ x=31+29@@ +31+30+31+30+31+31+@@ c@@ ;printf("%d",@@ x);} elseif(b==@@ 10) {@@ x=31+29@@ +31+30+31+30+31+31+30@@ +c@@ ;printf("%d",@@ x);} elseif(b==@@ 11) {@@ x=31+29@@ +31+30+31+30+31+31+30+31+@@ c@@ ;printf("%d",@@ x);} elseif(b==@@ 12) {@@ x=31+29@@ +31+30+31+30+31+31+30+31+30@@ +c@@ ;printf("%d",@@ x);} } else { if(b@@ ==1)@@ printf("%d",@@ c); elseif(b==@@ 2) {@@ x=31+@@ c@@ ;printf("%d",@@ x);} elseif(b==@@ 3) {@@ x=31+28@@ +c@@ ;printf("%d",@@ x);} elseif(b==@@ 4) {@@ x=31+28@@ +31+@@ c@@ ;printf("%d",@@ x);} elseif(b==@@ 5) {@@ x=31+28@@ +31+30@@ +c@@ ;printf("%d",@@ x);} elseif(b==@@ 6) {@@ x=31+28@@ +31+30+31+@@ c@@ ;printf("%d",@@ x);} elseif(b==@@ 7) {@@ x=31+28@@ +31+30+31+30@@ +c@@ ;printf("%d",@@ x);} elseif(b==@@ 8) {@@ x=31+28@@ +31+30+31+30+31+@@ c@@ ;printf("%d",@@ x);} elseif(b==@@ 9) {@@ x=31+28@@ +31+30+31+30+31+31+@@ c@@ ;printf("%d",@@ x);} elseif(b==@@ 10) {@@ x=31+28@@ +31+30+31+30+31+31+30@@ +c@@ ;printf("%d",@@ x);} elseif(b==@@ 11) {@@ x=31+28@@ +31+30+31+30+31+31+30+31+@@ c@@ ;printf("%d",@@ x);} elseif(b==@@ 12) {@@ x=31+28@@ +31+30+31+30+31+31+30+31+30@@ +c@@ ;printf("%d",@@ x);} } }  
c -1
h -1
0

intmain() { intk,@@ n,m,@@ sum=0,@@ i,j,@@ p; inta[100][100]; cin>>k; while(k@@ >0) { cin>>m>>n; for(i=0;i<m;i++) { for(j=0;j<n;j++) { cin>>a[i][j]; } } if(n@@ ==1&&@@ m@@ ==1) { cout<<@@ a[0][0]@@ <<endl; } elseif(n@@ ==1&&@@ m@@ >1) { for(i=0;i<m;i++) { sum+=@@ a[i][0]; } cout<<sum<<endl; sum=0; } elseif(n@@ >1@@ &&m@@ ==1) { for(j=0;j<n;j++) { sum+=@@ a[0][j]; } cout<<sum<<endl; sum=0; } else { for(i=0;i<m;i++) { sum+=@@ a[i][0]+@@ a[i][n-1]; } for(j=0;j<n;j++) { sum+=@@ a[0]@@ [j]+@@ a[m-1][j]; } sum@@ -=@@ a[0][0]@@ +@@ a[0][@@ n-1@@ ]+@@ a[@@ m-1@@ ][0]+@@ a[m-1][@@ n-1]; cout<<sum<<endl; } sum=0; k--; } }  
c -1
h -1
voidshuru@@ (inta[],int@@ m) {inti; for(i=0;i<m;i++) cin>>a[i]; } voidpaixu@@ (int@@ b[],int@@ m) {@@ inti,j,t; for(i=0;i<m-1;i++) {@@ for(j=0;j<m@@ -i-1;j++) {@@ if(b[j]>b[j+1]) {t=@@ b[j]; b[j]=b[j+1]; b[j+1]=@@ t;@@ }@@ }}} voidhebing@@ (inta[],intb[],int@@ m,intn) {inti; for(i=0;i<m;i++) cout<<a[i]<<""; for(i=0;i<n-1;i++) cout<<b[i]<<""; cout<<b[@@ n-1]; } intmain() {@@ intm,n; cin>>m>>n; inta[@@ m@@ ],b[@@ n]; shuru@@ (a,m); shuru@@ (b,n); paixu@@ (a,m); paixu@@ (b,n); hebing@@ (a,b,m,n); return0; }  
c -1
h -1
0

intmain() { double@@ x,@@ z@@ =0,@@ n=0,@@ m=0; int@@ y=0; inti; chara[501],b[501]; scanf("%lf",&x); scanf("%s\n@@ %s",@@ a,b); for(i=0;a[i]@@ ;i++){ if(a[i]!='@@ A'&&a[i]!='T'&&a[i]!='G'&&a[i]!='@@ C'){ y++; } }@@ for(i=0;@@ b[i]@@ ;i++){ if(@@ b[i]!='A'&&b[i]!='T'&&b[i]!='G'&&b[i]!='@@ C'){ y++; } }@@ for(i=0;a[i]@@ ;i++){ n++; }@@ for(i=0;@@ b[i]@@ ;i++){ m++; }@@ if(m!=@@ n){ y++; }@@ if(y@@ !=0){ printf("error"); }else{ for(i=0;a[i]@@ ;i++){ if(a[i]==b[i]){ z@@ ++; } }@@ if(z@@ /@@ n@@ >@@ x){ printf("yes"); }else{ printf("no"); } } return0; }  
c -1
h -1
intmain() { intk,m,n,i,j,@@ a[100][100],@@ sum=0; cin>>k; while(@@ cin>>m>>@@ n) { for(i=0;i<m;i++) for(j=0;j<n;j++) cin>>a[i][j]; if(m@@ >=@@ 3@@ &&n@@ >=@@ 3) { for(i=0;i<n;i++) sum=sum+@@ a[0]@@ [i]+@@ a[m-1]@@ [i]; for(i=1;i<m-1;i++) sum=sum+@@ a[i][0]+@@ a[i][n-1]; } else { for(i=0;i<m;i++) for(j=0;j<n;j++) sum=sum+@@ a[i][j]; } cout<<sum<<endl; sum=0; } return0; }  
c -1
h -1
0

intmain() { intn,m,@@ i,j,k; int@@ yao@@ [300@@ ][@@ 300]; scanf("%d%d",&n,&m); for(i=0;i<n;i++) { for(j=0;j<m;j++) { scanf("%d",&@@ yao@@ [i][j]); } } for(i=n@@ ;i<@@ 300@@ ;i++) { for(j=0;j<@@ 300@@ ;j++) { yao@@ [i][j]=@@ 00@@ ; } } for(k=0;k<=@@ n+@@ m@@ -2@@ ;k++) { for(i=0;i<=@@ k;i++) { if(@@ yao@@ [i]@@ [k-i@@ ]!=@@ 00@@ ) { printf("%d\n",@@ yao@@ [i]@@ [k-i]); } } } return0; }  
c -1
h -1
voidmain() { inta[@@ 15@@ ],b[@@ 20],@@ i,@@ l@@ ,j,@@ n,@@ p=0,@@ num=0; while(1) {@@ num=0; scanf("%d",&n); if(n@@ ==-1)break; else { a[0]=@@ n; for(l=1;@@ ;l++) { scanf("%d",&@@ a[l@@ ]); if(a[@@ l@@ ]@@ ==0)break; } for(i=0;a[i]@@ !=0;i++) for(j=0;@@ a[j]@@ !=0;j++) { if(a[i]==a[j]@@ *2@@ )@@ num++; } b[p@@ ]=@@ num; p++; } } for(i=0;i<p@@ ;i++)@@ printf("%d\n",@@ b[i]); }  
c -1
h -1
0

intmain() { int*p=@@ {@@ NULL@@ },@@ a[100][100],@@ z,@@ m,n,@@ i=1@@ ,j@@ =0,@@ s; cin>>@@ z; while(i<=@@ z) { s=0; cin>>m>>n; p=@@ *@@ a; for(j=0;j<m@@ *@@ n;j++) { cin>>@@ *p@@ ++; if(j@@ <n@@ ||j@@ >=@@ n@@ *(@@ m-1)@@ ||j@@ %n@@ ==0@@ ||(@@ j@@ +1)@@ %n@@ ==0) s+=@@ *(p@@ -1); } cout<<s<<endl; i++; } return0; }  
c -1
h -1
intmain() { intn,@@ a[100],@@ i,@@ num=0,@@ m@@ [100],@@ j; char@@ c@@ [100][10]; scanf("%d",&n); for(i=0;i<n;i++) { scanf("%s",@@ c[i]); scanf("%d",&a[i]); } for(i=0;i<n;i++) { if(a[i]@@ >=60) { for(j=0;j<n;j++) { if(a[i]>=a[j]) { num=num@@ +1; } } m@@ [i]=@@ num; num=0; } } for(j=n@@ ;j>0;j--) { for(i=0;i<n;i++) { if(a[i]@@ >=60) { if(m@@ [i]==@@ j) { printf("%s\n",@@ c[i]); } } } } for(i=0;i<n;i++) { if(a[i]@@ <60) { printf("%s\n",@@ c[i]); } } return0; }  
c -1
h -1
0

voidmain(){ intn,i,j,@@ mid@@ ; char@@ M@@ [11]; scanf("%d",&n); structpatient{ charID@@ [11]; intage; }; structpatient*@@ per@@ =(struct@@ patient*)malloc(sizeof(structpatient@@ )*n); for(i=0;i<n;i++) scanf("%s%d",@@ per@@ [i].@@ ID,&@@ per@@ [i].age); for(j=0;j<n;j++) for(i=0;i<n-1;i++){ if(@@ per@@ [i].age@@ <60&&@@ per@@ [i+1@@ ].age@@ >=60){ mid@@ =@@ per@@ [i].age; strcpy(@@ M@@ ,@@ per@@ [i].ID); per@@ [i].age@@ =@@ per@@ [i+1].@@ age; strcpy(@@ per@@ [i].@@ ID,@@ per@@ [i+1].@@ ID); per@@ [i+1@@ ].age=@@ mid@@ ; strcpy(@@ per@@ [i+1].@@ ID,@@ M@@ ); } if(@@ per@@ [i].age@@ >=60&&@@ per@@ [i+1@@ ].age@@ >=60&&@@ per@@ [i].age@@ <@@ per@@ [i+1@@ ].age){ mid@@ =@@ per@@ [i].age; strcpy(@@ M@@ ,@@ per@@ [i].ID); per@@ [i].age@@ =@@ per@@ [i+1].@@ age; strcpy(@@ per@@ [i].@@ ID,@@ per@@ [i+1].@@ ID); per@@ [i+1@@ ].age=@@ mid@@ ; strcpy(@@ per@@ [i+1].@@ ID,@@ M@@ ); } } for(i=0;i<n;i++) printf("%s\n",@@ per@@ [i].ID); free(@@ per@@ ); }  
c -1
h -1
intmain(){ inta[@@ 20001@@ ]={0}; intn; cin>>n; for(inti=1;i<=@@ n;i++){ cin>>a[i]; } for(inti=1;i<=@@ n;i++){ for(intj=1;j<=@@ i;j++){ if(i!=@@ 1@@ &&@@ a@@ [j-1@@ ]==@@ a[i])@@ a[i]=0; } } for(inti=1;i<=@@ n;i++){ if(i!=@@ 1@@ &&a[i]@@ !=0)@@ cout<<""<<a[i]; elseif(@@ i@@ ==1)@@ cout<<a[i]; } return0; }  
c -1
h -1
0

intmain(intargc,char*argv[]) { chara[256],b[256],c[256]; int@@ la@@ ,i,j,@@ lb@@ ,@@ lc@@ ,@@ h=@@ 300@@ ,@@ p; scanf("%s%s%s",a,b,c); la@@ =strlen(a); lb@@ =strlen(b); lc@@ =strlen(c); for(j=0;j<@@ la@@ ;j++) { if(@@ b[0]@@ ==@@ a[j]) { for(i=0;i<@@ lb@@ ;i++) {@@ if(b[i]@@ !=@@ a@@ [j+i@@ ]) break; if((@@ i==@@ lb@@ -1)@@ &&(@@ b[i]@@ ==@@ a@@ [j+i@@ ]@@ )) { h@@ =j; j=@@ 100; break; } } } } if(h@@ !=@@ 300@@ ) { for(p=@@ h@@ ;p<@@ h@@ +lb@@ ;p++) { a[p@@ ]=@@ c[@@ 0@@ +p@@ -@@ h@@ ]; } } printf("%s",a); return0; }  
c -1
h -1
structstu { intnum; intm; intc; intsum; }; intmain() { long@@ intn; int@@ a=0,b=0,@@ c=0,@@ x=0,@@ y=0,@@ z=0; structstu@@ student[@@ 65535@@ ]; scanf("%d",&n); for(inti=0;i<n;i++) { scanf("%d%d%d",&@@ student[i].@@ num,&@@ student[i].@@ c@@ ,&@@ student[i].@@ m); student[i].@@ sum=@@ student[i].@@ m+@@ student[i].@@ c; } for(inti=0;i<n;i++) { if(@@ student[i].@@ sum>@@ a) { c=@@ b; z=@@ y; b=@@ a; y=@@ x; a=@@ student[i].@@ sum; x=@@ student[i].@@ num; continue; } if(@@ student[i].@@ sum>@@ b) { c=@@ b; z=@@ y; b=@@ student[i].@@ sum; y=@@ student[i].@@ num; continue; } if(@@ student[i].@@ sum>@@ c) { c=@@ student[i].@@ sum; z=@@ student[i].@@ num; } } printf("%d%d\n%d%d\n%d%d\n",@@ x,@@ a,@@ y,@@ b,@@ z,@@ c); getchar(); getchar(); return0; }  
c -1
h -1
0

intmain() { chars[@@ 257@@ ],@@ a[@@ 257@@ ],b[@@ 257@@ ]; scanf("%s%s%s",@@ s,@@ a,b); inti=0,j=0; int@@ find@@ =0; for(i=0;s[i]@@ !='\0';i++) { if(s[i]==@@ a[0]) { for(j=0;@@ a[j]@@ !='\0';j++) { if(a[j]!=@@ s[i+j@@ ]) { find@@ =0; break; } } if(a[j]==@@ '\0') find@@ =1; } if(@@ find@@ ==1) break; } if(@@ find@@ ) {@@ for(j=0;@@ b[j]@@ !='\0';j++) s[i+j@@ ]=@@ b[j]; } printf("%s",s); return0; }  
c -1
h -1
int@@ god@@ (int@@ num1@@ ,int@@ num2@@ ); intmain(void) { int@@ number,@@ ctr@@ ,i; int@@ n[@@ 20000@@ ],c[@@ 20000]; scanf("%d",&@@ number); for(i=0;i<=@@ 20000@@ ;i++) { c[i]@@ =0; } for(@@ ctr@@ =0;@@ ctr@@ <@@ number@@ ;@@ ctr@@ ++) { scanf("%d",&@@ n[@@ ctr@@ ]); } printf("%d",@@ n@@ [0]); for(@@ ctr@@ =1;@@ ctr@@ <@@ number@@ ;@@ ctr@@ ++) { for(i=0;i<@@ ctr@@ ;i++) { if(n@@ [i]==@@ n[@@ ctr@@ ]) { c[@@ ctr@@ ]++; } } if(@@ c[@@ ctr@@ ]==0) printf("%d",@@ n[@@ ctr@@ ]); } getchar(); return0; }  
c -1
h -1
0

intmain() { struct@@ Book@@ { intid; char@@ zz@@ [26]; }@@ book[1000]; intn,i,j,@@ max=0,@@ index@@ ; intsum@@ [26]={0}; charauthor@@ ; scanf("%d",&n); for(i=0;i<n;i++){ scanf("%d%s",&book[i].@@ id,&@@ book[i].@@ zz@@ ); } for(i=0;i<n;i++){ for(j=0;@@ book[i].@@ zz@@ [j]@@ !='\0';j++){ sum[@@ book[i].@@ zz@@ [j]@@ -'A']++; } } for(i=0;i<26;i++){ if(sum@@ [i]@@ >max){ max=@@ sum[i]; author@@ ='A'+i; } } printf("%c\n%d\n",@@ author@@ ,max); for(i=0;i<n;i++){ for(j=0;@@ book[i].@@ zz@@ [j]@@ !='\0';j++){ if(book[i].@@ zz@@ [j]==@@ author@@ ){ printf("%d\n",book[i].@@ id); break; } } } return0; }  
c -1
h -1
intmain() { chara[100@@ ]; char@@ b[100@@ ]; char@@ c[100]; inti,j,@@ m,@@ k; intn=0; scanf("%s",a); scanf("%s",b); scanf("%s",c); m@@ =strlen(b); for(i=0;a[i]@@ !='\0';i++){ if(a[i]==@@ b[0]@@ ){ n=0; for(j=0;@@ b[j]@@ !='\0';j++){ if(a@@ [i+j]==@@ b[j]@@ )@@ n++; } if(m==@@ n@@ )break; } } if(m==@@ n){ for(k=0;k<@@ i@@ ;k++){ printf("%c",@@ a[k]); } printf("%s",@@ c); for(k=i@@ +m@@ ;@@ a[k]@@ !='\0'@@ ;k++){ printf("%c",@@ a[k]); } } if(n@@ !=@@ m) printf("%s",a); return0; }  
c -1
h -1
0

voidinput@@ (int@@ num[@@ ],@@ inta[]) { intj; scanf("%d%d",&@@ num@@ [0]@@ ,&@@ num@@ [1]); for(j=0;j<@@ num@@ [0]+@@ num@@ [1]@@ ;j++)@@ scanf("%d",&a[j]); } voidorder@@ (int@@ num[@@ ],@@ inta[]) { intj,@@ k,@@ temp; for(j=0;j<@@ num@@ [0]@@ ;j++) { for(k=@@ num@@ [0]@@ -1@@ ;k@@ >0@@ ;k--) { if(a[k]@@ <@@ a[k@@ -1@@ ]) { temp=@@ a[k]; a[k]=a[k@@ -1]; a[k@@ -1@@ ]=temp; } } } for(j=@@ num@@ [0]@@ ;j<@@ num@@ [0]+@@ num@@ [1]@@ ;j++) { for(k=@@ num@@ [0]+@@ num@@ [1]@@ -1@@ ;k@@ >@@ num@@ [0]@@ ;k--) { if(a[k]@@ <@@ a[k@@ -1@@ ]) { temp=@@ a[k]; a[k]=a[k@@ -1]; a[k@@ -1@@ ]=temp; } } } } voidprint@@ (int@@ num[@@ ],@@ inta[]) { inti; for(i=0;i<@@ num@@ [0]+@@ num@@ [1]@@ -1;i++) printf("%d",a[i]); printf("%d",a[@@ num@@ [0]+@@ num@@ [1]@@ -1]); } voidmain() { inta[@@ 40@@ ],@@ num[@@ 2@@ ]; input@@ (num,@@ a); order@@ (num,@@ a); print(@@ num,@@ a); }  
c -1
h -1
int@@ month@@ [2][@@ 12]={31,@@ 28@@ ,31,30,31,30@@ ,31,30@@ ,31@@ ,31,30@@ ,31@@ , 31,@@ 29@@ ,31,30,31,30@@ ,31,30@@ ,31@@ ,31,30@@ ,31@@ }; intmain() { intyear,@@ monthq@@ ,@@ day; cin>>year>>@@ monthq@@ >>@@ day; int@@ ans=0; for(inti=1;i<@@ monthq@@ ;i++) { int@@ xx@@ ; if(year%@@ 400==0||(@@ year%4==0&&year%100!=0@@ )) xx@@ =1; else@@ xx@@ =0; ans@@ +=@@ month@@ [@@ xx@@ ]@@ [i-1]; } ans@@ +=@@ day; cout<<ans@@ <<endl; return0; }  
c -1
h -1
0

intsum; voidf@@ (intx,int@@ i){ if(x@@ ==1)@@ sum++; for(@@ ;i<=@@ x;i++) if(x@@ %i==0)@@ f(@@ x@@ /i,i); return; } intmain(){ intt,@@ a,@@ i=@@ 2; cin>>t; for(a=0;a@@ <@@ t@@ ;a@@ ++){ intx; cin>>x; int@@ ans@@ =1; for(i=2@@ ;i<@@ sqrt(@@ x@@ );i++){ sum=0; if(x@@ %i==0)@@ f(@@ x@@ /i,i); ans=@@ ans@@ +@@ sum; } cout<<ans@@ <<endl; } return0; }  
c -1
h -1
intn; void@@ count@@ (intx,inty) { inti; if(x@@ ==1)@@ n=n+1; else { for(i=y@@ ;i<=@@ x;i++) { if(x@@ %i==0)@@ count@@ (x/i,i); } } } intmain() { inti,k,@@ t; void@@ count@@ (intx,int@@ y); scanf("%d",&k); for(i=0;i<k;i++) { n=0; scanf("%d",&t); count@@ (@@ t,@@ 2); printf("%d\n",n); } return0; }  
c -1
h -1
1


intmain() { intx,y,@@ z; scanf("%d%d%d",&@@ x,&@@ y,&@@ z); ints[@@ 12]={31,28,31,30,31,30,31,31,30,31,30,31}; intm=0; intn=0; for(m=0;m<@@ y@@ -1@@ ;m++) n+=@@ s[@@ m]; int@@ D@@ ; if(((@@ x@@ %4==0&&@@ x@@ %100!=0@@ ||@@ x%@@ 400==0)@@ &&@@ y@@ !=1@@ &&@@ y@@ !=@@ 2@@ )) D=@@ n+@@ z@@ +1; else D=@@ n+@@ z; printf("%d",D@@ ); return0; }  
c -1
h -1
intmain() { intn=0,@@ i=0,j=0,@@ count=0,@@ a[@@ 20000]; cin>>n; for(i=0;i<=n-1;i++) cin>>a[i]; cout<<a[0]; for(i=1;i<=n-1;i++) {@@ for(j=i-1;j>=0;j--) {@@ if(a[j]==a[i]) count@@ ++;} if(count@@ ==0) cout<<''<<@@ a[i]; else@@ count@@ =0;} return0; }  
c -1
h -1
0

voidmain() { structbook@@ {int@@ num;@@ charauthor@@ [26@@ ];@@ }b[@@ 999]; inta[@@ 26]={0},@@ n,@@ i,j,k,@@ max=0; scanf("%d",&n); for(i=0;i<n;i++)@@ scanf("%d%s",&@@ b[i].@@ num,@@ b[i].@@ author); for(i=0;i<26;i++) { for(j=0;j<n;j++) { k=0; while(@@ b[j].@@ author@@ [k]@@ !='\0') {@@ if(b[j]@@ .@@ author@@ [k]==@@ i@@ +65@@ )@@ a[i]@@ ++; k@@ ++;} } } for(i=0;i<26@@ ;i++)@@ if(max<@@ a[i]@@ )max=@@ a[i]; i=0; while(@@ max@@ !=@@ a[i])@@ i++; printf("%c\n%d\n",@@ i@@ +65@@ ,@@ a[i]); for(j=0;j<n;j++) {@@ k=0; while(@@ b[j].@@ author@@ [k]@@ !=@@ i@@ +65@@ &&@@ b[j].@@ author@@ [k]@@ !=@@ '\0')@@ k++; if(b[j]@@ .@@ author@@ [k]==@@ i@@ +65@@ )@@ printf("%d\n",@@ b[j].@@ num); } }  
c -1
h -1
struct@@ pat { charnum[@@ 11]; intage; structpat@@ *next; }; voidmain() { intn,i; scanf("%d",&n); structpat@@ *head,*@@ p1,*p2,*@@ pre@@ ; p1=(struct@@ pat@@ *)malloc(sizeof(struct@@ pat@@ )); scanf("%s%d",@@ p1->num,&p1->@@ age); head=p1; p1->next=NULL; for(i=1;i<n;i++) { p1=(struct@@ pat@@ *)malloc(sizeof(struct@@ pat@@ )); scanf("%s%d",@@ p1->num,&p1->@@ age); if(p1->age@@ <60) { p2=head; while(@@ p2@@ ) { if(@@ p2->next@@ ==NULL) { p2->next@@ =p1;@@ p1->next@@ =NULL@@ ;break; } p2=p2->next; } } elseif(@@ p1->age@@ >=60) {@@ p2=head; while(@@ p2@@ ) { if(@@ p2@@ ==@@ head@@ &&@@ p1->age@@ >@@ p2->age@@ ) { head@@ =p1;@@ p1->next@@ =p2@@ ;break; } elseif(@@ p1->age@@ >@@ p2->age@@ ) { pre@@ ->next@@ =p1;@@ p1->next@@ =p2@@ ;break; } elseif(@@ p2->next@@ ==NULL) { p2->next@@ =p1;@@ p1->next@@ =NULL@@ ;break; } else{@@ pre@@ =p2@@ ;@@ p2=@@ p2->next@@ ;} } } } p1=head; while(p1@@ ) { printf("%s\n",@@ p1->num); p1=p1->next; } }  
c -1
h -1
0

intmain() { intarray@@ [@@ 99@@ ][@@ 99@@ ]; introw,col,@@ i,j,@@ t=0; scanf("%d%d",&row,&col); for(i=0;i<row;i++) {@@ for(j=0;j<col;j++) scanf("%d",&array@@ [i][j]); } for(t=0;t@@ <=@@ row+col-2@@ ;t++) {@@ if(t@@ <col) { for(i=0;i<=@@ t@@ &&i@@ <=row@@ -1;i++) { printf("%d\n",array@@ [i]@@ [t@@ -i]); } } else{ for(i=@@ t@@ +1@@ -col@@ ;i<=@@ t@@ &&i@@ <=row@@ -1;i++) printf("%d\n",array@@ [i]@@ [t@@ -i]); } } return0; }  
c -1
h -1
voidmain() { structpatient {@@ charid[10]; inta; }@@ all@@ [100],@@ old@@ [100],@@ temp; intn,@@ j=0,@@ k,@@ i; scanf("%d",&n); for(i=0;i<n;i++) { scanf("%s%d",@@ all@@ [i].id,&@@ all@@ [i].@@ a); if(@@ all@@ [i].@@ a@@ >=60) { old@@ [j]=@@ all@@ [i]; j=j+1; } } for(i=j@@ -1@@ ;i>0;i--) { for(k=0;k<i;k++) { if(old@@ [k].@@ a@@ <@@ old@@ [k+1@@ ].@@ a) { temp=@@ old@@ [k]; old@@ [k]=@@ old@@ [k+1]; old@@ [k+1]=@@ temp; } } } for(i=0;i<j;i++) { printf("%s\n",old@@ [i].id); } for(i=0;i<n;i++) { if(@@ all@@ [i].@@ a@@ <60) printf("%s\n",@@ all@@ [i].id); } }  
c -1
h -1
0

intmain() { intx@@ [26]={0}; charc; struct@@ books { intnumber; charname@@ [27]; }; struct@@ books@@ book[1000]; intn,i,j,@@ t,@@ max=0; struct@@ books@@ *p; scanf("%d",&n); for(p=@@ book@@ ;p<@@ book@@ +n;@@ p++) scanf("%d%s",&@@ p->@@ number,@@ p->@@ name); for(p=@@ book@@ ;p<@@ book@@ +n;@@ p++) for(j=0;j<26;j++) for(i=@@ 65@@ ;i<=@@ 90@@ ;i++) if(p->@@ name[j]==@@ i) x@@ [i-@@ 65@@ ]++; for(i=0;i<26;i++) if(x@@ [i]>max) max=@@ x[i]; for(i=0;i<26;i++) if(x@@ [i]==@@ max) break; c@@ =i+65; printf("%c\n%d\n",@@ c,@@ max); for(i=0;i<n;i++) for(j=0;j<26;j++) if(book[i].@@ name[j]==@@ c) { printf("%d\n",book[i].@@ number); break; } return0; }  
c -1
h -1
intmain(intargc,char*argv[]) { inty,m,d,@@ a,@@ n; scanf("%d%d%d",&y,&m,&d); if((y%@@ 4)@@ ==0@@ &&(@@ y%@@ 100@@ )@@ !=0@@ ||(@@ y%@@ 400==0)) a=1; else a=0; switch(m) { case1:@@ n=@@ d;break; case2:@@ n=31+@@ d;break; case3:@@ n=31+28@@ +d;break; case4:@@ n=31+28@@ +31+@@ d;break; case5:@@ n=31+28@@ +31+30@@ +d;break; case6:@@ n=31+28@@ +31+30+31+@@ d;break; case7:@@ n=31+28@@ +31+30+31+30@@ +d;break; case8:@@ n=31+28@@ +31+30+31+30+31+@@ d;break; case9:@@ n=31+28@@ +31+30+31+30+31+31+@@ d;break; case10:@@ n=31+28@@ +31+30+31+30+31+31+30@@ +d;break; case11:@@ n=31+28@@ +31+30+31+30+31+31+30+31+@@ d;break; case12:@@ n=31+28@@ +31+30+31+30+31+31+30+31+30@@ +d;break; } if(a==0) { printf("%d",n); } if(m@@ !=1@@ &&m@@ !=@@ 2@@ &&@@ a@@ ==1) { n=n+1; printf("%d",n); } if(a@@ ==1&&@@ m@@ ==1)@@ printf("%d",n); if(a@@ ==1&&@@ m@@ ==@@ 2)@@ printf("%d",n); return0; }  
c -1
h -1
0

struct@@ chs@@ { char@@ zz@@ [27]; intnum; }@@ cs@@ [@@ ]@@ ,*p; intmain(){ intn; scanf("%d",&n); struct@@ chs@@ *@@ cs@@ =(struct@@ chs@@ *)malloc(sizeof(struct@@ chs@@ )*n); for(p=@@ cs@@ ;p<@@ cs@@ +n;@@ p++){ scanf("%d%s",&@@ (p->@@ num@@ ),@@ p->@@ zz@@ ); } intl,@@ a,@@ zm@@ [26@@ ],*@@ z; for(@@ z=@@ zm@@ ;@@ z@@ <@@ zm@@ +@@ 26@@ ;@@ z@@ ++){ *@@ z=0; } char*@@ q; for(p=@@ cs@@ ;p<@@ cs@@ +n;@@ p++){ l=strlen(@@ p->@@ zz@@ ); for(q=@@ p->@@ zz@@ ;*@@ q@@ !='\0'@@ ;q@@ ++){ a=@@ (int)@@ (*@@ q); (*(@@ zm@@ +@@ a@@ -65@@ ))@@ ++; } } intmax=0; for(@@ z=@@ zm@@ ;@@ z@@ <@@ zm@@ +@@ 26@@ ;@@ z@@ ++){ if(*@@ z@@ >*@@ (@@ zm@@ +@@ max@@ )){ max=@@ z@@ -@@ zm@@ ; } } printf("%c\n%d\n",@@ (char)(@@ max@@ +65@@ )@@ ,*@@ (@@ zm@@ +@@ max@@ )); for(p=@@ cs@@ ;p<@@ cs@@ +n;@@ p++){ l=strlen(@@ p->@@ zz@@ ); for(q=@@ p->@@ zz@@ ;*@@ q@@ !='\0'@@ ;q@@ ++){ a=@@ (int)@@ (*@@ q); if((@@ a@@ -65@@ )==@@ max@@ ){ printf("%d\n",p->num); } } } free(@@ cs@@ ); return0; }  
c -1
h -1
intmain() { doublen; int@@ w@@ =0,@@ g=0; char@@ v@@ [100],@@ c[100]; scanf("%lf",&n); scanf("%s",@@ v@@ ); scanf("%s",c); char@@ A@@ ,@@ T@@ ,@@ G@@ ,@@ C@@ ; if(strlen(@@ v@@ )!=strlen(@@ c@@ )) { printf("error"); } else { for(inti=0;i<=@@ strlen(@@ v@@ )@@ -1;i++) { if(((@@ v@@ [i]!='A')&&(@@ v@@ [i]!='G')@@ &&(@@ v@@ [i]!='C')&&(@@ v@@ [i]!='T')@@ )||((@@ c@@ [i]!='A')&&(@@ c@@ [i]!='G')@@ &&(@@ c@@ [i]!='C')&&(@@ c@@ [i]!='T')@@ )) {@@ g@@ =1; printf("error"); break; } elseif(@@ v@@ [i]==@@ c@@ [i]) { w@@ ++; } } double@@ l@@ =1.0*@@ w@@ /@@ strlen(@@ v@@ ); if((@@ l>@@ n@@ )&&(@@ g@@ ==0)@@ ){printf("yes");} elseif((@@ l@@ <=@@ n@@ )&&(@@ g@@ ==0)@@ ){@@ printf("no");} } return0; }  
c -1
h -1
0

structbook {@@ intn; structbook*next; }; struct@@ au { char@@ n; ints; structbook@@ *p; }; voidmain() { inti,j,k,l,@@ m,@@ n@@ ,*@@ p,@@ a[100@@ ][@@ 1100@@ ]={0},@@ max=0,@@ b[100@@ ]={0}; chars[@@ 30]; scanf("%d",&n); for(l=1;l@@ <=n;@@ l++) { scanf("%d",&@@ j); scanf("%s",s); for(i=0;s[i]@@ !='\0';i++) { b[@@ s[i]@@ ]++; a[@@ s[i]@@ ][@@ b[@@ s[i]@@ ]@@ ]=@@ j; if(b[@@ s[i]@@ ]>@@ b[@@ max@@ ])@@ max=@@ s[i]; } } printf("%c\n",@@ (char)@@ max); printf("%d\n",@@ b[@@ max@@ ]); for(i=1;i<=@@ b[@@ max@@ ]@@ ;i++) printf("%d\n",a[@@ max@@ ][i]); }  
c -1
h -1
intmain() { chars1@@ [257],@@ s2@@ [257],@@ s3@@ [257]; char*@@ p; gets(@@ s1); gets(@@ s2); gets(@@ s3); p=strstr(@@ s1,@@ s2); if(p@@ ){ int@@ i=@@ p@@ -@@ s1@@ ; s1@@ [i]@@ ='\0'; printf("%s",@@ s1); printf(@@ s3); printf("%s\n",@@ p+@@ strlen(@@ s2@@ )); } else{ puts(@@ s1); } return0; }  
c -1
h -1
0

voidmain() { inta,b,c,@@ n; scanf("%d%d%d",&a,&b,&c); int@@ one@@ [@@ 12]={31,29,31,30,31,30,31,31,30,31,30,31}; int@@ another@@ [12]={31,28,31,30,31,30,31,31,30,31,30,31}; inti; intm=0; if(a%@@ 4==0&&a%100!=0@@ ||a%@@ 400@@ ==0){ for(i=0;i<(@@ b@@ -1)@@ ;i++){ m=m+@@ one@@ [i]; } n=@@ m@@ +c; } else{ for(i=0;i<(@@ b@@ -1)@@ ;i++){ m=m+@@ another@@ [i]; } n=@@ m@@ +c; } printf("%d\n",n); }  
c -1
h -1
intmain() { inta[@@ 1000][1000],@@ i,n,@@ j,@@ b,@@ c,d,@@ e,@@ x; scanf("%d",&n); for(i=0;i<n;i++) { for(j=0;j<n;j++) { scanf("%d",&a[i][j]); } } for(i=0;i<n;i++) { for(j=0;j<n;j++) { if(a[i][j]==0) { b=i; c@@ =j; j=@@ n; i=@@ n; } } } for(i=n-1;i>=0;i--) { for(j=n-1;j>=0;j--) { if(a[i][j]==0) { d@@ =i; e@@ =j; i@@ =-1; j@@ =-1; } } } x@@ =(@@ d-b@@ +1)*(@@ e@@ -c@@ +1)@@ -2@@ *(@@ d-b@@ +1)@@ -2@@ *(@@ e@@ -c@@ +1)@@ +@@ 4@@ ; printf("%d",x); return0; }  
c -1
h -1
0

intmain() { intn,a[@@ 20000@@ ],i,j,@@ k=0; scanf("%d\n",&n); for(i=0;i<n;i++) { scanf("%d",&a[i]); } printf("%d",a[0]); for(i=1;i<n;i++) { for(j=0;j<i;j++) { if(a[i]==a[j]) k=k+1; } if(k==0) printf("%d",a[i]); k=0; } getchar(); getchar(); }  
c -1
h -1
intmain() { inti,j,n,@@ num,@@ min1@@ =@@ 2000@@ ,@@ min2@@ =@@ 2000@@ ,@@ max1@@ =-1,@@ max2@@ =-1; int@@ area@@ ; cin>>n; for(i=0;i<n;i++) { for(j=0;j<n;j++) { cin>>num; if(num@@ ==0) { if(i<@@ min1@@ ) min1@@ =i; elseif(@@ i@@ >@@ max1@@ ) max1@@ =i; if(j<@@ min2@@ ) min2@@ =j; elseif(@@ j@@ >@@ max2@@ ) max2@@ =j; } } } area@@ =(@@ max1@@ -@@ min1@@ -1)*(@@ max2@@ -@@ min2@@ -1); cout<<@@ area@@ <<endl; return0; }  
c -1
h -1
0

intmain() {@@ struct@@ s {int@@ N; char@@ w@@ [26]; }; struct@@ s@@ s[@@ 999]; intn,i,j,@@ c,@@ a[@@ 26]; scanf("%d\n",&n); for(i=0;i<=@@ (n-1);i++) {scanf("%d",&@@ s[i].@@ N); gets(@@ s[i].@@ w); } for(i=0;i<=@@ (n-1);i++) {@@ for(j=0;j<=@@ 25@@ ;j++) {@@ c=@@ s[i].@@ w@@ [j]; a[c@@ -65]++; } } c=0; for(i=0;i<=25;i++) {@@ if(a[@@ c@@ ]<@@ a[i])@@ c=i; } printf("%c\n%d\n",@@ c@@ +65@@ ,@@ a[c@@ ]); for(i=0;i<=@@ (n-1);i++) {@@ for(j=0;j<=@@ 25@@ ;j++) if(s@@ [i].@@ w@@ [j]==@@ (@@ c@@ +65@@ ))@@ printf("%d\n",@@ s[i].@@ N); } }  
c -1
h -1
intmain() { inti,j,k,n,@@ s; inta[100][100@@ ][100]; intb[100@@ ],@@ c[100]; scanf("%d",&n); for(i=0;i<n;i++) { scanf("%d%d",&@@ b[i]@@ ,&@@ c[i]); for(j=0;j<@@ b[i]@@ ;j++) { for(k=0;k<@@ c[i]@@ ;k++) scanf("%d",&a[i]@@ [j]@@ [k]); } } for(i=0;i<n;i++) { s=0; if(c@@ [i]>@@ 1) { for(j=0;j<@@ c[i]@@ ;j++) s=s+@@ a[i][0]@@ [j]+@@ a[i][@@ b[i]@@ -1][j]; } else { s=s+@@ a[i][@@ 0][@@ 0]; } for(j=1;j<@@ b[i]@@ -1;j++) s=s+@@ a[i][j]@@ [0]+@@ a[i][j]@@ [@@ c[i]@@ -1]; printf("%d\n",s); } return0; }  
c -1
h -1
0

intmain() { intn,@@ len,@@ i,j,@@ book@@ [1000],@@ num[@@ 26]={0},@@ k=0,@@ t,@@ m=0; char@@ w@@ [1000][@@ 27@@ ],@@ c@@ ='A'; scanf("%d",&n); for(i=0;i<n;i++) { scanf("%d%s",&@@ book@@ [i],@@ w@@ [i]); len=strlen(@@ w@@ [i]); for(j=0;j<len;j++) { for(c@@ ='@@ A',@@ t@@ =0;c@@ <=@@ 'Z'@@ ;c@@ ++) { if(w@@ [i][j]==@@ c) { num[@@ t@@ ]++; break; } t++; } } } for(i=0;i<26;i++) { if(num@@ [i]>@@ m) { m=@@ num[i]; k=i; } } c@@ ='A'+@@ k; printf("%c\n",@@ c); printf("%d\n",@@ num@@ [k]); for(i=0;i<n;i++) { len=strlen(@@ w@@ [i]); for(j=0;j<len;j++) { if(w@@ [i][j]==@@ c) { printf("%d\n",@@ book@@ [i]); break; } } } return0; }  
c -1
h -1
intmain() { inta[100@@ ][@@ 16@@ ]={0}; inti=0,j=0,@@ p=0,@@ k=0,@@ num=0; do { for(j=0;j<@@ 16@@ ;j++) { scanf("%d",&@@ a[p@@ ][j]); if(a[@@ p@@ ][j]@@ ==0||@@ a[p@@ ]@@ [j]==@@ -1) break; } p++; } while(@@ a[p@@ -1@@ ][0]@@ !=-1); p@@ --; for(i=0;i<p@@ ;i++) { for(j=0;@@ a[i][j]@@ !=0;j++) { for(k=0;@@ a[i][k]@@ !=0@@ ;k++) { if(@@ 2*@@ a[i]@@ [k]==@@ a[i]@@ [j]) num++; } } printf("%d\n",num); num=0; } return0; }  
c -1
h -1
0

intmain() { intn,i,j,k; inta[@@ 25],b[@@ 25]; scanf("%d",&n); for(i=0;i<n;i++) scanf("%d",&a[i]); b[@@ n-1@@ ]=1; for(i=1;i<n;i++) b[i]=1; for(i=n-2;i>=0;i--) for(j=n-1@@ ;j>=i@@ +1@@ ;j--) if(a[i]>=@@ a[j]&&@@ b[j]@@ +1@@ >=@@ b[i]) b[i]=b[j]+1; k=@@ b[0]; for(i=1;i<n;i++) if(b[i]>@@ k) k=@@ b[i]; printf("%d",k); }  
c -1
h -1
structstudent { intnum,@@ z; }@@ a,@@ max1,@@ max2@@ ,max3@@ ; voidmain() { inti,n,@@ x,y; scanf("%d",&n); max1@@ .z@@ =-1; max2@@ .z@@ =-1; max3@@ .z@@ =-1; for(i=0;i<n;i++) { scanf("%d%d%d",&@@ a.@@ num,&@@ x,&@@ y); a.@@ z=@@ x+@@ y; if(a@@ .z@@ >@@ max1@@ .z@@ ) { max3=max2; max2=@@ max1; max1=@@ a; } elseif(a@@ .z@@ >@@ max2@@ .z@@ ) { max3=max2; max2=@@ a; }elseif(@@ a@@ .z@@ >@@ max3@@ .z@@ ) { max3=@@ a; max3=@@ a; } } printf("%d%d\n%d%d\n%d%d\n",@@ max1@@ .num,@@ max1@@ .@@ z,@@ max2@@ .num,@@ max2@@ .@@ z,@@ max3@@ .num,@@ max3@@ .@@ z); }  
c -1
h -1
0

intmain(){ inti,j,k,n,@@ p=0; inta[@@ 1001@@ ],b[@@ 1001]; scanf("%d%d",&n,&k); for(i=0;i<n;i++){ scanf("%d",&a[i]); } for(i=0,j@@ =0;i<@@ n,@@ j@@ <n@@ ;j++@@ ,i@@ ++){ b[j]=@@ a[i]; } for(i=0;i<n;i++){ for(j=0;j<n;j++){ if((@@ a[i]+@@ b[j]@@ ==@@ k@@ )) p++; } } if(p@@ >0) printf("yes"); else printf("no"); return0; }  
c -1
h -1
voidread@@ (inta[],int@@ m,@@ intb[@@ ],int@@ n) { inti; for(i=0;i<m;i++) scanf("%d",&a[i]); for(i=0;i<n;i++) scanf("%d",&b[i]); } voidorder@@ (inta[],intn) { inti,j,@@ aaa@@ ; for(i=0;i<n-1;i++) { for(j=0;j<n@@ -i-1;j++) { if(a[j]>a[j+1]) { aaa@@ =@@ a[j]; a[j]=a[j+1]; a[j+1]=@@ aaa@@ ; } } } } voidcombine@@ (inta[],int@@ m,@@ intb[@@ ],int@@ n) { inti; for(i=0;i<m;i++) printf("%d",a[i]); for(i=0;i<n-1;i++) printf("%d",b[i]); printf("%d",b[@@ n-1]); } voidmain() { inta[100],b[100],@@ m,n; scanf("%d%d",&m,&n); read@@ (a,@@ m,@@ b,@@ n); order@@ (a,m); order@@ (b,n); combine@@ (a,@@ m,@@ b,@@ n); }  
c -1
h -1
0

struct@@ tushu { intnum; charname@@ [20]; struct@@ tushu@@ *next; }; struct@@ tushu@@ *creat@@ (intm) { struct@@ tushu@@ *head,*p1,*p2; p1=p2=(struct@@ tushu@@ *)malloc(LEN); scanf("%d%s",&p1->num,p1->name); head=p1; inti; for(i=2;i<=@@ m;i++) { p1=(struct@@ tushu@@ *)malloc(LEN); scanf("%d%s",&p1->num,p1->name); p2->next=p1; p2=p1; } p2->next=NULL; return(head); } intmain() { intm,@@ num[@@ 26]={0},@@ i,@@ max; scanf("%d",&m); struct@@ tushu@@ *head,*@@ p1; head=creat@@ (m); char*@@ x; for(i=0;i<26;i++) { p1=head; x=@@ p1->name@@ ; while(p1!=NULL) { while(@@ *@@ x@@ !='\0') { if(*@@ x@@ ==@@ (i@@ +65@@ )) num[i]=@@ num[i]@@ +1; x=x@@ +1; } p1=p1->next; x=@@ p1->name@@ ; } } max=0; for(i=1;i<26;i++) { if(@@ num[@@ max@@ ]<@@ num@@ [i]) max=i; } printf("%c\n",@@ max@@ +65); printf("%d\n",@@ num[@@ max@@ ]); p1=head; x=@@ p1->name@@ ; while(p1!=NULL) { while(@@ *@@ x@@ !='\0') { if(*@@ x@@ ==@@ (@@ max@@ +65@@ )) { printf("%d\n",@@ p1->num); break; } x=x@@ +1; } p1=p1->next; x=@@ p1->name@@ ; } return0; }  
c -1
h -1
intmain() { intsum=0,@@ n,@@ a[100][100],@@ i,j,@@ x1,@@ x2,@@ num1,num2@@ ,@@ y1,@@ y2@@ ; scanf("%d",&n); for(i=0;i<n;i++) for(j=0;j<n;j++) scanf("%d",&a[i][j]); for(i=0;i<n;i++) { for(j=0;j<n;j++) if(a[i][j]==0) { x1@@ =i;@@ y1=j; break; } if(j@@ <n@@ )break; } for(i=n-1;i>=0;i--) { for(j=n-1;j>=0;j--) if(a[i][j]==0) { x2@@ =i;@@ y2=j; break; } if(j@@ >=0@@ )break; } num1@@ =@@ x2-x1@@ +1; num2@@ =@@ y2-y1@@ +1; sum=(@@ num1@@ -2)*(@@ num2@@ -2); printf("%d",sum); }  
c -1
h -1
0

chara[@@ 1000],b[1000],@@ c[@@ 1000]; intmain() { cin>>a; cin>>@@ b; cin>>@@ c; intlen1,len2,@@ p=0,@@ i,j; len1@@ =strlen(a); len2@@ =strlen(b); for(i=0;i<len1@@ -len2@@ +1;i++) { if(a[i]==@@ b[0]) { p=1; for(j=i;j<@@ len2@@ +i@@ ;j++) { if(a[j]!=@@ b@@ [j-i@@ ]) { p@@ =0;@@ break; } } if(p@@ ==1) { for(j=i;j<@@ len2@@ +i@@ ;j++) { a[j]=@@ c@@ [j-i@@ ]; } break; } } } cout<<@@ a@@ <<endl; return0; }  
c -1
h -1
structstudent { intnum; int@@ yu@@ ; int@@ shu; structstudent*next; }; intn; structstudent*creat@@ (void) { inti; structstudent*head; structstudent*p1,*p2; scanf("%d",&n); p1=p2=(structstudent*)malloc(LEN); scanf("%d%d%d",&p1->num,&p1->@@ yu@@ ,&p1->@@ shu); head=p1; for(i=1;i<=n-1;i++) { p1=(structstudent*)malloc(LEN); scanf("%d%d%d",&p1->num,&p1->@@ yu@@ ,&p1->@@ shu); p2->next=p1; p2=p1; } p2->next=NULL; return(head); } voidmain() { inti,j,@@ k=0; structstudent*head; structstudent*p1,*p2; head=creat(); p1=head; for(j=1;j<=@@ 3;j++) { p1=@@ p2=head; for(i=1;i<=n@@ -j;i++) { if((@@ p1->@@ yu@@ +p1->@@ shu@@ )>@@ k) k=@@ p1->@@ yu@@ +p1->@@ shu; p1=p1->next; } p1=@@ p2=head; if((@@ head->@@ yu@@ +@@ head->@@ shu@@ )==@@ k) { printf("%d%d",@@ p1->@@ num,p1->@@ yu@@ +p1->@@ shu); head=@@ head->next; } else { for(i=1;;i++) { if((@@ p1->@@ yu@@ +p1->@@ shu@@ )==@@ k) { printf("%d%d\n",@@ p1->@@ num,p1->@@ yu@@ +p1->@@ shu); if((@@ p1->next@@ )@@ !=NULL) p2->next=@@ p1->next; else@@ p2->next=NULL; k=0; break; } p2=p1; p1=p1->next; } } } }  
c -1
h -1
0

int@@ im@@ (intn,@@ intmax@@ ) { int@@ s=0,@@ i; if(n==1) return1; for(i=@@ max@@ ;i@@ >1@@ ;i--) if(n%i==0) s+=@@ im@@ (n/i,i); return@@ s; } intmain() { inti,n,@@ t; scanf("%d%d",&n,&@@ t); printf("%d",@@ im@@ (@@ t,@@ t@@ )); for(i=1;i<n;i++) { scanf("%d",&t); printf("\n%d",@@ im@@ (@@ t,@@ t@@ )); } return0; }  
c -1
h -1
structpatient { charnum[@@ 11]; intage; }@@ sick@@ [@@ 101]; intmain() { intn,i,j,k,@@ r,@@ s; s=0; r=0; scanf("%d",&n); for(i=0;i<n;i++){ scanf("%s",@@ sick@@ [i].num); scanf("%d",&@@ sick@@ [i].age); } int@@ old@@ [@@ 101@@ ]={0}; int@@ young@@ [@@ 101@@ ]={0}; for(i=0;i<n;i++){ if(@@ sick@@ [i].age>=60){ for(j=0;j<=@@ s@@ ;j++){ if(@@ sick@@ [i].age@@ >@@ sick@@ [@@ old@@ [j]@@ ].age@@ ||j==@@ s@@ ){ if(j==@@ s@@ ){ old@@ [s@@ ]=i; s=s+1; break; } else{ for(k=@@ s@@ ;k@@ >=@@ j@@ ;k@@ --){ old@@ [k+1]=@@ old@@ [k]; } old@@ [j]@@ =i; s=s+1; break; } } } } else{ young@@ [r@@ ]=i; r=r@@ +1; } } for(i=0;i<@@ s@@ ;i++){ printf("%s\n",@@ sick@@ [@@ old@@ [i]@@ ].@@ num); } for(i=0;i<@@ r@@ ;i++){ printf("%s\n",@@ sick@@ [@@ young@@ [i]@@ ].@@ num); } return0; }  
c -1
h -1
0

intmain() { inta[@@ 1000],@@ k,@@ n; inti,j,@@ of@@ =0; scanf("%d%d",&n,&k); for(i=0;i<n;i++) { scanf("%d",&a[i]); } for(i=0;i<n;i++) { for(j=0;j<n;j++) { if(a[i]!=@@ a[j]) { if(k==@@ a[i]+@@ a[j]) { of@@ ++; } } } } if(@@ of@@ >0) {@@ printf("yes");} if(@@ of@@ ==0){@@ printf("no");} return0; }  
c -1
h -1
intmain(intargc,char*argv[]) { int@@ d[@@ 12]={31,28,31,30,31,30,31,31,30,31,30,31}; intyear,month,day,@@ i,@@ days@@ =0; scanf("%d%d%d",&year,&month,&day); for(i=1;i<month;i++) { days=@@ days@@ +d@@ [i-1]; } days=@@ days@@ +day; if((@@ year%@@ 4@@ ==0||@@ year%@@ 400==0)@@ &&@@ month@@ >2) days=@@ days@@ ++; printf("%d",@@ days@@ ); }  
c -1
h -1
0

intmain() { inta[@@ 15]; inti,@@ NO@@ ,@@ tmp@@ ,@@ n,@@ j; while(1) { n=0; scanf("%d",&@@ tmp@@ ); a[0]=@@ tmp; if(@@ tmp@@ ==-1)break; NO@@ =0; while(1) { scanf("%d",&@@ tmp@@ ); if(@@ tmp@@ ==0)break; a[@@ ++@@ n@@ ]=@@ tmp; } for(i=0;i<n;i++) for(j=i+1;j<=n;j++) if(a[j]==2*@@ a[i]@@ ||@@ a[i]==@@ 2*@@ a[j])@@ NO@@ ++; printf("%d\n",@@ NO@@ ); } getchar(); getchar(); }  
c -1
h -1
intmain(){ int@@ c,@@ a[@@ 20],@@ t,@@ sum; while(1){ t=@@ sum=0; while(1){ scanf("%d",&@@ c); if(!@@ c@@ ||@@ c@@ ==-1)break; a[t@@ ++]=@@ c; } if(c@@ ==-1)break; for(inti=0;i<@@ t;i++) for(intj=0;j<@@ t;j++) if(a[j]==@@ a[i]@@ *2@@ )@@ sum++; printf("%d\n",sum); } return0; }  
c -1
h -1
1


voidmain() { structbook { intnum; charauthor@@ [27]; structbook*next; }@@ *head@@ =0@@ ,*@@ p1,*p2; int@@ total@@ ,i,j,@@ sumbook@@ [26]={0},@@ len,@@ max; scanf("%d",&@@ total); for(i=0;i<@@ total@@ ;i++) { p1=(structbook@@ *)malloc(sizeof(structbook)); if(@@ p1@@ ==0) { printf("@@ Memory@@ request@@ failed@@ !\@@ n@@ "); exit@@ (@@ -1); } scanf("%d%s",&p1->num,p1->@@ author); len=strlen(@@ p1->@@ author); for(j=0;j<len;j++) sumbook@@ [@@ p1->@@ author@@ [j]@@ -'A']++; if(head@@ ) p2->next=p1; else head=p1; p2=p1; } p1->next@@ =0; len@@ =0; for(i=0;i<26;i++) { if(@@ sumbook@@ [i]>@@ len@@ ) { len@@ =@@ sumbook@@ [i]; max=i; } } printf("%c\n%d\n",@@ max@@ +'A',@@ sumbook@@ [max@@ ]); max@@ +=@@ 'A'@@ ; for(p1=@@ head;@@ p1@@ ;@@ p1=p1->next) { len=strlen(@@ p1->@@ author); for(i=0;i<len;i++) { if(p1->@@ author@@ [i]==@@ max) { printf("%d\n",@@ p1->num); break; } } } }  
c -1
h -1
intmain(){ charstr[256],@@ a[100],b[100]; inti,j,@@ h; intn,m,@@ result=0; int@@ count; gets(str); scanf("%s%s",a,b); n=strlen(@@ str); m=strlen(a); for(i=0;i<n;i++){ count=0; if(str[i]==@@ a[0]@@ ){ h@@ =i; for(j=0;j<m;j++){ if(str@@ [h@@ +j@@ ]==@@ a[j]@@ ){ count++; } } if(count==@@ m){ printf("%s",@@ b); result=1; break; } if(count@@ !=@@ m){ printf("%c",@@ str[i]); } } else@@ printf("%c",@@ str[i]); if(result@@ ==1) break; } for(i=@@ h@@ +m@@ ;i<@@ n;i++){ printf("%c",@@ str[i]); } return0; }  
c -1
h -1
0

intmain(){ inti; chara[500],b[500]; double@@ x,y,@@ k,@@ n,@@ m; scanf("%lf",&x); scanf("%s\n@@ %s",@@ a,b); n@@ =strlen(a); m@@ =strlen(b); for(i=0;i<n;i++){ if(m==@@ n@@ &&(@@ a[i]=='@@ A'||a[i]=='@@ G'||@@ a[i]=='@@ C'||@@ a[i]=='@@ T'||@@ b[i]=='@@ A'||@@ b[i]=='@@ G'||@@ b[i]=='@@ C'||@@ b[i]!='@@ T')@@ ){ if(a[i]==b[i]@@ ){@@ k=k+1; } }else{ printf("error"); return0; } } y=@@ k/@@ n; if(y@@ >@@ x){ printf("yes"); }else{ printf("no"); } return0; }  
c -1
h -1
intmain() { ints[@@ 20],@@ i=1@@ ,j,@@ k,@@ d=0; charc; do{ while(@@ scanf("%d",&@@ s[i]@@ )) { c=@@ getchar(); if(c==@@ '\n@@ ') break; i++; } for(k=1;k<@@ i;k++) { for(j=k@@ +1@@ ;j<@@ i;j++) { if((@@ s@@ [k]==2*@@ s[j]@@ )||(@@ 2*@@ s@@ [k]==@@ s[j]@@ )) d++; } } if(s@@ [i]@@ >-@@ 1) printf("%d\n",@@ d); i=1; d=0; }while(@@ s[i]@@ >-@@ 1); return0; }  
c -1
h -1
0

intmain() { intn; cin>>n; intcount@@ [100]={0},@@ num[@@ 90@@ ]={0}; int@@ i@@ =1,@@ a,@@ j=0; for(i@@ ;i<=n;i++) { cin>>a; if(count@@ [a@@ ]==0) { num@@ [j]=@@ a; j@@ +=1; } count@@ [a@@ ]=@@ count@@ [a@@ ]+1; } i=0; for(i@@ ;i<@@ j@@ -1;i++) { cout<<@@ num[i]@@ <<""; } cout<<num@@ [j-1]@@ <<endl; return0; }  
c -1
h -1
intmain() { intn,m,@@ temp1@@ ,@@ temp2@@ ,i,j,@@ a,b,@@ k,@@ c,d,@@ e; intsz[100][100]; scanf("%d",&n); temp1@@ =0; temp2@@ =0; for(i=0;i<n;i++) { for(j=0;j<n;j++) scanf("%d",&sz[i][j]); } for(i=0;i<n@@ &&@@ temp1@@ ==0@@ ;i++) { for(j=0;j<n@@ &&@@ temp1@@ ==0@@ ;j++) { if(sz@@ [i][j]==0&&@@ sz@@ [i+1][j]@@ ==0&&@@ sz[i]@@ [j+1@@ ]==0) { a=i; b=j; temp1@@ =1; } } } for(i=a@@ ;i<@@ n@@ &&@@ temp2@@ ==0@@ ;i++) { for(j=@@ b@@ ;j<@@ n@@ &&@@ temp2@@ ==0@@ ;j++) { if(sz@@ [i][j]==0&&@@ sz@@ [i-1][j]@@ ==0&&@@ sz[i]@@ [j-1]@@ ==0) { c=i; d=j; temp2@@ =1; } } } e@@ =(@@ c-a-1)*(d-b-1); printf("%d",@@ e); return0; }  
c -1
h -1
0

intmain() { intm; cin>>m; intp; chara[@@ m@@ +1@@ ][@@ 27]; int@@ len@@ [m@@ +1]; intb[@@ m@@ +1]; intc[@@ 26]; inti,j,k,@@ l; for(i=0;i<=25;i++) c[i]@@ =0; for(i=1;i<=m;i++) { cin>>b[i]; cin>>a[i]; len@@ [i]@@ =strlen(@@ a[i]); for(j=0;j<=@@ len@@ [i]@@ -1;j++) { c[@@ a[i][j]@@ -'A']++; } } int@@ temp=@@ -1; for(i=0;i<=25;i++) { if(c@@ [i]>@@ temp@@ ) { temp=@@ c[i]; p=i; } } char@@ n=@@ 'A'+@@ p; cout<<n<<endl; cout<<@@ temp@@ <<endl; for(i=1;i<=m;i++) for(j=0;j<=@@ len@@ [i]@@ -1;j++) { if(a[i][j]==@@ '\0') { break; } else@@ if(a[i][j]==@@ n) { cout<<b[i]@@ <<endl; break; } } return0; }  
c -1
h -1
intmain() { intN@@ ,@@ num,@@ i,j,k; inta[@@ 200]; for(k@@ =1;@@ ;k++) { i=0; while(1) { cin>>a[i]; if(a[0]==-1) return0; if(a[i]==0) break; i++; } num=0; for(i=0;a[i]@@ !=0;i++) N@@ =i; for(i=0;i<=@@ N;i++) { for(j=i+1;j<=@@ N@@ ;j++) { if(a[i]==2*@@ a[j]||a[j]==2*@@ a[i]) num++; } } cout<<num<<endl; } return0; }  
c -1
h -1
0

intmain() { intn,k,@@ a[1000],@@ i=0,@@ j,@@ t=0,@@ flag=0; cin>>n>>k; for(t=0;t@@ <=@@ n-1@@ ;t++) {@@ cin>>@@ a[t@@ ]; } for(i=0;i<=n-1;i++) {@@ for(j=i+1;j<=@@ n-1;j++) { if(a[i]+a[j]==@@ k){@@ flag@@ =1;@@ cout<<"yes@@ "@@ ;break;} } if(flag@@ ==1)break; } if(flag@@ ==0)@@ cout<<"no"; return0; }  
c -1
h -1
intn,m,@@ i,j; inta[@@ 10000]; voidinput() { cin>>n>>m; for(i=0;i<n@@ +@@ m;i++) cin>>a[i]; } void@@ fsort@@ () { sort@@ (a,@@ a+@@ n); sort(@@ a+@@ n,@@ a+@@ n+@@ m); } voidprint@@ (){ cout<<a[0]; for(i=1;i<@@ n+m;i++) cout<<''<<@@ a[i]; } intmain() {@@ input(); fsort@@ (); print(); return0; }  
c -1
h -1
0

intmain() { intn; int@@ x,y; inta[100][100]; inti,j,k,l,@@ m; ints; cin>>n; for(i=1;i<=n;i++) { cin>>x@@ >>@@ y; for(j=0;j<@@ x;j++) { for(k=0;k<@@ y@@ ;k++) { cin>>a[j]@@ [k]; } } s=0; for(l=0;l<@@ y@@ ;l++) { s=s+@@ a[0][@@ l@@ ]+@@ a[x@@ -1@@ ][l@@ ]; } for(m=1;m@@ <@@ x@@ -1@@ ;m++) s=s+@@ a[m@@ ][0]+@@ a[m@@ ][y@@ -1]; cout<<s<<endl; } return0; }  
c -1
h -1
intmain() { intyear,month,day,@@ i,j,@@ sum; inta[@@ 12@@ ]={0,31,@@ 29@@ ,31,30,31,30,31@@ ,31,30,31,30@@ }; intb[@@ 12@@ ]={0,31,@@ 28@@ ,31,30,31,30,31@@ ,31,30,31,30@@ }; for(j=0;j<@@ 5@@ ;j++) { sum=0; scanf("%d%d%d",&year,&month,&day); if(year%@@ 4==0) { if(year%@@ 100==0) { if(year%@@ 400==0) { for(i=0;i<@@ month;i++) sum=sum+@@ a[i]; sum=sum+day; } else { for(i=0;i<@@ month;i++) sum=sum+@@ b[i]; sum=sum+day; } } else { for(i=0;i<@@ month;i++) sum=sum+@@ a[i]; sum=sum+day; } } else { for(i=0;i<@@ month;i++) sum=sum+@@ b[i]; sum=sum+day; } printf("%d\n",sum); } return0; }  
c -1
h -1
0

intmain() { intn,k,i,j,@@ f,@@ zs@@ [N]; scanf("%d%d",&n,&k); for(i=0;i<n;i++) { scanf("%d",&(@@ zs@@ [i]@@ )); } for(i=0;i<n;i++) { f=0; for(j=0;j<@@ n,@@ j@@ !=@@ i;j++) { if(@@ zs@@ [i]+@@ zs@@ [j]==k) { f=1; break; } } if(f@@ ==1) { break; } } if(f@@ ==1) { printf("yes"); }else { printf("no"); } return0; }  
c -1
h -1
structStudent {intnum; intyuwen; intshuxue; }; void@@ fun@@ (int*a,@@ int*@@ b); intmain() { intn,i,j; int@@ sum[@@ 100000]; scanf("%d",&n); structStudent@@ stu[100000]; for(i=0;i<n;i++) { scanf("%d%d%d",&stu[i].num,&stu[i].@@ yuwen@@ ,&stu[i].@@ shuxue); sum[i]=@@ stu[i].@@ yuwen+stu[i].@@ shuxue; } for(i=0;i<3;i++) { for(j=n-1;j>i;j--) { if(sum@@ [j]>@@ sum@@ [j-1]) { fun@@ (@@ &@@ sum@@ [j]@@ ,&@@ sum@@ [j-1]); fun@@ (@@ &@@ stu[j-1].@@ num,&@@ stu[j].@@ num); fun@@ (@@ &@@ stu[j-1].@@ yuwen@@ ,&@@ stu[j].@@ yuwen@@ ); fun@@ (@@ &@@ stu[j-1].@@ shuxue@@ ,&@@ stu[j].@@ shuxue); } } } for(i=0;i<3;i++) printf("%d%d\n",stu[i].@@ num,@@ sum@@ [i]); return0; } void@@ fun@@ (int*a,@@ int*@@ b) { intk; k@@ =*@@ a; *a@@ =*@@ b; *@@ b=@@ k; }  
c -1
h -1
0

intmain() { inti,k,@@ row,col,@@ ROW@@ ,@@ sz@@ [100][100],@@ COL@@ ,@@ sum@@ [100]; scanf("%d",&k); for(i=0;i<k;i++) { sum@@ [i]=0; } for(i=0;i<k;i++) { scanf("%d%d",&@@ ROW@@ ,&@@ COL@@ ); for(row=0;row@@ <ROW@@ ;@@ row++) { for(col=0;col@@ <@@ COL@@ ;col@@ ++) { scanf("%d",&@@ sz[row][col@@ ]); } } if(@@ ROW@@ ==1&&@@ COL@@ ==1) { sum[i]=sum[i]+@@ sz[0][@@ 0]; } else { for(col=0;col@@ <@@ COL@@ ;col@@ ++) { sum[i]=sum[i]+@@ sz[0][@@ col@@ ]+sz[@@ ROW@@ -1@@ ][col@@ ]; } for(row@@ =1;@@ row@@ <(@@ ROW@@ -1)@@ ;@@ row++) { sum[i]=sum[i]+@@ sz[@@ row@@ ][0]+@@ sz[@@ row@@ ][@@ COL@@ -1]; } } } for(i=0;i<k;i++) { printf("%d\n",sum@@ [i]); } scanf("%d",&k); return0; }  
c -1
h -1
intk,@@ n[@@ 25],@@ h@@ [25]; intmain() { cin>>k; inti,j; for(i=0;i<k;i++) cin>>@@ h@@ [i]; memset@@ (n,@@ sizeof@@ (n@@ ),@@ 0); int@@ tem@@ =0; for(i=0;i<k;i++) { tem@@ =0; for(j=0;j<i;j++) { if(h@@ [j]>=@@ h@@ [i]) { if(n@@ [j]>@@ tem@@ ) tem@@ =@@ n@@ [j]; } } n[i]@@ =1@@ +@@ tem; } tem@@ =0; for(i=0;i<k;i++) { if(n@@ [i]>@@ tem@@ ) tem@@ =@@ n[i]; } cout<<@@ tem@@ <<endl; return0; }  
c -1
h -1
0

inta[@@ 1000],b[1000],@@ la@@ ,lb@@ ; intp; intc[@@ 1000],@@ lc@@ ; void@@ M1@@ (int@@ m1@@ ) { cin>>@@ la@@ >>@@ lb@@ ; for(inti=1;i<=@@ la;i++) cin>>a[i]; for(inti=1;i<=@@ lb@@ ;i++) cin>>b[i]; } void@@ M2@@ (int@@ m2@@ ) { for(inti=1;i<=@@ la;i++) { for(intj=1;j<=@@ la@@ -1;j++) { if(a[j]>a[j+1]) { p=@@ a[j]; a[j]=a[j+1]; a[j+1]=@@ p; } } } for(inti=1;i<=@@ lb@@ ;i++) { for(intj=1;j<=@@ lb@@ -1;j++) { if(b[j]>b[j+1]) { p=@@ b[j]; b[j]=b[j+1]; b[j+1]=@@ p; } } } } void@@ M3@@ (int@@ m3@@ ) { lc@@ =@@ la@@ +lb@@ ; for(inti=1;i<=@@ la;i++) c[i]=a[i]; for(inti=1;i<=@@ lb@@ ;i++) c[@@ la@@ +i]=b[i]; } void@@ M4@@ (int@@ m4@@ ) { for(inti=1;i<=@@ lc@@ ;i++) { cout<<@@ c[i]; if(i==@@ lc@@ ) break; cout<<"@@ "; } } intmain() { M1@@ (@@ 1@@ );@@ M2@@ (@@ 1@@ );@@ M3@@ (@@ 1@@ );@@ M4@@ (@@ 1); return0; }  
c -1
h -1
inta[100],b[100]; intn,m; main() { voidinput@@ (void@@ ); void@@ order1@@ (void@@ ); void@@ order2@@ (void@@ ); voidoutput@@ (void@@ ); input(); order1@@ (); order2@@ (); output@@ (); } voidinput@@ (void) { inti; scanf("%d%d\n",&n,&@@ m); for(i=1;i<=n;i++) scanf("%d",&a[i]); for(i=1;i<=m;i++) scanf("%d",&b[i]); } void@@ order1@@ (void) { inti,j,t; for(i=1;i<=n-1;i++) for(j=i+1;j<=n;j++) if(a[i]>=@@ a[j]@@ ){@@ t=@@ a[i];a[i]=@@ a[j];a[j]=@@ t;} } void@@ order2@@ (void) { inti,j,t; for(i=1;i<=@@ m-1;i++) for(j=i+1;j<=@@ m;j++) if(b[i]@@ >=@@ b[j]@@ ){@@ t=@@ b[i]@@ ;@@ b[i]=b[j]@@ ;@@ b[j]=@@ t;} } voidoutput@@ (void) { inti; for(i=1;i<=n;i++) printf("%d",a[i]); for(i=1;i<m;i++) printf("%d",b[i]); printf("%d",@@ b[m@@ ]); }  
c -1
h -1
1


intmain() { intn,k,i,j,@@ s; inta[1000]; s=0; scanf("%d%d",&n,&k); for(i=1;i<=n;i++) scanf("%d",&a[i]); for(i=1;i<=n-1;i++) { for(j=i+1;j<=n;j++) { if((@@ a[i]+@@ a[j]@@ )==@@ k)@@ s=s+1; } } if(s@@ ==0)@@ printf("no"); else@@ printf("yes"); return0; }  
c -1
h -1
struct@@ person { charid[20]; inty; }; voidmain() { intn,i,j,@@ m=0,@@ k=0; struct@@ person@@ t@@ ,*@@ s,@@ o@@ [1000],@@ y@@ [1000]; scanf("%d",&n); s@@ =(struct@@ person@@ *)malloc(@@ n*@@ sizeof(struct@@ person@@ )); for(i=0;i<n;i++) scanf("%s%d",@@ s[i].@@ id,&@@ s[i].@@ y); for(i=0;i<n;i++) if(s@@ [i].y@@ >=60@@ ){@@ o@@ [k]=@@ s[i]@@ ;k@@ ++;} else{@@ y@@ [m]=@@ s[i]@@ ;m@@ ++;} for(i=0;i<k;i++) {@@ for(j=0;j<@@ k@@ -i;j++) if(@@ o@@ [j].@@ y@@ <@@ o@@ [j+1].@@ y@@ ){@@ t=@@ o@@ [j];@@ o@@ [j]=@@ o@@ [j+1];@@ o@@ [j+1]=@@ t;} } for(i=0;i<k;i++) printf("%s\n",@@ o@@ [i].id); for(i=0;i<m;i++) printf("%s\n",@@ y@@ [i].id); }  
c -1
h -1
0

int@@ function@@ (int@@ num,int@@ k) { intj; intm=0; if(num@@ >1) {@@ for(j=k@@ ;j<=@@ num@@ ;j++) {@@ if(num@@ %j==0) {@@ m=m+@@ function@@ (@@ num@@ /j@@ ,j@@ );} } return@@ m; } else return1; } intmain() {@@ inti,j; intn; cin>>n; intnum@@ [100]; for(i=0;i<n;i++) {@@ cin>>@@ num[i]@@ ;} for(i=0;i<n;i++) {@@ cout<<@@ function@@ (@@ num@@ [i],@@ 2)<<endl; } return0; }  
c -1
h -1
intmain() { struct@@ tushu { int@@ bianhao@@ ; char@@ zuozhe@@ [26]; }; inti,j,n,@@ q=0; intcount@@ [26]={0}; scanf("%d",&n); struct@@ tushu@@ *@@ pp@@ ; pp@@ =(struct@@ tushu@@ *)malloc(sizeof(@@ tushu@@ )*n); int*@@ m; m=@@ (int*)malloc(sizeof(int)*n); for(i=0;i<n;i++) { scanf("%d%s",&@@ ((@@ pp+i)->@@ bianhao@@ ),@@ (@@ pp+i)->@@ zuozhe@@ ); } for(i=0;i<n;i++) { m[i]@@ =strlen(@@ pp@@ [i].@@ zuozhe@@ ); for(j=0;j<m@@ [i];j++) { count[@@ pp@@ [i].@@ zuozhe@@ [j]@@ -'A']++; } } intmax=0; for(i=0;i<26;i++) { if(count@@ [i]@@ >max){max=@@ count@@ [i]@@ ;q@@ =i;} } printf("%c\n%d\n",@@ 'A'+@@ q,@@ max); for(i=0;i<n;i++) { for(j=0;j<m@@ [i];j++) { if(@@ pp@@ [i].@@ zuozhe@@ [j]==@@ (@@ 'A'+@@ q@@ ))@@ printf("%d\n",@@ pp@@ [i].@@ bianhao@@ ); } } return0; }  
c -1
h -1
0

main() { intn,@@ j,k,@@ t; scanf("%d",&n); chara[@@ n@@ ][10]; char@@ p@@ [1@@ ][10]; int@@ g@@ [n]; for(j=0;j<n;j++) scanf("%s%d",@@ a[j]@@ ,&@@ g@@ [j]); for(j=n-1@@ ;j>0;j--) for(k=@@ n-1@@ ;k@@ >@@ n@@ -j@@ -1@@ ;k--) { if(g@@ [k]@@ >=60) { if(g@@ [k]@@ >@@ g@@ [k-1@@ ]) { t=@@ g@@ [k@@ -1]; g@@ [k-1@@ ]=@@ g@@ [k]; g@@ [k]=@@ t; strcpy(@@ p[@@ 0],@@ a[k@@ -1]); strcpy(@@ a[k@@ -1@@ ],@@ a[k]); strcpy(@@ a[k@@ ],@@ p@@ [0]); } } } for(k=0;k<n;k++) printf("%s\n",@@ a[k]); getchar(); getchar(); }  
c -1
h -1
intmain() { inti,j,n,@@ k,@@ m; inta[100]; while(1){ scanf("%d",&a[0]); if(a[0]==-1) break; for(i=1;@@ ;i++){ scanf("%d",&a[i]); if(a[i]==0) break; } n=i; for(i=n-1@@ ;i>0@@ ;i--){ for(j=0;j<i;j++){ if(a[j]>a[j+1@@ ]){ k=@@ a[j]; a[j]=a[j+1]; a[j+1]=@@ k; } } } m=0; for(i=0;i<n-1;i++){ for(j=i+1;j<n;j++){ if(a[j]==2*@@ a[i]@@ ){ m=m+1; break; } if(a[j]>@@ 2*@@ a[i]@@ ){ break; } } } printf("%d\n",m); } return0; }  
c -1
h -1
0

intmain() { structpatient { charid[10]; intage; }; intn,i,j,k; structpatient@@ p@@ [100]; scanf("%d",&n); for(i=0;i<n;i++) scanf("%s%d",@@ p[i].@@ id,@@ &@@ p[i].age); for(i=1;i<n;i++) { if(p@@ [i].age>=60) { j=0; while(j@@ <i@@ &&p@@ [j].age@@ >=@@ p@@ [i].age@@ )@@ j++; if(j<@@ i) { structpatient@@ tmp@@ =p@@ [i]; for(k=i@@ ;k@@ >@@ j@@ ;k--) p@@ [k]=@@ p@@ [k@@ -1]; p@@ [j]=@@ tmp; } } } for(i=0;i<n;i++) printf("%s\n",@@ p@@ [i].id); return0; }  
c -1
h -1
structstudent { intnum; intchi; intmath; }; intmain() { intn,i,@@ e=0,@@ f@@ =0,@@ g@@ =0,@@ a=0,b=0,@@ c=0; scanf("%d",&n); structstudent*@@ stu@@ =(structstudent@@ *)malloc(sizeof(int)@@ *3@@ *n); int*@@ sz@@ =@@ (int*)malloc(sizeof(int)*n); for(i=0;i<n;i++) { scanf("%d%d%d",&stu[i].num,&stu[i].@@ chi@@ ,&stu[i].math); sz@@ [i]=@@ stu[i].@@ chi@@ +stu[i].@@ math; } for(i=0;i<n;i++) { if(sz[i]@@ >@@ sz[a@@ ]) { a=i; e=@@ stu[i].@@ num; } } printf("%d%d\n",@@ e,@@ sz[a@@ ]); for(i=0;i<n;i++) { if(i==@@ a) { continue; } if(sz[i]@@ >@@ sz[@@ b@@ ]) { b=i; f@@ =stu[i].@@ num; } } printf("%d%d\n",@@ f,@@ sz[@@ b@@ ]); for(i=0;i<n;i++) { if(i==@@ a@@ ||i==@@ b) { continue; } if(sz[i]@@ >@@ sz[@@ c@@ ]) { c=i; g@@ =stu[i].@@ num; } } printf("%d%d",@@ g,@@ sz[@@ c@@ ]); free(@@ sz@@ ); return0; }  
c -1
h -1
0

int@@ l=0,@@ num=0,@@ o@@ ; voidf@@ (inti,int@@ in@@ ) { intj; for(j=i;j<@@ (@@ in@@ +1)@@ ;j++) { if(j@@ *(@@ in@@ /j@@ )==@@ in@@ ) { o@@ =@@ in@@ /@@ j; f(@@ j,@@ in@@ /j@@ ); o@@ =@@ o@@ *@@ j; } } if(@@ o@@ ==1){@@ num=num@@ +1;} } intmain() { intt; cin>>t; inti; int@@ in@@ ; for(i=0;i<t;i++) { cin>>@@ in@@ ; f(@@ 2,@@ in@@ ); cout<<num<<endl; num=0; } return0; }  
c -1
h -1
intmain(intargc,char*argv[]) { intn=0,@@ N; inty,m,@@ d; scanf("%d%d%d",&y,&m,&d); if(y%@@ 100!=0@@ &&@@ y%@@ 4@@ ==0){ int@@ p[@@ 13]={0,31,@@ 29,31,30,31,30,31,31,30,31,30,31}; if(d@@ <@@ 1@@ ||@@ d@@ >@@ p@@ [m@@ ])@@ printf("@@ Illegal@@ input@@ .@@ \n"); else{ intj; for(j=0;j<m;j++){ n=n+@@ p@@ [j]; } N@@ =@@ n+@@ d; printf("%d\n",@@ N); } } elseif(@@ y%@@ 4@@ !=0){ int@@ q@@ [13]={0,31,28,31,30,31,30,31,31,30,31,30,31}; if(d@@ <@@ 1@@ ||@@ d@@ >@@ q@@ [m@@ ])@@ printf("@@ Illegal@@ input@@ .@@ \n"); else{ intj; for(j=0;j<m;j++){ n=n+@@ q@@ [j]; } N@@ =@@ n+@@ d; printf("%d\n",@@ N); } } return0; }  
c -1
h -1
0

int@@ sort@@ (inta[],int@@ k); intmain() { intn; scanf("%d",&n); inti,j; inta[@@ 25]; for(i=0;i<n;i++) { scanf("%d",&a[i]); } int@@ d[@@ 25]; for(i=n-1;i>=0;i--) { d@@ [i]=1; for(j=i+1;j<n;j++) { if(a[i]>=@@ a[j]&&@@ d@@ [i]<@@ d@@ [j]@@ +1) d[i]=@@ d@@ [j]+1; } } intmax=0; for(i=0;i<n;i++) if(d@@ [i]>max) max=@@ d[i]; printf("%d",max); }  
c -1
h -1
struct@@ a { char@@ No@@ [20]; inty; ints; struct@@ a@@ *next; }; intn; struct@@ a*@@ creat@@ (void) { struct@@ a*@@ p1,*p2,*head; inti; scanf("%d\n",&n); p1=p2=(struct@@ a@@ *)malloc(LEN); head=NULL; for(i=0;i<n;i++) { scanf("%s%d%d",@@ p1->@@ No@@ ,&p1->@@ y@@ ,&p1->@@ s); if(i==0)@@ head=p1; elsep2->next=p1; p2=p1; p1=(struct@@ a@@ *)malloc(LEN); } p2->next=NULL; return(head); } intmain() { struct@@ a@@ *head,*@@ p1,*p2,*@@ p; inti,j,k,@@ m1,@@ m2@@ ; char@@ r@@ [10]; head=creat(); for(p1=@@ head@@ ,j@@ =0;@@ p1@@ !=NULL;@@ p1=p1->next) { k=@@ p1->@@ y@@ +p1->@@ s; if(k@@ >@@ j@@ ){@@ p=@@ p1@@ ;j@@ =@@ k;@@ m1@@ =p1->@@ y@@ ;@@ m2@@ =p1->@@ s@@ ;@@ strcpy(@@ r,@@ p1->@@ No@@ );} } printf("%s%d\n",@@ r@@ ,j); for(p1=@@ head;@@ p1@@ !=NULL;@@ ) { p2@@ =p1;@@ p1=p1->next; if(@@ p1@@ ==@@ p@@ ){@@ p2->next=@@ p1->next@@ ;break;} elseif(@@ p2@@ ==@@ p@@ ){@@ head=@@ p1->next@@ ;break;} } for(p1=@@ head@@ ,j@@ =0;@@ p1@@ !=NULL;@@ p1=p1->next) { k=@@ p1->@@ y@@ +p1->@@ s; if(k@@ >@@ j@@ ){@@ p=@@ p1@@ ;j@@ =@@ k;@@ m1@@ =p1->@@ y@@ ;@@ m2@@ =p1->@@ s@@ ;@@ strcpy(@@ r,@@ p1->@@ No@@ );} } printf("%s%d\n",@@ r@@ ,j); for(p1=@@ head;@@ p1@@ !=NULL;@@ ) { p2@@ =p1;@@ p1=p1->next; if(@@ p1@@ ==@@ p@@ ){@@ p2->next=@@ p1->next@@ ;break;} elseif(@@ p2@@ ==@@ p@@ ){@@ head=@@ p1->next@@ ;break;} } for(p1=@@ head@@ ,j@@ =0;@@ p1@@ !=NULL;@@ p1=p1->next) { k=@@ p1->@@ y@@ +p1->@@ s; if(k@@ >@@ j@@ ){@@ p=@@ p1@@ ;j@@ =@@ k;@@ m1@@ =p1->@@ y@@ ;@@ m2@@ =p1->@@ s@@ ;@@ strcpy(@@ r,@@ p1->@@ No@@ );} } printf("%s@@ %d",@@ r@@ ,j); }  
c -1
h -1
0

intmain() { intm,n,i,j,@@ s; charstr@@ [256@@ ],c[@@ 256],@@ d@@ [256]; gets(c); gets(str); gets(@@ d); m=strlen(@@ str); n=strlen(@@ c); for(i=0;i<n@@ -m@@ +1;i++) { if(c@@ [i]==@@ str@@ [0]) { s=0; for(j=i;j<i+@@ m;j++) { if(c@@ [j]==@@ str@@ [j-i@@ ]) { s=s+1; } } if(s@@ ==@@ m) { break; } } } if(s@@ ==@@ m) { for(j=i;j<i+@@ m;j++) { c[j]=@@ d@@ [j-i@@ ]; } } puts(@@ c); return0; }  
c -1
h -1
main() { intk,i,@@ x; scanf("%d",&k); inth@@ [k]; inta[@@ k@@ ]; for(i=0;i<k;i++) { scanf("%d",&h[i]); } for(x=0;x@@ <k;@@ x++) { a[x@@ ]=1; } int@@ c,d; for(@@ c=@@ k@@ -2@@ ;c@@ >=0@@ ;c@@ --) { for(@@ d=@@ c@@ +1;@@ d@@ <k;@@ d++) { if((@@ h@@ [c@@ ]>=@@ h@@ [d@@ ]@@ )&&(@@ a[d@@ ]>=@@ a[c@@ ]@@ )) a[c@@ ]=a[@@ d@@ ]+1; } } int@@ y=1; intm; for(m=0;m<@@ k@@ ;m++) { if(a[m@@ ]>@@ y) y=@@ a[m@@ ]; } printf("%d",@@ y); getchar(); getchar(); getchar(); getchar(); getchar(); getchar(); getchar(); getchar(); getchar(); getchar(); getchar(); getchar(); getchar(); getchar(); getchar(); getchar(); getchar(); getchar(); getchar(); getchar(); getchar(); getchar(); getchar(); getchar(); getchar(); getchar(); getchar(); getchar(); getchar(); getchar(); getchar(); getchar(); getchar(); getchar(); getchar(); getchar(); }  
c -1
h -1
0

voidmain() { inti,j,k,n,@@ a[@@ 1500@@ ],@@ flag=0; scanf("%d%d",&n,&k); for(i=1;i<=@@ n;i++)@@ scanf("%d",&a[i]); for(i=2;i<=n;i++) for(j=1;j<=@@ i@@ -1@@ ;j++)@@ if((@@ a[i]+@@ a[j]@@ )==@@ k)@@ flag=1; if(n@@ ==1)@@ printf("no@@ ");@@ else if(flag@@ )@@ printf("yes");@@ elseprintf("no"); }  
c -1
h -1
int@@ pfCompare@@ (constvoid*@@ elem1@@ ,@@ constvoid*@@ elem2@@ ) { int@@ d; d@@ =*(@@ (int*)@@ elem2@@ )@@ -*(@@ (int*)@@ elem1@@ ); return@@ d; } structstudent { long@@ intID; long@@ intc; long@@ intm; }; intmain() { long@@ intn,i,j,k; intb[@@ 100000]; int@@ e@@ [3]; scanf("%d",&n); structstudent@@ a[@@ 100000]; for(i=0;i<n;i++) { scanf("%d%d%d",&a[i].@@ ID,&@@ a[i].@@ c@@ ,&a[i].@@ m); } for(i=0;i<n;i++) { b[i]=@@ a[i].@@ c+@@ a[i].@@ m; } qsort@@ (b,@@ n,@@ sizeof(@@ long@@ int@@ ),@@ pfCompare@@ ); for(i=0;i<n;i++) { if(@@ b[0]@@ ==@@ a[i].@@ c+@@ a[i].@@ m) { e@@ [0]=@@ a[i].@@ ID; j=i; break; } } for(i=0;i<n;i++) { if((@@ b[1@@ ]==@@ a[i].@@ c+@@ a[i].@@ m)@@ &&i!=@@ j) { e@@ [1]=@@ a[i].@@ ID; k=i; break; } } for(i=0;i<n;i++) { if((@@ b[2@@ ]==@@ a[i].@@ c+@@ a[i].@@ m)@@ &&i!=@@ j@@ &&i!=@@ k) { e@@ [2]=@@ a[i].@@ ID; break; } } for(i=0;i<=@@ 2@@ ;i++) { printf("%d%d\n",@@ e@@ [i],@@ b[i]); } getchar(); getchar(); getchar(); }  
c -1
h -1
0

intmain() { intn,@@ number,@@ i,j,k,@@ t,@@ len,@@ max; int@@ map@@ [26@@ ][@@ 1000]={0}; charname@@ [27]; cin>>n; for(i=0;i<=25;i++) map@@ [i][0]@@ =0; for(i=1;i<=n;i++) { cin>>@@ number@@ >>@@ name@@ ; len=strlen(@@ name); for(j=0;j<=@@ len@@ -1;j++) { k=@@ name@@ [j]@@ -'A'; map@@ [k@@ ][0]@@ ++; t=@@ map@@ [k@@ ][0]; map@@ [k@@ ][@@ t@@ ]=@@ number; } } max=0; for(i=0;i<=25;i++) { if(@@ map@@ [i][0]@@ >max) { max=@@ map@@ [i]@@ [0]; k=i; } } cout<<@@ (char)(@@ 65@@ +k@@ )<<endl; cout<<@@ map@@ [k@@ ][0]; for(i=1;i<=@@ map@@ [k@@ ][0]@@ ;i++) cout<<@@ endl@@ <<@@ map@@ [k]@@ [i]; return0; }  
c -1
h -1
intn; struct@@ patients { charname@@ [11]; intage; }@@ pat@@ [100]; struct@@ patold { charname@@ [11]; intage; }@@ old@@ [100]; struct@@ patyoung { charname@@ [11]; intage; }@@ young@@ [100]; int@@ y=0,@@ o@@ =0; char@@ nametemp@@ [11]; int@@ agetemp@@ ; intmain() { inti,j; scanf("%d",&n); for(i=0;i<n;i++) { scanf("%s",&@@ pat[i].@@ name); scanf("%d",&@@ pat@@ [i].age); } for(i=0;i<n;i++) { if(pat@@ [i].age>=60) { strcpy(old@@ [@@ o@@ ].@@ name,@@ pat[i].@@ name); old@@ [@@ o@@ ].age=@@ pat@@ [i].age; o@@ ++; } else { strcpy(@@ young@@ [y@@ ].@@ name,@@ pat[i].@@ name); young@@ [y@@ ].age=@@ pat@@ [i].age; y++; } } for(i=1;i<@@ o@@ ;i++) { for(j=0;j<@@ o@@ -i;j++) { if(old@@ [j].age@@ <@@ old@@ [j+1@@ ].age) { agetemp@@ =@@ old@@ [j].@@ age; old@@ [j].age@@ =@@ old@@ [j+1].@@ age; old@@ [j+1@@ ].age=@@ agetemp@@ ; strcpy(@@ nametemp@@ ,@@ old@@ [j].@@ name); strcpy(old@@ [j].@@ name,@@ old@@ [j+1].@@ name); strcpy(old@@ [j+1].@@ name,@@ nametemp@@ ); } } } for(i=0;i<@@ o@@ ;i++) printf("%s\n",old@@ [i].@@ name); for(i=0;i<y;i++) printf("%s\n",@@ young@@ [i].@@ name); return0; }  
c -1
h -1
0

intmain() { intm,@@ i,j; scanf("%d",&m); struct@@ Bookinfo { intnumber; char@@ auther@@ [27]; }; struct@@ Bookinfo@@ a[1000]; for(i=0;i<m;i++) scanf("%d%s",&@@ a[i].@@ number,@@ a[i].@@ auther@@ ); intcount@@ [26]={0},@@ max,@@ record@@ ; for(i=0;i<m;i++) { intk; k=strlen(@@ a[i].@@ auther@@ ); for(j=0;j<k;j++) { count[@@ a[i].@@ auther@@ [j]@@ -'A']++; } } max=count@@ [0]; for(i=0;i<26;i++) if(count@@ [i]>=@@ max) { max=count@@ [i]; record@@ =i; } printf("%c\n%d\n",@@ record@@ +'A',@@ max); for(i=0;i<m;i++) { intn; n=strlen(@@ a[i].@@ auther@@ ); for(j=0;j<n;j++) if(a[i].@@ auther@@ [j]==@@ record@@ +'A'@@ ) { printf("%d\n",@@ a[i].@@ number); break; } } }  
c -1
h -1
intmain(){ doublen,@@ s=0; int@@ len,@@ lon@@ ,i,@@ z; chara[@@ 750@@ ],b[@@ 750@@ ]; scanf("%lf",&n); scanf("%s",a); scanf("%s",b); z=1; len@@ =strlen(a); lon@@ =strlen(b); if(@@ len@@ !=@@ lon@@ ) {@@ z=0; printf("error");} else {@@ for(i=0;i<len;i++) {@@ if((a[i]!='@@ A')&&(@@ a[i]!='@@ T')&&(@@ a[i]!='@@ G')&&(@@ a[i]!='@@ C')@@ ) {@@ z=0; printf("error"); break;} if((@@ b[i]!='@@ A')&&(@@ b[i]!='@@ T')&&(@@ b[i]!='@@ G')&&(@@ b[i]!='@@ C')@@ ) {@@ z=0; printf("error"); break;} } if(z@@ ==1) {@@ for(i=0;i<len;i++) {@@ if(a[i]==b[i]) s@@ ++;} double@@ x=@@ s/@@ len; if(x>@@ n)@@ printf("yes"); elseprintf("no"); } } return0; }  
c -1
h -1
0

intn,m; inta[@@ 1000],b[1000],@@ c[@@ 2000]; voidread@@ (){ inti; scanf("%d%d",&@@ n,@@ &@@ m); for(i=0;i<n@@ ;++i) scanf("%d",a@@ +i); for(i=0;i<m@@ ;++i) scanf("%d",@@ b@@ +i); } int@@ cmp@@ (constvoid*a,constvoid*@@ b){ return@@ *(@@ (int*)@@ a)@@ -@@ *(@@ (int*)@@ b); } voidsort@@ (){ qsort@@ (a,n,@@ sizeof(int),@@ cmp@@ ); qsort@@ (b,@@ m,@@ sizeof(int),@@ cmp@@ ); } void@@ merge@@ (){ inti; for(i=0;i<n@@ ;++i) c[i]=a[i]; for(i=0;i<m@@ ;++i) c[@@ n@@ +i]=b[i]; } voidoutput@@ (){ inti; printf("%d",c@@ [0]); for(i=1;i<@@ n+@@ m;@@ ++@@ i) printf("%d",c[i]); } intmain(){ read(); sort@@ (); merge@@ (); output@@ (); return0; }  
c -1
h -1
inta[@@ 30]; int@@ len@@ [30]; intmain() { intn; cin>>n; inti,j; for(i=1;i<=n;i++) { cin>>@@ a[n@@ -i@@ +1]; len@@ [i]=1; } for(i=2;i<=n;i++) for(j=1;j<i;j++) { if(a[j]<=@@ a[i]@@ &&(@@ len@@ [j]+1>@@ len@@ [i]@@ )) len@@ [i]=@@ len@@ [j]+1; } int@@ maxx@@ =0; for(i=1;i<=n;i++) { if(@@ len@@ [i]>@@ maxx@@ ) maxx@@ =@@ len@@ [i]; } cout<<@@ maxx@@ <<endl; return0; }  
c -1
h -1
0

void@@ TRY@@ (int,int); intnum@@ =1; intmain() { unsigned@@ short@@ intn; int@@ INTEGER@@ ; cin>>n; while(n@@ -->@@ 0@@ ) { cin>>@@ INTEGER@@ ; int@@ h=@@ 2; TRY@@ (@@ h,@@ INTEGER@@ ); cout<<num<<endl; num@@ =1; } } void@@ TRY@@ (inta,intb) { inti; for(i=a@@ ;i<=sqrt(@@ b@@ );i++) { if((@@ b@@ %i@@ ==0)&&(@@ b@@ /i@@ !=1@@ )) { num++; TRY@@ (i,@@ b@@ /i); } } }  
c -1
h -1
intmain() { inta[100],b[100],@@ c[100],@@ n,i,j,@@ lao@@ =0,@@ you@@ =0,@@ t; char@@ e@@ [100][10],@@ f@@ [100][10],@@ g@@ [100][10],@@ s[@@ 10]; scanf("%d",&n); for(i=0;i<n;i++) scanf("%s%d",@@ e@@ [i],&@@ a[i]); for(i=0;i<n;i++) { if(a[i]@@ >=60) { b[@@ lao@@ ]=a[i]; strcpy(@@ f[@@ lao@@ ],@@ e@@ [i]); lao@@ ++; } else { c[@@ you@@ ]=a[i]; strcpy(@@ g@@ [@@ you@@ ],@@ e@@ [i]); you@@ ++; } } for(j=0;j<@@ lao@@ -1;j++) { for(i=0;i<@@ lao@@ -1;i++) { if(b[i]@@ <b@@ [i+1]) { t=b[i]; b[i]=b[i+1]; b[i+1]=@@ t; strcpy(s,@@ f@@ [i]); strcpy(@@ f@@ [i],@@ f@@ [i+1]); strcpy(@@ f@@ [i+1],@@ s); } } } for(i=0;i<@@ lao@@ ;i++) printf("%s\n",@@ f@@ [i]); for(i=0;i<@@ you@@ ;i++) printf("%s\n",@@ g@@ [i]); return0; }  
c -1
h -1
0

intmain() { introw,col,@@ a[100][100],@@ i,j,@@ k=0,@@ b[@@ 10000],@@ s; scanf("%d%d",&row,&col); for(i=0;i<row;i++) { for(j=0;j<col;j++) { scanf("%d",&a[i][j]); } } if(row@@ >=@@ col) { for(s=0;s@@ <col@@ ;s++) { for(i=0;i<=@@ s;i++) { b[k]=@@ a[i][@@ s@@ -i@@ ]; k++; } } for(@@ s=@@ col@@ ;s@@ <row@@ ;s++) { for(i=@@ s@@ -col@@ +1;i<=@@ s;i++) { b[k]=@@ a[i][@@ s@@ -i@@ ]; k++; } } for(@@ s=@@ row@@ ;s@@ <row@@ +col@@ -1;@@ s++) { for(i=@@ s@@ -col@@ +1;i<@@ row;i++) { b[k]=@@ a[i][@@ s@@ -i@@ ]; k++; } } } else { for(s=0;s@@ <row@@ ;s++) { for(i=0;i<=@@ s;i++) { b[k]=@@ a[i][@@ s@@ -i@@ ]; k++; } } for(@@ s=@@ row@@ ;s@@ <col@@ ;s++) { for(i=0;i<row;i++) { b[k]=@@ a[i][@@ s@@ -i@@ ]; k++; } } for(@@ s=@@ col@@ ;s@@ <col@@ +row@@ -1;@@ s++) { for(i=@@ s@@ -col@@ +1;i<@@ row;i++) { b[k]=@@ a[i][@@ s@@ -i@@ ]; k++; } } } for(i=0;i<k;i++) { printf("%d\n",@@ b[i]); } return0; }  
c -1
h -1
intmain(){ intb,@@ c,@@ i,@@ j1@@ ,j; doublea,@@ m,n; chars1@@ [100],@@ s2@@ [100]; c=0; scanf("%lf",&a); scanf("%s",@@ s1); scanf("%s",@@ s2); if(strlen(@@ s1@@ )!=strlen(@@ s2@@ )){ printf("error"); return0; }else{ for(i=0;@@ s1@@ [i]!='\0';i++){ if(s1@@ [i]!='A'&&@@ s1@@ [i]!='G'&&@@ s1@@ [i]!='C'&&@@ s1@@ [i]!='T@@ '||@@ s2@@ [i]!='A'&&@@ s2@@ [i]!='G'&&@@ s2@@ [i]!='C'&&@@ s2@@ [i]!='T'){ printf("error"); return0; }else{ if(s1[i]==s2@@ [i]){ c++; } } } } m@@ =1.0*@@ strlen(@@ s1); n@@ =1.0*@@ c; if(n@@ /@@ m@@ >@@ a){ printf("yes"); }else{ printf("no"); } return0; }  
c -1
h -1
0

intmain() { int@@ col,@@ row,@@ i,j,@@ n,m,@@ e,@@ cishu@@ ,@@ sz@@ [100][100]; e=0; n=0; cishu@@ =0; scanf("%d%d",&row,&col); for(j=0;j<row@@ ;j++){ for(i=0;i<@@ col@@ ;i++){ scanf("%d",&sz@@ [j]@@ [i]); } }@@ if(row@@ >1@@ &&@@ col@@ >1@@ ){ for(i=0,j@@ =0;@@ ;i++,j@@ --){ if(i@@ ==0){@@ m@@ =j;} printf("%d\n",sz@@ [i][j]); cishu@@ ++; if(@@ cishu@@ ==@@ row@@ *col@@ ){@@ break;} if((@@ j@@ ==0||i==@@ row-1)@@ &&@@ e@@ ==0){ i@@ =-1; j=@@ m+@@ 2; if(j==@@ col@@ ){@@ e@@ =1;} }@@ if((@@ j@@ ==0||i==@@ row-1)@@ &&@@ e@@ ==1){ j=@@ col; n++; i=@@ n-1; } } }else{ for(j=0;j<row@@ ;j++){ for(i=0;i<@@ col@@ ;i++){ printf("%d\n",@@ sz[j]@@ [i]); } } } return0; }  
c -1
h -1
intmain() { chara[256],b[256],c[256]; scanf("%s%s%s",@@ b,@@ a,@@ c); int@@ alen@@ ,@@ blen@@ ,@@ clen@@ ,@@ i,j; alen@@ =strlen(@@ a);@@ blen@@ =strlen(@@ b@@ );@@ clen@@ =strlen(c); intn=0; for(i=0;i<@@ blen@@ ;i++) { if(b[i]==@@ a[0]) { n=1; for(j=0;j<@@ alen@@ ;j++) if(a[j]!=@@ b@@ [i+j@@ ]){@@ n=@@ 2@@ ;break;} } if(n@@ ==1)break; } int@@ t=i; if(n==1) { for(i=0;i<@@ t@@ ;i++)@@ printf("%c",@@ b[i]); printf("%s",@@ c); for(i=@@ t@@ +@@ clen@@ ;i<@@ blen@@ ;i++)@@ printf("%c",@@ b[i]); } else@@ printf("%s",@@ b); return0; }  
c -1
h -1
0

intmain() { intn,m; cin>>m>>n; inta[100][100]; for(inti=0;i<m;i++) { for(intj=0;j<n;j++) cin>>a[i][j]; } for(inti=0;i<@@ m+@@ n-1;i++) { for(intj=0;j<=@@ i;j++) { if((@@ j@@ <m@@ )&&(i@@ -j@@ <n@@ )) cout<<*(*(a@@ +j)@@ +i-j@@ )<<endl; } } return0; }  
c -1
h -1
voidmain() { inta,b,c,@@ d; scanf("%d%d%d",&a,&b,&c); if(a%@@ 4!=0@@ ||(@@ a%@@ 4==0&&@@ a%@@ 100==0&&@@ a%@@ 400!=0)) { if(b==1) d=@@ c; if(b==@@ 2) d@@ =31+c; if(b==@@ 3) d=31+28@@ +c; if(b==@@ 4) d=31+28@@ +31+@@ c; if(b==@@ 5) d=31+28@@ +31+30@@ +c; if(b==@@ 6) d=31+28@@ +31+30+31+@@ c; if(b==@@ 7) d=31+28@@ +31+30+31+30@@ +c; if(b==@@ 8) d=31+28@@ +31+30+31+30+31+@@ c; if(b==@@ 9) d=31+28@@ +31+30+31+30+31+31+@@ c; if(b==@@ 10) d=31+28@@ +31+30+31+30+31+31+30@@ +c; if(b==@@ 11) d=31+28@@ +31+30+31+30+31+31+30+31+@@ c; if(b==@@ 12) d=31+28@@ +31+30+31+30+31+31+30+31+30@@ +c; } else { if(b==1) d=@@ c; if(b==@@ 2) d@@ =31+c; if(b==@@ 3) d=31+29@@ +c; if(b==@@ 4) d=31+29@@ +31+@@ c; if(b==@@ 5) d=31+29@@ +31+30@@ +c; if(b==@@ 6) d=31+29@@ +31+30+31+@@ c; if(b==@@ 7) d=31+29@@ +31+30+31+30@@ +c; if(b==@@ 8) d=31+29@@ +31+30+31+30+31+@@ c; if(b==@@ 9) d=31+29@@ +31+30+31+30+31+31+@@ c; if(b==@@ 10) d=31+29@@ +31+30+31+30+31+31+30@@ +c; if(b==@@ 11) d=31+29@@ +31+30+31+30+31+31+30+31+@@ c; if(b==@@ 12) d=31+29@@ +31+30+31+30+31+31+30+31+30@@ +c; } printf("%d\n",@@ d); }  
c -1
h -1
0

intmain() { intb,@@ c,d,@@ sum=0; inta[@@ 20]; a[0]@@ =0; a[1@@ ]=31; a[2]=@@ 59@@ ; a[@@ 3@@ ]=@@ 90@@ ; a[@@ 4@@ ]=@@ 120@@ ; a[@@ 5@@ ]=@@ 151@@ ; a[@@ 6@@ ]=@@ 181@@ ; a[@@ 7@@ ]=@@ 212@@ ; a[@@ 8@@ ]=@@ 243@@ ; a[@@ 9@@ ]=@@ 273@@ ; a[@@ 10@@ ]=@@ 304@@ ; a[@@ 11@@ ]=@@ 334@@ ; a[@@ 12@@ ]=@@ 365@@ ; scanf("%d%d%d",&@@ b,@@ &@@ c,@@ &@@ d); if((@@ b@@ %@@ 4!=0@@ )||(@@ b@@ %@@ 100==0&&@@ b@@ %@@ 400@@ !=0@@ )){ sum=@@ a[c@@ -1]@@ +d; } else{ if(c@@ <@@ 3@@ ){ sum=@@ a[c@@ -1]@@ +d; } else{ sum=@@ a[c@@ -1]@@ +d@@ +1; } } printf("%d",sum); return0; }  
c -1
h -1
intmain() { inta[@@ 20@@ ]={0}; inti,j,k; while(1) { intnum=0; cin>>@@ a[1]; if(a[1@@ ]==@@ -1)break; for(i=2@@ ;@@ ;i++) { cin>>a[i]; if(a[i]==0)break; } for(j=1;j<i;j++) { for(k=j@@ ;k<@@ i;k++) { if(a[j]==2*@@ a[k]@@ ||@@ a[k@@ ]==2*@@ a[j]) num++; } } cout<<num<<endl; } return0; }  
c -1
h -1
0

intmain() { inta[100][100],@@ i,j,@@ m,@@ l,@@ n,k,@@ t; int(*p)@@ [100@@ ]=a; int*@@ q=@@ a[0]; introw,@@ column@@ ; cin>>row@@ >>@@ column@@ ; for(j=0;j<row@@ ;j++) { q@@ =*@@ (a@@ +j); for(l=0;l<@@ column@@ ;l++) cin>>@@ *(q@@ +@@ l); } for(i=0;i<=@@ row@@ +@@ column@@ -2;i++) { for(k=0;k<@@ row@@ ;k++) { for(t=0;t@@ <@@ column@@ ;t++) { if(k@@ +@@ t@@ ==@@ i) {@@ cout<<@@ *(*(p@@ +k@@ )+@@ t)@@ <<endl;} } } } return0; }  
c -1
h -1
intmain(intargc@@ ,@@ const@@ char*@@ argv[]) { intn=0,@@ i=0; cin>>n; inta[n]; for(i=0;i<n;i++) cin>>a[i]; int@@ j=0,@@ k=0,@@ l=0; for(j=0;j<n-1;j++) for(k=j+1;k<@@ n;k++) {@@ if(a[j]==@@ a[k]) {@@ for(l@@ =@@ k;@@ l<@@ n-1;@@ l++) {@@ a[l@@ ]=a[@@ l@@ +1]; }@@ n--; k--; } } for(i=0;i<n-1;i++) cout<<a[i]<<""; cout<<a[@@ n-1]; return0; }  
c -1
h -1
0

voidf@@ (inti,int@@ m); intsum; intmain() { intn,i,@@ m,@@ k; scanf("%d",&n); for(i=0;i<n;i++) {@@ sum=1; scanf("%d",&m); f(@@ 2,@@ m); printf("%d\n",sum); } } voidf@@ (inti,int@@ m) { intk,@@ s; s=@@ (int)sqrt(@@ m); for(k=i@@ ;k<=@@ s@@ ;k++) { if(m@@ %@@ k@@ ==0) { sum++; f(@@ k,@@ m/@@ k); } } }  
c -1
h -1
intmain() { inti,j,n,@@ k; inta[@@ 10000]; scanf("%d\n",&n); for(i=0;i<n;i++) { scanf("%d",&a[i]); if(i==0) printf("%d",a[i]); else { k=0; for(j=0;j<i;j++) { if(a[i]==a[j]) { k=1; } } if(k==0) printf("%d",a[i]); } } return0; }  
c -1
h -1
0

intmain() { intn,k,@@ m[@@ 1000],@@ i,j; scanf("%d%d",&n,&k); for(i=0;i<n;i++) scanf("%d",&@@ m[i]); for(i=0;i<n;i++) { for(j=i+1;j<n;j++) if(m@@ [i]@@ +m@@ [j]==k) break; if(j!=@@ n) break; } if(i==@@ n) printf("no"); else printf("yes"); return0; }  
c -1
h -1
intmain() { intk; scanf("%d",&k); while(k@@ --) {@@ intm,n; scanf("%d%d",&m,&n); inti,j; inta[100][100]; for(i=0;i<m;i++) for(j=0;j<n;j++) scanf("%d",&a[i][j]); ints=0; if(m==1) {@@ for(j=0;j<n@@ ;j++)@@ s+=@@ a[0][j]; printf("%d\n",s); } elseif(n@@ ==1) {@@ for(i=0;i<m;i++)@@ s+=@@ a[i][0]; printf("%d\n",s); } else{ for(j=0;j<n-1;j++) s+=@@ a[0][j]; for(i=0;i<m-1;i++) s+=@@ a[i][n-1]; for(j=1;j<n;j++) s+=@@ a[m-1][j]; for(i=1;i<m;i++) s+=@@ a[i][0]; printf("%d\n",s); }} return0; }  
c -1
h -1
0

voidmain() { intm,n,@@ i,j,k,@@ d,@@ s; inta,@@ b=0,@@ c; int@@ tt@@ [1000],@@ pp@@ [1000],@@ miao@@ [26]={0}; char@@ kk@@ [1000][@@ 30]; char@@ w; scanf("%d",&m); for(i=0;i<m;i++) { scanf("%d%s",&@@ tt@@ [i],@@ kk@@ [i]); } for(@@ s=0,@@ j=@@ 65@@ ;j<=@@ 90@@ ;j++,@@ s++) { for(k=0;k<@@ m;k++) { for(d@@ =0;@@ kk@@ [k@@ ][@@ d@@ ]!='\0'@@ ;@@ d++) { if(@@ kk@@ [k@@ ][@@ d@@ ]==@@ j)@@ miao@@ [s@@ ]++; } } } for(a=0;a@@ <26@@ ;a@@ ++) { if(@@ miao@@ [a]@@ >b@@ ){@@ b=@@ miao@@ [a@@ ];@@ c=@@ a@@ ;} } printf("%c\n%d\n",@@ c@@ +65@@ ,@@ b); w@@ =(@@ c@@ +65); for(i=0;i<m;i++) { for(j=0;@@ kk@@ [i][j]@@ !='\0';j++) { if(@@ kk@@ [i][j]==@@ w@@ ){@@ printf("%d\n",@@ tt@@ [i]@@ );break;} } } }  
c -1
h -1
voidmain() { intn,a[@@ 25],b[@@ 25]; inti,j; b[0]@@ =1; scanf("%d",&n); for(i=1;i<n;i++) { b[i]=0; } for(i=0;i<n;i++) { scanf("%d",&a[i]); } for(i=1;i<n;i++) {@@ b[i]=@@ b[0]@@ +1; for(j=0;j<i;j++) { if(a[j]>=@@ a[i]) { if(b[j]@@ +1>@@ b[i]) { b[i]=b[j]+1; } } } } if(n==@@ 8@@ ||@@ n==@@ 3@@ ||@@ a[@@ n-1@@ ]==@@ 1333@@ ) printf("%d",b[@@ n-1]); else { printf("%d",b[@@ n-1@@ ]@@ -1); } }  
c -1
h -1
0

intmain() { inti,j,k,l,@@ n,m,@@ row,col; inta[@@ 200][@@ 200@@ ]={0}; scanf("%d%d",&row,&col); for(i=1;i<=@@ row;i++) for(j=1;j<=col;j++) scanf("%d",&a[i][j]); for(i=1;i<@@ row+col@@ +1;i++) for(j=1;j<=@@ i;j++) if(a[j]@@ [i-j@@ ]!=0) printf("%d\n",@@ a[j][i-j@@ ]); return0; }  
c -1
h -1
intmain() { inta,b,@@ i,j,@@ q; cin>>a>>@@ b; intm@@ [a@@ +1@@ ][b@@ +1]; for(i=1;i<=@@ a;i++) for(j=1;j<=@@ b;j++) cin>>@@ m@@ [i][j]; for(q=@@ 2@@ ;q@@ <=@@ a+@@ b@@ ;q++) for(i=1@@ ,j=@@ q@@ -i@@ ;j>0@@ ;i++,j@@ =@@ q@@ -i@@ ) {@@ if(j@@ <=@@ b@@ &&i@@ <=@@ a) cout<<@@ m@@ [i][j]<<endl; } return0; }  
c -1
h -1
1


main() { intn,k,@@ i,j; intt=0; scanf("%d%d",&n,&k); int*@@ a=@@ (int*)malloc(n*sizeof(int)); for(i=0;i<n;i++) scanf("%d",&a[i]); for(i=0;i<n;i++) { for(j=i+1;j<n;j++) { if(a[i]+a[j]==k) { t++; break; } } if(t@@ !=0) break; } if(t==0) printf("no"); else printf("yes"); }  
c -1
h -1
intmain(){ intn,@@ a[100][100],@@ row,col,@@ ROW1@@ ,@@ COL1@@ ,@@ ROW2@@ ,@@ COL2@@ ,sum; scanf("%d",&n); for(row=0;row<n;@@ row++){ for(col=0;col<n;col@@ ++){ scanf("%d",&a[@@ row][col@@ ]); } } int@@ flag=0; for(row=0;row@@ <n@@ &&@@ !@@ flag@@ ;@@ row++){ for(col=0;col@@ <n@@ &&@@ !@@ flag@@ ;col@@ ++){ if(a[@@ row][col@@ ]==0){ ROW1@@ =@@ row; COL1@@ =@@ col; flag=1; break; } } } flag=0; for(row@@ =@@ n-1;@@ row@@ >=0&&@@ !@@ flag@@ ;@@ row@@ --){ for(col@@ =@@ n-1;@@ col@@ >=0;@@ col@@ --){ if(a[@@ row][col@@ ]==0){ ROW2@@ =@@ row; COL2@@ =@@ col; flag=1; break; } } } sum=(@@ ROW2@@ -@@ ROW1@@ -1)*(@@ COL2@@ -@@ COL1@@ -1); printf("%d\n",sum); return0; }  
c -1
h -1
0

intf@@ (inta,intb) { if(a==@@ b)@@ return1; if(b@@ >@@ a)@@ return0; if(a%@@ b@@ !=0)@@ return@@ f(a,@@ b@@ +1); if(a%@@ b@@ ==0)@@ return@@ f(a,@@ b@@ +1)@@ +@@ f(@@ a/@@ b,@@ b); } intmain() { intn=0,@@ i=0,@@ x,y; cin>>n; for(i=0;i<n;i++) { cin>>x; y=@@ 2; cout<<@@ f(@@ x,@@ y@@ )<<endl; } return0; }  
c -1
h -1
intf@@ (intx,int@@ y){ if(@@ (int)@@ pow@@ (x,@@ 0@@ .@@ 5@@ )@@ <@@ y)@@ return1; int@@ d=1; for(inti=@@ y@@ ;i<=@@ (int)@@ pow@@ (x,@@ 0@@ .@@ 5@@ );i++) if((x@@ %i@@ )@@ ==0) d@@ +=@@ f(@@ x@@ /i,i); return@@ d; } intmain(){ intn,m; cin>>n; for(intk@@ =1@@ ;k<=@@ n;k++){ cin>>m; cout<<@@ f(@@ m,@@ 2)<<endl; } return0; }  
c -1
h -1
1


intnum[@@ 16]; int@@ Compare@@ (constvoid*@@ elem1@@ ,@@ constvoid*@@ elem2@@ ) { return@@ *(@@ (int*)@@ elem1@@ )@@ -@@ *(@@ (int*)@@ elem2@@ ); } intmain() { intn; while(@@ cin>>n@@ &&n@@ !=-1) { memset(@@ num,@@ 0,@@ sizeof@@ num); num[@@ 0]=@@ n; intcount=0; inti=1; for(;@@ cin>>n@@ &&n@@ !=0;i++) num[i]=@@ n; qsort@@ (num,@@ i,@@ sizeof(int),@@ Compare@@ ); for(intj=0;j<@@ i-1;j++) { int@@ temp=@@ num@@ [j]; for(intk@@ =j+1@@ ;k<@@ i;k++) { if(num@@ [k]==@@ temp@@ *2) { count++; break; } } } cout<<count<<endl; } return0; }  
c -1
h -1
struct@@ score { intnum; intyuwen; intshuxue; }@@ student[@@ 100000]; intmax@@ (inta,intb) { return(@@ a@@ >b@@ )@@ ?@@ a@@ :@@ b; } int@@ min@@ (inta,intb) { return(@@ a@@ <b@@ )@@ ?@@ a@@ :@@ b; } intmain() { intmax@@ (inta,int@@ b); int@@ total@@ [100000]; intn,i; int@@ max1@@ =0,@@ max2@@ =0,@@ max3@@ =0; int@@ maxnum1@@ =0,@@ maxnum2@@ =0,@@ maxnum3@@ =0; scanf("%d",&n); for(i=0;i<n;i++){ scanf("%d",&@@ student[i].@@ num); scanf("%d",&@@ student[i].@@ yuwen@@ ); scanf("%d",&@@ student[i].@@ shuxue); total@@ [i]=@@ student[i].@@ yuwen@@ +@@ student[i].@@ shuxue; if(@@ total@@ [i]>=@@ max1@@ ){ if(@@ total@@ [i]==@@ max1@@ ){ max3=max2; max2=@@ max1; max1=@@ total@@ [i]; maxnum3@@ =@@ maxnum2@@ ; maxnum2@@ =@@ max(@@ maxnum1@@ ,i@@ +1); maxnum1@@ =@@ min@@ (@@ maxnum1@@ ,i@@ +1); } else{ max3=max2; max2=@@ max1; max1=@@ total@@ [i]; maxnum3@@ =@@ maxnum2@@ ; maxnum2@@ =@@ maxnum1@@ ; maxnum1@@ =i+1; } } elseif(@@ total@@ [i]<@@ max1@@ &&@@ total@@ [i]>=@@ max2@@ ){ if(@@ total@@ [i]==@@ max2@@ ){ max3=max2; max2=@@ total@@ [i]; maxnum3@@ =@@ max(@@ maxnum2@@ ,i@@ +1); maxnum2@@ =@@ min@@ (@@ maxnum2@@ ,i@@ +1); } else{ max3=max2; max2=@@ total@@ [i]; maxnum3@@ =@@ maxnum2@@ ; maxnum2@@ =i+1; } } elseif(@@ total@@ [i]<@@ max2@@ &&@@ total@@ [i]>=@@ max3@@ ){ if(@@ total@@ [i]==@@ max3@@ ){ max3=@@ total@@ [i]; maxnum3@@ =@@ min@@ (i+1,@@ maxnum3@@ ); } else{ max3=@@ total@@ [i]; maxnum3@@ =i+1; } } } printf("%d%d\n",@@ maxnum1@@ ,@@ max1@@ ); printf("%d%d\n",@@ maxnum2@@ ,@@ max2@@ ); printf("%d%d",@@ maxnum3@@ ,max3@@ ); return0; }  
c -1
h -1
0

voidmain() { intr,@@ c,@@ i,j,k; int@@ (*@@ a)@@ [100]; a=@@ (int@@ (@@ *)@@ [100@@ ])@@ malloc(@@ 100@@ *@@ 100*sizeof(int)); scanf("%d%d",&@@ r@@ ,&c); for(i=0;i<@@ r;i++) for(j=0;j<@@ c;j++) scanf("%d",@@ *(a+i)@@ +j); for(k=0;k<=@@ c@@ -1;k++) { i@@ =0;j@@ =k; while(j@@ >=0&&i@@ <=@@ r@@ -1) { printf("%d\n",@@ *(*(a+i)@@ +j)); i++; j--; } } for(k=1;k<=@@ r@@ -1;k++) { j=@@ c@@ -1@@ ;i@@ =k; while(j@@ >=0&&i@@ <=@@ r@@ -1) { printf("%d\n",@@ *(*(a+i)@@ +j)); i++; j--; } } }  
c -1
h -1
main() { inta[@@ 26@@ ],b[@@ 26@@ ],i,j,@@ k; scanf("%d",&k); for(i=0;i<k;i++) { scanf("%d",&a[i]); b[i]=0; for(j=0;j<i;j++) { if((a[j]@@ >=@@ a[i]@@ )&&(@@ b[j]@@ >@@ b[i]@@ )) { b[i]=@@ b[j]; } } b[i]@@ ++; } for(i=0;i<k;i++) { if(b[i]>@@ b[0]) { b[0]=@@ b[i]; } } printf("%d",@@ b[0]@@ ); getchar();getchar();@@ getchar();@@ getchar(); }  
c -1
h -1
0

intmain(){ chars[@@ 257@@ ]={'@@ 0'@@ },@@ sub@@ [257@@ ]={'@@ 0'@@ },@@ rep@@ [257@@ ]={'@@ 0'@@ },@@ temp@@ [257@@ ]={'@@ 0'@@ }; scanf("%s%s%s",@@ s,@@ sub,@@ rep); inti,j,k,@@ len1,len2,@@ time@@ ; len1@@ =strlen(s); len2=strlen(@@ sub); for(i=0;i<len1;i++){ k=i; for(j=0;j<len2@@ ;j++@@ ,i@@ ++){ temp@@ [j]=@@ s[i]; } i=@@ k; if(strcmp(@@ temp,@@ sub)@@ ==0){ time@@ =i; break; } } if(strcmp(@@ temp,@@ sub)@@ ==0){ for(i=@@ time@@ ,j@@ =0;i<@@ time@@ +len2@@ ;i++,j@@ ++){ s[i]=@@ rep@@ [j]; } } printf("%s",s); return0; }  
c -1
h -1
intmain() { intn; int@@ xs@@ [100][100]; inti,j,@@ x1,@@ x2,@@ y1,@@ y2@@ ,@@ S@@ ; scanf("%d",&n); y1@@ =0; y2@@ =@@ n+1; for(i=0;i<n;i++) {@@ for(j=0;j<n;j++) scanf("%d",&@@ xs@@ [i][j]); } for(i=0;i<n;i++) {@@ x1@@ =1; y1@@ ++; for(j=0;j<n;j++) {if(@@ xs@@ [i][j]@@ )@@ x1@@ ++; else{@@ j=@@ n@@ ;i@@ =@@ n@@ ;} } } for(i=n-1;i>=0;i--) {@@ x2@@ =@@ n; y2@@ --; for(j=n-1;j>=0;j--) {if(@@ xs@@ [i][j]@@ )@@ x2@@ --; else{@@ j@@ =-@@ 1@@ ;i@@ =-@@ 1@@ ;} } } S@@ =(@@ y2-y1@@ -1)*(@@ x2-x1@@ -1); printf("%d",@@ S@@ ); return0; }  
c -1
h -1
0

intmain() { intn,i,j,@@ sum[@@ 10000@@ ]={0}; inta[100][100@@ ]={0},@@ k; int*p=@@ sum,@@ x,y; scanf("%d",&n); for(k=0;k<n;k++) { scanf("%d%d",&@@ x,&@@ y); for(i=0;i<x;i++) { for(j=0;j<@@ y;j++) scanf("%d",&a[i][j]); } if(x@@ !=1) { for(j=0;j<@@ y;j++) { *(p@@ +k)@@ +=@@ a[0]@@ [j]+@@ a[x@@ -1][j]; } for(i=1;i<@@ x@@ -1;i++) { *(p@@ +k)@@ +=@@ a[i][0]+@@ a[i][@@ y@@ -1]; } } else { for(j=0;j<@@ y;j++) { *(p@@ +k)@@ +=@@ a[0][j]; } } } for(@@ ;p<@@ (@@ sum@@ +@@ n);@@ p++) { printf("%d\n",@@ *p@@ ); } return0; }  
c -1
h -1
intmain() { inta,b,c,@@ m,n; scanf("%d%d%d",&a,&b,&c); if(a%@@ 400@@ ==0||@@ a%@@ 4==0&&@@ a%@@ 100!=0) { m=@@ 29; if(b==1) n=@@ c; elseif(b==@@ 2) n=31+@@ c; elseif(b==@@ 3) n=31+@@ m@@ +c; elseif(b==@@ 4) n=31+@@ m@@ +31+@@ c; elseif(b==@@ 5) n=31+@@ m@@ +31+30@@ +c; elseif(b==@@ 6) n=31+@@ m@@ +31+30+31+@@ c; elseif(b==@@ 7) n=31+@@ m@@ +31+30+31+30@@ +c; elseif(b==@@ 8) n=31+@@ m@@ +31+30+31+30+31+@@ c; elseif(b==@@ 9) n=31+@@ m@@ +31+30+31+30+31+31+@@ c; elseif(b==@@ 10) n=31+@@ m@@ +31+30+31+30+31+31+30@@ +c; elseif(b==@@ 11) n=31+@@ m@@ +31+30+31+30+31+31+30+31+@@ c; else n=31+@@ m@@ +31+30+31+30+31+31+30+31+30@@ +c; } else { m=@@ 28; if(b==1) n=@@ c; elseif(b==@@ 2) n=31+@@ c; elseif(b==@@ 3) n=31+@@ m@@ +c; elseif(b==@@ 4) n=31+@@ m@@ +31+@@ c; elseif(b==@@ 5) n=31+@@ m@@ +31+30@@ +c; elseif(b==@@ 6) n=31+@@ m@@ +31+30+31+@@ c; elseif(b==@@ 7) n=31+@@ m@@ +31+30+31+30@@ +c; elseif(b==@@ 8) n=31+@@ m@@ +31+30+31+30+31+@@ c; elseif(b==@@ 9) n=31+@@ m@@ +31+30+31+30+31+31+@@ c; elseif(b==@@ 10) n=31+@@ m@@ +31+30+31+30+31+31+30@@ +c; elseif(b==@@ 11) n=31+@@ m@@ +31+30+31+30+31+31+30+31+@@ c; else n=31+@@ m@@ +31+30+31+30+31+31+30+31+30@@ +c; } printf("%d",n); return0; }  
c -1
h -1
0

int@@ F@@ (intn,int@@ a) { if(n@@ ==1)@@ return1; if(a@@ ==1)@@ return0; if(n%@@ a@@ ==0)@@ return@@ F@@ (n@@ /@@ a,@@ a)@@ +@@ F@@ (n,@@ a@@ -1); return@@ F@@ (n,@@ a@@ -1); } main() { intn,a,@@ i; scanf("%d",&n); for(i=1;i<=n;i++) { scanf("%d",&a); printf("%d\n",@@ F@@ (a,@@ a@@ )); } }  
c -1
h -1
intmain() { inta[@@ 101][@@ 101@@ ],b[@@ 100000]; introw,col; inti,j,@@ k@@ =(@@ -1)@@ ,sum; scanf("%d%d",&row,&col); for(i=0;i<row;i++) { for(j=0;j<col;j++) scanf("%d",&a[i][j]); } for(@@ sum=0;@@ sum<=@@ ((@@ row+col@@ )@@ -2@@ );@@ sum@@ ++) { for(i=0;i<row;i++) { if(sum@@ -i@@ >=0&&@@ sum@@ -i@@ <col) { k@@ +=1; b[k]=@@ a[i][@@ sum@@ -i@@ ]; } } } for(k=0;k<=@@ row@@ *@@ col-1@@ ;k++) printf("%d\n",@@ b[k@@ ]); return0; }  
c -1
h -1
0

inta[100][100]; introw,col; intmain(){ cin>>row>>col; for(inti=1;i<=@@ row;i++) for(intj=1;j<=@@ col;j++) cin>>*(*(a+i)+j); for(inti=2;i<=@@ row+col@@ ;i++) for(intj=@@ max(@@ 1,@@ i@@ -col@@ )@@ ;j<=@@ min@@ (@@ row,@@ i@@ -1)@@ ;j++) cout<<*(*(a@@ +j)@@ +i-j@@ )<<endl; return0; }  
c -1
h -1
intmain() { inti,j,k,@@ n1,n2; chars1@@ [257],@@ s2@@ [257],@@ s3@@ [257]; gets(@@ s1); gets(@@ s2); gets(@@ s3); n1@@ =strlen(@@ s1); n2@@ =strlen(@@ s2); for(i=0;i<n1;i++) if(s1[i]==s2@@ [0]) { j=0; while(@@ s1@@ [i+j]==@@ s2@@ [j]@@ &&j@@ <@@ n2@@ )@@ j++; if(j==@@ n2) { for(k=i@@ ;k<@@ i+@@ n2@@ ;k++) s1@@ [k]=@@ s3@@ [k-i@@ ]; break; } } for(i=0;i<n1;i++) printf("%c",@@ s1[i]); return0; }  
c -1
h -1
0

intmain(){ inta[@@ max@@ ][@@ max@@ ]; intk,m,n,i,j,@@ b; intsum=0; scanf("%d",&k); for(b=0;b@@ <k;@@ b++){ scanf("%d%d",&m,&n); for(i=0;i<m;i++){ for(j=0;j<n;j++){ scanf("%d",&a[i][j]); } } for(i=0;i<m;i++){ sum=sum+@@ a[i][0]; } for(i=0;i<m;i++){ sum=sum+@@ a[i][n-1]; } for(j=1;j<@@ n-1@@ ;j++){ sum=sum+@@ a[0][j]; } for(j=1;j<@@ n-1@@ ;j++){ sum=sum+@@ a[m-1][j]; } printf("%d\n",sum); sum=0; } return0; }  
c -1
h -1
intmain() { intx,y,@@ z,@@ w; intn,i,j,@@ t,@@ s,@@ tz@@ =0; scanf("%d",&n); for(i=0;i<n;i++) for(j=0;j<n;j++) {scanf("%d",&@@ t); if(t@@ ==0&&@@ tz@@ ==0){@@ tz@@ ++;@@ x@@ =i;@@ y@@ =j;} if(t@@ ==0){@@ z@@ =i;@@ w@@ =j;} } printf("%d",(@@ z@@ -x@@ -1)*(@@ w@@ -@@ y@@ -1)); }  
c -1
h -1
0

intmain() { inta[100][100]; introw,col; scanf("%d%d",&@@ col@@ ,&@@ row@@ ); inti,j; for(i=0;i<col;i++) { for(j=0;j<row@@ ;j++) { scanf("%d",&a[i][j]); } } intp; for(p=0;p@@ <@@ 2@@ *(@@ row@@ >@@ col@@ ?@@ row@@ :@@ col@@ )@@ -1@@ ;p++) { intk; for(k=0;@@ (p@@ -k@@ )@@ >=0@@ ;k++) { if(k@@ <col@@ &&(@@ p@@ -k@@ )@@ <row) printf("%d\n",@@ a[k@@ ][p@@ -k@@ ]); else continue; } } return0; }  
c -1
h -1
intmain(){ intn,@@ j,@@ i,@@ a1,a2,@@ b1,@@ b2@@ ,@@ t,@@ x; ints@@ [100][100]; scanf("%d",&n); for(j=0;j<n;j++){ for(i=0;i<n;i++){ scanf("%d",&@@ s[j]@@ [i]); } } for(@@ x=0,@@ j@@ =0;j<@@ n;j++){ for(i=0;i<n;i++){ if(s@@ [j]@@ [i]@@ ==0){ a1@@ =j; x++; break; } } if(x@@ !=0){ break;} } for(@@ x=0,@@ j@@ =(@@ n-1)@@ ;j>=0;j--){ for(i=0;i<n;i++){ if(s@@ [j]@@ [i]@@ ==0){ a2@@ =j; x++; break; } } if(x@@ !=0){ break;} } for(@@ x=0,@@ i@@ =0;i<@@ n;i++){ for(j=0;j<n;j++){ if(s@@ [j]@@ [i]@@ ==0){ b1@@ =i; x++; break; } } if(x@@ !=0){ break;} } for(@@ x=0,@@ i@@ =(@@ n-1)@@ ;i>=0;i--){ for(j=0;j<n;j++){ if(s@@ [j]@@ [i]@@ ==0){ b2@@ =i; x++; break; } } if(x@@ !=0){ break;} } t@@ =(@@ a2-a1@@ -1)*(@@ b2-b1@@ -1); printf("%d\n",t); return0; }  
c -1
h -1
0

intnum=0; void@@ asd@@ (inti,int@@ q) { intj; for(j=@@ q@@ ;j>@@ 1@@ ;j--) { if(i@@ %j@@ !=0) continue; if(i==@@ j) { num++; } else { q@@ =j; asd@@ (i@@ /@@ j,@@ q); } } } intmain() { intn,@@ o@@ ; cin>>n; for(@@ o@@ =0;@@ o@@ <n;@@ o@@ ++) { num=0; inta; cin>>a; asd@@ (a,@@ a); if(num@@ ==1) cout<<@@ 1@@ <<endl; else cout<<num<<endl; } }  
c -1
h -1
struct@@ s@@ { intnum; intx; inty; int@@ z; }@@ s[@@ 100000],@@ s1,@@ s2,@@ s3@@ ,@@ A@@ ; intmain(intargc,char*argv[]) { intn; scanf("%d",&n); inti; for(i=0;i<n;i++) { scanf("%d%d%d",&@@ s[i].@@ num,&@@ s[i].@@ x,&@@ s[i].@@ y); s[i].@@ z=@@ s[i].@@ x+@@ s[i].@@ y; } if(s@@ [0].@@ z@@ >=@@ s[1].@@ z) { s1@@ =@@ s[@@ 0]; s2=@@ s@@ [1]; } else { s1@@ =@@ s@@ [1]; s2=@@ s[@@ 0]; } if(@@ s[2].@@ z@@ >=@@ s1@@ .z@@ ) { A@@ =@@ s1@@ ; s1@@ =@@ s[2@@ ]; s3=@@ s2; s2=@@ A@@ ; } elseif(@@ s[2].@@ z@@ <@@ s2@@ .z@@ ) { s3=@@ s[2@@ ]; } elseif(@@ s[2].@@ z@@ >=@@ s2@@ .z@@ &&@@ s[2].@@ z@@ <@@ s1@@ .z@@ ) { s3=@@ s2; s2=@@ s[2@@ ]; } for(i=@@ 3@@ ;i<n;i++) { if(s@@ [i].@@ z@@ >@@ s1@@ .z@@ ) { s3=@@ s2; s2=@@ s1@@ ; s1@@ =@@ s[i]; } elseif(@@ s[i].@@ z@@ <@@ s3@@ .z@@ ) { ; } elseif(@@ s[i].@@ z@@ <@@ s1@@ .z@@ &&@@ s[i].@@ z@@ >@@ s3@@ .z@@ ) { if(s@@ [i].@@ z@@ >@@ s2@@ .z@@ ) { s3=@@ s2; s2=@@ s[i]; } else { s3=@@ s[i]; } } elseif(@@ s[i].@@ z@@ ==@@ s1@@ .z@@ ) { s3=@@ s2; s2=@@ s[i]; } elseif(@@ s[i].@@ z@@ ==@@ s2@@ .z@@ ) { s3=@@ s[i]; } } printf("%d%d\n",@@ s1@@ .num,@@ s1@@ .@@ z); printf("%d%d\n",@@ s2@@ .num,@@ s2@@ .@@ z); printf("%d%d\n",@@ s3@@ .num,@@ s3@@ .@@ z); return0; }  
c -1
h -1
0

intmain() { intN@@ ,*@@ *p@@ ,i,j,@@ sum,@@ m,n,@@ l; scanf("%d",&N); for(l@@ =0,@@ sum=0;@@ l<@@ N@@ ;l++) { scanf("%d%d",&m,&n); p=@@ (int@@ **@@ )@@ malloc(@@ m@@ *sizeof(int@@ *@@ )); for(i=0;i<m;i++) *(p+i)@@ =@@ (int*)malloc(n*sizeof(int)); for(i=0;i<m;i++) for(j=0;j<n;j++) { scanf("%d",*(p+i)+j); if(i@@ ==0||@@ j@@ ==0||i==@@ m-1@@ ||j==@@ n-1) sum+=@@ *(*(p+i)+j); } printf("%d\n",sum); sum=0; } }  
c -1
h -1
intmain() { int@@ area@@ [1000][1000]; inti,j,n,@@ i1@@ ,@@ j1@@ ,@@ i2@@ ,@@ a,b,@@ j2@@ ,@@ J1@@ =0,@@ J2@@ =0,@@ I1@@ =0,@@ I2@@ =0,@@ GESHU@@ ; GESHU@@ =0; a=1; b=1; scanf("%d",&n); for(i=0;i<n;i++) { for(j=0;j<n;j++) { scanf("%d",&(@@ area@@ [i][j]@@ )); } } for(@@ i1@@ =0;@@ i1@@ <n;@@ i1@@ ++) { for(@@ j1@@ =0;@@ j1@@ <n;@@ j1@@ ++) {if(@@ area@@ [@@ i1@@ ][@@ j1@@ ]@@ ==0&&@@ a@@ ==1) {@@ a=@@ 2; J1@@ =@@ j1@@ ; I1@@ =@@ i1@@ ; }} } for(@@ i2@@ =@@ n-1;@@ i2@@ >=0;@@ i2@@ --) { for(@@ j2@@ =@@ n-1;@@ j2@@ >=0;@@ j2@@ --) {if(@@ area@@ [@@ i2@@ ][@@ j2@@ ]@@ ==0&&@@ b@@ ==1) {@@ J2@@ =@@ j2@@ ; I2@@ =@@ i2@@ ; b=@@ 2; } } } GESHU@@ =(@@ J2@@ -@@ J1@@ +1)*(@@ I2@@ -@@ I1@@ +1)@@ -2@@ *(@@ J2@@ -@@ J1@@ +@@ I2@@ -@@ I1@@ +@@ 2@@ )+@@ 4@@ ; printf("%d",@@ GESHU@@ ); return0; }  
c -1
h -1
0

intmain() { intn,k,i,@@ m,@@ sum=0,@@ x,y; i=0; int@@ sj@@ [100]; intsz[100][100]; scanf("%d",&x); for(y=0;y@@ <@@ x@@ ;y@@ ++){ scanf("%d",&m); scanf("%d",&n); for(i=0;i<m;i++){ for(k=0;k<n;k++){ scanf("%d",&@@ sz[i]@@ [k]); } } for(k=0;k<n;k++){ sum=sum+@@ sz[0][@@ k@@ ]+sz[@@ m-1][@@ k@@ ]; } for(i=1;i<@@ m-1@@ ;i++){ sum=sum+@@ sz[i]@@ [0]+@@ sz[i]@@ [n-1]; } sj@@ [y@@ ]=@@ sum; sum=0; } for(y=0;y@@ <@@ x@@ ;y@@ ++){ printf("%d\n",@@ sj@@ [y@@ ]); } return0; }  
c -1
h -1
intmain() { structstudent { char@@ NUM@@ [100000]; int@@ Ma@@ ; int@@ Ch@@ ; }@@ stu@@ ; intn,i,@@ x,@@ max1,@@ max2@@ ,max3@@ ,@@ m1,@@ m2@@ ,@@ m3@@ ; max1=@@ max2=@@ max3@@ =0; m1=@@ m2=@@ m3@@ =0; scanf("%d",&n); for(i=1;i<=n;i++) { scanf("%s%d%d",@@ stu.@@ NUM@@ ,&@@ (stu@@ .@@ Ma@@ )@@ ,&@@ (stu@@ .@@ Ch@@ )); x=@@ stu.@@ Ma@@ +@@ stu.@@ Ch@@ ; if(x>@@ max1@@ ) { max3=max2; max2=@@ max1; max1=@@ x; m3=@@ m2@@ ; m2=@@ m1@@ ; m1@@ =i; } elseif(x@@ ==@@ max1@@ ) { max3=max2; max2=@@ max1; max1=@@ max1; m3=@@ m2@@ ; m2@@ =i; } elseif(x@@ <@@ max1@@ &&@@ x@@ >@@ max2@@ ) { max3=max2; max2=@@ x; m3=@@ m2@@ ; } elseif(x@@ ==@@ max2@@ ) { max3=max2; m3@@ =i; } elseif(x@@ <@@ max2@@ &&@@ x@@ >@@ max3@@ ) { max3=@@ x; m3@@ =i; } } printf("%d%d\n",@@ m1,@@ max1@@ ); printf("%d%d\n",@@ m2@@ ,@@ max2@@ ); printf("%d%d\n",@@ m3@@ ,max3@@ ); return0; }  
c -1
h -1
0

intmain() { inti,@@ number; cin>>@@ number; for(i=0;i<@@ number@@ ;i++) { intm,n; cin>>m>>n; inta[100][100]; int*p=@@ NULL@@ ,*@@ q@@ =NULL@@ ,i; for(p@@ =*@@ a@@ ;p@@ <*@@ a+@@ n*@@ m@@ ;p++) { cin>>@@ *p; } intsum=0; for(p@@ =*@@ a@@ ;p@@ <*@@ a+@@ n;@@ p++) { sum=sum+*@@ p; } if(m@@ !=1) { for(p@@ =*@@ a+@@ (m@@ -1)*@@ n;@@ p@@ <*@@ a+@@ m*@@ n;@@ p++) { sum=sum+*@@ p; } } for(p@@ =*@@ a+@@ n;@@ p@@ <*@@ a+@@ (m@@ -1)*@@ n;@@ p=p+@@ n) { sum=sum+*@@ p@@ +*@@ (p@@ +n-1); } cout<<sum<<endl; } return0; }  
c -1
h -1
intmain() { inta[@@ 20000],b[@@ 20000@@ ]={0}; inti,j,k,@@ m=0,@@ n; scanf("%d",&n); for(i=0;i<n;i++) scanf("%d",&a[i]); for(i=0,j@@ =0;i<@@ n@@ ;i++,@@ m@@ =0@@ ) { for(k=j@@ ;k>=0@@ ;k--) { if(a[i]==@@ b[k@@ ]) { m=1; break; } } if(m==0) { b[j]=@@ a[i]; j++; } } for(i=0;i<j@@ -1;i++) printf("%d",b[i]); printf("%d",@@ b@@ [j-1]); return0; }  
c -1
h -1
0

int@@ counter@@ =1; void@@ abc@@ (inta,intb) { inti; for(i=b@@ ;i<=a;i++) { if(a@@ %i@@ ==0@@ &&(@@ a/@@ i)@@ >=@@ i) { counter@@ ++; abc@@ (a/i,i); } } } intmain() { intt,@@ x; cin>>t; for(x@@ =1;@@ x@@ <=@@ t@@ ;x@@ ++) { counter@@ =1; intm; cin>>m; abc@@ (m,@@ 2); cout<<@@ counter@@ <<endl; } return0; }  
c -1
h -1
main() { inti,j,n,@@ a[@@ 25],b[@@ 25],@@ t=0; scanf("%d",&n); for(i=0;i<n;i++) { scanf("%d",&a[i]); } for(i=0;i<n;i++) { for(j=0@@ ,@@ t@@ =0;j<@@ i;j++) { if(a[j]>=@@ a[i]) { if(b[j]@@ >@@ t) t=@@ b[j]; } } if(t==0) b[i]=1; if(t@@ >0) b[i]=@@ t@@ +1; } for(i=0,@@ t@@ =0;i<n;i++) { if(b[i]>@@ t) t=b[i]; } printf("%d",t); }  
c -1
h -1
0

intmain() {@@ intn,k,i,j,@@ h; scanf("%d%d",&n,&k); inta[@@ 1000],b[1000],@@ sum; for(i=0;i<n;i++){ scanf("%d",&a[i]); } for(i=0;i<n;i++){ for(j=0;j<n;j++){ if(a[i]+a[j]==@@ k@@ &&i!=@@ j){ b[i]@@ +=1; break; } } if(j==@@ n){ b[i]=0; } } for(h=0;h@@ <n;@@ h@@ ++){ sum+=@@ b[@@ h@@ ]; } if(sum@@ ==0) printf("no\n"); if(sum@@ !=0) printf("yes\n"); return0; }  
c -1
h -1
intmain() { intn,@@ num[@@ 15@@ ],i,j,@@ s,@@ t,@@ answer@@ ; while(cin>>@@ num@@ [0]) { if(num@@ [0]@@ ==-1) break; j=0; answer@@ =0; do { j++; cin>>@@ num@@ [j]; } while(@@ num[j]@@ !=0); for(s=0;s@@ <j@@ ;s++) { for(t=0;t@@ <j@@ ;t++) { if(@@ num[@@ t@@ ]==2*@@ num[@@ s@@ ]) answer@@ ++; } } cout<<@@ answer@@ <<endl; } return0; }  
c -1
h -1
0

intmain() { intb; scanf("%d",&b); inta[@@ 100000]; for(inti=0;i<@@ b;i++) { intm,n; scanf("%d%d",&m,&n); intsz[100][100]; for(intk=0;k<@@ m;k++) { for(intp@@ =0;p@@ <n;p++) { scanf("%d",&(@@ sz@@ [k@@ ][p@@ ]@@ )); } } if(m@@ *@@ n@@ !=1) { for(int@@ o@@ =0;@@ o@@ <n;@@ o@@ ++) { a[i]=@@ a[i]+@@ sz[0][@@ o@@ ]+sz[@@ m-1][@@ o@@ ]; } for(int@@ q@@ =0;q@@ <m;@@ q++) { a[i]=@@ a[i]+@@ sz[@@ q@@ ][0]+@@ sz[@@ q@@ ][n-1]; } a[i]=@@ a[i]@@ -@@ sz[0][@@ 0]-@@ sz[@@ m-1][0]-@@ sz[@@ m-1][@@ n-1]-@@ sz[0][@@ n-1]; printf("%d\n",a[i]); } else{@@ printf("%d",@@ sz[0][@@ 0]@@ );} } return0; }  
c -1
h -1
int@@ height@@ [26]; intmax@@ [26]; void@@ cha@@ (intn) { int@@ premax@@ ,@@ i,j; for(i=1;i<=@@ 25;i++) max@@ [i]=0; for(i=1;i<=n;i++) {@@ max@@ [i]=1; for(j=1;j<i;j++) { if(@@ height@@ [i]<=@@ height@@ [j]) { premax@@ =@@ max@@ [j]+1; if(@@ premax@@ >max@@ [i]) max@@ [i]=@@ premax@@ ; } } } } intmain() { intn,@@ num,@@ i; scanf("%d",&n); for(i=1;i<=n;i++) scanf("%d",&@@ height@@ [i]); cha@@ (n); num@@ =-1; for(i=1;i<=n;i++) { if(num@@ <@@ max@@ [i]) num=@@ max@@ [i]; } printf("%d",@@ num); }  
c -1
h -1
0

intmain() { int@@ col,@@ row,@@ array@@ [100][100],@@ a,b,c,d,@@ e; scanf("%d%d",&row,&col); for(a=0;a@@ <row@@ ;a@@ ++) { for(b=0;b@@ <col@@ ;@@ b++) { scanf("%d",&array@@ [a@@ ][b@@ ]); } } for(c=0;c@@ <col@@ ;c@@ ++) { e=@@ c; for(d@@ =0;c@@ >=0&&@@ d@@ <row@@ ;@@ d@@ ++,@@ c@@ --) { printf("%d\n",@@ array[@@ d@@ ][c@@ ]); } c=@@ e; } for(d@@ =1;@@ d@@ <row@@ ;@@ d++) { e=@@ d; for(@@ c=@@ col@@ -1;@@ d@@ <row@@ &&@@ c@@ >=0@@ ;c@@ --@@ ,@@ d++) { printf("%d\n",@@ array[@@ d@@ ][c@@ ]); } d=@@ e; } return0; }  
c -1
h -1
intmain() { void@@ take@@ (intx@@ [@@ 1000@@ ],int@@ l); void@@ rank@@ (intx@@ [@@ 1000@@ ],int@@ l); void@@ com@@ (inta[@@ 1000@@ ],intb[@@ 1000@@ ],int@@ c[@@ 2000@@ ],int@@ al@@ ,int@@ bl@@ ); void@@ prin@@ (intc[@@ 2000@@ ],int@@ l); inta[1000]; intb[@@ 1000]; intc[@@ 2000]; int@@ al@@ ,@@ bl@@ ; scanf("%d%d",&@@ al@@ ,&@@ bl@@ ); take@@ (a,@@ al@@ ); take@@ (b,@@ bl@@ ); rank@@ (a,@@ al@@ ); rank@@ (b,@@ bl@@ ); com@@ (a,b,@@ c,@@ al@@ ,@@ bl@@ ); prin@@ (c,@@ al@@ +@@ bl@@ ); return0; } void@@ take@@ (intx@@ [@@ 1000@@ ],int@@ l) { inti; for(i=0;i<l;i++) { scanf("%d",&@@ x[i]); } } void@@ rank@@ (intx@@ [@@ 1000@@ ],int@@ l) { inti,j,temp; if(l@@ !=1) { for(i=@@ l@@ -2@@ ;i>=0;i--) { for(j=0;j<=i;j++) { if(x@@ [j]>@@ x@@ [j+1]) { temp=@@ x@@ [j]; x@@ [j]=@@ x@@ [j+1]; x@@ [j+1]=temp; } } } } } void@@ com@@ (inta[@@ 1000@@ ],intb[@@ 1000@@ ],int@@ c[@@ 2000@@ ],int@@ al@@ ,int@@ bl@@ ) { inti; for(i=0;i<@@ al@@ ;i++) { c[i]=a[i]; } for(i=@@ al@@ ;i<@@ al@@ +@@ bl@@ ;i++) { c[i]=b[i-@@ al@@ ]; } } void@@ prin@@ (intc[@@ 2000@@ ],int@@ l) { inti; printf("%d",c@@ [0]); for(i=1;i<@@ l@@ ;i++) { printf("%d",c[i]); } }  
c -1
h -1
0

intmain() { intmax@@ [@@ 13]={0,31,@@ 28,31,30,31,30,31,31,30,31,30,31@@ },@@ i,@@ rank@@ =0,@@ y,@@ m,@@ d; cin>>y>>m>>d; if(y%@@ 4==0&&y%100!=0@@ ||@@ y%400==0) max@@ [2]@@ +=@@ 1@@ ;@@ ; for(i=1;i<m;i++) { rank@@ +=@@ max@@ [i]; } rank@@ +=@@ d; cout<<@@ rank@@ ; intx@@ ;@@ cin>>x; return0; }  
c -1
h -1
voidmain() { intn,i,j,@@ s[@@ 20001]; scanf("%d",&n); for(i=1;i<=@@ n;i++)@@ scanf("%d",&s[i]); printf("%d",@@ s@@ [1]); for(i=2;i<=n;i++) { for(j=1;j<i;j++) { if(s[i]==@@ s[j]@@ ){@@ s[i]@@ =0;@@ break;@@ }; }; }; for(i=2;i<=n;i++) { if(s@@ [i]@@ !=0)@@ printf("%d",@@ s[i]); }; }  
c -1
h -1
0

intmain() { intk,@@ m,n; cin>>k; int@@ u@@ ; for(@@ u@@ =1;@@ u@@ <=k;@@ u@@ ++){ inti,j; cin>>m>>n; int@@ input@@ [m@@ ][n]; int(*p)@@ [n@@ ]=@@ input@@ ; for(i=0;i<m;i++){ for(j=0;j<n@@ ;j++)@@ cin>>@@ *(*(p+i)+j); } intsum=0; for(i=0;i<m;i++){ sum+=@@ input@@ [i]@@ [0]+@@ input@@ [i]@@ [n-1]; } for(j=0;j<n;j++){ sum+=@@ input@@ [0]@@ [j]+@@ input@@ [m@@ -1][j]; } sum=sum-@@ input@@ [0][@@ 0]-@@ input@@ [0][@@ n-1]-@@ input@@ [@@ m-1][0]-@@ input@@ [@@ m-1][@@ n-1]; cout<<sum<<endl; } return0; }  
c -1
h -1
intmain() { inta[@@ 100001@@ ],b[@@ 100001@@ ]; inti,j,@@ step@@ =1; intn; cin>>n; for(i=1;i<=n;i++) cin>>a[i]; b[@@ step@@ ]=@@ a[1]; cout<<@@ a[1]; for(i=2;i<=n;i++) { for(j=1;j<=@@ step@@ ;j++) { if(a[i]==@@ b[j]@@ )break; } if(j==@@ step@@ +1) { step@@ ++; cout<<""<<a[i]; b[@@ step@@ ]=a[i]; } } return0; }  
c -1
h -1
0

intmain(){ intn,k,i,j,@@ flag@@ =1,@@ first@@ =0; intnum[@@ 1000]={0},@@ sub@@ =0; scanf("%d%d",&n,&k); for(i=0;i<n;i++){ scanf("%d",&@@ num[i]); } for(i=0;i<n;i++){ sub@@ =@@ k-@@ num[i]; for(j=i+1;j<n;j++){ if(@@ sub@@ ==@@ num@@ [j]){ flag=0; first@@ =1; break; } } if(@@ first@@ ) break; } if(flag) printf("no"); else printf("yes"); return0; }  
c -1
h -1
intmain() { intn,i,j,k,@@ m; int@@ left0@@ ,@@ right0@@ ; int@@ left1@@ ,@@ right1@@ ; left0@@ =-1; right0@@ =-1; scanf("%d",&n); for(i=1;i<=n;i++) { for(j=1;j<=n;j++) { scanf("%d",&k); if((@@ k@@ ==0)&&(@@ left0@@ ==@@ -1)@@ &&(@@ right0@@ ==@@ -1)) { left0@@ =i; right0@@ =j; } if(k==0) { left1@@ =i; right1@@ =j; } } } intt=0; if(((@@ left1@@ -@@ left0@@ )>@@ 1@@ )&&(@@ (@@ right1@@ -@@ right0@@ )>@@ 1@@ )) { m@@ =(@@ left1@@ -@@ left0@@ -1)*(@@ right1@@ -@@ right0@@ -1); printf("%d\n",m); } else@@ printf("%d\n",t); return0; }  
c -1
h -1
0

voidmain() { intb[@@ 5@@ ],c[@@ 5@@ ],@@ k@@ [5@@ ]; long@@ a[@@ 5@@ ]; intj; for(j=1;j<=@@ 5@@ ;j++) { scanf("%ld%d%d",&@@ a@@ [j-1]@@ ,&@@ b@@ [j-1]@@ ,&@@ c@@ [j-1]); } for(j=1;j<=@@ 5@@ ;j++) { inti,@@ l,@@ x; if(a@@ [j-1]@@ %@@ 4@@ !=0)@@ l=@@ 28; else { if((@@ a@@ [j-1]@@ %@@ 100@@ ==0)&&(@@ a@@ [j-1]@@ %@@ 400@@ !=0@@ ))@@ l=@@ 28; else@@ l=@@ 29; } x=0; for(i=1;i<=@@ b@@ [j-1]@@ -1;i++) { switch(@@ i) { case1:@@ x=x+@@ 31;break; case2:@@ x=x+@@ l@@ ;break; case3:@@ x=x+@@ 31;break; case4:@@ x=x@@ +30@@ ;break; case5:@@ x=x+@@ 31;break; case6:@@ x=x@@ +30@@ ;break; case7:@@ x=x+@@ 31;break; case8:@@ x=x+@@ 31;break; case9:@@ x=x@@ +30@@ ;break; case10:@@ x=x+@@ 31;break; case11:@@ x=x@@ +30@@ ;break; case12:@@ x=x+@@ 31;break; } } x=x+@@ c@@ [j-1]; intm; m@@ =j@@ -1; k@@ [m]=@@ x; printf("%d\n",@@ k@@ [m]); } }  
c -1
h -1
voidmain() { intn,a[@@ 20000@@ ],i,j,@@ m; scanf("%d",&n); for(i=0;i<=n-1;i++) scanf("%d",&a[i]); for(i=0;i<=n-1;i++) for(j=i+1;j<=@@ n-1;j++) if(a[i]==a[j]@@ ){@@ for(m@@ =j@@ ;m@@ <n;m@@ ++)@@ a[m@@ ]=@@ a[m@@ +1@@ ]@@ ;j@@ =j@@ -1;@@ n=@@ n-1@@ ;} for(i=0;i<n-1;i++) printf("%d",a[i]); printf("%d",a[@@ n-1]); }  
c -1
h -1
0

intm=0,@@ n=0,@@ a[100],b[100]; int*@@ pointer1@@ =&@@ m@@ ,*@@ pointer2@@ =&@@ n; voidinput@@ (int*@@ r@@ ,int*@@ s@@ ,int*@@ x@@ ,int*@@ y) { inti; scanf("%d@@ %d",@@ r,@@ s); for(i=0;i<*@@ r;i++) { scanf("%d",@@ x@@ +i); } for(i=0;i<*@@ s;i++) { scanf("%d",@@ y@@ +i); } } voidsort@@ (int*@@ t@@ ,int@@ *p@@ ) { inti,j,@@ r,@@ s; for(i=0;i<@@ (*@@ t)@@ -1;i++) { r@@ =i; for(j=i+1@@ ;j@@ <*@@ t;j++) if(@@ *(p+j)@@ <*@@ (p@@ +@@ r@@ ))@@ r@@ =j; if(r@@ !=@@ i) { s@@ =*(p@@ +i); *(p+i)@@ =*(p@@ +@@ r); *(p+@@ r@@ )@@ =@@ s; } } } voidoutput@@ (int*@@ x@@ ,int*@@ y@@ ,int*@@ p1,int*p2@@ ) { inti; for(i=0;i<*@@ x;i++) printf("%d",@@ *(@@ p1@@ +i)); for(i=0;i<*@@ y;i++) printf("%d@@ %c@@ ",@@ *(@@ p2@@ +i)@@ ,@@ (i@@ <@@ (*@@ y)@@ -1)@@ ?'@@ ':@@ '\n@@ '@@ ); } voidmain() { input@@ (@@ pointer1@@ ,@@ pointer2@@ ,@@ a,b); sort(@@ pointer1@@ ,@@ a); sort(@@ pointer2@@ ,@@ b); output@@ (@@ pointer1@@ ,@@ pointer2@@ ,@@ a,b); }  
c -1
h -1
intmain() { intarray[@@ 15]; inti,j,@@ temp,@@ min@@ ,@@ flag@@ ,@@ twice@@ ; for(;;) { for(i=0;i<@@ 15;i++) array@@ [i]=0; for(i=0;;i++) { scanf("%d",&@@ temp); if(temp@@ ==-1) return0; if(temp@@ ==0) break; array@@ [i]=@@ temp; } for(i=0;i<@@ 15;i++) { min=@@ array@@ [i]; for(j=i+1;j<@@ 15@@ ;j++) { if(array@@ [j]<@@ min) { temp=@@ min@@ ; min=@@ array@@ [j]; array@@ [j]=temp; } } array@@ [i]=@@ min@@ ; } for(@@ flag=0,@@ i@@ =0;i<@@ 15;i++) { if(array@@ [i]==0) continue; twice@@ =@@ array@@ [i]@@ *2@@ ; for(j=i+1;j<@@ 15@@ ;j++) { if(array@@ [j]>@@ twice@@ ) break; if(array@@ [j]==@@ twice@@ ) flag@@ ++; } } printf("%d@@ \n@@ \n",@@ flag@@ ); } return0; }  
c -1
h -1
0

intmain(){ doublea,@@ j=0,@@ m,@@ k=0,@@ l=0; int@@ o@@ =0,@@ i; charb[@@ 500@@ ],c[@@ 500]; scanf("%lf%s%s",&@@ a,b,c); for(i=0;@@ b[i]@@ !='\0';i++) { k++; } for(i=0;@@ c[i]@@ !='\0';i++) { l++; } for(i=0;@@ b[i]@@ !='\0';i++) { if(b[i]==@@ c@@ [i]) { j++; } } m@@ =j@@ /@@ k; for(i=0;@@ b[i]@@ !='\0';i++) { if((@@ b[i]!='A'&&b[i]!='T'&&b[i]!='C'&&b[i]!='@@ G')||(@@ c@@ [i]!='A'&&@@ c@@ [i]!='T'&&@@ c@@ [i]!='C'&&@@ c@@ [i]!='G')@@ ) { o@@ ++; } } if(@@ o@@ >0@@ ||@@ k@@ !=@@ l) { printf("error"); } elseif(m@@ >=@@ a) { printf("yes"); } else { printf("no"); } return0; }  
c -1
h -1
intmain() { int@@ ls1@@ ,@@ ls2@@ ,@@ ls3@@ ,@@ i,j=0,@@ m,@@ lans@@ =0,@@ z=0; chars1@@ [100],@@ s2@@ [100],@@ s3@@ [100],@@ ans@@ [100]; scanf("%s",@@ s1); scanf("%s",@@ s2); scanf("%s",@@ s3); ls1@@ =strlen(@@ s1); ls2@@ =strlen(@@ s2); ls3@@ =strlen(@@ s3); for(i=0;i<@@ ls1@@ ;i++) { if(s1@@ [i]!=@@ s2@@ [0]@@ )@@ ans@@ [@@ lans@@ ++]=@@ s1@@ [i]; else { for(j=0@@ ,@@ m@@ =i@@ ;j<@@ ls2@@ ;j++,@@ m@@ ++) { if(s1@@ [m@@ ]!=@@ s2@@ [j]@@ )break; } if(j==@@ ls2@@ &&@@ z@@ !=1) { i=@@ m-1@@ ; for(j=0;j<@@ ls3@@ ;j++) ans@@ [@@ lans@@ ++]=@@ s3@@ [j]; z@@ ++; } else { for(@@ ;i<=@@ m;i++) ans@@ [@@ lans@@ ++]=@@ s1@@ [i]; i--; } } } ans@@ [@@ lans@@ ]='\0'; printf("%s",@@ ans); return0; }  
c -1
h -1
0

intmain() { inti,@@ a=0,@@ m; doublen,@@ x; char@@ dna1@@ [501],@@ dna2@@ [501]; scanf("%lf",&n); scanf("%s",@@ dna1); scanf("%s",@@ dna2); for(i=0;@@ dna1@@ [i]!='\0';i++){ if(dna1@@ [i]!=@@ 65@@ &&@@ dna1@@ [i]!=@@ 67@@ &&@@ dna1@@ [i]!=@@ 71@@ &&@@ dna1@@ [i]!=@@ 84@@ ){ printf("error"); return0; } } for(i=0;@@ dna2@@ [i]!='\0';i++){ if(@@ dna2@@ [i]!=@@ 65@@ &&@@ dna2@@ [i]!=@@ 67@@ &&@@ dna2@@ [i]!=@@ 71@@ &&@@ dna2@@ [i]!=@@ 84@@ ){ printf("error"); return0; } } if(strlen(@@ dna1@@ )!=strlen(@@ dna2@@ )){ printf("error"); }else{ m=strlen(@@ dna1); for(i=0;@@ dna1@@ [i]!='\0';i++){ if(dna1@@ [i]==@@ dna2@@ [i]){ a++; } } x=@@ a@@ *1.0/@@ (@@ 1.0*@@ m); if(x@@ >n){ printf("yes"); }else{ printf("no"); } } return0; }  
c -1
h -1
intmain() { inta[@@ 10],@@ n,i,j,@@ b,@@ t,@@ q,@@ sum; scanf("%d",&n); for(i=0,@@ t@@ =0;i<=@@ (n-1);i++) { for(j=0@@ ,@@ sum@@ =0;j<=@@ (n-1@@ );j++) { scanf("%d",&a[j]); sum=sum+@@ a[j]; } if(sum@@ ==@@ (n@@ *@@ 255@@ )) continue; b@@ =(@@ n*@@ 255@@ -@@ sum@@ )@@ /@@ 255@@ ; t=t+1; } q@@ =(@@ t@@ -2)*(@@ b@@ -2); printf("%d",@@ q); }  
c -1
h -1
0

intmain() {@@ inta,b,@@ c,d,@@ e,@@ s[@@ 20000],@@ ct@@ =0; scanf("%d",&a); for(b@@ =1;@@ b@@ <=@@ a;@@ b++) {scanf("%d",&@@ c@@ );@@ s[@@ b@@ ]=@@ c;@@ d=0; for(e@@ =1;@@ e@@ <=@@ b@@ -1;@@ e@@ ++@@ ){@@ if(s[@@ b@@ ]==@@ s[@@ e@@ ])@@ d=1; }@@ if(d@@ ==0){ if(@@ ct@@ ==1)@@ printf("@@ ");@@ printf("%d",@@ s[@@ b@@ ]@@ );@@ ct@@ =1;} }@@ return@@ 100@@ ;}  
c -1
h -1
typedef@@ struct{ int@@ d; int@@ score; }@@ student@@ ; intmain() { intn,i,@@ temp1@@ ,@@ temp2@@ ; student@@ a[@@ 100002@@ ]; scanf("%d",&n); for(i=0;i<n;i++){ scanf("%d%d%d",&a[i].@@ d,@@ &@@ temp1@@ ,&@@ temp2@@ ); a[i].@@ score@@ =@@ temp1@@ +@@ temp2@@ ; } student@@ max1,@@ max2@@ ,max3@@ ; max1@@ .@@ d=@@ max2@@ .@@ d=@@ max3@@ .@@ d=@@ -1; max1@@ .@@ score@@ =@@ max2@@ .@@ score@@ =@@ max3@@ .@@ score@@ =0; for(i=0;i<n;i++){ if(a[i].@@ score@@ >@@ max1@@ .@@ score@@ ){ max3=max2; max2=@@ max1; max1=@@ a[i]; } elseif(a[i].@@ score@@ >@@ max2@@ .@@ score@@ ){ max3=max2; max2=@@ a[i]; } elseif(a[i].@@ score@@ >@@ max3@@ .@@ score@@ ){ max3=@@ a[i]; } } printf("%d%d\n",@@ max1@@ .@@ d,@@ max1@@ .@@ score@@ ); if(@@ max2@@ .@@ d@@ !=-1) printf("%d%d\n",@@ max2@@ .@@ d,@@ max2@@ .@@ score@@ ); if(@@ max3@@ .@@ d@@ !=-1) printf("%d%d\n",@@ max3@@ .@@ d,@@ max3@@ .@@ score@@ ); return0; }  
c -1
h -1
0

intsum@@ =1; int@@ kk@@ (inta,intb) { inti; for(i=b@@ ;i@@ >=@@ 2@@ ;i--) if(a%i==0) return@@ a/@@ i; return0; } int@@ seperate@@ (inta,intb) { inti; for(i=b@@ ;i@@ >=@@ 2@@ ;i--) { if(a@@ %i@@ ==0@@ &&(@@ a/@@ i)@@ <=@@ i) {@@ sum@@ ++;@@ if((@@ a/@@ i@@ )==@@ 2)@@ continue@@ ;@@ else@@ seperate@@ (a@@ /i,@@ a/@@ i@@ -1)@@ ;} elseif(@@ (a@@ %i@@ ==0)&&(@@ (@@ kk@@ (a@@ /i,@@ i@@ ))@@ !=0)) { seperate@@ (a/i,i); } } returnsum; } intmain() { intn,i,@@ m; cin>>n; for(i=1;i<=n;i++) { cin>>m; cout<<@@ seperate@@ (m,@@ m-1)@@ <<endl; sum=1; } return0; }  
c -1
h -1
voidmain() { intn,i,j,@@ m@@ =1,@@ k@@ =1,@@ a[@@ 20000],b[@@ 20000]; scanf("%d",&n); for(i=0;i<n;i++) scanf("%d",&a[i]); b[0]=@@ a[0]; for(i=1;i<n;i++){ for(j=0;j<i;j++){ if(a[i]==a[j]) k=0; } if(k@@ ==1){ b[m@@ ]=a[i]; m++; } k=1; } for(j=0;j<m-1;j++) printf("%d",@@ b[j]); printf("%d",@@ b[j]); }  
c -1
h -1
0

intmain() { structpatient { int@@ id@@ [@@ 7@@ ]; intage; }@@ patient@@ [100]; inti,n,@@ max=0,@@ k; scanf("%d\n",&n); for(i=0;i<n;i++)@@ scanf("%s@@ %d\n",@@ patient@@ [i].id,&@@ patient@@ [i].age); for(i=0;i<n;i++) { if(@@ patient@@ [i].age@@ >max)max=@@ patient@@ [i].age; } for(k=@@ max@@ ;k@@ >@@ 59@@ ;k--) { for(i=0;i<n;i++)@@ if(@@ patient@@ [i].age@@ ==@@ k)@@ printf("%s\n",@@ patient@@ [i].id); } for(i=0;i<n;i++) { if(@@ patient@@ [i].age@@ <60@@ )@@ printf("%s\n",@@ patient@@ [i].id); } }  
c -1
h -1
intmain(intargc,char*argv[]) { struct@@ grades@@ { intid; int@@ yuwen@@ ,@@ shuxue; int@@ zongfen; }@@ grades@@ [@@ 100007@@ ]; inti,n,@@ j,@@ t,@@ s; scanf("%d",&n); for(i=0;i<n;i++) { scanf("%d%d%d",&@@ grades@@ [i].id,&@@ grades@@ [i].@@ yuwen@@ ,&@@ grades@@ [i].@@ shuxue); grades@@ [i].@@ zongfen@@ =@@ grades@@ [i].@@ yuwen@@ +@@ grades@@ [i].@@ shuxue; } for(i=0;i<3;i++) { for(j=0;j<n-1;j++) { if(@@ grades@@ [j].@@ zongfen@@ >=@@ grades@@ [j+1].@@ zongfen@@ ) { t=@@ grades@@ [j].@@ zongfen; grades@@ [j].@@ zongfen@@ =@@ grades@@ [j+1].@@ zongfen; grades@@ [j+1].@@ zongfen@@ =t; s=@@ grades@@ [j].@@ id; grades@@ [j].@@ id@@ =@@ grades@@ [j+1].@@ id; grades@@ [j+1].@@ id@@ =@@ s; } } } for(i=n-1;i@@ >=@@ n-@@ 3@@ ;i--) { printf("%d%d\n",@@ grades@@ [i].@@ id,@@ grades@@ [i].@@ zongfen@@ ); } return0; }  
c -1
h -1
0

struct@@ a { intnumber; char@@ authors@@ [26]; struct@@ a@@ *next; }; intn,@@ max=0; intmain() { struct@@ a*@@ create@@ (void@@ ); char@@ sum@@ (struct@@ a*@@ ); void@@ pr@@ (char@@ x,@@ struct@@ a@@ *head@@ ); struct@@ a*@@ head; char@@ x; scanf("%d",&n); head=@@ create@@ (); x=@@ sum@@ (head); pr@@ (x,@@ head); } struct@@ a*@@ create@@ (void) { struct@@ a@@ *head,*p1,*p2; inti; p1=@@ len@@ ;@@ head@@ =p1;@@ p2=p1; for(i=0;i<n;i++) { scanf("%d%s",&p1->@@ number,@@ p1->@@ authors@@ ); if(i!=@@ n-1) {@@ p1=@@ len@@ ;@@ p2->next@@ =p1;@@ p2=@@ p2->next@@ ;} else@@ p1->next=@@ null@@ ; } returnhead; } char@@ sum@@ (struct@@ a@@ *head) { struct@@ a@@ *p; p=head; inta[@@ 26]={0},@@ i,j; char@@ zd@@ ; for(i=0;i<n;i++) { for(j=0;@@ *(@@ p->@@ authors@@ +j)@@ !='\0';j++) a[@@ *(@@ p->@@ authors@@ +j)@@ -65]++; p=p->next; } for(i=0;i<26;i++) if(a[i]@@ >max){max=@@ a[i];@@ zd@@ =i;} printf("%c@@ \n@@ %d",@@ zd@@ +65@@ ,a[@@ zd@@ ]); return(@@ zd@@ +65); } void@@ pr@@ (char@@ x,@@ struct@@ a@@ *head) { inti,j,@@ num; struct@@ a@@ *p; p=head; for(i=0;i<n;i++) { num=0; for(j=0;@@ *(@@ p->@@ authors@@ +j)@@ !='\0';j++) if(*(@@ p->@@ authors@@ +j)@@ ==@@ x)@@ num@@ =1; if(num@@ )@@ printf("\n%d",@@ p->@@ number); p=p->next; } }  
c -1
h -1
main() { charstring@@ [@@ LIU@@ +1],@@ substring@@ [@@ LIU@@ +1],@@ replacement@@ [@@ LIU@@ +1],@@ out@@ [@@ LIU@@ +1]; int@@ h,@@ i,j,k,@@ n,@@ l,@@ lsub@@ ,@@ lreplace@@ ,@@ count,@@ heihei@@ =0; gets(@@ string); gets(@@ substring); gets(@@ replacement); l=strlen(@@ string@@ );@@ lsub@@ =strlen(@@ substring@@ );@@ lreplace@@ =strlen(@@ replacement); for(i=0,@@ n@@ =0;i<@@ l@@ ;i++,@@ n++) { count=0; for(j=0;@@ (j@@ <@@ lsub@@ )&&(@@ heihei@@ ==0)&&(@@ string@@ [i+@@ lsub@@ -1]@@ !=@@ '\0')@@ ;j++) { if(string@@ [i+j]==@@ substring@@ [j]) count++; } if(count==@@ lsub@@ ) { heihei@@ =1; for(k=0;k<@@ lreplace@@ ;k@@ ++,@@ n++) { out@@ [n@@ ]=@@ replacement@@ [k]; } i@@ =i+@@ lsub@@ -1;@@ n--; } else out@@ [n@@ ]=@@ string@@ [i]; } out@@ [l@@ +@@ lreplace@@ -@@ lsub@@ ]='\0'; printf("%s\n",@@ out@@ ); getchar(); getchar(); return0; }  
c -1
h -1
0

int@@ part@@ (intx,int@@ t) { inti; intnumber@@ =1; if(x==1) { return0; } if(x==@@ 2) { return1; } for(i=@@ t@@ ;i<=sqrt(@@ x@@ );i++) { if(x%i==0) { number@@ +=@@ part@@ (x/i,i); } } return@@ number; } intmain() { inti,n,@@ a; cin>>n; for(i=1;i<=n;i++) { cin>>a; cout<<@@ part@@ (a,@@ 2)<<endl; } return0; }  
c -1
h -1
struct@@ inf { intnum; charname[26]; struct@@ inf@@ *next; }; intm; struct@@ inf@@ *creat@@ (void) { struct@@ inf@@ *head,*p1,*p2; intn; p1=p2=(struct@@ inf@@ *)malloc(LEN); scanf("%d%s",&p1->num,p1->name); head=NULL; n=0; while(1) { n++; if(n==1) head=p1; else p2->next=p1; p2=p1; if(n==@@ m) break; else { p1=(struct@@ inf@@ *)malloc(LEN); scanf("%d%s",&p1->num,p1->name); } } p2->next=NULL; return(head); } void@@ count@@ (struct@@ inf@@ *head@@ ,int@@ o@@ ) { struct@@ inf@@ *@@ q1@@ ; int*@@ q2@@ ,*@@ q3@@ ,*@@ q4@@ ; char*@@ t1@@ ; q1@@ =head; q2@@ =@@ (int*)malloc(@@ 26@@ *@@ LEM@@ ); for(@@ q3@@ =@@ q2@@ ;@@ q3@@ <@@ q2@@ +@@ 26@@ ;@@ q3@@ ++) *@@ q3@@ =0; while(@@ q1@@ !=NULL) { for(@@ t1@@ =@@ q1->@@ name@@ ;*@@ t1@@ !='\0'@@ ;@@ t1@@ ++) *(@@ q2@@ +@@ (*@@ t1@@ -'@@ A')@@ )@@ =*(@@ q2@@ +@@ (*@@ t1@@ -'@@ A')@@ )@@ +1; q1=@@ q1@@ ->next; } q4@@ =@@ q2@@ ; for(@@ q3@@ =@@ q2@@ ;@@ q3@@ <@@ q2@@ +@@ 26@@ ;@@ q3@@ ++) if(*@@ q4@@ <*@@ q3@@ ) q4@@ =@@ q3@@ ; printf("%c\n%d\n",@@ q4@@ -@@ q2@@ +'A',@@ *@@ q4@@ ); q1@@ =head; while(@@ q1@@ !=NULL) { for(@@ t1@@ =@@ q1->@@ name@@ ;*@@ t1@@ !='\0'@@ ;@@ t1@@ ++) if(*@@ t1@@ ==@@ (@@ q4@@ -@@ q2@@ +'@@ A')@@ ) printf("%d\n",@@ q1->@@ num); q1=@@ q1@@ ->next; } } voidmain() { struct@@ inf@@ *head,*@@ s; scanf("%d",&m); head=creat(); s=@@ head; count@@ (head,@@ m); }  
c -1
h -1
0

intmain() { intm,i,j,@@ max=0; int@@ Q@@ [26]={0}; struct { intnum; charname@@ [27]; }@@ book[1000]; scanf("%d",&m); for(i=0;i<m;i++) scanf("%d%s",&book[i].num,@@ book[i].name); for(i=0;i<m;i++) { for(j=0;j<strlen(@@ book[i].@@ name@@ );j++) { switch(@@ book[i].@@ name@@ [j]) { case'@@ A@@ ': Q@@ [0]@@ ++; break; case'@@ B@@ ': Q@@ [1@@ ]++; break; case'@@ C@@ ': Q@@ [2@@ ]++; break; case'@@ D@@ ': Q@@ [3@@ ]++; break; case'@@ E@@ ': Q@@ [4@@ ]++; break; case'@@ F@@ ': Q@@ [5@@ ]++; break; case'@@ G@@ ': Q@@ [@@ 6@@ ]++; break; case'@@ H@@ ': Q@@ [@@ 7@@ ]++; break; case'@@ I@@ ': Q@@ [@@ 8@@ ]++; break; case'@@ J@@ ': Q@@ [@@ 9@@ ]++; break; case'@@ K@@ ': Q@@ [10@@ ]++; break; case'@@ L@@ ': Q@@ [11@@ ]++; break; case'@@ M@@ ': Q@@ [12@@ ]++; break; case'@@ N@@ ': Q@@ [@@ 13@@ ]++; break; case'@@ O@@ ': Q@@ [@@ 14@@ ]++; break; case'@@ P@@ ': Q@@ [@@ 15@@ ]++; break; case'@@ Q@@ ': Q@@ [@@ 16@@ ]++; break; case'@@ R@@ ': Q@@ [@@ 17@@ ]++; break; case'@@ S@@ ': Q@@ [@@ 18@@ ]++; break; case'@@ T@@ ': Q@@ [@@ 19@@ ]++; break; case'@@ U@@ ': Q@@ [@@ 20@@ ]++; break; case'@@ V@@ ': Q@@ [@@ 21@@ ]++; break; case'@@ W@@ ': Q@@ [@@ 22@@ ]++; break; case'@@ X@@ ': Q@@ [@@ 23@@ ]++; break; case'@@ Y@@ ': Q@@ [@@ 24@@ ]++; break; case'@@ Z@@ ': Q@@ [25@@ ]++; break; } } } for(i=1;i<26;i++) { if(@@ Q@@ [i]>@@ Q@@ [max@@ ]) max=i; } printf("%c\n%d\n",@@ max@@ +65@@ ,@@ Q@@ [max@@ ]); for(i=0;i<m;i++) { for(j=0;j<strlen(@@ book[i].@@ name@@ );j++) { if(book[i].@@ name[j]==@@ max@@ +65) { printf("%d\n",book[i].@@ num); break; } } } return0; }  
c -1
h -1
intmain() { inta[100][100@@ ]={@@ 1@@ }; inti,j,@@ x1,@@ x2,@@ y1,@@ y2@@ ; intn,@@ s; scanf("%d",&n); for(i=1;i<=n;i++) { for(j=1;j<=n;j++) { scanf("%d",&a[i][j]); } printf("\n"); } for(i=1;i<=n;i++) { for(j=1;j<=n;j++) { if(a[i][j]==0) { x1=i; y1=j; break; } } if(j!=@@ n@@ +1) break; } for(i=n@@ ;i>=1;i--) { for(j=n@@ ;j@@ >=1@@ ;j--) { if(a[i][j]==0) { x2=i; y2=j; break; } } if(j@@ !=0) break; } s=(@@ y2-y1@@ -1)*(@@ x2-x1@@ -1); printf("%d\n",s); return0; }  
c -1
h -1
0

intmain() { inta[1000]; inti,n,@@ j,@@ e,@@ l,@@ k; scanf("%d%d",&n,&k); for(i=0;i<n;i++){ scanf("%d",&a[i]); } e=@@ a[0]; for(i=1;i<=n;i++){ for(j=0;j<n@@ -i;j++){ if(a[j]>a[j+1@@ ]){ e=@@ a[j+1@@ ]; a[j+1]=@@ a[j]; a[j]=@@ e; } } } l=0; for(i=0;i<n;i++){ for(j=i;j<@@ n;j++){ if(a[i]+a[j]==@@ k){ l++; } } } if(l@@ ==0){ printf("no"); }else{ printf("yes"); } return0; }  
c -1
h -1
intmain(){ double@@ r; scanf("%lf",&@@ r); charzfc@@ [500]; char@@ jiyin@@ [500]; scanf("%s",@@ zfc); scanf("%s",@@ jiyin@@ ); intn=0; inti,k,@@ L@@ ,@@ N; for(i=0;@@ zfc@@ [i]!='\0';i++){ if(@@ zfc@@ [i+1@@ ]==@@ '\0'@@ ){ L@@ =i; } } L@@ ++; for(k=0;@@ jiyin@@ [k]@@ !='\0'@@ ;k++){ if(@@ jiyin@@ [k+1@@ ]==@@ '\0'@@ ){ N@@ =k; } } N@@ ++; if(@@ L@@ !=@@ N@@ ){ printf("error"); }else{ for(i=0;@@ zfc@@ [i]!='\0';i++){ if(@@ zfc@@ [i]!='A'&&@@ zfc@@ [i]!='T'&&@@ zfc@@ [i]!='C'&&@@ zfc@@ [i]!='G'){ printf("error"); return0; } } for(i=0;@@ jiyin@@ [i]!='\0';i++){ if(@@ jiyin@@ [i]!='A'&&@@ jiyin@@ [i]!='T'&&@@ jiyin@@ [i]!='C'&&@@ jiyin@@ [i]!='G'){ printf("error"); return0; } } for(i=0;@@ zfc@@ [i]!='\0';i++) { if(@@ zfc@@ [i]==@@ jiyin@@ [i]) { n++; } } if(n@@ *1.0/@@ L@@ >@@ r@@ ) { printf("yes"); }else { printf("no"); } } return0; }  
c -1
h -1
0

intmain() { inta[16@@ ],i,j,@@ k; while(1) { intn=0,@@ sum=0; for(i=0;;i++) { cin>>a[i]; if(a[i]==-1) break; else { if(a[i]!=0) n++; else break; } } if(a[0]==-1) break; for(j=0;j<n;j++) { for(k=0;k<n;k++) { if(a[j]==2*@@ a[k]) sum++; } } cout<<sum<<endl; } return0; }  
c -1
h -1
intmain() { intn,@@ a,b; int@@ z[@@ 30000@@ ]; intc[@@ 30000@@ ]; intx[@@ 101]; scanf("%d",&n); for(@@ a=@@ 10@@ ;a@@ <=@@ 100@@ ;a@@ ++) { x@@ [a@@ ]=1; } for(a@@ =1;@@ a@@ <=n;@@ a++) { scanf("%d",&@@ z@@ [a@@ ]); } b=1; for(a@@ =1;@@ a@@ <=n;@@ a++) { if(x@@ [@@ z@@ [a]@@ ]@@ ==1) { c[@@ b@@ ]=@@ z@@ [a@@ ]; b@@ +=1; x[@@ z@@ [a]@@ ]=0; } } for(a@@ =1;@@ a@@ <=@@ b@@ -1;@@ a++) { if(a@@ <b@@ -1) printf("%d",c[@@ a@@ ]); else printf("%d",c[@@ a@@ ]); } return0; }  
c -1
h -1
0

intmain(){ intk,@@ a[1000],@@ i,j,@@ n,@@ t; scanf("%d%d",&n,&k); for(i=0;i<n;i++){ scanf("%d",&a[i]);} for(i=0,@@ t@@ =0;i<@@ n;i++){ for(j=0;j<n;j++){ if(a[i]+a[j]==k) {@@ break;}} if(j!=@@ n@@ &&i!=@@ j) t++; } if(t@@ >0) printf("yes"); else printf("no"); return0; }  
c -1
h -1
intmain() { inta[1000][1000]; intt,@@ i,j,@@ x=0,@@ b=0,@@ m=0,@@ n=0,@@ s,@@ s1,@@ s2; scanf("%d",&t); for(i=0;i<t;i++) { for(j=0;j<@@ t;j++) { scanf("%d",&a[i][j]); } } for(i=0;i<t;i++) { for(j=0;j<@@ t;j++) { if(a[i][j]==0) { x@@ =i; b=j; break; } } if(a[x@@ ][b@@ ]==0) break; } for(i=@@ t@@ -1;i>=0;i--) { for(j=@@ t@@ -1@@ ;j>=0;j--) { if(a[i][j]==0) { m=i; n@@ =j; break; } } if(a[m@@ ][n@@ ]==0) break; } s1@@ =@@ m@@ -x@@ -1; s2=@@ n-@@ b@@ -1; s=@@ s1@@ *@@ s2; printf("%d\n",s); return0; }  
c -1
h -1
0

intmain() { intsz[100][100]; intk,@@ i; scanf("%d",&k); for(i=1;i<=@@ k;i++){ intm,n,@@ a,b,@@ sp@@ =0; scanf("%d%d",&m,&n); for(a=0;a@@ <=@@ m-1@@ ;a@@ ++){ for(b=0;b@@ <=@@ n-1;@@ b++){ scanf("%d",&(@@ sz[a@@ ][b@@ ]@@ )); sp@@ =@@ sp@@ +@@ sz[a@@ ][b@@ ]; } } intsum=0; for(b=0;b@@ <=@@ n-1;@@ b++){ sum=sum+@@ sz[0][@@ b@@ ]+sz[@@ m-1][@@ b@@ ]; } for(a=0;a@@ <=@@ m-1@@ ;a@@ ++){ sum=sum+@@ sz[a@@ ][0]+@@ sz[a@@ ][n-1]; } sum=sum-@@ sz[0][@@ 0]-@@ sz[0][@@ n-1]-@@ sz[@@ m-1][0]-@@ sz[@@ m-1][@@ n-1]; if(m@@ ==1||@@ n@@ ==1){ sum=@@ sp@@ ; } printf("%d\n",sum); } return0; }  
c -1
h -1
void@@ program@@ (void@@ ){ intm,n,@@ i,j; cin>>m>>n; const@@ int@@ M@@ =@@ n,@@ N@@ =@@ n; inta[@@ M@@ ],b[@@ N]; for(i=0;i<m@@ ;++@@ i)@@ cin>>a[i]; for(i=0;i<n@@ ;++@@ i)@@ cin>>b[i]; for(i=0;i<m@@ ;++@@ i)@@ for(j=i+1;j<@@ m;@@ ++@@ j)@@ if(a[i]>@@ a[j]@@ ){ a[i]=@@ a[i]+a[j]; a[j]=@@ a[i]@@ -@@ a[j]; a[i]=@@ a[i]@@ -@@ a[j]; } for(i=0;i<n@@ ;++@@ i)@@ for(j=i+1;j<@@ n;++@@ j)@@ if(b[i]>@@ b[j]@@ ){ b[i]=@@ b[i]@@ +@@ b[j]; b[j]=@@ b[i]@@ -@@ b[j]; b[i]=@@ b[i]@@ -@@ b[j]; } cout<<a[0]; for(i=1;i<@@ m;@@ ++@@ i)@@ cout<<''<<@@ a[i]; for(i=0;i<n@@ ;++@@ i)@@ cout<<''<<@@ b[i]; } intmain(){ program@@ (); return0; }  
c -1
h -1
0

voidmain() { inta,b,c,@@ i,j,k,@@ m; chars[256],@@ s1@@ [256],@@ s2@@ [256]; gets(s); gets(@@ s1); gets(@@ s2); a@@ =strlen(s); b=strlen(@@ s1); c=strlen(@@ s2); for(i=0;i<a;i++) { if(s[i]==@@ s1@@ [0]) { for(j=0;j<@@ b;j++) { if(s@@ [i+j]!=@@ s1@@ [j]@@ )break; } if(s@@ [i+@@ b@@ -1@@ ]==@@ s1@@ [b@@ -1@@ ]) { m=i; for(k=0;k<@@ m;k++) printf("%c",s@@ [k]); printf("%s",@@ s2); for(k=i+@@ b@@ ;k<@@ a@@ ;k++) printf("%c",s@@ [k]); break; } } } if(i==@@ a)@@ printf("%s",s); }  
c -1
h -1
inth@@ [30]; int@@ result@@ [30]; int@@ findFirstLess@@ (int@@ num) { int@@ index@@ =0; while(1) { if(result@@ [@@ index@@ ]<@@ num) return@@ index@@ ; index@@ ++; } } intmain() { intk,@@ i=0,@@ r,@@ p,@@ ans; scanf("%d",&k); while(1) { if(i>=@@ k) break; scanf("%d",@@ h@@ +i); i++; } result@@ [0]=@@ h@@ [0]; i=1; r=0; while(i<@@ k) { if(h@@ [i]<=@@ result@@ [r@@ ]) result@@ [@@ ++@@ r@@ ]=@@ h@@ [i]; if(h@@ [i]>@@ result@@ [r@@ ]) result@@ [@@ findFirstLess@@ (@@ h@@ [i])@@ ]=@@ h@@ [i]; i++; } printf("%d\n",@@ r@@ +1); return0; }  
c -1
h -1
0

intmain() { intn,i,j,@@ a,@@ b=0,@@ m,@@ c[@@ 91@@ ]={0}; scanf("%d",&n); for(i=0,@@ m@@ =0;i<n;i++) { b=0; scanf("%d",&a); for(j=0;j<@@ 91@@ ;j++) { if(c@@ [j]==@@ a) b=1; } if(b@@ ==0) { c[m@@ ]=a; m=m+1; } } printf("%d",c@@ [0]); for(i=1;i<m;i++) printf("%d",c[i]); return0; }  
c -1
h -1
intmain(intargc,char*argv[]) { inti,@@ a,@@ n,@@ b=0,@@ c=0,@@ d=0; scanf("%d",&n); for(i=1;i<=@@ n*@@ n;i++) { scanf("%d",&a); if(a==0) { b++; c++; d=@@ b@@ >@@ d@@ ?@@ b@@ :@@ d; } if(a==@@ 255) b=0; } b@@ =(@@ c@@ -2*@@ d@@ )@@ /2; printf("%d\n",@@ (@@ b@@ *(@@ d@@ -2@@ )@@ )); return0; }  
c -1
h -1
0

intf(int@@ t@@ ,int@@ k) { int@@ u@@ =1,i; if(t@@ >2) { for(i=k@@ ;i<=sqrt(@@ t@@ );i++) { if(t@@ %i==0) { u@@ +=@@ f(@@ t@@ /i,i); } } return@@ u@@ ; } elseif(@@ t@@ ==@@ 2) return1; elseif(@@ t@@ ==1) return0; } main() { inti,n,@@ t; scanf("%d",&n); for(i=0;i<n;i++) { scanf("%d",&t); printf("%d\n",@@ f(@@ t,@@ 2)); } }  
c -1
h -1
intmain() { intn,a,@@ i,j,@@ k@@ =1,@@ num[@@ 20000]; cin>>n; cin>>a; num[@@ 0]=@@ a; for(i=1;i<n;i++) { cin>>a; for(j=0;j<k;j++) { if(a==@@ num@@ [j]) break; } if(j==@@ k) { num@@ [k]=@@ a; k=k+1; } } for(i=0;i<=@@ k@@ -2;i++) cout<<@@ num[i]@@ <<""; cout<<num@@ [k@@ -1]; return0; }  
c -1
h -1
0

intmain() { inta[@@ M@@ ],@@ len@@ [@@ M@@ ],@@ n,i,j,@@ max,@@ longest@@ ; scanf("%d",&n); for(i=0;i<n;i++){ scanf("%d",&a[i]); } longest@@ =1; for(i=0;i<n;i++) { max=1; len@@ [i]=1; for(j=0;j<i;j++) { if(a[i]<=@@ a[j]) max=@@ len@@ [j]+1; if(@@ len@@ [i]<@@ max) len@@ [i]=@@ max; } if(@@ len@@ [i]>@@ longest@@ ) longest@@ =@@ len@@ [i]; } printf("%d\n",@@ longest@@ ); return0; }  
c -1
h -1
intmain() { inta[16],@@ num,@@ i=1@@ ,j@@ =0,@@ k=0,@@ l=0; while(cin>>@@ a[0]) { num=0; if(a[0]==-1) break; for(i=1;i<=@@ 15;i++) { cin>>a[i]; if(a[i]==0) break; } for(j=0;j<=@@ 15@@ ;j++) for(k=0;k<=@@ 15@@ ;k++) if((a[j]@@ !=0)&&(@@ a[k]@@ !=0)&&(@@ a[j]==2*@@ a[k]@@ )) num++; for(l=0;l@@ <=@@ 15@@ ;l++) a[l@@ ]=0; cout<<num<<endl; } return0; }  
c -1
h -1
0

intmain() {int@@ array[@@ 1000][1000],@@ a[1000]; introw,col; inti,j; cin>>row>>col; for(i=0;i<row;i++) for(j=0;j<col;j++) cin>>array[i][j]; for(i=0;i<@@ col@@ +@@ row;i++) {@@ if(i@@ <col) a[i]=0; else a[i]@@ =i@@ -col@@ +1;} for(i=0;i<@@ col@@ +@@ row;i++) for(j=@@ a[i]@@ ;j<@@ row@@ &&j@@ <=@@ i;j++) cout<<array@@ [j]@@ [i-j@@ ]<<endl; return0; }  
c -1
h -1
voidmain() { intk,@@ m,@@ i,j,@@ n; int@@ s1@@ [@@ 20000],@@ s2[@@ 20000]; scanf("%d",&n); for(i=0;i<n;i++) scanf("%d",&@@ s1[i]); for(i=n-1@@ ,@@ m@@ =0@@ ;i>=0;i--) {@@ k=0; for(j=i-1;j>=0;j--) {if(@@ s1@@ [i]==@@ s1@@ [j]) k@@ ++;} if(k==0) {@@ s2@@ [m]=@@ s1@@ [i]; m@@ ++;} } s2@@ [m@@ ]='\0'; for(n=@@ m-1@@ ;n@@ >0@@ ;n@@ --) {printf("%d",@@ s2@@ [n@@ ]); } printf("%d",@@ s2@@ [0]); }  
c -1
h -1
0

intmain(){ inti,n; double@@ x,@@ t=0; scanf("%lf",&x); chara[500],b[500]; scanf("%s%s",a,b); if(strlen(a)!=strlen(b@@ ))@@ printf("error"); else{ n@@ =strlen(a); for(i=0;a[i]@@ !=@@ '\0@@ '&&@@ b[i]@@ !='\0';i++){ if((@@ a[i]=='@@ A'||a[i]=='T'||a[i]=='@@ C'||@@ a[i]=='@@ G')&&(@@ b[i]=='@@ A'||@@ b[i]=='@@ T'||@@ b[i]=='@@ C'||@@ b[i]=='@@ G')){ if(a[i]==b[i]@@ )@@ t++; }else{ printf("error"); return0; } } if(t@@ /@@ n@@ >@@ x)@@ printf("yes"); elseprintf("no"); } return0; }  
c -1
h -1
structstudent{ int@@ no; int@@ ch; intmath; intsum; structstudent*next; }; structstudent*creat@@ (@@ long@@ n) { long@@ i; structstudent*head@@ ,@@ *p,*@@ q; head@@ =(structstudent*)malloc(len); p=@@ (@@ structstudent@@ *)malloc(len); head@@ ->next=@@ q=p; scanf("%d%d%d",&@@ p->@@ no@@ ,&p->@@ ch@@ ,&p->@@ math); p->@@ sum=(@@ p->@@ ch@@ )+@@ (p->@@ math); for(i=1;i<n;i++) { p=@@ (@@ structstudent@@ *)malloc(len); scanf("%d%d%d",&@@ p->@@ no@@ ,&p->@@ ch@@ ,&p->@@ math); p->@@ sum=(@@ p->@@ ch@@ )+@@ (p->@@ math); q@@ ->next=p; q=p; p@@ ->next=NULL; } return(head); } voidsort@@ (structstudent*head@@ ) { structstudent@@ *p,*@@ q1@@ ,*@@ q2@@ ,*@@ q3@@ ; int@@ m1,@@ m2@@ ,@@ m3@@ ; for(p=head@@ ->next@@ ,@@ m1@@ =p->@@ sum@@ ;p!=NULL;p=p->next) if(p->@@ sum>@@ m1@@ ){@@ m1@@ =p->@@ sum;@@ q1@@ =p@@ ;} printf("%d%d\n",@@ q1->@@ no@@ ,@@ q1->@@ sum); for(p=head@@ ->next@@ ,@@ m2@@ =p->@@ sum@@ ;p!=NULL;p=p->next) if(p->@@ sum>@@ m2@@ &&p@@ !=@@ q1@@ ){@@ m2@@ =p->@@ sum;@@ q2@@ =p@@ ;} printf("%d%d\n",@@ q2@@ ->@@ no@@ ,@@ q2@@ ->sum); for(p=head@@ ->next@@ ,@@ m3@@ =p->@@ sum@@ ;p!=NULL;p=p->next) if(p->@@ sum>@@ m3@@ &&p@@ !=@@ q1@@ &&p@@ !=@@ q2@@ ){@@ m3@@ =p->@@ sum;@@ q3@@ =p@@ ;} printf("%d%d\n",@@ q3@@ ->@@ no@@ ,@@ q3@@ ->sum); } intmain() { long@@ n; structstudent*head; scanf("%d",&n); head=creat(n); sort(@@ head); return0; }  
c -1
h -1
0

voidmain() { chara[100@@ ],b[100],@@ c[100],@@ temp@@ [100]; inti,j=0,@@ k,@@ lena@@ ,@@ lenb@@ ,@@ mark@@ =0; scanf("%s",a); scanf("%s",b); scanf("%s",c); lena@@ =strlen(a); lenb@@ =strlen(b); for(i=0;i<@@ lena@@ ;i++) { if(a[i]==@@ b[0]) { for(j=1;j<@@ lenb@@ ;j++) { if(a@@ [i+j]==@@ b[j]@@ )@@ mark@@ =1; else { mark@@ =0; break; } } } if(@@ mark@@ ==1) { for(k=0;k<@@ lenb@@ ;k++) a[i@@ +k@@ ]=@@ c@@ [k]; break; } } for(i=0;i<@@ lena@@ ;i++) { printf("%c",a[i]); } }  
c -1
h -1
structstudent {int@@ id; inta; intb; int@@ zong@@ ; }; structstudent@@ ren@@ [100000]; intmain() {@@ intn,i,@@ fen@@ ,@@ flag=0,@@ j; scanf("%d\n",&n); for(i=0;i<=n-1;i++) {scanf("%d",&@@ ren@@ [i].id); scanf("%d",&@@ ren@@ [i].@@ a); scanf("%d",&@@ ren@@ [i].@@ b); ren@@ [i].@@ zong@@ =@@ ren@@ [i].@@ a+@@ ren@@ [i].@@ b; } for(@@ fen@@ =@@ 200@@ ;@@ fen@@ >=@@ 100@@ ;@@ fen@@ --) {@@ for(i=0;i<=n-1;i++) if(@@ fen@@ ==@@ ren@@ [i].@@ zong@@ ) {@@ printf("%d%d\n",@@ ren@@ [i].@@ id,@@ ren@@ [i].@@ zong@@ ); flag@@ =@@ flag@@ +1; if(flag@@ ==@@ 3)@@ goto@@ end@@ ; } } end@@ : getchar(); }  
c -1
h -1
0

voidmain() { structbook { intn; chara[@@ 26]; }; structbook@@ book[999]; intm,@@ c[@@ 26]={0},@@ k; char@@ w@@ [26]; scanf("%d",&m); inti,j,@@ max=0,@@ t; for(i=0;i<m;i++) scanf("%d%s",&book[i].@@ n,@@ book[i].@@ a); for(i=0;i<26;i++) w@@ [i]@@ ='A'+i; for(i=0;i<26;i++) for(j=0;j<m;j++) for(k=0;k<26;k++) { if(@@ book[j].@@ a[k]==@@ w@@ [i]) c[i]@@ ++; } for(i=0;i<26;i++) { if(c@@ [i]>max) max=@@ c[i]; } for(i=0;i<26;i++) { if(c@@ [i]==@@ max) {@@ t=i; break;} } printf("%c\n%d\n",@@ w@@ [t@@ ],c[@@ t@@ ]); for(j=0;j<m;j++) for(k=0;k<26;k++) { if(@@ book[j].@@ a[k]==@@ w@@ [t@@ ]) {printf("%d\n",@@ book[j].@@ n); break;} } }  
c -1
h -1
intmain() { intk; intm; intn; inti,j,t; inta[100][100]; scanf("%d",&k); for(t@@ =1;t@@ <=k;@@ t++) { intsum=0; scanf("%d%d",&m,&n); for(i=0;i<=@@ m-1;i++) { for(j=0;j<=n-1;j++) { scanf("%d",&a[i][j]); } } for(i=0;i<=@@ m-1;i++) { for(j=0;j<=n-1;j++) { sum=sum+@@ a[i][j]; } } for(i=1;i<=@@ m@@ -2;i++) { for(j=1;j<=@@ n-2@@ ;j++) { sum=sum-@@ a[i][j]; } } printf("%d\n",sum); } return0; }  
c -1
h -1
0

void@@ bubble@@ (inta[],int@@ l) { inti,j,temp; for(j=1;j<@@ l@@ ;j++) { for(i=0;i<l@@ -j;i++) { if(a[i]>a[i+1]) { temp=a[i]; a[i]=a[i+1]; a[i+1]=@@ temp; } } } } intmain() { intm,n,i,j,@@ a[@@ 10000@@ ],b[@@ 10000]; scanf("%d%d",&m,&n); for(i=0;i<m;i++) { scanf("%d",&a[i]); } for(j=0;j<n;j++) { scanf("%d",&@@ b[j]); } bubble@@ (a,m); bubble@@ (b,n); for(i=0;i<m;i++) { printf("%d",a[i]); } for(j=0;j<n;j++) { printf("%d",@@ b[j]); if(j<@@ n-1) printf(""); } return0; }  
c -1
h -1
intmain(){ inta[16@@ ],i,j,@@ r,@@ n; while(cin>>@@ a[0]@@ ){ n=0; if(a[0]==-1) break; for(i=1;@@ a[i-1]@@ !=0;i++) cin>>a[i]; for(j=0;j<=@@ i@@ -2@@ ;j++) for(r=0;r@@ <=i@@ -2@@ ;r++) if(@@ 2*@@ a[j]==@@ a[r@@ ]) n++; cout<<n<<endl; } return0; }  
c -1
h -1
0

intnum@@ =0,@@ t=@@ 2; void@@ detach@@ (intn) { inti; int@@ q=@@ t; if(n==1) { num++; } else { for(i=@@ t@@ ;i<=@@ n@@ /2@@ ;i++) { if(n%i==0) { n=@@ n/@@ i; t=i; detach@@ (n); n=@@ n*@@ i; t=@@ q; } } if(i>@@ n@@ /2@@ &&n@@ >=@@ t) { n=1; detach@@ (n); } } } intmain() { intn,@@ a; cin>>n; for(inti=1;i<=n;i++) { cin>>a; detach@@ (a); cout<<num<<endl; num=0; t=@@ 2; } return0; }  
c -1
h -1
voidmain() { intnum@@ =0,@@ n,@@ a[@@ 26],@@ name@@ [1000],@@ name2@@ [1000],@@ i,j,k,@@ max=0,@@ maxi@@ =0; char@@ wr@@ [1000][@@ 27]; char@@ q; scanf("%d",&n); for(i=0;i<26;i++) { a[i]=0; } for(i=0;i<n;i++) { scanf("%d%s",&@@ (@@ name@@ [i]@@ ),@@ wr@@ [i]); for(j=0;j<26;j++) { for(k=0;k<26;k++) { if(@@ wr@@ [i][j]=='@@ A'+@@ k)@@ a[k@@ ]++; } } } for(i=0;i<26;i++) { if(a[i]>max) { max=a[i]; maxi@@ =i; } } q@@ ='A'+@@ maxi@@ ; printf("%c\n",@@ q); for(i=0;i<n;i++) { for(j=0;j<26;j++) { if(@@ wr@@ [i][j]==@@ q) { name2@@ [@@ num@@ ]=@@ name@@ [i]; num++; } } } printf("%d\n",num); for(i=0;i<@@ num@@ ;i++)@@ printf("%d\n",@@ name2@@ [i]); }  
c -1
h -1
0

voidmain() { intm,n; inta[100]; intb[100@@ ]; intc[@@ 200]; voidread@@ (inta[],intb[],int@@ m,int@@ n); voidpaixu@@ (inta[],intb[],int@@ m,int@@ n); voidcombine@@ (intc[@@ ],@@ inta[@@ ],intb[@@ ],int@@ m,int@@ n); void@@ type@@ (intc[],int@@ m,int@@ n); scanf("%d%d",&m,&n); read@@ (a,b,m,n); paixu@@ (a,b,m,n); combine@@ (c,@@ a,b,@@ m,n); type@@ (c,@@ m,n); } voidread@@ (inta[],intb[],int@@ m,intn) { inti; for(i=0;i<m;i++) scanf("%d",&a[i]); for(i=0;i<n;i++) scanf("%d",&b[i]); } voidpaixu@@ (inta[],intb[],int@@ m,intn) { inti,j,t; for(j=0;j<m-1;j++) for(i=0;i<m@@ -j@@ -1;i++) if(a[i]>a[i+1]) { t=a[i]; a[i]=a[i+1]; a[i+1]=@@ t; } for(j=0;j<n-1;j++) for(i=0;i<n@@ -j@@ -1;i++) if(b[i]>b[i+1]) { t=b[i]; b[i]=b[i+1]; b[i+1]=@@ t; } } voidcombine@@ (intc[@@ ],@@ inta[@@ ],intb[@@ ],int@@ m,intn) { inti; for(i=0;i<m;i++) c[i]=a[i]; for(i=0;i<n;i++) c@@ [i@@ +m@@ ]=b[i]; } void@@ type@@ (intc[],int@@ m,intn) { intnum,@@ i; num=@@ m+@@ n; for(i=0;i<num;i++) if(i<@@ num@@ -1) printf("%d",c[i]); else printf("%d\n",@@ c[i]); }  
c -1
h -1
intmain() { intx[@@ 20],@@ r,@@ ctr@@ ,@@ t,@@ i,j; while(@@ cin.@@ peek@@ (@@ )!=@@ '-@@ ') { r=@@ ctr@@ =0; while(cin>>@@ t,@@ t) x[@@ ++@@ r@@ ]=t; cin.get(); for(i=1;i<=@@ r;i++) { for(j=1;j<=@@ r@@ ;j++) { if(x@@ [i]==@@ (x@@ [j]@@ <<@@ 1@@ )) ctr@@ ++; } } cout<<@@ ctr@@ <<endl; } return0; }  
c -1
h -1
0

int@@ u@@ [1000]; intmain() { intn,k,@@ i,j; scanf("%d%d",&n,&k); for(i=0;i<n;i++) { scanf("%d",&@@ u@@ [i]); } for(i=0;i<n;i++) { for(j=i+1;j<n;j++) { if(@@ u@@ [i]+@@ u@@ [j]==k) { break; } } if(j!=@@ n) { break; } } if(i!=@@ n) { printf("yes"); } else { printf("no"); } return0; }  
c -1
h -1
chars@@ [100][@@ 255@@ ]; intmain(){ intn,k,i,j,@@ b=0,@@ c=0,@@ d=0,@@ e=0,@@ flag=0; intnum[@@ 1000]; scanf("%d%d",&n,&k); for(i=0;i<n;i++){ scanf("%d",&@@ num[i]); } for(i=0;i<n@@ -1@@ &&@@ !@@ flag@@ ;i++){ for(j=i+1;j<n;j++){ if(num@@ [i]+@@ num@@ [j]==k){ flag=1; } } } if(flag@@ ==1){ printf("yes"); }else{ printf("no"); } return0; }  
c -1
h -1
1


intmain() { inti,j,k,@@ row,col,@@ a[100][100]; cin>>row>>col; for(i=0;i<row;i++) { for(j=0;j<col;j++) { cin>>a[i][j]; } } for(k=0;k<col@@ ;k++) for(i=0,j@@ =k@@ ;j>=0@@ &&i@@ <row@@ ;i++,j--) cout<<a[i][j]<<endl; for(k=1;k<@@ row@@ ;k++) for(i=@@ k,@@ j=@@ col-1@@ ;i<@@ row@@ &&j>=0@@ ;i++,j--) cout<<a[i][j]<<endl; return0; }  
c -1
h -1
intmain() {int@@ array[@@ 1000][1000],@@ a[1000]; introw,col; inti,j; cin>>row>>col; for(i=0;i<row;i++) for(j=0;j<col;j++) cin>>array[i][j]; for(i=0;i<@@ col@@ +@@ row;i++) {@@ if(i@@ <col) a[i]=0; else a[i]@@ =i@@ -col@@ +1;} for(i=0;i<@@ col@@ +@@ row;i++) for(j=@@ a[i]@@ ;j<@@ row@@ &&j@@ <=@@ i;j++) cout<<array@@ [j]@@ [i-j@@ ]<<endl; return0; }  
c -1
h -1
1


intmain() { intn,m,@@ i,j,k,@@ p=0; scanf("%d%d",&n,&m); intsz[@@ 1000],@@ pl@@ [1000],@@ a; for(i=0;i<n;i++) { scanf("%d",&sz[i]); pl@@ [i]=@@ sz[i]; } for(k=0;k<n;k++) { for(j=1;j<n;j++) { a=@@ pl@@ [k]@@ +sz@@ [j]; if(a!=@@ m) { p++; } } } if(p==@@ n@@ *(@@ n-1@@ )) { printf("no"); } else { printf("yes"); } return0; }  
c -1
h -1
main() { inta[100],b[100],@@ c[100],@@ d@@ [100],@@ n,@@ i; scanf("%d",&n); for(i=0;i<n;i++) scanf("%d%d%d",&@@ a[i],&@@ b[i]@@ ,&@@ c[i]); if(n==@@ 10) {@@ printf("@@ 6@@ 181@@ \n"); printf("@@ 3@@ 176@@ \n"); printf("@@ 8@@ 175@@ \n@@ ");} else {@@ printf("@@ 16533@@ 198@@ \n"); printf("@@ 60249@@ 198@@ \n"); printf("@@ 204@@ 197@@ \n@@ ");} }  
c -1
h -1
0

intmain() { chara[501],b[501]; doublen,@@ d,@@ c,@@ r; inti,k,@@ s; scanf("%lf",&n); scanf("%s\n@@ %s",@@ a,b); d@@ =strlen(a); c@@ =strlen(b); k=0; if(c@@ !=@@ d@@ ){ printf("error"); return0; } else{ for(i=0;i<c@@ ;i++){ if(a[i]!='A'&&a[i]!='T'&&a[i]!='C'&&a[i]!='@@ G') k++; if(@@ b[i]!='A'&&b[i]!='T'&&b[i]!='C'&&b[i]!='@@ G') k++; } if(k@@ !=0){ printf("error"); return0; } } s=0; for(i=0;i<c@@ ;i++){ if(a[i]==b[i]) s++; } r=@@ s/@@ d; if(r@@ <=@@ n) printf("no"); if(r@@ >n) printf("yes"); return0; }  
c -1
h -1
intmain() { intm@@ [26],@@ x; int@@ cmp@@ (inti,@@ intk,@@ inth@@ [@@ ]); intmax(int@@ m@@ [],int@@ k); intk,i,@@ h@@ [26]; scanf("%d",&k); for(i=1;i<=k;i++) scanf("%d",&h[i]); for(i=1;i<=k;i++) m@@ [i]=@@ cmp@@ (i,@@ k,@@ h); x=@@ max(@@ m,@@ k); printf("%d\n",x); return0; } intmax(int@@ m@@ [],int@@ k) { int@@ big@@ ,i; big@@ =@@ m@@ [1]; for(i=1;i<=k;i++) if(@@ big@@ <m@@ [i])@@ big@@ =@@ m[i]; return@@ big@@ ; } int@@ cmp@@ (inti,@@ intk,@@ inth@@ []) { intb[@@ 26],@@ j,@@ t=1; if(i==@@ k)@@ return1; for(j=i+1;j<=@@ k;j++) if(h@@ [i]>=@@ h@@ [j]) { b[t@@ ]=@@ cmp@@ (@@ j,k,@@ h); t++; } if(t@@ ==1)@@ return1; return@@ max@@ (b,@@ t@@ -1)@@ +1; }  
c -1
h -1
0

intmain() { int@@ b=0,@@ a,@@ len1,len2,@@ x=0,@@ c; double@@ bz@@ ; char@@ m1@@ [@@ 505@@ ],@@ m2@@ [@@ 505@@ ]; scanf("%lf",&@@ bz@@ ); scanf("%s%s",@@ m1,@@ m2@@ ); len1=strlen(@@ m1@@ ); len2=strlen(@@ m2@@ ); if(len1!=@@ len2) x=1; for(c=0;c@@ <@@ len1@@ ;c@@ ++) { if(@@ m1@@ [c@@ ]!='@@ A'&&@@ m1@@ [c@@ ]!='@@ T'&&@@ m1@@ [c@@ ]!='@@ C'&&@@ m1@@ [c@@ ]!='@@ G'||@@ m2@@ [c@@ ]!='@@ A'&&@@ m2@@ [c@@ ]!='@@ T'&&@@ m2@@ [c@@ ]!='@@ C'&&@@ m2@@ [c@@ ]!='@@ G') x=1; } if(x@@ ) { printf("error"); } else { for(a=0;a@@ <@@ len1@@ ;a@@ ++) { if(@@ m1@@ [a@@ ]==@@ m2@@ [a@@ ]) { b++; } } if(b@@ *1.0/@@ len1@@ >@@ bz@@ ) { printf("yes"); } else { printf("no"); } } return0; }  
c -1
h -1
voidmain() { inty,m,d,@@ a,@@ i,@@ ans; for(i=1;i<=@@ 5;i++) { scanf("%d%d%d",&y,&m,&d); if(y%@@ 4@@ !=0) a=1; elseif(@@ y%@@ 100!=0) a=0; elseif(@@ y%@@ 400@@ !=0) a=1; else a=0; if(a@@ ) { switch(m) { case1:@@ ans=@@ d;break; case2:@@ ans@@ =31+@@ d;break; case3:@@ ans=@@ 59@@ +d;break; case4:@@ ans=@@ 90@@ +d;break; case5:@@ ans=@@ 120@@ +d;break; case6:@@ ans=@@ 151@@ +d;break; case7:@@ ans=@@ 181@@ +d;break; case8:@@ ans=@@ 212@@ +d;break; case9:@@ ans=@@ 243@@ +d;break; case10:@@ ans=@@ 273@@ +d;break; case11:@@ ans=@@ 304@@ +d;break; case12:@@ ans=@@ 334@@ +d;break; } } else { switch(m) { case1:@@ ans=@@ d;break; case2:@@ ans@@ =31+@@ d;break; case3:@@ ans=@@ 60@@ +d;break; case4:@@ ans=@@ 91@@ +d;break; case5:@@ ans=@@ 121@@ +d;break; case6:@@ ans=@@ 152@@ +d;break; case7:@@ ans=@@ 182@@ +d;break; case8:@@ ans=@@ 213@@ +d;break; case9:@@ ans=@@ 244@@ +d;break; case10:@@ ans=@@ 274@@ +d;break; case11:@@ ans=@@ 305@@ +d;break; case12:@@ ans=@@ 335@@ +d;break; } } printf("%d\n",@@ ans); } }  
c -1
h -1
0

intmax@@ (inta,intb) { if(a@@ >b@@ )@@ return@@ a; else@@ return@@ b; } intmain() { intk,i,j,@@ h@@ [25],@@ dp@@ [25]; scanf("%d",&k); for(i=0;i<@@ k;i++)@@ scanf("%d",&h[i]); for(i=0;i<@@ k;i++)@@ dp@@ [i]=1; for(i=1;i<k;i++) for(j=0;j<i;j++) if(h@@ [j]>=@@ h@@ [i])@@ dp@@ [i]=@@ max(@@ dp@@ [i],@@ dp@@ [j]@@ +1); intm=0; for(i=0;i<@@ k;i++)@@ m=@@ max(@@ m,@@ dp@@ [i]); printf("%d\n",m); }  
c -1
h -1
intmain(intargc,char*argv[]) { intn; scanf("%d",&n); inti,j; int@@ c@@ [100][100]; int@@ a1,a2,@@ b1,@@ b2@@ ,@@ a,b,@@ s; for(i=0;i<n;i++){ for(j=0;j<n;j++){ scanf("%d",&@@ c@@ [i][j]); } } for(i=0;i<n;i++){ for(j=0;j<n;j++){ if(c@@ [i][j]==0){ a1@@ =i; b1@@ =j; } } } for(i=n-1;i>=0;i--){ for(j=n-1@@ ;j>=0;j--){ if(c@@ [i][j]==0){ a2@@ =i; b2@@ =j; } } } a=@@ a1@@ -@@ a2@@ -1; b=@@ b1@@ -@@ b2@@ -1; s=@@ a*@@ b; printf("%d",s); return0; }  
c -1
h -1
0

intmain() { inti,n; int@@ fun@@ (intn,int@@ begin@@ ); scanf("%d",&@@ i); while(i@@ -->@@ 0@@ ) { scanf("%d",&n); printf("%d\n",@@ fun@@ (n,@@ 2)); } return0; } int@@ fun@@ (intn,int@@ begin@@ ) { inti,@@ result=1; for(i=@@ begin@@ ;i<=@@ sqrt(n@@ );i++) if(n%i==0) result+=@@ fun@@ (n/i,i); returnresult; }  
c -1
h -1
intmain(){ inti,n,@@ m; double@@ c,d; chara[501],b[501]; scanf("%lf",&@@ c); scanf("%s%s",a,b); m=strlen(a); n=0; for(i=0;a[i]@@ !='\0';i++){ if(a[i]!='A'&&a[i]!='T'&&a[i]!='C'&&a[i]!='@@ G'){ break; } if(@@ b[i]!='A'&&b[i]!='T'&&b[i]!='C'&&b[i]!='@@ G'){ break; } } if(strlen(a)!=strlen(b@@ )){ printf("error"); }elseif(@@ i@@ <@@ m){ printf("error"); }elseif(@@ i>=@@ m){ for(i=0;a[i]@@ !='\0';i++){ if(a[i]==b[i]){ n@@ +=1; } } d@@ =1.0*@@ n/@@ m; if(d@@ >@@ c){ printf("yes"); }else{ printf("no"); } } return0; }  
c -1
h -1
0

intmain() { intk,i,j,@@ m=0,@@ n,@@ max=0; inta[@@ 25],@@ t@@ [25@@ ]={0},@@ s[@@ 25@@ ]={0}; scanf("%d",&k); for(i=0;i<k;i++) scanf("%d",&a[i]); t@@ [k-1]@@ =1; if(k==1) printf("@@ 1@@ \n"); else { for(i=k-2;i>=0;i--) { for(j=i+1;j<k;j++) { if(a[j]<=@@ a[i]) { s[m@@ ]=@@ t@@ [j]; m++; } } m=0; max=@@ s[@@ 0]; for(n@@ =1;@@ n@@ <@@ 25@@ ;n++) { if(s[@@ n@@ ]@@ >max) max=@@ s[@@ n]; } for(j=0;j<@@ 25@@ ;j++) s[j]@@ =0; t@@ [i]=@@ max+1; } max=0; for(i=0;i<k;i++) { if(t@@ [i]>max) max=@@ t@@ [i]; } printf("%d\n",max); } return0; }  
c -1
h -1
intmain() { inty,m,d,@@ s,@@ er@@ ; scanf("%d%d%d",&y,&m,&d); if(y%@@ 400==0) { er@@ =@@ 29; switch(m) { case1:@@ s=@@ d@@ ;@@ printf("%d\n",s);break; case2:@@ s@@ =31+@@ d@@ ;@@ printf("%d\n",s);break; case3:@@ s@@ =31+@@ er@@ +d@@ ;@@ printf("%d\n",s);break; case4:@@ s=@@ 31@@ *2@@ +@@ er@@ +d@@ ;@@ printf("%d\n",s);break; case5:@@ s=@@ 31@@ *2@@ +@@ er@@ +30@@ +d@@ ;@@ printf("%d\n",s);break; case6:@@ s=@@ 31*3@@ +@@ er@@ +30@@ +d@@ ;@@ printf("%d\n",s);break; case7:@@ s=@@ 31*3@@ +@@ er@@ +30*2@@ +d@@ ;@@ printf("%d\n",s);break; case8:@@ s=@@ 31*@@ 4@@ +@@ er@@ +30*2@@ +d@@ ;@@ printf("%d\n",s);break; case9:@@ s=@@ 31*5@@ +@@ er@@ +30*2@@ +d@@ ;@@ printf("%d\n",s);break; case10:@@ s=@@ 31*5@@ +@@ er@@ +30@@ *3@@ +d@@ ;@@ printf("%d\n",s);break; case11:@@ s=@@ 31*6@@ +@@ er@@ +30@@ *3@@ +d@@ ;@@ printf("%d\n",s);break; case12:@@ s=@@ 31*6@@ +@@ er@@ +30@@ *@@ 4@@ +d@@ ;@@ printf("%d\n",s); } } else { er@@ =@@ 28; switch(m) { case1:@@ s=@@ d@@ ;@@ printf("%d\n",s);break; case2:@@ s@@ =31+@@ d@@ ;@@ printf("%d\n",s);break; case3:@@ s@@ =31+@@ er@@ +d@@ ;@@ printf("%d\n",s);break; case4:@@ s=@@ 31@@ *2@@ +@@ er@@ +d@@ ;@@ printf("%d\n",s);break; case5:@@ s=@@ 31@@ *2@@ +@@ er@@ +30@@ +d@@ ;@@ printf("%d\n",s);break; case6:@@ s=@@ 31*3@@ +@@ er@@ +30@@ +d@@ ;@@ printf("%d\n",s);break; case7:@@ s=@@ 31*3@@ +@@ er@@ +30*2@@ +d@@ ;@@ printf("%d\n",s);break; case8:@@ s=@@ 31*@@ 4@@ +@@ er@@ +30*2@@ +d@@ ;@@ printf("%d\n",s);break; case9:@@ s=@@ 31*5@@ +@@ er@@ +30*2@@ +d@@ ;@@ printf("%d\n",s);break; case10:@@ s=@@ 31*5@@ +@@ er@@ +30@@ *3@@ +d@@ ;@@ printf("%d\n",s);break; case11:@@ s=@@ 31*6@@ +@@ er@@ +30@@ *3@@ +d@@ ;@@ printf("%d\n",s);break; case12:@@ s=@@ 31*6@@ +@@ er@@ +30@@ *@@ 4@@ +d@@ ;@@ printf("%d\n",s); } } return0; }  
c -1
h -1
0

int@@ DFS@@ (int,int); intmain() { int@@ q; cin>>@@ q; for(inti=0;i<@@ q@@ ;i++) { intn; inth@@ =0; cin>>n; cout<<@@ DFS@@ (n,@@ n@@ )<<endl; } return0; } int@@ DFS@@ (intn,int@@ p) { int@@ ans=0; if(n@@ ==1)@@ return1; for(inti=2;i<=@@ p@@ ;i++) { if(n%i==0) { ans=@@ ans@@ +@@ DFS@@ (n/i,i); } } return@@ ans; }  
c -1
h -1
intmain() { inta[16@@ ],i,j,@@ temp,@@ count; i=0; while(cin>>@@ a[0]) { count=0; if(a[0]==-1) break; i=1; while(cin>>@@ a[i]) { if(a[i]@@ <@@ 1) { temp@@ =i; break; } i++; } for(i=0;i<@@ temp@@ -1;i++) { for(j=i+1;j<@@ temp@@ ;j++) { if(a[i]==2*@@ a[j]||a[j]==2*@@ a[i]) { count++; } } } cout<<count<<endl; } return0; }  
c -1
h -1
0

intf@@ (int,int); intmain() { intn,a[@@ 32768@@ ],@@ i; cin>>n; for(i=0;i<=n-1;i++) { cin>>a[i]; } for(i=0;i<=n-1;i++) { cout<<@@ f(@@ a[i],@@ 2)@@ +1<<endl; } return0; } intf(inta,int@@ p) { inti,@@ sum=0; for(i=2;i<=@@ sqrt(@@ a)@@ ;i++) { if(((@@ double)@@ a/@@ i==@@ a/@@ i@@ )&&(i@@ >=@@ p@@ )) {@@ p=i; sum=sum@@ +1@@ +@@ f(a@@ /i,@@ p); } } returnsum; }  
c -1
h -1
intmain() { intn; scanf("%d",&n); structstudent { intnum; intchinese; int@@ maths; }; structstudent@@ a[@@ 100000],@@ temp; inti; for(i=0;i<n;i++) { scanf("%d",&@@ a[i].@@ num); scanf("%d",&@@ a[i].@@ chinese); scanf("%d",&@@ a[i].@@ maths@@ ); } for(i=1;i<n;i++) { if((@@ a[i].@@ chinese+@@ a[i].@@ maths@@ )>@@ (@@ a[0].@@ chinese+@@ a[0].@@ maths@@ )) { temp=@@ a[0]; a[0]=@@ a[i]; a[i]=@@ temp; } } printf("%d%d\n",@@ a[0].@@ num,@@ a[0].@@ chinese+@@ a[0].@@ maths@@ ); for(i=2@@ ;i<n;i++) { if((@@ a[i].@@ chinese+@@ a[i].@@ maths@@ )>@@ (@@ a[1].@@ chinese+@@ a[1].@@ maths@@ )) { temp=@@ a[1]; a[1]=@@ a[i]; a[i]=@@ temp; } } printf("%d%d\n",@@ a[1@@ ].num,@@ a[1].@@ chinese+@@ a[1].@@ maths@@ ); for(i=@@ 3@@ ;i<n;i++) { if((@@ a[i].@@ chinese+@@ a[i].@@ maths@@ )>@@ (@@ a[2].@@ chinese+@@ a[2].@@ maths@@ )) { temp=@@ a[2@@ ]; a[2@@ ]=a[i]; a[i]=@@ temp; } } printf("%d%d\n",@@ a[2@@ ].num,@@ a[2].@@ chinese+@@ a[2].@@ maths@@ ); return0; }  
c -1
h -1
0

struct@@ worker { int@@ name@@ ; char@@ au@@ [20]; struct@@ worker@@ *next; }; struct@@ help { charauthor@@ ; int@@ max; }; struct@@ worker@@ *creat@@ (intm) { struct@@ worker@@ *@@ p1,*p2,*@@ p; inti; p1=p2=(struct@@ worker@@ *)malloc(sizeof(struct@@ worker@@ )); scanf("%d%s",&p1->@@ name,@@ p1->@@ au); p=@@ p1; for(i=0;i<m-1;i++) { p1=(struct@@ worker@@ *)malloc(sizeof(struct@@ worker@@ )); scanf("%d%s",&p1->@@ name,@@ p1->@@ au); p2->next=p1; p2=p1; } p2->next=NULL; return@@ p; } voidprint(struct@@ worker@@ *p@@ ) { struct@@ worker@@ *@@ p1; p1=@@ p; while(p1!=NULL) { printf("%d@@ %s@@ \n",@@ p1->name@@ ,@@ p1->@@ au); p1=p1->next; } } void@@ most@@ (struct@@ worker@@ *p@@ ) { struct@@ worker@@ *p1,*p2; inta[@@ 30@@ ]={0},@@ i,@@ max; charauthor@@ ; struct@@ help@@ t; p1=@@ p; p2=@@ p; while(p1!=NULL) { for(i=0;@@ *(@@ p1->@@ au@@ +i)@@ !='\0';i++) { a[@@ *(@@ p1->@@ au@@ +i)@@ -65@@ ]=a[@@ *(@@ p1->@@ au@@ +i)@@ -65@@ ]+1; } p1=p1->next; } for(i=0,@@ max@@ =0;i<@@ 26;i++) { if(a[i]@@ >max)max=@@ a[i]; } for(i=0;i<26;i++) { if(a[i]==@@ max@@ )@@ author@@ =i+65; } printf("%c\n%d\n",@@ author@@ ,max); p1=@@ p; while(p1!=NULL) { for(i=0;@@ *(@@ p1->@@ au@@ +i)@@ !='\0';i++) { if(*(@@ p1->@@ au@@ +i)@@ ==@@ author@@ )@@ printf("%d\n",@@ p1->@@ name); } p1=p1->next; } } voidmain() { struct@@ worker@@ *@@ p1,*@@ p; struct@@ help@@ t; intm; charc; scanf("%d",&m); p=@@ creat@@ (m); p1=@@ p; most@@ (@@ p1); }  
c -1
h -1
voidmain() { inti,n,@@ j,@@ sum,@@ array[@@ 30@@ ][@@ 30]; inta,b,c,@@ d; scanf("%d",&n); for(i=0;i<n;i++) { for(j=0;j<n;j++) scanf("%d",&array@@ [i][j]); }@@ i@@ =0;j@@ =0; for(i=0;i<n;i++) { for(j=0;j<n;j++) { if(array@@ [i][j]==0&&@@ array@@ [i]@@ [j-1]@@ !=0&&@@ array@@ [i-1][j]@@ !=0@@ ){@@ a@@ =i;@@ b@@ =j;} if(array@@ [i][j]==0&&@@ array@@ [i]@@ [j+1]@@ !=0&&@@ array@@ [i+1][j]@@ !=0@@ ){@@ c@@ =i;@@ d@@ =j;} } } sum=(@@ c-a-1)*(d-b-1); printf("%d",sum); }  
c -1
h -1
0

intl,@@ n; inta[@@ 30]; void@@ measure@@ (int@@ k,@@ ints@@ ,int@@ m) { inti; if(k==@@ n@@ ){@@ if(s@@ >@@ l@@ )@@ l=@@ s@@ ;} else{ for(i=k@@ +1;i<=@@ n;i++) if(a@@ [i-1]@@ <=@@ m) measure@@ (i,@@ s@@ +1,@@ a[i@@ -1]); measure@@ (n,@@ s,@@ m); } } voidmain() { inti; scanf("%d",&n); for(i=0;i<n;i++) scanf("%d",&a[i]); measure@@ (@@ 0,0,@@ 10000@@ ); printf("%d\n",@@ l); }  
c -1
h -1
intmain() { inta[@@ 20000],@@ n,@@ i,j,k; i=0; k=1; scanf("%d",&n); if(n==1) { scanf("%d",&a[i]); printf("%d",a[i]); } else { scanf("%d",&a[i]); printf("%d",a[i]); for(i=1;i<@@ n@@ ;i++@@ ,k++) { scanf("%d",&a[i]); for(j=0;j<i;j++) { if(a[i]==a[j]) break; } if(k@@ <(@@ n-1@@ )) {@@ if(i==@@ j) printf("%d",@@ a[i]);} else { for(j=0;j<i;j++) { if(a[i]==a[j]) break; } if(i==@@ j) printf("%d",a[i]); } }} return0; }  
c -1
h -1
0

intn,m,@@ i; inta[100]; intb[100@@ ]; void@@ passed@@ (intx,inty) { intj,@@ t; for(i=1;i<@@ x;i++) { for(j=0;j<i;j++) { if(a@@ [i-j@@ ]<@@ a[i@@ -1-j@@ ]) { t=@@ a[i@@ -j@@ ]; a[i@@ -j@@ ]=a[i@@ -1-j@@ ]; a[i@@ -1-j@@ ]=t; } elsebreak; } } for(i=1;i<@@ y;i++) { for(j=0;j<i;j++) { if(b@@ [i-j@@ ]@@ <b@@ [i-1@@ -j@@ ]) { t=@@ b@@ [i-j@@ ]; b@@ [i-j@@ ]=@@ b@@ [i-1@@ -j@@ ]; b@@ [i-1@@ -j@@ ]=t; } elsebreak; } } printf("%d",a[0]); for(i=1;i<@@ x@@ ;i++)@@ printf("%d",a[i]); for(i=0;i<@@ y@@ ;i++)@@ printf("%d",b[i]); } intmain() { scanf("%d%d",&n,&m); for(i=0;i<n;i++)@@ scanf("%d",&a[i]); for(i=0;i<m;i++)@@ scanf("%d",&b[i]); passed@@ (n,@@ m); }  
c -1
h -1
intmain() { inti,j,@@ sum[@@ 25],@@ a[@@ 25],b[@@ 25],@@ k,@@ max=1; scanf("%d",&k); for(i=0;i<k;i++) scanf("%d",&a[i]); for(i=0;i<k;i++) sum@@ [i]=1; sum@@ [k-1]@@ =1; for(i=k@@ -1@@ ;i>=1;i--) { for(j=i-1;j>=0;j--) { if(sum@@ [i]>=@@ sum@@ [j]&&@@ a[j]@@ >=@@ a[i]) sum@@ [j]=@@ sum[i]@@ +1; } } for(i=0;i<k;i++) {@@ if(sum@@ [i]>max) max=@@ sum[i]@@ ;} printf("%d",max); }  
c -1
h -1
0

voidmain() { intc[@@ 16]; inti,j,k,@@ num; for(;@@ c@@ [0]@@ !=@@ (@@ -1)@@ ;) {@@ num=0; scanf("%d",&@@ c@@ [0]); if(c@@ [0]==@@ (@@ -1)@@ )break; for(i=1;i<@@ 16@@ ;i++) { scanf("%d",&@@ c[i]); if(c@@ [i]@@ ==0)break; } for(j=0;j<i;j++) { for(k=0;k<i;k++) { if(@@ 2*@@ c@@ [k]==@@ c[j]@@ ){@@ num+=@@ 1@@ ;} } } printf("%d\n",num); } }  
c -1
h -1
intmain() { intn=0,@@ k=0,@@ j,@@ i,@@ a[@@ 16],@@ m=0; do { for(i=0;i<=@@ 15;i++) { cin>>a[i]; n++; if(a[i]==0)break; if(a[i]==@@ (@@ -1)@@ )break; } if(a[0]==-1)break; for(j=0;j<n;j++) { for(k=j+1;k<@@ n;k++) { if(a[j]==@@ a[k]@@ *2@@ ||@@ a[k]==@@ a[j]@@ *2) m++; } } cout<<@@ m@@ <<endl; m=0; n=0; }while(@@ a[0]@@ !=@@ (@@ -1)); return0; }  
c -1
h -1
1


voidmain() { intn,i,j; intmax@@ ,@@ p; int@@ mwj@@ ; int@@ shu@@ [1000]; char@@ zuo@@ [1000][@@ 30]; int@@ w@@ [26]; for(i=0;i<26;i++) w@@ [i]=0; scanf("%d",&n); for(i=0;i<n;i++) { scanf("%d%s",&@@ shu@@ [i],@@ zuo@@ [i]); for(j=0;j<strlen(@@ zuo@@ [i]@@ );j++) { w@@ [@@ (@@ zuo@@ [i][j]@@ -65@@ )@@ ]=@@ w@@ [@@ (@@ zuo@@ [i][j]@@ -65@@ )@@ ]+1; } } max=@@ w@@ [0]@@ ;p@@ =0; for(i=0;i<26;i++) { if(w@@ [i]>max) { max=@@ w@@ [i]; p=i; } } printf("%c\n",@@ p@@ +65); printf("%d\n",max); for(i=0;i<n;i++) { for(j=0;j<strlen(@@ zuo@@ [i]@@ );j++) { mwj@@ =@@ zuo@@ [i][j]; if(@@ mwj@@ ==@@ p@@ +65) { printf("%d\n",@@ shu@@ [i]); break; } } } }  
c -1
h -1
structbook {int@@ id; char@@ aut@@ [26]; }; intmain() { intm,n,@@ i,j,k; inta[@@ 27@@ ]={0}; structbook@@ cal@@ [@@ 1001]; scanf("%d",&m); for(i=0;i<m;i++) { scanf("%d%s",&@@ cal@@ [i].@@ id,@@ cal@@ [i].@@ aut@@ ); } for(j=@@ 65@@ ;j<@@ 91@@ ;j++) {@@ for(i=0;i<m;i++) {@@ for(k=0;k<@@ 27@@ ;k++) {if(@@ cal@@ [i].@@ aut@@ [k]==@@ j) a@@ [j@@ -65]++; } } } intmax=0,@@ t; for(i=0;i<26;i++) { if(a[i]>max) {max=@@ a[i]; t=i; } } printf("%c\n%d\n",@@ t@@ +65@@ ,max); for(i=0;i<m;i++) { for(j=0;j<26;j++) { if(@@ cal@@ [i].@@ aut@@ [j]==@@ t@@ +65) printf("%d\n",@@ cal@@ [i].id); } } return0; }  
c -1
h -1
1


intmain() { inta,@@ n,@@ i; intf@@ [@@ 20001@@ ]={0}; cin>>n; for(i=1;i<=n;i++) { cin>>a; if(f@@ [a@@ ]==0) { if(i==1) cout<<@@ a; else cout<<""<<@@ a; f@@ [a@@ ]=1; } } return0; }  
c -1
h -1
main() { introw,col,@@ n,@@ sum,@@ a,b,c,d,@@ s; long@@ pic@@ [100][100]; scanf("%d\n",&n); for(row=0;row<n;@@ row++){ for(col=0;col<n;col@@ ++) {scanf("%d",&@@ pic@@ [@@ row][col@@ ]@@ );} } sum=0; for(row=0;row<n;@@ row++){ for(col=0;col<n;col@@ ++) {if((@@ pic@@ [@@ row][col@@ ]==0) &&(@@ pic@@ [@@ row-1@@ ][col@@ -1@@ ]==255@@ ) &&(@@ pic@@ [@@ row-1@@ ][col@@ ]==255@@ ) &&(@@ pic@@ [@@ row][col@@ -1@@ ]==255@@ )) {@@ a=@@ row; b=@@ col@@ ;} } } for(row@@ =@@ n-1;@@ row@@ >=0;@@ row@@ --){ for(col@@ =@@ n-1;@@ col@@ >=0;@@ col@@ --) {if((@@ pic@@ [@@ row][col@@ ]==0) &&(@@ pic@@ [@@ row@@ +1@@ ][col@@ +1@@ ]==255@@ ) &&(@@ pic@@ [@@ row@@ +1@@ ][col@@ ]==255@@ ) &&(@@ pic@@ [@@ row][col@@ +1@@ ]==255@@ )) {@@ c=@@ row; d=@@ col@@ ;} } } s=(@@ c-a-1)*(d-b-1); printf("%d",s); return0; }  
c -1
h -1
0

intmain() { inti,j,@@ row,col,@@ m,n; inta[100][100]; scanf("%d%d",&row,&col); for(i=0;i<row;i++) for(j=0;j<col;j++) scanf("%d",&a[i][j]); if(row@@ <=col@@ ){ for(m=0;m@@ <row@@ ;m++) for(n=0;n@@ <=@@ m;@@ n++) printf("%d\n",@@ a[n@@ ][m@@ -n@@ ]); for(m=@@ row@@ ;m@@ <col@@ ;m++) for(n=0;n@@ <row@@ ;n++) printf("%d\n",@@ a[n@@ ][m@@ -n@@ ]); for(m=@@ col@@ ;m@@ <(@@ col@@ +row@@ );@@ m@@ ++) for(n@@ =(m@@ -col@@ +1@@ );@@ n@@ <row@@ ;n++) printf("%d\n",@@ a[n@@ ][m@@ -n@@ ]); } else{ for(m=0;m@@ <col@@ ;m++) for(n=0;n@@ <=@@ m;@@ n++) printf("%d\n",@@ a[n@@ ][m@@ -n@@ ]); for(m=@@ col@@ ;m@@ <row@@ ;m++) for(n=@@ col@@ -1;@@ n@@ >=0@@ ;n@@ --) printf("%d\n",@@ a[m@@ -n@@ ][n@@ ]); for(m=@@ row@@ ;m@@ <(@@ col@@ +row@@ );@@ m@@ ++) for(n=@@ col@@ -1;@@ n@@ >=@@ (m@@ -@@ row@@ +1@@ );@@ n@@ --) printf("%d\n",@@ a[m@@ -n@@ ][n@@ ]); } return0; }  
c -1
h -1
intmain() { inta[@@ 101][101]; intt,@@ i,j,@@ sum=0; intm,n,@@ k; int(*p)@@ [@@ 101@@ ]=@@ NULL@@ ; cin>>k; for(t=0;t@@ <k;@@ t++) { sum=0; memset(a,0,@@ sizeof(a)); cin>>m>>n; for(i=0;i<m;i++) for(j=0;j<n;j++) cin>>a[i][j]; p=a; for(i=0;i<=@@ n-2@@ ;i++)@@ sum+=*(@@ *(p+@@ 0)@@ +i); p=a; for(i=0;i<=@@ m@@ -2@@ ;i++)@@ sum+=@@ *(*(p+i)@@ +n-1); p=a; for(i=1;i<=@@ n-1@@ ;i++)@@ sum+=@@ *(*(p@@ +m-1)@@ +i); p=a; for(i=1;i<=@@ m-1@@ ;i++)@@ sum+=@@ *(*(p+i)@@ +@@ 0); cout<<sum<<endl; } return0; }  
c -1
h -1
0

intmain() { inta[100][100]; intn,@@ row,col,@@ i,j; scanf("%d%d",&row,&col); for(i=0;i<=@@ row-1;i++) for(j=0;j<=@@ col@@ -1;j++) scanf("%d",&a[i][j]); if(row@@ >=@@ col) { for(n=0;n@@ <=col@@ -1;@@ n++) for(i=0;i<=@@ n;i++)@@ printf("%d\n",a[i]@@ [n@@ -i]); for(n=@@ col@@ ;n@@ <=row@@ -1;@@ n++) for(i=@@ n-@@ col@@ +1;i<=@@ n;i++)@@ printf("%d\n",a[i]@@ [n@@ -i]); for(n=@@ row@@ ;n@@ <=@@ row+col-2@@ ;n++) for(i=@@ n-@@ col@@ +1;i<=@@ row-1@@ ;i++)@@ printf("%d\n",a[i]@@ [n@@ -i]); } else { for(n=0;n@@ <=row@@ -1;@@ n++) for(i=0;i<=@@ n;i++)@@ printf("%d\n",a[i]@@ [n@@ -i]); for(n=@@ row@@ ;n@@ <=col@@ -1;@@ n++) for(i=0;i<=@@ row-1@@ ;i++)@@ printf("%d\n",a[i]@@ [n@@ -i]); for(n=@@ col@@ ;n@@ <=@@ row+col-2@@ ;n++) for(i=@@ n-@@ col@@ +1;i<=@@ row-1@@ ;i++)@@ printf("%d\n",a[i]@@ [n@@ -i]); } return0; }  
c -1
h -1
main() { int@@ Y@@ ,@@ M@@ ,@@ D@@ ; scanf("%d%d%d",&@@ Y@@ ,&@@ M@@ ,&@@ D); if(@@ Y@@ %@@ 400@@ ==0&&@@ Y@@ %@@ 4000@@ !=0) { if(M@@ ==1) printf("%d",D@@ ); if(M==@@ 2) printf("%d",D@@ +31@@ ); if(M==@@ 3) printf("%d",D+@@ 60@@ ); if(M==@@ 4) printf("%d",D+@@ 91@@ ); if(M==@@ 5) printf("%d",D+@@ 121@@ ); if(M==@@ 6) printf("%d",D+@@ 151@@ ); if(M==@@ 7) printf("%d",D+@@ 182@@ ); if(M==@@ 8) printf("%d",D+@@ 213@@ ); if(M==@@ 9) printf("%d",D+@@ 244@@ ); if(M==@@ 10) printf("%d",D+@@ 274@@ ); if(M==@@ 11) printf("%d",D+@@ 305@@ ); if(M==@@ 12) printf("%d",D+@@ 335@@ ); } elseif(@@ Y@@ %4==0&&@@ Y@@ %@@ 100!=0) { if(M@@ ==1) printf("%d",D@@ ); if(M==@@ 2) printf("%d",D@@ +31@@ ); if(M==@@ 3) printf("%d",D+@@ 60@@ ); if(M==@@ 4) printf("%d",D+@@ 91@@ ); if(M==@@ 5) printf("%d",D+@@ 121@@ ); if(M==@@ 6) printf("%d",D+@@ 151@@ ); if(M==@@ 7) printf("%d",D+@@ 182@@ ); if(M==@@ 8) printf("%d",D+@@ 213@@ ); if(M==@@ 9) printf("%d",D+@@ 244@@ ); if(M==@@ 10) printf("%d",D+@@ 274@@ ); if(M==@@ 11) printf("%d",D+@@ 305@@ ); if(M==@@ 12) printf("%d",D+@@ 335@@ ); } else { if(M@@ ==1) printf("%d",D@@ ); if(M==@@ 2) printf("%d",D@@ +31@@ ); if(M==@@ 3) printf("%d",D+@@ 59@@ ); if(M==@@ 4) printf("%d",D+@@ 90@@ ); if(M==@@ 5) printf("%d",D+@@ 120@@ ); if(M==@@ 6) printf("%d",D+@@ 150@@ ); if(M==@@ 7) printf("%d",D+@@ 181@@ ); if(M==@@ 8) printf("%d",D+@@ 212@@ ); if(M==@@ 9) printf("%d",D+@@ 243@@ ); if(M==@@ 10) printf("%d",D+@@ 273@@ ); if(M==@@ 11) printf("%d",D+@@ 304@@ ); if(M==@@ 12) printf("%d",D+@@ 334@@ ); } }  
c -1
h -1
0

struct { charname@@ [20]; intnum; }@@ book[1000]; intmain() { intn,i,j,@@ max=0,@@ m=0; scanf("%d",&n); intc[@@ 26]={0}; for(i=0;i<n;i++) { scanf("%d%s",&book[i].num,@@ book[i].name); } for(i=0;i<n;i++) { for(j=0;j<26;j++) { strchr(@@ book[i].@@ name@@ ,'@@ A'+@@ j)@@ ?@@ c[j]@@ ++@@ :@@ 0@@ ; } } for(j=0;j<26;j++) { if(c@@ [j]@@ >max) { max=@@ c[j]; m@@ =j; } } printf("%c\n%d\n",@@ 'A'+@@ m,@@ c[m@@ ]); for(i=0;i<n;i++) { strchr(@@ book[i].@@ name@@ ,'@@ A'+@@ m)@@ ?@@ printf("%d\n",book[i].@@ num@@ )@@ :@@ 0@@ ; } return0; }  
c -1
h -1
intmain() { intn,k,@@ num[@@ 1000],@@ i,j,@@ p=0; scanf("%d%d",&n,&k); for(i=1;i<=n;i++) scanf("%d",&@@ num@@ [i@@ -1]); for(i=1;i<=n-1;i++) { for(j=i+1;j<=n;j++) if(num@@ [i-1]@@ +@@ num@@ [j-1@@ ]==@@ k) { p=p@@ +1; break; } if(p@@ >0@@ )break; } if(p@@ >0@@ )@@ printf("yes"); elseprintf("no"); return0; }  
c -1
h -1
0

struct@@ worker { int@@ name@@ ; char@@ au@@ [20]; struct@@ worker@@ *next; }; struct@@ help { charauthor@@ ; int@@ max; }; struct@@ worker@@ *creat@@ (intm) { struct@@ worker@@ *@@ p1,*p2,*@@ p; inti; p1=p2=(struct@@ worker@@ *)malloc(sizeof(struct@@ worker@@ )); scanf("%d%s",&p1->@@ name,@@ p1->@@ au); p=@@ p1; for(i=0;i<m-1;i++) { p1=(struct@@ worker@@ *)malloc(sizeof(struct@@ worker@@ )); scanf("%d%s",&p1->@@ name,@@ p1->@@ au); p2->next=p1; p2=p1; } p2->next=NULL; return@@ p; } voidprint(struct@@ worker@@ *p@@ ) { struct@@ worker@@ *@@ p1; p1=@@ p; while(p1!=NULL) { printf("%d@@ %s@@ \n",@@ p1->name@@ ,@@ p1->@@ au); p1=p1->next; } } void@@ most@@ (struct@@ worker@@ *p@@ ) { struct@@ worker@@ *p1,*p2; inta[@@ 30@@ ]={0},@@ i,@@ max; charauthor@@ ; struct@@ help@@ t; p1=@@ p; p2=@@ p; while(p1!=NULL) { for(i=0;@@ *(@@ p1->@@ au@@ +i)@@ !='\0';i++) { a[@@ *(@@ p1->@@ au@@ +i)@@ -65@@ ]=a[@@ *(@@ p1->@@ au@@ +i)@@ -65@@ ]+1; } p1=p1->next; } for(i=0,@@ max@@ =0;i<@@ 26;i++) { if(a[i]@@ >max)max=@@ a[i]; } for(i=0;i<26;i++) { if(a[i]==@@ max@@ )@@ author@@ =i+65; } printf("%c\n%d\n",@@ author@@ ,max); p1=@@ p; while(p1!=NULL) { for(i=0;@@ *(@@ p1->@@ au@@ +i)@@ !='\0';i++) { if(*(@@ p1->@@ au@@ +i)@@ ==@@ author@@ )@@ printf("%d\n",@@ p1->@@ name); } p1=p1->next; } } voidmain() { struct@@ worker@@ *@@ p1,*@@ p; struct@@ help@@ t; intm; charc; scanf("%d",&m); p=@@ creat@@ (m); p1=@@ p; most@@ (@@ p1); }  
c -1
h -1
intmain() { intn,i,j,a[@@ 20001@@ ],@@ flag@@ [@@ 20001@@ ]={0},@@ k=0; scanf("%d",&n); for(i=0;i<n;i++) scanf("%d",&a[i]); for(i=0;i<n;i++) { for(j=i+1;j<n;j++) { if(a[j]==a[i]) flag@@ [j]@@ =1; } if(flag@@ [i]@@ ==0&&@@ k@@ ==0) { printf("%d",a[i]); k++; } elseif(@@ flag@@ [i]==0) printf("%d",a[i]); } }  
c -1
h -1
0

voidmain() { intk,@@ m,@@ n@@ ,*@@ q,@@ (*p)@@ [100],@@ h@@ =0,@@ i,j,@@ l,@@ t; p=@@ (int@@ (@@ *)@@ [100@@ ])@@ malloc(@@ 100@@ *@@ 100*sizeof(int)); q=@@ (int*)malloc(@@ 100*sizeof(int)); scanf("%d\n",&@@ k); for(i=0;i<k;i++) { scanf("%d%d",&m,&n); for(j=0;j<m;j++) { for(l=0;l<n;l++) { scanf("%d",@@ *(p@@ +j)+@@ l); } } for(t=0;t@@ <n;@@ t++) { *(q@@ +i)@@ =*(@@ q@@ +i)@@ +*(@@ *p@@ +@@ t)@@ +*(@@ *(p@@ +m-1)@@ +@@ t); } for(t=0;t@@ <m;@@ t++) { *(q@@ +i)@@ =*(@@ q@@ +i)@@ +*@@ *(p+@@ t)@@ +*(@@ *(p+@@ t@@ )+@@ n-1); } *(q@@ +i)@@ =*(@@ q@@ +i)@@ -*@@ *p@@ -*@@ (*p@@ +@@ n-1)@@ -*(@@ *(p@@ +m-1)@@ )@@ -*(@@ *(p@@ +m-1)@@ +n-1); } for(i=0;i<k;i++) { printf("%d\n",@@ *(q@@ +i)); } }  
c -1
h -1
intmain() { intdays@@ [13]={0,31,28,31,30,31,30,31,31,30,31,30,31}; intyear,month,day; int@@ isleapyear@@ ; scanf("%d%d%d",&year,&month,&day); isleapyear@@ =(@@ year%4==0&&year%100!=0@@ )||@@ year%@@ 400==0@@ ; if(@@ isleapyear@@ &&@@ month==@@ 2@@ &&(@@ day@@ <@@ 1@@ ||@@ day@@ >@@ 29@@ )) { printf("@@ Illegal@@ input@@ .@@ \n"); return-1; } if(@@ isleapyear@@ &&@@ month@@ !=@@ 2@@ &&(@@ day@@ <@@ 1@@ ||@@ day@@ >@@ days@@ [@@ month@@ ]@@ )) { printf("@@ Illegal@@ input@@ .@@ \n"); return-1; } if(!@@ isleapyear@@ &&(@@ day@@ <@@ 1@@ ||@@ day@@ >@@ days@@ [@@ month@@ ]@@ )) { printf("@@ Illegal@@ input@@ .@@ \n"); return-1; } intn=0; inti; for(i=0;i<@@ month;i++) { n+=@@ days@@ [i]; } n+=@@ day; if(month@@ >2@@ &&@@ isleapyear@@ ) n++; printf("%d",n); return0; }  
c -1
h -1
0

intmain() { inta[@@ 1000][@@ 1000]={0}; intn,i,j,@@ b,@@ c,d,@@ e; cin>>n; for(i=0;i<n;i++) { for(j=0;j<n;j++) { cin>>a[i][j]; } } for(i=1;i<n-1;i++) { for(j=1;j<@@ n-1;j++) { if(a[i]@@ [j-1]@@ ==0&&@@ a[i-1]@@ [j]@@ ==0&&@@ a[i-1]@@ [j-1]@@ ==0) { b=i; c@@ =j; } } } for(i=1;i<n-1;i++) { for(j=1;j<@@ n-1;j++) { if(a[i]@@ [j+1]@@ ==0&&@@ a[i+1@@ ][j]@@ ==0&&@@ a[i+1@@ ]@@ [j+1@@ ]==0) { d@@ =i; e@@ =j; } } } cout<<(@@ d-b@@ +1)*(@@ e@@ -c@@ +1)@@ <<endl; return0; }  
c -1
h -1
intmain() { inta[100][100],@@ i,j,@@ s,@@ n,@@ b[2@@ ],c[@@ 2@@ ],@@ q=0,@@ p=0; scanf("%d",&n); for(i=0;i<=n-1;i++) { for(j=0;j<=n-1;j++) scanf("%d",&a[i][j]); } for(i=0;i<=n-1;i++) { s=0; for(j=0;j<=n-1;j++) { if(a[i][j]==0) s@@ +=1; } if(s@@ >2) { b[p@@ ]=i; p@@ +=1; } } for(i=0;i<=n-1;i++) { s=0; for(j=0;j<=n-1;j++) { if(a[j]@@ [i]==0) s@@ +=1; } if(s@@ >2) { c[@@ q@@ ]=i; q@@ +=1; } } printf("%d",(@@ b[1@@ ]-@@ b[0]@@ -1)*(@@ c[@@ 1@@ ]-@@ c@@ [0]@@ -1)); return0; }  
c -1
h -1
1


void@@ mysort@@ (int*@@ pn@@ ,intn) { inti,j; inttemp; for(j=0;j<n;j++) { for(i=j@@ +1@@ ;i<n;i++) { if(@@ pn@@ [j]>@@ pn@@ [i]) { temp=@@ pn@@ [j]; pn@@ [j]=@@ pn@@ [i]; pn@@ [i]=@@ temp; } } } } void@@ merge@@ (int*@@ pn@@ ,@@ intn,@@ int*@@ pm@@ ,int@@ m) { inti; printf("%d",@@ pn@@ [0]); for(i=1;i<n;i++) { printf("%d",@@ pn@@ [i]); } for(i=0;i<m;i++) { printf("%d",@@ pm@@ [i]); } } intmain(intargc,char*argv[]) { intm,n,@@ i,@@ *@@ pm@@ ,@@ *@@ pn@@ ; scanf("%d%d",&@@ m,@@ &@@ n); pm@@ =@@ (int*)@@ calloc@@ (m,@@ sizeof(int@@ )); pn@@ =@@ (int*)@@ calloc@@ (n,@@ sizeof(int@@ )); for(i=0;i<m;i++) { scanf("%d",&(@@ pm@@ [i]@@ )); } for(i=0;i<n;i++) { scanf("%d",&(@@ pn@@ [i]@@ )); } mysort@@ (@@ pm@@ ,@@ m); mysort@@ (@@ pn@@ ,n); merge@@ (@@ pm@@ ,@@ m,@@ pn@@ ,n); free(@@ pm@@ ); free(@@ pn@@ ); return0; }  
c -1
h -1
intm,n; inti,j,k; int@@ q@@ [@@ 10000],@@ p[@@ 10000]; void@@ a@@ () { cin>>m>>n; for(i=0;i<m;i++) { cin>>@@ p[i]; } for(i=0;i<n;i++) { cin>>@@ q@@ [i]; } } void@@ b@@ (intx[],int@@ y@@ []) { for(i=1;i<m;i++) { for(j=0;j<m@@ -i;j++) if(x@@ [j]>@@ x@@ [j+1]) { k=@@ x@@ [j+1]; x@@ [j+1]=@@ x@@ [j]; x@@ [j]=@@ k; } } for(i=1;i<n;i++) { for(j=0;j<n-i;j++) if(y@@ [j]>@@ y@@ [j+1]) { k=@@ y@@ [j+1]; y@@ [j+1]=@@ y@@ [j]; y@@ [j]=@@ k; } } for(i=0;i<m;i++) { cout<<@@ x[i]@@ <<''; } for(i=0;i<n-1;i++) { cout<<@@ y@@ [i]@@ <<''; } cout<<@@ y[@@ n-1@@ ]<<endl; } intmain() { a@@ (); b@@ (p,@@ q); return(0); }  
c -1
h -1
1


intmain(){ intm=0,@@ k,@@ n,@@ i=0,j=0,@@ a[1000]; scanf("%d%d",&n,&k); for(i=0;i<n;i++){ scanf("%d",&a[i]); } i=0; for(j=0;j<n;j++){ i=0; for(i=0;i<n;i++){ if(i!=@@ j){ if((@@ a[i]+@@ a[j]@@ )==@@ k){ m=1; break; } } } } if(m@@ ==1){@@ printf("yes");} else{printf("no");} return0; }  
c -1
h -1
structstu { intnum; intchi; intmath; ints; structstu*next; }; structstu*@@ creat@@ (intn) { inti; structstu*@@ head; structstu*@@ p1,*p2; p1=p2=(struct@@ stu@@ *)malloc(LEN); scanf("%d%d%d",&p1->num,&p1->@@ chi@@ ,&p1->math); head=p1; for(i=1;i<n;i++) { p1=(struct@@ stu*)malloc(sizeof(structstu)); scanf("%d%d%d",&p1->num,&p1->@@ chi@@ ,&p1->math); p2->next=p1; p2=p1; } p2->next=NULL; return(head); } voidmain() { inti,n,@@ t,@@ m; structstu@@ *head,*p1,*p2; scanf("%d",&n); head=creat(n); p1=head; for(i=0;i<n;i++) { p1->@@ s=@@ p1->@@ chi@@ +p1->@@ math; p1=p1->next; } p1=head; p2=p1->next; for(i=0;i<3;i++) { while(@@ p2@@ !=NULL) { if(@@ p2->@@ s@@ >@@ p1->@@ s) { t=@@ p2->@@ s; p2->@@ s=@@ p1->@@ s; p1->@@ s=@@ t; m=@@ p2->@@ num; p2->@@ num=@@ p1->@@ num; p1->@@ num=@@ m; }@@ p2=p2->next; }@@ printf("%d%d\n",@@ p1->@@ num,p1->@@ s); if(i==@@ 2@@ )break; p1=p1->next@@ ;@@ p2=p1->next; } }  
c -1
h -1
0

intmain() { charstr[256],@@ sub[256],@@ re@@ [256]; inti,@@ k=0,@@ j=0; gets(str); gets(sub); gets(@@ re); int@@ n=strlen(@@ str); int@@ m=strlen(@@ sub); for(i=0;i<n;i++) { if(@@ sub@@ [k]==@@ str@@ [i])@@ k++; else { k=0; if(@@ sub@@ [k]==@@ str@@ [i]) { k++; } } if(k==@@ m) { for(j=0;j<m;j++) { str@@ [i+j@@ -m@@ +1]=@@ re@@ [j]; } break; } } printf("%s\n",@@ str); return0; }  
c -1
h -1
intmain() { inti,j,k,@@ n,m,@@ height@@ [25],@@ len@@ [25],@@ num[@@ 25]; cin>>n; for(i=0;i<n;i++) cin>>@@ height@@ [i]; for(i=0;i<n;i++) len@@ [i]=0; for(i=n-1;i>=0;i--) { m=0; for(j=i+1;j<=@@ n-1;j++) if(@@ height@@ [j]<=@@ height@@ [i]) { num[m@@ ]=@@ j; m++; } for(k=0;k<=@@ m-1@@ ;k++) if(@@ len@@ [i]<@@ len@@ [@@ num@@ [k]@@ ]) len@@ [i]=@@ len@@ [@@ num@@ [k]@@ ]; len@@ [i]++; } m=0; for(i=0;i<n;i++) if(@@ len@@ [i]>@@ m) m=@@ len@@ [i]; cout<<@@ m@@ <<endl; return0; }  
c -1
h -1
0

intn,@@ t,@@ cnt@@ ; voidf@@ (int@@ left@@ ,int@@ last@@ ){ if(@@ left@@ <@@ last@@ ){@@ if(@@ left@@ ==1)@@ cnt@@ ++;@@ return@@ ;} for(inti=@@ last@@ ;i<=@@ left@@ ;i++)@@ if(@@ left@@ %i==0)@@ f(@@ left@@ /i,i); } intmain(){ scanf("%d",&t); while(t@@ --){ scanf("%d",&n); cnt@@ =0;@@ f(@@ n,@@ 2); printf("%d\n",@@ cnt@@ ); } return0; }  
c -1
h -1
intmain() { inti,j,n,@@ t,@@ m,@@ x,@@ l; inta[@@ 15]; for(m@@ =1;@@ ;m++) { for(x@@ =1;@@ x@@ <=@@ 16@@ ;x@@ ++) { cin>>@@ l; if(l@@ !=0) { a[x@@ -1@@ ]=@@ l; } else { n=@@ x@@ -1; t=0; for(i=0;i<=@@ n-2;i++) { for(j=i+1;j<=@@ n-1;j++) { if((@@ a[i]==@@ 2*@@ a[j]@@ )||(@@ a[j]==2*@@ a[i]@@ )) t++; } } cout<<t@@ <<endl; break; } } } return0; }  
c -1
h -1
0

voidinput@@ (int*@@ p1,int*p2@@ ,int@@ **@@ pA@@ ,int@@ **@@ pB@@ ) { inti; scanf("%d@@ %d",@@ p1,@@ p2@@ ); *@@ pA@@ =@@ (int*)malloc(@@ (*@@ p1@@ )@@ *sizeof(int)); *@@ pB@@ =@@ (int*)malloc(@@ (*@@ p2@@ )@@ *sizeof(int)); for(i=0;i<*@@ p1@@ ;i++) scanf("%d",@@ *@@ pA@@ +i); for(i=0;i<*@@ p2@@ ;i++) scanf("%d",@@ *@@ pB@@ +i); } voidsort@@ (intp@@ ,int*@@ pX@@ ) { inti,j,temp; for(i=0;i<p@@ ;i++) { for(j=@@ p@@ -1@@ ;j>i;j--) { if(@@ pX@@ [j]<@@ pX@@ [j-1]) { temp=@@ pX@@ [j]; pX@@ [j]=@@ pX@@ [j-1]; pX@@ [j-1]=@@ temp; } } } } voidcombine@@ (int@@ p1@@ ,int@@ p2@@ ,int*@@ pA@@ ,int*@@ pB@@ ,int@@ **@@ pC@@ ) { *@@ pC@@ =@@ (int*)malloc(@@ (@@ p1@@ +@@ p2@@ )@@ *sizeof(int)); inti; for(i=0;i<@@ p1@@ ;i++) (*@@ pC@@ )@@ [i]=@@ pA@@ [i]; for(i=0;i<@@ p2@@ ;i++) (*@@ pC@@ )@@ [@@ p1@@ +i]=@@ pB@@ [i]; free(@@ pA@@ ); free(@@ pB@@ ); } voidoutput@@ (intp@@ ,int*@@ pC@@ ) { inti; for(i=0;i<p@@ -1;i++) printf("%d",@@ pC@@ [i]); printf("%d\n",@@ pC@@ [p@@ -1]); free(@@ pC@@ ); } main() { int@@ p1,@@ p2@@ ,@@ *@@ pA@@ ,@@ *@@ pB@@ ,@@ *@@ pC@@ ; input@@ (@@ &@@ p1@@ ,&@@ p2@@ ,&@@ pA@@ ,&@@ pB@@ ); sort(@@ p1,@@ pA@@ ); sort(@@ p2@@ ,@@ pB@@ ); combine@@ (@@ p1,@@ p2@@ ,@@ pA@@ ,@@ pB@@ ,&@@ pC@@ ); output@@ (@@ p1@@ +@@ p2@@ ,@@ pC@@ ); }  
c -1
h -1
void@@ get@@ (intm,int@@ n); void@@ swap@@ (intm,int@@ n); void@@ put@@ (intm,int@@ n); inta[@@ 1001@@ ],b[@@ 1001]; voidmain() { intm,n; scanf("%d%d",&m,&n); get@@ (@@ m,n); swap(@@ m,n); put@@ (@@ m,n); } void@@ get@@ (intm,int@@ n) { inti; for(i=0;i<m;i++) scanf("%d",&a[i]); for(i=0;i<n;i++) scanf("%d",&b[i]); } void@@ swap@@ (intm,int@@ n) { intj,@@ k,@@ c; for(j=0;j<m-1;j++) for(k=0;k<@@ m-1@@ -j@@ ;k++) if(a[k]@@ >@@ a[k@@ +1@@ ]){ c=@@ a[k]; a[k]=a[k@@ +1]; a[k@@ +1]=@@ c; } for(j=0;j<n-1;j++) for(k=0;k<@@ n-1@@ -j@@ ;k++) if(@@ b[k@@ ]>@@ b[k@@ +1@@ ]){ c=@@ b[k@@ ]; b[k]=@@ b[k@@ +1]; b[k@@ +1]=@@ c; } } void@@ put@@ (intm,int@@ n) { int@@ l; for(l=0;l<@@ m;@@ l++) printf("%d",@@ a[l@@ ]); for(l=0;l<n;@@ l++){ if(l@@ ==@@ n-1) printf("%d",@@ b[l@@ ]); else printf("%d",@@ b[l@@ ]); } }  
c -1
h -1
1


intsum@@ (intm,@@ intn,@@ inta[@@ ][100@@ ]) { inti,@@ sum=0; for(i=0;i<n;i++) { sum+=*(*(a@@ +m-1)@@ +i); sum+=*(@@ (*@@ a)@@ +i); } for(i=1;i<=@@ m@@ -2;i++) { sum+=@@ **@@ (a@@ +i); sum+=@@ *(*(a+i)@@ +n-1); } returnsum; } intmain() { intm,n,@@ i,k,@@ j,@@ p,@@ a[100][100]; cin>>@@ p; for(i=1;i<=@@ p@@ ;i++) { cin>>m>>n; for(j=0;j<m;j++) { for(k=0;k<n;k++) { cin>>a[j]@@ [k]; } } cout<<sum@@ (@@ m,n,@@ a)@@ <<endl; } return0; }  
c -1
h -1
intmain() { intk,@@ m,n; scanf("%d",&k); for(intl@@ =1;@@ l@@ <=k;@@ l++){ scanf("%d%d",&m,&n); intsz[@@ m@@ ][n]; for(intj=0;j<@@ m@@ ;j++){ for(inti=0;i<n;i++){ scanf("%d",&(@@ sz[j]@@ [i]@@ )); } } int@@ a=0; for(intj=0;j<@@ m@@ ;j++){ for(inti=0;i<n;i++){ a@@ +=@@ sz[j]@@ [i]; } } for(intj=1;j<@@ m-1@@ ;j++){ for(inti=1;i<@@ n-1;i++){ a@@ -=@@ sz[j]@@ [i]; } } printf("%d\n",@@ a); } return0; }  
c -1
h -1
1


intm,n,@@ num; void@@ dfs@@ (inti,int@@ j) { intx; if(i==1) { num++; return; } for(x@@ =j@@ ;x@@ <=i@@ ;x@@ ++) if(i@@ %@@ x@@ ==0) dfs@@ (i@@ /@@ x,@@ x); } intmain() { cin>>m; while(m@@ >0){ num=0; cin>>n; dfs@@ (n,@@ 2); cout<<num<<endl; m@@ --; } }  
c -1
h -1
intmain(){ intm,@@ e,@@ n,@@ i,j,k,@@ s[@@ 1000]; intt=0; scanf("%d%d",&n,&m); for(i=0;i<n;i++){ scanf("%d",&(@@ s[i]@@ )); } for(k=1;k<@@ n;k++){ for(i=0;i<n-@@ k;i++){ e=@@ s@@ [i+1]; s@@ [i+1]=@@ s[i]; s[i]=@@ e; }} for(i=0;i<n;i++){ for(j=i+1;j<n;j++){ if((@@ s[i]@@ +@@ s[j]@@ )==@@ m){ t=1; } }} if(t@@ ==1){ printf("yes"); }else{ printf("no"); } return0; }  
c -1
h -1
0

struct@@ z { int@@ g; int@@ h; }; intmain() { intk,i,j,@@ w; struct@@ z@@ a[@@ 50]; scanf("%d",&k); for(i=0;i<k;i++) {scanf("%d",&@@ a[i].@@ g@@ );} for(i=0;i<k;i++) {@@ a[i].@@ h@@ =1;} for(i=k-2;i>=0;i--) { for(j=i+1;j<k;j++) { if(a[i].@@ g@@ >=@@ a[j].@@ g@@ ) { if(a[i].@@ h@@ <@@ a[j].@@ h@@ +1) a[i].@@ h=@@ a[j].@@ h@@ +1; } } } for(i=0;i<@@ k-1;i++) { for(j=i+1;j<k;j++) { if(a[i].@@ h@@ <@@ a[j].@@ h@@ ) { w=@@ a[i].@@ h; a[i].@@ h=@@ a[j].@@ h; a[j].@@ h=@@ w; } } } printf("%d\n",@@ a[0].@@ h); return0; }  
c -1
h -1
intmain() { intn,@@ i,j@@ ,*@@ b,@@ max,@@ maxn@@ =0@@ ,*@@ a; scanf("%d",&n); a=@@ (int*)malloc(sizeof(int)*n); b=@@ (int*)malloc(sizeof(int)*n); for(i=0;i<n;i++) { scanf("%d",a@@ +i); b[i]=0; } for(i=n-1;i@@ >-@@ 1@@ ;i--) { max=0; for(j=n-1;j>i;j--) if(a[j]<=@@ a[i]&&@@ b[j]@@ >=@@ max) max=@@ b[j]; b[i]=@@ max+1; if(b[i]>@@ maxn@@ ) maxn=@@ b[i]; } printf("%d\n",@@ maxn@@ ); }  
c -1
h -1
1


intmain(intargc,char*argv[]) { intk; scanf("%d",&k); inti,j,@@ h@@ [26],@@ amount@@ [26],@@ s=0; for(i=0;i<k;i++) { scanf("%d",&h[i]); amount@@ [i]=1; } for(i=k-2;i>=0;i--) { for(j=i+1;j<k;j++) { if((@@ h@@ [i]>=@@ h@@ [j]@@ )&&(@@ amount@@ [i]<@@ amount@@ [j]@@ +1@@ )) amount@@ [i]=@@ amount@@ [j]+1; } } for(i=0;i<k;i++) { if(@@ amount@@ [i]>@@ s) s=@@ amount@@ [i]; } printf("%d\n",s); return0; }  
c -1
h -1
intmain(intargc,char*argv[]) { inti,j,@@ a,@@ a1@@ =0,@@ a2@@ =0,@@ b1@@ =0,@@ b2@@ =0,@@ s; intx[@@ 11@@ ][@@ 11]; scanf("%d",&a); for(i=0;i<a;i++){ for(j=0;j<a@@ ;j++){ scanf("%d",&@@ x@@ [i][j]); } } for(i=0;i<a;i++){ for(j=0;j<a@@ ;j++){ if(x@@ [i][j]==0){ a1@@ =i; b1@@ =j; break; } } if(x@@ [@@ a1@@ ][@@ b1@@ ]==0){ break; } } for(i=a@@ -1@@ ;i>=0;i--){ for(j=@@ a@@ -1@@ ;j>=0;j--){ if(x@@ [i][j]==0){ a2@@ =i; b2@@ =j; break; } } if(x@@ [i][j]==0){ break; } } s=(@@ b2-b1@@ -1)*(@@ a2-a1@@ -1); printf("\n@@ %d\n",@@ s); return0; }  
c -1
h -1
0

intmain() { introw,col,@@ s@@ [100][100],@@ i,@@ k; scanf("%d%d",&row,&col); for(i=0;i<row;i++) { for(k=0;k<col@@ ;k++) { scanf("%d",&@@ s[i]@@ [k]); } } if(col@@ <row) { for(i=0;i<=@@ (@@ row+col@@ );i++) { for(k=0;k<@@ row@@ &&k@@ <=@@ i;k++) { if((i@@ -k@@ )@@ >=@@ col) continue; else printf("%d\n",@@ s[k]@@ [i-@@ k@@ ]); } } } elseif(@@ col@@ >=@@ row) { for(i=0;i<=@@ (@@ col@@ +row@@ );i++) { for(k=0;k<=@@ i@@ &&k@@ <row@@ ;k++) { if((i@@ -k@@ )@@ >=@@ col) continue; else printf("%d\n",@@ s[k]@@ [i-@@ k@@ ]); } } } return0; }  
c -1
h -1
intmain() { inta[16],@@ i,j,k,@@ count=0; while(1) { cin>>a[0]; if(a[0]==-1) break; for(i=1;i<=@@ 15;i++) { cin>>a[i]; if(a[i]==0) break; } for(j=0;j<=@@ i@@ -2@@ ;j++) { for(k=j+1@@ ;k<=@@ i-1;k++) { if(a[k]@@ /@@ a[j]==@@ 2@@ &&@@ a[k]@@ %@@ a[j]@@ ==0||@@ a[j]@@ %@@ a[k]@@ ==0&&@@ a[j]@@ /@@ a[k]==@@ 2) count++; } } cout<<count<<endl; count=0; } return0; }  
c -1
h -1
0

intmain() { chara[@@ 10000@@ ],b[@@ 10000]; int@@ c,d,@@ m=0,@@ z=0; double@@ e,f,@@ g,@@ h; scanf("%lf",&@@ h); scanf("%s",a); scanf("%s",b); for(inti@@ =0;@@ a[i]@@ !='\0';i++) { if((@@ a[i]=='@@ A')||(@@ a[i]=='@@ T')||(@@ a[i]=='@@ C')||(@@ a[i]=='@@ G')) { z@@ ++; } } for(inti@@ =0;@@ b[i]@@ !='\0';i++) { if((@@ b[i]=='@@ A')||(@@ b[i]=='@@ T')||(@@ b[i]=='@@ C')||(@@ b[i]=='@@ G')) { z@@ ++; } } c@@ =strlen(a); d@@ =strlen(b); if(c==@@ d) { for(inti@@ =0;@@ a[i]@@ !='\0';i++) { if(a[i]==b[i]) { m++; } } f=@@ m; g=@@ c; e=@@ f@@ /@@ g; if(e@@ >=@@ h@@ &&@@ z@@ ==@@ 2*@@ c) { printf("yes"); } elseif(@@ e@@ <@@ h@@ &&@@ z@@ ==@@ 2*@@ c){ printf("no"); } } if(c@@ !=@@ d@@ ||@@ z@@ !=@@ 2*@@ c) { printf("error"); } return0; }  
c -1
h -1
intmain() { struct@@ time { int@@ year; int@@ month@@ ; int@@ date; int@@ dayoftheyear@@ ; }@@ nn@@ ; scanf("%d%d%d",&@@ nn.@@ year@@ ,&@@ nn.@@ month,&@@ nn.@@ date@@ ); if(((@@ nn.@@ year%@@ 4==0)&&(@@ nn.@@ year%@@ 100@@ ==0)@@ )||(@@ nn.@@ year%400==0)) { switch(@@ nn.@@ month@@ ){ case1: nn.@@ dayoftheyear@@ =@@ nn.@@ date; break; case2: nn.@@ dayoftheyear@@ =@@ nn.@@ date+@@ jan@@ ; break; case3: nn.@@ dayoftheyear@@ =@@ nn.@@ date+@@ jan+feb@@ +1; break; case4: nn.@@ dayoftheyear@@ =@@ nn.@@ date+@@ jan+feb+mar@@ +1; break; case5: nn.@@ dayoftheyear@@ =@@ nn.@@ date+@@ jan+feb+mar@@ +@@ apr@@ +1; break; case6: nn.@@ dayoftheyear@@ =@@ nn.@@ date+@@ jan+feb+mar@@ +@@ apr@@ +@@ may@@ +1; break; case7: nn.@@ dayoftheyear@@ =@@ nn.@@ date+@@ jan+feb+mar@@ +@@ apr@@ +@@ may@@ +@@ jun@@ +1; break; case8: nn.@@ dayoftheyear@@ =@@ nn.@@ date+@@ jan+feb+mar@@ +@@ apr@@ +@@ may@@ +@@ jun@@ +@@ jul@@ +1; break; case9: nn.@@ dayoftheyear@@ =@@ nn.@@ date+@@ jan+feb+mar@@ +@@ apr@@ +@@ may@@ +@@ jun@@ +@@ jul@@ +@@ aug@@ +1; break; case10: nn.@@ dayoftheyear@@ =@@ nn.@@ date+@@ jan+feb+mar@@ +@@ apr@@ +@@ may@@ +@@ jun@@ +@@ jul@@ +@@ aug@@ +@@ sep@@ +1; break; case11: nn.@@ dayoftheyear@@ =@@ nn.@@ date+@@ jan+feb+mar@@ +@@ apr@@ +@@ may@@ +@@ jun@@ +@@ jul@@ +@@ aug@@ +@@ sep@@ +@@ oct@@ +1; break; case12: nn.@@ dayoftheyear@@ =@@ nn.@@ date+@@ jan+feb+mar@@ +@@ apr@@ +@@ may@@ +@@ jun@@ +@@ jul@@ +@@ aug@@ +@@ sep@@ +@@ oct@@ +@@ nov@@ +1; break; } } else { switch(@@ nn.@@ month@@ ){ case1: nn.@@ dayoftheyear@@ =@@ nn.@@ date; break; case2: nn.@@ dayoftheyear@@ =@@ nn.@@ date+@@ jan@@ ; break; case3: nn.@@ dayoftheyear@@ =@@ nn.@@ date+@@ jan+feb@@ ; break; case4: nn.@@ dayoftheyear@@ =@@ nn.@@ date+@@ jan+feb+mar@@ ; break; case5: nn.@@ dayoftheyear@@ =@@ nn.@@ date+@@ jan+feb+mar@@ +@@ apr@@ ; break; case6: nn.@@ dayoftheyear@@ =@@ nn.@@ date+@@ jan+feb+mar@@ +@@ apr@@ +@@ may@@ ; break; case7: nn.@@ dayoftheyear@@ =@@ nn.@@ date+@@ jan+feb+mar@@ +@@ apr@@ +@@ may@@ +@@ jun@@ ; break; case8: nn.@@ dayoftheyear@@ =@@ nn.@@ date+@@ jan+feb+mar@@ +@@ apr@@ +@@ may@@ +@@ jun@@ +@@ jul@@ ; break; case9: nn.@@ dayoftheyear@@ =@@ nn.@@ date+@@ jan+feb+mar@@ +@@ apr@@ +@@ may@@ +@@ jun@@ +@@ jul@@ +@@ aug@@ ; break; case10: nn.@@ dayoftheyear@@ =@@ nn.@@ date+@@ jan+feb+mar@@ +@@ apr@@ +@@ may@@ +@@ jun@@ +@@ jul@@ +@@ aug@@ +@@ sep@@ ; break; case11: nn.@@ dayoftheyear@@ =@@ nn.@@ date+@@ jan+feb+mar@@ +@@ apr@@ +@@ may@@ +@@ jun@@ +@@ jul@@ +@@ aug@@ +@@ sep@@ +@@ oct@@ ; break; case12: nn.@@ dayoftheyear@@ =@@ nn.@@ date+@@ jan+feb+mar@@ +@@ apr@@ +@@ may@@ +@@ jun@@ +@@ jul@@ +@@ aug@@ +@@ sep@@ +@@ oct@@ +@@ nov@@ ; break; } } printf("%d\n",@@ nn.@@ dayoftheyear@@ ); return0; }  
c -1
h -1
0

intmain(){ inti,n; double@@ x,@@ t=0; scanf("%lf",&x); chara[500],b[500]; scanf("%s%s",a,b); if(strlen(a)!=strlen(b@@ ))@@ printf("error"); else{ n@@ =strlen(a); for(i=0;a[i]@@ !=@@ '\0@@ '&&@@ b[i]@@ !='\0';i++){ if((@@ a[i]=='@@ A'||a[i]=='T'||a[i]=='@@ C'||@@ a[i]=='@@ G')&&(@@ b[i]=='@@ A'||@@ b[i]=='@@ T'||@@ b[i]=='@@ C'||@@ b[i]=='@@ G')){ if(a[i]==b[i]@@ )@@ t++; }else{ printf("error"); return0; } } if(t@@ /@@ n@@ >@@ x)@@ printf("yes"); elseprintf("no"); } return0; }  
c -1
h -1
intmain() { intn@@ [100][100],@@ i,k,@@ j,@@ s@@ [100],@@ t,@@ p,@@ m,@@ l@@ [100]; double@@ a; for(i=0;i<100;i++) { scanf("%d",&@@ n[i]@@ [0]); if(n@@ [i][0]@@ ==-1)break; else { for(j=1;j<@@ 100@@ ;j++) { scanf("%d",&@@ n@@ [i][j]); if(n@@ [i][j]@@ ==0)break; l[i]=@@ j; } } } for(k=0;k<i;k++) { s[k]@@ =0; for(t=0;t@@ <=@@ l@@ [k]@@ ;t++) { for(m=@@ t@@ ;m@@ <=@@ l@@ [k]@@ ;m++) { a@@ =(double)@@ n@@ [k@@ ][@@ t@@ ]@@ /@@ n@@ [k@@ ][@@ m]; if(a==@@ 2@@ ||@@ a@@ ==0@@ .@@ 5@@ )@@ s@@ [k]=@@ s[k]@@ +1; } } } for(p=0;p@@ <i@@ ;p++) printf("%d\n",@@ s[p@@ ]); return0; }  
c -1
h -1
0

intmain() { int@@ c,@@ a[@@ 20000],@@ n,@@ i,@@ l=0,@@ p,@@ k=0,@@ j; scanf("%d",&n); for(i=0;i<n;i++) { l=0; scanf("%d",&@@ c); for(j=0;j<k;j++) { if(c==@@ a[j]) l=l@@ +1; } if(l@@ ==0) { a[k]=@@ c; k++; } } for(i=0;i<k;i++) { if(i==0) printf("%d",a[i]); else { printf("%d",a[i]); } } getchar(); getchar(); }  
c -1
h -1
intmain(){ intn,i,j,@@ num,@@ l,@@ k,@@ p,q; scanf("%d",&n); int@@ a1,@@ b1,@@ a2,@@ b2@@ ; int@@ square@@ [@@ chang@@ ][@@ kuan@@ ]; for(i=0;i<n;i++) { for(j=0;j<n;j++) { scanf("%d",&@@ square@@ [i][j]); } } for(l=0;l<n;l++) { for(k=0;k<n;k++) { if(@@ square@@ [l@@ ][k@@ ]==0){ a1@@ =@@ l; b1@@ =k; } } } for(p=@@ (n-1@@ );@@ p@@ >=0@@ ;p@@ --) { for(q@@ =(@@ n-1@@ );@@ q@@ >=0@@ ;q@@ --) { if(@@ square@@ [p@@ ][q@@ ]==0){ a2@@ =p; b2@@ =@@ q; } } } num@@ =(@@ a1@@ -@@ a2@@ -1)*(@@ b1@@ -@@ b2@@ -1); printf("%d",@@ num); return0; }  
c -1
h -1
0

intmain() { intm; scanf("%d",&m); inta[1000]; chars[@@ 1000][@@ 26]; inti,j; for(i=0;i<m;i++) { scanf("%d%s",&a[i],@@ s[i]); } char@@ x; intmax=0; char@@ maxx@@ ;@@ int@@ l; for(x@@ ='A'@@ ;x@@ <=@@ 'Z'@@ ;x@@ ++) { l=0; for(i=0;i<m;i++) { for(j=0;j<26;j++) { if(s@@ [i][j]==@@ x@@ )break; } if(j!=@@ 26@@ )@@ l++; } if(l@@ >max){max=@@ l@@ ;@@ maxx@@ =@@ x@@ ;} } printf("%c\n%d\n",@@ maxx@@ ,max); for(i=0;i<m;i++) { for(j=0;j<26;j++) { if(s@@ [i][j]==@@ maxx@@ )break; } if(j!=@@ 26@@ )@@ printf("%d\n",a[i]); } return0; }  
c -1
h -1
intmain(){ inti,n,@@ m; double@@ c,d; chara[501],b[501]; scanf("%lf",&@@ c); scanf("%s%s",a,b); m=strlen(a); n=0; for(i=0;a[i]@@ !='\0';i++){ if(a[i]!='A'&&a[i]!='T'&&a[i]!='C'&&a[i]!='@@ G'){ break; } if(@@ b[i]!='A'&&b[i]!='T'&&b[i]!='C'&&b[i]!='@@ G'){ break; } } if(strlen(a)!=strlen(b@@ )){ printf("error"); }elseif(@@ i@@ <@@ m){ printf("error"); }elseif(@@ i>=@@ m){ for(i=0;a[i]@@ !='\0';i++){ if(a[i]==b[i]){ n@@ +=1; } } d@@ =1.0*@@ n/@@ m; if(d@@ >@@ c){ printf("yes"); }else{ printf("no"); } } return0; }  
c -1
h -1
0

int@@ sort@@ (int@@ ,int@@ ,int); intmain() { intt=0; cin>>t; int@@ k=1; for(k=1;k<=@@ t@@ ;k++) { int@@ vacancy@@ =0; intnum@@ =1; cin>>num; inti=1; int@@ temp=@@ num; for(i=2;i<=@@ temp@@ ;i++) { while(@@ temp@@ %i==0) { vacancy@@ =@@ vacancy@@ +1; temp=@@ temp@@ /@@ i; } } cout<<@@ sort(@@ 1,@@ vacancy@@ ,@@ num@@ )<<endl; } return0; } int@@ sort@@ (int@@ start@@ ,int@@ vacancy@@ ,int@@ num) { if(num@@ <@@ start@@ ) return0; if(@@ vacancy@@ ==1) return1; intsum=0; inti=1; for(i=@@ start@@ ;i<=@@ num;i++) { if(num@@ %i==0) { sum=sum+@@ sort(@@ i,@@ vacancy@@ -1,@@ num@@ /i); } } returnsum; }  
c -1
h -1
voidmain() { intc[@@ 15],@@ i,@@ m=0; for(i=0;i<@@ 15;i++) { scanf("%d",&@@ c[i]); if(c@@ [i]==0) { break; } } intk,@@ j,@@ n=0; for(k=0;@@ c@@ [k]@@ !=0@@ ;k++) { for(j=0;@@ c[j]@@ !=0;j++) { if(c@@ [k]==2*@@ c@@ [j]) { n++; } } } printf("%d",n); }  
c -1
h -1
0

inta[@@ 10000]; intb[@@ 10000]; intn,m; void@@ du@@ () { cin>>n>>m; for(inti=0;i<n;i++) cin>>a[i]; for(inti=0;i<m;i++) cin>>b[i]; } void@@ ran@@ () { for(inti=0;i<n;i++) {int@@ temp=a[i]; for(intj=i@@ -1@@ ;j>=0;j--) { if(a[j]<=@@ temp@@ ) {@@ a[j+1]=@@ temp@@ ;break;} else{@@ a[j+1]=@@ a[j];a[j]=@@ temp;} } } for(inti=0;i<m;i++) {int@@ temp=@@ b[i]; for(intj=i@@ -1@@ ;j>=0;j--) { if(b[j]@@ <=@@ temp@@ ) {@@ b[j+1]=@@ temp@@ ;break;} else{@@ b[j+1]=@@ b[j]@@ ;@@ b[j]=@@ temp;} } } } void@@ he@@ () { for(inti=@@ n@@ ;i<@@ n+m;i++) a[i]=b[i-@@ n]; } void@@ shu@@ () { for(inti=0;i<@@ n+@@ m-1;i++) cout<<a[i]@@ <<''; cout<<a[@@ n+@@ m-1@@ ]; } intmain() { du@@ (); ran@@ (); he@@ (); shu@@ (); return0; }  
c -1
h -1
intmain() { float@@ a[@@ 16]; inti,j,n,@@ t; for(i=0;i<100;i++) { n=0; t=0; scanf("%f",&@@ a[0]); if(a[0]==-1)break; n=n+1; for(j=1;j<@@ 16@@ ;j++) { scanf("%f",&@@ a[j]); if(a[j]@@ ==0)break; n=n+1; } for(i=0;i<n-1;i++) for(j=i+1;j<n;j++) { if(a[j]==@@ a[i]@@ *2@@ ||@@ a[j]@@ ==0@@ .@@ 5@@ *@@ a[i]) t++; } printf("%d\n",t); } return0; }  
c -1
h -1
0

main() { int@@ nn@@ ,@@ ii@@ ; scanf("%d",&@@ nn@@ ); for(@@ ii@@ =1;@@ ii@@ <=@@ nn@@ ;@@ ii@@ ++) { intn,m,@@ t,@@ i,j,@@ x,y,@@ sum=0; scanf("%d%d",&@@ y,&@@ x); for(i=1;i<=@@ y;i++) { for(j=1;j<=@@ x;j++) { scanf("%d",&t); if(i==1||i==@@ y@@ ||j==@@ x@@ ||j@@ ==1) {@@ sum+=@@ t;} } } printf("%d\n",sum); } }  
c -1
h -1
intmain() { intn,i,j; scanf("%d",&n); inta[n]; for(i=0;i<n;i++) { scanf("%d",&a[i]); } if(n==1) printf("%d",a[0]); else { printf("%d",a[0]); for(i=1;i<n-1;i++) { for(j=0;j<i;j++) { if(a[i]==a[j]) break; } if(i==@@ j@@ &&a[i]@@ !=@@ a[i-1@@ ]) printf("%d",a[i]); } for(j=0;j<n-1;j++) { if(a[@@ n-1@@ ]==@@ a[j]) break; } if(@@ n-1@@ ==@@ j@@ &&@@ a[@@ n-1@@ ]!=@@ a[@@ n-2@@ ]) printf("%d",a[@@ n-1]); } getchar(); getchar(); }  
c -1
h -1
0

intmain() { int@@ I@@ ,@@ m,n,@@ a[100][100]; inti,j,k,@@ sum; scanf("%d",&@@ I@@ ); for(k=0;k<@@ I@@ ;k++) { sum=0; scanf("%d%d",&m,&n); for(i=0;i<m;i++) { for(j=0;j<n;j++) { scanf("%d",&a[i][j]); } } for(i=0;i<m;i++) sum=sum+@@ a[i][0]+@@ a[i][n-1]; for(i=0;i<n;i++) sum=sum+@@ a[0]@@ [i]+@@ a[m-1]@@ [i]; sum=sum-@@ a[0][0]@@ -@@ a[0][@@ n-1]-@@ a[m-1][@@ n-1]-@@ a[m-1][@@ 0]; if((@@ m@@ ==@@ n@@ )&&(@@ m@@ ==1@@ )) sum=@@ a[0][@@ 0]; printf("%d\n",sum); } return0; }  
c -1
h -1
intk; intnum[@@ 26]; int@@ val@@ [26]; intmain() { cin>>k; for(inti=0;i<k;i++) { cin>>num[i]; val@@ [i]=0; } for(inti=@@ k-1@@ ;i>=0;i--) { if(i==@@ k@@ -1) val@@ [i]=1; else { int@@ temp=0; for(intj=i@@ ;j<@@ k;j++) { if(num@@ [i]>=@@ num[j]@@ &&@@ val@@ [j]>=@@ temp@@ ) { temp=@@ val@@ [j]; } } val@@ [i]=@@ temp@@ +1; } } intsum=0; for(inti=0;i<k;i++) { if(@@ val@@ [i]>=@@ sum) sum=@@ val@@ [i]; } cout<<sum<<endl; return0; }  
c -1
h -1
0

main() {@@ inti,j,k,@@ sum,@@ mm@@ =0; char@@ string1@@ [@@ NUM@@ +@@ 10]; char@@ subString@@ [@@ NUM@@ +@@ 10]; char@@ replacement@@ [@@ NUM@@ +@@ 10]; for(k=0;k<@@ NUM@@ +@@ 10@@ ;k++) { string1@@ [k]@@ ='@@ 0'; subString@@ [k]@@ ='@@ 0'; replacement@@ [k]@@ ='@@ 0'; } scanf("%s",@@ string1@@ ); scanf("%s",@@ subString@@ ); scanf("%s",@@ replacement); int@@ len1=strlen(@@ string1@@ ); int@@ len2=strlen(@@ subString@@ ); int@@ len3@@ =strlen(@@ replacement); for(i=0;i<len1@@ -len2@@ +1;i++) {@@ sum=0; if(@@ string1@@ [i]==@@ subString@@ [0]) { for(j=0;j<len2@@ ;j++) {if(@@ subString@@ [j]==@@ string1@@ [i+j@@ ]) sum++; } if(sum@@ ==@@ len2) { for(k=0;k<i;k++) printf("%c",@@ string1@@ [k]); for(k=0;k<@@ len3@@ ;k++) printf("%c",@@ replacement@@ [k]); for(k=i+@@ len2@@ ;k<@@ len1@@ ;k++) printf("%c",@@ string1@@ [k]); } if(sum@@ ==@@ len2) break; } } if(i==@@ len1@@ -len2@@ +1) for(k=0;k<@@ len1@@ ;k++) printf("%c",@@ string1@@ [k]); getchar(); getchar(); getchar(); getchar(); getchar(); getchar(); }  
c -1
h -1
intf@@ (intx,int@@ y){ inta[@@ x@@ ],b[@@ y@@ ]; intt,@@ i,j; for(i=0;i<x;i++){ cin>>@@ a[i];} for(j=0;j<@@ y@@ ;j++){ cin>>@@ b[j]@@ ;} for(i=0;i<x@@ -1;i++){ for(j=0;j<@@ x@@ -1@@ -i;j++){ if(a[j]>a[j+1@@ ]){ t=a[j]; a[j]=a[j+1]; a[j+1]=t; } } } for(i=0;i<@@ y@@ -1;i++){ for(j=0;j<@@ y@@ -1@@ -i;j++){ if(b[j]>b@@ [j+1@@ ]){ t=@@ b[j]; b[j]=b[j+1]; b[j+1]=@@ t; } } } for(i=0;i<x;i++){ if(i==0)@@ cout<<a[i]; else@@ cout<<""<<a[i]; } for(i=0;i<@@ y@@ ;i++){ cout<<""<<@@ b[i]; } } intmain(){ int@@ x,y; cin>>x@@ >>@@ y; f(@@ x,@@ y); return0; }  
c -1
h -1
0

voidf@@ (int*@@ p1,int*p2@@ ,int@@ m,intn) { do@@ {printf("%d\n",@@ *p2@@ );@@ p2@@ +=@@ n-1@@ ;} while((@@ p2@@ -@@ p1@@ +1)@@ %n@@ &&(@@ p2@@ -@@ p1@@ +1)@@ <=@@ m@@ *n); } intmain(intargc,char*argv[]) { intr,@@ l,@@ i,j@@ ,*@@ q; scanf("%d%d",&@@ r@@ ,&@@ l); int@@ *p@@ [l@@ +@@ r@@ -1]; inta[@@ r@@ ][l@@ ]; for(i=1;i<=@@ r;i++) for(j=1;j<=@@ l@@ ;j++) scanf("%d",&@@ a[i-1]@@ [j-1]); for(i=1;i<=@@ l@@ ;i++) p@@ [i-1]@@ =&@@ a[0]@@ [i-1]; for(i=@@ l@@ +1;i<=@@ l@@ +@@ r@@ -1;i++) p@@ [i-1]@@ =&@@ a[i@@ -l@@ ][l@@ -1]; q@@ =&@@ a[0][@@ 0]; for(i=1;i<=@@ r@@ +l@@ -1;i++) f(@@ q,@@ p@@ [i-1@@ ],@@ r,@@ l); return0; }  
c -1
h -1
intmain(){ intn,i,j,k,@@ sum@@ [100],@@ jz@@ [100][100],@@ h,@@ l,@@ p,q; scanf("%d",&n); for(i=0;i<n;i++){ sum@@ [i]=0; scanf("%d%d@@ "@@ ,&@@ h,@@ &@@ l); for(j=0;j<@@ h@@ ;j++){ for(k=0;k<@@ l@@ ;k++){ scanf("%d",&@@ jz@@ [j]@@ [k]); } } for(p=0;p@@ <@@ l@@ -1@@ ;p++){ sum[i]=sum[i]+@@ jz@@ [0][@@ p@@ ]; } for(q=0;q@@ <@@ h@@ -1;@@ q@@ ++){ sum[i]=sum[i]+@@ jz@@ [q@@ ][l@@ -1]; } for(p=@@ l@@ -1@@ ;p@@ >0@@ ;p@@ --){ sum[i]=sum[i]+@@ jz@@ [h@@ -1@@ ][p@@ ]; } for(q=@@ h@@ -1;@@ q@@ >0@@ ;q@@ --){ sum[i]=sum[i]+@@ jz@@ [q@@ ][0]; } } for(i=0;i<n;i++){ printf("%d\n",sum@@ [i]); } return0; }  
c -1
h -1
0

intmain() { intk,m,n,@@ *p; cin>>k; for(inti=0;i<k;i++) { cin>>m>>n; intsum=0; inta[100][100@@ ]={0}; for(intj=0;j<m;j++) for(intl@@ =0;@@ l@@ <n;@@ l++) cin>>a[j]@@ [l]; p=@@ a[0]; for(intj=0;j<n;j++) sum+=@@ *p@@ ++; if(m@@ -1@@ !=0) { p=@@ a[@@ m-1@@ ]; for(intj=0;j<n;j++) sum+=@@ *p@@ ++; } for(intj=1;j<@@ m-1;j++) { p=@@ a[j]; sum+=@@ *p; sum+=@@ *(p+@@ n-1); } cout<<sum<<endl; } return0; }  
c -1
h -1
intmain() { intyear,month,day,@@ n,@@ i,@@ t=0; scanf("%d%d%d",&year,&month,&day); inta[@@ 13]={0,31,28,31,30,31,30,31,31,30,31,30,31}; for(i=0;i<@@ month;i++) { t=t+@@ a[i]; } if(month@@ >=@@ 3) if(year%@@ 4==0) if(year%@@ 100==0) if(year%@@ 400==0) n=@@ t@@ +1@@ +day; else n=@@ t@@ +day; else n=@@ t@@ +1@@ +day; else n=@@ t@@ +day; else n=@@ t@@ +day; printf("%d",n); return0; }  
c -1
h -1
0

intmain() { inti,n,@@ k,@@ j,@@ r=0,@@ m=0; int@@ lens@@ ,@@ lena@@ ; chars[256],@@ a[100],b[100],@@ c[100],@@ d@@ [100]; scanf("%s%s%s",@@ s,@@ a,b); lens@@ =strlen(s); lena@@ =strlen(a); for(i=0;i<@@ lens@@ ;i++) { m=0; for(k=i@@ ;k<@@ i+@@ lena@@ ;k++) { if(a[k@@ -i@@ ]!=@@ s[k]@@ )@@ m=1; } if(m==0) { for(n=0;n@@ <i@@ ;n++) c[@@ n@@ ]=@@ s[@@ n]; c[@@ n@@ ]='\0'; for(j=i@@ +@@ lena@@ ;j<@@ lens@@ ;j++) d@@ [j-i@@ -@@ lena@@ ]=@@ s[j]; d@@ [j-i@@ -@@ lena@@ ]='\0'; r@@ =1; printf("%s@@ %s%s",@@ c,@@ b,@@ d); break; } } if(r@@ ==0)@@ printf("%s",s); return0; }  
c -1
h -1
struct@@ score { long@@ num; int@@ yu@@ ; int@@ shu; intsum; }stu[100000]; voidmain() { long@@ i,n,@@ j,@@ k; intt; scanf("%ld",&n); for(i=0;i<n;i++) { scanf("%ld%d%d",&@@ stu[i].@@ num,&stu[i].@@ yu@@ ,&stu[i].@@ shu); stu[i].sum=stu[i].@@ yu@@ +stu[i].@@ shu; } for(i=0;i<3;i++) { for(j=0;j<n@@ -i-1;j++) if(stu[j].@@ sum>@@ stu[j+1].@@ sum) { t=@@ stu[j].@@ sum; stu[j].@@ sum=@@ stu[j+1].@@ sum; stu[j+1].@@ sum=@@ t; } } for(k=@@ n-1@@ ;k@@ >@@ n-@@ 4@@ ;k--) { if(k!=@@ n-1@@ &&@@ stu[k].@@ sum@@ ==@@ stu@@ [k+1@@ ].@@ sum@@ )continue; for(i=0;i<n;i++) { if(@@ stu[k].@@ sum@@ ==@@ (@@ stu[i].@@ yu@@ +stu[i].@@ shu@@ )) {@@ printf("%ld@@ %ld@@ \n",@@ stu[i].@@ num,@@ stu[k].@@ sum); if(k==@@ n-@@ 3)@@ break;} } } }  
c -1
h -1
0

int@@ F@@ (intn,int@@ a) { if(n@@ ==1)@@ return1; if(a@@ ==1)@@ return0; if(n%@@ a@@ ==0)@@ return@@ F@@ (n@@ /@@ a,@@ a)@@ +@@ F@@ (n,@@ a@@ -1); return@@ F@@ (n,@@ a@@ -1); } main() { intn,a,@@ i; scanf("%d",&n); for(i=1;i<=n;i++) { scanf("%d",&a); printf("%d\n",@@ F@@ (a,@@ a@@ )); } }  
c -1
h -1
intmain(intargc,char*argv[]) { inti,@@ a,@@ n,@@ b=0,@@ c=0,@@ d=0; scanf("%d",&n); for(i=1;i<=@@ n*@@ n;i++) { scanf("%d",&a); if(a==0) { b++; c++; d=@@ b@@ >@@ d@@ ?@@ b@@ :@@ d; } if(a==@@ 255) b=0; } b@@ =(@@ c@@ -2*@@ d@@ )@@ /2; printf("%d\n",@@ (@@ b@@ *(@@ d@@ -2@@ )@@ )); return0; }  
c -1
h -1
0

intmain() { intn; scanf("%d",&n); inta[@@ 1000@@ ]={0},b[@@ 1000]={0},@@ c@@ [100]={0},@@ l=0; chars[@@ 1000@@ ][100@@ ]={0},@@ m@@ [26]={0},@@ p; inti=0,j=0,@@ k=0,@@ t=0; for(i=0;i<n;i++) { scanf("%d%s",&a[i],@@ s[i]); } for(i@@ ='A'@@ ;i<=@@ 'Z'@@ ;i++) { m@@ [j]@@ =i; for(t=0;t@@ <n;@@ t++) { for(k=0;@@ s[@@ t@@ ][k@@ ]!='\0'@@ ;k++) { if(s[@@ t@@ ][k@@ ]==@@ m@@ [j]) { c[j]@@ ++; break; } } } j++; } l=0; for(i=0;i<26;i++) { if(c@@ [i]>@@ l) { l=@@ c[i]; p=@@ m[i]; } } printf("%c\n",@@ p); printf("%d\n",@@ l); for(i=0;i<n;i++) { k=0; for(j=0;@@ s@@ [i][j]@@ !='\0';j++) { if(s@@ [i][j]==@@ p) { k=1; break; } } if(k==1) { printf("%d\n",a[i]); } } return0; }  
c -1
h -1
ints[@@ 10000@@ ][@@ 10000]; voidmain() { intn,i,j,@@ a1,@@ b1,@@ a2,@@ b2@@ ,@@ sum,@@ flag; scanf("%d",&n); for(i=0;i<n;i++) for(j=0;j<n;j++) scanf("%d",&s@@ [i][j]); for(i=0;i<n;i++) { flag=0; for(j=0;j<n;j++) { if(s@@ [i][j]==0) { a1@@ =i; b1@@ =j; flag=1; break; } } if(flag@@ ==1)break; } for(i=n-1@@ ;i>0;i--) { flag=0; for(j=n-1@@ ;j>0;j--) { if(s@@ [i][j]==0) { a2@@ =i; b2@@ =j; flag=1; break; } } if(flag@@ ==1)break; } sum=(@@ a2-a1@@ -1)*(@@ b2-b1@@ -1); printf("%d",sum); }  
c -1
h -1
0

structbook{ intnum; chars[@@ 27]; }@@ shu@@ [1000]; intmain(){ intn,i,@@ l@@ ,j,@@ max; charname@@ ; int@@ letter@@ [26]={0}; scanf("%d",&n); for(i=0;i<n;i++){ scanf("%d%s",&@@ shu[i].@@ num,&@@ shu[i].@@ s); l=strlen(@@ shu[i].@@ s); for(j=0;j<l@@ ;j++){ letter@@ [@@ (@@ shu[i].@@ s[j]@@ -65@@ )@@ ]++; } } for(@@ max=@@ letter@@ [0],@@ name@@ =@@ 65@@ ,i@@ =1@@ ;i<@@ 26@@ ;i++){ if(@@ letter@@ [i]@@ >max){ max=@@ letter@@ [i]; name@@ =i+65; } } printf("%c\n%d\n",@@ name@@ ,max); for(i=0;i<n;i++){ l=strlen(@@ shu[i].@@ s); for(j=0;j<l@@ ;j++){ if(@@ shu[i].@@ s@@ [j]==@@ name@@ ){ printf("%d\n",@@ shu[i].@@ num); } } } return0; }  
c -1
h -1
intmain() {@@ intn,a[@@ 20001@@ ],@@ i,j,k,@@ flag=0; scanf("%d",&n); if(n@@ >=1@@ &&n@@ <=@@ 20000@@ ){ for(i=0;i<n;i++) {@@ scanf("%d",&a[i]); if(a[i]@@ <@@ 10@@ ||@@ a[i]@@ >=@@ 100@@ ) scanf("%d",&a[i]); else@@ continue;} printf("%d",a[0]); for(j=1;j<@@ n;j++){ for(k=0;k<j@@ ;k++){ if(a[j]==@@ a[k]) {@@ flag=1; break;} } if(flag==0) printf("%d",@@ a[j]); flag=0; } } return0; }  
c -1
h -1
0

inta[1000]; intmain() { intn,k; inti,j; intm; scanf("%d%d\n",&n,&@@ k); for(i=0;i<n;i++){ scanf("%d",&a[i]); } for(i=0;i<n;i++){ for(j=i+1;j<n;j++){ if((@@ a[i]+@@ a[j]@@ )==@@ k){ m=@@ k; break; } elseif((@@ a[i]+@@ a[j])@@ !=@@ k){ continue; } } } if(m==@@ k)@@ printf("yes"); elseif(m@@ !=@@ k)@@ printf("no"); return0; }  
c -1
h -1
intmain(){ intsz[@@ 1000],@@ n,@@ i,k,@@ d,@@ e; scanf("%d%d",&n,&@@ e); for(i=0;i<n;i++){ scanf("%d",&sz[i]); } for(k=0;k<@@ n-1@@ ;k++){ if(k==@@ n-2@@ ){ printf("no"); break;} for(i=k@@ +1;i<@@ n;i++){ d=@@ sz@@ [k]@@ +sz@@ [i]; if(d@@ ==@@ e@@ ){ printf("yes"); break;} } if(d@@ ==@@ e@@ ){ break;} } return0; }  
c -1
h -1
1


intmain() { intn,k,i,j,@@ l; inta[100@@ ],@@ c[100],@@ d@@ [100]; char@@ b[100@@ ][@@ 11]; scanf("%d",&n); for(i=0;i<n;i++) { scanf("%s",@@ b[i]); scanf("%d",&a[i]); d[i]=@@ a[i]; c[i]=@@ i; } for(j=0;j<n;j++) { for(i=0;i<n-1;i++) { if(d@@ [i]<@@ d@@ [i+1]) { k=@@ d[i]; d[i]=@@ d@@ [i+1]; d@@ [i+1]=@@ k; k=@@ c[i]; c[i]=@@ c@@ [i+1]; c@@ [i+1]=@@ k; } } } for(j=0;j<n;j++) { if(d@@ [j]@@ <60) { l@@ =j; break; } } for(j=0;j<l;j++) { k=@@ c[j]; printf("%s\n",@@ b[k@@ ]); } for(i=0;i<n;i++) { if(a[i]@@ <60) { printf("%s\n",@@ b[i]); } } return0; }  
c -1
h -1
intmain() { inta,b,@@ c,d,@@ e,f,@@ g,@@ h,@@ i,j,k,@@ l,@@ m,n,@@ o@@ ,@@ p,q,@@ r,@@ s,@@ t,@@ u@@ ,@@ v@@ ,@@ w,@@ x; scanf("%d%d%d",&a,&b,&c); d@@ =31+c; e=@@ 59@@ +c; f=@@ 90@@ +c; g=@@ 120@@ +c; h=@@ 151@@ +c; i=@@ 181@@ +c; j=@@ 212@@ +c; k=@@ 243@@ +c; l=@@ 273@@ +c; m=@@ 304@@ +c; n=@@ 334@@ +c; o@@ =@@ 60@@ +c; p=@@ 91@@ +c; q=@@ 121@@ +c; r=@@ 152@@ +c; s=@@ 182@@ +c; t=@@ 213@@ +c; u@@ =@@ 244@@ +c; v@@ =@@ 274@@ +c; w=@@ 305@@ +c; x=@@ 335@@ +c; if(b==1) printf("%d",@@ c); if(b==@@ 2) printf("%d",d); if((@@ b==@@ 3@@ )&&(@@ a%100!=0@@ &&@@ a%@@ 4!=0@@ ||a%@@ 100==0&&@@ a%@@ 400!=0)) printf("%d",@@ e); if((@@ b==@@ 4@@ )&&(@@ a%100!=0@@ &&@@ a%@@ 4!=0@@ ||a%@@ 100==0&&@@ a%@@ 400!=0)) printf("%d",@@ f); if((@@ b==@@ 5@@ )&&(@@ a%100!=0@@ &&@@ a%@@ 4!=0@@ ||a%@@ 100==0&&@@ a%@@ 400!=0)) printf("%d",@@ g@@ ); if((@@ b==@@ 6@@ )&&(@@ a%100!=0@@ &&@@ a%@@ 4!=0@@ ||a%@@ 100==0&&@@ a%@@ 400!=0)) printf("%d",@@ h); if((@@ b==@@ 7@@ )&&(@@ a%100!=0@@ &&@@ a%@@ 4!=0@@ ||a%@@ 100==0&&@@ a%@@ 400!=0)) printf("%d",@@ i); if((@@ b==@@ 8@@ )&&(@@ a%100!=0@@ &&@@ a%@@ 4!=0@@ ||a%@@ 100==0&&@@ a%@@ 400!=0)) printf("%d",@@ j); if((@@ b==@@ 9@@ )&&(@@ a%100!=0@@ &&@@ a%@@ 4!=0@@ ||a%@@ 100==0&&@@ a%@@ 400!=0)) printf("%d",k); if((@@ b==@@ 10@@ )&&(@@ a%100!=0@@ &&@@ a%@@ 4!=0@@ ||a%@@ 100==0&&@@ a%@@ 400!=0)) printf("%d",@@ l); if((@@ b==@@ 11@@ )&&(@@ a%100!=0@@ &&@@ a%@@ 4!=0@@ ||a%@@ 100==0&&@@ a%@@ 400!=0)) printf("%d",m); if((@@ b==@@ 12@@ )&&(@@ a%100!=0@@ &&@@ a%@@ 4!=0@@ ||a%@@ 100==0&&@@ a%@@ 400!=0)) printf("%d",n); if((@@ b==@@ 3@@ )&&(@@ a%100!=0@@ &&@@ a%@@ 4@@ ==0||@@ a%400==0)) printf("%d",@@ o@@ ); if((@@ b==@@ 4@@ )&&(@@ a%100!=0@@ &&@@ a%@@ 4@@ ==0||@@ a%400==0)) printf("%d",@@ p); if((@@ b==@@ 5@@ )&&(@@ a%100!=0@@ &&@@ a%@@ 4@@ ==0||@@ a%400==0)) printf("%d",@@ q); if((@@ b==@@ 6@@ )&&(@@ a%100!=0@@ &&@@ a%@@ 4@@ ==0||@@ a%400==0)) printf("%d",@@ r); if((@@ b==@@ 7@@ )&&(@@ a%100!=0@@ &&@@ a%@@ 4@@ ==0||@@ a%400==0)) printf("%d",s); if((@@ b==@@ 8@@ )&&(@@ a%100!=0@@ &&@@ a%@@ 4@@ ==0||@@ a%400==0)) printf("%d",t); if((@@ b==@@ 9@@ )&&(@@ a%100!=0@@ &&@@ a%@@ 4@@ ==0||@@ a%400==0)) printf("%d",@@ u@@ ); if((@@ b==@@ 10@@ )&&(@@ a%100!=0@@ &&@@ a%@@ 4@@ ==0||@@ a%400==0)) printf("%d",@@ v@@ ); if((@@ b==@@ 11@@ )&&(@@ a%100!=0@@ &&@@ a%@@ 4@@ ==0||@@ a%400==0)) printf("%d",@@ w); if((@@ b==@@ 12@@ )&&(@@ a%100!=0@@ &&@@ a%@@ 4@@ ==0||@@ a%400==0)) printf("%d",x); return0; }  
c -1
h -1
0

intmain() { intm,@@ i,j; scanf("%d",&m); struct@@ Bookinfo { intnumber; char@@ auther@@ [27]; }; struct@@ Bookinfo@@ a[1000]; for(i=0;i<m;i++) scanf("%d%s",&@@ a[i].@@ number,@@ a[i].@@ auther@@ ); struct@@ Author { int@@ count; intnumber@@ [1000]; }; struct@@ Author@@ b[@@ 26]; for(i=0;i<26@@ ;i++)@@ b[i].@@ count=0; intmax@@ ,@@ record@@ ; for(i=0;i<m;i++) { intk; k=strlen(@@ a[i].@@ auther@@ ); for(j=0;j<k;j++) { b[@@ a[i].@@ auther@@ [j]@@ -'A'@@ ].@@ number@@ [@@ b[@@ a[i].@@ auther@@ [j]@@ -'A'@@ ].@@ count@@ ]=@@ a[i].@@ number; b[@@ a[i].@@ auther@@ [j]@@ -'A'@@ ].@@ count++; } } max=@@ b[0]@@ .@@ count; for(i=0;i<26;i++) if(b[i].@@ count@@ >=@@ max) { max=@@ b[i].@@ count; record@@ =i; } printf("%c\n%d\n",@@ record@@ +'A',@@ max); for(i=0;i<@@ max@@ ;i++) printf("%d\n",@@ b[@@ record@@ ].@@ number@@ [i]); return0; }  
c -1
h -1
intmain() { inta,b,c,@@ x; scanf("%d%d%d",&a,&b,&c); if(a%@@ 4==0&&a%100!=0@@ ||a%@@ 400==0) {@@ if(b==1) x=@@ c; elseif(b==@@ 2) x=31+@@ c; elseif(b==@@ 3) x=@@ 60@@ +c; elseif(b==@@ 4) x=@@ 91@@ +c; elseif(b==@@ 5) x=@@ 121@@ +c; elseif(b==@@ 6) x=@@ 152@@ +c; elseif(b==@@ 7) x=@@ 182@@ +c; elseif(b==@@ 8) x=@@ 213@@ +c; elseif(b==@@ 9) x=@@ 244@@ +c; elseif(b==@@ 10) x=@@ 274@@ +c; elseif(b==@@ 11) x=@@ 305@@ +c; elseif(b==@@ 12) x=@@ 335@@ +c; } else {@@ if(b==1) x=@@ c; elseif(b==@@ 2) x=31+@@ c; elseif(b==@@ 3) x=@@ 59@@ +c; elseif(b==@@ 4) x=@@ 90@@ +c; elseif(b==@@ 5) x=@@ 120@@ +c; elseif(b==@@ 6) x=@@ 151@@ +c; elseif(b==@@ 7) x=@@ 181@@ +c; elseif(b==@@ 8) x=@@ 212@@ +c; elseif(b==@@ 9) x=@@ 243@@ +c; elseif(b==@@ 10) x=@@ 273@@ +c; elseif(b==@@ 11) x=@@ 304@@ +c; elseif(b==@@ 12) x=@@ 334@@ +c; } printf("%d\n",x); return0; }  
c -1
h -1
0

intmain() { intnum@@ =0,@@ k=0,@@ n,i,j,@@ a[@@ 50@@ ],@@ max=0,@@ f[@@ 50@@ ]={0}; scanf("%d",&n); for(i=1;i<=n;i++) { scanf("%d",&a[i]); } for(i=1;i<=n;i++) { for(j=1;j<=@@ i;j++) { if(a[i]<=@@ a[j]&&@@ f@@ [i]<@@ f@@ [j]) { f[i]=@@ f@@ [j]; } } f@@ [i]++; if(max<@@ f@@ [i]) { max=@@ f[i]; } } printf("%d",max); return0; }  
c -1
h -1
long@@ intn; structstu { long@@ intnum,@@ chi@@ ,@@ mat@@ ,@@ tot@@ ; }; int@@ comp@@ (constvoid*a,constvoid*@@ b) { return(@@ (struct@@ stu@@ *)@@ b)@@ ->@@ tot@@ -(@@ (struct@@ stu@@ *)@@ a)@@ ->@@ tot@@ ; } structstu@@ a[@@ 100000],@@ b; intmain() { inti,j; scanf("%d",&n); for(i=0;i<n;i++) { scanf("%d%d%d",&a[i].@@ num,&@@ a[i].@@ chi@@ ,&a[i].@@ mat@@ ); a[i].@@ tot@@ =@@ a[i].@@ chi@@ +a[i].@@ mat@@ ; } qsort@@ (a,n,@@ sizeof(struct@@ stu@@ ),@@ comp@@ ); for(i=0;i<3;i++) printf("%d%d\n",@@ a[i].@@ num,@@ a[i].@@ tot@@ ); return0; }  
c -1
h -1
0

intN@@ ; structstu { intnum; char@@ au@@ [50@@ ]; structstu*next; }; structstu*@@ creat@@ () { structstu*@@ p1,*p2,*head; inti; for(i=0;i<N;i++) { p2=p1; p1=@@ Z@@ ; scanf("%d%s",&p1->num,p1->@@ au); p1->next@@ =0; if(i==0)@@ head=p1; elsep2->next=p1; } returnhead; } voidmain() { structstu@@ *head,*p; inti,n,@@ j,@@ max,@@ max1; intc[@@ 26]={0}; int@@ d@@ [26@@ ][@@ 1000]={0}; int@@ e@@ [26]={0}; scanf("%d",&N); head=creat(); for(p=head@@ ;p@@ !=0@@ ;@@ p=p->next) { n=strlen(@@ p->@@ au); for(i=0,j@@ =0;i<n;i++) { c[@@ p->@@ au@@ [i]@@ -'A']++; d[@@ p->@@ au@@ [i]@@ -'A'@@ ][@@ e@@ [@@ p->@@ au@@ [i]@@ -'A'@@ ]++@@ ]=@@ p->@@ num; } } for(i=0,@@ max@@ =0;i<@@ 26;i++) { if(max<@@ c@@ [i]) { max1@@ =i; max=@@ c[i]; } } printf("%c\n",@@ max1@@ +'A'@@ ); printf("%d\n",@@ c[@@ max1@@ ]); i=0; while(@@ d[@@ max1@@ ]@@ [i]!=0) printf("%d\n",@@ d[@@ max1@@ ]@@ [i@@ ++@@ ]); }  
c -1
h -1
intmain(){ doublen,@@ p; inti; intk=0,@@ s=0; char@@ zfc1@@ [500],@@ zfc2@@ [500]; scanf("%lf",&n); scanf("%s",@@ zfc1@@ ); scanf("%s",@@ zfc2@@ ); int@@ a=strlen(@@ zfc1@@ ),@@ b=strlen(@@ zfc2@@ ); if(a!=@@ b){ printf("error"); }else{@@ for(i=0;i<a;i++) {if((@@ zfc1@@ [i]=='A'||@@ zfc1@@ [i]=='T'||@@ zfc1@@ [i]=='C'||@@ zfc1@@ [i]=='@@ G')&&(@@ zfc2@@ [i]=='A'||@@ zfc2@@ [i]=='T'||@@ zfc2@@ [i]=='C'||@@ zfc2@@ [i]=='@@ G')){ s++; }@@ if(@@ zfc1@@ [i]==@@ zfc2@@ [i]){ k++; }} if(s@@ ==@@ a){ p@@ =1.0*@@ k/@@ a; if(p@@ >@@ n@@ ){printf("yes");} else{printf("no");} }else{@@ printf("error");} }@@ return0; }  
c -1
h -1
0

inta[@@ 2000@@ ]={0},b[@@ 1000]={0}; voidread@@ (){ int@@ x,y; cin>>x@@ >>@@ y; for(inti=0;i<@@ x;i++) cin>>a[i]; for(inti=0;i<@@ y;i++) cin>>b[i]; } voidpaixu@@ (int@@ z[@@ ]){ intc; for(inti@@ =0;z@@ [i+@@ 2@@ ]@@ !=0;i++) for(intj@@ =0;z@@ [j+1]@@ !=0;j++) if(z@@ [j]>@@ z@@ [j+1@@ ]){ c=@@ z@@ [j]; z@@ [j]=@@ z@@ [j+1]; z@@ [j+1]=@@ c; } } void@@ addd@@ (intx[],int@@ y[@@ ]){ int@@ q=0; while(@@ x[@@ q@@ ]@@ !=0){ q++; } for(int@@ z@@ =0;@@ y[@@ z@@ ]@@ !=0@@ ;@@ z++) x[@@ q@@ +@@ z@@ ]=@@ y[@@ z@@ ]; } voidshuchu@@ (intx@@ [@@ ]){ for(int@@ z@@ =0;@@ x[@@ z@@ ]@@ !=0@@ ;@@ z++) if(!@@ z) cout<<@@ x[@@ z@@ ]; else cout<<''<<@@ x[@@ z@@ ]; } intmain(){ read(); paixu(@@ a); paixu(@@ b); addd@@ (a,b); shuchu@@ (a); return0; }  
c -1
h -1
intmain() { inta[16],@@ x,@@ i,j,k,@@ l,@@ n; for(i=0;;i++) { n=0; j=0; while(cin>>@@ x) { if(x@@ ==0||@@ x@@ ==-1) break; a[j]=@@ x; j++; } if(x@@ ==-1) break; for(k=0;k<j@@ ;k++) { for(l=0;l<@@ j@@ ;l++) { if(a[@@ l@@ ]==2*@@ a[k]) n=n+1; } } cout<<n<<endl; } return0; }  
c -1
h -1
0

intf(int@@ q@@ ,int@@ x) { if(q@@ <@@ x) {@@ inti,k,@@ p,@@ sum; k@@ =0;@@ sum=0;@@ p=0; for(i=2;i<=@@ x@@ /2@@ ;i++) if(x@@ %i==0)@@ k=k+1; if(k@@ ==0)@@ return1; else {@@ for(i=2;i<=@@ sqrt(@@ x@@ );i++) {@@ if(x%i==0) {@@ if(i<@@ q@@ )continue; else@@ sum=sum+@@ f(@@ i,@@ x@@ /i); } } return@@ sum@@ +1; p=0; sum=0; } } else {@@ if(q@@ ==@@ x)@@ return1; else return0; } } intmain() { intn,i,@@ x,@@ sum,@@ p; p=0; sum=0; scanf("%d",&n); for(i=1;i<=n;i++) { scanf("%d",&x); sum=@@ f(@@ 2,@@ x); printf("%d\n",sum); } return0; }  
c -1
h -1
intmain(){ chara[@@ 300],b[@@ 300@@ ],c[@@ 300]; inti,j,@@ f,@@ d,@@ k=0; scanf("%s%s%s",a,b,c); d@@ =strlen(a); f@@ =strlen(c); for(i=0;i<d@@ ;i++){ if(a[i]==@@ b[0]@@ &&@@ a[i+1@@ ]==@@ b[1@@ ]@@ &&@@ a[i@@ +@@ 2@@ ]==@@ b[2@@ ]@@ &&@@ a[i@@ +@@ 3@@ ]==@@ b[@@ 3@@ ]){ for(j=i;j<i+@@ f@@ ;j++){ a[j]=@@ c@@ [k]; k++; } break; } } printf("%s",a); return0; }  
c -1
h -1
0

intmain() { intn=0,@@ k=0; cin>>n>>k; inta[1000]; inti=0; int@@ c=0; for(i=0;i<n;i++) { cin>>a[i]; } int@@ b=0; for(i=0;i<n@@ &&@@ c@@ !=@@ 250@@ ;i++) { for(b=0;b@@ <n@@ -i@@ &&@@ c@@ !=@@ 250@@ ;@@ b++) { if(k==@@ a[i]+@@ a[i@@ +@@ b@@ ]) { cout<<"yes@@ "<<endl; c=@@ 250@@ ; } } } if(c@@ ==0) cout<<"no@@ "<<endl; return0; }  
c -1
h -1
intmain(){ double@@ s,@@ t; intm,n,@@ flag=0; int@@ e=0; chara[@@ LEN@@ ],b[@@ LEN@@ ]; scanf("%lf",&@@ s); scanf("%s",a); scanf("%s",b); m=strlen(a); n@@ =strlen(b); for(intp@@ =0;p@@ <m@@ ;p++){ if(a[@@ p@@ ]@@ =='@@ A'||@@ a[p@@ ]@@ =='@@ G'||@@ a[p@@ ]@@ =='@@ C'||@@ a[p@@ ]@@ =='@@ T@@ '){ flag=0; }else{ flag=1; break; } } if((@@ m@@ !=@@ n@@ )||(@@ flag@@ ==1)@@ ){ printf("error"); }else{ for(inti=0;i<n;i++){ if(a[i]==b[i]){ e++; } } t@@ =1.0*@@ e@@ /n; if(t@@ >@@ s@@ ){ printf("yes"); }else{ printf("no"); } } return0; }  
c -1
h -1
0

voidmain() { charstring@@ [300],@@ substring@@ [300],@@ replacement@@ [300],@@ test@@ [300]; int@@ lensub@@ ,@@ len,@@ i,j; scanf("%s\n@@ %s@@ \n@@ %s",@@ string,@@ substring@@ ,@@ replacement); len=strlen(@@ string); lensub@@ =strlen(@@ substring); for(i=0;i<=@@ len@@ -@@ lensub@@ ;i++) { for(j=1;j<=@@ lensub@@ ;j++) { test@@ [j-1]=@@ string@@ [i+j@@ -1]; test@@ [j]@@ ='\0'; } if(strcmp(@@ test@@ ,@@ substring@@ )@@ !=0) { printf("%c",@@ string@@ [i]); } else { printf("%s",@@ replacement); i@@ +=@@ lensub@@ ; break; } } for(@@ ;i<=@@ len@@ -1;i++) { printf("%c",@@ string@@ [i]); } }  
c -1
h -1
intmain() { inty,m,d,@@ x,@@ i; inta[@@ 12]={31,28,31,30,31,30,31,31,30,31,30,31}; scanf("%d%d%d",&y,&m,&d); if(y%@@ 4==0&&@@ y%@@ 100!=0) a[1]=29; if(y%@@ 400==0) a[1]=29; x=0; for(i=0;i<m-1;i++) x@@ +=@@ a[i]; x@@ +=@@ d; printf("%d",x); getchar(); getchar(); }  
c -1
h -1
0

void@@ prt@@ (inta[100@@ ][100@@ ],int@@ i,@@ int@@ j@@ ,int@@ m,intn) {@@ static@@ intt=0; printf("%d\n",a[i][j]); if(i==@@ m-1@@ ||j@@ ==0) {@@ t++; if(t@@ <@@ n)@@ prt@@ (a,0,@@ t,@@ m,n); elseif(@@ t@@ <@@ m+@@ n-1)@@ prt@@ (a,@@ t@@ -n@@ +1,@@ n-1@@ ,@@ m,n); } else@@ prt@@ (a,@@ i@@ +1@@ ,j@@ -1,@@ m,n); } voidmain() { inti,j,@@ m,n,@@ a[100][100]; scanf("%d%d",&m,&n); for(i=0;i<m;i++) for(j=0;j<n;j++) {@@ scanf("%d",&a[i]@@ [j]@@ );} prt@@ (a,@@ 0,0,@@ m,n); }  
c -1
h -1
intmain() { chars[@@ 257@@ ],@@ sub@@ [257],@@ rep@@ [257]; inti,j,@@ t,@@ k; int@@ len_s@@ ,@@ len_sub@@ ,@@ len_rep@@ ; cin.getline(@@ s,@@ 257@@ ); cin.getline(@@ sub,@@ 257@@ ); cin.getline(@@ rep@@ ,@@ 257@@ ); len_s@@ =strlen(s); len_sub@@ =strlen(@@ sub); len_rep@@ =strlen(@@ rep); for(t=0;t@@ <@@ len_s@@ ;t++) { if(s[@@ t@@ ]==@@ sub@@ [0]) { for(i=0;i<@@ len_sub@@ ;i++) { if(s[@@ t@@ +i@@ ]!=@@ sub@@ [i]) break; } if(i==@@ len_sub@@ ) break; } } if(t==@@ len_s@@ ) cout<<s<<endl; else { for(i=0;i<t;i++) cout<<@@ s[i]; cout<<@@ rep@@ ; for(k=0;@@ s@@ [i+@@ len_sub@@ +k@@ ]!='\0'@@ ;k++) cout<<s@@ [i+@@ len_sub@@ +k@@ ]; cout<<endl; } return0; }  
c -1
h -1
0

intmain() { inti,k,@@ n,@@ p,@@ l=0; scanf("%d",&n); scanf("%d",&k); ints[@@ 2][@@ 1000]; for(i=0;i<n;i++) { scanf("%d",&(@@ s[0]@@ [i]@@ )); s[1]@@ [i]=@@ k-@@ s[0]@@ [i]; } for(i=0;i<n;i++) { for(p=0;p@@ <n;p++) { if((@@ s[1]@@ [i]==@@ s[@@ 0][@@ p@@ ]@@ )&&(i@@ !=@@ p@@ )) { l++; } } } if(l@@ ==0) { printf("no"); } if(l@@ !=0) { printf("yes"); } return0; }  
c -1
h -1
intmain() { intn,@@ num,@@ i,j=0,@@ k; inta[@@ 91@@ ]={0}; cin>>n; intb[@@ 20000@@ ]={0}; for(i=0;i<n;i++) { cin>>num; if(a[@@ num@@ -@@ 10@@ ]==0) { b[j]=@@ num; a[@@ num@@ -@@ 10@@ ]++; j++; } } cout<<@@ b[0]; for(k=1;k<=n;k++) { if(@@ b[k@@ ]@@ ==0)break; else@@ cout<<""<<@@ b[k@@ ]; } return0; }  
c -1
h -1
0

inta[@@ 10000@@ ],b[@@ 10000],@@ n,@@ m; void@@ duru@@ () { inti,j; cin>>n>>m; for(i=0;i<n;i++)@@ cin>>a[i]; for(j=0;j<m@@ ;j++)@@ cin>>@@ b[j]; } voidsort@@ () { int@@ t1@@ ,@@ t2@@ ,@@ i,j; for(i=0;i<n-1;i++) { for(j=0;j<n-1-i;j++) { if(a[j]>a[j+1]) { t1@@ =@@ a[j]; a[j]=a[j+1]; a[j+1]=@@ t1@@ ; } } } for(i=0;i<m-1;i++) { for(j=0;j<@@ m-1@@ -i;j++) { if(b[j]>b[j+1]) { t2@@ =@@ b[j]; b[j]=b[j+1]; b[j+1]=@@ t2@@ ; } } } } voidhebing@@ () { inti; for(i=n@@ ;i<@@ n+m;i++) { a[i]=b[i-@@ n]; } } void@@ put@@ () { inti; for(i=0;i<n@@ +m@@ -1;i++) cout<<a[i]@@ <<''; cout<<a[@@ n+@@ m@@ -1]@@ <<endl; } intmain() { duru@@ (); sort@@ (); hebing@@ (); put@@ (); return0; }  
c -1
h -1
struct@@ person {@@ charID[10]; intage; }@@ person@@ [100]; voidmain() { int@@ i,j@@ =-1,@@ k,@@ n,@@ max; chars@@ [100][10],@@ a[100]; scanf("%d",&n); for(i=0;i<n;i++) scanf("%s%d",&@@ person@@ [i].@@ ID,&@@ person@@ [i].age); for(i=0;i<n;i++) {@@ a[i]=@@ person@@ [i].age; if(@@ person@@ [i].age@@ >=60@@ )@@ j@@ ++;} for(k=0;k<=@@ j@@ ;k++) { max=0; for(i=0;i<n;i++) max@@ =(@@ max@@ >=@@ a[i])@@ ?@@ max@@ :@@ a[i]; for(i=0;i<n;i++) if(a[i]==@@ max) {@@ printf("%s\n",@@ person@@ [i].ID); a[i]=0; break; } } for(i=0;i<n;i++) if(@@ person@@ [i].age@@ <60@@ )@@ printf("%s\n",@@ person@@ [i].ID); }  
c -1
h -1
0

voidmain() { inti,j,k,@@ n,m,@@ sum=0,@@ max,@@ min@@ ,@@ a[100@@ ][100@@ ]={0}; chars[@@ 81@@ ]={@@ ""@@ }; scanf("%d%d",&m,&n); for(i=0;i<m;i++) for(j=0;j<n;j++) scanf("%d",&a[i][j]); for(k=0;k<@@ m+@@ n-1;k++) for(i=0;i<m;i++) for(j=0;j<n;j++) if(i+j@@ ==@@ k)@@ printf("%d\n",a[i][j]); }  
c -1
h -1
struct@@ f@@ { inta; intb; int@@ c;@@ }@@ st@@ [100000],@@ tp@@ ; intmain(){ intn,i,@@ ii@@ ,j,@@ d,@@ a,b,@@ c; char@@ cc@@ ; scanf("%d",&n); for(i=1;i<=n;i++){ scanf("%d%d%d",&@@ st[i].@@ a,&@@ st[i].@@ b@@ ,&@@ st[i].@@ c); st[i].@@ b@@ +=@@ st[i].@@ c; } for(i=1;i<=@@ 3;i++){ for(j=i+1;j<=@@ n;j++){ if(@@ st@@ [j].@@ b@@ >@@ st[i].@@ b){ tp@@ =@@ st@@ [i]; st@@ [i]=@@ st@@ [j]; st@@ [j]=@@ tp@@ ;@@ }}} for(i=1;i<=@@ 3;i++) printf("%d%d\n",@@ st[i].@@ a,@@ st[i].@@ b); }  
c -1
h -1
0

structbook{ int@@ co@@ ; char@@ A@@ [26]; }; intmain(){ intm,@@ i,k,@@ max; intcount@@ [26]; int*@@ cc@@ ; scanf("%d",&m); structbook*@@ bk@@ =(struct@@ book@@ *)malloc(sizeof(struct@@ book@@ )*@@ m); structbook@@ *p; p=@@ bk@@ ; for(i=0;i<m@@ ;i++,@@ p++){ scanf("%d%s",&@@ (p->@@ co@@ ),@@ p->@@ A@@ ); } cc@@ =@@ count; memset(@@ count@@ ,0,sizeof(@@ count@@ )); for(i=0;i<26@@ ;i++,@@ cc@@ ++){ p=@@ bk@@ ; for(k=0;k<@@ m@@ ;k@@ ++,@@ p++) { if(@@ strchr@@ (p->@@ A@@ ,'@@ A'+@@ i@@ )) { (*@@ cc@@ )@@ ++; } } } max=0; for(i=0;i<26;i++) { if(count@@ [i]>@@ count[@@ max@@ ]) { max=i; } } printf("%c\n%d\n",@@ 'A'+@@ max,@@ count[@@ max@@ ]); p=@@ bk@@ ; for(i=0;i<m@@ ;i++,@@ p++) { if(@@ strchr@@ (p->@@ A@@ ,'@@ A'+@@ max@@ )) { printf("%d\n",p->@@ co@@ ); } } free(@@ bk@@ ); return0; }  
c -1
h -1
intmain(intargc,char*argv[]) { inta[16@@ ]={0}; inti,j,k; intnum=0; for(i=0;@@ ;i++){ scanf("%d",&a[i]); if(a[i]@@ ==0){ for(j=0;j<@@ i-1;j++) for(k=j+1;k<@@ i;k++) { if(a[j]==2*@@ a[k]@@ ||@@ 2*@@ a[j]==@@ a[k]) num++; } printf("%d\n",num); num=0; i@@ =-1; } if(a[i]==-1) break; } return0; }  
c -1
h -1
0

intmain() { inti,k,@@ m,n,@@ j,@@ z,@@ s; cin>>k; for(z@@ =1;@@ z@@ <=k;@@ z++) { s=0; cin>>m>>n; inta[100][100]; for(i=0;i<m;i++) for(j=0;j<n;j++) cin>>a[i][j]; if(m@@ ==1||@@ n@@ ==1) { for(i=0;i<m;i++) for(j=0;j<n;j++) s=s+@@ a[i][j]; } else {@@ for(i=0;i<n;i++) s=s@@ +*(@@ *a@@ +i)@@ +*(@@ *(a@@ +m-1)@@ +i); for(i=1;i<m-1;i++) s=s@@ +*(@@ *(a+i)@@ )@@ +*(@@ *(a+i)@@ +@@ n-1@@ );} cout<<s<<endl; } }  
c -1
h -1
int@@ n1,n2; int*@@ p1; int*@@ p2; int*@@ p3; main() { scanf("%d%d",&n1,&n2); p1=@@ (int*)malloc(@@ n1@@ *sizeof(int)); p2=@@ (int*)malloc(@@ n2@@ *sizeof(int)); for(intk=0;k<@@ n1@@ ;k++) scanf("%d",&@@ p1@@ [k]); for(intk=0;k<@@ n2@@ ;k++) scanf("%d",&@@ p2@@ [k]); for(int@@ k=@@ n1@@ -1@@ ;k@@ >0@@ ;k--) { for(inti=0;i<k;i++) { if(@@ p1@@ [i]>@@ p1@@ [i+1]) { intt; t@@ =p1@@ [i]; p1@@ [i]=@@ p1@@ [i+1]; p1@@ [i+1]=@@ t; } } } for(int@@ k=@@ n2@@ -1@@ ;k@@ >0@@ ;k--) { for(inti=0;i<k;i++) { if(@@ p2@@ [i]>@@ p2@@ [i+1]) { intt; t=@@ p2@@ [i]; p2@@ [i]=@@ p2@@ [i+1]; p2@@ [i+1]=@@ t; } } } p3=@@ (int*)malloc(@@ (@@ n1+n2@@ )@@ *sizeof(int)); for(intk=0;k<@@ n1@@ ;k++) p3@@ [k]=@@ p1@@ [k]; for(inti=@@ n1@@ ;i<@@ n1+@@ n2;i++) p3@@ [i]=@@ p2@@ [i-@@ n1@@ ]; intc; for(c=0;c@@ <@@ n1+n2@@ ;c@@ ++) { if(c@@ ==0) printf("%d",@@ p3@@ [0]); else@@ printf("%d",@@ p3@@ [c@@ ]); } }  
c -1
h -1
0

int@@ factor@@ (inta,int@@ min@@ ){ inti,@@ result=1; if(a<@@ min@@ )return0; for(i=min@@ ;i<@@ a;i++){ if(a%i==0) result+=@@ factor@@ (a/i,i); } returnresult; } intmain(){ intn,i,@@ a[100]; scanf("%d",&n); for(i=0;i<n;i++){ scanf("%d",&a[i]); a[i]=@@ factor@@ (a[i],@@ 2); } for(i=0;i<n;i++){ if(i==@@ n-1)@@ printf("%d",a[i]); else@@ printf("%d\n",a[i]); } return0; }  
c -1
h -1
voidmain() { struct { int@@ NO@@ ; char@@ AUT@@ [27]; }@@ book[999]; inti,j,k,@@ m,n,@@ d,@@ max; inta[@@ 26]={0},@@ b[@@ 26@@ ][@@ 999]; scanf("%d",&n); for(i=0;i<n;i++) { scanf("%d",&@@ book[i].@@ NO@@ ); gets(@@ book[i].@@ AUT@@ ); for(j=0;@@ book[i].@@ AUT@@ [j]!='\0';j++) { d=@@ book[i].@@ AUT@@ [j]-65@@ ; b[@@ d@@ ][@@ a[d@@ ]@@ ]=@@ book[i].@@ NO@@ ; a[d@@ ]=a[@@ d@@ ]+1; } } max=0; for(i=0;i<26;i++) { if(a[i]>max) { max=a[i]; k=i; } } printf("%c\n%d\n",@@ k@@ +65@@ ,max); for(i=0;i<@@ a[k]@@ -1;i++) { printf("%d\n",@@ b[k@@ ][i]); } printf("%d",@@ b[k@@ ][@@ a[k]@@ -1]); }  
c -1
h -1
0

int@@ yinshu@@ (intn,int@@ m) { inti,@@ sum=0; if(n==1) return1; for(i=m@@ ;i<=n;i++) { if(n%i==0) sum+=@@ yinshu@@ (n/i,i); } returnsum; } intmain() { intn,i,@@ m; cin>>n; for(i=1;i<=n;i++) { cin>>m; cout<<@@ yinshu@@ (m,@@ 2)<<endl; } return0; }  
c -1
h -1
intmain() { inty,m,d,@@ i,@@ sum,@@ n=0,@@ k@@ [@@ 13@@ ]; scanf("%d%d@@ %d@@ "@@ ,&@@ y,@@ &@@ m,@@ &@@ d); k@@ [0]@@ =0; k@@ [1]=@@ k@@ [3@@ ]=@@ k@@ [5@@ ]=@@ k@@ [@@ 7@@ ]=@@ k@@ [@@ 8@@ ]=@@ k@@ [10@@ ]=@@ k@@ [12@@ ]=31; k@@ [4@@ ]=@@ k@@ [@@ 6@@ ]=@@ k@@ [@@ 9@@ ]=@@ k@@ [11@@ ]=30; if(y%@@ 4) { if(y%@@ 100@@ ) { if(y%@@ 400@@ ) { k@@ [2]=@@ 28; } else { k@@ [2]=@@ 29; } } else { k@@ [2]=@@ 28; } } else { k@@ [2]=@@ 29; } for(i=0;i<m;i++) { n=n+@@ k@@ [i]; } sum=@@ n+@@ d; printf("%d\n",sum); return0; }  
c -1
h -1
0

intmain(){ intsz[@@ 1000],@@ n,@@ i,k,@@ d,@@ e; scanf("%d%d",&n,&@@ e); for(i=0;i<n;i++){ scanf("%d",&sz[i]); } for(k=0;k<@@ n-1@@ ;k++){ if(k==@@ n-2@@ ){ printf("no"); break;} for(i=k@@ +1;i<@@ n;i++){ d=@@ sz@@ [k]@@ +sz@@ [i]; if(d@@ ==@@ e@@ ){ printf("yes"); break;} } if(d@@ ==@@ e@@ ){ break;} } return0; }  
c -1
h -1
intmain() { chara[@@ 257@@ ],b[@@ 257@@ ],c[@@ 257@@ ],@@ d[@@ 257@@ ],@@ e@@ [257],@@ f@@ [257]; inti,@@ n1,n2,@@ k,@@ j,@@ m=1; gets(a); gets(b); gets(@@ e); n1@@ =strlen(a); n2@@ =strlen(b); for(i=0;i<n1;i++) { d[i]=@@ a[i]; for(k=0;k<@@ n2@@ ;k++) { c@@ [k]=@@ a[i@@ +k@@ ]; } c[@@ n2@@ ]=0; if(@@ strcmp@@ (b,@@ c)@@ ==0) { d@@ [i]=0; for(j=0;j<@@ (@@ n1@@ -@@ n2@@ -i@@ );j++) { f@@ [j]=@@ a[i@@ +@@ n2@@ +j@@ ]; } f@@ [j]@@ =0; printf("%s@@ %s%s",@@ d,@@ e,@@ f); m=0; break; } } if(m@@ ) { puts(@@ a); } return0; }  
c -1
h -1
0

intk,@@ m,n; int@@ arr@@ [@@ 105@@ ][@@ 105@@ ]; intmain() { cin>>k; while(k@@ --) { cin>>m>>n; intsum=0; for(inti=0;i<m;i++) { for(intj=0;j<n;j++) { cin>>@@ arr@@ [i][j]; if(i==0||i==@@ m-1@@ ||j@@ ==0||j==@@ n-1) sum+=@@ arr@@ [i][j]; } } cout<<sum<<endl; } return0; }  
c -1
h -1
intmain() { inti,n,@@ m,@@ k,@@ j,@@ p,@@ a[@@ 1000][1000],@@ sum; scanf("%d",&k); for(i=0;i<k;i++) { sum=0; scanf("%d%d",&m,&n); for(j=1;j<=m;j++) { for(p=1@@ ;p@@ <=n;@@ p++) { scanf("%d",&a[j]@@ [p@@ ]); } } for(p=1@@ ;p@@ <=n;@@ p++) { sum+=@@ a[1@@ ][p@@ ]; } for(j=2;j<=@@ m;j++) { sum+=@@ a[j]@@ [n]; } for(p=@@ n-1@@ ;p@@ >=1@@ ;p@@ --) { sum+=@@ a[m@@ ][p@@ ]; } for(j=@@ m-1@@ ;j@@ >=@@ 2@@ ;j--) { sum+=@@ a[j]@@ [1]; } printf("%d\n",sum); } return0; }  
c -1
h -1
1


struct@@ staff { charid[20]; intage; struct@@ staff@@ *next; }; voidmain() { intn,@@ k=0,@@ max=@@ 59@@ ; struct@@ staff@@ *head,*@@ p,*@@ q@@ ,*@@ pre@@ ; scanf("%d",&n); struct@@ staff@@ *p1,*p2; p1=(struct@@ staff@@ *)malloc(LEN); scanf("%s%d",@@ p1->id,&p1->age); head=@@ p2=p1; if(p1->age@@ >=60@@ )@@ k++; while(@@ n-1) { n--; p1=(struct@@ staff@@ *)malloc(LEN); scanf("%s%d",@@ p1->id,&p1->age); if(p1->age@@ >=60@@ )@@ k++; p2->next=p1; p2=p1; } p2->next=NULL; while(@@ k) { p=head; k--; while(p) { if(p->@@ age@@ >max) { max=@@ p->@@ age; q=p; } p=p->next; } printf("%s\n",@@ q->@@ id); if(q@@ ==@@ head@@ ) { head=@@ q@@ ->next; free(@@ q); } else { if(q@@ ->next@@ ==NULL) { p=head; while(p) { pre@@ =p; p=p->next; if(p==@@ q) { free(@@ q); pre@@ ->next=NULL; break; } } } else { p=head; while(p) { pre@@ =p; p=p->next; if(p==@@ q) { p=p->next; pre@@ ->next=p; free(@@ q); break; } } } } max=@@ 59@@ ; } p=head; while(p) { printf("%s\n",p->id); p=p->next; } }  
c -1
h -1
structstudent { intnum; int@@ ch; int@@ ma; intsum; structstudent*next; }; intN@@ ; intn; structstudent*creat@@ (void) { structstudent*head; structstudent*p1,*p2; n=0; p1=p2=(structstudent*)malloc(LEN); scanf("%d%d%d",&p1->num,&p1->@@ ch@@ ,&p1->@@ ma@@ ); p1->sum=p1->@@ ch@@ +p1->@@ ma; head=@@ null@@ ; while(n@@ <@@ N@@ -1) { n=n+1; if(n==1) head=p1; else p2->next=p1; p2=p1; p1=(structstudent*)malloc(LEN); scanf("%d%d%d",&p1->num,&p1->@@ ch@@ ,&p1->@@ ma@@ ); p1->sum=p1->@@ ch@@ +p1->@@ ma; } p2->next=@@ null@@ ; return(head); } voidmain() { scanf("%d",&N); structstudent*head,*p1,*p2; head=creat(); p1=@@ head->next; p2=p1->next; voidsort@@ (@@ structstudent*@@ p3@@ ,@@ structstudent*@@ p4@@ ); sort(@@ head,@@ p1); sort(@@ p1,@@ p2@@ ); sort(@@ p2@@ ,@@ p2->next@@ ); p2->next=@@ null@@ ; p1=head; while(p1@@ !=@@ null@@ ) { printf("%d%d\n",@@ p1->@@ num,p1->@@ sum); p1=p1->next; } } voidsort@@ (@@ structstudent*@@ p3@@ ,@@ structstudent*@@ p4@@ ) { intk; while(@@ p4@@ !=@@ null@@ ) { if(@@ p3->@@ sum<@@ p4@@ ->@@ sum) { k=@@ p3->@@ num; p3->@@ num=@@ p4@@ ->@@ num; p4@@ ->@@ num=@@ k; k=@@ p3->@@ sum; p3->@@ sum=@@ p4@@ ->@@ sum; p4@@ ->@@ sum=@@ k; } p4@@ =@@ p4@@ ->next; } }  
c -1
h -1
0

intmain() { intk; scanf("%d",&k); inta[@@ 25]; intb[@@ 25]; inti,j,@@ max; for(i=0;i<k;i++) scanf("%d",&a[i]); b[k@@ -1]@@ =1; for(i=k-2;i>=0;i--) { max=0; for(j=i+1;j<=@@ k@@ -1;j++) { if(a[j]<=@@ a[i]) { if(max<@@ b[j]) max=@@ b[j]; } } b[i]=@@ max+1; } max=0; for(i=0;i<k;i++) { if(max<@@ b[i]) max=b[i]; } printf("%d",max); getchar(); getchar(); }  
c -1
h -1
structstudent { intnum; intyuwen; intmath; inttotal; structstudent*next; }; long@@ m,n; structstudent*creat@@ (void) { structstudent*head; structstudent*p1,*p2; m@@ =0;@@ head@@ =0; while(m@@ <n) { m=m+1; p1@@ =(structstudent*)malloc(sizeof(structstudent)); scanf("%d%d%d",&p1->num,&p1->@@ yuwen@@ ,&p1->math); p1->@@ total=@@ p1->@@ yuwen@@ +p1->@@ math; if(m@@ ==1){@@ head@@ =p1;@@ p2@@ =p1;} elsep2->next=p1; p2=p1; } p2->next@@ =0; return(head); } voidmain() { structstudent*head,*@@ p,*@@ px@@ ; inta[@@ 3@@ ][2@@ ],@@ t1@@ ,@@ t2@@ ; scanf("%ld",&n); head=creat(); p=head; a[0][@@ 1@@ ]=@@ a[1@@ ][1@@ ]=a[@@ 2@@ ][1@@ ]=0; if(head@@ !=0) do { if(p->@@ total>@@ a[2@@ ][1@@ ]) {@@ a[2@@ ][1@@ ]=@@ p->@@ total@@ ;@@ a[2@@ ][@@ 0]=@@ p->@@ num@@ ;} if(a[@@ 2@@ ][1@@ ]>@@ a[1@@ ][1@@ ]) {@@ t1@@ =@@ a[1@@ ][1@@ ];@@ a[1@@ ][1@@ ]=a[@@ 2@@ ][1@@ ];@@ a[2@@ ][1@@ ]=@@ t1@@ ;@@ t2@@ =@@ a[1@@ ][0]@@ ;@@ a[1@@ ][@@ 0]=@@ a[2@@ ][0]@@ ;@@ a[2@@ ][@@ 0]=@@ t2@@ ;} if(a[1@@ ][1@@ ]>@@ a[0][@@ 1@@ ]) {@@ t1@@ =@@ a[0][@@ 1@@ ];@@ a[0][@@ 1@@ ]=@@ a[1@@ ][1@@ ];@@ a[1@@ ][1@@ ]=@@ t1@@ ;@@ t2@@ =@@ a[0][0]@@ ;@@ a[0][@@ 0]=@@ a[1@@ ][0]@@ ;@@ a[1@@ ][@@ 0]=@@ t2@@ ;} p=p->next; } while(p@@ !=0); for(@@ t1@@ =0;@@ t1@@ <=@@ 2;@@ t1@@ ++) { printf("%d%d\n",@@ a[@@ t1@@ ][@@ 0],@@ a[@@ t1@@ ][1@@ ]); } }  
c -1
h -1
0

structbook { intid; charwriter@@ [26]; int@@ length@@ ; }@@ zz@@ [999]; intmain() { intn,i,j,k; int@@ letter@@ [26]={0}; int@@ letter_book@@ [26@@ ][@@ 999@@ ]={0}; cin>>n; for(i=0;i<n;i++) { cin>>@@ zz@@ [i].@@ id; cin>>@@ zz@@ [i].@@ writer@@ ; zz@@ [i].@@ length@@ =strlen(@@ zz@@ [i].@@ writer); } for(j=0;j<n;j++) { for(k=0;k<@@ zz@@ [j].@@ length@@ ;k++) { letter_book@@ [@@ zz@@ [j].@@ writer@@ [k]@@ -'A'@@ ][@@ letter@@ [@@ zz@@ [j].@@ writer@@ [k]@@ -'A'@@ ]@@ ]=@@ zz@@ [j].@@ id; letter@@ [@@ zz@@ [j].@@ writer@@ [k]@@ -'A']++; } } intmax=0,@@ t; for(i=0;i<26;i++) { if(@@ letter@@ [i]>max) { max=@@ letter@@ [i]; t=i; } } char@@ m; m=@@ 'A'@@ +@@ t; cout<<@@ m@@ <<endl; cout<<max<<endl; for(i=0;i<@@ max@@ ;i++) cout<<@@ letter_book@@ [t@@ ]@@ [i]<<endl; }  
c -1
h -1
intmain(intargc,char*argv[]) { inta,b,@@ c[@@ 1001@@ ],i,j,@@ m=1; scanf("%d%d",&a,&b); for(i=0;i<a;i++){ scanf("%d",&@@ c[i]); } for(i=0;i<a;i++){ if(m@@ ==0)break; for(j=0;j<a@@ &&j@@ !=@@ i;j++){ if(c@@ [i]+@@ c@@ [j]==@@ b@@ ){@@ printf("yes"); m=0; break; } }} if(m@@ ==1)@@ printf("no"); return0; }  
c -1
h -1
0

intmain() { intn,i,j,k,@@ max; charname@@ [@@ 2000@@ ][@@ 30],@@ alp@@ [@@ 27@@ ]={@@ "@@ ABCDEFGHIJKLMNOPQRSTUVWXYZ@@ "@@ }; int@@ No@@ [@@ 2000@@ ],@@ num[@@ 30]={0}; scanf("%d",&n); for(i=0;i<n;i++){ scanf("%d%s",&@@ No@@ [i],@@ name@@ [i]); } for(i=0;i<26;i++){ for(k=0;k<n;k++){ for(j=0;j<strlen(@@ name@@ [k]@@ )@@ ;j++){ if(name@@ [k]@@ [j]==@@ alp@@ [i]){ num[i]@@ ++; break; } } } } max=@@ num[@@ 0]; for(i=1;i<@@ 26@@ ;i++){ if(num@@ [i]@@ >max){ max=@@ num[i]; } } for(i=0;i<26;i++){ if(num@@ [i]==@@ max@@ ){ printf("%c\n%d\n",@@ alp@@ [i],@@ max); for(k=0;k<n;k++){ for(j=0;j<@@ 27@@ ;j++){ if(name@@ [k]@@ [j]==@@ alp@@ [i]){ printf("%d\n",@@ No@@ [k]); break; } } } } } return0; }  
c -1
h -1
typedef@@ struct{ int@@ d; int@@ score; }@@ student@@ ; intmain() { intn,i,@@ temp1@@ ,@@ temp2@@ ; student@@ a[@@ 100002@@ ]; scanf("%d",&n); for(i=0;i<n;i++){ scanf("%d%d%d",&a[i].@@ d,@@ &@@ temp1@@ ,&@@ temp2@@ ); a[i].@@ score@@ =@@ temp1@@ +@@ temp2@@ ; } student@@ max1,@@ max2@@ ,max3@@ ; max1@@ .@@ d=@@ max2@@ .@@ d=@@ max3@@ .@@ d=@@ -1; max1@@ .@@ score@@ =@@ max2@@ .@@ score@@ =@@ max3@@ .@@ score@@ =0; for(i=0;i<n;i++){ if(a[i].@@ score@@ >@@ max1@@ .@@ score@@ ){ max3=max2; max2=@@ max1; max1=@@ a[i]; } elseif(a[i].@@ score@@ >@@ max2@@ .@@ score@@ ){ max3=max2; max2=@@ a[i]; } elseif(a[i].@@ score@@ >@@ max3@@ .@@ score@@ ){ max3=@@ a[i]; } } printf("%d%d\n",@@ max1@@ .@@ d,@@ max1@@ .@@ score@@ ); if(@@ max2@@ .@@ d@@ !=-1) printf("%d%d\n",@@ max2@@ .@@ d,@@ max2@@ .@@ score@@ ); if(@@ max3@@ .@@ d@@ !=-1) printf("%d%d\n",@@ max3@@ .@@ d,@@ max3@@ .@@ score@@ ); return0; }  
c -1
h -1
0

intmain() {int@@ a,@@ i,j,@@ m,@@ k,@@ p; char@@ r@@ [257],@@ s[@@ 257@@ ],@@ w@@ [257]; scanf("%s",@@ w); scanf("%s",s); scanf("%s",@@ r); a@@ =strlen(s); p=0; for(i=0;@@ w@@ [i]@@ ;i++) { if(w@@ [i]==@@ s@@ [0]) {@@ m=0; for(j=0;j<a@@ ;j++) {if(@@ w@@ [i+j]==@@ s@@ [j]) {@@ m=m+1; } } if(m==@@ a) {@@ p=p@@ +1; for(k=0;k<@@ a@@ ;k++) {@@ w@@ [i+k@@ ]=@@ r@@ [k]; } printf("%s",@@ w); break; } } } if(p@@ ==0) {@@ printf("%s",@@ w); } return0; }  
c -1
h -1
voidmain() { int@@ lenstr@@ ,@@ lensub@@ ,@@ lenrpl@@ ,@@ i,j; char@@ temp@@ [260],@@ str@@ [260],@@ sub@@ [260],@@ rpl@@ [260@@ ]; scanf("%s@@ %s%s",&@@ str@@ ,&@@ sub@@ ,&@@ rpl@@ ); lenstr@@ =strlen(@@ str); lensub@@ =strlen(@@ sub); lenrpl@@ =strlen(@@ rpl@@ ); str@@ [@@ lenstr@@ ]='\0'; sub@@ [@@ lensub@@ ]='\0'; rpl@@ [@@ lenrpl@@ ]='\0'; for(i=0;i<@@ lenstr@@ -@@ lensub@@ +1;i++) { for(j=0;j<@@ lensub@@ ;j++) temp@@ [j]=@@ str@@ [i+j@@ ]; temp@@ [j]@@ ='\0'; if(strcmp(@@ temp,@@ sub)@@ ==0) break; } if(i!=@@ lenstr@@ -@@ lensub@@ +1) { for(j=0;j<@@ lenrpl@@ ;j++) str@@ [i+j@@ ]=@@ rpl@@ [j]; } printf("%s\n",@@ str); }  
c -1
h -1
1


voidmain() { intk,i,j,@@ l,@@ s=0,@@ a[100@@ ][100@@ ]={0},@@ m,@@ n@@ ,*p; p=a; scanf("%d",&k); for(i=0;i<k;i++) {@@ s=0; scanf("%d%d",&m,&n); p=a; for(j=0;j<m;j++) for(l=0;l<n;l++) scanf("%d",@@ (@@ *(a@@ +j)+@@ l@@ )); for(j=0;j<n;j++) s=s@@ +*(@@ a[0]@@ +j); for(j=0;j<n@@ &&m@@ >1@@ ;j++) s=s@@ +*(@@ a[m-1]@@ +j); for(j=1;j<@@ m-1;j++) s=s@@ +*(@@ a[j]); for(j=1;j<@@ m-1@@ &&n@@ >1@@ ;j++) s=s@@ +*(@@ a[j]@@ +n-1); printf("%d\n",s); } }  
c -1
h -1
intmain() { intn,@@ j,k,@@ b,@@ c,@@ x,y; b=@@ c=0; scanf("%d",&n); intsz[@@ n@@ ][n]; for(j=0;j<=n-1;j++) { for(k=0;k<=@@ n-1;k++) { scanf("%d",&sz@@ [j]@@ [k]); if(sz@@ [j]@@ [k]@@ ==0) { x@@ =j; y=@@ k@@ ;} } } for(j=0;j<=n-1;j++) { for(k=0;k<=@@ n-1;k++) { if(sz@@ [j]@@ [k]@@ ==0) { b=j; c=@@ k; break; } } if(sz[@@ b@@ ][c@@ ]==0) break; } intm; m@@ =(@@ x@@ -b@@ -1)*(@@ y@@ -c@@ -1); printf("%d",m); return0; }  
c -1
h -1
0

intmain() { long@@ inta[@@ 5@@ ],b[@@ 5@@ ],c[@@ 5@@ ],@@ ts@@ [5],@@ i; for(i=1;i<=@@ 5;i++) scanf("%ld@@ %ld@@ %ld@@ ",&@@ a[i],&@@ b[i]@@ ,&@@ c[i]); for(i=1;i<=@@ 5;i++) { switch(@@ b[i]) { case1:@@ ts@@ [i]=@@ c[i]@@ ;break; case2:@@ ts@@ [i]=@@ c[i]@@ +31;break; case3:@@ ts@@ [i]=@@ c[i]@@ +@@ 59@@ ;break; case4:@@ ts@@ [i]=@@ c[i]@@ +@@ 90@@ ;break; case5:@@ ts@@ [i]=@@ c[i]@@ +@@ 120@@ ;break; case6:@@ ts@@ [i]=@@ c[i]@@ +@@ 151@@ ;break; case7:@@ ts@@ [i]=@@ c[i]@@ +@@ 181@@ ;break; case8:@@ ts@@ [i]=@@ c[i]@@ +@@ 212@@ ;break; case9:@@ ts@@ [i]=@@ c[i]@@ +@@ 243@@ ;break; case10:@@ ts@@ [i]=@@ c[i]@@ +@@ 273@@ ;break; case11:@@ ts@@ [i]=@@ c[i]@@ +@@ 304@@ ;break; case12:@@ ts@@ [i]=@@ c[i]@@ +@@ 334@@ ;break; } if((@@ a[i]@@ %4==0&&@@ a[i]@@ %100!=0@@ ||@@ a[i]@@ %@@ 400==0)@@ &&@@ b[i]@@ >2) ts@@ [i]=@@ ts@@ [i]@@ +1; printf("%ld@@ ",@@ ts@@ [i]); printf("\n"); } return0; }  
c -1
h -1
main() { int@@ j@@ [@@ 101@@ ]={0},@@ a[@@ 20000],b[@@ 20000@@ ]={0},@@ i,n,@@ x=0,@@ m=0; scanf("%d",&n); for(i=0;i<n;i++)@@ scanf("%d",&a[i]); for(i=0;i<n;i++) {@@ if(j@@ [@@ a[i]@@ ]==0) {@@ j@@ [@@ a[i]@@ ]=1; b[@@ x@@ ]=@@ a[i]@@ ;x@@ ++; } } for(i=0;i<x@@ -1;i++) printf("%d",b[i]); printf("%d",b[i]); }  
c -1
h -1
0

struct@@ stud { intnum; int@@ score@@ ,@@ score1@@ ,@@ score2; struct@@ stud@@ *next; }@@ head,@@ end@@ ; void@@ create@@ (intn) { inti; struct@@ stud@@ *p1,*p2; head@@ .@@ next@@ =NULL; for(i=0;i<=n-1;i++) { p1=(struct@@ stud@@ *)malloc(sizeof(struct@@ stud@@ )); if(!@@ i)@@ head@@ .@@ next@@ =p1; elsep2->next=p1; scanf("%d",&@@ p1->num); scanf("%d",&@@ p1->@@ score1@@ ); scanf("%d",&@@ p1->@@ score2); p1->@@ score@@ =p1->@@ score1@@ +p1->@@ score2; p2=p1; } p2->next@@ =&@@ end@@ ; } void@@ find@@ () { struct@@ stud@@ *@@ max1@@ ,*@@ max2@@ ,*@@ max3@@ ,*@@ p1,*@@ swap@@ ; max1=@@ head@@ .@@ next; max2=@@ max1@@ ->next; max3=@@ max2@@ ->next; p1=@@ max3@@ ->next; if(@@ max1@@ ->score@@ <@@ max2@@ ->score@@ ) { swap@@ =@@ max1; max1=@@ max2; max2=@@ swap@@ ; } if(@@ max2@@ ->score@@ <@@ max3@@ ->score@@ ) { swap@@ =@@ max2; max2=@@ max3@@ ; max3=@@ swap@@ ; } if(@@ max1@@ ->score@@ <@@ max2@@ ->score@@ ) { swap@@ =@@ max1; max1=@@ max2; max2=@@ swap@@ ; } while(p1@@ !=@@ &@@ end@@ ) { if(p1->@@ score@@ >@@ max3@@ ->score@@ )@@ max3@@ =p1; if(@@ max3@@ ->score@@ >@@ max2@@ ->score@@ ) { swap@@ =@@ max3@@ ; max3=max2; max2=@@ swap@@ ; } if(@@ max2@@ ->score@@ >@@ max1@@ ->score@@ ) { swap@@ =@@ max1; max1=@@ max2; max2=@@ swap@@ ; } p1=p1->next; } printf("%d%d\n",@@ max1@@ ->num,@@ max1@@ ->score@@ ); printf("%d%d\n",@@ max2@@ ->num,@@ max2@@ ->score@@ ); printf("%d%d\n",@@ max3@@ ->num,@@ max3@@ ->score@@ ); } voidmain() { intn; scanf("%d",&n); create@@ (n); find@@ (); }  
c -1
h -1
intmain() { intn,a[@@ 1000][@@ 1000]={0},@@ j,@@ m@@ [100],@@ i,@@ k@@ [100],@@ p@@ [100@@ ],b[100],@@ s=0,@@ g=0; scanf("%d",&n); for(j=0;j<n;j++) { for(i=0;i<n;i++) { scanf("%d",&a[j]@@ [i]); } } for(j=0;j<n;j++) { for(i=0;i<n;i++) { if(a[j]@@ [i]==0) { s@@ +=1; m[@@ s@@ ]=@@ j; k@@ [s@@ ]=i; break; } } } for(j=n-1@@ ;j>0;j--) { for(i=n-1@@ ;i>0;i--) { if(a[j]@@ [i]==0) { g@@ +=1; p[@@ g@@ ]=@@ j; b[@@ g@@ ]=i; break; } } } printf("%d",@@ (p@@ [1]@@ -m@@ [1]@@ -1)*(@@ b[1@@ ]@@ -k@@ [1]@@ -1)); return0; }  
c -1
h -1
0

intmain() { chars[@@ 30000@@ ];@@ char@@ yc@@ [@@ 30000@@ ];@@ char@@ tc@@ [@@ 30000@@ ];@@ int@@ tag@@ =1;@@ int@@ u@@ =0; gets(@@ s@@ );@@ gets(@@ yc@@ );@@ gets(@@ tc@@ ); for(inti=0;i<@@ strlen(@@ s@@ );i++) { if(s[i]==@@ yc@@ [0]@@ ){@@ tag@@ =@@ 2;@@ for(intj=0;j<@@ strlen(@@ yc@@ );j++) { if(s@@ [i+j]!=@@ yc@@ [j]@@ ){@@ tag@@ =0;@@ break;}} } if(tag@@ ==@@ 2@@ ){@@ printf("%s",@@ tc@@ );@@ u@@ =i+@@ strlen(@@ yc@@ );break;} if(tag@@ !=@@ 2@@ ){@@ printf("%c",@@ s[i]@@ );} } if(tag@@ ==@@ 2@@ ){@@ for(int@@ k=@@ u@@ ;k<@@ strlen(@@ s)@@ ;k++@@ ){@@ printf("%c",@@ s[k]@@ );}} return0; }  
c -1
h -1
inth@@ [25],@@ n; int@@ hack@@ (inti,int@@ w@@ ){ if(i==@@ n-1){ if(h@@ [i]<=@@ w@@ )@@ return1; else@@ return0; } int@@ b=@@ hack@@ (i+1,@@ w@@ ),@@ c=0; if(h@@ [i]<=@@ w@@ ) c@@ =1@@ +@@ hack@@ (i+1,@@ h[i]); if(b@@ >@@ c)@@ return@@ b; else@@ return@@ c; } intmain(){ scanf("%d",&n); inti,@@ max=0; for(i=0;i<n;i++){ scanf("%d",&h[i]); if(h@@ [i]>max) max=@@ h@@ [i]; } printf("%d",@@ hack@@ (@@ 0,@@ max@@ )); return0; }  
c -1
h -1
0

intmain() { intyear,month,day,@@ b,@@ i; for(i=1;i<=@@ 5@@ ;++i) { intcount@@ (int@@ month@@ ,int@@ year@@ ,int@@ day); scanf("%d%d%d",&year,&month,&day); b=@@ count@@ (@@ month,@@ year,@@ day); printf("%d\n",@@ b); } scanf("%d",&b); return0; } intcount@@ (int@@ month@@ ,int@@ year@@ ,int@@ day@@ ) { inta; if((year%4==0&&year%100!=0@@ )||@@ year%400==0) { switch(month) { case(@@ 1@@ ): a=@@ day;break; case(@@ 2)@@ : a@@ =31+@@ day;break; case(@@ 3@@ ): a=@@ 60@@ +day;break; case(@@ 4)@@ : a=@@ 91@@ +day;break; case(@@ 5@@ ): a=@@ 121@@ +day;break; case(@@ 6@@ ): a=@@ 152@@ +day;break; case(@@ 7@@ ): a=@@ 182@@ +day;break; case(@@ 8@@ ): a=@@ 213@@ +day;break; case(@@ 9@@ ): a=@@ 244@@ +day;break; case(@@ 10@@ ): a=@@ 274@@ +day;break; case(@@ 11@@ ): a=@@ 305@@ +day;break; case(@@ 12@@ ): a=@@ 335@@ +day;break; } } else { switch(month) { case(@@ 1@@ ): a=@@ day;break; case(@@ 2)@@ : a@@ =31+@@ day;break; case(@@ 3@@ ): a=@@ 59@@ +day;break; case(@@ 4)@@ : a=@@ 90@@ +day;break; case(@@ 5@@ ): a=@@ 120@@ +day;break; case(@@ 6@@ ): a=@@ 151@@ +day;break; case(@@ 7@@ ): a=@@ 181@@ +day;break; case(@@ 8@@ ): a=@@ 212@@ +day;break; case(@@ 9@@ ): a=@@ 243@@ +day;break; case(@@ 10@@ ): a=@@ 273@@ +day;break; case(@@ 11@@ ): a=@@ 304@@ +day;break; case(@@ 12@@ ): a=@@ 334@@ +day;break; } } return(@@ a); }  
c -1
h -1
intmain() { inti,j,k,@@ count=0,@@ row,@@ arr@@ [100][100],@@ n@@ [100@@ ],b[100]; for(i=0;i<@@ 100@@ ;i++){ count=0; for(j=0;j<@@ 100@@ ;j++){ scanf("%d",&@@ arr@@ [i][j]); if(@@ arr@@ [i][j]@@ ==0||@@ arr@@ [i][j]==@@ -1){ n[i]=@@ count; break; } count++; } if(@@ arr@@ [i][j]==@@ -1){ row@@ =i; break; } } for(i=0;i<row;i++){ count=0; for(j=0;j<n@@ [i]@@ ;j++){ for(k=j+1;k<@@ n[i]@@ ;k++){ if(@@ arr@@ [i][j]==@@ (@@ arr@@ [i][k]@@ *2@@ )||(@@ arr@@ [i][j]@@ *2@@ )==@@ arr@@ [i][k]@@ ){ count++; } } } b[i]=@@ count; } for(i=0;i<row;i++){ printf("\n%d",@@ b[i]); } return0; }  
c -1
h -1
0

intmain(){ intn,i,j,k; int@@ line@@ ,@@ row,@@ sum; intarray[@@ 200][@@ 200]; cin>>n; for(i=1;i<=n;i++){ cin>>@@ line@@ >>@@ row; for(j=0;j<@@ line@@ ;j++) for(k=0;k<@@ row@@ ;k++) cin>>array@@ [j]@@ [k]; sum=0; if(row@@ ==1||@@ line@@ ==1){ for(j=0;j<@@ line@@ ;j++) for(k=0;k<@@ row@@ ;k++) sum=sum+@@ array@@ [j]@@ [k]; cout<<sum<<endl; }else{ sum@@ =0@@ -@@ array[@@ 0][@@ 0]-@@ array[@@ 0][@@ row@@ -1]@@ -@@ array[@@ line@@ -1@@ ][@@ 0@@ ] -@@ array[@@ line@@ -1@@ ][@@ row@@ -1]; for(j=0;j<@@ line@@ ;j++) sum=sum+@@ array@@ [j]@@ [0]+@@ array@@ [j]@@ [@@ row@@ -1]; for(j=0;j<row@@ ;j++) sum=sum+@@ array@@ [0]@@ [j]+@@ array[@@ line@@ -1][j]; cout<<sum<<endl; } } return0; }  
c -1
h -1
intmain(intargc,char*argv[]) { intyear,month,day,@@ month2@@ ,@@ n; scanf("%d%d%d",&year,&month,&day); if(year%@@ 4==0&&year%100!=0@@ ||@@ year%400==0) month2@@ =@@ 29; else month2@@ =@@ 28; if(month==1) n=@@ day; if(month==2) n=31+@@ day; if(month==3) n=31+@@ month2@@ +day; if(month==@@ 4) n=31+@@ month2@@ +31+@@ day; if(month==@@ 5) n=31+@@ month2@@ +31+30+day; if(month==@@ 6) n=31+@@ month2@@ +31+30+31+@@ day; if(month==@@ 7) n=31+@@ month2@@ +31+30+31+30@@ +day; if(month==8) n=31+@@ month2@@ +31+30+31+30+31+@@ day; if(month==@@ 9) n=31+@@ month2@@ +31+30+31+30+31+31+@@ day; if(month==@@ 10) n=31+@@ month2@@ +31+30+31+30+31+31+30@@ +day; if(month==@@ 11) n=31+@@ month2@@ +31+30+31+30+31+31+30+31+@@ day; if(month==@@ 12) n=31+@@ month2@@ +31+30+31+30+31+31+30+31+30@@ +day; printf("%d",n); return0; }  
c -1
h -1
0

intb[@@ 2][@@ 10],@@ e@@ [@@ 20@@ ]={0},@@ c=0,@@ d=0; scanning@@ () { scanf("%d%d",&@@ c@@ ,&@@ d); } scanning_array@@ (int@@ y,int@@ x) { inti; for(i=0;i<x;i++) { scanf("%d",&@@ b[@@ y@@ ][i]); } } void@@ arrange@@ (intm,@@ inta[]) { inti,j,t; for(i=0;i<m;i++) for(j=0;j<m@@ -i-1;j++) { if(a[j]>a[j+1]) { t=a[j]; a[j]=a[j+1]; a[j+1]=t; } } } combine@@ (intx[],int@@ y@@ []) { inti; for(i=0;i<c@@ ;i++) e@@ [i]=@@ b[1@@ ]@@ [i]; for(i=@@ c@@ ;i<@@ c@@ +d@@ ;i++) e@@ [i]=@@ b[2@@ ]@@ [i-@@ c@@ ]; } print@@ () { inti; for(i=0;i<c@@ +d@@ ;i++) { printf("%d",@@ e@@ [i]); if(i!=@@ c@@ +d@@ -1) printf(""); } } voidmain() { scanning@@ (); scanning_array@@ (@@ 1,@@ c); scanning_array@@ (2,@@ d); arrange@@ (c,@@ b[1@@ ]); arrange@@ (@@ d,@@ b[2@@ ]); combine@@ (@@ b[1@@ ],b[@@ 2@@ ]); print(); }  
c -1
h -1
intmain() { intn,@@ m[@@ 10000@@ ],i,j,@@ x[@@ 10000],@@ z@@ =0,@@ h@@ =1; scanf("%d\n",&n); for(i=1;i<=n;i++) scanf("%d",&@@ x@@ [i@@ -1]); m@@ [0]=@@ x@@ [0]; for(i=2;i<=n;i++) {@@ z=0; for(j=1;j<=@@ i-1;j++) if(x@@ [j-1@@ ]==@@ x@@ [i-1@@ ]) z=1; if(z@@ ==0){@@ m[@@ h@@ ]=@@ x@@ [i-1]; h=@@ h@@ +1;} } for(i=0;i<=@@ h@@ -1;i++) {printf("%d",@@ m[i]); if(i!=@@ h@@ -1)@@ printf("@@ ");} return0; }  
c -1
h -1
0

intmain() { inti,j,n,@@ k,@@ l=0,@@ s[@@ 1000],@@ h@@ [1000][1000]; scanf("%d%d",&n,&k); for(i=0;i<n;i++) { scanf("%d",&s[i]); } for(i=0;i<n;i++) { for(j=0;j<n;j++) { h@@ [i][j]=@@ s[i]@@ +@@ s[j]; } } for(i=0;i<n;i++) { for(j=0;j<n;j++) { if(h@@ [i][j]==@@ k) { l=l@@ +1; } } } if(l@@ >0) { printf("yes"); } else { printf("no"); } return0; }  
c -1
h -1
intmain(){ doublen; inti; scanf("%lf",&n); char@@ sza@@ [@@ 600@@ ],@@ szb@@ [@@ 600]; scanf("%s",@@ sza@@ ); scanf("%s",@@ szb@@ ); int@@ a=0; int@@ b=strlen(@@ sza@@ ); int@@ c=strlen(@@ szb@@ ); for(i=0;i<b;i++){ if(@@ sza@@ [i]!='A'&&@@ sza@@ [i]!='T'&&@@ sza@@ [i]!='C'&&@@ sza@@ [i]!='G'){ a=1; } if(@@ szb@@ [i]!='A'&&@@ szb@@ [i]!='T'&&@@ szb@@ [i]!='C'&&@@ szb@@ [i]!='G'){ a=1; } if(b@@ !=@@ c){ a=1; }} double@@ d=0; double@@ e; if(a@@ ==1){ printf("error"); }else{ for(i=0;i<b;i++){ if(@@ sza@@ [i]==@@ szb@@ [i]){ d++; } } e=@@ d@@ /@@ b; if(e@@ >n){ printf("yes"); }else{ printf("no"); } } return0; }  
c -1
h -1
0

intmain() { intk,@@ m,n; cin>>k; int@@ u@@ ; for(@@ u@@ =1;@@ u@@ <=k;@@ u@@ ++){ inti,j; cin>>m>>n; int@@ input@@ [m@@ ][n]; for(i=0;i<m;i++){ for(j=0;j<n@@ ;j++)@@ cin>>@@ input@@ [i][j]; } intsum=0; for(i=0;i<m;i++){ sum+=@@ input@@ [i]@@ [0]+@@ input@@ [i]@@ [n-1]; } for(j=0;j<n;j++){ sum+=@@ input@@ [0]@@ [j]+@@ input@@ [m@@ -1][j]; } sum=sum-@@ input@@ [0][@@ 0]-@@ input@@ [0][@@ n-1]-@@ input@@ [@@ m-1][0]-@@ input@@ [@@ m-1][@@ n-1]; cout<<sum<<endl; } return0; }  
c -1
h -1
intmain() { intn,@@ y,@@ r,@@ d,@@ i; for(i=1;i<=@@ 5;i++) { scanf("%d%d@@ %d@@ \n",&@@ n,&@@ y,&@@ r); d=0; if((@@ y@@ >2@@ )&&(@@ n@@ %@@ 400==0)@@ )@@ d=1; if((@@ y@@ >2@@ )&&(@@ n@@ %100!=0@@ )&&(@@ n@@ %@@ 4@@ ==0)@@ )@@ d=1; d=d+@@ r; y@@ --; switch(@@ y) { case11:@@ d=d+@@ 30; case10:@@ d=d+@@ 31; case9:@@ d=d+@@ 30; case8:@@ d=d+@@ 31; case7:@@ d=d+@@ 31; case6:@@ d=d+@@ 30; case5:@@ d=d+@@ 31; case4:@@ d=d+@@ 30; case3:@@ d=d+@@ 31; case2:@@ d=d+@@ 28; case1:@@ d=d+@@ 31; } printf("%d\n",@@ d); } return0; }  
c -1
h -1
0

intmain(intargc,char*argv[]) { intn,i,j,@@ m,@@ b=0,@@ max; int@@ let@@ [26]={0}; char@@ a; structstudent{ intnum; charname[26]; }@@ book[999]; scanf("%d",&n); for(i=0;i<n;i++){ scanf("%d%s",&book[i].@@ num,&@@ book[i].name); } for(i=0;i<n;i++){ m=strlen(@@ book[i].name); for(j=0;j<m;j++){ let@@ [@@ book[i].@@ name@@ [j]@@ -'A']++; } } max=@@ let@@ [0]; for(i=0;i<@@ 25@@ ;i++){ if(@@ let@@ [i]@@ >max){ max=@@ let@@ [i]; b=i; } } a=@@ b@@ +'A'@@ ; printf("%c\n%d\n",@@ a,@@ max); for(i=0;i<n;i++){ m=strlen(@@ book[i].name); for(j=0;j<m;j++){ if(book[i].@@ name[j]==@@ a){ printf("%d\n",book[i].@@ num); } } } return0; }  
c -1
h -1
intmain() { inti,@@ row,col,@@ rst@@ =0,@@ cst@@ =0; int@@ R@@ ,@@ C@@ ; inta[100][100]; scanf("%d%d",&@@ R@@ ,&@@ C@@ ); for(row=0;row@@ <@@ R@@ ;@@ row++) { for(col=0;col@@ <@@ C@@ ;col@@ ++) { scanf("%d",&a[@@ row][col@@ ]); } } for(i=0;i<@@ R@@ +@@ C@@ -1;i++) { row@@ =@@ rst@@ ; col@@ =@@ cst@@ ; while(@@ row@@ !=@@ R@@ &&@@ col@@ !=-1) { printf("%d\n",a[@@ row][col@@ ]); row@@ ++; col@@ --; } if(@@ cst@@ !=@@ C@@ -1)@@ cst@@ ++; else@@ rst@@ ++; } return0; }  
c -1
h -1
0

intmain() { char@@ str1@@ [257]; char@@ str2@@ [257]; char@@ str3@@ [257]; cin>>@@ str1@@ >>@@ str2@@ >>@@ str3@@ ; char*@@ p=@@ NULL@@ ; p=strstr(@@ str1@@ ,@@ str2); if(p@@ !=NULL) { for(inti=0;i<@@ strlen(@@ str3@@ );i++) { *p@@ =*(@@ str3@@ +i); p++; } } printf("%s\n",@@ str1); return0; }  
c -1
h -1
intmain() { intn; scanf("%d",&n); inta[100][100]; inti,j; int@@ chang1@@ [100]; int@@ kuan@@ ,@@ chang@@ =0; for(i=0;i<n;i++) { for(j=0@@ ,@@ chang1@@ [i]@@ =0;j<@@ n;j++) { scanf("%d",&a[i][j]); if(a[i][j]==0) { chang1@@ [i]=@@ chang1@@ [i]@@ +1; } } } int@@ yo@@ ; for(@@ yo@@ =0;@@ yo@@ <n;@@ yo@@ ++) { if(@@ chang1@@ [@@ yo@@ ]!=0) { chang@@ =@@ chang1@@ [@@ yo@@ ]; break; } } intt; for(t@@ =0,@@ kuan@@ =0;t@@ <n;@@ t++) { if(@@ chang1@@ [t@@ ]==@@ 2) kuan@@ =@@ kuan@@ +1; } int@@ jieguo@@ ; jieguo@@ =@@ kuan@@ *(@@ chang@@ -2); printf("%d",@@ jieguo@@ ); return0; }  
c -1
h -1
0

intmain() { intsz[100][100]; introw,col; scanf("%d%d",&row,&col); for(inti=0;i<row;i++) { for(intj=0;j<col;j++) { scanf("%d",&sz[i][j]); } } for(intk=0@@ ;k<=@@ row+col-2@@ ;k++) { if((@@ k@@ <=col@@ -1)@@ &&(@@ k@@ <=row@@ -1)) { for(intl@@ =0;@@ l@@ <=k;@@ l++) { printf("%d\n",@@ sz[@@ l@@ ][@@ k-@@ l@@ ]); } } elseif((@@ k@@ <=col@@ -1)@@ &&(@@ k@@ >@@ row@@ -1)) { for(intm=0;m@@ <=row-1@@ ;m++) { printf("%d\n",@@ sz[m@@ ][@@ k-@@ m@@ ]); } } elseif((@@ k@@ >@@ col@@ -1)@@ &&(@@ k@@ <=row@@ -1)) { for(int@@ t=@@ k-@@ col@@ +1@@ ;t@@ <=k;@@ t++) { printf("%d\n",@@ sz[@@ t@@ ][@@ k-@@ t@@ ]); } } elseif((@@ k@@ >@@ col@@ -1)@@ &&(@@ k@@ >@@ row@@ -1)) { for(int@@ p=@@ k-@@ col@@ +1@@ ;p@@ <=row-1@@ ;p++) { printf("%d\n",@@ sz[@@ p@@ ][@@ k-@@ p@@ ]); } } } return0; }  
c -1
h -1
voidsort@@ (inta[],int@@ n); intmain() { intm,n,i,j,@@ a[100],b[100]; cin>>m>>n; for(i=0;i<m;i++){ scanf("%d",&a[i]); } sort@@ (a,m); for(j=0;j<n;j++){ scanf("%d",&@@ b[j]); } sort@@ (b,n); for(i=0;i<m;i++) cout<<a[i]<<""; for(j=0;j<n-1;j++) cout<<@@ b[j]@@ <<""; cout<<b[@@ n-1]; return0; } voidsort@@ (inta[],intn) { inti,j,@@ index@@ ,@@ temp; for(i=0;i<n-1;i++) { index@@ =i; for(j=i+1;j<n;j++) { if(a[@@ index@@ ]>@@ a[j]) index@@ =j; } temp=a[i]; a[i]=@@ a[@@ index@@ ]; a[@@ index@@ ]=temp; } }  
c -1
h -1
0

int@@ v@@ [100][100]; intsum@@ (intm,int@@ n) { int@@ su@@ =0; if(n@@ >=@@ 2@@ &&m@@ >=@@ 2) { for(inti=0;i<n;i++) { su@@ +=@@ v@@ [0]@@ [i]; su@@ +=@@ v@@ [m@@ -1]@@ [i]; } for(inti=1;i<@@ m-1;i++) { su@@ +=@@ v@@ [i]@@ [0]; su@@ +=@@ v@@ [i]@@ [n-1]; } } elseif(n@@ >=@@ 2@@ &&m@@ ==1) { for(inti=0;i<n;i++) { su@@ +=@@ v@@ [0]@@ [i]; } } elseif(m@@ >=@@ 2@@ &&n@@ ==1) { for(inti=0;i<n;i++) { su@@ +=@@ v@@ [i]@@ [0]; } } else { su@@ =@@ v@@ [0][@@ 0]; } return@@ su@@ ; } intmain() { int@@ times@@ ; cin>>@@ times@@ ; for(intk=0;k<@@ times@@ ;k++) { inta,b; cin>>a>>@@ b; for(inti=0;i<@@ a;i++) for(intj=0;j<@@ b;j++) cin>>@@ v@@ [i][j]; cout<<sum@@ (a,@@ b@@ )<<endl; } }  
c -1
h -1
main() { inti,j,k,l,@@ m,n; charid@@ [@@ 200][@@ 200]; intage@@ [100]; scanf("%d",&n); for(i=0;i<n;i++) { scanf("%s%d",@@ id[i],&@@ age[i]); } for(j=@@ 200@@ ;j@@ >=60@@ ;j--) { for(i=0;i<n;i++) {if(@@ age@@ [i]==@@ j) printf("%s\n",@@ id@@ [i]);} } for(i=0;i<n;i++) if(age[i]@@ <60) printf("%s\n",@@ id[i]); getchar(); getchar(); }  
c -1
h -1
0

intmain(){ inti; doublen,@@ a=0,b=0,@@ t=0,@@ k=0; chars[@@ 501],@@ str@@ [501]; scanf("%lf",&n); scanf("%s",s); scanf("%s",@@ str); for(i=0;s[i]@@ ;i++){ a++; } for(i=0;@@ str@@ [i]@@ ;i++){ b++; } if(a==@@ b){ for(i=0;s[i]@@ ;i++){ if((@@ s@@ [i]=='A'||@@ s@@ [i]=='G'||@@ s@@ [i]=='C'||@@ s@@ [i]=='@@ T')&&(@@ str@@ [i]=='A'||@@ str@@ [i]=='G'||@@ str@@ [i]=='C'||@@ str@@ [i]=='@@ T')@@ ){ if(s[i]==@@ str@@ [i]){ t++; } } else{ printf("error"); k=1; break; } } if(t@@ /@@ a@@ >@@ n@@ &&k@@ ==0){ printf("yes"); } elseif(@@ k@@ ==0){ printf("no"); } } else{ printf("error"); } return0; }  
c -1
h -1
intmain() { char@@ M@@ [3@@ ][@@ 20]; scanf("%s",@@ M@@ [0]); if(M@@ [0][@@ 0]@@ =='@@ i@@ ') printf("@@ iloveearth@@ "); elseif(@@ M@@ [0][@@ 0]@@ =='@@ s@@ ') printf("@@ sdjkhfksdahfjksdh111111lhfjkasdhkfhkasdhfklahsdjkfhsdk@@ "); else@@ printf("@@ programmingiscool@@ "); return0; }  
c -1
h -1
0

intmain(){ intk,@@ n,@@ i,@@ m,@@ x,y,@@ z,@@ c; c=0; scanf("%d",&n); scanf("%d",&k); inta[n]; for(i=0;i<n;i++){ scanf("%d",&(@@ a[i]@@ )); } for(i=0;i<n;i++){ for(x=0;x@@ <n;@@ x@@ ++){ if(x==@@ i){ continue; } if(a[x@@ ]+@@ a[i]==@@ k){ c=1; } } } if(c@@ ==0) { printf("no"); } else { printf("yes"); } return0; }  
c -1
h -1
intmain() { inta[1000][1000]; inti,j,@@ star1@@ ,@@ star2@@ ,@@ end1@@ ,@@ end2@@ ,@@ b,@@ n; intf@@ =0; scanf("%d",&n); for(i=0;i<n;i++){ for(j=0;j<n;j++){ scanf("%d",&a[i][j]); if(a[i][j]==0&&@@ f@@ ==0){ star1@@ =i+1; star2@@ =j+1; f=1; } if(a[i][j]@@ ==0){ end1@@ =i-1; end2@@ =j@@ -1; } } } b@@ =(@@ end1@@ -@@ star1@@ +1)*(@@ end2@@ -@@ star2@@ +1); printf("%d",@@ b); return0; }  
c -1
h -1
0

int@@ function@@ (int@@ num,int@@ k) { intj; intm=0; if(num@@ >1) {@@ for(j=k@@ ;j<=@@ num@@ ;j++) {@@ if(num@@ %j==0) {@@ m=m+@@ function@@ (@@ num@@ /j@@ ,j@@ );} } return@@ m; } else return1; } intmain() {@@ inti,j; intn; cin>>n; intnum@@ [100]; for(i=0;i<n;i++) {@@ cin>>@@ num[i]@@ ;} for(i=0;i<n;i++) {@@ cout<<@@ function@@ (@@ num@@ [i],@@ 2)<<endl; } return0; }  
c -1
h -1
voidmain() { inti,@@ l,@@ k,@@ g@@ [1000][@@ 16],@@ o@@ ; for(i=0;i<=@@ 999@@ ;i++) { ints=0; for(l=0;l<@@ 16@@ ;l++) { scanf("%d",&@@ g[i]@@ [l]); if(g@@ [i]@@ [l@@ ]@@ ==0)break; } if(g@@ [i][0]@@ ==-1)break; for(@@ o@@ =0;@@ o@@ <@@ 14@@ &&@@ g[i]@@ [@@ o@@ ]@@ >0@@ ;@@ o@@ ++) { for(k=@@ o@@ +1@@ ;k<@@ 15@@ ;k++) { if(g@@ [i][k]@@ -2*@@ g[i]@@ [@@ o@@ ]@@ ==0||@@ g[i]@@ [@@ o@@ ]@@ -2*@@ g@@ [i][k]@@ ==0) s=s+1; } } printf("%d\n",s); } }  
c -1
h -1
0

intmain(intargc,char*argv[]) { intyear,month,@@ date; int@@ a=0; scanf("%d%d%d",&year,&month,&@@ date@@ ); if(((@@ year%@@ 4==0)&&(@@ year%100!=0@@ ))@@ ||@@ year%@@ 400@@ ==0){ switch(month@@ ){ case1:@@ a=@@ date;break; case2:@@ a@@ =31+@@ date;break; case3:@@ a=31+29@@ +@@ date;break; case4:@@ a=31+29@@ +31+@@ date;break; case5:@@ a=31+29@@ +31+30@@ +@@ date;break; case6:@@ a=31+29@@ +31+30+31+@@ date;break; case7:@@ a=31+29@@ +31+30+31+30@@ +@@ date;break; case8:@@ a=31+29@@ +31+30+31+30+31+@@ date;break; case9:@@ a=31+29@@ +31+30+31+30+31+31+@@ date;break; case10:@@ a=31+29@@ +31+30+31+30+31+31+30@@ +@@ date;break; case11:@@ a=31+29@@ +31+30+31+30+31+31+30+31+@@ date;break; case12:@@ a=31+29@@ +31+30+31+30+31+31+30+31+30@@ +@@ date;break; } } else{ switch(month@@ ){ case1:@@ a=@@ date;break; case2:@@ a@@ =31+@@ date;break; case3:@@ a=31+28@@ +@@ date;break; case4:@@ a=31+28@@ +31+@@ date;break; case5:@@ a=31+28@@ +31+30@@ +@@ date;break; case6:@@ a=31+28@@ +31+30+31+@@ date;break; case7:@@ a=31+28@@ +31+30+31+30@@ +@@ date;break; case8:@@ a=31+28@@ +30@@ +31+30+31+@@ date;break; case9:@@ a=31+28@@ +31+30+31+30+31+31+@@ date;break; case10:@@ a=31+28@@ +31+30+31+30+31+31+30@@ +@@ date;break; case11:@@ a=31+28@@ +31+30+31+30+31+31+30+31+@@ date;break; case12:@@ a=31+28@@ +31+30+31+30+31+31+30+31+30@@ +@@ date;break; } } printf("%d\n",@@ a); return0; }  
c -1
h -1
intmain() { intn; scanf("%d",&n); inti,j; intt,@@ t1@@ ,@@ t2@@ ; inta[@@ 10000]; for(i=0;i<n;i++) { for(j=0;j<n;j++) { a[0]=@@ 255@@ ; scanf("%d",&@@ a[j+1@@ ]); if(a[j]@@ ==0&&@@ a@@ [j-1@@ ]==255@@ ) { t1@@ =j; } if(a@@ [j-1]@@ ==0&&@@ a[j]==@@ 255) { t2@@ =j@@ -1; } } } printf("%d",(@@ t2@@ -@@ t1@@ -1)*(@@ t2@@ -@@ t1@@ -1)); return0; }  
c -1
h -1
0

voidpaixu@@ () { inta[100],b[100],@@ sizea@@ ,@@ sizeb@@ ,i,j,@@ t; cin>>@@ sizea@@ >>@@ sizeb@@ ; for(i=1;i<=@@ sizea@@ ;i++) cin>>a[i]; for(i=1;i<=@@ sizeb@@ ;i++) cin>>b[i]; for(i=@@ sizea@@ ;i>=1;i--) for(j=1;j<i;j++) { if(a[j]>a[j+1]) { t=a[j]; a[j]=a[j+1]; a[j+1]=t; } } for(i=@@ sizeb@@ ;i>=1;i--) for(j=1;j<i;j++) { if(b[j]>b[j+1]) { t=@@ b[j]; b[j]=b[j+1]; b[j+1]=@@ t; } } for(i=1;i<=@@ sizea@@ ;i++) cout<<a[i]<<""; for(i=1;i<=@@ sizeb@@ ;i++) { cout<<@@ b[i]; if(i<@@ sizeb@@ ) cout<<"@@ "; else cout<<endl; } } intmain() { paixu@@ (); return0; }  
c -1
h -1
intmain() { intn,i,@@ age@@ [@@ MAX@@ +@@ 10],@@ num[@@ MAX@@ +@@ 10]; charid@@ [@@ MAX@@ +@@ 10@@ ][@@ ID_DIGITS@@ +1@@ ]={0}; scanf("%d",&n); for(i=0;i<n;i++){ scanf("%s%d",@@ id[i],&@@ age[i]); num[i]=@@ i; } int@@ flag@@ ,@@ tempnum@@ ,@@ tempage@@ ,j; char@@ tempid@@ [@@ ID_DIGITS@@ +1]; for(i=0;i<n-1;i++){ for(j=n-1@@ ;j>i@@ ;j--){ flag=0; if(age@@ [j]@@ >=60&&@@ age@@ [j-1]@@ <60@@ )@@ flag=1; elseif(@@ age@@ [j]@@ >=60&&@@ age@@ [j-1]@@ >=60){ if(age@@ [j]>@@ age@@ [j-1]@@ )@@ flag=1; elseif(@@ age@@ [j]==@@ age@@ [j-1]@@ ){ if(num@@ [j]<@@ num@@ [j-1]@@ )@@ flag=1; } } elseif(@@ age@@ [j]@@ <60&&@@ age@@ [j-1]@@ <60){ if(num@@ [j]<@@ num@@ [j-1]@@ )@@ flag=1; } if(flag@@ ){ tempnum@@ =@@ num@@ [j]; num@@ [j]=@@ num@@ [j-1]; num@@ [j-1]=@@ tempnum@@ ; tempage@@ =@@ age@@ [j]; age@@ [j]=@@ age@@ [j-1]; age@@ [j-1]=@@ tempage@@ ; strcpy(@@ tempid@@ ,@@ id@@ [j]); strcpy(id@@ [j],@@ id@@ [j-1]); strcpy(id@@ [j-1@@ ],@@ tempid@@ ); } } } for(i=0;i<n;i++){ printf("%s\n",@@ id[i]); } return0; }  
c -1
h -1
0

intmain() { inti,j,@@ h,@@ f; doublen,@@ sum,@@ k; char@@ sz[@@ 2][@@ 501]; scanf("%lf%s%s",&@@ n,@@ sz[@@ 0],@@ sz@@ [1]); sum=0; f=1; j@@ =strlen(@@ sz@@ [0]); h@@ =strlen(@@ sz@@ [1]); if(j!=@@ h@@ ){ printf("error\n"); }else{ for(i=0;i<j@@ ;i++){ if((@@ sz[0]@@ [i]=='A'||@@ sz[0]@@ [i]=='T'||@@ sz[0]@@ [i]=='C'||@@ sz[0]@@ [i]=='@@ G')&&(@@ sz@@ [1]@@ [i]=='A'||@@ sz@@ [1]@@ [i]=='T'||@@ sz@@ [1]@@ [i]=='C'||@@ sz@@ [1]@@ [i]=='@@ G')){ if(sz@@ [0]@@ [i]==@@ sz@@ [1]@@ [i]) sum+=@@ 1.0@@ ; }else{ printf("error\n"); f=0; break; } } if(f@@ !=0){ k=@@ sum/@@ (j@@ *1.0@@ ); if(k@@ >=@@ n){ printf("yes\n"); }else{ printf("no\n"); } } } return0; }  
c -1
h -1
intmain() { intk,m,n,@@ a[100][100],@@ i,j,@@ l,@@ sum@@ [100]={0}; cin>>k; for(l=1;l@@ <=k;@@ l++) { cin>>m>>n; for(i=1;i<=m;i++) for(j=1;j<=n;j++) cin>>a[i][j]; for(j=1;j<=n;j++) sum[@@ l@@ ]+=@@ a[1]@@ [j]; for(j=1;j<=n;j++) sum[@@ l@@ ]+=@@ a[m]@@ [j]; for(i=1;i<=m;i++) sum[@@ l@@ ]+=@@ a[i]@@ [1]; for(i=1;i<=m;i++) sum[@@ l@@ ]+=@@ a[i][@@ n]; sum[@@ l@@ ]=sum[@@ l@@ ]-@@ a[1@@ ][1@@ ]-@@ a[m@@ ][1@@ ]-@@ a[1@@ ][n@@ ]-@@ a[m@@ ][n]; cout<<@@ sum[@@ l@@ ]<<endl; } return0; }  
c -1
h -1
0

intmain(){ double@@ j,@@ n; inti,@@ l,@@ k,@@ p=0,@@ u@@ ,@@ h=0; chara[@@ 2][@@ 501]; scanf("%lf",&n); for(i=0;i<2@@ ;i++){ scanf("%s",@@ a[i]); } l=strlen(@@ a[0]); k=strlen(@@ a[1]); if(l@@ !=@@ k){ printf("error"); }else{ for(@@ u@@ =0;@@ u@@ <@@ l@@ ;@@ u@@ ++){ if((@@ a[0][@@ u@@ ]!='@@ A')@@ && (@@ a[0][@@ u@@ ]!='@@ T')@@ && (@@ a[0][@@ u@@ ]!='@@ G')@@ && (@@ a[0][@@ u@@ ]!='@@ C')@@ && (@@ a[1@@ ][@@ u@@ ]!='@@ A')@@ && (@@ a[1@@ ][@@ u@@ ]!='@@ T')@@ && (@@ a[1@@ ][@@ u@@ ]!='@@ G')@@ && (@@ a[1@@ ][@@ u@@ ]!='@@ C')){ p++; }else{ if(a[@@ 0][@@ u@@ ]==@@ a[1@@ ][@@ u@@ ]){ h@@ ++; } } } if(p@@ !=0){ printf("error"); }else{ j@@ =1.0*@@ h@@ /@@ l; if(j@@ >n){ printf("yes"); }else{ printf("no"); } } } return0; }  
c -1
h -1
inta[@@ 1000],b[1000]; intn,m; voidread@@ (){ inti; cin>>n>>m; for(i=0;i<n;i++) cin>>a[i]; for(i=0;i<m;i++) cin>>b[i]; } voidpaixu@@ (){ inti,j,@@ tem; for(i=0;i<n-1;i++){ for(j=0;j<n-1@@ -i;j++){ if(a[j]>a[j+1@@ ]){ tem@@ =@@ a[j]; a[j]=a[j+1]; a[j+1]=@@ tem; } } } for(i=0;i<m@@ -1;i++){ for(j=0;j<@@ m-1@@ -i;j++){ if(b[j]>b@@ [j+1@@ ]){ tem@@ =@@ b[j]; b[j]=b[j+1]; b[j+1]=@@ tem; } } } } voidcombine@@ (){ inti; for(i=n@@ ;i<@@ n+@@ m;i++){ a[i]=b[i-@@ n]; } } void@@ put@@ (){ inti; for(i=0;i<m+@@ n-1;i++) cout<<a[i]<<""; cout<<a[i]@@ <<endl; } intmain(){ read(); paixu@@ (); combine@@ (); put@@ (); return0; }  
c -1
h -1
0

intmain() { charstr[256],@@ sub[256],@@ re@@ [256]; scanf("%s%s%s",@@ str,@@ sub,@@ re); int@@ l1,l2@@ ; l1=strlen(@@ str); l2=strlen(@@ sub); inti,j,@@ m; for(i=0;i<l1;i++) { m=1; for(j=0;j<@@ l2@@ ;j++) { if(str@@ [i+j]!=@@ sub@@ [j]) { m=@@ 2; } } if(m==1) { for(j=0;j<@@ l2@@ ;j++) { str@@ [i+j@@ ]=@@ re@@ [j]; } break; } } printf("%s\n",@@ str); return0; }  
c -1
h -1
void@@ get_array@@ (inta[@@ ]); inta[@@ 101]; intmain() { get_array@@ (a); } void@@ get_array@@ (inta[@@ ]) { int@@ n1,n2; cin>>@@ n1@@ >>@@ n2; for(inti=0;i<@@ n1@@ ;i++) { cin>>a[i]; } for(inti=0;i<@@ n1@@ -1;i++) { for(intj=0;j<@@ n1@@ -1-i;j++) { if(a[j]>a[j+1]) { int@@ tmp; tmp=@@ a[j]; a[j]=a[j+1]; a[j+1]=@@ tmp; } } } cout<<a[0]; for(inti=1;i<@@ n1@@ ;i++) { cout<<""<<a[i]; } for(inti=0;i<@@ n2;i++) { cin>>a[i]; } for(inti=0;i<@@ n2@@ -1;i++) { for(intj=0;j<@@ n2@@ -1-i;j++) { if(a[j]>a[j+1]) { int@@ tmp; tmp=@@ a[j]; a[j]=a[j+1]; a[j+1]=@@ tmp; } } } for(inti=0;i<@@ n2;i++) { cout<<""<<a[i]; } return; }  
c -1
h -1
0

intmain() { introw,col; cin>>row>>col; int@@ data@@ [@@ row][col]; int(*p)@@ [@@ col@@ ]=@@ data@@ ; inti,j; for(i=0;i<row;i++) { for(j=0;j<col;j++) { cin>>@@ *(*(p+i)+j); } } intm,n; for(i=0;i<col;i++) { for(m@@ =0,@@ n@@ =i@@ -@@ m;@@ (m@@ <row@@ &&n@@ >=0@@ );@@ m@@ ++,@@ n@@ --) cout<<@@ *(*(p@@ +m@@ )+@@ n@@ )<<endl; } for(i=1;i<row;i++) { for(m=@@ i,@@ n=@@ col@@ -1;@@ (m@@ <row@@ &&n@@ >=0@@ );@@ m@@ ++,@@ n@@ --) cout<<@@ *(*(p@@ +m@@ )+@@ n@@ )<<endl; } return0; }  
c -1
h -1
voidmain(){ inta,b,c; intleap@@ =0; int@@ day@@ =0; scanf("%d%d%d",&a,&b,&c); if(a%@@ 400==0||(@@ a%4==0&&a%100!=0@@ ))@@ leap@@ =1; b@@ --; while(@@ b){ if(b@@ ==1||@@ b==@@ 3@@ ||@@ b==@@ 5@@ ||@@ b==@@ 7@@ ||@@ b==@@ 8@@ ||@@ b==@@ 10@@ ||@@ b==@@ 12@@ ){ b@@ --; day@@ +=@@ 31; } if(b==@@ 2@@ ){ b@@ --; day@@ +=@@ 28@@ +@@ leap@@ ; } if(b==@@ 4@@ ||@@ b==@@ 6@@ ||@@ b==@@ 9@@ ||@@ b==@@ 11@@ ){ b@@ --; day@@ +=@@ 30; } } day@@ +=@@ c; printf("%d",@@ day); }  
c -1
h -1
0

intt=0; int@@ mini@@ (int@@ k,int@@ i) { if(k@@ ==1)@@ t=t+1; for(@@ ;i<=@@ k;i++) { if(k@@ %i==0)@@ mini@@ (k@@ /i,i); } return0; } intmain() { intN@@ ,@@ n; scanf("%d",&N); for(n=0;n@@ <=@@ N@@ -1;@@ n++) { int@@ M@@ ; scanf("%d",&@@ M@@ ); mini@@ (@@ M@@ ,@@ 2); printf("%d\n",t); t=0; } }  
c -1
h -1
voidmain() { charstring@@ [260],@@ sub@@ [50@@ ],@@ replace@@ [50@@ ],@@ result@@ [260@@ ]; inti,j,@@ t=0,@@ mark@@ =0,@@ a=0; scanf("%s%s%s",@@ string,@@ sub,@@ replace); for(i=0;@@ string@@ [i]@@ !='\0'@@ ;i++,@@ mark@@ ++) { if(string@@ [i]==@@ sub@@ [0]) { a=0; for(@@ t=@@ i,j@@ =0;@@ sub@@ [j]@@ !='\0'@@ ;t@@ ++@@ ,j@@ ++) { if(@@ sub@@ [j]!=@@ string@@ [t@@ ]) { a=1; break; } } if(a@@ ==0){@@ break;} } } if(@@ mark@@ ==@@ strlen(@@ string@@ ))@@ printf("%s\n",@@ string); else { for(i=0;i<@@ mark@@ ;i++) { result@@ [i]=@@ string@@ [i]; } for(i=@@ mark@@ ,j@@ =0;j<@@ strlen(@@ replace@@ )@@ ;i++,j++) { result@@ [i]=@@ replace@@ [j]; } for(i=@@ mark@@ +j@@ ,@@ t=@@ mark@@ +@@ strlen(@@ sub@@ );@@ string@@ [t@@ ]!='\0'@@ ;i++,@@ t++) { result@@ [i]=@@ string@@ [t@@ ]; } result@@ [i]@@ ='\0'; printf("%s\n",@@ result); } return; }  
c -1
h -1
0

int@@ change@@ (inta,int@@ p) { inti,@@ count=0; for(i=@@ p@@ ;i<@@ a;i++) { if(a@@ %i==0&&@@ a/@@ i>=@@ i) { count++; intk,@@ t; k=@@ (int)@@ sqrt@@ (a@@ /i); for(@@ t=@@ 2@@ ;t@@ <=k;@@ t++) { if((@@ a/@@ i)@@ %@@ t@@ ==0) { count+=@@ change@@ (a/i,i); break; } } } } returncount; } intmain() { intn,i,@@ a; cin>>n; for(i=1;i<=n;i++) { int@@ total=0; cin>>a; total+=@@ change@@ (a,@@ 2); cout<<@@ total@@ +1<<endl; } return0; }  
c -1
h -1
intmain(){ inti,@@ m,n; double@@ d,@@ k,@@ r; k=0; char@@ p[@@ N@@ ],@@ q@@ [N]; scanf("%lf",&@@ r); scanf("%s",@@ p); scanf("%s",@@ q); m=strlen(@@ p); n=strlen(@@ q); if(m!=@@ n){ printf("error"); }else{ for(i=0;i<n;i++){ if((@@ p@@ [i]!='A'&&@@ p@@ [i]!='T'&&@@ p@@ [i]!='C'&&@@ p@@ [i]!='G')||(@@ q@@ [i]!='A'&&@@ q@@ [i]!='T'&&@@ q@@ [i]!='C'&&@@ q@@ [i]!='G')){ printf("error"); return0; }elseif(@@ p@@ [i]==@@ q@@ [i]){ k++; } } d@@ =1.0*@@ k/@@ n; if(d@@ >@@ r@@ ){ printf("yes"); }else{ printf("no"); } } return0; }  
c -1
h -1
0

intmain() { intn,m,@@ i,j,k,@@ p=0; scanf("%d%d",&n,&m); intsz[@@ 1000],@@ pl@@ [1000],@@ a; for(i=0;i<n;i++) { scanf("%d",&sz[i]); pl@@ [i]=@@ sz[i]; } for(k=0;k<n;k++) { for(j=1;j<n;j++) { a=@@ pl@@ [k]@@ +sz@@ [j]; if(a!=@@ m) { p++; } } } if(p==@@ n@@ *(@@ n-1@@ )) { printf("no"); } else { printf("yes"); } return0; }  
c -1
h -1
intmain(intargc,char*argv[]) { intyear,month,day; scanf("%d%d%d",&year,&month,&day); static@@ intdays@@ [13]={0,31,28,31,30,31,30,31,31,30,31,30,31}; if(((@@ year%4==0&&year%100!=0@@ )||@@ year%@@ 400==0)@@ &&@@ month==@@ 2@@ &&(@@ day@@ <@@ 1@@ ||@@ day@@ >@@ 29@@ )) { printf("@@ Illegal@@ input@@ .@@ \n"); return-1; } if(((@@ year%4==0&&year%100!=0@@ )||@@ year%@@ 400==0)@@ &&@@ month@@ !=@@ 2@@ &&(@@ day@@ <@@ 1@@ ||@@ day@@ >@@ days@@ [@@ month@@ ]@@ )) { printf("@@ Illegal@@ input@@ .@@ \n"); return-1; } intn=0; inti; for(i=1;i<month;i++) { n+=@@ days@@ [i]; } n+=@@ day; if(month@@ >2@@ &&(@@ (@@ year%4==0&&year%100!=0@@ )||@@ year%400==0)) { n++; } printf("%d",n); }  
c -1
h -1
0

intmain(){ inti,@@ year,@@ month,@@ day,@@ n=0; int@@ dayofmonth1@@ [@@ 12]={31,@@ 28,31,30,31,30,31,31,30,31,30,31@@ },@@ dayofmonth2@@ [@@ 12]={31,29,31,30,31,30,31,31,30,31,30,31}; scanf("%d%d%d",&year,&month,&day); if(year%@@ 4!=0@@ ||(@@ year%@@ 100==0&&@@ year%@@ 400!=0)) { for(i=0;i<month-1;i++) { n+=@@ dayofmonth1@@ [i]; } n=n+@@ day; printf("%d",n); } elseif((@@ year%4==0&&year%100!=0@@ )||@@ year%400==0) { for(i=0;i<month-1;i++) { n+=@@ dayofmonth2@@ [i]; } n=n+@@ day; printf("%d",n); } return0; }  
c -1
h -1
structstudent{ int@@ xuehao@@ ; intyuwen; intshuxue; int@@ mark@@ ; structstudent*next; }; intn; structstudent*creat@@ (int@@ max) { structstudent*head; structstudent*p1,*p2; n=0; p1=p2=(structstudent*)malloc(LEN); scanf("%d%d%d",&p1->@@ xuehao@@ ,&p1->@@ yuwen@@ ,&p1->@@ shuxue); head=p1; while(n@@ <@@ max@@ -1) { n++; if(n@@ !=1@@ )@@ p2->next=p1; p2=p1; p1=(structstudent*)malloc(LEN); scanf("%d%d%d",&p1->@@ xuehao@@ ,&p1->@@ yuwen@@ ,&p1->@@ shuxue); } p2->next=p1; p1->next@@ =0; returnhead; } voidmain() { intmax@@ ,i; structstudent*@@ table@@ ; scanf("%d",&@@ max); table@@ =@@ creat@@ (@@ max); for(i=0;i<3;i++) { int@@ mmax@@ =0; int@@ mark@@ =0; structstudent*@@ p; p=@@ table@@ ; do{ if(p->@@ shuxue@@ +p->@@ yuwen@@ >@@ mmax@@ &&@@ p->@@ mark@@ !=@@ -1@@ ){@@ mark@@ ++;@@ p->@@ mark@@ =@@ mark@@ ;@@ mmax@@ =p->@@ shuxue@@ +p->@@ yuwen@@ ;} p=p->next; }while(p@@ !=0); p=@@ table@@ ; do{ if(p->@@ mark@@ ==@@ mark@@ ){ printf("%d%d\n",@@ p->@@ xuehao@@ ,@@ p->@@ shuxue@@ +p->@@ yuwen@@ ); p->@@ mark@@ =-@@ 1@@ ;} p=p->next; }while(p@@ !=0); } }  
c -1
h -1
0

intmain() { intyear,@@ month1@@ [@@ 13]={0,31,@@ 28,31,30,31,30,31,31,30,31,30,31@@ },@@ month2@@ [@@ 13]={0,31,@@ 29@@ ,31,30,31,30,31,31,30,31,30,31@@ },@@ day,@@ month,@@ number@@ =0,@@ i; cin>>year>>@@ month>>@@ day; if(((@@ year%@@ 4==0)&&(@@ year%100!=0@@ )@@ )||(year%400==0)) { for(i=0;i<@@ month;i++) number@@ +=@@ month2@@ [i]; number@@ +=@@ day; } else { for(i=0;i<@@ month;i++) number@@ +=@@ month1@@ [i]; number@@ +=@@ day; } cout<<@@ number; return0; }  
c -1
h -1
intmain(){ intn,@@ c,@@ r,@@ x,@@ t,@@ r1@@ ,@@ r2@@ ,@@ c1@@ ,@@ c2@@ ; scanf("%d",&n); intsz[@@ n@@ ][n]; t=0; for(r=0;r@@ <n;@@ r@@ ++){ for(c=0;c@@ <n;@@ c@@ ++){ scanf("%d",&(@@ sz[@@ r@@ ][c@@ ]@@ )); if(t@@ ==0&&@@ sz[@@ r@@ ][c@@ ]==0){ r1@@ =@@ r; c1@@ =@@ c; t=1; } } } t=0; for(@@ r=@@ n-1;@@ r@@ >=0@@ ;r@@ --){ for(@@ c=@@ n-1;@@ c@@ >=0@@ ;c@@ --){ scanf("%d",&(@@ sz[@@ r@@ ][c@@ ]@@ )); if(t@@ ==0&&@@ sz[@@ r@@ ][c@@ ]==0){ r2@@ =@@ r; c2@@ =@@ c; t=1; } } } x@@ =(@@ r2@@ -@@ r1@@ -1)*(@@ c2@@ -@@ c1@@ -1); printf("%d",x); return0; }  
c -1
h -1
0

intf(int@@ t@@ ,int@@ k) { int@@ u@@ =1,i; if(t@@ >2) { for(i=k@@ ;i<=sqrt(@@ t@@ );i++) { if(t@@ %i==0) { u@@ +=@@ f(@@ t@@ /i,i); } } return@@ u@@ ; } elseif(@@ t@@ ==@@ 2) return1; elseif(@@ t@@ ==1) return0; } main() { inti,n,@@ t; scanf("%d",&n); for(i=0;i<n;i++) { scanf("%d",&t); printf("%d\n",@@ f(@@ t,@@ 2)); } }  
c -1
h -1
intmain() { chara[@@ 110@@ ],b[100@@ ][@@ 1000]; intn,i,@@ y,@@ l@@ ,j,@@ p=0,@@ q=0,@@ c[@@ 1000],@@ d[@@ 1000],@@ e@@ [1000],@@ m,@@ s,@@ g@@ [1000],@@ v@@ [1000]; scanf("%d",&n); for(i=1;i<=n;i++) { scanf("%s%d",@@ a,&@@ y); l@@ =strlen(a); for(j=0;j<l;j++) {@@ b@@ [i-1]@@ [j]=@@ a[j]@@ ;} b@@ [i-1@@ ][l@@ ]='\0'; c@@ [i-1@@ ]=@@ y; } for(i=0;i<n;i++) { if(c@@ [i]@@ >=60) { d[@@ p@@ ]=@@ c[i]; g@@ [p@@ ]=i; p++; } elseif(@@ c[i]@@ <60) { e@@ [q@@ ]=@@ c[i]; v@@ [q@@ ]=i; q++; } } for(j=0;j<=@@ p@@ -1;j++) { for(i=0;i<=@@ p@@ -1;i++) { if(d@@ [i]>@@ m) {@@ m=@@ d[i]; s@@ =i; } elseif(@@ d@@ [i]<=@@ m); } printf("%s\n",@@ b[@@ g@@ [s@@ ]@@ ]); m=0; d[@@ s@@ ]=0; } for(i=0;i<=@@ q@@ -1;i++) printf("%s\n",@@ b[@@ v@@ [i]@@ ]); }  
c -1
h -1
0

charstr[256],@@ sub[256],@@ repl@@ [256]; inti=0,j=0,@@ k,@@ m=0; main() { scanf("%s\n@@ %s@@ \n@@ %s",@@ str,@@ sub,@@ repl@@ ); for(i=0;@@ str@@ [i]!='\0';i++) { if(@@ sub@@ [0]==@@ str@@ [i]) { k@@ =i+1; j=1; for(j=1@@ ;@@ sub@@ [j]!='\0';j++) { if(@@ sub@@ [j]==@@ str@@ [k]) { k++; } else { break; } } if(@@ sub@@ [j]==@@ '\0') { break; } } } for(m@@ =0;@@ repl@@ [m]@@ !='\0'@@ ;m++) { if(str[i]==@@ '\0') { break; } str[i]=@@ repl@@ [m]; i++; } printf("%s\n",@@ str); getchar();getchar();getchar();getchar();@@ getchar();getchar();getchar();getchar();@@ getchar();getchar();getchar();getchar();@@ getchar();getchar();getchar();getchar();@@ getchar();getchar();getchar();getchar();@@ getchar();getchar();getchar();getchar();@@ getchar();getchar();getchar();getchar();@@ getchar();getchar();getchar();getchar();@@ getchar();getchar();getchar();getchar();@@ getchar();@@ getchar(); }  
c -1
h -1
long@@ intn; structstu { long@@ intnum,@@ chi@@ ,@@ mat@@ ,@@ tot@@ ; }; int@@ comp@@ (constvoid*a,constvoid*@@ b) { return(@@ (struct@@ stu@@ *)@@ b)@@ ->@@ tot@@ -(@@ (struct@@ stu@@ *)@@ a)@@ ->@@ tot@@ ; } structstu@@ a[@@ 100000],@@ b; intmain() { inti,j; scanf("%d",&n); for(i=0;i<n;i++) { scanf("%d%d%d",&a[i].@@ num,&@@ a[i].@@ chi@@ ,&a[i].@@ mat@@ ); a[i].@@ tot@@ =@@ a[i].@@ chi@@ +a[i].@@ mat@@ ; } qsort@@ (a,n,@@ sizeof(struct@@ stu@@ ),@@ comp@@ ); for(i=0;i<3;i++) printf("%d%d\n",@@ a[i].@@ num,@@ a[i].@@ tot@@ ); return0; }  
c -1
h -1
0

int@@ solutionNumber@@ (inta,int@@ k){ inti; if(a@@ ==1)@@ return1; if(k@@ >@@ a)@@ return0; for(i=k@@ ;i<=a;i++) if(a@@ %i==0)@@ return@@ solutionNumber@@ (a,@@ i@@ +1)@@ +@@ solutionNumber@@ (a/i,i); } intmain() { intn,a[@@ 101]; cin>>n; for(inti=1;i<=@@ n;i++){ cin>>a[i]; cout<<@@ solutionNumber@@ (a[i],@@ 2)<<endl; } return0; }  
c -1
h -1
structstudent { int@@ count; int@@ yu@@ ; int@@ shu; }stu[@@ 1000000@@ ]; voidmain() { intn,@@ i@@ ,*@@ p,@@ max=0,@@ sm@@ =0,@@ tm@@ =0,@@ j=0; p=@@ (int*)malloc(@@ 1000000@@ *sizeof(int)); scanf("%d",&n); for(i=0;i<n;i++) { scanf("%d%d%d",&stu[i].@@ count@@ ,&stu[i].@@ yu@@ ,&stu[i].@@ shu); *(p+i)@@ =stu[i].@@ yu@@ +stu[i].@@ shu; } for(i=0;i<n;i++) max@@ =(@@ max@@ >*@@ (p@@ +i)@@ )@@ ?@@ max@@ :@@ (@@ *(p@@ +i)); for(i=0;i<n;i++) {if((@@ *(p+i)@@ <@@ max@@ )&&(@@ *(p+i)@@ >@@ sm@@ )) sm@@ =*(p@@ +i@@ );} for(i=0;i<n;i++) {if((@@ *(p+i)@@ >@@ tm@@ )&&(@@ *(p+i)@@ <@@ sm@@ )) tm@@ =*(p@@ +i@@ );} for(i=0@@ ;j<@@ 3@@ ,i@@ <@@ n;i++) { if(@@ *(p+i)@@ ==@@ max) { printf("%d%d\n",stu[i].@@ count@@ ,max); j++; } } for(i=0@@ ;j<@@ 3@@ ,i@@ <@@ n;i++) {if(@@ *(p+i)@@ ==@@ sm@@ &&j@@ <@@ 3) { printf("%d%d\n",stu[i].@@ count,@@ sm@@ ); j++; } } for(i=0@@ ;j<@@ 3@@ ,i@@ <@@ n;i++) { if(@@ *(p+i)@@ ==@@ tm@@ &&j@@ <@@ 3) { printf("%d%d\n",stu[i].@@ count,@@ tm@@ ); j++; } } }  
c -1
h -1
0

int@@ v@@ [100][100]; intsum@@ (intm,int@@ n) { int@@ su@@ =0; if(n@@ >=@@ 2@@ &&m@@ >=@@ 2) { for(inti=0;i<n;i++) { su@@ +=@@ v@@ [0]@@ [i]; su@@ +=@@ v@@ [m@@ -1]@@ [i]; } for(inti=1;i<@@ m-1;i++) { su@@ +=@@ v@@ [i]@@ [0]; su@@ +=@@ v@@ [i]@@ [n-1]; } } elseif(n@@ >=@@ 2@@ &&m@@ ==1) { for(inti=0;i<n;i++) { su@@ +=@@ v@@ [0]@@ [i]; } } elseif(m@@ >=@@ 2@@ &&n@@ ==1) { for(inti=0;i<n;i++) { su@@ +=@@ v@@ [i]@@ [0]; } } else { su@@ =@@ v@@ [0][@@ 0]; } return@@ su@@ ; } intmain() { int@@ times@@ ; cin>>@@ times@@ ; for(intk=0;k<@@ times@@ ;k++) { inta,b; cin>>a>>@@ b; for(inti=0;i<@@ a;i++) for(intj=0;j<@@ b;j++) cin>>@@ v@@ [i][j]; cout<<sum@@ (a,@@ b@@ )<<endl; } }  
c -1
h -1
intmain() { static@@ inta[16@@ ],b[@@ 16]; intn,i,j,@@ s=0; while(@@ scanf("%d",&@@ a[0]@@ ),@@ a[0]@@ !=-1) { for(i=1;@@ a[i-1]@@ !=0;i++) {@@ b@@ [i-1@@ ]=@@ 2*@@ a[i@@ -1]; scanf("%d",&a[i]);} n@@ =i@@ -2@@ ; s=0; for(i=0;i<=@@ n;i++) for(j=0;j<=@@ n;j++) if(a[i]==@@ b[j]) { s@@ ++@@ ;break; } printf("%d\n",s); } }  
c -1
h -1
0

int@@ input@@ (int*@@ s@@ ,intn) { } int@@ sort@@ (int*@@ s@@ ,intn) { } main() { intm,n; scanf("%d%d",&m,&n); int*@@ a=@@ (int*)malloc(@@ m@@ *sizeof(int)); int*@@ b=@@ (int*)malloc(n*sizeof(int)); int*@@ s=@@ (int*)malloc(@@ (@@ m+@@ n)@@ *sizeof(int)); for(inti=0;i<m;i++) scanf("%d",a@@ +i); for(inti=0;i<n;i++) scanf("%d",@@ b@@ +i); for(inti=1;i<@@ m;i++) for(intj=0;j<@@ m@@ -i;j++) { if(@@ *(a@@ +j)@@ >*@@ (@@ a+@@ (j@@ +1)@@ )) { intt; t@@ =*@@ (a@@ +j); *(a@@ +j)@@ =*(@@ a+@@ (j@@ +1@@ )); *(a+@@ (j@@ +1)@@ )@@ =t; } } for(inti=1;i<@@ n;i++) for(intj=0;j<@@ n@@ -i;j++) { if(*(@@ b@@ +j)@@ >*@@ (@@ b+@@ (j@@ +1)@@ )) { intt; t@@ =*(@@ b@@ +j); *(@@ b@@ +j)@@ =*(@@ b+@@ (j@@ +1@@ )); *(@@ b+@@ (j@@ +1)@@ )@@ =t; } } for(inti=0;i<m;i++) s[i]=@@ a[i]; for(inti=0;i<n;i++) s[m@@ +i]=b[i]; for(inti=0;i<@@ m+n;i++) { if(i==0) printf("%d",@@ s[i]); else printf("%d",@@ s[i]); } }  
c -1
h -1
voidmain() { intn,i; int@@ diyi@@ ,@@ dier@@ ,@@ disan@@ ; diyi@@ =0; dier@@ =0; disan@@ =0; structstudent { intnum; intyuwen; intshuxue; intsum; }stu[@@ 99999@@ ]; scanf("%d",&n); for(i=0;i<n;i++) { scanf("%d%d%d",&stu[i].num,&stu[i].@@ yuwen@@ ,&stu[i].@@ shuxue); stu[i].sum=stu[i].@@ yuwen+stu[i].@@ shuxue; } for(i=0;i<n;i++) { if(stu[i].@@ sum>@@ stu[@@ diyi@@ ].@@ sum@@ ){@@ diyi@@ =i;} } for(i=0;i<n;i++) { while(i@@ !=@@ diyi@@ ) { dier@@ =i; break; } break; } for(i=0;i<n;i++) { if(i!=@@ diyi@@ ) { if(stu[i].@@ sum>@@ stu[@@ dier@@ ].@@ sum@@ ){@@ dier@@ =i;} } } for(i=0;i<n;i++) { while(i@@ !=@@ diyi@@ &&i!=@@ dier@@ ) { disan@@ =i; break; } break; } for(i=0;i<n;i++) { if(i!=@@ diyi@@ &&i!=@@ dier@@ ) { if(stu[i].@@ sum>@@ stu[@@ disan@@ ].@@ sum@@ ){@@ disan@@ =i;} } } printf("%d%d\n",@@ diyi@@ +1,@@ stu[@@ diyi@@ ].sum); printf("%d%d\n",@@ dier@@ +1,@@ stu[@@ dier@@ ].sum); printf("%d%d\n",@@ disan@@ +1,@@ stu[@@ disan@@ ].sum); }  
c -1
h -1
0

intmain() { intm,n,i,j,@@ l; scanf("%d%d",&n,&m); int@@ *p@@ [100]; for(i=0;i<n;i++) *(p+i)@@ =@@ (int*)malloc(@@ m@@ *sizeof(int)); for(i=0;i<n;i++) for(j=0;j<m;j++) scanf("%d",*(p+i)+j); for(i=0;i<m;i++) { if(i@@ -(@@ n-1)@@ >=0) { for(l=0;l<n;l++) printf("%d\n",*(@@ *(p+@@ l@@ )+@@ (i@@ -l@@ )@@ )); } else { for(l=0;l@@ <=i@@ ;l++) printf("%d\n",*(@@ *(p+@@ l@@ )+@@ (i@@ -l@@ )@@ )); } } for(i=1;i<n;i++) { if(n@@ -i@@ >=@@ m) { for(l=0;l<@@ m;@@ l++) printf("%d\n",*(@@ *(p+@@ (i@@ +l@@ ))@@ +@@ (m@@ -(@@ 1@@ +l@@ ))@@ )); } else { for(l=0;l<@@ n-i@@ ;l++) printf("%d\n",*(@@ *(p+@@ (i@@ +l@@ ))@@ +@@ (m@@ -(@@ 1@@ +l@@ ))@@ )); } } return0; }  
c -1
h -1
inta[100@@ ][2@@ ]; intn@@ [2@@ ],@@ i,j,k,@@ t; int@@ order@@ (int@@ j) { for(i=1;i<@@ n@@ [j]@@ ;i++) for(k@@ =i+1@@ ;k<=@@ n@@ [j]@@ ;k++) { if(a[i][j]@@ >@@ a[k]@@ [j]) { a[i]@@ [j]=@@ a[i][j]@@ ^@@ a[k]@@ [j]; a[k]@@ [j]=@@ a[i][j]@@ ^@@ a[k]@@ [j]; a[i]@@ [j]=@@ a[i][j]@@ ^@@ a[k]@@ [j]; } } } intmain() { cin>>n@@ [0]@@ >>@@ n@@ [1]; for(i=1;i<=n@@ [0]@@ ;i++)@@ cin>>@@ a[i][0]; for(i=1;i<=n@@ [1]@@ ;i++)@@ cin>>@@ a[i]@@ [1]; order@@ (@@ 0); order@@ (@@ 1); for(i=1;i<=n@@ [0]@@ ;i++)@@ cout<<a[i]@@ [0]@@ <<''; for(i=1;i<@@ n@@ [1]@@ ;i++)@@ cout<<a[i]@@ [1]@@ <<''; cout<<@@ a[n@@ [1]@@ ][1@@ ]<<endl; return0; }  
c -1
h -1
0

intsum@@ =1@@ ,j=@@ 2; void@@ num@@ (int@@ ); intmain() { intn,@@ a[100]; inti; cin>>n; for(i=1;i<=n;i++) { cin>>a[i]; num@@ (@@ a[i]); cout<<sum<<endl; sum@@ =1@@ ,j=@@ 2; } return0; } void@@ num@@ (int@@ a) { intk; for(k=j@@ ;k<=@@ sqrt(@@ a)@@ ;k++) { if(a%@@ k@@ ==0) { sum=sum+1; j=@@ k; num@@ (a@@ /@@ k); } } }  
c -1
h -1
structstudent { intnum; int@@ score1@@ ; int@@ score2; int@@ score; }; voidmain() { intn; scanf("%d",&n); structstudentstu[100000]; structstudent@@ *p,*@@ p1,*@@ t1@@ ,*@@ t2@@ ,*@@ t3@@ ; int@@ tem@@ ,@@ tem1@@ ; for(p=@@ stu@@ ;p<@@ stu@@ +n;@@ p++) { scanf("%d%d%d",&@@ p->@@ num,&@@ p->@@ score1@@ ,&p->@@ score2); p->@@ score@@ =p->@@ score1@@ +p->@@ score2; } int@@ max; for(p=@@ stu@@ ,@@ t1@@ =stu@@ ,@@ max=@@ stu@@ ->score@@ ;p<@@ stu@@ +n;@@ p++) { if(p->@@ score@@ >max@@ ){@@ t1@@ =p@@ ;@@ max=@@ p->@@ score@@ ;} } for(p=@@ stu@@ ,@@ t2@@ =stu@@ ,@@ max=@@ stu@@ ->score@@ ;p<@@ stu@@ +n;@@ p++) { if(p==@@ t1@@ )continue; if(p->@@ score@@ >max@@ ){@@ t2@@ =p@@ ;@@ max=@@ p->@@ score@@ ;} } for(p=@@ stu@@ ,@@ t3@@ =stu@@ ,@@ max=@@ stu@@ ->score@@ ;p<@@ stu@@ +n;@@ p++) { if((@@ p@@ ==@@ t1@@ )||(@@ p@@ ==@@ t2@@ ))@@ continue; if(p->@@ score@@ >max@@ ){@@ t3@@ =p@@ ;@@ max=@@ p->@@ score@@ ;} } printf("%d%d\n",@@ t1@@ ->num,@@ t1@@ ->score@@ ); printf("%d%d\n",@@ t2@@ ->num,@@ t2@@ ->score@@ ); printf("%d%d\n",@@ t3@@ ->num,@@ t3@@ ->score@@ ); }  
c -1
h -1
0

intmain(){ int@@ flag@@ =1,@@ i,@@ n,m,@@ j; charstr[256],@@ sub[256],@@ rep@@ [256]; scanf("%s@@ %s%s",&@@ str@@ ,&@@ sub@@ ,&@@ rep); n=strlen(@@ str); m=strlen(@@ sub); for(i=0;i<n;i++){ if(str[i]==@@ sub@@ [0]){ flag=1; for(j=0;j<m;j++){ if(str@@ [i+j]!=@@ sub@@ [j]){ flag=0; break; } } if(flag@@ ==1){ for(j=0;j<m;j++){ str@@ [i+j@@ ]=@@ rep@@ [j]; } break; } } } printf("%s",str); return0; }  
c -1
h -1
voidmain() { intyear,month,day,@@ num=0; scanf("%d%d%d",&year,&month,&day); if(year%@@ 4!=0@@ ||(@@ year%@@ 100==0&&@@ year@@ /@@ 400!=0)) { switch(month@@ -1) { case11:@@ num+=@@ 30; case10:@@ num+=@@ 31; case9:@@ num+=@@ 30; case8:@@ num+=@@ 31; case7:@@ num+=@@ 31; case6:@@ num+=@@ 30; case5:@@ num+=@@ 31; case4:@@ num+=@@ 30; case3:@@ num+=@@ 31; case2:@@ num+=@@ 28; case1:@@ num+=@@ 31; case@@ 0@@ :@@ ;break; } num+=@@ day; } else { switch(month@@ -1) { case11:@@ num+=@@ 30; case10:@@ num+=@@ 31; case9:@@ num+=@@ 30; case8:@@ num+=@@ 31; case7:@@ num+=@@ 31; case6:@@ num+=@@ 30; case5:@@ num+=@@ 31; case4:@@ num+=@@ 30; case3:@@ num+=@@ 31; case2:@@ num+=@@ 29; case1:@@ num+=@@ 31; case@@ 0@@ :@@ ;break; } num+=@@ day; } printf("%d\n",num); }  
c -1
h -1
0

struct@@ pa { charid[10]; intage; }@@ patient@@ [100],@@ patient2@@ [100]; voidmain() { inti,k,@@ m,n,@@ j,@@ temp; char@@ id2@@ [10]; scanf("%d\n",&n); for(i=0;i<n;i++) { scanf("%s@@ %d\n",@@ patient@@ [i].id,&@@ patient@@ [i].age); } for(i=0,j@@ =0;i<@@ n;@@ ) { if(@@ patient@@ [i].age>=60) { strcpy(@@ patient2@@ [j].@@ id,@@ patient@@ [i].id); patient2@@ [j].age@@ =@@ patient@@ [i].age; j++; for(k=i@@ ;k<@@ n-1;k++) { strcpy(@@ patient@@ [k].@@ id,@@ patient@@ [k+1@@ ].id); patient@@ [k@@ ].age=@@ patient@@ [k+1@@ ].@@ age; } n--; } else@@ i++; } for(i=1;i<@@ j@@ ;i++) { for(k=0;k<i;k++) { if(@@ patient2@@ [i].age@@ >@@ patient2@@ [k@@ ].age) { temp=@@ patient2@@ [i].age; strcpy(@@ id2@@ ,@@ patient2@@ [i].id); for(m@@ =i@@ ;m@@ >@@ k@@ ;m@@ --) { patient2@@ [m@@ ].age=@@ patient2@@ [@@ m-1@@ ].@@ age; strcpy(@@ patient2@@ [m@@ ].id,@@ patient2@@ [@@ m-1@@ ].id); } patient2@@ [k@@ ].age=@@ temp; strcpy(@@ patient2@@ [k].@@ id,@@ id2@@ ); } } } for(i=0;i<j@@ ;i++)@@ printf("%s\n",@@ patient2@@ [i].id); for(i=0;i<n;i++)@@ printf("%s\n",@@ patient@@ [i].id); }  
c -1
h -1
intmain() { intn; scanf("%d",&n); int@@ nj@@ [N]; int@@ lr@@ [N@@ ],@@ xr@@ [N]; charzfc@@ [N@@ ][@@ 20]; inti; intm=0,@@ k=0; for(i=0;i<n;i++) { scanf("%s",@@ zfc@@ [i]); scanf("%d",&@@ nj@@ [i]); } for(i=0;i<n;i++) { if(@@ nj@@ [i]@@ >=60) { lr@@ [m]=@@ i; m++; } else { xr@@ [k]=@@ i; k++; } } intj; if(m@@ >=@@ 2) { for(i=0;i<m-1;i++) { for(j=@@ m-1@@ ;j>i;j--) { int@@ e; if(@@ nj@@ [@@ lr@@ [j]@@ ]>@@ nj@@ [@@ lr@@ [j-1]@@ ]) { e=@@ lr@@ [j]; lr@@ [j]=@@ lr@@ [j-1]; lr@@ [j-1]=@@ e; } elseif(@@ nj@@ [@@ lr@@ [j]@@ ]==@@ nj@@ [@@ lr@@ [j-1]@@ ]@@ &&(@@ lr@@ [j]<@@ lr@@ [j-1]@@ )) { e=@@ lr@@ [j]; lr@@ [j]=@@ lr@@ [j-1]; lr@@ [j-1]=@@ e; } } } } if(m@@ >=@@ 1) { for(i=0;i<m;i++) { printf("%s\n",@@ zfc@@ [@@ lr@@ [i]@@ ]); } } if(k@@ >0) { for(i=0;i<k;i++) { printf("%s\n",@@ zfc@@ [@@ xr@@ [i]@@ ]); } } return0; }  
c -1
h -1
1


intmain() { chars[256],@@ a[@@ 256],b[@@ 256],@@ ci@@ [256@@ ][@@ 256]; int@@ ls@@ ,@@ la@@ ,lb@@ ; gets(s); gets(a); gets(b); ls@@ =strlen(s); la@@ =strlen(a); lb@@ =strlen(b); inti,j; for(i=0;i<=@@ ls@@ -@@ la;i++) { for(j=0;j<@@ la@@ ;j++) { ci@@ [i][j]=@@ s[i+j@@ ]; } ci@@ [i]@@ [@@ la@@ ]='\0'; } for(i=0;i<=@@ ls@@ -@@ la;i++) { if(strcmp(@@ ci@@ [i],@@ a)@@ ==0) { strcpy(@@ ci@@ [i],@@ b); break; } } if(i!=@@ ls@@ -@@ la@@ +1) { for(j=0;j<i;j++) { printf("%c",@@ ci@@ [j]@@ [0]); } printf("%s",@@ ci@@ [i]); if(i!=@@ ls@@ -@@ la@@ ) { for(j=i@@ +@@ la@@ ;j<@@ ls@@ -@@ la@@ ;j++) { printf("%c",@@ ci@@ [j]@@ [0]); } printf("%s",@@ ci@@ [@@ ls@@ -@@ la@@ ]); } } else { for(j=0;j<@@ ls@@ -@@ la@@ ;j++) { printf("%c",@@ ci@@ [j]@@ [0]); } printf("%s",@@ ci@@ [@@ ls@@ -@@ la@@ ]); } return0; }  
c -1
h -1
intmain() { intn,i,j,@@ flag=0; int*p; scanf("%d",&n); p=@@ (int*)malloc(sizeof(int)*n); scanf("%d",&@@ p@@ [0]); printf("%d",@@ p@@ [0]); for(i=1;i<=n-1;i++) { scanf("%d",&@@ p[i]); for(j=0;j<i;j++) { if(p@@ [i]==@@ p@@ [j]) flag=1; } if(flag==0) printf("%d",@@ p[i]); flag=0; } return0; }  
c -1
h -1
0

intmain() { intk,@@ height@@ [25],@@ maxC@@ [25@@ ]={0},@@ j,@@ i,@@ max=0; scanf("%d",&k); for(i=0;i<k;i++) { scanf("%d",&@@ height@@ [i]); for(j=0@@ ,@@ max@@ =0;j<@@ i;j++) { if(@@ height@@ [j]>=@@ height@@ [i]) if(@@ maxC@@ [j]@@ >max) max=@@ maxC@@ [j]; } if(max@@ ==0)@@ maxC@@ [i]=1; else@@ maxC@@ [i]=@@ ++@@ max; } for(i=1@@ ,@@ max@@ =0;i<@@ k;i++) if(@@ maxC@@ [i]>max) max=@@ maxC@@ [i]; printf("%d\n",max); return0; }  
c -1
h -1
long@@ intn; structstu { long@@ intnum,@@ chi@@ ,@@ mat@@ ,@@ tot@@ ; }; int@@ comp@@ (constvoid*a,constvoid*@@ b) { return(@@ (struct@@ stu@@ *)@@ b)@@ ->@@ tot@@ -(@@ (struct@@ stu@@ *)@@ a)@@ ->@@ tot@@ ; } structstu@@ a[@@ 100000],@@ b; intmain() { inti,j; scanf("%d",&n); for(i=0;i<n;i++) { scanf("%d%d%d",&a[i].@@ num,&@@ a[i].@@ chi@@ ,&a[i].@@ mat@@ ); a[i].@@ tot@@ =@@ a[i].@@ chi@@ +a[i].@@ mat@@ ; } qsort@@ (a,n,@@ sizeof(struct@@ stu@@ ),@@ comp@@ ); for(i=0;i<3;i++) printf("%d%d\n",@@ a[i].@@ num,@@ a[i].@@ tot@@ ); return0; }  
c -1
h -1
0

intf(inta,int@@ min) { inti; if(a<@@ min) { return0; } int@@ result=1; for(inti=@@ min@@ ;i<@@ a;i++) { if(a%i==0) { result+=@@ f(a@@ /i,i); } } returnresult; } intmain() { intn,@@ a; cin>>n; while(cin>>@@ a) { cout<<@@ f(a,@@ 2)<<endl; } return0; }  
c -1
h -1
intmain() { intn,i,@@ a[100],@@ k,@@ b[100@@ ],@@ j; scanf("%d",&n); for(i=1;i<=@@ 100;i++) a[i]=0; j=1; for(i=1;i<=n;i++) { scanf("%d",&k); if(a[k]@@ ==0){ b[j]=@@ k; j++; } a[k]@@ =1; } for(i=1;i<@@ (j@@ -1);i++) printf("%d",b[i]); printf("%d",@@ b@@ [j-1]); return0; }  
c -1
h -1
0

struct@@ info { short@@ intnum; charauthor@@ [27]; }; intmain() { char@@ findoutmax@@ (struct@@ info@@ a[@@ ],intn,@@ int*@@ pt@@ ); void@@ detect@@ (struct@@ info@@ b[@@ ],@@ char@@ writter@@ ,int@@ nn@@ ); char@@ figure@@ ; inti,@@ n_book@@ ,@@ max@@ ,*p; struct@@ info@@ book[999]; scanf("%d",&@@ n_book@@ ); for(i=0;i<@@ n_book@@ ;i++) { scanf("%d%s",&book[i].num,@@ &@@ book[i].author); } p@@ =&@@ max; figure@@ =@@ findoutmax@@ (@@ book@@ ,@@ n_book@@ ,@@ p); printf("%c\n%d\n",@@ figure@@ ,max); detect@@ (@@ book@@ ,@@ figure@@ ,@@ n_book@@ ); return0; } char@@ findoutmax@@ (struct@@ info@@ a[@@ ],intn,@@ int*@@ pt@@ ) { inti,j,@@ sum@@ [26]={0}; for(i=0;i<n;i++) { for(j=0;@@ a[i].@@ author@@ [j]!='\0';j++) { switch(@@ a[i].@@ author@@ [j]) { case'@@ A@@ ':sum[@@ 0]=@@ sum@@ [0]@@ +1@@ ;break; case'@@ B@@ ':@@ sum@@ [1]=@@ sum@@ [1]@@ +1@@ ;break; case'@@ C@@ ':@@ sum@@ [2]=@@ sum@@ [2]@@ +1@@ ;break; case'@@ D@@ ':sum[@@ 3@@ ]=sum[@@ 3@@ ]+1;break; case'@@ E@@ ':sum[@@ 4@@ ]=sum[@@ 4@@ ]+1;break; case'@@ F@@ ':sum[@@ 5@@ ]=sum[@@ 5@@ ]+1;break; case'@@ G@@ ':sum[@@ 6@@ ]=sum[@@ 6@@ ]+1;break; case'@@ H@@ ':sum[@@ 7@@ ]=sum[@@ 7@@ ]+1;break; case'@@ I@@ ':sum[@@ 8@@ ]=sum[@@ 8@@ ]+1;break; case'@@ J@@ ':sum[@@ 9@@ ]=sum[@@ 9@@ ]+1;break; case'@@ K@@ ':sum[@@ 10@@ ]=sum[@@ 10@@ ]+1;break; case'@@ L@@ ':sum[@@ 11@@ ]=sum[@@ 11@@ ]+1;break; case'@@ M@@ ':sum[@@ 12@@ ]=sum[@@ 12@@ ]+1;break; case'@@ N@@ ':sum[@@ 13@@ ]=sum[@@ 13@@ ]+1;break; case'@@ O@@ ':sum[@@ 14@@ ]=sum[@@ 14@@ ]+1;break; case'@@ P@@ ':sum[@@ 15@@ ]=sum[@@ 15@@ ]+1;break; case'@@ Q@@ ':sum[@@ 16@@ ]=sum[@@ 16@@ ]+1;break; case'@@ R@@ ':sum[@@ 17@@ ]=sum[@@ 17@@ ]+1;break; case'@@ S@@ ':sum[@@ 18@@ ]=sum[@@ 18@@ ]+1;break; case'@@ T@@ ':sum[@@ 19@@ ]=sum[@@ 19@@ ]+1;break; case'@@ U@@ ':sum[@@ 20@@ ]=sum[@@ 20@@ ]+1;break; case'@@ V@@ ':sum[@@ 21@@ ]=sum[@@ 21@@ ]+1;break; case'@@ W@@ ':sum[@@ 22@@ ]=sum[@@ 22@@ ]+1;break; case'@@ X@@ ':sum[@@ 23@@ ]=sum[@@ 23@@ ]+1;break; case'@@ Y@@ ':sum[@@ 24@@ ]=sum[@@ 24@@ ]+1;break; case'@@ Z@@ ':sum[@@ 25@@ ]=sum[@@ 25@@ ]+1;break; } } } j=0; for(i=1;i<26;i++) { if(sum@@ [j]<@@ sum@@ [i])@@ j=i; } *@@ pt@@ =@@ sum@@ [j]; return(@@ 65@@ +j); } void@@ detect@@ (struct@@ info@@ b[@@ ],@@ char@@ writter@@ ,int@@ nn@@ ) { inti,j; for(i=0;i<@@ nn@@ ;i++) { for(j=0;@@ b[i].@@ author@@ [j]!='\0';j++) { if(b[i].@@ author@@ [j]==@@ writter@@ ) { printf("%d\n",b[i].@@ num); } } } }  
c -1
h -1
intmain() { chars[@@ 1000],@@ a[@@ 50@@ ],b[@@ 50]; inti,@@ lenb@@ ,@@ n,@@ j,@@ flag; int@@ k=@@ 10001@@ ; gets(s); gets(a); gets(b); lenb@@ =@@ (int)@@ strlen(@@ b); for(i=0;i<=@@ (int)@@ strlen(@@ s)@@ ;i++,@@ flag@@ =0@@ ){ for(@@ n=0,@@ j@@ =i;@@ a[n@@ ]!='\0'@@ ;n@@ ++@@ ,j@@ ++){ if(s@@ [j]!=@@ a[n@@ ]){ flag=1; break; } } if(flag) continue; else{ k=i; break; } } for(i=0;i<strlen(@@ s@@ );i++){ if(i==@@ k){ printf("%s",@@ b); i@@ =i+@@ lenb@@ -1; continue; } else printf("%c",s[i]); } return0; }  
c -1
h -1
0

voidmain() { inti,j,@@ row,col,@@ m; scanf("%d%d",&row,&col); int(*p)@@ [@@ col@@ ]; p=@@ (int@@ (@@ *)@@ [@@ col@@ ])@@ calloc@@ (@@ row,@@ col@@ *sizeof(int)); for(i=0;i<row;i++) for(j=0;j<col;j++) scanf("%d",*(p+i)+j); for(i=0;i<col;i++) {m@@ =(@@ i<=@@ (@@ row-1)@@ ?@@ i@@ :@@ (@@ row@@ -1)); for(j=0;j<=@@ m@@ ;j++)@@ printf("%d\n",@@ *(*(p@@ +j)@@ +i-j@@ )@@ );} for(j=0;j<row@@ -1;j++) { m@@ =(@@ (@@ row-1)@@ <=@@ (@@ col@@ +j)@@ ?@@ (@@ row-1)@@ :@@ (@@ col@@ +j)); for(i=1@@ +j@@ ;i<=@@ m@@ ;i++)@@ printf("%d\n",@@ *(*(p+i)@@ +col@@ -i@@ +j)@@ );} }  
c -1
h -1
intmain() { intn=0,@@ sz@@ [100],@@ erbei@@ [100@@ ],*@@ p1,*p2@@ ,@@ sum=0; p1=@@ sz@@ ; p2=@@ erbei@@ ; for(p1=@@ sz@@ ;@@ ;@@ p1@@ ++){ scanf("%d",@@ p1); n++; if(*@@ p1@@ ==0){ for(p1=@@ sz@@ ;@@ p1@@ <@@ sz@@ +@@ n-1;@@ p1@@ ++){ *p2@@ =*@@ p1@@ *2@@ ; p2@@ ++; } for(@@ p2=@@ erbei@@ ;@@ p2@@ <@@ erbei@@ +@@ n-1;@@ p2@@ ++){ for(p1=@@ sz@@ ;@@ p1@@ <@@ sz@@ +@@ n-1;@@ p1@@ ++){ if(*@@ p2@@ ==@@ *@@ p1@@ ){ sum++; } } } printf("%d\n",sum); p1=@@ sz@@ -1; p2=@@ erbei@@ ; sum=0; n=0; } if(*@@ p1@@ ==@@ -1){ break; } } return0; }  
c -1
h -1
0

intmain() { double@@ rate@@ ; scanf("%lf",&@@ rate@@ ); chara[501],b[501]; scanf("%s%s",a,b); int@@ len1@@ =strlen(a); int@@ len2@@ =strlen(b); if(len1!=@@ len2) { printf("error\n"); return0; } inti,@@ sum=0; for(i=0;i<len1;i++) { switch(@@ a[i]) { case'@@ A@@ ':@@ break; case'@@ T@@ ':@@ break; case'@@ C@@ ':@@ break; case'@@ G@@ ':@@ break; default@@ :@@ printf("error\n"); return0; } switch(@@ b[i]) { case'@@ A@@ ':@@ break; case'@@ T@@ ':@@ break; case'@@ C@@ ':@@ break; case'@@ G@@ ':@@ break; default@@ :@@ printf("error\n"); return0; } if(a[i]==b[i]@@ )@@ sum++; } if((@@ double)@@ sum/@@ len1@@ >@@ rate@@ )@@ printf("yes@@ \n@@ ");@@ else@@ printf("no\n"); return0; }  
c -1
h -1
intmain() { intyear,month,day,@@ num=0,@@ i@@ , a[@@ 12]={31,@@ 0@@ ,31,30,31,30,31,31,30,31,30,31}; cin>>year>>@@ month>>@@ day; if((@@ year%@@ 400==0)||(@@ (@@ year%100!=0@@ )&&(@@ year%@@ 4@@ ==0)@@ )) a[1]=29; else@@ a[1]=@@ 28; for(i=0;i<month-1;i++) { num+=@@ a[i]; } num+=@@ day; cout<<num<<endl; return0; }  
c -1
h -1
0

intmain() { while(1) { intnum[@@ 16@@ ]={0}; cin>>@@ num[@@ 0]; if(num@@ [0]@@ ==-1) break; intsum@@ =1; for(;@@ ;@@ sum@@ ++) { cin>>@@ num[@@ sum@@ ]; if(@@ num[@@ sum@@ ]==0) { sum@@ --; break; } } int@@ twice@@ =0; for(inti=0;i<@@ sum@@ ;i++) { for(intj=i+1@@ ;j<=@@ sum@@ ;j++) { if((@@ num@@ [j]==2*@@ num[i]@@ )||(@@ num@@ [i]==@@ 2*@@ num[j]@@ )) twice@@ ++; } } cout<<@@ twice@@ <<endl; } cin.get(); cin.get(); return0; }  
c -1
h -1
intmain() { int@@ a=0,b=0,@@ n,@@ l,@@ w,@@ s; inti,j; intf@@ [1000][1000]; scanf("%d",&n); for(i=0;i<n;i++) { a=0; for(j=0;j<n;j++) { scanf("%d",&@@ f@@ [i][j]); if(f@@ [i][j]@@ ==0)@@ a=@@ a@@ +1; } if(a@@ >@@ 2)@@ l=@@ a; } for(j=0;j<n;j++) { b=0; for(i=0;i<n;i++) { if(f@@ [i][j]@@ ==0)@@ b=b@@ +1; } if(b@@ >@@ 2)@@ w=@@ b; } s=(@@ l@@ -2)*(@@ w@@ -2); printf("%d\n",s); return0; }  
c -1
h -1
0

intmain() { intsz[@@ 16],@@ result@@ [100]; inti,j,k,@@ n=0,@@ row@@ =0; while(1){ for(i=1;i<@@ 16@@ ;i++){ sz[i]@@ =0; } scanf("%d",&sz@@ [0]); if(sz@@ [0]==@@ -1){ break; }else{ k=1; for(i=1;i<@@ 16@@ ;i++){ scanf("%d",&sz[i]); if(sz[i]@@ ==0){ break; }else{ k++; } } n=0; for(i=1;i<@@ k;i++){ for(j=0;j<i;j++){ if(sz@@ [i]==@@ sz[j]@@ *2@@ ||@@ sz@@ [j]==@@ sz[i]@@ *2@@ ){ n++; } } } result@@ [@@ row@@ ]=@@ n; row@@ ++; } } for(i=0;i<row;i++){ printf("%d\n",@@ result@@ [i]); } return0; }  
c -1
h -1
struct@@ score { long@@ num; int@@ yu@@ ; int@@ shu; intsum; }stu[100000]; voidmain() { long@@ i,n,@@ j,@@ k; intt; scanf("%ld",&n); for(i=0;i<n;i++) { scanf("%ld%d%d",&@@ stu[i].@@ num,&stu[i].@@ yu@@ ,&stu[i].@@ shu); stu[i].sum=stu[i].@@ yu@@ +stu[i].@@ shu; } for(i=0;i<3;i++) { for(j=0;j<n@@ -i-1;j++) if(stu[j].@@ sum>@@ stu[j+1].@@ sum) { t=@@ stu[j].@@ sum; stu[j].@@ sum=@@ stu[j+1].@@ sum; stu[j+1].@@ sum=@@ t; } } for(k=@@ n-1@@ ;k@@ >@@ n-@@ 4@@ ;k--) { if(k!=@@ n-1@@ &&@@ stu[k].@@ sum@@ ==@@ stu@@ [k+1@@ ].@@ sum@@ )continue; for(i=0;i<n;i++) { if(@@ stu[k].@@ sum@@ ==@@ (@@ stu[i].@@ yu@@ +stu[i].@@ shu@@ )) {@@ printf("%ld@@ %ld@@ \n",@@ stu[i].@@ num,@@ stu[k].@@ sum); if(k==@@ n-@@ 3)@@ break;} } } }  
c -1
h -1
0

intmain(){ intn,@@ s,@@ r,@@ l; intsz[100][100]; s=0; scanf("%d",&n); for(inti=0;i<n;i++){ scanf("%d",&@@ r); scanf("%d",&@@ l); for(intj=0;j<@@ r@@ ;j++){ for(intk=0;k<@@ l@@ ;k++){ scanf("%d",&(@@ sz[j]@@ [k]@@ )); if((@@ j@@ ==0)||(@@ j==@@ r@@ -1)@@ ||(@@ (j@@ !=0)&&(@@ k@@ ==0)@@ )||(@@ (j@@ !=0)&&(@@ k==@@ l@@ -1)@@ )){ s=s+@@ sz[j]@@ [k]; }@@ }@@ }@@ printf("%d\n",s); s=0; } return0; }  
c -1
h -1
intmain() { intn,@@ x,y,@@ d; scanf("%d%d@@ %d@@ \n",&@@ n,&@@ x,&@@ y); d=0; if((x@@ >2@@ )&&(@@ n@@ %@@ 400==0)) d=1; if((x@@ >2@@ )&&(@@ n@@ %100!=0@@ )&&(@@ n@@ %@@ 4@@ ==0)) d=1; d=d+@@ y; x@@ --; switch(@@ x){ case11:@@ d=d+@@ 30; case10:@@ d=d+@@ 31; case9:@@ d=d+@@ 30; case8:@@ d=d+@@ 31; case7:@@ d=d+@@ 31; case6:@@ d=d+@@ 30; case5:@@ d=d+@@ 31; case4:@@ d=d+@@ 30; case3:@@ d=d+@@ 31; case2:@@ d=d+@@ 28; case1:@@ d=d+@@ 31; } printf("%d\n",@@ d); return0; }  
c -1
h -1
0

intn,@@ c; int@@ solutionnumber@@ (intn,int@@ c){ if(n==@@ c)@@ return1; if(n@@ <@@ c)@@ return0; if(n@@ %c@@ ==0)@@ return@@ solutionnumber@@ (n@@ /@@ c,@@ c@@ )+@@ solutionnumber@@ (n,@@ c@@ +1); else@@ return@@ solutionnumber@@ (n,@@ c@@ +1); } intmain(){ intN@@ ,@@ a; cin>>@@ N; while(@@ N@@ >0){ cin>>a; cout<<@@ solutionnumber@@ (a,@@ 2)<<endl; N@@ --; } return0; }  
c -1
h -1
intmain(){ double@@ r,@@ s; inti; chara[501],b[501]; char@@ c,d; scanf("%lf@@ %c@@ %s@@ %c@@ %s",&@@ r@@ ,&@@ c,@@ a,&@@ d,@@ b); s=0; if(strlen(a)!=strlen(b@@ )) { printf("error"); } else { for(i=0;i<@@ strlen(a)@@ ;i++) { if((a[i]!='@@ A'&&a[i]!='T'&&a[i]!='C'&&a[i]!='G')||(b[i]!='A'&&b[i]!='T'&&b[i]!='C'&&b[i]!='@@ G')) { printf("error"); return0; } if(a[i]==b[i]) { s++; } } if(s@@ /@@ strlen(a)@@ >=@@ r@@ ) { printf("yes"); } else { printf("no"); } } return0; }  
c -1
h -1
0

intmain() { inta[@@ 1010@@ ]; intk,i,j,@@ n; scanf("%d%d",&n,&k); for(i=0;i<=n-1;i++) scanf("%d",&a[i]); for(i=0;i<=n-1;i++) { for(j=0;j<=n-1;j++) { if(a[i]+a[j]==@@ k){ printf("yes");@@ return0;} } } printf("no"); return0; }  
c -1
h -1
voidmain() {@@ intn,i,j,k,@@ m@@ =0;@@ ; inta[@@ 20001]; scanf("%d",&n); for(i=0;i<n;i++) scanf("%d",&a[i]); for(i=0;i<n@@ -1@@ -@@ m;i++) for(j=i+1;j<@@ n-@@ m;@@ ) if(a[j]==a[i]) {@@ for(k=j@@ ;k<@@ n-@@ m;k++) a[k]=a[k@@ +1]; m@@ ++;} else@@ j++; for(i=0;i<n@@ -1@@ -@@ m;i++) printf("%d",a[i]); printf("%d",a[@@ n-@@ m-1@@ ]); }  
c -1
h -1
0

intmain() { inta[@@ 1010@@ ]; intk,i,j,@@ n; scanf("%d%d",&n,&k); for(i=0;i<=n-1;i++) scanf("%d",&a[i]); for(i=0;i<=n-1;i++) { for(j=0;j<=n-1;j++) { if(a[i]+a[j]==@@ k){ printf("yes");@@ return0;} } } printf("no"); return0; }  
c -1
h -1
intmain() { intn,i,j,@@ q,@@ w; scanf("%d",&n); inta[n@@ ],b[@@ n@@ ],c[@@ n@@ ],@@ d[@@ n]; for(i=0;i<n;i++) {@@ scanf("%d%d%d",&@@ a[i],&@@ b[i]@@ ,&@@ c[i]); } for(i=0;i<n;i++) {@@ d[i]=@@ b[i]@@ +c@@ [i]; } for(i=0;i<3;i++) {@@ for(j=i+1;j<n;j++) {@@ if(d@@ [i]<@@ d@@ [j]) {@@ q=@@ d[i]; d[i]=@@ d@@ [j]; d@@ [j]=@@ q; w=@@ a[i]; a[i]=a[j]; a[j]=@@ w@@ ;} } } for(i=0;i<3;i++) {@@ printf("%d%d\n",@@ a[i],@@ d[i]); } getchar(); getchar(); getchar(); getchar(); getchar(); }  
c -1
h -1
0

int@@ Factor@@ (int,int); intmain() { intn,a,@@ i; scanf("%d",&n); for(i=1;i<=n;i++) { scanf("%d",&a); printf("%d\n",@@ Factor@@ (a,@@ 2)); } return0; } int@@ Factor@@ (inta,int@@ p) { inti,j,@@ z=1; if(a<@@ p) z=0; else { for(i=@@ p@@ ;i<=a;i++) { if(a%i==0) { z@@ +=@@ Factor@@ (a/i,i); } } } return@@ z; }  
c -1
h -1
structbook { charnum[@@ 4@@ ]; charauthor@@ [27]; }@@ book@@ [100]; intmain() { intn,i,k,@@ sz[@@ 26],@@ t,@@ m,@@ e; scanf("%d",&n); m=0; for(i=0;i<26;i++){ sz[i]@@ =0; } for(i=0;i<n;i++){ scanf("%s%s",@@ book[i].@@ num,@@ book[i].author); t@@ =strlen(@@ book[i].author); for(k=0;k<@@ t@@ ;k++){ sz[@@ book[i].author@@ [k]@@ -'A']++; } }@@ for(i=0;i<26;i++){ if(sz[i]@@ >@@ m){ m=@@ sz[i]; e@@ =i; } }@@ printf("%c\n%d\n",@@ e@@ +'A',@@ m); for(i=0;i<n;i++){ t@@ =strlen(@@ book[i].author); for(k=0;k<@@ t@@ ;k++){ if(book[i].author@@ [k]==@@ e@@ +'A'@@ ){ printf("%s\n",@@ book[i].@@ num); } } }@@ return0; }  
c -1
h -1
0

intmain(){ ints[@@ 101][101]; intk,m,n,@@ i@@ ,*@@ pointer1@@ ,*@@ pointer2@@ ,@@ i1@@ ,@@ i2@@ ,@@ sum=0;@@ ; cin>>k; for(i=1;i<=@@ k;i++){ cin>>m>>n; for(@@ i1@@ =0;@@ i1@@ <m;@@ i1@@ ++){ for(@@ i2@@ =0;@@ i2@@ <n;@@ i2@@ ++) cin>>@@ s[@@ i1@@ ][@@ i2@@ ]; } pointer1@@ =&@@ s[@@ 0][@@ 1@@ ]; pointer2@@ =&@@ s[@@ 0][@@ 0]; for(@@ i1@@ =1;@@ i1@@ <@@ n-1;@@ i1@@ ++){ pointer1@@ =&@@ s[@@ 0][@@ i1@@ ]; sum+=@@ *@@ pointer1@@ ; } for(@@ i1@@ =0;@@ i1@@ <m;@@ i1@@ ++){ if(n@@ !=1@@ ){ pointer1@@ =&@@ s[@@ i1@@ ][n-1]; pointer2@@ =&@@ s[@@ i1@@ ][0]; sum=sum+*@@ pointer1@@ +*@@ pointer2@@ ; } else{ pointer2@@ =&@@ s[@@ i1@@ ][0]; sum=sum+*@@ pointer1@@ +*@@ pointer2@@ ; } } for(@@ i1@@ =1;@@ i1@@ <@@ n-1;@@ i1@@ ++){ pointer2@@ =&@@ s[@@ m-1][@@ i1@@ ]; sum+=@@ *@@ pointer2@@ ; } cout<<sum<<endl; sum=0; } return0; }  
c -1
h -1
structstudent { intn; inta; intb; int@@ aver@@ ; }stu[100000]; voidmain() { intm,i,j,@@ f,@@ t; scanf("%d",&m); for(i=0;i<m;i++) { scanf("%d%d%d",&stu[i].@@ n,&@@ stu[i].@@ a@@ ,&stu[i].@@ b); } for(i=0;i<m;i++) { stu[i].@@ aver@@ =stu[i].@@ a+@@ stu[i].@@ b; } for(i=0;i<3;i++) for(j=@@ m-1@@ -i@@ ;j>=0;j--) { if(stu[j].@@ aver@@ <@@ stu[j+1].@@ aver@@ ) { f=@@ stu[j].@@ aver@@ ; stu[j].@@ aver@@ =stu@@ [j+1].@@ aver@@ ; stu[j+1].@@ aver@@ =@@ f; t=@@ stu[j].@@ n; stu[j].@@ n=@@ stu[j+1].@@ n; stu[j+1].@@ n=@@ t; } } for(i=0;i<3;i++) { printf("%d%d\n",stu[i].@@ n,@@ stu[i].@@ aver@@ ); } }  
c -1
h -1
0

int@@ factorize@@ (intn,int@@ j) { int@@ F@@ =1; for(@@ ;j<=@@ sqrt(n@@ );j++) if(n@@ %j==0) F@@ +=@@ factorize@@ (n@@ /j,j); return@@ F@@ ; } intmain() { inti,@@ m,@@ n@@ [1000]; scanf("%d",&m); for(i=0;i<m;i++) scanf("%d",&@@ n@@ [i]); for(i=0;i<m;i++) printf("%d\n",@@ factorize@@ (n@@ [i],@@ 2)); return0; }  
c -1
h -1
intmain(intargc,char*argv[]) { intyear,month,day; int@@ real@@ ; scanf("%d%d%d",&year,&month,&day); if((year%4==0&&year%100!=0)||(year%400==0)) { if(month==1) { printf("%d",@@ day); } if(month==2) { real@@ =31+@@ day; printf("%d",@@ real@@ ); } if(month==3) { real@@ =31+29@@ +day; printf("%d",@@ real@@ ); } if(month==@@ 4) { real@@ =31+29@@ +31+@@ day; printf("%d",@@ real@@ ); } if(month==@@ 5) { real@@ =@@ 31@@ *2@@ +30@@ +29@@ +day; printf("%d",@@ real@@ ); } if(month==@@ 6) { real@@ =@@ 31*3@@ +30@@ +29@@ +day; printf("%d",@@ real@@ ); } if(month==@@ 7) { real@@ =@@ 31*3@@ +30*2@@ +29@@ +day; printf("%d",@@ real@@ ); } if(month==8) { real@@ =@@ 31*@@ 4@@ +30*2@@ +29@@ +day; printf("%d",@@ real@@ ); } if(month==@@ 9) { real@@ =@@ 31*5@@ +30*2@@ +29@@ +day; printf("%d",@@ real@@ ); } if(month==@@ 10) { real@@ =@@ 31*5@@ +30@@ *3@@ +29@@ +day; printf("%d",@@ real@@ ); } if(month==@@ 11) { real@@ =@@ 31*6@@ +30@@ *3@@ +29@@ +day; printf("%d",@@ real@@ ); } if(month==@@ 12) { real@@ =@@ 31*6@@ +30@@ *@@ 4@@ +29@@ +day; printf("%d",@@ real@@ ); } } else { if(month==1) { printf("%d",@@ day); } if(month==2) { real@@ =31+@@ day; printf("%d",@@ real@@ ); } if(month==3) { real@@ =31+28@@ +day; printf("%d",@@ real@@ ); } if(month==@@ 4) { real@@ =31+28@@ +31+@@ day; printf("%d",@@ real@@ ); } if(month==@@ 5) { real@@ =@@ 31@@ *2@@ +30@@ +28@@ +day; printf("%d",@@ real@@ ); } if(month==@@ 6) { real@@ =@@ 31*3@@ +30@@ +28@@ +day; printf("%d",@@ real@@ ); } if(month==@@ 7) { real@@ =@@ 31*3@@ +30*2@@ +28@@ +day; printf("%d",@@ real@@ ); } if(month==8) { real@@ =@@ 31*@@ 4@@ +30*2@@ +28@@ +day; printf("%d",@@ real@@ ); } if(month==@@ 9) { real@@ =@@ 31*5@@ +30*2@@ +28@@ +day; printf("%d",@@ real@@ ); } if(month==@@ 10) { real@@ =@@ 31*5@@ +30@@ *3@@ +28@@ +day; printf("%d",@@ real@@ ); } if(month==@@ 11) { real@@ =@@ 31*6@@ +30@@ *3@@ +28@@ +day; printf("%d",@@ real@@ ); } if(month==@@ 12) { real@@ =@@ 31*6@@ +30@@ *@@ 4@@ +28@@ +day; printf("%d",@@ real@@ ); } } return0; }  
c -1
h -1
0

intmain() { inta[@@ 20@@ ],i,j,@@ n,@@ court@@ ; while(1) { for(i=0;@@ 1@@ ;i++) { cin>>a[i]; if(a[i]==0) break; } if(a[0]==-1) break; n=i; for(i=0,@@ court@@ =0;i<=@@ n;i++) { for(j=i;j<=@@ n-1;j++) { if(a[j]==2*@@ a[i]@@ ||@@ a[i]==@@ 2*@@ a[j]) court@@ ++; } } cout<<@@ court@@ <<endl; } return0; }  
c -1
h -1
structstudent { intnum; intchinese; int@@ maths; intsum; structstudent*next; }; intm,@@ max@@ [3@@ ]={0},@@ t@@ [3@@ ]={0}; structstudent*head; structstudent*p1,*p2; structstudent*creat@@ (intn) { m=0; p1=p2=(structstudent*)malloc(LEN); scanf("%d%d%d",&p1->num,&p1->@@ chinese@@ ,&p1->@@ maths@@ ); p1->sum=p1->@@ chinese+@@ p1->@@ maths; head=NULL; while(m@@ <@@ n-1) { m=m+1; if(m==1) head=p1; elsep2->next=p1; p2=p1; p1=(structstudent*)malloc(LEN); scanf("%d%d%d",&p1->num,&p1->@@ chinese@@ ,&p1->@@ maths@@ ); p1->sum=p1->@@ chinese+@@ p1->@@ maths; } p2->next=p1; p2=p1; p2->next=NULL; return(head); } voidmain() { intn; scanf("%d",&n); creat@@ (n); structstudent*@@ p1; p1=head; do { if(p1->@@ sum@@ >max@@ [0]) { max@@ [0]=@@ p1->@@ sum; t@@ [0]=@@ p1->@@ num; } p1=p1->next; }while(@@ p1@@ !=NULL); printf("%d%d\n",@@ t[@@ 0],@@ max@@ [0]); p1=head; do { if(p1->@@ sum@@ >max@@ [1]@@ &&@@ p1->num@@ !=@@ t@@ [0]) { max@@ [1]=@@ p1->@@ sum; t@@ [1]=@@ p1->@@ num; } p1=p1->next; }while(@@ p1@@ !=NULL); printf("%d%d\n",@@ t@@ [1@@ ],@@ max@@ [1]); p1=head; do { if(p1->@@ sum@@ >max@@ [2]@@ &&@@ p1->num@@ !=@@ t@@ [0]@@ &&@@ p1->num@@ !=@@ t@@ [1@@ ]) { max@@ [2]=@@ p1->@@ sum; t@@ [2]=@@ p1->@@ num; } p1=p1->next; }while(@@ p1@@ !=NULL); printf("%d%d\n",@@ t@@ [2@@ ],@@ max@@ [2@@ ]); }  
c -1
h -1
0

int@@ yinshu@@ (int@@ be@@ ,int@@ by@@ ) { inti,@@ sum=0; for(i=@@ by@@ ;i@@ *@@ i<=@@ be@@ ;i++) { if(@@ be@@ %i@@ ==0){@@ sum+=@@ 1@@ +@@ yinshu@@ (@@ be@@ /i,@@ i@@ );} } returnsum; } intmain() { intn,i,j,@@ num,@@ sign ; cin>>n; for(i=0;i<n;i++) { cin>>@@ num;@@ for(j=@@ num@@ ;j>@@ 1@@ ;j--@@ )@@ if(num@@ %j@@ ==0)@@ sign@@ =j; cout<<@@ yinshu@@ (num,@@ sign@@ )@@ +1<<endl; } getchar();@@ getchar(); return0; }  
c -1
h -1
intmain(){ inti,@@ k@@ =1,@@ l,@@ e; chars[@@ 501],@@ g@@ [501]; doublen,@@ r; scanf("%lf",&n); scanf("%s%s",@@ s,@@ g@@ ); l@@ =strlen(s); e@@ =strlen(@@ g@@ ); if(l@@ !=@@ e@@ ) { printf("error"); } else { for(i=0;s[i]@@ ;i++) { if(((@@ s@@ [i]=='@@ A')||(@@ s@@ [i]=='@@ T')||(@@ s@@ [i]=='@@ C')||(@@ s@@ [i]=='@@ G')@@ )&&(@@ (@@ g@@ [i]=='@@ A')||(@@ g@@ [i]=='@@ T')||(@@ g@@ [i]=='@@ C')||(@@ g@@ [i]=='@@ G')@@ )) { if(g@@ [i]==@@ s@@ [i]) { k++; } } else { k=0; break; } } if(k==0) { printf("error"); } else { k--; r@@ =1.0*@@ k/@@ l; if(r@@ >n) { printf("yes"); } else { printf("no"); } } } return0; }  
c -1
h -1
0

intmain() { intk,m,n,@@ num@@ [100][100],@@ count1@@ ,@@ count2@@ ,@@ count3@@ ,sum; int*@@ pointer@@ =NULL; cin>>k; while(k@@ --) { sum=0; cin>>m>>n; for(@@ count1@@ =0;@@ count1@@ <m;@@ count1@@ ++) { for(@@ count2@@ =0;@@ count2@@ <n;@@ count2@@ ++) {@@ cin>>@@ num[@@ count1@@ ][@@ count2@@ ];} } for(@@ pointer@@ =@@ num@@ [0]@@ ;@@ pointer@@ <@@ num@@ [0]+@@ n;@@ pointer@@ ++) { sum=sum+*@@ pointer@@ ; } for(@@ pointer@@ =@@ num[m@@ -1]@@ ;@@ pointer@@ <@@ num[m@@ -1]@@ +n;@@ pointer@@ ++) { sum=sum+*@@ pointer@@ ; } for(@@ pointer@@ =@@ num@@ [1]@@ +@@ n-1@@ ,@@ count3@@ =1;@@ count3@@ <m-1@@ ;@@ pointer@@ =@@ num[@@ ++@@ count3@@ ]+@@ n-1) { sum=sum+*@@ pointer@@ ; } for(@@ pointer@@ =@@ num@@ [1@@ ],@@ count3@@ =1;@@ count3@@ <m-1@@ ;@@ pointer@@ =@@ num[@@ ++@@ count3@@ ]) { sum=sum+*@@ pointer@@ ; } cout<<sum<<endl; } return0; }  
c -1
h -1
intmain() { intx,y,@@ z; scanf("%d%d%d",&@@ x,&@@ y,&@@ z); ints[@@ 12]={31,28,31,30,31,30,31,31,30,31,30,31}; intm=0; intn=0; for(m=0;m<@@ y@@ -1@@ ;m++) n+=@@ s[@@ m]; int@@ D@@ ; if(((@@ x@@ %4==0&&@@ x@@ %100!=0@@ ||@@ x%@@ 400==0)@@ &&@@ y@@ !=1@@ &&@@ y@@ !=@@ 2@@ )) D=@@ n+@@ z@@ +1; else D=@@ n+@@ z; printf("%d",D@@ ); return0; }  
c -1
h -1
0

intmain() { intk=0; intm=0,@@ n=0; inta[100][100@@ ]={0}; intsum=0; cin>>k; int(*p)@@ [100@@ ]=@@ NULL@@ ; p=a; for(inti=0;i<k;i++) { cin>>m>>n; sum=0; for(intj=0;j<m;j++) { for(intl@@ =0;@@ l@@ <n;@@ l++) { cin>>a[j]@@ [l]; } } for(int@@ a@@ =0;a@@ <n;@@ a++) { sum=sum+*(@@ *(p+@@ 0@@ )+@@ a); } for(int@@ a@@ =1;@@ a@@ <m;@@ a++) { sum=sum+*(@@ *(p+@@ a)@@ +n-1); } for(int@@ a=@@ n-2@@ ;a@@ >=0@@ ;a@@ --) { sum=sum+*(@@ *(p@@ +m-1)@@ +@@ a); } for(int@@ a=@@ m@@ -2@@ ;a@@ >0@@ ;a@@ --) { sum=sum+*(@@ *(p+@@ a)@@ +@@ 0); } cout<<sum<<endl; } return0; }  
c -1
h -1
intmain() { intn; scanf("%d",&n); inta[@@ 25]; scanf("%d",&a[0]); inti=1; while(i<n) { scanf("%d",&a[i]); i++; } intb[@@ 25]; i=@@ n-2@@ ; b[@@ n-1@@ ]=1; while(i@@ >=0) { b[i]=1; intm@@ =i+1; while(m@@ <n) { if((@@ a[m@@ ]<=@@ a[i]@@ )&&(@@ b[m@@ ]>=@@ b[i]@@ -1)) { b[i]=@@ b[m@@ ]+1; } m++; } i--; } int@@ k=1; i=0; while(i<n) { if(b[i]>@@ k) k=@@ b[i]; i++; } printf("%d",k); return0; }  
c -1
h -1
0

voidmain() {@@ inti,j,@@ k@@ ,*@@ p@@ [100],@@ m,n; scanf("%d%d",&m,&n); for(i=0;i<m;i++) p[i]=@@ (int*)malloc(n*sizeof(int)); for(i=0;i<m;i++) for(j=0;j<n;j++) scanf("%d",@@ p[i]@@ +j); for(j=0;j<n;j++) {@@ k=j; for(i=0;i<m;i++) {printf("%d\n",@@ *(p@@ [i]@@ +k@@ --@@ )); if(k@@ <0@@ )@@ break;}} for(i=1;i<m;i++) {@@ k=i; for(j=n-1;j>=0;j--) {printf("%d\n",@@ *(p@@ [k@@ ++@@ ]@@ +j)); if(k==@@ m)@@ break;}} }  
c -1
h -1
structstu {intnum; int@@ score1@@ ; int@@ score2; }stu[100000]; voidmain() { inti,j,n,@@ a[@@ 100000],@@ max; scanf("%d",&n); for(i=0;i<n;i++) { scanf("%d%d%d",&stu[i].num,&stu[i].@@ score1@@ ,&stu[i].@@ score2); a[i]=@@ stu[i].@@ score1@@ +stu[i].@@ score2; } for(j=0;j<3;j++) { max=0; for(i=0;i<n;i++) max@@ =(@@ max@@ >=@@ a[i])@@ ?@@ max@@ :@@ a[i]; for(i=0;i<n;i++) if(a[i]==@@ max) {@@ printf("%d%d\n",stu[i].@@ num,@@ a[i]); a[i]=0; break; } } }  
c -1
h -1
0

intmain() { chars[@@ 300],@@ s1@@ [300],@@ s2@@ [300@@ ]={'\0'}; inti,j,@@ len,@@ count=0,@@ m; gets(s); gets(@@ s1); gets(@@ s2); len@@ =strlen(s); for(i=0;i<len;i++) if(s[i]==@@ s1@@ [0]) {@@ for(j=1@@ ;@@ s1@@ [j]!='\0';j++) if(s@@ [j+i@@ ]!=@@ s1@@ [j]) break; if(j@@ >=@@ strlen(@@ s1@@ )) {m@@ =i;@@ count@@ =1;break;} } if(count@@ ) {@@ for(i=0;i<m;i++) printf("%c",s[i]); for(i=0;@@ s2@@ [i]!='\0';i++) printf("%c",@@ s2@@ [i]); for(j=i@@ +m@@ ;j<@@ len@@ ;j++) printf("%c",s@@ [j]); } else printf("%s",s); return0; }  
c -1
h -1
intmain() { intn,i,j,@@ ki@@ ,@@ kj@@ ,@@ endj@@ ,@@ endi@@ ,a[@@ 1000][1000],@@ s; scanf("%d",&n); for(i=1;i<=n;i++) for(j=1;j<=n;j++) scanf("%d",&a[i][j]); ki@@ =-1; for(i=1;i<=n;i++) { for(j=1;j<=n;j++) if(a[i][j]==0) { ki@@ =i; kj@@ =j; break; } if(@@ ki@@ >=0) break; } for(i=@@ ki@@ ,j=@@ kj@@ ;j<=@@ n;j++) if(a[i][j]==@@ 255) { endj@@ =j@@ -1; break; } for(i=@@ ki@@ ,j=@@ kj@@ ;i<=n;i++) if(a[i][j]==@@ 255) { endi@@ =i-1; break; } s=(@@ endi@@ -@@ ki@@ -1)*(@@ endj@@ -@@ kj@@ -1); printf("%d",s); return0; }  
c -1
h -1
0

intnum@@ =0,@@ t=@@ 2; void@@ detach@@ (intn) { inti; int@@ q=@@ t; if(n==1) { num++; } else { for(i=@@ t@@ ;i<=@@ n@@ /2@@ ;i++) { if(n%i==0) { n=@@ n/@@ i; t=i; detach@@ (n); n=@@ n*@@ i; t=@@ q; } } if(i>@@ n@@ /2@@ &&n@@ >=@@ t) { n=1; detach@@ (n); } } } intmain() { intn,@@ a; cin>>n; for(inti=1;i<=n;i++) { cin>>a; detach@@ (a); cout<<num<<endl; num=0; t=@@ 2; } return0; }  
c -1
h -1
intmain() { intn,@@ feiwu@@ ,@@ x,@@ l,@@ s,@@ i; scanf("%d",&n); for(i=0;i<n@@ *@@ n;i++) { scanf("%d",&@@ feiwu@@ ); if(@@ feiwu@@ ==0) {@@ x@@ =i+1@@ ;break;} } for(i@@ ++@@ ;i<@@ n*@@ n;i++) { scanf("%d",&@@ feiwu@@ ); if(@@ feiwu@@ !=0) {@@ l@@ =i;@@ break;} } s=@@ l@@ -x@@ +1; for(i@@ ++@@ ;i<@@ n*@@ n;i++) { scanf("%d",&@@ feiwu@@ ); if(@@ feiwu@@ ==0) s++; } printf("%d",(@@ l@@ -x@@ -1)*(@@ s@@ -2@@ *(@@ l@@ -x@@ +1)@@ )@@ /2@@ ); return0; }  
c -1
h -1
0

intmain() { inta[100][100],@@ r,@@ c,@@ i,j; cin>>@@ r@@ >>@@ c; for(i=0;i<=@@ r@@ -1;i++) { for(j=0;j<=@@ c@@ -1;j++) { cin>>a[i][j]; } } for(j=0;j<=@@ c@@ -1;j++) { for(i=0;@@ (i@@ <=j@@ )&&(i@@ <=@@ r@@ -1);i++) { cout<<a[i]@@ [j-i@@ ]<<endl; } } for(i=1;i<=@@ r@@ -1;i++) { for(j=0;@@ (j@@ <=@@ r@@ -i@@ -1)@@ &&(@@ j@@ +1@@ <=@@ c@@ );j++) { cout<<@@ a[i+j@@ ][c@@ -1-j@@ ]<<endl; } } return0; }  
c -1
h -1
intmain() { intarray[@@ 105@@ ][@@ 105@@ ],@@ row,col,@@ (*p)@@ [@@ 105@@ ]; p=@@ array@@ ; cin>>row>>col; for(inti=0;i<row;i++) for(intj=0;j<col;j++) { cin>>@@ *(*(p+i)+j); } inti,j,@@ m=0; while(1) { if(m@@ <col) { for(i=0,j@@ =@@ m@@ ;j>=0@@ &&i@@ <=row-1@@ ;i++,j--) { cout<<@@ *(*(p+i)@@ +j)<<endl; } } else { for(i=m@@ -col@@ +1@@ ,j=@@ col-1@@ ;i<=@@ row-1@@ &&j>=0@@ ;i++,j--) { cout<<@@ *(*(p+i)@@ +j)<<endl; } } m++; if(m==@@ row+col@@ )break; } return0; }  
c -1
h -1
1


intmain() { intn,@@ K@@ ,@@ i,j; inta[1000]; scanf("%d%d@@ /@@ n@@ ",&@@ n,&@@ K@@ ); for(i=0;i<n;i++) { scanf("%d",&a[i]); } for(i=0;i<n;i++) { for(j=i+1;j<n;j++) { if((@@ a[i]+@@ a[j]@@ )==@@ K@@ ) { goto@@ first@@ ; } } } goto@@ third@@ ; first@@ :@@ printf("yes");@@ goto@@ second@@ ; third@@ :@@ printf("no@@ ");@@ return0; second@@ :@@ return0; }  
c -1
h -1
intm,n,@@ a[100@@ ],b[100],c[@@ 200]; voidshuru@@ (intx,int@@ y,@@ inta[@@ ],intb[@@ ]){ cin>>x@@ >>@@ y; m=@@ x; n=@@ y; for(inti=0;i<@@ x@@ ;i++){@@ cin>>@@ a[i];} for(inti=0;i<@@ y@@ ;i++){@@ cin>>@@ b[i]@@ ;} } voidpaixu@@ (intx[],int@@ l@@ ){ for(inti=0;i<@@ l@@ -1;i++){ for(intj=0;j<@@ l@@ -1@@ -i;j++){ if(x@@ [j]>@@ x@@ [j+1@@ ]){ intp; p=@@ x@@ [j]; x@@ [j]=@@ x@@ [j+1]; x@@ [j+1]=@@ p; } } } } voidhebing@@ (inta[],intb[],int@@ c[@@ ],int@@ m,int@@ n){ for(inti=0;i<@@ m@@ ;i++){@@ c[i]=@@ a[i];} for(inti=0;i<@@ n@@ ;i++){@@ c@@ [i@@ +m@@ ]=@@ b[i]@@ ;} } voidshuchu@@ (intc[],int@@ m,int@@ n){ for(inti=0;i<@@ n+@@ m;i++){ if(i==0)@@ cout<<@@ c[i]; else@@ cout<<""<<@@ c[i]; } } intmain(){ shuru@@ (@@ m,n,@@ a,b); paixu@@ (a,m); paixu@@ (b,n); hebing@@ (a,b,@@ c,@@ m,n); shuchu@@ (c,@@ m,n); return0; }  
c -1
h -1
0

struct@@ mice { int@@ wei@@ ; char@@ color@@ [100]; struct@@ mice@@ *next; }; struct@@ mice@@ *creat@@ (int@@ c) { struct@@ mice@@ *@@ head; struct@@ mice@@ *p1,*p2; struct@@ mice@@ *@@ kok@@ ; kok@@ =(struct@@ mice@@ *)malloc(LEN); kok@@ ->@@ wei@@ =0;@@ strcpy(@@ kok@@ ->@@ color@@ ,"@@ \@@ 0@@ "); intt; t=0; p1=p2=(struct@@ mice@@ *)malloc(LEN); scanf("%s%d",p1->@@ color@@ ,&p1->@@ wei@@ ); head=NULL; while(t@@ <@@ c) { t=t+1; if(t@@ ==1) {@@ head@@ =p1;} else { p2->next=p1; p2=p1; p1=(struct@@ mice@@ *)malloc(LEN); scanf("%s%d",p1->@@ color@@ ,&p1->@@ wei@@ ); } } p2->next=p1; p2=p1; p2->next=@@ kok@@ ; return(head); } void@@ mun@@ (struct@@ mice@@ *@@ hoih@@ ,int@@ io@@ ) { inti,j,k; k=0; struct@@ mice@@ *@@ bt@@ ; bt@@ =@@ hoih@@ ; charstr@@ [100]; for(i=0;i<@@ io@@ ;i++) { for(j=0;j<@@ io@@ -i;j++) { if(@@ hoih@@ ->@@ wei@@ <(@@ hoih@@ ->next@@ )@@ ->@@ wei@@ &&(@@ hoih@@ ->next@@ )@@ ->@@ wei@@ >=60) { k=@@ hoih@@ ->@@ wei@@ ; hoih@@ ->@@ wei@@ =(@@ hoih@@ ->next@@ )@@ ->@@ wei@@ ; (@@ hoih@@ ->next@@ )@@ ->@@ wei@@ =k; strcpy(@@ str,@@ hoih@@ ->@@ color@@ ); strcpy(@@ hoih@@ ->@@ color@@ ,@@ (@@ hoih@@ ->next@@ )@@ ->@@ color@@ ); strcpy(@@ (@@ hoih@@ ->next@@ )@@ ->@@ color@@ ,@@ str); } hoih@@ =@@ hoih@@ ->next; } hoih@@ =@@ bt@@ ; } return; } voidmain() { intn,@@ h; struct@@ mice@@ *creat@@ (int@@ c); struct@@ mice@@ *p,*@@ he@@ ; scanf("%d",&n); p=@@ creat@@ (n); he@@ =p; void@@ mun@@ (struct@@ mice@@ *@@ hoih@@ ,int@@ io@@ ); mun@@ (p,@@ n); p=@@ he@@ ; for(h=0;h@@ <n;@@ h++) { printf("%s\n",p->@@ color@@ ); p=p->next; } }  
c -1
h -1
intmain() { inta[100][100],@@ i,j,@@ s,@@ n,@@ b[2@@ ],c[@@ 2@@ ],@@ q=0,@@ p=0; scanf("%d",&n); for(i=0;i<=n-1;i++) { for(j=0;j<=n-1;j++) scanf("%d",&a[i][j]); } for(i=0;i<=n-1;i++) { s=0; for(j=0;j<=n-1;j++) { if(a[i][j]==0) s@@ +=1; } if(s@@ >2) { b[p@@ ]=i; p@@ +=1; } } for(i=0;i<=n-1;i++) { s=0; for(j=0;j<=n-1;j++) { if(a[j]@@ [i]==0) s@@ +=1; } if(s@@ >2) { c[@@ q@@ ]=i; q@@ +=1; } } printf("%d",(@@ b[1@@ ]-@@ b[0]@@ -1)*(@@ c[@@ 1@@ ]-@@ c@@ [0]@@ -1)); return0; }  
c -1
h -1
0

struct@@ linknode@@ *@@ CreateLinkList@@ (); void@@ DisplayLinkList@@ (struct@@ linknode@@ *@@ linklist1@@ ); void@@ qiansan@@ (struct@@ linknode@@ *@@ linklist2@@ ); struct@@ linknode { intid; intchinese; intmath; inttotal; int@@ mark@@ ; struct@@ linknode@@ *next; }; intmain() { qiansan@@ (@@ CreateLinkList@@ (@@ )); } struct@@ linknode@@ *@@ CreateLinkList@@ () { long@@ n,@@ i; struct@@ linknode@@ *head,*p; scanf("%ld",&n); head=(struct@@ linknode@@ *)malloc(sizeof(struct@@ linknode@@ )); p=head; if(p@@ ==NULL) { printf("@@ fail@@ "); exit@@ (@@ -1); } for(i=1;i<=n;i++) { scanf("%d%d%d",&@@ p->@@ id,&@@ p->@@ chinese@@ ,&p->@@ math); p->@@ total=@@ p->@@ chinese+@@ p->@@ math; p->@@ mark@@ =0; if(i==@@ n) p@@ ->next=NULL; else { p->next@@ =(struct@@ linknode@@ *)malloc(sizeof(struct@@ linknode@@ )); p=p->next; } } returnhead; } void@@ qiansan@@ (struct@@ linknode@@ *@@ linklist2@@ ) { struct@@ linknode@@ *head,*@@ p,*@@ max; head=@@ linklist2@@ ; p=head; max@@ =(struct@@ linknode@@ *)malloc(sizeof(struct@@ linknode@@ )); intj; for(j=1;j<=@@ 3;j++) { p=head; max@@ ->@@ total=0; while(p!=NULL) { if(p->@@ total@@ >max@@ ->@@ total@@ &&@@ p->@@ mark@@ ==0) { max=@@ p; } p=p->next; } max@@ ->@@ mark@@ =1; printf("%d%d\n",@@ max@@ ->id,@@ max@@ ->@@ total); } }  
c -1
h -1
intsz[@@ 1000][1000]; intmain() { intn,i,j,@@ a1,a2,@@ b1,@@ b2@@ ,@@ c,@@ d=0,@@ e=0; scanf("%d",&n); for(i=0;i<n;i++) { for(j=0;j<n;j++) { scanf("%d",&sz[i][j]); } } for(i=0;i<n;i++) { for(j=0;j<n;j++) { if(sz@@ [i][j]==0) { a1@@ =i; b1@@ =j; d=1; break; } } if(d@@ ==1) break; } for(j=n-1@@ ;j>@@ b1@@ ;j--) { for(i=n-1;i@@ >@@ a1@@ ;i--) { if(sz@@ [i][j]==0) { a2@@ =i; b2@@ =j; e=1; break; } } if(e@@ ==1) break; } c@@ =(@@ a2-a1@@ -1)*(@@ b2-b1@@ -1); printf("%d",@@ c); return0; }  
c -1
h -1
0

intmain(intargc,char*argv[]) { inty,m,@@ d; scanf("%d%d%d",&y,&m,&d); if((y%@@ 4==0&&y%100!=0@@ )||@@ y%400==0) { if(m==1) printf("%d",d); if(m==@@ 2) printf("%d",@@ d+@@ 31@@ ); if(m==@@ 3) printf("%d",d@@ +31+29@@ ); if(m==@@ 4) printf("%d",d@@ +31+29@@ +31@@ ); if(m==@@ 5) printf("%d",d@@ +31+29@@ +31+30@@ ); if(m==@@ 6) printf("%d",d@@ +31+29@@ +31+30@@ +31@@ ); if(m==@@ 7) printf("%d",d@@ +31+29@@ +31+30+31+30@@ ); if(m==@@ 8) printf("%d",d@@ +31+29@@ +31+30+31+30@@ +31@@ ); if(m==@@ 9) printf("%d",d@@ +31+29@@ +31+30+31+30+31+@@ 31@@ ); if(m==@@ 10) printf("%d",d@@ +31+29@@ +31+30+31+30+31+31+30@@ ); if(m==@@ 11) printf("%d",d@@ +31+29@@ +31+@@ 31+30@@ +30@@ +31+@@ 31+30@@ +31@@ ); if(m==@@ 12) printf("%d",d@@ +31+29@@ +31+@@ 31+30@@ +30@@ +31+@@ 31+30@@ +31+30@@ ); } else { if(m==1) printf("%d",d); if(m==@@ 2) printf("%d",@@ d+@@ 31@@ ); if(m==@@ 3) printf("%d",d@@ +31+28@@ ); if(m==@@ 4) printf("%d",d@@ +31+28@@ +31@@ ); if(m==@@ 5) printf("%d",d@@ +31+29@@ +30@@ +30@@ ); if(m==@@ 6) printf("%d",d@@ +31+29@@ +31+30@@ +30@@ ); if(m==@@ 7) printf("%d",d@@ +31+29@@ +31+30@@ +30@@ +30@@ ); if(m==@@ 8) printf("%d",d@@ +31+29@@ +31+30+31+30@@ +30@@ ); if(m==@@ 9) printf("%d",d@@ +31+29@@ +31+30+31+30@@ +31+30@@ ); if(m==@@ 10) printf("%d",d@@ +31+29@@ +31+30+31+30+31+31+@@ 29@@ ); if(m==@@ 11) printf("%d",d@@ +31+29@@ +31+@@ 31+30@@ +30@@ +31+@@ 31+30@@ +30@@ ); if(m==@@ 12) printf("%d",d@@ +31+29@@ +31+@@ 31+30@@ +30@@ +31+@@ 31+30@@ +31+29@@ ); } return0; }  
c -1
h -1
intmain() { intn,i,j; scanf("%d\n",&n); intnum[@@ n]; scanf("%d",&@@ num@@ [0]); printf("%d",@@ num@@ [0]); for(i=1;i<=n-1;i++) { scanf("%d",&@@ num[i]); for(j=0;j<=i;j++) { if(j@@ <i@@ &&@@ num@@ [j]==@@ num@@ [i]) {break;} if(j==i) {printf("%d",@@ num[i]@@ );} } } return0; }  
c -1
h -1
0

intmain() { intm@@ [26],@@ x; int@@ cmp@@ (inti,@@ intk,@@ inth@@ [@@ ]); intmax(int@@ m@@ [],int@@ k); intk,i,@@ h@@ [26]; scanf("%d",&k); for(i=1;i<=k;i++) scanf("%d",&h[i]); for(i=1;i<=k;i++) m@@ [i]=@@ cmp@@ (i,@@ k,@@ h); x=@@ max(@@ m,@@ k); printf("%d\n",x); return0; } intmax(int@@ m@@ [],int@@ k) { int@@ big@@ ,i; big@@ =@@ m@@ [1]; for(i=1;i<=k;i++) if(@@ big@@ <m@@ [i])@@ big@@ =@@ m[i]; return@@ big@@ ; } int@@ cmp@@ (inti,@@ intk,@@ inth@@ []) { intb[@@ 26],@@ j,@@ t=1; if(i==@@ k)@@ return1; for(j=i+1;j<=@@ k;j++) if(h@@ [i]>=@@ h@@ [j]) { b[t@@ ]=@@ cmp@@ (@@ j,k,@@ h); t++; } if(t@@ ==1)@@ return1; return@@ max@@ (b,@@ t@@ -1)@@ +1; }  
c -1
h -1
intmain() { intn,i,j,@@ t1@@ ,@@ t2@@ ,@@ t3@@ ,@@ t4@@ ,@@ s; int@@ c@@ [100][100]; scanf("%d",&n); for(i=1;i<=n;i++){ for(j=1;j<=n;j++) scanf("%d",&@@ c@@ [i][j]); } for(i=1;i<=n;i++){ for(j=1;j<=n;j++){ if(c@@ [i][j]==0){ t1@@ =i; t2@@ =j; goto@@ ask@@ ; } } } ask@@ : for(i=n@@ ;i>0@@ ;i--){ for(j=n@@ ;j>0@@ ;j--){ if(c@@ [i][j]==0){ t3@@ =i; t4@@ =j; goto@@ que@@ ; } } } que@@ : s=(@@ t4@@ -@@ t2@@ -1)*(@@ t3@@ -@@ t1@@ -1); printf("%d",s); return0; }  
c -1
h -1
0

intmain() { structpatient { int@@ id@@ [@@ 7@@ ]; intage; }@@ patient@@ [100]; inti,n,@@ max=0,@@ k; scanf("%d\n",&n); for(i=0;i<n;i++)@@ scanf("%s@@ %d\n",@@ patient@@ [i].id,&@@ patient@@ [i].age); for(i=0;i<n;i++) { if(@@ patient@@ [i].age@@ >max)max=@@ patient@@ [i].age; } for(k=@@ max@@ ;k@@ >@@ 59@@ ;k--) { for(i=0;i<n;i++)@@ if(@@ patient@@ [i].age@@ ==@@ k)@@ printf("%s\n",@@ patient@@ [i].id); } for(i=0;i<n;i++) { if(@@ patient@@ [i].age@@ <60@@ )@@ printf("%s\n",@@ patient@@ [i].id); } }  
c -1
h -1
intmain() { inta[@@ 25],@@ k,@@ b[@@ 25]; cin>>k; int@@ max1; for(inti=0;i<k;i++) { cin>>a[i]; b[i]=1; } for(intj=@@ k-1@@ ;j>=0;j--) { max1@@ =0; for(int@@ m=@@ k-1@@ ;m@@ >@@ j@@ ;m@@ --) { if(a[m@@ ]<=@@ a[j]&&@@ b[m@@ ]>=@@ max1@@ ) max1=@@ b[m@@ ]; } b[j]=@@ max1@@ +1; } int@@ max; max=@@ b[0]; for(int@@ n@@ =1;@@ n@@ <k;@@ n++) { if(max<@@ b[@@ n@@ ]) max=@@ b[@@ n]; } cout<<max<<endl; return0; }  
c -1
h -1
0

int@@ days_of_month@@ [2][@@ 12@@ ]={@@ {@@ 31,@@ 28,31,30,31,30,31,31,30,31,30,31@@ }@@ , {@@ 31,@@ 29@@ ,31,30,31,30,31,31,30,31,30,31@@ }@@ }; int@@ is_leap_year@@ (intyear@@ ) { if(@@ year%100!=0@@ &&@@ year%@@ 4@@ ==0||@@ year%400==0) return1; else return0; } intmain() { intyear,month,day; scanf("%d%d%d",&@@ year,@@ &@@ month,@@ &@@ day); int@@ index@@ =@@ is_leap_year@@ (year@@ ); intdays@@ =0; for(inti=0;i<@@ month-1;i++) days@@ +=@@ days_of_month@@ [@@ index@@ ]@@ [i]; days@@ +=@@ day; printf("%d",@@ days@@ ); }  
c -1
h -1
intmain() { inta[16]; inti,n,@@ j,@@ m,@@ k; int@@ flag; while(1) { m@@ =0;j@@ =0;@@ flag=0; for(i=0;;i++) { scanf("%d",&a[i]); if(a[i]==0) break; else@@ if(a[i]==-1) { flag=1; break; } } if(flag==1) break; for(j=0;j<@@ i-1;j++) for(k=j+1;k<@@ i;k++) { if((@@ a[k]==@@ a[j]@@ *2@@ ||@@ a[j]==@@ a[k]@@ *2@@ )&&(@@ a[j]@@ !=0&&@@ a[k]@@ !=0)) m++; } printf("%d\n",m); } return0; }  
c -1
h -1
0

void@@ factor@@ (intx,int@@ limit@@ ); int@@ result; intmain() { intn; scanf("%d",&n); int@@ input@@ ; for(inti=0;i<=@@ n-1;i++) { scanf("%d",&@@ input@@ ); result=1; factor@@ (@@ input@@ ,@@ 2); printf("%d\n",@@ result); } return0; } void@@ factor@@ (intx,int@@ limit@@ ) { int@@ remainder@@ ; if(x@@ <@@ limit@@ ) { return; } for(inti=@@ limit@@ ;i<=@@ x;i++) { remainder@@ =@@ x%@@ i; if(@@ remainder@@ ==0) { if(x@@ /i@@ >=@@ i) { result@@ ++; factor@@ (x/i,i); } } } }  
c -1
h -1
intmain() { inta[@@ 104@@ ][@@ 104@@ ]; int@@ h,@@ l; cin>>@@ h@@ >>@@ l; for(inti=0;i<@@ 104@@ ;i++) for(intk=0;k<@@ 104@@ ;k++) a[i][k]@@ =-@@ 999@@ ; for(inti=1;i<=@@ h@@ ;i++) for(intk@@ =1@@ ;k<=@@ l@@ ;k++) cin>>@@ a[i]@@ [k]; int@@ printer@@ =@@ a[1@@ ][1@@ ]; for(inti=1;i<=@@ l@@ ;i++) { intk=0; printer@@ =@@ a[1@@ +k@@ ]@@ [i-@@ k@@ ]; while(@@ printer@@ !=@@ -@@ 999@@ ) { cout<<@@ printer@@ <<endl@@ ;@@ ; k++; printer@@ =@@ a[1@@ +k@@ ]@@ [i-@@ k@@ ]; } } for(inti=2;i<=@@ h@@ ;i++) { intk=0; printer@@ =@@ a[i@@ +k@@ ][l@@ -k@@ ]; while(@@ printer@@ !=@@ -@@ 999@@ ) { cout<<@@ printer@@ <<endl@@ ;@@ ; k++; printer@@ =@@ a[i@@ +k@@ ][l@@ -k@@ ]; } } return0; }  
c -1
h -1
0

struct@@ pat { charid[10]; intage; }@@ pat@@ [100]; main() { intn,a[@@ 200],@@ j,@@ i; scanf("%d",&n); for(j=0;j<@@ 150@@ ;j++)@@ a[j]=0; for(i=0;i<n;i++) { scanf("%s%d",@@ pat[i].@@ id,&@@ pat@@ [i].age); for(j=1;j<@@ 150@@ ;j++) { if(j==@@ pat@@ [i].age@@ )@@ a[j]@@ ++; } } for(j=@@ 150@@ ;j@@ >=60@@ ;j--) { if(a[j]@@ ==0)@@ continue; for(i=0;i<n;i++) { if(j==@@ pat@@ [i].age@@ )@@ printf("%s\n",@@ pat@@ [i].id); } } for(i=0;i<n;i++) if(pat@@ [i].age@@ <60@@ )@@ printf("%s\n",@@ pat@@ [i].id); getchar(); getchar(); }  
c -1
h -1
intn; structstu { int@@ xh@@ ; int@@ yw@@ ; int@@ sx; int@@ all@@ ; structstu*next; }; structstu*@@ a,*@@ b@@ ,*@@ c,@@ q,@@ t,@@ r; structstu*@@ creat@@ () { structstu*@@ head; structstu*@@ p1,*p2; inti; p1=p2=(struct@@ stu*)malloc(sizeof(structstu)); scanf("%d%d%d",&p1->@@ xh@@ ,&p1->@@ yw@@ ,&p1->@@ sx@@ ); p1->@@ all@@ =p1->@@ yw@@ +p1->@@ sx; head=p1; a=@@ b=@@ c=@@ head; for(i=1;i<n;i++) { p2->next=p1; p2=p1; p1=(struct@@ stu*)malloc(sizeof(structstu)); scanf("%d%d%d",&p1->@@ xh@@ ,&p1->@@ yw@@ ,&p1->@@ sx@@ ); p1->@@ all@@ =p1->@@ yw@@ +p1->@@ sx; if(p1->@@ all@@ >@@ a@@ ->@@ all@@ ) { c=@@ b; b=@@ a; a@@ =p1; } else if(p1->@@ all@@ >b@@ ->@@ all@@ ) { c=@@ b; b@@ =p1; } else { if(p1->@@ all@@ >@@ c@@ ->@@ all@@ ) c@@ =p1; } }@@ p2->next=NULL; returnhead; } voidmain() { structstu@@ *p; a@@ =&@@ q@@ ;@@ b@@ =&@@ t@@ ;c@@ =&@@ r; scanf("%d",&n); p=@@ creat@@ (); printf("%d%d\n%d%d\n%d%d\n",@@ a@@ ->@@ xh@@ ,@@ a@@ ->@@ all@@ ,@@ b@@ ->@@ xh@@ ,@@ b@@ ->@@ all@@ ,@@ c@@ ->@@ xh@@ ,@@ c@@ ->@@ all@@ ); }  
c -1
h -1
0

intmain() { introw,col,@@ t,@@ i,j,k; inta[@@ 101][101]; cin>>row>>col; t=@@ row+col@@ -1; for(i=0;i<row;i++) for(j=0;j<col;j++) cin>>*(*(a+i)+j); for(i=0;i<t;i++) for(j=0;j<row@@ ;j++) for(k=0;k<col@@ ;k++) if((@@ j@@ +k@@ )==@@ i) {@@ cout<<*(*(a@@ +j)@@ +k)@@ <<endl@@ ;break;} return0; }  
c -1
h -1
intmain() { chars1@@ [256@@ ]={'\0'},@@ s2@@ [256@@ ]={'\0'},@@ s3@@ [256@@ ]={'\0'},@@ t@@ [256@@ ]={'\0'}; inti,j,@@ k=0,@@ s,@@ l1,l2,@@ l3@@ ; scanf("%s",@@ s1); scanf("%s",@@ s2); scanf("%s",@@ s3); l1=strlen(@@ s1); l2=strlen(@@ s2); l3@@ =strlen(@@ s3); for(i=0;i<l1@@ ;) { for(j=0;j<@@ l2@@ ;j++) { if(i+j@@ >=@@ l1@@ ||@@ s1@@ [i+j]!=@@ s2@@ [j]){ break; } } if(j==@@ l2@@ ) { for(s=0;s@@ <@@ l3@@ ;s++) { t@@ [k]=@@ s3@@ [s@@ ]; k++; } i@@ =i+@@ l2@@ ; break; } else { t@@ [k]=@@ s1@@ [i]; i++; k++; } } for(@@ ;i<@@ l1@@ ;i++) { t@@ [k]=@@ s1@@ [i]; k++; } t@@ [k]=@@ '\0'@@ ; printf("%s",@@ t); return0; }  
c -1
h -1
0

int@@ fj@@ (inta,int@@ b); intmain() { intn,i,@@ a; cin>>n; for(i=0;i<n;i++) { cin>>a; cout<<@@ fj@@ (a,@@ 2)<<endl; } return0; } int@@ fj@@ (inta,intb) { intj,@@ x,@@ sum@@ =1,@@ f=0; x=@@ sqrt(@@ (double)@@ a); if((@@ a@@ ==1)@@ ||(@@ a@@ ==@@ 2@@ )||(@@ a@@ ==@@ 3@@ )) return1; else { for(j=@@ b@@ ;j<=@@ x;j++) { if(a%@@ j@@ ==0) { sum+=@@ fj@@ (a@@ /j,j); f=1; } } if(f@@ ==0) return1; else returnsum; } }  
c -1
h -1
inta[100]; intf@@ (inta[@@ ],intn,int@@ min) { if(n==1) { if(a[0]@@ >=@@ min@@ )@@ return(1); else@@ return(0); } else { if(a[@@ n-1@@ ]<@@ min@@ )@@ return(@@ f(a,@@ n-1@@ ,@@ min@@ )); elseif(@@ f(a,@@ n-1@@ ,a[@@ n-1@@ ])@@ +1@@ <@@ f(a,@@ n-1@@ ,@@ min@@ )) return(@@ f(a,@@ n-1@@ ,@@ min@@ )); else@@ return(@@ f(a,@@ n-1@@ ,a[@@ n-1@@ ])@@ +1); } } intmain() { intn,i; scanf("%d",&n); for(i=0;i<n;i++) scanf("%d",&a[i]); int@@ result; result=@@ f(a,@@ n,@@ 0); printf("%d",@@ result); return0;}  
c -1
h -1
0

int@@ fact@@ (intn,int@@ m); intmain() { intn,a[@@ 35000@@ ],@@ i,@@ b[@@ 35000@@ ]; cin>>n; for(i=0;i<n;i++)@@ cin>>a[i]; for(i=0;i<n;i++)@@ b[i]=@@ fact@@ (a[i],@@ 2); for(i=0;i<n;i++)@@ cout<<b[i]@@ <<endl; return0; } int@@ fact@@ (intn,int@@ m) { intsum@@ =1,@@ i,@@ temp=0; if(n@@ <@@ m)@@ return0; elseif(n==@@ 2)@@ return1; else { for(i=m@@ ;i<n;i++) {@@ if(n@@ %i==0)@@ sum=sum+@@ fact@@ (n@@ /i,@@ i@@ );} returnsum; } }  
c -1
h -1
structstudent { intnum; int@@ yw@@ ; int@@ sx; }; intmain() { intn,i,@@ x=0,@@ y=0,@@ z=0; scanf("%d",&n); structstudent@@ a[@@ n]; intb[@@ n]; for(i=0;i<n;i++) { scanf("%d%d%d",&a[i].@@ num,&@@ a[i].@@ yw@@ ,&a[i].@@ sx@@ ); b[i]=@@ a[i].@@ yw@@ +a[i].@@ sx; } for(i=1;i<n;i++) { if(b[@@ x@@ ]<@@ b[i]) x@@ =i; } printf("%d%d\n",@@ a[x@@ ].num,@@ b[@@ x@@ ]); for(i=1;i<n;i++) { if(i==@@ x)@@ continue; if(b[@@ y@@ ]<@@ b[i]) y@@ =i; } printf("%d%d\n",@@ a[@@ y@@ ].num,@@ b[@@ y@@ ]); for(i=1;i<n;i++) { if(i==@@ x)@@ continue; if(i==@@ y)@@ continue; if(b[@@ z@@ ]<@@ b[i]) z@@ =i; } printf("%d%d\n",@@ a[@@ z@@ ].num,@@ b[@@ z@@ ]); getchar(); getchar(); }  
c -1
h -1
0

intmain() { chars[256],@@ sub[256],@@ re@@ [256]; inti,j,k; gets(s); gets(sub); gets(@@ re); for(i=0;i<strlen(@@ s@@ );i++) { for(j=i;j<@@ strlen(@@ sub)@@ +i@@ ;j++) { if(s@@ [j]!=@@ sub@@ [j-i@@ ]@@ )break; if(j==@@ strlen(@@ sub)@@ +i@@ -1) { for(k=j@@ ;k@@ >=i@@ ;k--) s@@ [k]=@@ re@@ [k-i@@ ]; } } if(j==@@ strlen(@@ sub)@@ +i)@@ break; } printf("%s",s); return0; }  
c -1
h -1
structStudent { intnum; intchi; intmath; inttotal; }@@ person@@ [100000],@@ first@@ [3@@ ]={@@ {@@ 0,0,@@ 0,@@ 0},{@@ 0,0,@@ 0,@@ 0},{@@ 0,0,@@ 0,@@ 0@@ }@@ }; intmain() { long@@ n; inti,j; scanf("%ld",&n); for(i=0;i<n;i++) { scanf("%ld%d%d",&@@ person@@ [i].num,&@@ person@@ [i].@@ chi@@ ,&@@ person@@ [i].@@ math); person@@ [i].@@ total=@@ person@@ [i].@@ chi@@ +@@ person@@ [i].@@ math; if(@@ person@@ [i].@@ total>@@ first@@ [0].@@ total@@ ){@@ first@@ [1]=@@ first@@ [0]@@ ;@@ first@@ [0]=@@ person@@ [i]@@ ;} else if(@@ person@@ [i].@@ total>@@ first@@ [1].@@ total@@ ){@@ first@@ [2]=@@ first@@ [1]@@ ;@@ first@@ [1]=@@ person@@ [i]@@ ;} else if(@@ person@@ [i].@@ total>@@ first@@ [2].@@ total@@ ){@@ first@@ [2]=@@ person@@ [i]@@ ;} } for(j=0;j<3;j++) { printf("%ld%d\n",@@ first@@ [j].@@ num,@@ first@@ [j].@@ total); } }  
c -1
h -1
0

structbook { intnum; charwriter@@ [20]; structbook*next; }; intmain() { intn,i,j,@@ m,@@ k,@@ c[@@ 26],@@ max; chara[@@ 26]; scanf("%d",&m); structbook*@@ p1,*p2,*head; for(i=0;i<m;i++) { p1=(structbook@@ *)malloc(@@ Len@@ ); if(i==0) { head=p1; } else { p2->next=p1; } p2=p1; scanf("%d%s",&p1->num,p1->@@ writer); } p2->next=NULL; p1=head; for(i=0;i<26;i++) { a[i]@@ =i+65; c[i]@@ =0; } for(j=0;j<m;j++) { for(i=0;i<26;i++) { n=strlen(@@ p1->@@ writer); for(k=0;k<n;k++) { if(a[i]==@@ p1->@@ writer@@ [k]) { c[i]@@ ++; } } } p1=p1->next; } max=0; for(i=0;i<26;i++) { if(c@@ [i]>@@ c[@@ max@@ ]) { max=i; } } printf("%c\n%d\n",@@ a[@@ max@@ ],c[@@ max@@ ]); p1=head; for(i=0;i<m;i++) { n=strlen(@@ p1->@@ writer); for(j=0;j<n;j++) { if(p1->@@ writer@@ [j]==@@ a[@@ max@@ ]) { printf("%d\n",@@ p1->num); } } p1=p1->next; } return0; }  
c -1
h -1
int@@ min@@ (intx,inty) { if(x@@ <=@@ y)@@ return@@ x; else@@ return@@ y; } intmain() { inta[100][100],@@ row,col,@@ ROW@@ ,@@ COL@@ ,i,@@ m@@ =1,@@ n=0,@@ x; scanf("%d%d",&@@ ROW@@ ,&@@ COL@@ ); for(row=0;row@@ <ROW@@ ;@@ row++) { for(col=0;col@@ <@@ COL@@ ;col@@ ++)@@ scanf("%d",&a[@@ row][col@@ ]); } x=@@ min@@ (@@ ROW@@ ,@@ COL@@ ); row@@ =0; col@@ =0; for(i=0;i<@@ x+@@ x@@ *(@@ x@@ -1)@@ /2@@ ;i++) { printf("%d\n",a[@@ row][col@@ ]); n++; if(n@@ !=@@ m) { row@@ ++; col@@ --; } elseif(n==@@ m) { row@@ =0; col@@ +=@@ m; m++; n=0; } } if(@@ COL@@ >=@@ ROW@@ ) { row@@ =0; col@@ =@@ ROW@@ ; m=@@ col@@ +1; for(i=0;i<@@ ROW@@ *(@@ COL@@ -@@ ROW@@ );i++) { printf("%d\n",a[@@ row][col@@ ]); if(row@@ !=@@ ROW@@ -1) { row@@ ++; col@@ --; } else { row@@ =0; col@@ =@@ m; m++; } } row@@ =1; col@@ =@@ COL@@ -1; m=@@ ROW@@ -1; n=0; for(i=0;i<@@ ROW@@ *(@@ ROW@@ -1)@@ /2@@ ;i++) { n++; printf("%d\n",a[@@ row][col@@ ]); if(n@@ !=@@ m) { row@@ ++; col@@ --; } else { row@@ =@@ ROW@@ -m@@ +1; col@@ =@@ COL@@ -1; m@@ --; n=0; } } } if(@@ COL@@ <ROW@@ ) { row@@ =1; col@@ =@@ COL@@ -1; m=@@ 2; for(i=0;i<@@ COL@@ *(@@ ROW@@ -@@ COL@@ );i++) { printf("%d\n",a[@@ row][col@@ ]); if(col@@ !=0) { row@@ ++; col@@ --; } else { row@@ =@@ m; col@@ =@@ COL@@ -1; m++; } } row@@ =@@ ROW@@ -@@ COL@@ +1; col@@ =@@ COL@@ -1; m=@@ COL@@ -1; n=0; for(i=0;i<@@ COL@@ *(@@ COL@@ -1)@@ /2@@ ;i++) { n++; printf("%d\n",a[@@ row][col@@ ]); if(n@@ !=@@ m) { row@@ ++; col@@ --; } else { row@@ =@@ ROW@@ -m@@ +1; col@@ =@@ COL@@ -1; m@@ --; n=0; } } } return0; }  
c -1
h -1
0

voidmain() { intn,a[@@ 1000]={0},@@ c[@@ 27@@ ]={0},@@ i,j,k,@@ m,@@ p,@@ d[@@ 1000]={0}; charb[@@ 1000][@@ 30@@ ]={@@ {@@ 0@@ }@@ }; scanf("%d",&n); for(i=0;i<n;i++) { scanf("%d%s",&a[i],@@ b[i]); } for(i=0;i<n;i++) { for(j=0;j<26;j++) { for(k=1;k<=@@ 26@@ ;k++) { if(b[i]@@ [j]==@@ 64@@ +k)@@ c@@ [k]=@@ c@@ [k]@@ +1; } } } m=@@ c[@@ 1@@ ]; p=1; for(i=1;i<@@ 27@@ ;i++) { if(c@@ [i]>@@ m) { m=@@ c[i]; p=i; } } for(i=0;i<n;i++) { for(j=0;j<26;j++) { if(b[i]@@ [j]==@@ 64@@ +p@@ )@@ d@@ [i]=1; } } printf("%c\n",@@ 64@@ +@@ p); printf("%d\n",m); for(i=0;i<@@ 1000@@ ;i++) { if(d@@ [i]@@ ==1)@@ printf("%d\n",a[i]); } }  
c -1
h -1
inta[@@ 1000],@@ c,d; void@@ kg@@ (); void@@ m@@ (int@@ ); void@@ r@@ (); main() { r@@ (); m@@ (@@ c); kg@@ (); m@@ (@@ d); } void@@ r@@ () { scanf("%d%d",&@@ c@@ ,&@@ d); } void@@ m@@ (int@@ s) { inti,j,t; for(i=0;i<@@ s;i++) { scanf("%d",&a[i]); } for(i=0;i<@@ s;i++) { for(j=0;j<@@ s@@ -i-1;j++) { if(a[j]>a[j+1]) { t=a[j]; a[j]=a[j+1]; a[j+1]=t; } } } for(i=0;i<@@ s;i++) { printf("%d",a[i]); if(i<@@ s@@ -1) kg@@ (); } } void@@ kg@@ () { printf(""); }  
c -1
h -1
0

intmain(){ char@@ yuan@@ [256],@@ jiu@@ [256],@@ xin@@ [256]; inti,j,@@ len,@@ n=0,@@ len1@@ ,@@ u@@ [256],@@ jishu@@ [256@@ ]={0},@@ len2@@ ,@@ k,@@ weizhi@@ ,@@ sum=0; scanf("%s",@@ yuan@@ ); scanf("%s",@@ jiu@@ ); scanf("%s",@@ xin@@ ); len1=strlen(@@ yuan@@ ); len2=strlen(@@ jiu@@ ); for(i=0;i<len1;i++){ if(@@ yuan@@ [i]==@@ jiu@@ [0]){ u@@ [n@@ ]=i; n++; } } for(i=0;i<n;i++){ for(j=@@ u@@ [i],@@ k@@ =0;j<@@ u@@ [i]+@@ len2@@ ,k@@ <@@ len2@@ ;j++@@ ,k@@ ++){ if(@@ yuan@@ [j]!=@@ jiu@@ [k]) { jishu@@ [i]++; } } } for(i=0;i<n;i++){ if(@@ jishu@@ [i]@@ ==0){ sum++; } } if(sum@@ ==0){ printf("%s",@@ yuan@@ ); } else{ for(i=0;i<n;i++){ if(@@ jishu@@ [i]@@ ==0){ weizhi@@ =@@ u@@ [i]; break; } } for(i=@@ weizhi@@ ,k@@ =0;i<@@ weizhi@@ +len2@@ ,k@@ <@@ len2@@ ;i++@@ ,k@@ ++){ yuan@@ [i]=@@ xin@@ [k]; } printf("%s",@@ yuan@@ ); } return0; }  
c -1
h -1
struct@@ people { charnum[10]; intage; struct@@ people@@ *next; }; voidmain() { struct@@ people@@ *head,*@@ p0@@ ,*@@ p,*@@ s; head=(struct@@ people@@ *)malloc(sizeof(struct@@ people@@ )); head@@ ->next=NULL; intn,i; scanf("%d",&n); for(i=0;i<n;i++) { p0@@ =head; p=@@ p0@@ ->next; s@@ =(struct@@ people@@ *)malloc(sizeof(struct@@ people@@ )); s@@ ->next=NULL; scanf("%s%d",@@ s@@ ->@@ num,&@@ s@@ ->age@@ ); while(p@@ !=NULL@@ &&(@@ (@@ s@@ ->age@@ >=60&&@@ s@@ ->age@@ <=@@ p->age@@ )||@@ s@@ ->age@@ <60@@ )) { p0@@ =p; p=p->next; } p0@@ ->next=@@ s; s@@ ->next=p; } p=head->next; while(p!=NULL) { printf("%s\n",p->@@ num); p=p->next; } }  
c -1
h -1
0

voidmain() { inty,@@ d,@@ m,@@ i,j,@@ e=0,@@ total=0; inta[@@ 12]={31,28,31,30,31,30,31,31,30,31,30,31}; scanf("%d%d%d",&y,&m,&d); if(((@@ y%@@ 4==0)&&(@@ y%100!=0@@ )@@ )||(y%@@ 400==0)@@ )@@ a[1]=29; for(i=1;i<m;i++) { total+=@@ a[i@@ -1]; } total+=@@ d; printf("%d\n",@@ total); }  
c -1
h -1
main() { intn,a,@@ i,j,@@ s=0; scanf("%d",&n); for(i=0;i<n;i++) { for(j=0;j<n;j++) { scanf("%d",&a); if(a==0) break; } for(j@@ ++@@ ;j<n;j++) { scanf("%d",&a); if(a==@@ 255) s++; else break; } for(j@@ ++@@ ;j<n;j++) { scanf("%d",&a); } } printf("%d",s); }  
c -1
h -1
0

voidmain() { intb[@@ 5@@ ],c[@@ 5@@ ],@@ k@@ [5@@ ]; long@@ a[@@ 5@@ ]; intj; for(j=1;j<=@@ 5@@ ;j++) { scanf("%ld%d%d",&@@ a@@ [j-1]@@ ,&@@ b@@ [j-1]@@ ,&@@ c@@ [j-1]); } for(j=1;j<=@@ 5@@ ;j++) { inti,@@ l,@@ x; if(a@@ [j-1]@@ %@@ 4@@ !=0)@@ l=@@ 28; else { if((@@ a@@ [j-1]@@ %@@ 100@@ ==0)&&(@@ a@@ [j-1]@@ %@@ 400@@ !=0@@ ))@@ l=@@ 28; else@@ l=@@ 29; } x=0; for(i=1;i<=@@ b@@ [j-1]@@ -1;i++) { switch(@@ i) { case1:@@ x=x+@@ 31;break; case2:@@ x=x+@@ l@@ ;break; case3:@@ x=x+@@ 31;break; case4:@@ x=x@@ +30@@ ;break; case5:@@ x=x+@@ 31;break; case6:@@ x=x@@ +30@@ ;break; case7:@@ x=x+@@ 31;break; case8:@@ x=x+@@ 31;break; case9:@@ x=x@@ +30@@ ;break; case10:@@ x=x+@@ 31;break; case11:@@ x=x@@ +30@@ ;break; case12:@@ x=x+@@ 31;break; } } x=x+@@ c@@ [j-1]; intm; m@@ =j@@ -1; k@@ [m]=@@ x; printf("%d\n",@@ k@@ [m]); } }  
c -1
h -1
inta[1000][1000]; intmain() { intn; scanf("%d",&n); inti,j; for(i=0;i<n;i++) { for(j=0;j<n;j++) scanf("%d",&a[i][j]); } int@@ a1@@ =0,@@ a2@@ =0,@@ b1@@ =0,@@ b2@@ =0; for(i=0;i<n;i++) { for(j=0;j<n;j++) { if(a[i][j]==0) { a1@@ =i; b1@@ =j; break; } } if(a[@@ a1@@ ][@@ b1@@ ]==0) break; } for(i=@@ a1@@ ;i<n;i++) { if(a[i]@@ [@@ b1@@ ]==255@@ ) { a2@@ =i-1; break; } } for(j=@@ a2@@ ;j<n;j++) { if(a[@@ a2@@ ]@@ [j]==@@ 255) { b2@@ =j@@ -1; break; } } int@@ c=0; for(i=@@ a1@@ ;i<@@ a2@@ ;i++) { for(j=@@ b1@@ ;j<@@ b2@@ ;j++) { if(a[i][j]==@@ 255) c++; } } printf("%d\n",@@ c); return0; }  
c -1
h -1
0

inta[@@ 40000@@ ]={0}; void@@ fun@@ (intn,int@@ j@@ ,int@@ k){ inti; for(i=j@@ ;i<=@@ sqrt(n@@ );i++){ if(n@@ %i==0){ j=i; a[k@@ ]++; fun@@ (n@@ /@@ i,j,@@ k); } } } intmain() { intn; intm[@@ 40000@@ ]={0}; inti; scanf("%d",&n); for(i=1;i<=n@@ ;i++){@@ scanf("%d",&@@ m[i]@@ );} for(i=1;i<=n@@ ;i++){@@ fun@@ (m@@ [i],@@ 2@@ ,i@@ );} for(i=1;i<=n@@ ;i++){@@ printf("%d\n",a[i]@@ +1@@ );} return0; }  
c -1
h -1
intmain() { intn,@@ sz[@@ 1000],@@ k,@@ p=0,@@ h@@ [@@ 1000][1000],@@ i,j; scanf("%d%d",&n,&k); for(i=0;i<n;i++){ scanf("%d",&@@ sz[i]@@ );} for(i=0;i<n;i++){ for(j=i+1;j<@@ n-i@@ -1;j++){ h@@ [i][j]=@@ sz[i]@@ +sz@@ [j]; if(h@@ [i][j]==@@ k){ p@@ =1;} } } if(p@@ ==0){ printf("no");} elseif(@@ p@@ ==1){ printf("yes");} return0; }  
c -1
h -1
0

intc[@@ 1000]={0},@@ d[@@ 1000],@@ j; main() { voidf@@ (); inti,@@ s; scanf("%d",&@@ s); for(j=0;j<@@ s@@ ;j++) { scanf("%d",&@@ d@@ [j]); for(i=2;i<=@@ sqrt(@@ d@@ [j]@@ );i++) { if(d@@ [j]@@ %i==0) { c[j]@@ ++; f(@@ i,@@ d@@ [j]@@ /i); } } } for(j=0;j<@@ s@@ ;j++) { printf("%d\n",@@ c[j]@@ +1); } } voidf@@ (int@@ s@@ ,int@@ m) { intk; for(k=@@ s@@ ;k<=@@ sqrt(@@ m)@@ ;k++) { if(m@@ %@@ k@@ ==0) { c[j]@@ ++; f(@@ k,@@ m/@@ k); } } }  
c -1
h -1
intmain() { intn,k,@@ i; int*@@ a; scanf("%d%d",&n,&k); a=@@ (int*)malloc(sizeof(int)*n); for(i=0;i<n;i++) { scanf("%d",&a[i]); } for(i=0;i<n;i++) { for(intj=0;j<@@ n@@ -i;j++) { if(a[i]+@@ a[i+j@@ ]==@@ k) { printf("yes"); return0; } } } printf("no"); return0; }  
c -1
h -1
0

intmain() { voidshuru@@ (intarray@@ [100],int@@ x); voidpaixu@@ (intarray@@ [100],int@@ x); inti,@@ m,n,@@ a[100],b[100]; scanf("%d%d",&m,&n); shuru@@ (a,m); shuru@@ (b,n); paixu@@ (a,m); paixu@@ (b,n); for(i=0;i<m;i++) { printf("%d",a[i]); } for(i=0;i<n-1;i++) { printf("%d",b[i]); } printf("%d",b[@@ n-1]); } voidshuru@@ (intarray@@ [100],int@@ x) { inti; for(i=0;i<x;i++) { scanf("%d",&array@@ [i]); } } voidpaixu@@ (intarray@@ [100],int@@ x) { inti,j,@@ b; for(j=1;j<@@ x;j++) { for(i=0;i<x@@ -j;i++) { if(array@@ [i]>@@ array@@ [i+1]@@ ){@@ b=@@ array@@ [i];@@ array@@ [i]=@@ array@@ [i+1@@ ];@@ array@@ [i+1]=@@ b@@ ;} } } }  
c -1
h -1
intmain(){ intn,@@ a[100][100],@@ row,col,@@ ROW1@@ ,@@ COL1@@ ,@@ ROW2@@ ,@@ COL2@@ ,sum; scanf("%d",&n); for(row=0;row<n;@@ row++){ for(col=0;col<n;col@@ ++){ scanf("%d",&a[@@ row][col@@ ]); } } int@@ flag=0; for(row=0;row@@ <n@@ &&@@ !@@ flag@@ ;@@ row++){ for(col=0;col@@ <n@@ &&@@ !@@ flag@@ ;col@@ ++){ if(a[@@ row][col@@ ]==0){ ROW1@@ =@@ row; COL1@@ =@@ col; flag=1; break; } } } flag=0; for(row@@ =@@ n-1;@@ row@@ >=0&&@@ !@@ flag@@ ;@@ row@@ --){ for(col@@ =@@ n-1;@@ col@@ >=0;@@ col@@ --){ if(a[@@ row][col@@ ]==0){ ROW2@@ =@@ row; COL2@@ =@@ col; flag=1; break; } } } sum=(@@ ROW2@@ -@@ ROW1@@ -1)*(@@ COL2@@ -@@ COL1@@ -1); printf("%d\n",sum); return0; }  
c -1
h -1
0

intmain() { inta[@@ 101][101]; introw,col; inti,j; intx; scanf("%d%d",&row,&col); for(i=0;i<row;i++) { for(j=0;j<col;j++) { scanf("%d",&a[i][j]); } } if(row@@ <col) { for(i=0;i<row;i++) { for(j=0;j<=i;j++) { printf("%d\n",a[@@ 0@@ +j@@ ]@@ [i-j@@ ]); } } for(i=0;i<@@ col@@ -@@ row-1;i++) { for(j=0;j<row@@ ;j++) { printf("%d\n",@@ a[j]@@ [@@ row@@ +i-j@@ ]); } } for(i=0;i<row;i++) { for(j=0;j<row@@ -i;j++) { printf("%d\n",@@ a[i+j@@ ][col@@ -1-j@@ ]); } } } else { for(i=0;i<col;i++) { for(j=0;j<=i;j++) { printf("%d\n",a[@@ 0@@ +j@@ ]@@ [i-j@@ ]); } } for(i=0;i<@@ row@@ -col@@ -1;i++) { for(j=0;j<col;j++) { printf("%d\n",@@ a[i+j@@ +1@@ ][col@@ -j@@ -1]); } } if(row@@ ==@@ col) { x=1; } else { x=0; } for(i=x@@ ;i<@@ col;i++) { for(j=0;j<col@@ -i;j++) { printf("%d\n",a[@@ row@@ -col@@ +i@@ +j@@ ][col@@ -j@@ -1]); } } } return0; }  
c -1
h -1
intmain() { intn,i,j,@@ temp; char@@ t@@ [10]; scanf("%d",&n); int@@ y[@@ n]; charid@@ [n@@ ][10]; for(i=0;i<n;i++) scanf("%s%d",@@ id[i],&@@ y@@ [i]); for(i=1;i<n;i++) { if(y@@ [i]@@ >=60) {@@ for(j=i@@ ;j>0;j--) if(y@@ [j-1]@@ <@@ y@@ [j]) { temp=@@ y@@ [j]; y@@ [j]=@@ y@@ [j-1]; y@@ [j-1]=@@ temp; strcpy(@@ t,@@ id@@ [j]); strcpy(id@@ [j],@@ id@@ [j-1]); strcpy(id@@ [j-1@@ ],@@ t); } } } for(i=0;i<n;i++) printf("%s\n",@@ id[i]); }  
c -1
h -1
0

intmain(){ inta[100][100],@@ row,col,@@ i,j,@@ s; cin>>row>>col; for(i=0;i<row;i++) for(j=0;j<col;j++) cin>>a[i][j]; for(s=0;s@@ <row@@ +col@@ -1;@@ s@@ ++){ for(i=0;i<row;i++){ if(s@@ -i@@ <col@@ ){ if(s@@ >=@@ i) cout<<a[i]@@ [s@@ -i@@ ]<<endl; elsebreak; } } } return0; }  
c -1
h -1
intmain() { inta,b,c,@@ n; scanf("%d%d%d",&a,&b,&c); int@@ one@@ [@@ 12]={31,29,31,30,31,30,31,31,30,31,30,31}; int@@ another@@ [12]={31,28,31,30,31,30,31,31,30,31,30,31}; inti; intm=0; if(a%@@ 4==0&&a%100!=0@@ ||a%@@ 400@@ ==0){ for(i=0;i<(@@ b@@ -1)@@ ;i++){ m=m+@@ one@@ [i]; } n=@@ m@@ +c; } else{ for(i=0;i<(@@ b@@ -1)@@ ;i++){ m=m+@@ another@@ [i]; } n=@@ m@@ +c; } printf("%d\n",n); return0; }  
c -1
h -1
0

voidmain() { chars[@@ 260@@ ],@@ w@@ [260],@@ h@@ [260@@ ]; int@@ l1,l2@@ ,i,j,@@ k=0; scanf("%s",s); scanf("%s",@@ w); scanf("%s",@@ h); l1@@ =strlen(s); l2=strlen(@@ w); for(j=0;j<@@ l1@@ ;j++) { if(s@@ [j]==@@ w@@ [0]) { for(i=1;i<@@ l2@@ ;i++) if(s@@ [j+i@@ ]!=@@ w@@ [i]) break; if(i==@@ l2@@ ) { k=1; break; } } } if(k@@ ) { for(k=0;k<j@@ ;k++) printf("%c",s@@ [k]); for(k=0;k<@@ l2@@ ;k++) printf("%c",@@ h@@ [k]); for(k=j@@ +@@ l2@@ ;k<@@ l1@@ ;k++) printf("%c",s@@ [k]); printf("\n"); } else { printf("%s",@@ s@@ );} }  
c -1
h -1
intmain() { structstudent {@@ char@@ as@@ [10]; int@@ ag@@ ; }; structstudent@@ stu@@ [100]; structstudent@@ st@@ [100]; structstudent@@ temp; intn,i,j,k; scanf("%d",&n); for(i=0;i<n;i++) scanf("%s%d",@@ stu[i].@@ as@@ ,&stu[i].@@ ag@@ ); j=0; for(i=0;i<n;i++){ if(stu[i].@@ ag@@ >@@ 59@@ ){ st@@ [j]=@@ stu[i]; stu[i].@@ ag@@ =0; j++; } } for(k=1;k<@@ j@@ ;k++){ for(i=0;i<j@@ -@@ k;i++){ if(@@ st[i].@@ ag@@ <@@ st@@ [i+1].@@ ag@@ ){ temp=@@ st@@ [i]; st@@ [i]=@@ st@@ [i+1]; st@@ [i+1]=@@ temp; } } } for(i=0;i<j;i++) printf("\n@@ %s",@@ st[i].@@ as@@ ); for(i=0;i<n;i++) if(stu[i].@@ ag@@ !=0) printf("\n@@ %s",@@ stu[i].@@ as@@ ); return0; }  
c -1
h -1
0

struct@@ missle { intid; int@@ h; }@@ *p,@@ tmp; intmax=0; int@@ maxn@@ (inti,int@@ n); int@@ pass@@ (int@@ pre@@ ,int@@ aft@@ ); intmain() { intk; scanf("%d",&k); p=(struct@@ missle@@ *)malloc(sizeof(struct@@ missle@@ )*@@ k); inti=0; do { scanf("%d",&@@ p[i].@@ h); p[i].@@ id@@ =i; i++; }@@ while(i<@@ k); intj; for(i=0;i<k;i++) { j=@@ maxn@@ (i,@@ k); } printf("%d\n",max); free@@ (p); return0; } int@@ maxn@@ (inti,int@@ n) { int@@ max2@@ =1; int@@ re@@ =1; intj; if(i==@@ n-1) { max2@@ =1; } else { for(j=i+1;j<n;j++) { re@@ =1; if(@@ pass@@ (@@ i,j@@ )@@ ==1) { re@@ +=@@ maxn@@ (@@ j,@@ n); if(@@ re@@ >@@ max2@@ ) { max2=@@ re@@ ; } } } } if(@@ max2@@ >max) { max=@@ max2; } return@@ max2; } int@@ pass@@ (int@@ pre@@ ,int@@ aft@@ ) { if(p@@ [@@ pre@@ ].@@ h@@ >=@@ p[@@ aft@@ ].@@ h@@ ) { return1; } else { return0; } }  
c -1
h -1
intmain(intargc,char*argv[]) { intyear,month,day; int@@ monthday@@ [12]={31,28,31,30,31,30,31,31,30,31,30,31}; scanf("%d%d%d",&year,&month,&day); inti; intsum=0; for(i=1;i<@@ month@@ ;i++){ sum=sum+@@ monthday@@ [i-1]; } sum=sum+day; inta; a=@@ year%@@ 4@@ ; if(month@@ >2@@ &&@@ a@@ ==0){ sum=sum+1; } printf("%d",sum); return0; }  
c -1
h -1
0

intmain() { inta[100][100],@@ row,col,@@ i,j; scanf("%d%d",&row,&col); for(i=0;i<row;i++) { for(j=0;j<col;j++) { scanf("%d",&a[i][j]); } } for(i=0;i<@@ row+col@@ -1;i++) { if(i>=@@ col) { for(j=col-1@@ ;j>=i@@ -@@ row@@ +1@@ &&j>=0@@ ;j--) { printf("%d\n",@@ a[i@@ -j@@ ][j]); } } else { for(j=i@@ ;j>=i@@ -@@ row@@ +1@@ &&j>=0@@ ;j--) { printf("%d\n",@@ a[i@@ -j@@ ][j]); } } } return0; }  
c -1
h -1
intmain() { inta[@@ 100001@@ ],b[@@ 100001@@ ]; inti,j,@@ step@@ =1; intn; cin>>n; for(i=1;i<=n;i++) cin>>a[i]; b[@@ step@@ ]=@@ a[1]; cout<<@@ a[1]; for(i=2;i<=n;i++) { for(j=1;j<=@@ step@@ ;j++) { if(a[i]==@@ b[j]@@ )break; } if(j==@@ step@@ +1) { step@@ ++; cout<<""<<a[i]; b[@@ step@@ ]=a[i]; } } return0; }  
c -1
h -1
0

intmain() { intn,k,@@ x,@@ i=1@@ ,j,@@ A@@ =0; scanf("%d%d",&n,&k); inta[1000]; for(i=1;i<=n;i++) { cin>>a[i]; } for(i=1;i<n;i++) { for(j=i+1;j<=n;j++) { if(a[i]+a[j]==k) { cout<<"yes@@ "<<endl; A@@ ++; break; } } if(A@@ ==1) break; } if(A@@ ==0) cout<<"no@@ "<<endl; return0; }  
c -1
h -1
intmain() { intk,m,n,i,j,@@ a[100][100],@@ sum=0; cin>>k; while(@@ cin>>m>>@@ n) { for(i=0;i<m;i++) for(j=0;j<n;j++) cin>>a[i][j]; if(m@@ >=@@ 3@@ &&n@@ >=@@ 3) { for(i=0;i<n;i++) sum=sum+@@ a[0]@@ [i]+@@ a[m-1]@@ [i]; for(i=1;i<m-1;i++) sum=sum+@@ a[i][0]+@@ a[i][n-1]; } else { for(i=0;i<m;i++) for(j=0;j<n;j++) sum=sum+@@ a[i][j]; } cout<<sum<<endl; sum=0; } return0; }  
c -1
h -1
0

intmain() { introw,col,@@ i,j,@@ k=1; inta[@@ 200][@@ 200@@ ]={0}; cin>>row>>col; for(i=0;i<=@@ row-1;i++) { for(j=0;j<=@@ col@@ -1;j++) cin>>a[i][j]; } cout<<@@ a[0][@@ 0]; while(k@@ <=@@ row+col-2@@ ) { for(i=0;i<=@@ row-1;i++) { if(k@@ -i@@ >=0@@ &&k@@ -i@@ <col) { cout<<endl; cout<<a[i]@@ [k-i@@ ]; } } k++; } cout<<endl; return0; }  
c -1
h -1
intmain() { intn; cin>>n; inta[n@@ ][n]; inti,j; int@@ x1@@ =0,@@ y1@@ =0,@@ x2@@ =0,@@ y2@@ =0; for(i=0;i<n;i++) { for(j=0;j<n;j++) { cin>>a[i][j]; if(a[i][j]==0) { x1=i; y1=j; } } } for(i=n-1;i>=0;i--) { for(j=n-1;j>=0;j--) { if(a[i][j]==0) { x2=i; y2=j; } } } cout<<(@@ x1@@ -@@ x2@@ -1)*(@@ y1@@ -@@ y2@@ -1); return0; }  
c -1
h -1
0

structbook{ intnum; charauthor@@ [26@@ ];@@ }@@ shu@@ [999]; intmain(intargc,char*argv[]) { intm,@@ b,@@ i@@ ,*p; charc; int@@ writer@@ [26]; char@@ max@@ (int*p@@ ); scanf("%d",&m); for(i=0;i<m;i++){ scanf("%d%s",&@@ shu[i].@@ num,@@ shu[i].author@@ );} for(c@@ ='@@ A',@@ writer@@ [c@@ -'A'@@ ]@@ =0;c@@ <=@@ 'Z'@@ ;c@@ ++){ writer@@ [c@@ -'A'@@ ]=0; for(i=0;i<m;i++){ for(b@@ =0;@@ shu[i].author@@ [b@@ ]!='\0'@@ ;@@ b++){ if(c==@@ shu[i].author@@ [b@@ ]){ writer@@ [c@@ -'A'@@ ]++;@@ }@@ }}} p=@@ writer@@ ; printf("%c\n%d\n",@@ max@@ (p@@ ),@@ writer@@ [max@@ (p@@ )@@ -'A'@@ ]); for(i=0;i<m;i++){ for(b@@ =0;@@ shu[i].author@@ [b@@ ]!='\0'@@ ;@@ b++){ if(max@@ (p@@ )==@@ shu[i].author@@ [b@@ ]){ printf("%d\n",@@ shu[i].@@ num@@ );@@ }}} return0; } char@@ max@@ (int*p@@ ){ inti; char@@ max; for(i=0,@@ max@@ ='A'@@ ;i<@@ 26@@ ;i++){ if(@@ *(p+i)@@ >*@@ (p@@ +@@ max@@ -'@@ A')@@ ){ max@@ =i@@ +'A'@@ ;}} return@@ max@@ ;}  
c -1
h -1
intmain(){ intk; scanf("%d",&k); while(k@@ --){ intm,n; int@@ data@@ [100][100]; scanf("%d%d",&@@ m,@@ &@@ n); inti,j; for(i=0;i<m;i++) for(j=0;j<n;j++) scanf("%d",&@@ data@@ [i][j]); intsum=0; for(i=0;i<m;i++) sum=sum+@@ data@@ [i]@@ [0]+@@ data@@ [i]@@ [n-1]; for(i=1;i<n-1;i++) sum=sum+@@ data@@ [0]@@ [i]+@@ data@@ [m@@ -1]@@ [i]; printf("%d\n",sum); } }  
c -1
h -1
0

intmain(){ doublen,@@ p; intm,i,j,@@ c=0,@@ q,@@ d=0,@@ f@@ =0,@@ k=0; char@@ u@@ [2][@@ 1000]; scanf("%lf",&n); for(i=0;i<2@@ ;i++){ scanf("%s",@@ u@@ [i]); } q@@ =strlen(@@ u@@ [1]); m=strlen(@@ u@@ [0]); if(m!=@@ q@@ ){ printf("error"); return0; } for(j=0;j<m;j++){ if(@@ u@@ [0]@@ [j]!='@@ A'&&@@ u@@ [0]@@ [j]!='@@ T'&&@@ u@@ [0]@@ [j]!='@@ C'&&@@ u@@ [0]@@ [j]!='@@ G'){ f@@ ++; } } for(j=0;j<@@ q@@ ;j++){ if(@@ u@@ [1]@@ [j]!='@@ A'&&@@ u@@ [1]@@ [j]!='@@ T'&&@@ u@@ [1]@@ [j]!='@@ C'&&@@ u@@ [1]@@ [j]!='@@ G'){ f@@ ++; } } if(f@@ !=0){ printf("error"); return0; } for(j=0;j<m;j++){ if(@@ u@@ [0]@@ [j]==@@ u@@ [1]@@ [j]){ c++; } } p=@@ (@@ 1.0*@@ c)@@ /@@ m; if(p@@ >=@@ n){ printf("yes"); } if(p@@ <@@ n){ printf("no"); } return0; }  
c -1
h -1
struct@@ ace { charid[10]; inta; intb; }@@ o@@ [3@@ ],@@ r; voidmain() { intn,i,@@ s[@@ 3@@ ],@@ m,@@ j,@@ v@@ ; char@@ z@@ [10]; scanf("%d",&n); scanf("%s%d%d",@@ o@@ [0].@@ id,&@@ o@@ [0].@@ a,&@@ o@@ [0].@@ b); scanf("%s%d%d",@@ o@@ [1].@@ id,&@@ o@@ [1].@@ a,&@@ o@@ [1].@@ b); scanf("%s%d%d",@@ o@@ [2].@@ id,&@@ o@@ [2].@@ a,&@@ o@@ [2].@@ b); s[@@ 0]=@@ o@@ [0].@@ a+@@ o@@ [0].@@ b; s@@ [1]=@@ o@@ [1].@@ a+@@ o@@ [1].@@ b; s[2@@ ]=@@ o@@ [2].@@ a+@@ o@@ [2].@@ b; for(i=0;i<2@@ ;i++) { for(j=i+1;j<@@ 3;j++) { if(s@@ [i]<@@ s@@ [j]) { strcpy(@@ z,@@ o@@ [i].id); strcpy(@@ o@@ [i].@@ id,@@ o@@ [j].@@ id); strcpy(@@ o@@ [j].@@ id,@@ z); v@@ =@@ s[i]; s[i]=@@ s[j]; s[j]=@@ v@@ ; } } } for(i=0;i<n-@@ 3;i++) { scanf("%s%d%d",@@ r@@ .@@ id,&@@ r@@ .@@ a,&@@ r@@ .@@ b); m=@@ r@@ .@@ a+@@ r@@ .@@ b; if(m@@ >@@ s@@ [0]) {@@ o@@ [2]=@@ o@@ [1]@@ ;@@ s[2@@ ]=@@ s[1]@@ ;@@ o@@ [1]=@@ o@@ [0]@@ ;s@@ [1]=@@ s[0]@@ ;@@ o@@ [0]=@@ r@@ ;@@ s[@@ 0]=@@ m@@ ;} elseif(m@@ <=@@ s[0]@@ &&m@@ >@@ s@@ [1@@ ]) {@@ o@@ [2]=@@ o@@ [1]@@ ;@@ s[2@@ ]=@@ s[1]@@ ;@@ o@@ [1]=@@ r@@ ;s@@ [1]=@@ m@@ ;} elseif(m@@ <=@@ s[1]@@ &&m@@ >@@ s[2@@ ]) {@@ o@@ [2]=@@ r@@ ;@@ s[2@@ ]=@@ m@@ ;} } printf("%s%d\n",@@ o@@ [0].@@ id,@@ s@@ [0]); printf("%s%d\n",@@ o@@ [1].@@ id,@@ s@@ [1]); printf("%s%d\n",@@ o@@ [2@@ ].id,@@ s[2@@ ]); }  
c -1
h -1
0

int@@ cmp@@ (constvoid*a,constvoid*@@ b) { return(@@ *(int*)@@ a@@ -*@@ (int*)@@ b); } intmain() { structstudent { intnum; intchinese; int@@ maths; int@@ amount@@ ; }; structstudentstu[100000]; inta[@@ 100000],@@ n,@@ l@@ ,j,@@ k; scanf("%d",&n); for(inti=0;i<n;i++) { scanf("%d%d%d",&stu[i].num,&stu[i].@@ chinese@@ ,&stu[i].@@ maths@@ ); a[i]=@@ stu[i].@@ chinese+@@ stu[i].@@ maths; } qsort@@ (a,n,@@ sizeof(@@ a[0]@@ ),@@ cmp@@ ); for(int@@ h=@@ n-1;@@ h@@ >=0;@@ h@@ --) { if(a[@@ n-1@@ ]==@@ stu[@@ h@@ ].@@ chinese+@@ stu[@@ h@@ ].@@ maths@@ ) {@@ l=@@ stu[@@ h@@ ].num@@ ;} } for(int@@ g=@@ n-1;@@ g@@ >=0;@@ g@@ --) { if(a[@@ n-2@@ ]==@@ stu[@@ g@@ ].@@ chinese+@@ stu[@@ g@@ ].@@ maths@@ &&(@@ g@@ +1)@@ !=@@ l) {@@ j=@@ stu[@@ g@@ ].num@@ ;} } for(int@@ f=@@ n-1;@@ f@@ >=0;@@ f@@ --) { if(a[@@ n-@@ 3@@ ]==@@ stu[@@ f@@ ].@@ chinese+@@ stu[@@ f@@ ].@@ maths@@ &&(@@ f@@ +1)@@ !=@@ j@@ &&(@@ f@@ +1)@@ !=@@ l) {@@ k=@@ stu[@@ f@@ ].num@@ ;} } printf("%d%d\n",@@ l,@@ a[@@ n-1]); printf("%d%d\n",@@ j,@@ a[@@ n-2@@ ]); printf("%d%d\n",@@ k,@@ a[@@ n-@@ 3@@ ]); }  
c -1
h -1
struct@@ f@@ { inta; intb; int@@ c;@@ }@@ st@@ [100000],@@ tp@@ ; intmain(){ intn,i,@@ ii@@ ,j,@@ d,@@ a,b,@@ c; char@@ cc@@ ; scanf("%d",&n); for(i=1;i<=n;i++){ scanf("%d%d%d",&@@ st[i].@@ a,&@@ st[i].@@ b@@ ,&@@ st[i].@@ c); st[i].@@ b@@ +=@@ st[i].@@ c; } for(i=1;i<=@@ 3;i++){ for(j=i+1;j<=@@ n;j++){ if(@@ st@@ [j].@@ b@@ >@@ st[i].@@ b){ tp@@ =@@ st@@ [i]; st@@ [i]=@@ st@@ [j]; st@@ [j]=@@ tp@@ ;@@ }}} for(i=1;i<=@@ 3;i++) printf("%d%d\n",@@ st[i].@@ a,@@ st[i].@@ b); }  
c -1
h -1
1


intmain(intargc,char*argv[]) { intyear,month,day,@@ x; scanf("%d%d%d",&year,&month,&day); switch(month) { case1:@@ x=@@ day;break; case2:@@ x=31+@@ day;break; case3:@@ x=31+28@@ +day;break; case4:@@ x=31+28@@ +31+@@ day;break; case5:@@ x=31+28@@ +31+30@@ +day;break; case6:@@ x=31+28@@ +31+30+31+@@ day;break; case7:@@ x=31+28@@ +31+30+31+30@@ +day;break; case8:@@ x=31+28@@ +31+30+31+30+31+@@ day;break; case9:@@ x=31+28@@ +31+30+31+30+31+31+@@ day;break; case10:@@ x=31+28@@ +31+30+31+30+31+31+30@@ +day;break; case11:@@ x=31+28@@ +31+30+31+30+31+31+30+31+@@ day;break; case12:@@ x=31+28@@ +31+30+31+30+31+31+30+31+30@@ +day;break; } if(year%@@ 4==0) if(year%@@ 100==0) if(year%@@ 400==0) if(month@@ >=@@ 3) { printf("%d",@@ x@@ +1); } else { printf("%d",x); } else printf("%d",x); else if(month@@ >=@@ 3) { printf("%d",@@ x@@ +1); } else { printf("%d",x); } else printf("%d",x); return0; }  
c -1
h -1
intmain() { intn,a,@@ s@@ =1,@@ m,@@ l@@ ;@@ long@@ i=0; scanf("%d",&n); while(1) { i@@ +=1; scanf("%d",&a); if(a==0) break; } m=i; while(1) { i@@ +=1; scanf("%d",&a); if(a==0) s@@ +=1; if(a@@ !=0) break; } l@@ =i-1; while(1) { i@@ +=1; scanf("%d",&a); if(a==0) s@@ +=1; if(i>=@@ n*@@ n) break; } printf("%d\n",@@ ((@@ s@@ -(@@ l@@ -m@@ +1)@@ *2@@ )@@ /2@@ )*(@@ l@@ -@@ m-1@@ )); return0; }  
c -1
h -1
0

intmain() { chara[@@ 501]; charb[@@ 501]; int@@ x,y; inti,@@ s=0,@@ q=0; doublen,@@ t; scanf("%lf",&n); scanf("%s",&@@ a); scanf("%s",&@@ b); x@@ =strlen(a); y@@ =strlen(b); if(x@@ !=@@ y){ printf("error"); } else{ for(i=0;i<x;i++){ if((a[i]!='@@ A'&&a[i]!='T'&&a[i]!='G'&&a[i]!='@@ C')||(@@ b[i]!='A'&&b[i]!='T'&&b[i]!='C'&&b[i]!='@@ G')){ printf("error"); return0; } if(a[i]==b[i]) s++; } t=@@ n*@@ x; if(s@@ >@@ t@@ ){@@ printf("yes"); } elseprintf("no"); } return0; }  
c -1
h -1
intmain() { chara[100@@ ]; char@@ b[100@@ ]; char@@ c[100]; inti,j,@@ m,@@ k; intn=0; scanf("%s",a); scanf("%s",b); scanf("%s",c); m@@ =strlen(b); for(i=0;a[i]@@ !='\0';i++){ if(a[i]==@@ b[0]@@ ){ n=0; for(j=0;@@ b[j]@@ !='\0';j++){ if(a@@ [i+j]==@@ b[j]@@ )@@ n++; } if(m==@@ n@@ )break; } } if(m==@@ n){ for(k=0;k<@@ i@@ ;k++){ printf("%c",@@ a[k]); } printf("%s",@@ c); for(k=i@@ +m@@ ;@@ a[k]@@ !='\0'@@ ;k++){ printf("%c",@@ a[k]); } } if(n@@ !=@@ m) printf("%s",a); return0; }  
c -1
h -1
0

intmain(){ inti,@@ l,@@ n,@@ L@@ ,@@ t; double@@ q,@@ p; chara[501],b[501]; n=0; scanf("%lf",&@@ p); scanf("%s",a); scanf("%s",b); l@@ =strlen(a); L@@ =strlen(b); if(l@@ !=@@ L@@ ){ printf("error\n"); } else{ t=1; for(i=0;i<l;i++){ if((a[i]!='@@ A'&&a[i]!='T'&&a[i]!='C'&&a[i]!='G')||(b[i]!='A'&&b[i]!='T'&&b[i]!='C'&&b[i]!='@@ G')){ t=0; break; } else@@ if(a[i]==b[i]){ n++; } } if(t@@ ==1){ q@@ =1.0*@@ n/@@ l; if(q@@ >@@ p@@ ){@@ printf("yes@@ \n@@ ");} else{@@ printf("no@@ \n@@ ");} } if(t@@ ==0){@@ printf("error@@ \n@@ ");} } return0; }  
c -1
h -1
structpatient { charid[10]; intage; structpatient*next; }; structpatient*@@ sort@@ (structpatient@@ *head,@@ char@@ d[@@ 10@@ ],int@@ a) { structpatient*@@ pp@@ ,*@@ p,*@@ s; p=head; pp@@ =p; p=p->next; s@@ =(struct@@ patient@@ *)malloc(LEN); strcpy(@@ s@@ ->id,@@ d); s@@ ->age=@@ a; while(p@@ !=NULL@@ &&@@ p->age@@ >=@@ a) { pp@@ =p; p=p->next; } s@@ ->next=p; pp@@ ->next=@@ s; } structpatient*@@ creat@@ (structpatient@@ *@@ hhead@@ ,@@ char@@ d[@@ 10@@ ],int@@ a) { structpatient@@ *p,*@@ pp@@ ,*@@ s; p=@@ hhead@@ ; pp@@ =p; p=p->next; while(p!=NULL) { pp@@ =p; p=p->next; } s@@ =(struct@@ patient@@ *)malloc(LEN); s@@ ->age=@@ a; strcpy(@@ s@@ ->id,@@ d); s@@ ->next=p; pp@@ ->next=@@ s; } voidmain() { structpatient@@ *head,*@@ hhead@@ ,*@@ p1,*p2; intn,a,@@ i; char@@ d@@ [10]; scanf("%d",&n); head=(struct@@ patient@@ *)malloc(LEN); head@@ ->next=NULL; hhead@@ =(struct@@ patient@@ *)malloc(LEN); hhead@@ ->next=NULL; for(i=0;i<n;i++) { scanf("%s@@ %d\n",@@ d@@ ,&@@ a); if(a@@ >=60) sort(@@ head,@@ d,@@ a); else@@ creat@@ (@@ hhead@@ ,@@ d,@@ a); } p1=@@ head->next; p2=@@ hhead@@ ->next; while(p1!=NULL) { printf("%s\n",@@ p1->@@ id); p1=p1->next; } while(@@ p2@@ !=NULL) { printf("%s\n",@@ p2->@@ id); p2=p2->next; } }  
c -1
h -1
0

intmain() { inty,m,d,@@ s; scanf("%d%d%d",&y,&m,&d); if(m==1) { s=@@ d; } elseif(m==@@ 2) { s=@@ d+@@ 31; } elseif(m==@@ 3) { s=@@ d+@@ 59@@ ; } elseif(m==@@ 4) { s=@@ d+@@ 90@@ ; } elseif(m==@@ 5) { s=@@ d+@@ 120@@ ; } elseif(m==@@ 6) { s=@@ d+@@ 151@@ ; } elseif(m==@@ 7) { s=@@ d+@@ 181@@ ; } elseif(m==@@ 8) { s=@@ d+@@ 212@@ ; } elseif(m==@@ 9) { s=@@ d+@@ 243@@ ; } elseif(m==@@ 10) { s=@@ d+@@ 273@@ ; } elseif(m==@@ 11) { s=@@ d+@@ 304@@ ; } else { s=@@ d+@@ 334@@ ; } if(!@@ ((@@ y%@@ 400==0)||(@@ y%100!=0@@ &&@@ y%@@ 4@@ ==0)@@ )) { printf("%d",s); } else { if(m@@ <@@ 3) { printf("%d",s); } else { printf("%d",@@ s@@ +1); } } return0; }  
c -1
h -1
static@@ intdays@@ [13]={0,31,28,31,30,31,30,31,31,30,31,30,31}; static@@ int@@ isleapyear@@ (intyear@@ ){ return(@@ year%4==0&&year%100!=0@@ )||@@ year%@@ 400==0@@ ; } intmain(){ intyear,month,day; intj; for(j=0;j<@@ 5@@ ;j++){ intn=0; inti; scanf("%d%d%d",&@@ year,@@ &@@ month,@@ &@@ day); if(@@ isleapyear@@ (year@@ )&&@@ month==@@ 2@@ &&(@@ day@@ <@@ 1@@ ||@@ day@@ >@@ 29@@ )){ printf("@@ Illegal@@ input@@ .@@ \n"); return-1; } if(@@ isleapyear@@ (year@@ )&&@@ month@@ !=@@ 2@@ &&(@@ day@@ <@@ 1@@ ||@@ day@@ >@@ days@@ [@@ month@@ ])@@ ){ printf("@@ Illegal@@ input@@ .@@ \n"); return-1; } if(!@@ isleapyear@@ (year@@ )&&(@@ day@@ <@@ 1@@ ||@@ day@@ >@@ days@@ [@@ month@@ ])@@ ){ printf("@@ Illegal@@ input@@ .@@ \n"); return-1; } for(i=1;i<@@ month@@ ;i++){ n+=@@ days@@ [i]; } n+=@@ day; if(month@@ >2@@ &&@@ isleapyear@@ (year@@ )) n++; printf("%d\n",n); } return0; }  
c -1
h -1
1


structpatient{ charid[10]; intage@@ ;@@ }@@ pat@@ [100]; int@@ over60@@ [100]; int@@ below60@@ [100]; intm,@@ k; intmain(intargc,char*argv[]) { void@@ choose@@ (structpatient@@ *p@@ ,int@@ n); intn,i,j; scanf("%d",&n); for(i=0;i<n;i++){ scanf("%s%d",@@ pat[i].@@ id,&@@ pat@@ [i].age@@ );} choose@@ (@@ pat@@ ,n); for(j=1;j<=@@ m@@ ;j++){ if(@@ over60@@ [m@@ -j@@ ]!=@@ over60@@ [m@@ -j@@ -1]@@ ){ for(i=0;i<n;i++){ if(pat@@ [i].age@@ ==@@ over60@@ [m@@ -j@@ ]){ printf("%s\n",@@ pat@@ [i].id); }@@ }}} for(i=0;i<n;i++){ if(pat@@ [i].age@@ <60){ printf("%s\n",@@ pat[i].@@ id@@ );}} return0; } void@@ choose@@ (structpatient@@ *p@@ ,int@@ n){ voidpaixu@@ (int*@@ a,int@@ n); inti; for(i=0,@@ m=0,@@ k@@ =0;i<@@ n;i++){ if((@@ p@@ +i)@@ ->age@@ >=60){ over60@@ [m]=@@ (p+i)->@@ age; m@@ ++;@@ }} paixu(@@ over60@@ ,@@ m@@ );} voidpaixu@@ (int*@@ a,int@@ n){ intj,@@ i,@@ e; for(j=1;j<@@ n;j++){ for(i=0;i<n@@ -j@@ ;i++){ if(@@ *(a+i)@@ >*@@ (a@@ +i@@ +1)@@ ){ e@@ =*@@ (a@@ +i); *(a+i)@@ =*@@ (a@@ +i@@ +1); *(a@@ +i@@ +1)@@ =@@ e@@ ;@@ }@@ }}}  
c -1
h -1
intmain() { intj,@@ total=0; intyear,month,day; scanf("%d%d%d",&year,&month,&day); for(j=1;j<@@ month@@ ;j++) { if(j@@ ==1||@@ j==@@ 3@@ ||j==@@ 5@@ ||j==@@ 7@@ ||j==@@ 8@@ ||j==@@ 10@@ ||j==@@ 12) total=total@@ +31; if(j==@@ 4@@ ||j==@@ 6@@ ||j==@@ 9@@ ||j==@@ 11) total=total+@@ 30; if(j==@@ 2) { if((year%4==0&&year%100!=0@@ )||@@ year%400==0) total=total+@@ 29; else total=total+@@ 28; } } total=total@@ +day; printf("%d\n",@@ total); return0; }  
c -1
h -1
0

int@@ abc@@ (constvoid*@@ elem1@@ ,@@ constvoid*@@ elem2@@ ){ return@@ *(int*)@@ elem2@@ -*@@ (int*)@@ elem1@@ ; } intmain(){ intn,@@ a[2@@ ][@@ 25@@ ]={0},@@ i,j,@@ x,y; scanf("%d",&n); for(i=n-1;i>=0;i--){ scanf("%d",&@@ a[0]@@ [i]);} a[1@@ ][0]@@ =1; for(i=1;i<n;i++){ a[1]@@ [i]=1; for(j=0;j<i;j++){ if(a[0]@@ [i]>=@@ a[0]@@ [j]&&@@ a[1]@@ [i]<=@@ a[1]@@ [j]@@ )@@ a[1]@@ [i]=@@ a[1]@@ [j]+1; } } qsort(@@ a[1@@ ],@@ n,@@ 4@@ ,@@ abc@@ ); printf("%d",@@ a[1@@ ][0]@@ ); }  
c -1
h -1
structstudent { long@@ num; int@@ scorec@@ ; int@@ scorem@@ ; structstudent*next; }; structstudent*creat@@ (@@ long@@ n) { structstudent*head,*p1,*p2; p1=(structstudent*)malloc(LEN); scanf("%ld%d%d",&@@ p1->num,&p1->@@ scorec@@ ,&p1->@@ scorem@@ ); long@@ s=@@ n-1; p1->next=NULL; head=p1; p2=p1; do { p1=(structstudent*)malloc(LEN); scanf("%ld%d%d",&@@ p1->num,&p1->@@ scorec@@ ,&p1->@@ scorem@@ ); p1->next=NULL; p2->next=p1; p2=p1; s=s@@ -1; }while(@@ s); return(head); } voidmain() { structstudent*head,*@@ p,*@@ q,@@ stu1@@ ,@@ stu2@@ ,@@ stu3@@ ; long@@ n,@@ k1@@ =-1,@@ k2@@ =-1,@@ k3@@ =-1,@@ i,j; int@@ l; scanf("%ld",&n); head=creat(n); for(p=head@@ ,i@@ =0;p@@ !=NULL;@@ p=p@@ ->next@@ ,i++) { l=0; for(q=@@ head@@ ,j@@ =0;q@@ !=NULL;@@ q=q@@ ->next@@ ,j@@ ++) if((@@ q->@@ scorec@@ +@@ q->@@ scorem@@ )>@@ (p->@@ scorec@@ +p->@@ scorem@@ )||(@@ ((@@ q->@@ scorec@@ +@@ q->@@ scorem@@ )==@@ (p->@@ scorec@@ +p->@@ scorem@@ ))@@ &&j@@ <i@@ )) { l=l@@ +1; if(l@@ >@@ 3@@ )break; } if(l@@ ==0) { k1@@ =i; stu1@@ .@@ num=@@ p->@@ num;@@ stu1@@ .@@ scorec@@ =p->@@ scorec@@ ;@@ stu1@@ .@@ scorem@@ =p->@@ scorem@@ ; } if(l@@ ==1) { k2@@ =i; stu2@@ .@@ num=@@ p->@@ num;@@ stu2@@ .@@ scorec@@ =p->@@ scorec@@ ;@@ stu2@@ .@@ scorem@@ =p->@@ scorem@@ ; } if(l@@ ==@@ 2) { k3@@ =i; stu3@@ .@@ num=@@ p->@@ num;@@ stu3@@ .@@ scorec@@ =p->@@ scorec@@ ;@@ stu3@@ .@@ scorem@@ =p->@@ scorem@@ ; } if(@@ k1@@ !=@@ -1@@ &&@@ k2@@ !=@@ -1@@ &&@@ k3@@ !=@@ -1)break; } printf("%ld%d\n",@@ stu1@@ .num,@@ stu1@@ .@@ scorec@@ +@@ stu1@@ .@@ scorem@@ ); printf("%ld%d\n",@@ stu2@@ .num,@@ stu2@@ .@@ scorec@@ +@@ stu2@@ .@@ scorem@@ ); printf("%ld@@ %d",@@ stu3@@ .num,@@ stu3@@ .@@ scorec@@ +@@ stu3@@ .@@ scorem@@ ); }  
c -1
h -1
0

void@@ scan_@@ (intm,@@ int*@@ a,@@ intn,@@ int*@@ b); void@@ sort_@@ (intm,@@ int*@@ a,@@ intn,@@ int*@@ b); void@@ print_@@ (intm,@@ int*@@ a,@@ intn,@@ int*@@ b); intmain() { intm,@@ n@@ ,*@@ a,*@@ b; scanf("%d%d",&m,&n); a=@@ (int*)malloc(@@ m@@ *sizeof(int)); b=@@ (int*)malloc(n*sizeof(int)); scan_@@ (m,@@ a,@@ n,@@ b); sort_@@ (m,@@ a,@@ n,@@ b); print_@@ (m,@@ a,@@ n,@@ b); return0; } void@@ scan_@@ (intm,@@ int*@@ a,@@ intn,@@ int*@@ b) { int@@ i,j@@ ,*p; p=a; for(i=0;i<m;i++) scanf("%d",p@@ ++@@ ); p=@@ b; for(j=0;j<n;j++) scanf("%d",p@@ ++@@ ); } void@@ sort_@@ (intm,@@ int*@@ a,@@ intn,@@ int*@@ b) { inti,j,@@ t@@ ,*@@ q; for(i=0;i<m-1;i++) { q=@@ a; for(j=0;j<@@ m-1@@ -i;j++) { if(*@@ q@@ >*@@ (@@ q@@ +1)@@ ){@@ t@@ =*@@ q@@ ;*@@ q@@ =*(@@ q@@ +1@@ );@@ *(q@@ +1)@@ =@@ t;} q++; } } for(i=0;i<n-1;i++) { q=@@ b; for(j=0;j<n-1-i;j++) { if(*@@ q@@ >*@@ (@@ q@@ +1)@@ ){@@ t@@ =*@@ q@@ ;*@@ q@@ =*(@@ q@@ +1@@ );@@ *(q@@ +1)@@ =@@ t;} q++; } } } void@@ print_@@ (intm,@@ int*@@ a,@@ intn,@@ int*@@ b) { int@@ i@@ ,*p; printf("%d",@@ *@@ a); p=@@ a@@ +1; for(i=1;i<@@ m@@ ;i++,@@ p++) printf("%d",@@ *p@@ ); p=@@ b; for(i=0;i<n@@ ;i++,@@ p++) printf("%d",@@ *p@@ ); printf("\n"); }  
c -1
h -1
voidinput@@ (intarray[],int@@ n) {inti; for(i=0;i<=@@ n-2;i++) { scanf("%d",&array@@ [i]);} scanf("%d\n",&@@ array[@@ n-1@@ ]@@ );} voidorder@@ (intarray[],int@@ n) {@@ inti,@@ o@@ ,@@ e; for(i=0;i<=@@ n-2;i++) {@@ for(@@ o@@ =i+1@@ ;@@ o@@ <=@@ n-1;@@ o@@ ++) {if(@@ array@@ [i]>@@ array[@@ o@@ ]){@@ e=@@ array@@ [i];@@ array@@ [i]=@@ array[@@ o@@ ];@@ array[@@ o@@ ]=@@ e@@ ;} }}} voidoutput@@ (intarray[],int@@ n) {inti; for(i=0;i<=@@ n-2;i++) {printf("%d",@@ array@@ [i]);} printf("%d",@@ array[@@ n-1@@ ]@@ );} voidmain() {@@ inta[@@ 20@@ ],b[@@ 20],@@ q,@@ w; scanf("%d%d\n",&@@ q@@ ,&@@ w); input@@ (a,@@ q); input@@ (b,@@ w); order@@ (a,@@ q@@ );@@ order@@ (b,@@ w); output@@ (a,@@ q@@ );@@ printf("@@ ");@@ output@@ (b,@@ w@@ );}  
c -1
h -1
1


intmain(){ chars[@@ 257@@ ],@@ a[@@ 257@@ ],b[@@ 257@@ ]; intn,m; inti,j,@@ k=0; gets(s); scanf("%s%s",a,b); n@@ =strlen(s); m=strlen(a); for(i=0;i<n;i++) { if(s[i]==@@ a[0]@@ &&@@ s@@ [i+@@ m-1@@ ]==@@ a[m-1]@@ ){ for(j=i;j<i+@@ m;j++) { if(s@@ [j]==@@ a@@ [j-i@@ ]) { k++; } } if(k==@@ m) { printf("%s",@@ b); i@@ +=@@ m-1@@ ; }else { printf("%c",s[i]); } }else { printf("%c",s[i]); } } printf("\n"); return0; }  
c -1
h -1
intmain() { inty,m,d,@@ x=0,@@ i,@@ a[@@ 12]={31,@@ 29@@ ,31,30,31,30,31,31,30,31,30,31@@ },@@ b[@@ 12]={31,28,31,30,31,30,31,31,30,31,30,31}; cin>>y>>m>>d; if(m==1) x=@@ d; elseif(m==@@ 2) x=31+@@ d; elseif(@@ y%100!=0@@ &&@@ y%@@ 4@@ ==0||@@ y%400==0) { for(i=0;i<m-1;i++) x@@ +=@@ a[i]; x@@ +=@@ d; } else { for(i=0;i<m-1;i++) x@@ +=@@ b[i]; x@@ +=@@ d; } cout<<@@ x@@ <<endl; return0; }  
c -1
h -1
0

intmain() { double@@ x,y; chara[501],b[501]; inti,@@ t=0,@@ m=0,@@ n=0,@@ mark@@ =1; scanf("%lf",&x); getchar(); gets(a); gets(b); for(i=0;a[i]@@ ;i++) { m=m+1; if(a[i]!='A'&&a[i]!='T'&&a[i]!='C'&&a[i]!='@@ G') mark@@ =0; } for(i=0;@@ b[i]@@ ;i++) { n=n+1; if(@@ b[i]!='A'&&b[i]!='T'&&b[i]!='C'&&b[i]!='@@ G') mark@@ =0; } if(m!=@@ n@@ ||@@ mark@@ ==0) printf("error"); else { for(i=0;i<m;i++) { if(a[i]==b[i]) t=t+1; } y=@@ t@@ /@@ (double)@@ m; if(y@@ >=@@ x) printf("yes"); else printf("no"); } return0; }  
c -1
h -1
intmain(intargc,char*argv[]) { int@@ points@@ [100][100]; intn,@@ row,col; intsum=0,@@ i=0; int@@ SUM@@ =0,@@ j=0; scanf("%d",&n); for(row=0;row<n;@@ row++) { for(col=0;col<n;col@@ ++) { scanf("%d",&@@ points@@ [@@ row][col@@ ]); } } for(row=0;row<n;@@ row++) { sum=0; for(col=0;col<n;col@@ ++) { sum+=@@ points@@ [@@ row][col]; } if(sum@@ <@@ n*@@ 255) i++; } for(col=0;col<n;col@@ ++) { SUM@@ =0; for(row=0;row<n;@@ row++) { SUM@@ +=@@ points@@ [@@ row][col]; } if(@@ SUM@@ <@@ n*@@ 255) j++; } printf("%d",@@ (i@@ -2)*(@@ j@@ -2@@ )); return0; }  
c -1
h -1
0

intmain() { inti=0,j=0,@@ n,m,@@ k; inta[1000]; cin>>n>>k; for(m=0;m@@ <n;m++) cin>>@@ a[m@@ ]; for(i=0;i<n;i++) { for(j=i;j<@@ n;j++) { if(a[i]+a[j]==k) { cout<<"yes"; return0; } } } cout<<"no"; return0; }  
c -1
h -1
intmain(){ int@@ tumor@@ [100][100]; intn,i,j,@@ a,b,@@ sum; a@@ =0;@@ b=0; cin>>n; for(i=0;i<n;i++){ for(j=0;j<n;j++){ cin>>@@ tumor@@ [i][j]; } } for(i=0;i<n;i++){ for(j=0;j<n;j++){ if(@@ tumor@@ [i][j]==0) a++; } if(a@@ !=0) break; elseif(a@@ ==0) continue; } for(j=0;j<n;j++){ for(i=0;i<n;i++){ if(@@ tumor@@ [i][j]==0) b++; } if(b@@ !=0) break; elsecontinue; } sum=(@@ a@@ -2)*(@@ b@@ -2); cout<<sum<<endl; return0; }  
c -1
h -1
0

intmain() { intn,m,@@ b[100@@ ],@@ c[100],@@ i; scanf("%d%d",&n,&m); void@@ xu@@ (inta[],int@@ l); for(i=0;i<n;i++) scanf("%d",&b[i]); for(i=0;i<m;i++) scanf("%d",&@@ c[i]); xu@@ (b,n); xu@@ (c,@@ m); for(i=0;i<n;i++) printf("%d",b[i]); for(i=0;i<m-1;i++) printf("%d",c[i]); printf("%d\n",@@ c[@@ m-1@@ ]); } void@@ xu@@ (inta[],int@@ l) { int@@ j=0,@@ k,@@ t; while(j<@@ l) { k@@ =j+1; while(k@@ <@@ l) { if(@@ *(a@@ +j)@@ >*@@ (@@ a+@@ k@@ )){@@ t@@ =*@@ (a@@ +j@@ );@@ *(a@@ +j)@@ =*(@@ a+@@ k@@ );@@ *(a@@ +k)@@ =@@ t;} k++; } j++; } }  
c -1
h -1
structpatient { charid[20]; intage; }; intmain() { inti,j,@@ tem@@ ,@@ n,@@ len; charid[20]; structpatient@@ a[@@ 200]; scanf("%d",&n); for(i=0;i<n;i++) scanf("%s%d",@@ a[i].@@ id,&@@ a[i].@@ age); for(i=0;i<n;i++) { for(j=n-1@@ ;j>=i@@ ;j--) if(a@@ [j+1@@ ].age@@ >=60&&@@ a[j+1@@ ].age@@ >@@ a[j].@@ age@@ ) { tem@@ =@@ a[j].@@ age; a[j].@@ age@@ =@@ a[j+1@@ ].@@ age; a[j+1@@ ].age=@@ tem; len=strlen(@@ a[j].@@ id); strcpy(@@ id,@@ a[j].@@ id); id@@ [@@ len@@ ]='\0'; strcpy(@@ a[j].@@ id,@@ a[j+1@@ ].id); strcpy(@@ a[j+1@@ ].id,@@ id); } if(n@@ !=@@ 91@@ ||@@ i@@ !=0) printf("%s\n",@@ a[i].@@ id); } if(n==@@ 88@@ ) printf("@@ 51412@@ \n"); if(n==@@ 91@@ ) printf("@@ 02510406@@ \n"); return0; }  
c -1
h -1
0

voidmain() { intyear,month,day; intn; int@@ a=0; scanf("%d%d%d",&year,&month,&day); if((year%4==0&&year%100!=0@@ )||@@ year%400==0) a=1; if(month==1) n=@@ day; if(month==2) n=31+@@ day; if(month==3) n=@@ 59@@ +day; if(month==@@ 4) n=@@ 90@@ +day; if(month==@@ 5) n=@@ 120@@ +day; if(month==@@ 6) n=@@ 151@@ +day; if(month==@@ 7) n=@@ 181@@ +day; if(month==8) n=@@ 212@@ +day; if(month==@@ 9) n=@@ 243@@ +day; if(month==@@ 10) n=@@ 273@@ +day; if(month==@@ 11) n=@@ 304@@ +day; if(month==@@ 12) n=@@ 334@@ +@@ 12@@ ; if(month@@ >2@@ &&@@ a@@ ==1) n++; printf("%d",n); }  
c -1
h -1
intmain() { intnum[@@ 16]; inti=1; intn; intj,@@ k,@@ ans; i=1; do { cin>>n; if(n@@ !=-1) { if(n@@ ==0) { ans=0; for(j=1;j<=@@ i-1;j++) for(k=1;k<=@@ i-1;k++) if(num@@ [j]==2*@@ num@@ [k]) ans@@ +=1; cout<<ans@@ <<endl; i=1; } else { num[i]=@@ n; i@@ +=1; } } }while(@@ n@@ !=-1); return0; }  
c -1
h -1
0

voidmain() { intn,i,j,@@ l,@@ a[100@@ ],b[@@ 26],@@ s,@@ max; char@@ c@@ [100][@@ 50@@ ],@@ m; for(i=0;i<=25;i++) b[i]=0; scanf("%d",&n); for(i=0;i<=n-1;i++) { scanf("%d%s",&a[i],@@ c[i]); l=strlen(@@ c[i]); for(j=0;j<=@@ l@@ -1;j++) {@@ s=@@ (int)@@ c@@ [i][j]@@ -65@@ ; b[@@ s@@ ]=@@ b[@@ s@@ ]@@ +1;@@ }} max=@@ b[0]; j=0; for(i=0;i<=25;i++) {@@ if(b[i]>max) {@@ max=b[i]; j@@ =i;@@ }} m@@ =j@@ +65; printf("%c\n",@@ m); printf("%d\n",max); for(i=0;i<=n-1;i++) {@@ l=strlen(@@ c[i]); for(j=0;j<=@@ l@@ -1;j++) if(c@@ [i][j]==@@ m) printf("%d\n",a[i]); } }  
c -1
h -1
intmain(){ doublea,@@ g; intb,@@ c,@@ i,j,@@ d,@@ e,@@ k,@@ f=0; scanf("%lf",&a); char@@ zfc1@@ [500],@@ zfc2@@ [500]; scanf("%s%s",@@ zfc1@@ ,@@ zfc2@@ ); b=strlen(@@ zfc1@@ ); c=strlen(@@ zfc2@@ ); for(i=0;i<b;i++){ if(@@ zfc1@@ [i]=='A'||@@ zfc1@@ [i]=='T'||@@ zfc1@@ [i]=='G'||@@ zfc1@@ [i]=='@@ C'){ d@@ =0;} else{@@ d@@ =1;@@ break;}} for(j=0;j<@@ c@@ ;j++){ if(@@ zfc2@@ [j]=='@@ A'||@@ zfc2@@ [j]=='@@ T'||@@ zfc2@@ [j]=='@@ G'||@@ zfc2@@ [j]=='@@ C'){ e@@ =0;} else{@@ e@@ =1;@@ break;}} if(b@@ !=@@ c@@ ||@@ e@@ ==1||@@ d@@ ==1){@@ printf("error@@ \n@@ ");} else{@@ for(k=0;k<@@ b@@ ;k++){ if(@@ zfc1@@ [k]==@@ zfc2@@ [k]@@ ){@@ f@@ ++;@@ }} g=@@ f@@ *1.0/@@ b; if(g@@ >@@ a@@ ){@@ printf("yes@@ \n@@ ");} else{@@ printf("no@@ \n@@ ");} } return0; }  
c -1
h -1
0

intmain() { intn,i,j,@@ old@@ [100]={0},@@ t@@ [100]={0}; char@@ num@@ [100][@@ 10@@ ]={0},@@ temp@@ [100][@@ 10@@ ]={0}; int@@ x,@@ z=0; char@@ y[@@ 10@@ ]={0}; scanf("%d",&n); for(i=0;i<n;i++) { scanf("%s%d",@@ num[i]@@ ,&@@ old@@ [i]); } for(i=0;i<n;i++) { if(old@@ [i]@@ >=60) { strcpy(@@ temp@@ [@@ z@@ ],@@ num[i]); t[@@ z@@ ]=@@ old@@ [i]; z@@ ++; } } for(i=0;i<@@ z@@ ;i++) { for(j=@@ z@@ -1@@ ;j>i;j--) { if(t@@ [j]>@@ t@@ [j-1]) { x=@@ t@@ [j]; t@@ [j]=@@ t@@ [j-1]; t@@ [j-1]=@@ x; strcpy(@@ y,@@ temp@@ [j-1]); strcpy(@@ temp@@ [j-1@@ ],@@ temp@@ [j]); strcpy(@@ temp@@ [j],@@ y); } } } for(i=0;i<@@ z@@ ;i++) printf("%s\n",@@ temp@@ [i]); for(i=0;i<n;i++) { if(old@@ [i]@@ <60) printf("%s\n",@@ num[i]); } return0; }  
c -1
h -1
main() { intn; scanf("%d",&n); int*p; p=@@ (int*)malloc(n*sizeof(int)); inti,j; for(i=0;i<n;i++) scanf("%d",&@@ p[i]); printf("%d",@@ p@@ [0]); for(i=1;i<n;i++) { for(j=0;j<i;j++) { if(p@@ [i]==@@ p@@ [j]) break; } if(j==i) printf("%d",@@ p[i]); } getchar(); getchar(); getchar(); getchar(); getchar(); getchar(); }  
c -1
h -1
0

intnum; int@@ wrh@@ (intn,int@@ r@@ ,int@@ b[@@ 200@@ ],int@@ y,int@@ a) { inti; for(i=y@@ ;i<=@@ a@@ /2@@ ;i++) { if(r@@ %i==0) { b[@@ n@@ ]=i; int@@ now@@ =1@@ ,j; for(j=1;j<=n;j++) now@@ =@@ now@@ *@@ b[j]; if(@@ now@@ ==@@ a) { num++; break; } if(@@ now@@ >@@ a)@@ break; else wrh@@ (n@@ +1,@@ r@@ /i,@@ b,@@ i,@@ a); } } return0; } intmain() { int@@ s,@@ a,@@ b[@@ 200]; cin>>@@ s; while(@@ s@@ >0) { num=0; cin>>a; wrh@@ (@@ 1,@@ a,b,@@ 2,@@ a); cout<<num@@ +1<<endl; s@@ --; } return0; }  
c -1
h -1
intmain() { intk,m,n,i,j,@@ w,@@ c; int@@ **@@ p; scanf("%d",&k); for(@@ w@@ =0;@@ w@@ <k;@@ w@@ ++) { c=0; scanf("%d%d",&m,&n); p=@@ (int@@ **@@ )@@ malloc(@@ m@@ *sizeof(int@@ *@@ )); for(i=0;i<m;i++) p[i]=@@ (int*)malloc(n*sizeof(int)); for(i=0;i<m;i++) for(j=0;j<n;j++) scanf("%d",@@ p[i]@@ +j); if(m==1) for(i=0;i<n;i++) c=@@ c+@@ p@@ [0]@@ [i]; else { if(n==1) for(i=0;i<m;i++) c=@@ c+@@ p[i]@@ [0]; else { for(i=0;i<n;i++) c=@@ c+@@ p@@ [0]@@ [i]+@@ p@@ [m@@ -1]@@ [i]; for(i=1;i<m-1;i++) c=@@ c+@@ p[i]@@ [0]+@@ p[i]@@ [n-1]; } } printf("%d\n",@@ c); for(i=0;i<m;i++) free@@ (p@@ [i]); free@@ (p); } return0; }  
c -1
h -1
0

main(){ int@@ input@@ [@@ 20000],@@ output@@ [@@ 20000],@@ n,i,j,@@ outLen@@ =1; scanf("%d",&n); for(i=0;i<n;i++){ scanf("%d",&@@ input@@ [i]); output@@ [@@ outLen@@ ]=@@ input@@ [i]; for(j=1;j<@@ outLen@@ ;j++){ if(@@ input@@ [i]==@@ output@@ [j]@@ )@@ outLen@@ =@@ outLen@@ -1; } outLen@@ =@@ outLen@@ +1; } for(i=1;i<@@ outLen@@ ;i++){ printf("%d",@@ output@@ [i]); if(i!=@@ outLen@@ -1)@@ printf(""); } }  
c -1
h -1
int@@ shuzu@@ [@@ 20000]; intmain(){ intn,@@ x; scanf("%d",&n); for(intt@@ =0;t@@ <n;@@ t++){ scanf("%d",&@@ shuzu@@ [t@@ ]); } for(intj=0;j<n;j++){ for(inti@@ =j+1@@ ;i<@@ n;i++){ if(shuzu@@ [i]==@@ shuzu@@ [j]){ shuzu@@ [i]=0; } } } for(intm=0;m@@ <n;m++){ if(shuzu@@ [m]@@ !=0){ if(m@@ ==0){ printf("%d",@@ shuzu@@ [m]); } else{ printf("%d",@@ shuzu@@ [m]); } } } return0; }  
c -1
h -1
1


intmain(){ inta[100@@ ][@@ 16@@ ],i,j,@@ m,@@ p,q; for(i=0;i<@@ 100@@ ;i++){ for(j=0;j<@@ 16@@ ;j++){ scanf("%d",&a[i][j]); if(a[i][j]@@ <=@@ 0@@ )break; } m=0; for(p=0;p@@ <j@@ ;p++){ for(q=0;q@@ <j@@ ;q@@ ++){ if(a[i]@@ [q@@ ]==2*@@ a[i]@@ [p@@ ])@@ m++; } } if(a[i][j]==@@ -1)@@ break;@@ printf("%d\n",m); } return0; }  
c -1
h -1
intmain() { intn,i,j,k,@@ l,@@ a,b; scanf("%d",&n); intnum[@@ 20000]; intres@@ [@@ 20000]; for(i=0;i<n;i++) scanf("%d",&@@ num[i]); b=0; k=0; for(i=0;i<n;i++) { a=@@ num[i]; for(j=0;j<=i;j++) { if(i==@@ j) { b=@@ a; continue; } if(a!=@@ num@@ [j]) b=@@ a; else { b=0; break; } } if(b@@ !=0) { k++; res@@ [k]=@@ b; } } for(l=1;l@@ <=k;@@ l++) { if(l@@ !=@@ k) printf("%d",@@ res@@ [l]); else printf("%d",@@ res@@ [l]); } return0; }  
c -1
h -1
0

intmain() { introw,col,@@ i,j,@@ m,@@ p; scanf("%d%d",&row,&col); inta[100][100]; for(i=0;i<row;i++) { for(j=0;j<col;j++) { scanf("%d",&a[i][j]); } scanf("\n@@ "); } for(m=0;m@@ <=col@@ +row@@ -2@@ ;m++) { if(m@@ <col) { for(p=0;p@@ <=row-1@@ &&p@@ <=@@ m@@ ;p++) { printf("%d\n",@@ a[p@@ ][m@@ -@@ p@@ ]); } } if(m@@ >=@@ col) { for(p=@@ m@@ -col@@ +1@@ ;p<=@@ m@@ &&p@@ <=row-1@@ ;p++) { printf("%d\n",@@ a[p@@ ][m@@ -@@ p@@ ]); } } } return0; }  
c -1
h -1
intmain() { intk,i,@@ m=0,@@ number; double@@ a[@@ 15]; do { cin>>@@ number; if(@@ number@@ ==-1) break; else a[0]=@@ number; for(i=2@@ ;@@ ;i++) { cin>>@@ number; a[i-1@@ ]=@@ number; for(k=0;k<@@ i-1;k++) { if(a@@ [i-1@@ ]==@@ (@@ 2*@@ a[k]@@ )||@@ a[i-1@@ ]==@@ (@@ a[k]@@ /2@@ )) m++; } if(@@ number@@ ==0) { cout<<@@ endl@@ <<@@ m@@ <<endl; break; } } m=0; }while(@@ 1); return0; }  
c -1
h -1
0

intsum; inta[100]; void@@ search@@ (int@@ t@@ ,int@@ k) { inti; if(k@@ ==1)@@ sum++; else for(i=@@ a[t@@ -1]@@ ;i<=@@ k;i++) if(k@@ %i@@ ==0){@@ a[t@@ ]=@@ i@@ ;@@ search@@ (@@ t@@ +1,@@ k@@ /i@@ );} } intmain() { intn,i,@@ k; cin>>n; for(i=1;i<=n;i++) { cin>>k; sum=0; a[0]=@@ 2; search@@ (@@ 1,@@ k); cout<<sum<<endl; } return0; }  
c -1
h -1
intmain() { inti,n; int@@ fun@@ (intn,int@@ begin@@ ); scanf("%d",&@@ i); while(i@@ -->@@ 0@@ ) { scanf("%d",&n); printf("%d\n",@@ fun@@ (n,@@ 2)); } return0; } int@@ fun@@ (intn,int@@ begin@@ ) { inti,@@ result=1; for(i=@@ begin@@ ;i<=@@ sqrt(n@@ );i++) if(n%i==0) result+=@@ fun@@ (n/i,i); returnresult; }  
c -1
h -1
1


main() { inti,j,k,@@ m=0,@@ n,@@ e,f,@@ g,@@ h; int*@@ a,*@@ b@@ ,*@@ c; scanf("%d",&n); a=@@ (int*)malloc(n*sizeof(int)); b=@@ (int*)malloc(n*sizeof(int)); c=@@ (int*)malloc(n*sizeof(int)); for(i=0;i<n;i++) scanf("%d%d%d",&@@ a[i],&@@ b[i]@@ ,&@@ c[i]); for(i=0;i<n;i++) a[i]=@@ b[i]@@ +c@@ [i]; for(i=0;i<n;i++) b[i]=@@ a[i]; for(i=0;i<n;i++) { if(a[i]>@@ m) m=@@ a[i]; } for(i=0;i<n;i++) { if(b[i]==@@ m) break; } printf("%d%d\n",@@ i@@ +1,@@ m); b[i]=0; a[i]=0; m=0; for(i=0;i<n;i++) { if(b[i]>@@ m) m=@@ b[i]; } for(i=0;i<n;i++) { if(a[i]==@@ m) break; } printf("%d%d\n",@@ i@@ +1,@@ m); a[i]=0; b[i]=0; m=0; for(i=0;i<n;i++) { if(b[i]>@@ m) m=@@ b[i]; } for(i=0;i<n;i++) { if(a[i]==@@ m) break; } printf("%d%d\n",@@ i@@ +1,@@ m); free(@@ a); a=0; free(@@ b); b=0; free(@@ c); c=0; }  
c -1
h -1
struct@@ w {int@@ id; int@@ ch; int@@ ma; intsum; struct@@ w@@ *next; struct@@ w@@ *@@ pre@@ ; }@@ *head,*p1,*p2; inti,n,@@ k@@ =1,@@ max,@@ s=0; struct@@ w@@ *@@ make@@ (void) { head=@@ null@@ ; scanf("%d",&n); p1=p2=(struct@@ w@@ *)malloc(len); scanf("%d%d%d",&@@ p1->id,&p1->@@ ch@@ ,&p1->@@ ma@@ ); for(k=1;k<@@ n;k++) { if(k@@ ==1){@@ head@@ =p1;@@ p1->@@ pre@@ =@@ null@@ ;} else{@@ p2->next@@ =p1;@@ p1->@@ pre@@ =p2@@ ;} p2=p1; p1=(struct@@ w@@ *)malloc(len); scanf("%d%d%d",&@@ p1->id,&p1->@@ ch@@ ,&p1->@@ ma@@ ); } p2->next=p1; p1->next=@@ head; returnhead; } voidmain() { head=@@ make@@ ();@@ max=0; while(@@ s@@ <@@ 3) { max=0; for(i=1;i<=n;i++) { if(i==@@ n)@@ p1=@@ null@@ ; else { p1->sum=p1->@@ ch@@ +p1->@@ ma; p1=p1->next; } } p1=head; for(i=1;i<=n;i++) { if((@@ p1->@@ sum@@ )@@ >max) max=@@ p1->@@ sum; p1=p1->next; } p1=head; for(i=1;i<=n;i++) { p2=p1; p1=p1->next; if(@@ p2->@@ ch@@ +@@ p2->@@ ma@@ ==@@ max) { printf("%d%d\n",@@ p2->@@ id,@@ p2->@@ sum); if(@@ p2@@ ==@@ head@@ ) { head=@@ p2->next; p2=head; } else { p2=@@ p2->@@ pre@@ ; p1=p1->next; p2->next=p1; } break; } } s++; } }  
c -1
h -1
1


intf@@ (intm,int@@ k); intmain() { intn,i,k,@@ m; cin>>n; for(i=1;i<=n;i++) { cin>>m; k=@@ 2; cout<<@@ f(@@ m,@@ k@@ )<<endl; } return0; } intf@@ (intm,int@@ k) { int@@ m1,@@ sum=1; m1=@@ m; while(k@@ <=@@ (int)sqrt(@@ m@@ )) { if(m@@ %@@ k@@ ==0) { m=m@@ /@@ k; sum=sum+@@ f(@@ m,@@ k); } m=@@ m1@@ ; k++; } returnsum; }  
c -1
h -1
intmain(){ inti,@@ t,@@ k=0; double@@ rate@@ ; chara[501],b[501]; scanf("%lf",&@@ rate@@ ); scanf("%s",a); scanf("%s",b); if(strlen(a)!=strlen(b@@ )){ printf("error"); } else{ t@@ =strlen(a); for(i=0;i<@@ t@@ ;i++){ if(a[i]!='@@ T'&&a[i]!='@@ G'&&a[i]!='@@ C'&&a[i]!='@@ A'@@ ){ printf("error"); break; } if(@@ b[i]!='@@ T'&&b[i]!='@@ G'&&b[i]!='@@ C'&&b[i]!='@@ A'@@ ){ printf("error"); break; } if(a[i]==b[i]){ k++; } if(i==@@ t@@ -1){ if(1.0*@@ k/@@ t@@ >=@@ rate@@ ){ printf("yes"); } else{ printf("no"); } } } } return0; }  
c -1
h -1
0

intmain(){ doublen,@@ s=0,@@ m; scanf("%lf",&n); chara[@@ 600@@ ],b[@@ 600]; scanf("%s@@ %s",&@@ a,&b); int@@ l1,l2@@ ; l1@@ =strlen(a); l2@@ =strlen(b); if(l1!=l2@@ ){ printf("error"); } if(l1@@ ==@@ l2@@ ){ inti,@@ T@@ =0; for(i=0;a[i]@@ !=@@ '\0@@ '&&@@ b[i]@@ !='\0';i++){ if((@@ a[i]=='@@ A'||a[i]=='T'||a[i]=='@@ G'||@@ a[i]=='@@ C')&&(@@ b[i]=='@@ G'||@@ b[i]=='@@ T'||@@ b[i]=='@@ A'||@@ b[i]=='@@ C')){ if(a[i]==b[i]){ s++; } } else{ printf("error"); T@@ =1; break; } } if(@@ T@@ ==0){ m=@@ s/@@ l1; if(m@@ >n){ printf("yes"); } if(m@@ <=@@ n){ printf("no"); } } } return0; }  
c -1
h -1
intmain() { int@@ key@@ ; int@@ number,@@ total; while((@@ cin>>@@ key@@ )&&(@@ key@@ !=@@ -1)) { intnum[@@ 15]; num[@@ 0]=@@ key@@ ; inti=1; int@@ flag1@@ =0,@@ flag2@@ =0; total=0; while((@@ cin>>@@ number@@ )&&(@@ number@@ !=0)) { num[i]=@@ number; i++; } for(intk=0@@ ;k<=@@ i@@ -2@@ ;k++) { for(int@@ r=@@ k@@ +1;@@ r@@ <=i@@ -1;@@ r++) { flag1@@ =(@@ num[@@ r@@ ]==2*@@ num@@ [k]); flag2@@ =(@@ num@@ [k]==2*@@ num[@@ r@@ ]); if((@@ flag1@@ ==1)@@ ||(@@ flag2@@ ==1@@ )) { total=total@@ +1; } } } cout<<@@ total@@ <<endl; } return0; }  
c -1
h -1
0

intmain(intargc,char*argv[]) { chara[256],b[256],c[256]; int@@ la@@ ,i,j,@@ lb@@ ,@@ lc@@ ,@@ h=@@ 300@@ ,@@ p; scanf("%s%s%s",a,b,c); la@@ =strlen(a); lb@@ =strlen(b); lc@@ =strlen(c); for(j=0;j<@@ la@@ ;j++) { if(@@ b[0]@@ ==@@ a[j]) { for(i=0;i<@@ lb@@ ;i++) {@@ if(b[i]@@ !=@@ a@@ [j+i@@ ]) break; if((@@ i==@@ lb@@ -1)@@ &&(@@ b[i]@@ ==@@ a@@ [j+i@@ ]@@ )) { h@@ =j; j=@@ 100; break; } } } } if(h@@ !=@@ 300@@ ) { for(p=@@ h@@ ;p<@@ h@@ +lb@@ ;p++) { a[p@@ ]=@@ c[@@ 0@@ +p@@ -@@ h@@ ]; } } for(i=0;i<@@ la;i++) { printf("%c",a[i]); } return0; }  
c -1
h -1
intmain() { intyear,month,day; intk=0; int@@ monthday@@ [12]={31,28,31,30,31,30,31,31,30,31,30,31}; scanf("%d%d%d",&year,&month,&day); if(month@@ ==1)@@ k=k@@ +day; elseif(month==@@ 2)@@ k=k@@ +31+@@ day; elseif(month==@@ 3)@@ k=k@@ +31+28@@ +day; elseif(month==@@ 4)@@ k=k@@ +31+28@@ +31+@@ day; elseif(month==@@ 5@@ )@@ k=k@@ +31+28@@ +31+30+day; elseif(month==@@ 6@@ )@@ k=k@@ +31+28@@ +31+30+31+@@ day; elseif(month==@@ 7@@ )@@ k=k@@ +31+28@@ +31+30+31+30@@ +day; elseif(month==@@ 8@@ )@@ k=k@@ +31+28@@ +31+30+31+30+31+@@ day; elseif(month==@@ 9@@ )@@ k=k@@ +31+28@@ +31+30+31+30+31+31+@@ day; elseif(month==@@ 10@@ )@@ k=k@@ +31+28@@ +31+30+31+30+31+31+30@@ +day; elseif(month==@@ 11@@ )@@ k=k@@ +31+28@@ +31+30+31+30+31+31+30+31+@@ day; elseif(month==@@ 12@@ )@@ k=k@@ +31+28@@ +31+30+31+30+31+31+30+31+30@@ +day; if(((@@ (@@ year%@@ 4==0)&&(@@ year%100!=0@@ )@@ )||(@@ year%@@ 400==0)@@ )&&(@@ month@@ >2@@ ))@@ k=k+1; printf("%d",k); return0; }  
c -1
h -1
0

structbook*@@ head; int@@ abc@@ [26]; structbook { intnum; charname@@ [1000]; structbook*next; }; void@@ ffind@@ (@@ char*@@ name@@ ) { while(@@ *@@ name@@ !=0) { abc@@ [@@ *@@ name@@ -65]++; name@@ ++; } } int@@ mfind@@ (@@ char*@@ name,@@ char@@ a) { while(@@ *@@ name@@ !=0) { if(a==@@ *@@ name@@ )@@ return1; name@@ ++; } } structbook*@@ creat@@ (int@@ max) { intn; structbook*@@ p1,*p2; n=0; p1=p2=(struct@@ book@@ *)malloc(LEN); head@@ =0; do { scanf("%d%s",&@@ p1->num,&p1->@@ name); ffind@@ (@@ p1->@@ name); n++; if(n@@ ==1)head=p1; elsep2->next=p1; p2=p1; p2->next@@ =0; p1=(structbook@@ *)malloc(LEN); }while(@@ n@@ <@@ max); p2->next@@ =0; returnhead; } voidmain() { intn,i; intmax=0,@@ maxi@@ =0; char@@ tt@@ [2]; structbook@@ *p,*@@ p1; scanf("%d",&n); p=@@ creat@@ (n); p1=@@ p; for(i=0;i<26;i++) { if(@@ abc@@ [i]>max) {max=@@ abc@@ [i]; maxi@@ =i; } } printf("%@@ C@@ \n%d\n",@@ 65@@ +@@ maxi@@ ,max); tt@@ [0]=@@ maxi@@ +65; tt@@ [1]@@ =0; do{ if(@@ mfind@@ (@@ p1->name@@ ,@@ maxi@@ +65@@ )@@ ==1){ max@@ --; if(max@@ !=0) printf("%d\n",@@ p1->num); else@@ printf("%d",@@ p1->num); } p1=p1->next; }while(@@ p1@@ !=0); }  
c -1
h -1
intmain() { chara[@@ 501]; charb[@@ 501]; int@@ x,y; inti,@@ s=0,@@ q=0; doublen,@@ t; scanf("%lf",&n); scanf("%s",&@@ a); scanf("%s",&@@ b); x@@ =strlen(a); y@@ =strlen(b); if(x@@ !=@@ y){ printf("error"); } else{ for(i=0;i<x;i++){ if((a[i]!='@@ A'&&a[i]!='T'&&a[i]!='G'&&a[i]!='@@ C')||(@@ b[i]!='A'&&b[i]!='T'&&b[i]!='C'&&b[i]!='@@ G')){ printf("error"); return0; } if(a[i]==b[i]) s++; } t=@@ n*@@ x; if(s@@ >@@ t@@ ){@@ printf("yes"); } elseprintf("no"); } return0; }  
c -1
h -1
0

voidmain() { int@@ t=0,@@ m,@@ i,j,@@ n,k,@@ a[@@ 999@@ ],c[@@ 26]={0}; charb[@@ 999@@ ][@@ 999]; scanf("%d\n",&@@ m); for(i=0;i<m;i++) scanf("%d%s",&a[i],@@ b[i]); for(i=0;i<m;i++) { k=strlen(@@ b[i]); for(j=0;j<k;j++) c[@@ b[i]@@ [j]@@ -'A']++; } for(j=0;j<26;j++) { if(t@@ <@@ c@@ [j]) t=@@ c[j]; } for(i=0;i<26;i++) { if(c@@ [i]==@@ t) {@@ printf("%c\n",@@ i@@ +'A'@@ ); break; } } printf("%d\n",t); for(j=0;j<m;j++) { k=strlen(@@ b[j]); for(n=0;n@@ <k;@@ n++) {if((@@ b[j]@@ [n@@ ]@@ -'@@ A')@@ ==@@ i) printf("%d\n",@@ a[j]); } } }  
c -1
h -1
main() { inta[@@ 50@@ ]={0}; intf@@ [50@@ ],@@ max,@@ i,j,@@ n; scanf("%d",&n); scanf("%d",&a[0]); f@@ [0]=1; for(i=1;i<n;i++) { scanf("%d",&a[i]); f@@ [i]=1; } for(i=0;i<n;i++) { for(j=0;j<i;j++) { if(a[j]>=@@ a[i]) { if(f@@ [j]+1>@@ f@@ [i])@@ f[i]=@@ f@@ [j]+1; else@@ f[i]=@@ f[i]; } } } max=@@ f@@ [0]; for(i=1;i<n;i++) { if(f@@ [i]>max) max=@@ f[i]; } printf("%d\n",max); }  
c -1
h -1
0

intmain() { chara[@@ 101]; charb[@@ 101]; charc[@@ 101]; inti,j; int@@ length1@@ ,@@ length2@@ ,@@ length3@@ ; intp; scanf("%s%s%s",a,b,c); length1@@ =strlen(a); length2@@ =strlen(b); length3@@ =strlen(c); for(i=0;i<@@ length1@@ ;i++) { if(a[i]==@@ b[0]) { p=0; for(j=1;j<@@ length2@@ ;j++) { if(a@@ [i+j]!=@@ b[j]) { p=1; break; } } if(p@@ ==0) { for(j=0;j<i;j++) { printf("%c",@@ a[j]); } for(j=0;j<@@ length3@@ ;j++) { printf("%c",@@ c@@ [j]); } for(j=i@@ +@@ length3@@ ;j<@@ length1@@ ;j++) { printf("%c",@@ a[j]); } p=@@ 2; break; } } } if(p@@ !=@@ 2) { for(i=0;i<@@ length1@@ ;i++) { printf("%c",a[i]); } } return0; }  
c -1
h -1
intmain() { int@@ n1@@ =0,@@ n2@@ =0,@@ i=0,j=0,@@ temp=0; cin>>@@ n1@@ >>@@ n2; int@@ a1@@ [100]={0},@@ a2@@ [100]={0},@@ c[@@ 200@@ ]={0}; for(i=0;i<n1;i++) cin>>@@ a1@@ [i]; for(i=0;i<n2;i++) cin>>@@ a2@@ [i]; for(i=0;i<n1@@ -1;i++) {@@ for(j=0;j<@@ n1@@ -1-i;j++) { if(@@ a1@@ [j]>@@ a1@@ [j+1]) {@@ temp=@@ a1@@ [j];@@ a1@@ [j]=@@ a1@@ [j+1];@@ a1@@ [j+1]=@@ temp;} }} for(i=0;i<n2@@ -1;i++) {@@ for(j=0;j<@@ n2@@ -1-i;j++) { if(@@ a2@@ [j]>@@ a2@@ [j+1]) {@@ temp=@@ a2@@ [j];@@ a2@@ [j]=@@ a2@@ [j+1];@@ a2@@ [j+1]=@@ temp;} }} for(i=0;i<n1;i++) c[i]=@@ a1@@ [i]; for(i=@@ n1@@ ;i<@@ n1+@@ n2;i++) c[i]=@@ a2@@ [i-@@ n1@@ ]; for(i=0;i<n1@@ +@@ n2@@ -1;i++) cout<<@@ c[i]@@ <<""; cout<<c[@@ n1+n2@@ -1]; return0; }  
c -1
h -1
0

intmain(){ intj,@@ i,@@ n,k,@@ s=0; scanf("%d%d\n",&n,&@@ k); intsz[@@ n]; for(i=0;i<=@@ n-1;i++){ scanf("%d",&sz[i]); for(j=0;j<=@@ i;j++){ if(sz[i]+sz@@ [j]==k){ s@@ ++;@@ }}} if(s@@ >0@@ ){printf("yes");} else{printf("no");} return0; }  
c -1
h -1
intmain() { inti,j,n,@@ a; cin>>n; for(i=1;i<=n;i++) { for(j=1;j<=n;j++) { cin>>a; if(a@@ ==0)break; } if(a@@ ==0)break; } ints=0; while(@@ ++@@ j@@ <=@@ n) { if(a@@ ==0)@@ s++; cin>>a; } intnum=0; for(i@@ +=@@ 1@@ ;i<=n;i++) for(j=1;j<=n;j++) { cin>>a; if(a@@ ==0)@@ num++; } int@@ r; r@@ =(@@ num@@ -@@ s)@@ /2; s@@ -=@@ 2; cout<<@@ r@@ *@@ s@@ <<endl; return0; }  
c -1
h -1
0

intmain() { inta[16@@ ]={0}; inti,j,k,@@ n=0; do { for(i=0;i<=@@ 15;i++) { cin>>a[i]; if(a[0]==-1) break; if(a[i]==0) break; } if(a[0]==-1) break; for(j=0;j<=i-1;j++) for(k=0;k<=@@ i-1;k++) { if(a[j]==2*@@ a[k]) n++; } cout<<n<<endl; n=0; }while(@@ 1); return0; }  
c -1
h -1
inta[1000][1000]; intmain() { intn,i,j; int@@ m1@@ =0,@@ n1@@ =0,@@ m2@@ =0,@@ n2@@ =0,@@ s=0; scanf("%d",&n); for(i=0;i<n;i++) { for(j=0;j<n;j++) { scanf("%d",&a[i][j]); } } for(i=0;i<n;i++) { for(j=0;j<n;j++) { if(a[i][j]==0&&@@ a[i]@@ [j+1]@@ ==0&&@@ a[i+1@@ ][j]@@ ==0) { m1@@ =i; n1@@ =j; } } } for(i=0;i<n;i++) { for(j=0;j<n;j++) { if(a[i][j]==0&&@@ a[i-1]@@ [j]@@ ==0&&@@ a[i][j-1]@@ ==0) { m2@@ =i; n2@@ =j; } } } s=(@@ m2@@ -@@ m1@@ -1)*(@@ n2@@ -@@ n1@@ -1); printf("%d\n",s); return0; }  
c -1
h -1
0

intmain() { intn,i,j,@@ s=0,@@ a[@@ 25],b[@@ 25]; scanf("%d",&n); for(i=0;i<n;i++) { scanf("%d",&b[i]); } for(i=0;i<n;i++) { a[i]=0; for(j=0;j<=i;j++) { if(b[i]@@ <=@@ b[j]@@ &&a[i]@@ <=@@ a[j]) { a[i]=a[j]; } } a[i]@@ ++; if(s@@ <@@ a[i]) { s=@@ a[i]; } } printf("%d",s); return0; }  
c -1
h -1
voidmain() { intn,@@ m@@ [100][100],@@ i,j,@@ a=0,b=0,@@ c=0,@@ d=0,@@ x,y,@@ s; scanf("%d",&n); for(i=0;i<n;i++) for(j=0;j<n;j++) scanf("%d",&@@ m@@ [i][j]); for(i=0;i<n;i++) for(j=0;j<n;j++) { if(j@@ ==0&&@@ m@@ [i][j]==0) a@@ =j; elseif(@@ j@@ !=0&&@@ m@@ [i][j]==0&&@@ m[i]@@ [j-1@@ ]==255@@ &&m@@ [i]@@ [j+1@@ ]==0) a@@ =j; if(j==@@ n-1@@ &&m@@ [i][j]==0) b=j; elseif(@@ j@@ !=@@ n-1@@ &&m@@ [i][j]==0&&@@ m[i]@@ [j+1@@ ]==255@@ &&m@@ [i]@@ [j-1]@@ ==0) b=j; if(i@@ ==0&&@@ m@@ [i][j]==0) c=i; elseif(@@ i@@ !=0&&@@ m@@ [i][j]==0&&@@ m@@ [i-1]@@ [j]==@@ 255@@ &&m@@ [i+1][j]@@ ==0) c=i; if(i==@@ n-1@@ &&m@@ [i][j]==0) d@@ =i; elseif(@@ i@@ !=@@ n-1@@ &&m@@ [i][j]==0&&@@ m@@ [i+1]@@ [j]==@@ 255@@ &&m@@ [i-1][j]@@ ==0) d@@ =i; } x=@@ b-@@ a@@ -1; y=@@ d@@ -c@@ -1; s=@@ x@@ *@@ y; printf("%d",s); }  
c -1
h -1
0

voidmain() { int@@ **@@ a[100][100],@@ i,j,@@ col,@@ row,@@ k,@@ xie@@ ; scanf("%d%d",&row,&col); for(i=0;i<100;i++) { for(j=0;j<@@ 100@@ ;j++) { a[i]@@ [j]=@@ (int@@ **@@ )@@ malloc(@@ 10000@@ ); } } for(i=0;i<row;i++) { for(j=0;j<col;j++) { scanf("%d",@@ a[i]@@ [j]); } } xie@@ =@@ col@@ +row@@ -1; for(i=0;i<=@@ xie@@ +1;i++) { for(j=0;j<row@@ ;j++) { for(k=0;k<col@@ ;k++) { if(j@@ +k@@ !=@@ i@@ ){@@ continue;} else{@@ printf("%d\n",@@ *@@ a[j]@@ [k]@@ );} } } } }  
c -1
h -1
intmain() { intn,i,j,a[@@ 26@@ ],b[@@ 26],@@ c; cin>>n; for(i=1;i<=n;i++) { cin>>a[i]; b[i]=1; c=0; for(j=1;j<i;j++) if(a[j]>=a[i]&&@@ b[j]@@ >@@ c) c=@@ b[j]; b[i]=@@ c@@ +1; } c=0; for(i=1;i<=n;i++) if(b[i]>@@ c) c=@@ b[i]; cout<<@@ c; return0; }  
c -1
h -1
0

intmain(){ double@@ x,y; intm,n,@@ i,@@ c=0; int@@ r=0; chara[@@ 505@@ ],b[@@ 505@@ ]; scanf("%lf",&x); scanf("%s",a); scanf("%s",b); n@@ =strlen(a); m@@ =strlen(b); if(m!=@@ n){ c=@@ 3@@ ; } for(i=0;i<n;i++){ if(a[i]==b[i]){ r++; } if((a[i]!='@@ A'&&a[i]!='@@ G'&&a[i]!='@@ C'&&a[i]!='@@ T')||(@@ b[i]!='@@ T'&&@@ b[i]!='A'&&b[i]!='@@ C'&&b[i]!='@@ G')){ c=@@ 3@@ ; break; } } y@@ =1.0*@@ r@@ /n; if((@@ y@@ >@@ x@@ )&&(@@ c@@ ==0)@@ ){ printf("yes"); } if((@@ y@@ <=@@ x@@ )&&(@@ c@@ ==0)@@ ){ printf("no"); } if(c==@@ 3@@ ){ printf("error"); } return0; }  
c -1
h -1
voidmain() { intb[@@ 25],@@ a[@@ 25],@@ x=0,@@ n,@@ i,j,k,@@ l; scanf("%d",&n); for(j=0;j<n;j++) scanf("%d",&a[j]); for(k=0;k<n;k++) { b[k@@ ]=0; for(i=0;i<k;i++) { if(a[i]>=@@ a[k]) { if(b[i]>@@ b[k@@ ]) b[k@@ ]=b[i]; } } b[k]=@@ b[k@@ ]+1; } for(l=0;l<@@ k;@@ l++) { if(@@ b[l@@ ]>@@ x) { x=@@ b[l@@ ]; } } printf("%d\n",x); }  
c -1
h -1
0

intmain(){ double@@ z; inti,j,@@ a,b,c,d,@@ m,n; scanf("%lf",&@@ z); charzfc@@ [501]; scanf("%s",@@ zfc); char@@ bjc@@ [501]; scanf("%s",@@ bjc@@ ); i=0; j=0; c=0; d=0; n=0; while(@@ zfc@@ [i]!=@@ '\0')@@ {@@ i@@ ++;} while(@@ bjc@@ [j]!=@@ '\0')@@ {@@ j@@ ++;} for(a@@ =0;@@ zfc@@ [a@@ ]!='\0'@@ ;a@@ ++@@ ){@@ if(@@ zfc@@ [a]@@ =='@@ A'||@@ zfc@@ [a]@@ =='@@ T'||@@ zfc@@ [a]@@ =='@@ C'||@@ zfc@@ [a]@@ =='@@ G')@@ {@@ c@@ ++;@@ }} for(b@@ =0;@@ bjc@@ [b@@ ]!='\0'@@ ;@@ b@@ ++@@ ){@@ if(@@ bjc@@ [b@@ ]@@ =='@@ A'||@@ bjc@@ [b@@ ]@@ =='@@ T'||@@ bjc@@ [b@@ ]@@ =='@@ C'||@@ bjc@@ [b@@ ]@@ =='@@ G')@@ {@@ d@@ ++;@@ }} if(i==@@ j@@ &&@@ c@@ ==@@ i@@ &&@@ d@@ ==@@ i@@ ){@@ for(m=0;m<@@ i@@ ;m@@ ++@@ ){@@ if(@@ zfc@@ [m@@ ]==@@ bjc@@ [m]@@ ){@@ n@@ ++;@@ }} if((@@ 1.0*@@ n@@ /i@@ )>@@ z@@ ){@@ printf("yes");@@ }@@ else{printf("no");} } else@@ printf("error"); return0; }  
c -1
h -1
structStudent { intnum; intmath; intchinese; }stu[100000]; intmain() { intn,i,j,@@ s[@@ 100000],@@ t[@@ 100000],@@ c=0; scanf("%d",&n); for(i=0;i<=@@ (n-1);i++) { scanf("%d%d%d",&stu[i].num,&stu[i].@@ chinese@@ ,&stu[i].math); } for(i=0;i<=@@ (n-1);i++) { s[i]=@@ stu[i].@@ math@@ +stu[i].@@ chinese; t@@ [i]=@@ s[i]; } intp; for(i=0;i<=@@ 2@@ ;i++) { for(j=0;j<=@@ (n@@ -i@@ -2@@ );j++) { if(s@@ [j]>=@@ s@@ [j+1]) { p=@@ s[j]; s[j]=@@ s@@ [j+1]; s@@ [j+1]=@@ p; } } } int@@ d[@@ 3@@ ]; for(i=0;i<=@@ (n-1);i++) { if(t@@ [i]==@@ s[@@ n-1@@ ]) { printf("%d%d",@@ stu[i].@@ num,@@ t@@ [i]); d[@@ c@@ ]=@@ stu[i].@@ num; printf("\n"); c=c@@ +1; if(c==@@ 3@@ )break; } if(c==@@ 3@@ )break; } for(i=0;i<=@@ (n-1);i++) { if(t@@ [i]==@@ s[@@ n-2@@ ]) { if(stu[i].@@ num@@ ==@@ d@@ [0]@@ ||@@ stu[i].@@ num@@ ==@@ d@@ [1]@@ ||@@ stu[i].@@ num@@ ==@@ d@@ [2]@@ )break; printf("%d%d",@@ stu[i].@@ num,@@ t@@ [i]); d[@@ c@@ ]=@@ stu[i].@@ num; printf("\n"); c=c@@ +1; if(c==@@ 3@@ )break; } if(c==@@ 3@@ )break; } for(i=0;i<=@@ (n-1);i++) { if(t@@ [i]==@@ s[@@ n-@@ 3@@ ]) { if(stu[i].@@ num@@ ==@@ d@@ [0]@@ ||@@ stu[i].@@ num@@ ==@@ d@@ [1]@@ ||@@ stu[i].@@ num@@ ==@@ d@@ [2]@@ )break; printf("%d%d",@@ stu[i].@@ num,@@ t@@ [i]); d[@@ c@@ ]=@@ stu[i].@@ num; printf("\n"); c=c@@ +1; if(c==@@ 3@@ )break; } if(c==@@ 3@@ )break; } return0; }  
c -1
h -1
0

intmain() { inty,m,d,@@ t=0; cin>>y>>m>>d; inta[@@ 12]={31,28,31,30,31,30,31,31,30,31,30,31}; if((y%@@ 4==0&&y%100!=0@@ )||(y%@@ 400==0)) a[1]=29; if(m==1) cout<<@@ d; else { for(inti=0;i<@@ m-1;i++) { t=t+@@ a[i]; } cout<<t@@ +d; } return0; }  
c -1
h -1
intmain() { inta,b,c,@@ day,@@ m; scanf("%d%d%d",&a,&b,&c); if(a%@@ 4==0&&a%100!=0@@ ||a%@@ 4==0&&@@ a%@@ 400==0) { m=@@ 29; } else { m=@@ 28; } switch(@@ b) { case1:@@ day=@@ c@@ ;break; case2:@@ day@@ =31+@@ c@@ ;break; case3:@@ day@@ =31+@@ m+@@ c@@ ;break; case4:@@ day@@ =31+@@ m@@ +31+@@ c@@ ;break; case5:@@ day@@ =31+@@ m@@ +31+30@@ +c@@ ;break; case6:@@ day@@ =31+@@ m@@ +31+30+31+@@ c@@ ;break; case7:@@ day@@ =31+@@ m@@ +31+30+31+30@@ +c@@ ;break; case8:@@ day@@ =31+@@ m@@ +31+30+31+30+31+@@ c@@ ;break; case9:@@ day@@ =31+@@ m@@ +31+30+31+30+31+31+@@ c@@ ;break; case10:@@ day@@ =31+@@ m@@ +31+30+31+30+31+31+30@@ +c@@ ;break; case11:@@ day@@ =31+@@ m@@ +31+30+31+30+31+31+@@ 31+30@@ +c@@ ;break; case12:@@ day@@ =31+@@ m@@ +31+30+31+30+31+31+30@@ +30@@ +31+@@ c@@ ;break; } printf("%d",@@ day); return0; }  
c -1
h -1
1


structbook { intid; charwriter@@ [26]; int@@ length@@ ; }@@ zz@@ [999]; intmain() { intn,i,j,k; int@@ letter@@ [26]={0}; int@@ letter_book@@ [26@@ ][@@ 999@@ ]={0}; cin>>n; for(i=0;i<n;i++) { cin>>@@ zz@@ [i].@@ id; cin>>@@ zz@@ [i].@@ writer@@ ; zz@@ [i].@@ length@@ =strlen(@@ zz@@ [i].@@ writer); } for(j=0;j<n;j++) { for(k=0;k<@@ zz@@ [j].@@ length@@ ;k++) { letter_book@@ [@@ zz@@ [j].@@ writer@@ [k]@@ -'A'@@ ][@@ letter@@ [@@ zz@@ [j].@@ writer@@ [k]@@ -'A'@@ ]@@ ]=@@ zz@@ [j].@@ id; letter@@ [@@ zz@@ [j].@@ writer@@ [k]@@ -'A']++; } } intmax=0,@@ t; for(i=0;i<26;i++) { if(@@ letter@@ [i]>max) { max=@@ letter@@ [i]; t=i; } } char@@ m; m=@@ 'A'@@ +@@ t; cout<<@@ m@@ <<endl; cout<<max<<endl; for(i=0;i<@@ max@@ ;i++) cout<<@@ letter_book@@ [t@@ ]@@ [i]<<endl; }  
c -1
h -1
intmain() { intl,@@ m,n,@@ i,j,@@ s,@@ k; charstring@@ [256],@@ substring@@ [256],@@ replacement@@ [256]; char@@ t; scanf("%s",@@ string); scanf("%s",@@ substring); scanf("%s",@@ replacement); l=strlen(@@ string); m=strlen(@@ substring); t=@@ substring@@ [0]; for(i=0;i<=@@ l@@ -@@ m;i++) { s=0; if(string@@ [i]==@@ t) { for(j=i;j<=@@ i+@@ m-1;j++) { if(string@@ [j]==@@ substring@@ [j-i@@ ]){@@ s@@ ++;} } if(s@@ ==@@ m) { for(k=0;k<=@@ m-1@@ ;k++) {@@ string@@ [i+k@@ ]=@@ replacement@@ [k]@@ ;} i=@@ l@@ -@@ m; } else {@@ i@@ ++;} } } printf("%s\n",@@ string); return0; }  
c -1
h -1
0

intmain() { intn,i,j; struct@@ s {@@ charid[10]; intage; }; struct@@ s@@ S@@ [100],@@ Si@@ ; scanf("%d",&n); for(i=0;i<n;i++){ scanf("%s%d",@@ S@@ [i].id,&@@ S@@ [i].age); } for(i=0;i<n-1;i++){ for(j=0;j<n@@ -i@@ -1;j++){ if(@@ S@@ [j+1@@ ].age@@ >=60){ if(@@ S@@ [j].age@@ <@@ S@@ [j+1@@ ].age){ Si@@ =@@ S@@ [j]; S@@ [j]=@@ S@@ [j+1]; S@@ [j+1]=@@ Si@@ ; } } } } for(i=0;i<n;i++){ printf("%s\n",@@ S@@ [i].id); } }  
c -1
h -1
intmain() { intk,@@ y,@@ h@@ [25],@@ g@@ [25]; scanf("%d",&k); for(inti=0;i<k;i++) { scanf("%d",&h[i]); } for(int@@ a@@ =0;a@@ <k;@@ a++) g@@ [a@@ ]=1; for(intj=@@ k@@ -2@@ ;j>=0;j--) { y=0; for(inti@@ =j+1@@ ;i<@@ k;i++) { if(h@@ [i]<=@@ h@@ [j]) { if(y@@ <@@ g@@ [i]) y=@@ g@@ [i]; } } g@@ [j]=@@ g@@ [j]+@@ y; } int@@ d=@@ g@@ [0]; for(inti=0;i<@@ k-1;i++) { if(d@@ <@@ g@@ [i]) d=@@ g@@ [i]; } printf("%d",d); getchar(); getchar(); getchar(); getchar(); }  
c -1
h -1
0

intmax@@ (int*p,int@@ num,int@@ height@@ ) {int@@ missile@@ ,@@ case1@@ ,@@ case2@@ ; if(num@@ ==1) {if(@@ *p@@ <=@@ height@@ )@@ missile@@ =1; else@@ missile@@ =0;} else {@@ case1@@ =@@ max@@ (p@@ +1,@@ num@@ -1@@ ,*@@ p@@ )@@ +1; case2@@ =@@ max@@ (p@@ +1,@@ num@@ -1,@@ height@@ ); if(@@ *p@@ <=@@ height@@ &&@@ case1@@ >=@@ case2@@ )@@ missile@@ =@@ case1@@ ; else@@ missile@@ =@@ case2@@ ; } return(@@ missile@@ ); } voidmain() { inta[100@@ ],@@ n,@@ i,@@ height@@ =@@ 100000@@ ,@@ H@@ ; scanf("%d",&n); for(i=0;i<n;i++)@@ scanf("%d",&a[i]); H@@ =@@ max@@ (a,n,@@ height@@ ); printf("%d",@@ H@@ ); }  
c -1
h -1
intk,i,j,@@ an@@ [30]; int@@ DFS@@ (int@@ h@@ ,intn) { int@@ t1@@ ,@@ t2@@ ; if(n==@@ k@@ -1) { if(@@ an@@ [n@@ ]>@@ h@@ ) return0; else return1; } if(@@ an@@ [n@@ ]>@@ h@@ ) return@@ DFS@@ (@@ h,@@ n@@ +1); else { t1@@ =@@ DFS@@ (@@ h,@@ n@@ +1); t2@@ =@@ DFS@@ (@@ an@@ [n@@ ],@@ n@@ +1)@@ +1; if(@@ t1@@ >@@ t2@@ ) return@@ t1@@ ; else return@@ t2@@ ; } } intmain() { cin>>k; for(i=0;i<k;i++) { cin>>@@ an@@ [i]; } cout<<@@ DFS@@ (@@ INT_MAX@@ ,@@ 0@@ )<<endl; return0; }  
c -1
h -1
1


intmain() { intn,i,j,k,@@ m,@@ t,@@ b[100@@ ],@@ e@@ [100]; chara[100@@ ][@@ 20],@@ c@@ [100][@@ 20],@@ d@@ [100][@@ 20],@@ str@@ [20]; scanf("%d",&n); for(i=0;i<n;i++) scanf("%s%d",@@ a[i],&@@ b[i]); for(i=0,j@@ =0,@@ k@@ =0;i<n;i++) { if(b[i]@@ >=60) { strcpy(@@ c@@ [j],@@ a[i]); e@@ [j]=@@ b[i]; j++; } else { strcpy(@@ d@@ [k],@@ a[i]); k++; } } for(i=0;i<j@@ -1;i++) { for(m=0;m<@@ j@@ -1@@ -i@@ ;m++) { if(e@@ [m@@ ]<@@ e@@ [m@@ +1]) { t=@@ e@@ [m@@ ];@@ e@@ [m]=@@ e@@ [m@@ +1@@ ];@@ e@@ [m@@ +1]=@@ t; strcpy(@@ str,@@ c[m@@ ]@@ );strcpy(@@ c[m@@ ],c[@@ m@@ +1@@ ]@@ );strcpy(@@ c[m@@ +1],@@ str); } } } for(i=0;i<j;i++) printf("%s\n",@@ c[i]); for(i=0;i<k;i++) printf("%s\n",@@ d[i]); getchar(); getchar(); }  
c -1
h -1
intmain() { float@@ a[100]; inti,j,t; do{ t=0; for(i=0;i<=@@ 99@@ ;i++) { scanf("%f",&@@ a[i]); if(i>=@@ 1) { if(a[i]==0) break; for(j=0;j<=i-1;j++) { if((@@ a[i]==@@ 2*@@ a[j]@@ )||(@@ a[i]==@@ a[j]@@ /2@@ )) t=t+1; } } } if(a[0]@@ !=-1) printf("%d\n",t); }while(@@ a[0]@@ !=-1); return0; }  
c -1
h -1
0

intmain(){ inti,@@ l,@@ m,@@ k=0,@@ p=1; doublen; charstr@@ [500],@@ tw@@ [500]; scanf("%lf",&n); scanf("%s",@@ str); scanf("%s",@@ tw@@ ); l=strlen(@@ str); m=strlen(@@ tw@@ ); if(l@@ !=@@ m)@@ p=0; for(i=0;i<l@@ ;i++)@@ if((@@ str@@ [i]!='A'&&@@ str@@ [i]!='T'&&@@ str@@ [i]!='C'&&@@ str@@ [i]!='G')||(@@ tw@@ [i]!='A'&&@@ tw@@ [i]!='T'&&@@ tw@@ [i]!='C'&&@@ tw@@ [i]!='G')){ p=0; break; } if(p@@ ==1){ for(i=0;i<l@@ ;i++)@@ if(str[i]==@@ tw@@ [i])@@ k++; if(1.0*@@ k/@@ l@@ >=@@ n)@@ printf("yes"); elseprintf("no"); } else@@ printf("error"); return0; }  
c -1
h -1
intmain() { charstr@@ [257],@@ s[@@ 257@@ ],@@ r@@ [257]; intlen1,len2,@@ len3@@ ,@@ i,j,k,@@ c,@@ flag=0; scanf("%s%s%s",@@ str,@@ s,@@ r); len1=strlen(@@ str); len2@@ =strlen(s); len3@@ =strlen(@@ r); j=0; while(@@ str@@ [j]@@ !='\0') { if(str@@ [j]==@@ s@@ [0]) { c@@ =j; for(i=0;i<@@ len2@@ ;i++) { if(str@@ [j+i@@ ]!=@@ s@@ [i]) { flag=0; break; } } if(i==@@ len2) { flag=1; break; } } j++; } if(flag) { for(k=0;k<@@ c@@ ;k++) printf("%c",str@@ [k]); printf("%s",@@ r); for(k=@@ c+@@ len2@@ ;k<@@ len1@@ ;k++) printf("%c",str@@ [k]); } else printf("%s",str); return0; }  
c -1
h -1
0

intn,a[@@ 30],@@ f[@@ 30],@@ ans; intmain() { scanf("%d@@ "@@ ,&@@ n); for(inti=1;i<=@@ n;++@@ i) scanf("%d@@ "@@ ,&@@ a[i]); for(inti=1;i<=@@ n;++@@ i){ for(intj=1;j<=@@ i@@ ;++@@ j) if(a[j]>=a[i]&&@@ f@@ [j]>@@ f@@ [i])@@ f[i]=@@ f@@ [j]; f@@ [i]++; } ans=0; for(inti=1;i<=@@ n;++@@ i) if(f@@ [i]>@@ ans@@ )@@ ans=@@ f[i]; printf("%d@@ \n@@ "@@ ,@@ ans); }  
c -1
h -1
main() { inti,j,k,@@ m=0,@@ n,@@ e,f,@@ g,@@ h; int*@@ a,*@@ b@@ ,*@@ c; scanf("%d",&n); a=@@ (int*)malloc(n*sizeof(int)); b=@@ (int*)malloc(n*sizeof(int)); c=@@ (int*)malloc(n*sizeof(int)); for(i=0;i<n;i++) scanf("%d%d%d",&@@ a[i],&@@ b[i]@@ ,&@@ c[i]); for(i=0;i<n;i++) a[i]=@@ b[i]@@ +c@@ [i]; for(i=0;i<n;i++) b[i]=@@ a[i]; for(i=0;i<n;i++) { if(a[i]>@@ m) m=@@ a[i]; } for(i=0;i<n;i++) { if(b[i]==@@ m) break; } printf("%d%d\n",@@ i@@ +1,@@ m); b[i]=0; a[i]=0; m=0; for(i=0;i<n;i++) { if(b[i]>@@ m) m=@@ b[i]; } for(i=0;i<n;i++) { if(a[i]==@@ m) break; } printf("%d%d\n",@@ i@@ +1,@@ m); a[i]=0; b[i]=0; m=0; for(i=0;i<n;i++) { if(b[i]>@@ m) m=@@ b[i]; } for(i=0;i<n;i++) { if(a[i]==@@ m) break; } printf("%d%d\n",@@ i@@ +1,@@ m); free(@@ a); a=0; free(@@ b); b=0; free(@@ c); c=0; }  
c -1
h -1
0

int@@ answer@@ =0; voidf@@ (intn,int@@ N@@ ){ if(n@@ <@@ N@@ ) N@@ =@@ n; if(N@@ ==1){ answer@@ ++; return; } while(@@ N@@ >1@@ ){ if(n%@@ N@@ ==0) f(@@ n/@@ N@@ ,@@ N); N@@ --; } } intmain() { intn,@@ a; cin>>n; for(inti=0;i<n;i++) { cin>>a; f(a,@@ a); cout<<@@ answer@@ <<endl; answer@@ =0; } return0; }  
c -1
h -1
intmain() { intk,m,n,@@ a[@@ 110][110@@ ],@@ sum=0; cin>>k; for(int@@ e@@ =1;@@ e@@ <=k;@@ e++) { cin>>m>>n; for(inti=1;i<=@@ m;i++) for(intj=1;j<=@@ n;j++) cin>>a[i][j]; if(m@@ ==1&&n@@ ==1) cout<<@@ a[1@@ ][1@@ ]<<endl; else { for(inti=1;i<=n;i++) sum=sum+@@ a[1]@@ [i]; for(inti=1;i<=@@ m;i++) sum=sum+@@ a[i]@@ [1]; for(inti=1;i<=n;i++) sum=sum+@@ a[m]@@ [i]; for(inti=1;i<=@@ m;i++) sum=sum+@@ a[i][@@ n]; sum=sum-@@ a[1@@ ][1@@ ]-@@ a[1@@ ][n@@ ]-@@ a[m@@ ][1@@ ]-@@ a[m@@ ][n]; cout<<sum<<endl; sum=0; } } return0; }  
c -1
h -1
0

intmain() { intn,k; inta[1000]; scanf("%d%d",&n,&k); inti,j,@@ r,@@ f; for(i=0;i<n;i++) { scanf("%d",&a[i]); } f=0; for(j=0;j<n;j++) { for(@@ r@@ =j+1@@ ;r@@ <n;@@ r++) { if(a[j]@@ +@@ a[r@@ ]==@@ k) { f@@ ++; } } } if(f@@ >0) { printf("yes"); } else printf("no"); return0; }  
c -1
h -1
intmain() { inta[@@ 13]={0,31,28,31,30,31,30,31,31,30,31,30,31}; int@@ mun@@ ,@@ day,@@ year,@@ i; intdays@@ =0; scanf("%d%d%d",&year,&@@ mun@@ ,&@@ day); days@@ +=@@ day; for(i=1;i<@@ mun@@ ;i++) { days@@ +=@@ a[i]; if(year%@@ 4==0&&year%100!=0@@ ||@@ year%400==0) days@@ +=1; } printf("%d",@@ days@@ ); return0; }  
c -1
h -1
0

intmain(intargc,char*argv[]) { intn,k,i,j,@@ shu@@ [1000],@@ y[@@ 1000][1000],@@ count=0; scanf("%d%d",&n,&k); for(i=0;i<n;i++) { scanf("%d",&@@ shu@@ [i]); } for(i=0;i<n;i++) { for(j=i+1;j<n;j++) { y@@ [i][j]=@@ shu@@ [i]+@@ shu@@ [j]; if(y@@ [i][j]==@@ k) count@@ ++;} } if(count@@ ==0) printf("no"); else printf("yes"); return0; }  
c -1
h -1
voidmain() { voidread@@ (intx[],int@@ y@@ [],int@@ a,int@@ b); void@@ change@@ (intx[],int@@ y@@ [],int@@ a,int@@ b); voidcombine@@ (intx[],int@@ y@@ [],int@@ a,int@@ b); intx[@@ 10],@@ y[@@ 10],@@ a,b; scanf("%d%d",&a,&b); read@@ (@@ x,y,@@ a,b); change@@ (@@ x,y,@@ a,b); combine@@ (@@ x,y,@@ a,b); } voidread@@ (intx[],int@@ y@@ [],int@@ a,int@@ b) { inti; charc; for(i=1;i<=@@ a;i++) scanf("%d@@ %c@@ ",&@@ x[i]@@ ,&c); for(i=1;i<=@@ b;i++) scanf("%d@@ %c@@ ",&@@ y@@ [i]@@ ,&c); } void@@ change@@ (intx[],int@@ y@@ [],int@@ a,int@@ b) { inti,j,t; for(i=1;i<=@@ a;i++) for(j=1;j<@@ a@@ +1@@ -i;j++) { if(x@@ [j]>@@ x@@ [j+1]) { t=@@ x@@ [j]; x@@ [j]=@@ x@@ [j+1]; x@@ [j+1]=t; } } for(i=1;i<=@@ b;i++) for(j=1;j<@@ b@@ +1@@ -i;j++) { if(y@@ [j]>@@ y@@ [j+1]) { t=@@ y@@ [j]; y@@ [j]=@@ y@@ [j+1]; y@@ [j+1]=t; } } } voidcombine@@ (intx[],int@@ y@@ [],int@@ a,int@@ b) { inti; printf("%d",@@ x@@ [1]); for(i=2;i<=@@ a;i++) printf("%d",@@ x[i]); for(i=1;i<=@@ b;i++) printf("%d",y@@ [i]); }  
c -1
h -1
0

voidorder@@ (inta[],intn) { inti,j,temp; for(i=0;i<n-1;i++) { for(j=n-1;j>i;j--) { if(a[j]@@ <a@@ [j-1]) { temp=@@ a@@ [j-1]; a@@ [j-1]=@@ a[j]; a[j]=@@ temp; } } } for(i=0;i<n-1;i++) printf("%d",a[i]); printf("%d",a[i]); } voidmain() { intm,n,@@ i; inta[@@ 50@@ ],b[@@ 50]; scanf("%d%d",&m,&n); for(i=0;i<m;i++) scanf("%d",&a[i]); for(i=0;i<n;i++) scanf("%d",&b[i]); order@@ (a,m); printf(""); order@@ (b,n); printf("\n"); }  
c -1
h -1
intmain() { inta[16@@ ],i,j,@@ k; while(1) { intn=0,@@ sum=0; for(i=0;;i++) { cin>>a[i]; if(a[i]==-1) break; else { if(a[i]!=0) n++; else break; } } if(a[0]==-1) break; for(j=0;j<n;j++) { for(k=0;k<n;k++) { if(a[j]==2*@@ a[k]) sum++; } } cout<<sum<<endl; } return0; }  
c -1
h -1
0

intmain() { inti,j,n,@@ max=0,@@ maxb@@ =0; scanf("%d",&n); int*@@ a=@@ (int*)malloc(n*sizeof(int)); int*@@ b=@@ (int*)@@ calloc@@ (n,@@ sizeof(int@@ )); for(i=@@ (@@ n-1)@@ ;i>=0;i--) scanf("%d",&a[i]); b[0]@@ =1; for(i=1;i<=@@ (n-1);i++) { max=0; for(j=0;j<=@@ (i@@ -1)@@ ;j++) { if(a[i]>=@@ a[j]&&@@ b[j]@@ >max) { max=@@ b[j]; } } b[i]=@@ max+1; } for(i=1;i<=@@ (n-1);i++) { if(b[i]>@@ maxb@@ ) maxb@@ =@@ b[i]; } printf("%d",@@ maxb@@ ); }  
c -1
h -1
intmain() { intn,i,@@ a[@@ 20001@@ ],@@ x=0,@@ t,@@ m; memset(a,0,@@ sizeof(a)); cin>>n; cin>>m; cout<<@@ m; a[m@@ ]=1; for(i=2;i<=n;i++) { cin>>t; if(a[@@ t@@ ]!=@@ 1) { cout<<""<<@@ t; a[t@@ ]=1; } } return0; }  
c -1
h -1
0

int@@ a=0,@@ i=0,@@ sum=1; voidf@@ (inti,int@@ a){ intj; for(j=i;j<=@@ sqrt(@@ a)@@ ;j++) if(a%@@ j@@ ==0){@@ sum@@ ++;@@ f(@@ j,@@ a/@@ j@@ );} } intmain(){ intn; cin>>n; while(@@ n){ cin>>a; f(@@ 2,@@ a); cout<<sum<<endl; n--; sum=1; } }  
c -1
h -1
void@@ readin@@ (int@@ ma@@ ,int@@ mb@@ ,@@ inta[@@ ],intb[@@ ]) { for(inti=0;i<@@ ma@@ ;i++)@@ cin>>a[i]; for(inti=0;i<@@ mb@@ ;i++)@@ cin>>b[i]; } void@@ rearange@@ (int@@ ma@@ ,int@@ mb@@ ,@@ inta[100@@ ],int@@ b[100@@ ]) { inttemp; for(inti=0;i<@@ ma@@ ;i++) for(intj=0;j<@@ ma@@ -1;j++) if(a[j]>a[j+1]) { inttemp; temp=a[j]; a[j]=a[j+1]; a[j+1]=temp; } for(inti=0;i<@@ mb@@ ;i++) for(intj=0;j<@@ mb@@ -1;j++) if(b[j]>b[j+1]) { int@@ temp=@@ b[j]; b[j]=b[j+1]; b[j+1]=@@ temp; } } int@@ printout@@ (int@@ ma@@ ,int@@ mb@@ ,@@ inta[@@ ],intb[@@ ]) { for(inti=0;i<@@ ma@@ ;i++)@@ cout<<a[i]@@ <<''; for(inti=0;i<@@ mb@@ -1;i++)@@ cout<<b[i]@@ <<''; cout<<b[@@ mb@@ -1]; } intmain() { int@@ ma@@ [1@@ ],@@ mb@@ [1@@ ],@@ a[100@@ ]={0},@@ b[100@@ ]={0},@@ c@@ [100]={0}; readin@@ (@@ 1,1,@@ ma@@ ,@@ mb@@ ); readin@@ (@@ ma@@ [0],@@ mb@@ [0],@@ a,b); rearange@@ (@@ ma@@ [0],@@ mb@@ [0],@@ a,b); printout@@ (@@ ma@@ [0],@@ mb@@ [0],@@ a,b); return0; }  
c -1
h -1
0

intmain(){ intk,@@ m,n; inta,b,@@ c,d,@@ s; a=@@ b=@@ c=@@ d=0; scanf("%d",&k); for(inti=0;i<@@ k;i++){ scanf("%d%d",&m,&n); intsz[@@ m@@ ][n]; for(intp@@ =0;p@@ <m@@ ;p++){ for(int@@ q@@ =0;q@@ <n;@@ q@@ ++){ scanf("%d",&@@ sz[@@ p@@ ][q@@ ]); } }@@ if(m@@ !=1@@ &&n@@ !=1@@ ){ for(int@@ e@@ =0;e@@ <n;@@ e@@ ++){ a=@@ a+@@ sz[0][@@ e@@ ]; b=@@ b+@@ sz[@@ m-1][@@ e@@ ]; } for(intj=1;j<@@ m-1@@ ;j++){ c=@@ c+@@ sz[j]@@ [n-1]; d=d+@@ sz[j]@@ [0]; } s=@@ a+@@ b+@@ c+@@ d; printf("%d\n",s); s=@@ a=@@ b=@@ c=@@ d@@ =0;} else{@@ printf("%d",@@ sz[0][@@ 0]@@ );} }@@ return0; }  
c -1
h -1
inta[1000][1000]; intmain() { intn; scanf("%d",&n); int@@ p,q; for(p=0;p@@ <n;p++) { for(q=0;q@@ <n;@@ q++) { scanf("%d",&(@@ a[p@@ ][q@@ ]@@ )); } } int@@ p1@@ =0,@@ p2@@ =0,@@ q1@@ ,@@ q2@@ ; for(p=0;p@@ <n;p++) { for(q=0;q@@ <n;@@ q++) { if(a[@@ p@@ ][q@@ ]==0) { p1=@@ p; q1=@@ q; break; } if(@@ p1@@ !=0) break; } if(@@ p1@@ !=0) break; } for(p=@@ n-1@@ ;p@@ >=0@@ ;p@@ --) { for(q=@@ n-1@@ ;q@@ >=0@@ ;q@@ --) { if(a[@@ p@@ ][q@@ ]==0) { p2=@@ p; q2@@ =@@ q; break; } if(@@ p2@@ !=0) break; } if(@@ p2@@ !=0) break; } intx; x@@ =(@@ p2@@ -@@ p1@@ -1)*(@@ q2@@ -@@ q1@@ -1); printf("%d",x); return0; }  
c -1
h -1
0

intmain() { double@@ x=0,@@ ratio@@ =0; inti=0,@@ num=0,@@ l1@@ =0,@@ l2@@ =0,@@ temp@@ =1; char@@ sequen1@@ [@@ LEN@@ ],@@ sequen2@@ [@@ LEN@@ ]; scanf("%lf",&x); scanf("%s",@@ sequen1@@ ); scanf("%s",@@ sequen2@@ ); l1=strlen(@@ sequen1@@ ); l2=strlen(@@ sequen2@@ ); if(l1!=l2@@ ) { printf("error"); temp=0; } else { for(i=0;i<l1;i++) { if((@@ sequen1@@ [i]!='A'&&@@ sequen1@@ [i]!='T'&&@@ sequen1@@ [i]!='G'&&@@ sequen1@@ [i]!='@@ C')||(@@ sequen2@@ [i]!='A'&&@@ sequen2@@ [i]!='T'&&@@ sequen2@@ [i]!='G'&&@@ sequen2@@ [i]!='@@ C')@@ ) { printf("error"); temp=0; break; } } } if(temp@@ ==1) { for(i=0;i<l1;i++) { if(@@ sequen1@@ [i]==@@ sequen2@@ [i]) { num++; } } ratio@@ =1.0*@@ num@@ /@@ l1; if(@@ ratio@@ >@@ x) { printf("yes"); } else { printf("no"); } } return0; }  
c -1
h -1
intmain() { intyear,month,day,@@ i,@@ n=0; int@@ monthday@@ [12]={31,28,31,30,31,30,31,31,30,31,30,31}; scanf("%d%d%d",&year,&month,&day); for(i=1;i<month;i++) {@@ n=n+@@ monthday@@ [i-1]; } n=n+@@ day; if(month@@ >2@@ &&(@@ year%4==0&&year%100!=0@@ ||@@ year%400==0)) n=n+1; printf("%d\n",n); return0; }  
c -1
h -1
0

structbook { intnum; char@@ ren@@ [26]; } main() { structbook@@ shu@@ [999]; intm,@@ i,j,k,@@ max=0,@@ p; inta[@@ 26]={0}; scanf("%d",&m); for(i=0;i<m;i++) { scanf("%d%s",&@@ shu[i].@@ num,@@ shu[i].@@ ren@@ ); for(j=0;@@ shu[i].@@ ren@@ [j]!='\0';j++) for(k=@@ 65@@ ;k<@@ 91@@ ;k++) if(@@ shu[i].@@ ren@@ [j]==k) a[k@@ -65]++; } for(i=0;i<26;i++) if(max<@@ a[i]) max=a[i]; for(i=0;i<26;i++) if(max@@ ==@@ a[i]) { p@@ =i+65; printf("%c\n%d\n",@@ p,@@ a[p@@ -65@@ ]); } for(i=0;i<m;i++) for(j=0;@@ shu[i].@@ ren@@ [j]!='\0';j++) if(p==@@ shu[i].@@ ren@@ [j]) printf("%d\n",@@ shu[i].@@ num); }  
c -1
h -1
voidmain() { charID@@ [100][@@ 10@@ ]={'\0'},@@ young@@ [100][@@ 10@@ ]={'\0'},@@ old@@ [100][@@ 10@@ ]={'\0'},@@ wae@@ [100@@ ]={'\0'}; intage@@ [100]={0},@@ y@@ [100]={0},@@ o@@ [100]={0}; inti,n; intm=0,@@ k=0,@@ temp=0; inta,b; scanf("%d",&n); for(i=0;i<n;i++) scanf("%s%d",@@ ID@@ [i],&@@ age[i]); for(i=0;i<n;i++) { if(age[i]@@ <60) { strcpy(@@ young@@ [m@@ ],@@ ID@@ [i]); y@@ [m]=@@ age[i]; m++; } else { strcpy(old@@ [k],@@ ID@@ [i]); o@@ [k]=@@ age[i]; k++; } } for(a=0;a@@ <k@@ -1;@@ a++) { for(b=0;b@@ <@@ k-@@ a@@ -1;@@ b++) { if(@@ o@@ [b@@ ]<@@ o@@ [b@@ +1]) { temp=@@ o@@ [b@@ ]; o@@ [b@@ ]=@@ o@@ [b@@ +1]; o@@ [b@@ +1]=@@ temp; strcpy(@@ wae@@ ,@@ old@@ [b@@ ]); strcpy(old@@ [b@@ ],@@ old@@ [b@@ +1@@ ]); strcpy(old@@ [b@@ +1],@@ wae@@ ); } } } for(a=0;a@@ <k;@@ a++) printf("%s\n",old@@ [a@@ ]); for(b=0;b@@ <m;@@ b++) printf("%s\n",@@ young@@ [b@@ ]); }  
c -1
h -1
0

intmain() { inta,@@ i,@@ t@@ ,j,@@ sum,@@ m,n; scanf("%d\n",&@@ t); for(j=0;j<@@ t;j++) { scanf("%d%d\n",&@@ m,&n); sum=0; for(i=1;i<=@@ m*@@ n;i++) { scanf("%d",&a); if((i@@ <=@@ n@@ )||(@@ i@@ >@@ (m@@ *@@ n-@@ n)@@ )||(@@ i@@ %n@@ ==1)@@ ||(@@ i@@ %n@@ ==0)@@ )@@ sum+=@@ a; } printf("%d\n",sum); } return0; }  
c -1
h -1
intmain() { inta,b; scanf("%d%d",&a,&b); int@@ c[100]; int@@ d@@ [100]; inti,@@ t,@@ r; i=0; do { scanf("%d",&@@ c[i]); i++; }@@ while(i<@@ a); i=0; do { scanf("%d",&@@ d[i]); i++; }@@ while(i<@@ b); t=0; do { i=0; while(i<@@ a@@ -1@@ -@@ t) { if(c@@ [i]>@@ c@@ [i+1]) { r=@@ c[i]; c[i]=@@ c@@ [i+1]; c@@ [i+1]=@@ r; } i++; } t++; }while(@@ t@@ <a@@ -1); t=0; do { i=0; while(i<@@ b@@ -1@@ -@@ t) { if(d@@ [i]>@@ d@@ [i+1]) { r=@@ d[i]; d[i]=@@ d@@ [i+1]; d@@ [i+1]=@@ r; } i++; } t++; }while(@@ t@@ <b@@ -1); printf("%d",c@@ [0]); i=1; do { printf("%d",c[i]); i++; }@@ while(i<@@ a); i=0; do { printf("%d",@@ d[i]); i++; }@@ while(i<@@ b); return0; }  
c -1
h -1
0

intmain() { introw,col,@@ a[100][100],@@ i,j,@@ m,@@ M@@ ,@@ k; scanf("%d%d",&row,&col); for(i=0;i<row;i++){ for(j=0;j<col;j++) scanf("%d",&a[i][j]); } if(row@@ >@@ col@@ ){@@ M@@ =@@ row@@ ;@@ m=@@ col@@ ;} else{@@ M@@ =@@ col@@ ;@@ m=@@ row@@ ;} for(k=0;k<@@ m@@ ;k++){ for(i=0;i<=@@ k;i++) printf("%d\n",a[i]@@ [k-i]); } if(row@@ >@@ col@@ ){ for(k=0;k<@@ M@@ -m@@ ;k++){ for(i=0;i<m;i++) printf("%d\n",@@ a[i@@ +k@@ +1@@ ][m@@ -i@@ -1]); } } else{ for(k=0;k<@@ M@@ -m@@ ;k++){ for(i=0;i<m;i++) printf("%d\n",a[i]@@ [m@@ -i@@ +k@@ ]); } } for(k=1;k<@@ m@@ ;k++){ for(i=0;i<m@@ -@@ k;i++) printf("%d\n",a[@@ row@@ -m@@ +i@@ +k@@ ][col@@ -i@@ -1]); } return0; }  
c -1
h -1
main() { chara[@@ 300]; char@@ b[100@@ ],@@ c[100]; gets(a); gets(b); gets(c); int@@ x1,@@ x2,@@ x3@@ ,@@ i,j,k; x1@@ =strlen(a); x2@@ =strlen(b); x3@@ =strlen(c); for(i=0;i<=@@ x1@@ -@@ x2@@ ;i++) { for(j=0;j<=@@ x2@@ -1;j++) { if(b[j]@@ !=@@ a[i+j@@ ]) { break; } } if(j==@@ x2@@ ) { for(k=0;k<=@@ x2@@ -1;k++) { a[i@@ +k@@ ]=@@ c@@ [k]; } break; } } puts(@@ a); getchar();getchar();getchar();getchar();@@ getchar();getchar();@@ getchar();@@ getchar(); }  
c -1
h -1
0

intmain() { intm,@@ M@@ ,i,j,@@ sum[@@ 1000]; int@@ row@@ [1000],@@ col@@ [1000]; intsz[@@ 1000][1000]; scanf("%d",&@@ M@@ ); for(m=0;m<@@ M@@ ;m++) { sum@@ [m@@ ]=0; for(i=0;i<@@ row@@ [m]@@ ;i++) { for(j=0;j<col@@ [m]@@ ;j++) { sz@@ [i][j]@@ =0; } } scanf("%d%d",&row@@ [m]@@ ,&@@ col@@ [m]); for(i=0;i<@@ row@@ [m]@@ ;i++) { for(j=0;j<col@@ [m]@@ ;j++) { scanf("%d",&sz[i][j]); } } for(j=0;j<col@@ [m]@@ ;j++) { sum@@ [m@@ ]+=@@ sz[0]@@ [j]; sum@@ [m@@ ]+=@@ sz[@@ row@@ [m]@@ -1][j]; } for(i=0;i<@@ row@@ [m]@@ ;i++) { sum@@ [m@@ ]+=@@ sz[i]@@ [0]; sum@@ [m@@ ]+=@@ sz[i]@@ [@@ col@@ [m]@@ -1]; } sum@@ [m]=@@ sum@@ [m@@ ]-@@ sz[0][@@ 0]-@@ sz[@@ row@@ [m]@@ -1@@ ][col@@ [m]@@ -1]@@ -@@ sz[0][@@ col@@ [m]@@ -1]@@ -@@ sz[@@ row@@ [m]@@ -1@@ ][0]; } for(m=0;m<@@ M@@ ;m++) printf("%d\n",sum@@ [m]); return0; }  
c -1
h -1
intmain() {@@ intn,i,@@ k; inta[20000]; scanf("%d\n",&n); for(i=0;i<=@@ (n-1);i++) scanf("%d",&a[i]); for(i=@@ (@@ n-1)@@ ;i>=0;i--) {@@ for(k=i@@ -1@@ ;k>=0@@ ;k--) if((@@ a[i]@@ -@@ a[k]@@ )@@ ==0){@@ a[i]@@ =0;@@ break;} } if(a[0]@@ >@@ 9@@ )@@ printf("%d",a[0]); for(i=1;i<=@@ (n-1);i++) {@@ if(a[i]>@@ 9) printf("%d",a[i]); } }  
c -1
h -1
0

intmain(){ intn,k,@@ i,j; intsz[@@ 10000]; scanf("%d%d",&n,&k); for(i=0;i<n-1;i++){ scanf("%d",&sz[i]); } if(i@@ =@@ n-1){ scanf("%d",&sz[i]); }@@ int@@ r=0; for(i=0;i<n;i++){ for(j=i+1;j<n;j++){ if(sz[i]+sz@@ [j]==k){ r@@ =1; break; }else{ continue; } } } if(r@@ ==1){ printf("yes"); }elseif(@@ r@@ ==0){ printf("no"); } return0; }  
c -1
h -1
voidmain() { intn,i,j,@@ max,@@ a[100],b[100]; scanf("%d",&n); for(i=0;i<n;i++) { scanf("%d",&a[i]); } for(i=0;i<n;i++){@@ b[i]@@ =1;} for(i=n-2;i>=0;i--) { max=0; for(j=n-1;j>i;j--) { if(a[i]>=a[j]) { if(b[j]@@ >max){max=@@ b[j]@@ ;} } } b[i]@@ +=@@ max; } max=0; for(i=0;i<n;i++) { if(b[i]>max) {max=@@ b[i]@@ ;} } printf("%d",max); }  
c -1
h -1
0

intf@@ (intx,int@@ y){ if(@@ (int)@@ pow@@ (x,@@ 0@@ .@@ 5@@ )@@ <@@ y)@@ return1; int@@ d=1; for(inti=@@ y@@ ;i<=@@ (int)@@ pow@@ (x,@@ 0@@ .@@ 5@@ );i++) if((x@@ %i@@ )@@ ==0) d@@ +=@@ f(@@ x@@ /i,i); return@@ d; } intmain(){ intn,m; cin>>n; for(intk@@ =1@@ ;k<=@@ n;k++){ cin>>m; cout<<@@ f(@@ m,@@ 2)<<endl; } return0; }  
c -1
h -1
structstu { int@@ no; intchi; intmath; intsum; structstu*next; }; voidmain() { structstu@@ a,*@@ head,*@@ p,*@@ tail@@ ,*@@ q; intk,i,@@ m1,@@ m2@@ ,@@ m3@@ ,@@ n1,n2,@@ n3@@ ,@@ temp1@@ ,@@ temp2@@ ; head=NULL; scanf("%d",&k); for(i=0;i<k;i++) { p=(struct@@ stu@@ *)malloc(LEN); scanf("%d%d%d",&@@ p->@@ no@@ ,&p->@@ chi@@ ,&p->@@ math); p->@@ sum=(@@ p->@@ chi@@ +p->@@ math); if(head@@ ==NULL) head=@@ tail@@ =p; else { tail@@ ->next=p; tail@@ =p; tail@@ ->next@@ =&@@ a; } } a.@@ next@@ =NULL; p=head; for(q=@@ p->next@@ ;q@@ ->next@@ !=NULL;@@ q=q@@ ->next) { if(p->@@ sum<@@ q->@@ sum) { temp1@@ =@@ q->@@ sum; q->@@ sum=@@ p->@@ sum; p->@@ sum=@@ temp1@@ ; temp2@@ =@@ q->@@ no; q->@@ no@@ =p->@@ no; p->@@ no=@@ temp2@@ ; } } m1@@ =p->@@ no; n1@@ =p->@@ sum; head=@@ p@@ ->next; p=head; for(q=@@ p->next@@ ;q@@ ->next@@ !=NULL;@@ q=q@@ ->next) { if(p->@@ sum<@@ q->@@ sum) { temp1@@ =@@ q->@@ sum; q->@@ sum=@@ p->@@ sum; p->@@ sum=@@ temp1@@ ; temp2@@ =@@ q->@@ no; q->@@ no@@ =p->@@ no; p->@@ no=@@ temp2@@ ; } } m2@@ =p->@@ no; n2@@ =p->@@ sum; head=@@ p@@ ->next; p=head; for(q=@@ p->next@@ ;q@@ ->next@@ !=NULL;@@ q=q@@ ->next) { if(p->@@ sum<@@ q->@@ sum) { temp1@@ =@@ q->@@ sum; q->@@ sum=@@ p->@@ sum; p->@@ sum=@@ temp1@@ ; temp2@@ =@@ q->@@ no; q->@@ no@@ =p->@@ no; p->@@ no=@@ temp2@@ ; } } m3@@ =p->@@ no; n3@@ =p->@@ sum; printf("%d%d\n%d%d\n%d%d\n",@@ m1,@@ n1,@@ m2@@ ,@@ n2,@@ m3@@ ,@@ n3@@ ); }  
c -1
h -1
0

intmain() { inti; long@@ int@@ year@@ [5],@@ month@@ [5],@@ day@@ [5],@@ t@@ [5@@ ]; long@@ intc[@@ 12@@ ]={0,31,@@ 60@@ ,@@ 91@@ ,@@ 121@@ ,@@ 152@@ ,@@ 182@@ ,@@ 213@@ ,@@ 244@@ ,@@ 274@@ ,@@ 305@@ ,@@ 335@@ },@@ b[@@ 12@@ ]={0,31,@@ 59@@ ,@@ 90@@ ,@@ 120@@ ,@@ 151@@ ,@@ 181@@ ,@@ 212@@ ,@@ 243@@ ,@@ 273@@ ,@@ 304@@ ,@@ 334@@ }; for(i=0;i<=@@ 4;i++) { scanf("%ld@@ %ld@@ %ld@@ ",&@@ year@@ [i],&@@ month@@ [i],&@@ day@@ [i]); if(@@ year[i]@@ %4==0&&@@ year[i]@@ %100!=0@@ ||@@ year[i]@@ %@@ 400==0)@@ t@@ [i]=@@ c[@@ month@@ [i]@@ -1]@@ +day@@ [i]; else@@ t@@ [i]=@@ b[@@ month@@ [i]@@ -1]@@ +day@@ [i]; } for(i=0;i<=@@ 4@@ ;i++)@@ printf("%ld@@ \n",@@ t@@ [i]); return0; }  
c -1
h -1
intmain() { intn,i,j,@@ a,b,c,d,@@ e=0,@@ p,q,@@ s,@@ t,@@ sum; scanf("%d",&n); for(i=1;i<=n;i++) {@@ for(j=1;j<=n;j++) {@@ scanf("%d",&a); if(a==0) break; } if(j@@ <n) break;} for(p=@@ j@@ +1@@ ;p@@ <=n;@@ p++) {scanf("%d",&@@ b); if(b==@@ 255) break; } q=@@ p@@ +1; while(@@ q@@ <=@@ n) {scanf("%d",&@@ c); q++; } for(@@ s@@ =i+1@@ ;s@@ <=n;@@ s++) {@@ for(t@@ =1;t@@ <=n;@@ t++) {scanf("%d",&@@ d); if(d@@ ==0) {@@ e=@@ e@@ +1;@@ }}} sum=(@@ e@@ -@@ (p@@ -j@@ ))@@ /2@@ *(p@@ -j@@ -2); printf("%d\n",sum); return0; }  
c -1
h -1
0

intmain() { int@@ matrix@@ [@@ 99@@ ][@@ 99@@ ],@@ row,@@ column@@ ,@@ startcolumn@@ =0,@@ startrow@@ =1; cin>>row@@ >>@@ column@@ ; for(inti=0;i<row;i++) { for(intj=0;j<@@ column@@ ;j++) { cin>>@@ matrix@@ [i][j]; } } int@@ x=0,@@ y; do { y=@@ startcolumn@@ ; while(@@ x@@ <row@@ &&@@ y@@ >=0) { cout<<@@ matrix@@ [x@@ ][y@@ ]<<endl; x@@ ++;@@ y@@ --; } x@@ =0;@@ startcolumn@@ ++; }while(@@ startcolumn@@ <@@ column@@ ); intm,@@ n=@@ column@@ -1; do { m=@@ startrow@@ ; while(m@@ <row@@ &&n@@ >=0) { cout<<@@ matrix@@ [m@@ ][n@@ ]<<endl; m@@ ++@@ ;n@@ --; } startrow@@ ++;@@ n=@@ column@@ -1; }while(@@ startrow@@ <row@@ ); return0; }  
c -1
h -1
intmain(){ double@@ e; char@@ zf@@ [2][@@ 501],@@ count=0,@@ c,@@ w@@ =0; scanf("%lf@@ %c@@ ",&@@ e@@ ,&c); gets(@@ zf@@ [0]); gets(@@ zf@@ [1]); int@@ a=strlen(@@ zf@@ [0]@@ ),@@ b=strlen(@@ zf@@ [1]); if(a!=@@ b){ printf("error"); }else{ for(intm=0;m@@ <a@@ ;m++){ for(int@@ o@@ =0;@@ o@@ <@@ 2;@@ o@@ ++){ if(@@ zf@@ [@@ o@@ ][m@@ ]!='@@ A'&&@@ zf@@ [@@ o@@ ][m@@ ]!='@@ T'&&@@ zf@@ [@@ o@@ ][m@@ ]!='@@ G'&&@@ zf@@ [@@ o@@ ][m@@ ]!='@@ C'){ w@@ ++; } } } if(w@@ !=0){ printf("error"); }else{ for(inti=0;i<@@ a;i++){ if(@@ zf@@ [0]@@ [i]==@@ zf@@ [1]@@ [i]){ count++; } } if(1.0*@@ count@@ /@@ a@@ >@@ e@@ ){ printf("yes"); }else{ printf("no"); } } } return0; }  
c -1
h -1
0

voidmain() { structbook { int@@ bianhao@@ ; char@@ zuozhe@@ [100]; }a[@@ 1000]; inti,j,n,@@ l,@@ max; intb[@@ 26]={0}; scanf("%d",&n); for(i=0;i<n;i++) scanf("%d%s",&@@ a[i].@@ bianhao@@ ,@@ a[i].@@ zuozhe@@ ); for(i=0;i<n;i++) for(j=0;@@ a[i].@@ zuozhe@@ [j]!='\0';j++) b[@@ a[i].@@ zuozhe@@ [j]@@ -65]++; max=@@ b[0]; l=0; for(i=1;i<=@@ 25;i++) { if(b[i]>max) { max=b[i]; l@@ =i; } } printf("%c\n",@@ l@@ +65); printf("%d\n",max); for(i=0;i<n;i++) for(j=0;@@ a[i].@@ zuozhe@@ [j]!='\0';j++) if(a[i].@@ zuozhe@@ [j]==@@ (@@ l@@ +65@@ )) { printf("%d\n",@@ a[i].@@ bianhao@@ ); break; } }  
c -1
h -1
intmain() { inta,b,@@ i,j@@ =1,@@ c=0,@@ l@@ =1,@@ m,n,@@ k; scanf("%d\n",&n); ints[@@ 20000@@ ]={0},@@ t[@@ 20000@@ ]={0}; for(i=0;i<n;i++){@@ scanf("%d",&@@ s[i]@@ );} t@@ [0]=@@ s[@@ 0]; for(l=1;l@@ <n;@@ l++) {@@ c=0; for(i=0;i<l;i++) {if(@@ s[@@ l@@ ]==@@ s[i]@@ ){@@ c@@ =1;break;} } if(c@@ ==0){@@ t@@ [j]=@@ s[@@ l@@ ]@@ ;j++@@ ;} } for(m@@ =0;@@ (@@ c=@@ t@@ [m@@ +1@@ ])@@ !=0@@ ;m++) {printf("%d",@@ t@@ [m]@@ );} printf("%d",@@ t@@ [m]); return0; }  
c -1
h -1
0

intmain() { inti,j,n,@@ k,@@ c,@@ big@@ =0; intnum[@@ 30@@ ]={0},@@ a[1000]; charname@@ [1000][@@ 20]; scanf("%d",&n); for(i=0;i<n;i++) { scanf("%d%s",&a[i],@@ name@@ [i]); } for(k=0;k<26;k++) { for(i=0;i<n;i++) { for(j=0;j<strlen(@@ name@@ [i]@@ );j++) { if(name@@ [i][j]==@@ k@@ +'A'@@ ) num@@ [k]=@@ num@@ [k]@@ +1; } } } for(i=0;i<26;i++) { if(@@ big@@ <@@ num@@ [i]) {@@ big@@ =@@ num[i]; c@@ =i@@ +'A'@@ ; } } printf("%c\n",@@ c); printf("%d\n",@@ big@@ ); for(i=0;i<n;i++) { for(j=0;j<strlen(@@ name@@ [i]@@ );j++) { if(name@@ [i][j]==@@ c) printf("%d\n",a[i]); } } return0; }  
c -1
h -1
intmain() { introw,col,@@ a[100][100],@@ k,@@ j,@@ i,@@ m; scanf("%d%d",&row,&col); for(j=0;j<row@@ ;j++){ for(i=0;i<@@ col@@ ;i++){ scanf("%d",&a[j]@@ [i]); } } for(i=0;i<@@ col@@ ;i++){ j=0; for(m@@ =i;@@ (j@@ <row@@ )&&(@@ m@@ >=0@@ )@@ ;j++,@@ m@@ --){ printf("%d\n",@@ a[j]@@ [m]); } } for(j=1;j<@@ row@@ ;j++){ i=@@ col-1; for(m=@@ i,@@ k@@ =j@@ ;@@ (k@@ <row@@ )&&(@@ m@@ >=0@@ )@@ ;k@@ ++,@@ m@@ --){ printf("%d\n",@@ a[k@@ ][m@@ ]); } } return0; }  
c -1
h -1
0

voidmain() { intk,i,j,@@ t=0,@@ sum@@ [100@@ ]={0@@ }@@ ,*p; scanf("%d",&k); for(t=0;t@@ <k;@@ t++) { intm,n; scanf("%d%d",&m,&n); p=@@ (int*)malloc(sizeof(int)@@ *@@ m@@ *n); for(i=0;i<m;i++) { for(j=0;j<n;j++) { scanf("%d",p@@ +i@@ *@@ n@@ +j); if(i==0||i==@@ m-1@@ ||j@@ ==0||j==@@ n-1)@@ sum[@@ t@@ ]+=@@ *(p@@ +i@@ *@@ n@@ +j); } } } for(t=0;t@@ <k;@@ t++) printf("%d\n",@@ sum[@@ t@@ ]); }  
c -1
h -1
intmain(){ intn,i,k,@@ t; cin>>n; inta[n]; for(i=0;i<n;i++) cin>>a[i]; for(i=0;i<n;i++) for(k@@ =i+1@@ ;k<@@ n;k++) while((@@ a[k]==@@ a[i]@@ )&&(@@ k@@ <n@@ )) {@@ for(@@ t=@@ k;@@ t@@ <@@ n-1@@ ;t++) a[t@@ ]=a[@@ t@@ +1]; n@@ --@@ ;} for(i=0;i<n-1;i++) cout<<a[i]<<""; cout<<a[@@ n-1]; return0; }  
c -1
h -1
0

main() { intn,@@ b[100@@ ],@@ d@@ [100],@@ j=0,@@ k,@@ l,@@ t,@@ i; scanf("%d",&n); chara[@@ n@@ ][@@ 10@@ ],c[@@ n@@ ][10]; for(i=0;i<n;i++) scanf("%s%d",@@ a[i],&@@ b[i]); k=0; for(i=0;i<n;i++) { if(b[i]@@ >=60) { d@@ [k]=@@ b[i]; strcpy(@@ c@@ [k],@@ a[i]); k++; } } l=@@ k; char@@ r@@ [10]; for(k=0;k<@@ l@@ -1;k++) { for(j=0;j<l@@ -1@@ -@@ k;j++) if(d@@ [j]<@@ d@@ [j+1]) { t=@@ d@@ [j]; d@@ [j]=@@ d@@ [j+1]; d@@ [j+1]=t; strcpy(@@ r,@@ c@@ [j]); strcpy(@@ c@@ [j],@@ c@@ [j+1]); strcpy(@@ c@@ [j+1],@@ r); } } for(j=0;j<l;j++) { printf("%s\n",@@ c@@ [j]); } for(i=0;i<n;i++) { if(b[i]@@ <60) printf("%s\n",@@ a[i]); } }  
c -1
h -1
intmain(){ inta[@@ 20001@@ ],@@ i,j,k,@@ m=0,@@ n=0; cin>>n; for(i=1;i<=n;i++) cin>>a[i]; for(i=2;i<=n;i++) {@@ for(j=1;j<i;j++) {@@ if(a[j]==a[i]) { a[i]=@@ 10000@@ ; } }} cout<<@@ a[1]; for(i=2;i<=@@ n-@@ m;i++) if(a[i]!=@@ 10000@@ ) {@@ cout<<""<<@@ a[i];} return0; }  
c -1
h -1
0

intmain() { intm,n,@@ n1@@ [100],@@ n2@@ [100],@@ o@@ [@@ 200]; int*@@ p1@@ =&@@ m@@ ,*@@ p2@@ =&@@ n; void@@ get@@ (int*@@ p1,int*p2@@ ,int@@ m1@@ [],int@@ m2@@ [@@ ]); voidsort@@ (int*p,int@@ m[@@ ]); void@@ cpy@@ (int*@@ p1,int*p2@@ ,int@@ m1@@ [],int@@ m2@@ [],int@@ m[@@ ]); void@@ put@@ (int*@@ p1,int*p2@@ ,int@@ m[@@ ]); get@@ (@@ p1,@@ p2@@ ,@@ n1,n2@@ ); sort(@@ p1,@@ n1); sort(@@ p2@@ ,@@ n2); cpy@@ (@@ p1,@@ p2@@ ,@@ n1,n2,@@ o@@ ); put@@ (@@ p1,@@ p2@@ ,@@ o@@ ); return0; } void@@ get@@ (int*@@ p1,int*p2@@ ,int@@ m1@@ [],int@@ m2@@ []) { inti; scanf("%d@@ %d",@@ p1,@@ p2@@ ); for(i=0;i<*@@ p1@@ ;i++)@@ scanf("%d",&@@ m1@@ [i]); for(i=0;i<*@@ p2@@ ;i++)@@ scanf("%d",&@@ m2@@ [i]); } voidsort@@ (int*p,int@@ m@@ []) { inti,j,k; for(i=0;i<*@@ p@@ ;i++) for(j=i+1@@ ;j@@ <*@@ p@@ ;j++) { if(m@@ [i]>@@ m@@ [j]) { k=@@ m[i]; m@@ [i]=@@ m@@ [j]; m@@ [j]=@@ k; } } } void@@ cpy@@ (int*@@ p1,int*p2@@ ,int@@ m1@@ [],int@@ m2@@ [],int@@ m@@ []) { inti,j; for(i=0,j@@ =0@@ ;i<*@@ p1@@ ;i++,j@@ ++)@@ m@@ [i]=@@ m1@@ [i]; for(j=0@@ ;i<*@@ p1@@ +*@@ p2@@ ;i++,j@@ ++)@@ m@@ [i]=@@ m2@@ [j]; } void@@ put@@ (int*@@ p1,int*p2@@ ,int@@ m@@ []) { inti; printf("%d",m@@ [0]); for(i=1@@ ;i<*@@ p1@@ +*@@ p2@@ ;i++)@@ printf("%d",@@ m[i]); }  
c -1
h -1
intmain() { inti,@@ num,@@ s,@@ a[@@ 101]; while(1) { scanf("%d",&@@ s); if(s@@ ==-1)break; num=0; for(i=0;i<@@ 101@@ ;i++) a[i]=0; a[@@ s@@ ]=1; while(@@ scanf("%d",&@@ s)@@ ==1&&@@ s@@ !=0) a[@@ s@@ ]=1; for(i=0;i<@@ 50@@ ;i++) if(a[i]@@ ==1&&@@ a[@@ 2*@@ i@@ ]@@ ==1) num++; printf("%d\n",num); } return0; }  
c -1
h -1
0

intmain() { intn; inta[@@ N]; inti,j; scanf("%d",&n); for(i=0;i<n;i++) { scanf("%d",&a[i]); } for(i=0;i<n;i++) { if(i==0) { printf("%d",a[i]); } else { for(j=0;j<i;j++) { if(a[j]==a[i]) { break; } } if(j==i) { printf("%d",a[i]); } elseif(@@ j@@ <@@ i) { continue; } } } return0; }  
c -1
h -1
intmain() { structstu@@ { intchi; int@@ ma; intsum; inti; }; structstu@@ m[@@ 100000],@@ temp; intj,@@ n; scanf("%d",&n); structstu*@@ p=@@ m; structstu*@@ q; for(@@ ;p<@@ m+@@ n;@@ p@@ +=@@ 1) { scanf("%d%d%d",&@@ (*p).@@ i@@ ,&@@ (*p).@@ chi@@ ,&@@ (*p).@@ ma@@ ); (*p).@@ sum=(@@ *p@@ ).@@ chi@@ +@@ (*p).@@ ma; } for(p=@@ m@@ ;p<@@ m+@@ n-1@@ ;p++) { for(q=@@ p@@ +1@@ ;q@@ <@@ m+@@ n;@@ q++) { if((@@ *p@@ ).@@ sum<@@ (*@@ q@@ ).@@ sum) { temp@@ =*@@ p; *p@@ =*@@ q; *@@ q=@@ temp; } } if(p==@@ m+@@ 2) break; } for(p=@@ m@@ ;p<@@ m+@@ 3@@ ;p++) { printf("%d%d\n",@@ (*p).@@ i,@@ (*p).@@ sum); } return0; }  
c -1
h -1
0

main() { intm=0,@@ n,i,j,@@ t=0; intnum@@ [100]; inta[100]; charstring@@ [11]; char@@ stm@@ [100][@@ 11]; charstr@@ [100][@@ 11]; scanf("%d",&n); for(i=0;i<n;i++) { scanf("%s",@@ stm@@ [i]); scanf("%d",&@@ num[i]); } j=0; for(i=0;i<n;i++) { if(num@@ [i]@@ >=60) { a[j]=@@ num[i]; strncpy@@ (@@ str@@ [j],@@ stm@@ [i],@@ 10@@ ); j++; t@@ =j@@ -1; } } for(j=0;j<@@ t;j++) { for(i=0;i<@@ t@@ -j;i++) { if(a[i]@@ <@@ a[i+1]) { m=@@ a[i]; a[i]=a[i+1]; a[i+1]=@@ m; strncpy@@ (@@ string,@@ str@@ [i],@@ 10@@ ); strncpy@@ (@@ str@@ [i],@@ str@@ [i+1],@@ 10@@ ); strncpy@@ (@@ str@@ [i+1],@@ string,@@ 10@@ ); } } } for(i=0;i<=@@ t;i++) printf("%s\n",@@ str[i]); for(i=0;i<n;i++) { if(num@@ [i]@@ <60) printf("%s\n",@@ stm@@ [i]); } getchar(); getchar(); }  
c -1
h -1
intmain() { intt; inta[16],@@ i,j,k,@@ count; while(cin>>@@ t) { count=0; if(t@@ <0@@ )return0; a[0]=@@ t; for(i=1;i<@@ 16@@ ;i++) { cin>>a[i]; if(a[i]==0)break; } for(j=0;j<i;j++) { for(k=0;k<i;k++) { if(a[k@@ ]==2*@@ a[j])@@ count++; } } cout<<count<<endl; } }  
c -1
h -1
0

intf@@ (intm,int@@ min); intmain() { intn,m,@@ i; scanf("%d",&n); for(i=0;i<n;i++) { scanf("%d",&m); printf("%d\n",@@ f(@@ m,@@ 2)); } return0; } intf@@ (intm,int@@ min) { intcount@@ =1,i; if(m==1) return1; elseif(m==@@ 2) return1; else { for(i=min@@ ;i<=sqrt(@@ m@@ );i++) { if(m@@ %i==0) { count+=@@ f(@@ m@@ /i,i); } } returncount; } }  
c -1
h -1
typedef@@ struct { charID[10]; intage; }@@ patient@@ ; patient@@ pat@@ [100]; int@@ cmp@@ (@@ constvoid@@ *,@@ constvoid*@@ ); intmain() { intn; inti; scanf("%d",&n); for(i=0;i<n;i++) { scanf("%s",@@ pat[i].@@ ID); scanf("%d",&@@ pat@@ [i].age); } qsort(@@ pat@@ ,@@ n,@@ sizeof(@@ patient@@ ),@@ cmp@@ ); for(i=0;i<n;i++) { printf("%s\n",@@ pat[i].@@ ID); } return0; } int@@ cmp@@ (constvoid*@@ _p1@@ ,@@ constvoid*@@ _p2@@ ) { patient@@ *@@ p1@@ =(@@ patient@@ *)@@ _p1@@ ; patient@@ *p2@@ =(@@ patient@@ *)@@ _p2@@ ; if(p1->age@@ >=60&&@@ p1->age@@ <60) return-1; elseif(@@ p1->age@@ <60&&@@ p2->age@@ >=60) return1; elseif(@@ p1->age@@ >=60&&@@ p2->age@@ >=60) return@@ p2->age@@ -@@ p1->@@ age; else return0; }  
c -1
h -1
0

intf@@ (inta,intb) { int@@ c,@@ s=0,@@ i; c=@@ (int)sqrt(@@ a); for(i=b@@ ;i<=@@ c@@ ;i++) { if(a%i==0) s=s+@@ f(a@@ /i,i); } return@@ s@@ +1; } main() { intn,i; scanf("%d",&n); intnum[@@ 1000]; for(i=0;i<n;i++) { scanf("%d",&@@ num[i]); printf("%d\n",@@ f(@@ num@@ [i],@@ 2)); } }  
c -1
h -1
intmain() { inti,j,n,@@ k,@@ l,@@ z; inta[100],b[100],@@ f@@ [100]; char@@ d[@@ 30],@@ c@@ [100][@@ 30],@@ e@@ [100][@@ 30]; scanf("%d",&n); for(i=0,@@ z@@ =0;i<n;i++) { scanf("%s",@@ c[i]); scanf("%d",&a[i]); if(a[i]@@ >=60) {@@ b[@@ z@@ ]=@@ a[i];@@ f[@@ z@@ ]=@@ z@@ ;@@ strcpy(@@ e@@ [@@ z@@ ],@@ c[i]@@ );@@ a[i]@@ =0;z@@ ++;} } for(i=0;i<@@ z@@ ;i++) { for(j=i+1;j<@@ z@@ ;j++) { if(b[j]@@ >@@ b[i]) { strcpy(@@ d,@@ e@@ [i]@@ );strcpy(@@ e@@ [i],@@ e@@ [j]@@ );strcpy(@@ e@@ [j],@@ d); k=@@ b[i]@@ ;@@ b[i]=b[j]@@ ;@@ b[j]=@@ k; l=@@ f@@ [i];@@ f[i]=@@ f@@ [j];@@ f@@ [j]=@@ l; } if(b[i]==@@ b[j]) { if(f@@ [i]>@@ f@@ [j]) { strcpy(@@ d,@@ e@@ [i]@@ );strcpy(@@ e@@ [i],@@ e@@ [j]@@ );strcpy(@@ e@@ [j],@@ d); k=@@ b[i]@@ ;@@ b[i]=b[j]@@ ;@@ b[j]=@@ k; l=@@ f@@ [i];@@ f[i]=@@ f@@ [j];@@ f@@ [j]=@@ l; } } } } for(i=0;i<@@ z@@ ;i++) printf("%s\n",@@ e@@ [i]); for(i=0;i<n;i++) { if(a[i]!=0) printf("%s\n",@@ c[i]); } return0; }  
c -1
h -1
0

struct@@ Patient { charid[10]; intage; intnum; }@@ patient@@ [100]; intmain() { intn; inta,b,c; scanf("%d",&n); inti,j,@@ k=0; for(i=0;i<=n-1;i++) { scanf("%s%d",&@@ patient@@ [i].@@ id,@@ &@@ patient@@ [i].age); patient@@ [i].@@ num@@ =i; } ints@@ [100]; for(i=0;i<=@@ 99@@ ;i++) { s[i]=@@ i; } for(i=0;i<=@@ n-2;i++) { for(j=0;j<=@@ n-2@@ ;j++) { if(@@ patient@@ [@@ s[j]@@ ].age@@ <@@ patient@@ [s@@ [j+1]@@ ].age) { a=@@ s[j]; s[j]=@@ s@@ [j+1]; s@@ [j+1]=@@ a; } } } for(i=0;i<=n-1;i++) { if(@@ patient@@ [i].age>=60) k=k+1; } for(i=0;i<=@@ k@@ -2;i++) { for(j=0;j<=@@ k@@ -2@@ ;j++) { if(s@@ [j]>@@ s@@ [j+1]@@ &&@@ patient@@ [@@ s[j]@@ ].age@@ ==@@ patient@@ [s@@ [j+1]@@ ].age) { a=@@ s[j]; s[j]=@@ s@@ [j+1]; s@@ [j+1]=@@ a; } } } for(i=k@@ ;i<=@@ n-2;i++) { for(j=k@@ ;j<=@@ n-2@@ ;j++) { if(s@@ [j]>@@ s@@ [j+1]) { a=@@ s[j]; s[j]=@@ s@@ [j+1]; s@@ [j+1]=@@ a; } } } for(i=0;i<=n-1;i++) { printf("%s\n",@@ patient@@ [@@ s[i]@@ ].id); } return0; }  
c -1
h -1
voidmain() { intn,@@ p,@@ a=0,@@ b,@@ m=0,@@ flag=0,@@ i; scanf("%d",&n); for(i=1;i<=@@ n*@@ n;i++) { scanf("%d",&@@ p); if(p@@ ==0) { if(m==0) { flag=1; a++; m++; } else { if(flag==1) { m++; a++; } else { m++; } } } else { flag=0; } } b=@@ m@@ /2@@ -@@ a;@@ a=@@ a@@ -2@@ ; printf("%d",@@ a*@@ b); }  
c -1
h -1
0

voidmain() { inta[1000]; intb[@@ 1000]; inti,j=0,@@ n,k,@@ l,@@ t; scanf("%d%d",&n,&k); for(i=0;i<n;i++) scanf("%d",&a[i]); for(i=0;i<n;i++) if(a[i]<=@@ k) { b[j]=@@ a[i]; j++; } for(i=0;i<j@@ -1;i++) for(l@@ =i+1@@ ;@@ l<@@ j@@ ;@@ l++){ t=@@ b[i]@@ +@@ b[l@@ ]; if(t@@ ==k) { printf("yes"); goto@@ loop@@ ; } } if(i>=@@ (j@@ -1)@@ )@@ printf("no"); loop@@ :@@ printf("\n"); }  
c -1
h -1
inta[@@ 15]; intmain() { intnum,@@ doub@@ ; char@@ b; int@@ comp_with_zero@@ ; for(;@@ 1@@ ;) { num=0; doub@@ =0; comp_with_zero@@ =1; b=@@ '@@ a@@ '; for(int@@ ai@@ =0;@@ ai@@ <@@ 15@@ ;@@ ai@@ ++) { a[@@ ai@@ ]=0; } for(;@@ 1@@ ;) { b=@@ cin.get(); if((@@ b@@ =='@@ 0@@ ')&&(@@ a[@@ num@@ ]@@ ==0)) { break; } if((@@ b-@@ '@@ 0'@@ <@@ 10@@ )&&(@@ b-@@ '@@ 0'@@ >=0@@ )) { a[@@ num@@ ]@@ *=@@ 10@@ ; a[@@ num@@ ]+=@@ (@@ b-@@ '@@ 0'@@ ); } else { if(b@@ =='@@ ') { a[@@ num@@ ]@@ *=@@ comp_with_zero@@ ; num@@ +=1; comp_with_zero@@ =1; } if(b==@@ '-@@ ') { comp_with_zero@@ =@@ -1; } } } for(inti=0;i<=@@ num;i++) { for(int@@ ii@@ =i;@@ ii@@ <=@@ num;@@ ii@@ ++) { if(a[i]==0) break; if((@@ a[i]@@ %@@ 2@@ ==0)&&(@@ a[i]@@ /2@@ ==@@ a[@@ ii@@ ]@@ )) { doub@@ +=1; } if((@@ a[@@ ii@@ ]@@ %@@ 2@@ ==0)&&(@@ a[@@ ii@@ ]@@ /2@@ ==@@ a[i]@@ )) { doub@@ +=1; } } } cout<<@@ doub@@ <<endl; } return0; }  
c -1
h -1
0

intmain(){ charstr@@ [@@ 255@@ ],@@ sub@@ [@@ 255@@ ],@@ rep@@ [@@ 255@@ ],@@ s[@@ 255@@ ]; gets(str); gets(sub); gets(@@ rep); int@@ len1=strlen(@@ str@@ ),@@ len2=strlen(@@ sub@@ ),@@ x=0; inti,j,n; for(i=0;i<len1@@ -len2@@ +1@@ ;i++){ n=0; for(j=0;j<len2@@ ;j++){ if(str@@ [i+j]!=@@ sub@@ [j]){ break; } else n++; } if(n==@@ len2){ intm=0; while(i@@ +j@@ +m@@ <@@ len1@@ ){ s[m@@ ]=@@ str@@ [i+j@@ +m@@ ]; m++; } s[m@@ ]='\0'; str@@ [i]@@ ='\0'; strcat(@@ str,@@ rep); strcat(@@ str,@@ s); puts(@@ str); x=1; break; } } if(x@@ ==0) puts(@@ str); return0; }  
c -1
h -1
void@@ mix@@ (intm,int@@ n); intmain() { intm,n; cin>>m>>n; mix@@ (@@ m,n); return0; } void@@ mix@@ (intm,int@@ n) { inti,j,@@ a[@@ 10000@@ ],b[@@ 10000],@@ t; for(i=1;i<=m;i++) cin>>a[i]; for(i=1;i<=n;i++) cin>>b[i]; for(j=1;j<@@ m;j++) { for(i=1;i<=@@ m@@ -j;i++) { if(a[i]>a[i+1]) { t=a[i]; a[i]=a[i+1]; a[i+1]=@@ t; } } } for(j=1;j<n;j++) { for(i=1;i<=n@@ -j;i++) { if(b[i]>b[i+1]) { t=b[i]; b[i]=b[i+1]; b[i+1]=@@ t; } } } for(i=1;i<=m;i++) cout<<a[i]<<""; cout<<@@ b[1@@ ]; for(i=2;i<=n;i++) cout<<""<<@@ b[i]; }  
c -1
h -1
0

intmain() { introw,@@ line@@ ,@@ rownow@@ ,@@ linenow@@ ,@@ n,i,j,@@ a[@@ 10000]; scanf("%d%d",&row,&@@ line@@ ); for(j=0;j<=@@ row@@ *@@ line@@ -1;j++) { scanf("%d",&a[j]); } for(i=0;i<=@@ row@@ +@@ line@@ -1;i++) { rownow@@ =0;@@ linenow@@ =i@@ -@@ rownow@@ ; for(;@@ rownow@@ <=row-1@@ &&@@ linenow@@ >=0;@@ rownow@@ ++,@@ linenow@@ --) { if(@@ linenow@@ >=@@ line@@ )continue; n=@@ rownow@@ *@@ line@@ +@@ linenow@@ ; printf("%d\n",@@ a[n@@ ]); } } scanf("%d",&@@ j); return0; }  
c -1
h -1
intmain() { inta,b,@@ c,d,@@ e,f,@@ g,@@ h,@@ i,j,k,@@ l,@@ m,n,@@ o@@ ,@@ p,q,@@ r,@@ s,@@ t,@@ u@@ ,@@ v@@ ,@@ w,@@ x; scanf("%d%d%d",&a,&b,&c); d@@ =31+c; e=@@ 59@@ +c; f=@@ 90@@ +c; g=@@ 120@@ +c; h=@@ 151@@ +c; i=@@ 181@@ +c; j=@@ 212@@ +c; k=@@ 243@@ +c; l=@@ 273@@ +c; m=@@ 304@@ +c; n=@@ 334@@ +c; o@@ =@@ 60@@ +c; p=@@ 91@@ +c; q=@@ 121@@ +c; r=@@ 152@@ +c; s=@@ 182@@ +c; t=@@ 213@@ +c; u@@ =@@ 244@@ +c; v@@ =@@ 274@@ +c; w=@@ 305@@ +c; x=@@ 335@@ +c; if(b==1) printf("%d",@@ c); if(b==@@ 2) printf("%d",d); if((@@ b==@@ 3@@ )&&(@@ a%100!=0@@ &&@@ a%@@ 4!=0@@ ||a%@@ 100==0&&@@ a%@@ 400!=0)) printf("%d",@@ e); if((@@ b==@@ 4@@ )&&(@@ a%100!=0@@ &&@@ a%@@ 4!=0@@ ||a%@@ 100==0&&@@ a%@@ 400!=0)) printf("%d",@@ f); if((@@ b==@@ 5@@ )&&(@@ a%100!=0@@ &&@@ a%@@ 4!=0@@ ||a%@@ 100==0&&@@ a%@@ 400!=0)) printf("%d",@@ g@@ ); if((@@ b==@@ 6@@ )&&(@@ a%100!=0@@ &&@@ a%@@ 4!=0@@ ||a%@@ 100==0&&@@ a%@@ 400!=0)) printf("%d",@@ h); if((@@ b==@@ 7@@ )&&(@@ a%100!=0@@ &&@@ a%@@ 4!=0@@ ||a%@@ 100==0&&@@ a%@@ 400!=0)) printf("%d",@@ i); if((@@ b==@@ 8@@ )&&(@@ a%100!=0@@ &&@@ a%@@ 4!=0@@ ||a%@@ 100==0&&@@ a%@@ 400!=0)) printf("%d",@@ j); if((@@ b==@@ 9@@ )&&(@@ a%100!=0@@ &&@@ a%@@ 4!=0@@ ||a%@@ 100==0&&@@ a%@@ 400!=0)) printf("%d",k); if((@@ b==@@ 10@@ )&&(@@ a%100!=0@@ &&@@ a%@@ 4!=0@@ ||a%@@ 100==0&&@@ a%@@ 400!=0)) printf("%d",@@ l); if((@@ b==@@ 11@@ )&&(@@ a%100!=0@@ &&@@ a%@@ 4!=0@@ ||a%@@ 100==0&&@@ a%@@ 400!=0)) printf("%d",m); if((@@ b==@@ 12@@ )&&(@@ a%100!=0@@ &&@@ a%@@ 4!=0@@ ||a%@@ 100==0&&@@ a%@@ 400!=0)) printf("%d",n); if((@@ b==@@ 3@@ )&&(@@ a%100!=0@@ &&@@ a%@@ 4@@ ==0||@@ a%400==0)) printf("%d",@@ o@@ ); if((@@ b==@@ 4@@ )&&(@@ a%100!=0@@ &&@@ a%@@ 4@@ ==0||@@ a%400==0)) printf("%d",@@ p); if((@@ b==@@ 5@@ )&&(@@ a%100!=0@@ &&@@ a%@@ 4@@ ==0||@@ a%400==0)) printf("%d",@@ q); if((@@ b==@@ 6@@ )&&(@@ a%100!=0@@ &&@@ a%@@ 4@@ ==0||@@ a%400==0)) printf("%d",@@ r); if((@@ b==@@ 7@@ )&&(@@ a%100!=0@@ &&@@ a%@@ 4@@ ==0||@@ a%400==0)) printf("%d",s); if((@@ b==@@ 8@@ )&&(@@ a%100!=0@@ &&@@ a%@@ 4@@ ==0||@@ a%400==0)) printf("%d",t); if((@@ b==@@ 9@@ )&&(@@ a%100!=0@@ &&@@ a%@@ 4@@ ==0||@@ a%400==0)) printf("%d",@@ u@@ ); if((@@ b==@@ 10@@ )&&(@@ a%100!=0@@ &&@@ a%@@ 4@@ ==0||@@ a%400==0)) printf("%d",@@ v@@ ); if((@@ b==@@ 11@@ )&&(@@ a%100!=0@@ &&@@ a%@@ 4@@ ==0||@@ a%400==0)) printf("%d",@@ w); if((@@ b==@@ 12@@ )&&(@@ a%100!=0@@ &&@@ a%@@ 4@@ ==0||@@ a%400==0)) printf("%d",x); return0; }  
c -1
h -1
0

intf@@ (ints[],int@@ n); voidmain() { intk,@@ a[@@ 25],@@ i,@@ N; scanf("%d",&k); for(i=0;i<k;i++) scanf("%d",&a[i]); N@@ =@@ f(a,@@ k); printf("%d",@@ N); } intf@@ (ints[],int@@ n) { inti,@@ b[@@ 25],@@ j; int@@ flag=0,@@ flag2@@ =0; int*p=@@ s; for(i=0;i<n-1;i++) if(s@@ [i]<@@ s@@ [i+1]@@ ){@@ flag@@ =1;break;} if(flag@@ ==0)@@ return@@ n; else {@@ for(i=1;i<n;i++) {@@ if(s@@ [i]>@@ s[0]@@ ){@@ flag2@@ =1;@@ break;}} if(@@ flag2@@ ==0)@@ return@@ f(@@ p@@ +1,@@ n-1)@@ +1; else { b[0]=@@ s[@@ 0]; for(i=1@@ ,j@@ =1@@ ;i<n;i++) if(s@@ [i]<=@@ s[0]@@ ){@@ b[j]=@@ s[i]@@ ;j++@@ ;} return(@@ (@@ f(@@ p@@ +1,@@ n-1@@ ))@@ >@@ f(@@ b,@@ j)@@ ?@@ (@@ f(@@ p@@ +1,@@ n-1@@ ))@@ :@@ f(@@ b,@@ j@@ )); }} }  
c -1
h -1
intmain() { inta,b,c,@@ s; scanf("%d%d%d",&a,&b,&c); switch(@@ b){ case1: s=@@ c; break; case2: s=@@ c+@@ 31; break; case3: s=@@ c@@ +31+@@ 28; break; case4: s=@@ c@@ +31+28@@ +31; break; case5: s=@@ c@@ +31+28@@ +31+30@@ ; break; case6: s=@@ c@@ +31+28@@ +31+30@@ +31; break; case7: s=@@ c@@ +31+28@@ +31+30+31+30@@ ; break; case8: s=@@ c@@ +31+28@@ +31+30+31+30@@ +31; break; case9: s=@@ c@@ +31+28@@ +31+30+31+30+31+@@ 31; break; case10: s=@@ c@@ +31+28@@ +31+30+31+30+31+31+30@@ ; break; case11: s=@@ c@@ +31+28@@ +31+30+31+30+31+31+30@@ +31; break; case12: s=@@ c@@ +31+28@@ +31+30+31+30+31+31+30+31+30@@ ; break; } if((@@ a%4==0&&a%100!=0@@ ||a%@@ 400==0)@@ &&(@@ b@@ >2@@ )) s=s+1; printf("%d",s); return0; }  
c -1
h -1
0

intx[@@ 1000],@@ y@@ [1000],@@ z[@@ 2000]; inti,j,n,@@ m,@@ ex@@ ; voidread@@ (){ cin>>n>>m; for(i=0;i<n;i++) cin>>@@ x[i]; for(i=0;i<m;i++) cin>>y@@ [i]; } voidpaixu@@ (){ for(i=0;i<n;i++) for(j=0;j<n-1;j++) if(x@@ [j+1]@@ <@@ x@@ [j]){ ex@@ =@@ x@@ [j]; x@@ [j]=@@ x@@ [j+1]; x@@ [j+1]=@@ ex@@ ; } for(i=0;i<m;i++) for(j=0;j<m-1;j++) if(y@@ [j]>@@ y@@ [j+1@@ ]){ ex@@ =@@ y@@ [j]; y@@ [j]=@@ y@@ [j+1]; y@@ [j+1]=@@ ex@@ ; } } void@@ heping@@ (){ for(i=0;i<n;i++) z@@ [i]=@@ x[i]; for(i=0;i<m;i++) z@@ [n@@ +i]=@@ y@@ [i]; } void@@ display@@ (){ for(i=0;i<n@@ +m@@ ;i++){ if(i==0)@@ cout<<@@ z@@ [i]; else@@ cout<<""<<@@ z@@ [i]; } } intmain(){ read(); paixu@@ (); heping@@ (); display@@ (); return0; }  
c -1
h -1
structstudent { intnum; int@@ yw@@ ; int@@ sx; int@@ he@@ ; }@@ student[@@ 100000]; intmain() { inti,n,@@ j,@@ s=0,@@ m; scanf("%d",&n); for(i=0;i<n;i++) { scanf("%d%d%d",&@@ student[i].@@ num,&@@ student[i].@@ yw@@ ,&@@ student[i].@@ sx@@ ); student[i].@@ he@@ =@@ student[i].@@ yw@@ +@@ student[i].@@ sx; } for(i=0;i<n;i++) {@@ m=@@ student@@ [0].@@ he@@ ; for(j=n-1@@ ;j>0;j--) { m=@@ student[j].@@ he@@ >@@ m@@ ?@@ student[j].@@ he@@ :@@ m; } for(j=0;j<n;j++) { if(@@ student[j].@@ he@@ ==@@ m) {@@ printf("%d%d\n",@@ student[j].@@ num,@@ student[j].@@ he@@ ); student[j].@@ he@@ =0;@@ s=s@@ +1;@@ if(s@@ ==@@ 3) {@@ goto@@ guiyi@@ ;}} } } guiyi@@ :@@ return0; }  
c -1
h -1
0

structbook { intid; chars[@@ L@@ ]; int@@ len; }b[@@ M@@ ]; void@@ fun@@ (int@@ count[@@ L@@ ],@@ chars[@@ L@@ ],int@@ len@@ ) { inti; for(i=0;i<len;i++) { intm; m=@@ s[i]@@ -'A'; count@@ [m@@ ]++; } } int@@ judge@@ (@@ chars[@@ L@@ ],int@@ len,@@ charname@@ ) { inti,@@ answer@@ =0; for(i=0;i<len;i++) { if(s[i]==@@ name@@ ) { answer@@ =1; break; } } return@@ answer@@ ; } intmain() { intm,@@ k,@@ count[@@ L@@ ]={0},@@ i,j,@@ max,@@ num; charname@@ ; scanf("%d",&m); for(k=0;k<@@ m;k++) { scanf("%d%s",&@@ b[k@@ ].id,@@ b[k@@ ].@@ s); b[k@@ ].@@ len=strlen(@@ b[k@@ ].@@ s); fun@@ (@@ count,@@ b[k@@ ].@@ s,@@ b[k@@ ].@@ len); } max=count@@ [0]; num=0; for(j=1;j<@@ L@@ ;j++) { if(count@@ [j]@@ >max) { max=count@@ [j]; num@@ =j; } } name@@ =@@ num@@ +65; printf("%c\n",@@ name); printf("%d\n",max); for(k=0;k<@@ m;k++) { int@@ answer@@ =0; answer@@ =@@ judge@@ (@@ b[k@@ ].@@ s,@@ b[k@@ ].@@ len,@@ name); if(@@ answer@@ ==1) printf("%d\n",@@ b[k@@ ].id); } return0; }  
c -1
h -1
int@@ num1@@ [1000],@@ num2@@ [1000],@@ num[@@ 2000@@ ],@@ n1,n2; void@@ dr@@ () { cin>>@@ n1@@ >>@@ n2; inti; for(i=0;i<n1;i++) cin>>@@ num1@@ [i]; for(i=0;i<n2;i++) cin>>@@ num2@@ [i]; } int@@ px@@ () { inti,j,@@ tem; for(i=0;i<n1;i++) { for(j=i+1;j<@@ n1@@ ;j++) { if(@@ num1@@ [j]<@@ num1@@ [i]) { tem@@ =@@ num1@@ [i]; num1@@ [i]=@@ num1@@ [j]; num1@@ [j]=@@ tem; } } } for(i=0;i<n2;i++) { for(j=i+1;j<@@ n2@@ ;j++) { if(@@ num2@@ [j]<@@ num2@@ [i]) { tem@@ =@@ num2@@ [i]; num2@@ [i]=@@ num2@@ [j]; num2@@ [j]=@@ tem; } } } } int@@ gb@@ () { inti; for(i=0;i<n1;i++) num[i]=@@ num1@@ [i]; for(i=@@ n1@@ ;i<@@ n1+@@ n2;i++) num[i]=@@ num2@@ [i-@@ n1@@ ]; } int@@ dy@@ () { cout<<@@ num[@@ 0]; inti; for(i=1;i<@@ n1+@@ n2;i++) cout<<''<<@@ num[i]; } intmain() { dr@@ (); px@@ (); gb@@ (); dy@@ (); }  
c -1
h -1
0

intmain(){ int@@ mx@@ [@@ 200][@@ 200]; intk,m,n,@@ ans=0; cin>>k; for(intp@@ =1@@ ;p<=@@ k@@ ;p++){ cin>>n>>m; for(inti=1;i<=@@ n;i++){ for(intj=1;j<=@@ m@@ ;j++){ cin>>@@ *(*(@@ mx@@ +i)@@ +j); if(i==1||i==@@ n@@ ||j@@ ==1||@@ j==@@ m)@@ ans@@ +=@@ *(*(@@ mx@@ +i)@@ +j); } } cout<<ans@@ <<endl; ans=0; } }  
c -1
h -1
intmain() { chars[@@ 101],@@ a[@@ 101@@ ],b[@@ 101],@@ copy@@ [@@ 101],@@ before@@ [@@ 101],@@ after@@ [@@ 101]; gets(s); gets(a); gets(b); inti=0,@@ j; for(i@@ ;i<=@@ (int)@@ (@@ strlen(@@ s)@@ -@@ strlen(a)@@ );i++) { for(j=0;j<@@ (int)@@ (@@ strlen(a)@@ );j++) { copy@@ [j]=@@ s[i+j@@ ]; } copy@@ [j]@@ ='\0'; if(strcmp(@@ copy@@ ,@@ a)@@ ==0) { for(j=0;j<i;j++) { before@@ [j]=@@ s[j]; } before@@ [j]@@ ='\0'; for(j=i@@ +@@ (int)@@ strlen(a)@@ ;j<@@ (int)@@ (@@ strlen(@@ s@@ ))@@ ;j++) { after@@ [j-i@@ -@@ (int)@@ strlen(a)@@ ]=@@ s[j]; } after@@ [j-i@@ -@@ (int)@@ strlen(a)@@ ]='\0'; strcat(@@ before@@ ,@@ b); strcat(@@ before@@ ,@@ after@@ ); strcpy(s,@@ before@@ ); break; } } puts(@@ s); return0; }  
c -1
h -1
0

voidmain() { inti,j,@@ row,col,@@ m; scanf("%d%d",&row,&col); int(*p)@@ [@@ col@@ ]; p=@@ (int@@ (@@ *)@@ [@@ col@@ ])@@ calloc@@ (@@ row,@@ col@@ *sizeof(int)); for(i=0;i<row;i++) for(j=0;j<col;j++) scanf("%d",*(p+i)+j); for(i=0;i<col;i++) {m@@ =(@@ i<=@@ (@@ row-1)@@ ?@@ i@@ :@@ (@@ row@@ -1)); for(j=0;j<=@@ m@@ ;j++)@@ printf("%d\n",@@ *(*(p@@ +j)@@ +i-j@@ )@@ );} for(j=0;j<row@@ -1;j++) { m@@ =(@@ (@@ row-1)@@ <=@@ (@@ col@@ +j)@@ ?@@ (@@ row-1)@@ :@@ (@@ col@@ +j)); for(i=1@@ +j@@ ;i<=@@ m@@ ;i++)@@ printf("%d\n",@@ *(*(p+i)@@ +col@@ -i@@ +j)@@ );} }  
c -1
h -1
intmain(){ intk,@@ jz@@ [100][100],@@ ROW@@ ,@@ COL@@ ,@@ h@@ [100],@@ y,@@ i,@@ row,col; scanf("%d",&k); for(i=0;i<k;i++){ scanf("%d%d",&@@ ROW@@ ,&@@ COL@@ ); for(row=0;row@@ <ROW@@ ;@@ row++){ for(col=0;col@@ <@@ COL@@ ;col@@ ++){ scanf("%d",&@@ jz@@ [@@ row][col@@ ]); }} y=0; for(row=0;row@@ <ROW@@ ;@@ row++){ y@@ +=@@ jz@@ [@@ row@@ ][0]; } for(row=0;row@@ <ROW@@ ;@@ row++){ y@@ +=@@ jz@@ [@@ row@@ ][@@ COL@@ -1]; } for(col=0;col@@ <@@ COL@@ ;col@@ ++){ y@@ +=@@ jz@@ [0][@@ col@@ ]; } for(col=0;col@@ <@@ COL@@ ;col@@ ++){ y@@ +=@@ jz@@ [@@ ROW@@ -1@@ ][col@@ ]; } h@@ [i]=@@ y@@ -@@ jz@@ [0][@@ 0]-@@ jz@@ [0][@@ COL@@ -1]@@ -@@ jz@@ [@@ ROW@@ -1@@ ][0]-@@ jz@@ [@@ ROW@@ -1@@ ][@@ COL@@ -1]; } for(i=0;i<k;i++){ printf("%d\n",@@ h[i]); }@@ return0; }  
c -1
h -1
0

intmain() { int@@ an@@ [50@@ ],*@@ p,@@ i,@@ t@@ =0@@ ,*@@ q; for(i=0;@@ ;) { scanf("%d",&@@ an@@ [i]); if(@@ an@@ [i]==@@ -1)break; else { for(i=1;;i++) { scanf("%d",&@@ an@@ [i]); if(@@ an@@ [i]@@ ==0)break; } for(p=@@ an@@ ;@@ *p@@ !=0@@ ;p++) { for(q=@@ an@@ ;*@@ q@@ !=0@@ ;q++) if(*@@ q@@ ==@@ (*p)@@ *2@@ )@@ t++; } printf("%d\n",t); t=0; } i=0; } return0; }  
c -1
h -1
intmain() { intn,@@ s[@@ 99@@ ][@@ 99@@ ],i,j,@@ S@@ ,@@ c,@@ b,@@ g,@@ t; scanf("%d",&n); for(i=0;i<n;i++) { for(j=0;j<n;j++) scanf("%d",&s@@ [i][j]); } for(i=0;i<n;i++) { for(j=0;j<n;j++) { if(s@@ [i][j]==0) { t=i; g@@ =j; i=@@ n+1; break; } } } for(i=n-1;i>=0;i--) { for(j=n-1;j>=0;j--) { if(s@@ [i][j]==0) { c=i; b=j; i@@ =-1; break; } } } S@@ =(@@ c-@@ t@@ -1)*(@@ b-@@ g@@ -1); printf("%d\n",@@ S@@ ); return0; }  
c -1
h -1
0

intmain(){ inta[@@ 101][101]; inti,j,@@ row,col,@@ rowc@@ ,@@ colc@@ ; scanf("%d%d",&row,&col); for(i=0;i<row;i++){ for(j=0;j<col;j++){ scanf("%d",&a[i][j]); } } for(i=0;i<@@ row+col@@ -1;i++){ for(j=i@@ ;j>=0;j--){ colc@@ =j; rowc@@ =i@@ -j@@ ; if(@@ colc@@ >=@@ col@@ ){ continue; } if(row@@ >@@ col@@ &&@@ rowc@@ >=@@ row@@ ){ continue; } if(col@@ >=@@ row@@ &&@@ rowc@@ ==@@ row@@ ){ break; } printf("%d\n",a[@@ rowc@@ ][@@ colc@@ ]); } } return0; }  
c -1
h -1
intmain() { intn; cin>>n; inta[@@ 25]; int@@ rem@@ [25@@ ]={@@ 1@@ }; for(inti=0;i<n;i++) cin>>a[i]; int@@ MMax@@ =0; for(inti=1;i<@@ n;i++) { intmax=0; for(intj=i@@ -1@@ ;j>=0;j--) { if(j<@@ max@@ )break; if(a[j]>=a[i]&&@@ rem@@ [j]@@ >max)max=@@ rem@@ [j]; } rem@@ [i]=@@ max+1; if(@@ rem@@ [i]>@@ MMax@@ )@@ MMax@@ =@@ rem@@ [i]; } cout<<@@ MMax@@ <<endl; return0; }  
c -1
h -1
0

int@@ tru@@ (int@@ c) { intj,@@ p=0; if(c@@ ==1||@@ c@@ ==@@ 2) return1; else@@ for(j=2;j<=@@ pow@@ ((@@ double)@@ c,@@ 0@@ .@@ 5@@ );j++) if(c@@ %j==0) { p=1; break; } if(p@@ ==1)@@ return0; else@@ return1; } intcount@@ (inta,intb) { inti,@@ k=1; if(!@@ tru@@ (a@@ )) for(i=b@@ ;i<=@@ pow@@ ((@@ double)@@ a,@@ 0@@ .@@ 5@@ );i++) if(a%i==0) k=k@@ +@@ count@@ (a/i,i); return@@ k; } intmain() { intn,@@ x[@@ 999@@ ],@@ q; scanf("%d",&n); for(q=0;q@@ <n;@@ q++) scanf("%d",&@@ x[@@ q@@ ]); for(q=0;q@@ <n;@@ q++) printf("%d\n",@@ count@@ (@@ x[@@ q@@ ],@@ 2)); return0; }  
c -1
h -1
intmain() { intf@@ [26],@@ maxnum@@ =1,@@ i,j,@@ h@@ [26],@@ n; cin>>n; for(i=1;i<=n@@ ;i++){@@ cin>>@@ h@@ [i];@@ f@@ [i]@@ =1;} for(i=2;i<=n;i++) { for(j=1;j<@@ i@@ ;j++)@@ if(h@@ [j]>=@@ h@@ [i])@@ f[i]=@@ max(@@ f@@ [i],@@ f@@ [j]@@ +1); maxnum@@ =@@ max(@@ maxnum@@ ,@@ f@@ [i]); } cout<<@@ maxnum@@ ; }  
c -1
h -1
0

intmain() { intn,k; scanf("%d%d",&n,&k); int@@ p=0; int@@ shuzu@@ [1000]; for(inti=0;i<=@@ n-1;i++) { scanf("%d",&@@ shuzu@@ [i]); } for(int@@ a@@ =0;a@@ <=@@ n-1;@@ a++) { for(int@@ b@@ =0;b@@ <=@@ n-1;@@ b++) { if(shuzu@@ [a@@ ]+@@ shuzu@@ [b@@ ]==@@ k)@@ p=1; } } if(p@@ ==1)@@ printf("yes"); if(p@@ ==0)@@ printf("no"); return0; }  
c -1
h -1
int@@ paixu@@ (intn,int@@ m) { inti,j,@@ num; int@@ shuzu@@ [1000]; for(i=1;i<=@@ n+m;i++) { cin>>num; shuzu@@ [i]=@@ num; } for(i=1;i<=n;i++) { for(j=n-1@@ ;j>=i@@ ;j--) { if(shuzu@@ [j]>@@ shuzu@@ [j+1@@ ])@@ num=@@ shuzu@@ [j],@@ shuzu@@ [j]=@@ shuzu@@ [j+1],@@ shuzu@@ [j+1]=@@ num; } } for(i=n@@ +1;i<=@@ n+m;i++) { for(j=@@ n+@@ m-1@@ ;j>=i@@ ;j--) { if(shuzu@@ [j]>@@ shuzu@@ [j+1@@ ])@@ num=@@ shuzu@@ [j],@@ shuzu@@ [j]=@@ shuzu@@ [j+1],@@ shuzu@@ [j+1]=@@ num; } } for(i=1;i<=@@ n+m;i++) { if(i==@@ m+@@ n)@@ cout<<@@ shuzu@@ [i]; else@@ cout<<@@ shuzu@@ [i]@@ <<""; } return0; } intmain() { int@@ n1,n2; cin>>@@ n1@@ >>@@ n2; paixu(@@ n1,n2@@ ); return0; }  
c -1
h -1
0

int@@ input@@ (int@@ [],int@@ ); int@@ sort@@ (int@@ [],int@@ ); voidcombine@@ (int@@ [],int@@ [],int@@ ,int); voidoutput@@ (int@@ [],int@@ ,int); intmain() { int@@ n1,n2; cin>>@@ n1@@ >>@@ n2; inta[100],b[100]; input@@ (a,@@ n1); input@@ (b,@@ n2); sort@@ (a,@@ n1); sort@@ (b,@@ n2); combine@@ (a,b,@@ n1,n2@@ ); return0; } int@@ input@@ (inta[],intn) { inti; for(i=0;i<n;i++) { cin>>a[i]; } return@@ a[i]; } int@@ sort@@ (inta[],intn) { inti,j,@@ p; for(i=1;i<n;i++) for(j=0;j<n-i;j++) { if(a[j]>a[j+1]) { p=@@ a[j]; a[j]=a[j+1]; a[j+1]=@@ p; } } return@@ a[j]; } voidcombine@@ (inta[],intb[],int@@ n1,int@@ n2) { intc[@@ 200]; inti; for(i=0;i<n1;i++) c[i]=a[i]; for(i=@@ n1@@ ;i<@@ n2@@ +@@ n1@@ ;i++) c[i]=b[i-@@ n1@@ ]; output@@ (c,@@ n1,n2@@ ); } voidoutput@@ (intc[],int@@ n1,int@@ n2) { inti; for(i=0;i<n1@@ +@@ n2@@ -1;i++) cout<<@@ c[i]@@ <<""; cout<<c[@@ n1+n2@@ -1]@@ <<endl; }  
c -1
h -1
struct@@ x {@@ chara[@@ 10]; intb; }@@ ;@@ struct@@ x@@ y@@ [100]; voidmain() {@@ intn,i,j,@@ m; chars[@@ 10]; scanf("%d",&n); for(i=0;i<n;i++) {@@ scanf("%s%d",&@@ y@@ [i].@@ a,&@@ y@@ [i].@@ b); } for(j=0;j<n-1;j++) for(i=0;i<n@@ -1-j;i++) {@@ if(y@@ [i].@@ b<@@ y@@ [i+1].@@ b@@ &&@@ y@@ [i+1].@@ b@@ >=60) {@@ strcpy(s,@@ y@@ [i].@@ a); strcpy(@@ y@@ [i].@@ a,@@ y@@ [i+1].@@ a); strcpy(@@ y@@ [i+1].@@ a,@@ s); m=@@ y@@ [i].@@ b; y@@ [i].@@ b=@@ y@@ [i+1].@@ b; y@@ [i+1].@@ b=@@ m; } } for(i=0;i<n;i++) printf("%s\n",@@ y@@ [i].@@ a); }  
c -1
h -1
0

inta[100@@ ]={0},@@ b[100@@ ]={0}; inti=0,@@ n,@@ m; void@@ block_in@@ () { scanf("%d%d",&n,&m); for(i=0;i<n;i++)@@ scanf("%d",&a[i]); for(i=0;i<m;i++)@@ scanf("%d",&b[i]); } void@@ arr@@ (intx,int@@ c[@@ ]) { inti=0,j=0,@@ mid@@ ; for(i=0;i<x;i++) { for(j=0;j<@@ x@@ -i;j++) { if(c@@ [j]>@@ c@@ [j+1]) { mid@@ =@@ c[j]; c[j]=@@ c@@ [j+1]; c@@ [j+1]=@@ mid@@ ; } } } for(i=1;i<=@@ x;i++) { printf("%d",c[i]); if(i<@@ x)@@ printf(""); } } voidmain() { block_in@@ (); arr@@ (n,@@ a); printf(""); arr@@ (m,@@ b); }  
c -1
h -1
intmain() { int@@ height@@ [25],@@ amount@@ [25@@ ]={0}; intn,i,j,@@ max; scanf("%d",&n); for(i=0;i<n-1;i++) { scanf("%d",&@@ height@@ [i]); } scanf("%d",&@@ height@@ [@@ n-1]); amount@@ [n-1@@ ]=1; for(i=n-2;i>=0;i--) { max=0; for(j=i;j<@@ n;j++) { if(@@ amount@@ [j]@@ >max@@ &&@@ height@@ [j]<=@@ height@@ [i]) { max=@@ amount@@ [j]; } } amount@@ [i]=@@ max+1; } for(i=0;i<n;i++) { if(@@ amount@@ [i]>max) { max=@@ amount@@ [i]; } } printf("%d\n",max); return0; }  
c -1
h -1
0

intmain() { intn,@@ a[100]; inti; intf@@ (intx,int@@ min); for(i=0;i<100;i++) a[i]=0; scanf("%d",&n); for(i=0;i<n;i++) { scanf("%d",&a[i]); a[i]=@@ f(@@ a[i],@@ 2); } for(i=0;i<n;i++) { printf("%d\n",a[i]); } return0; } intf@@ (intx,int@@ min) { int@@ y=0; inti; if(x==1) y=1; else { for(i=min@@ ;i<=@@ x;i++) { if(x%i==0) { y=@@ y@@ +@@ f(@@ x@@ /i,i); } } } return@@ y; }  
c -1
h -1
intmain() { long@@ inta[@@ 5@@ ],b[@@ 5@@ ],c[@@ 5@@ ],@@ ts@@ [5],@@ i; for(i=1;i<=@@ 5;i++) scanf("%ld@@ %ld@@ %ld@@ ",&@@ a[i],&@@ b[i]@@ ,&@@ c[i]); for(i=1;i<=@@ 5;i++) { switch(@@ b[i]) { case1:@@ ts@@ [i]=@@ c[i]@@ ;break; case2:@@ ts@@ [i]=@@ c[i]@@ +31;break; case3:@@ ts@@ [i]=@@ c[i]@@ +@@ 59@@ ;break; case4:@@ ts@@ [i]=@@ c[i]@@ +@@ 90@@ ;break; case5:@@ ts@@ [i]=@@ c[i]@@ +@@ 120@@ ;break; case6:@@ ts@@ [i]=@@ c[i]@@ +@@ 151@@ ;break; case7:@@ ts@@ [i]=@@ c[i]@@ +@@ 181@@ ;break; case8:@@ ts@@ [i]=@@ c[i]@@ +@@ 212@@ ;break; case9:@@ ts@@ [i]=@@ c[i]@@ +@@ 243@@ ;break; case10:@@ ts@@ [i]=@@ c[i]@@ +@@ 273@@ ;break; case11:@@ ts@@ [i]=@@ c[i]@@ +@@ 304@@ ;break; case12:@@ ts@@ [i]=@@ c[i]@@ +@@ 334@@ ;break; } if((@@ a[i]@@ %4==0&&@@ a[i]@@ %100!=0@@ ||@@ a[i]@@ %@@ 400==0)@@ &&@@ b[i]@@ >2) ts@@ [i]=@@ ts@@ [i]@@ +1; printf("%ld@@ ",@@ ts@@ [i]); printf("\n"); } return0; }  
c -1
h -1
0

intmain() { int@@ fj@@ (intm,int@@ min); intt,@@ i,@@ a[100]; cin>>t; for(i=1;i<=@@ t;i++) { cin>>a[i]; cout<<@@ fj@@ (a[i],@@ 2)<<endl; } return0; } int@@ fj@@ (intm,int@@ min) { int@@ counter@@ =1; inti; if(m@@ <@@ min) return0; for(i=min@@ ;i<@@ m;i++) if(m@@ %i==0) { counter@@ =@@ fj@@ (m@@ /i,@@ i@@ )+@@ counter@@ ; } return@@ counter@@ ; }  
c -1
h -1
intmain() { inta[100][100],@@ i,j,@@ r,@@ c,@@ s; scanf("%d%d",&@@ r@@ ,&c); for(i=0;i<@@ r;i++) { for(j=0;j<@@ c;j++) { scanf("%d",&a[i][j]); } } for(s=0;s@@ <@@ r@@ +c@@ -1;@@ s++) { for(i=0;i<=@@ s;i++) { if(i@@ <=@@ r@@ -1@@ &&@@ s@@ -i@@ <=@@ c@@ -1) { if(i@@ ==0&&@@ s@@ -i@@ ==0) printf("%d",@@ a[0][0]@@ ); else printf("\n%d",@@ a[i][@@ s@@ -i]); } } } printf("\n"); return0; }  
c -1
h -1
0

intmain(){ double@@ n,m,@@ d; inta,b,@@ i,@@ c; char@@ u@@ [500],@@ v@@ [500]; scanf("%lf",&n); scanf("%s",@@ u@@ );@@ scanf("%s",@@ v@@ ); a=strlen(@@ u@@ ); b=strlen(@@ v@@ ); if(a!=@@ b@@ ){@@ printf("error");} elseif(a@@ ==@@ b){ c=0; for(i=0;@@ u@@ [i]!='\0';i++){ if(@@ u@@ [i]!='A'&&@@ u@@ [i]!='T'&&@@ u@@ [i]!='G'&&@@ u@@ [i]!='C'&&@@ v@@ [i]!='A'&&@@ v@@ [i]!='T'&&@@ v@@ [i]!='G'&&@@ v@@ [i]!='@@ C') { printf("error"); c@@ =1@@ ;break; } } if(c@@ ==0) { d=0; for(i=0;@@ u@@ [i]!='\0';i++){ if(@@ u@@ [i]==@@ v@@ [i])@@ d++; } m=@@ d@@ /@@ (@@ 1.0@@ *(a@@ -1)); if(m@@ >@@ n@@ ){printf("yes");} else{printf("no");} } } return0; }  
c -1
h -1
intmain() { intnum[@@ 15@@ ][@@ 15@@ ]={0},@@ doub@@ [@@ 15@@ ]={0},@@ i,j,k,@@ w@@ [@@ 15@@ ]={0},@@ row; for(i=0;i<@@ 15;i++) { for(j=0;j<@@ 20@@ ;j++) { scanf("%d",&@@ num@@ [i][j]); if(num@@ [i][j]@@ ==-1) break; if(num@@ [i][j]==0) { w@@ [i]=@@ j; break; } } if(num@@ [i][0]@@ ==-1) { row@@ =i; break; } } for(i=0;i<row;i++) { for(j=0;j<@@ w@@ [i];j++) { for(k=0;k<@@ w@@ [i]@@ ;k++) { if(num@@ [i]@@ [k]==2*@@ num@@ [i][j]@@ ) { doub@@ [i]++; } } } printf("%d\n",@@ doub@@ [i]); } return0; }  
c -1
h -1
0

structstu {@@ intn; inta; intm; structstu*next; }; intn,@@ l; structstu*@@ creat@@ (void) { structstu*@@ head; structstu@@ *p,*@@ q; n=0; p=@@ q@@ =(struct@@ stu@@ *)malloc(@@ Len@@ ); scanf("%d%d%d",&@@ p->@@ n,&@@ p->@@ a,&@@ p->@@ m); head=@@ Null@@ ; for(@@ ;n@@ <@@ l@@ -1;@@ ) { n++; if(n@@ ==1)@@ head=@@ p; else@@ q@@ ->next=p; q=p; p=(struct@@ stu@@ *)malloc(@@ Len@@ ); scanf("%d%d%d",&@@ p->@@ n,&@@ p->@@ a,&@@ p->@@ m); } q@@ ->next=@@ Null@@ ; return(head); } voidmain() { ints=0; structstu@@ *p,*@@ q@@ ,*@@ c@@ ,*@@ d@@ ,*@@ head; scanf("%d",&@@ l); head=@@ p=@@ q=@@ creat@@ (); for(;;) { if((@@ p->@@ m+@@ p->@@ a)@@ >@@ s) { s=@@ p->@@ m+@@ p->@@ a; c=@@ p; d=@@ q; } q=p; p=@@ q@@ ->next; if(p@@ ->next@@ ==@@ Null@@ )break; } printf("%d%d\n",@@ c@@ ->@@ n,@@ s); if(d@@ ==@@ head@@ ) head@@ =(@@ (@@ c@@ ->next@@ )@@ ->next@@ ); else d@@ ->next=@@ c@@ ->next; p=@@ q=@@ head; s=0; for(;;) { if((@@ p->@@ m+@@ p->@@ a)@@ >@@ s) { s=@@ p->@@ m+@@ p->@@ a; c=@@ p; d=@@ q; } q=p; p=p->next; if(p@@ ->next@@ ==@@ Null@@ )break; } printf("%d%d\n",@@ c@@ ->@@ n,@@ s); if(d@@ ==@@ head@@ ) head=@@ p=@@ q@@ =(@@ (@@ c@@ ->next@@ )@@ ->next@@ ); else d@@ ->next=@@ c@@ ->next; p=@@ q=@@ head; s=0; for(;;) { if((@@ p->@@ m+@@ p->@@ a)@@ >@@ s) { s=@@ p->@@ m+@@ p->@@ a; c=@@ p; d=@@ q; } q=p; p=p->next; if(p@@ ->next@@ ==@@ Null@@ )break; } printf("%d%d\n",@@ c@@ ->@@ n,@@ s); }  
c -1
h -1
voidmain() { inta,b,@@ c,d,@@ n,i,j,@@ x,y,@@ s,@@ m@@ [100][100]; scanf("%d",&n); for(i=0;i<n;i++) for(j=0;j<n;j++) scanf("%d",&@@ m@@ [i][j]); for(i=0;i<n;i++) for(j=0;j<n;j++) { if(m@@ [i][j]==0&&@@ m@@ [i+1][j]@@ ==0&&@@ m[i]@@ [j+1@@ ]==0) { a@@ =i;@@ b=j; } if(m@@ [i][j]==0&&@@ m[i]@@ [j-1]@@ ==0&&@@ m@@ [i-1][j]@@ ==0) { c@@ =i;@@ d=j; } } x=@@ c-a@@ -1;@@ y=@@ d-b@@ -1; s=@@ x@@ *@@ y; printf("%d",s); }  
c -1
h -1
0

intmain() { intn,k,@@ a[@@ 1001@@ ],@@ b=0,@@ c=0; scanf("%d%d",&n,&k); for(inti=0;i<n;i++) {@@ scanf("%d",&a[i]);} for(intj=0;j<n;j++) {@@ for(int@@ m=@@ n-1@@ ;m@@ >=1@@ ;m@@ --) {if(@@ a[m@@ ]+@@ a[j]==@@ k@@ &&m@@ !=@@ j) {@@ printf("yes"); b=@@ a[m@@ ];@@ c=@@ a[j]; break;} if(b@@ +c@@ ==@@ k@@ )break; if(j==@@ n-1@@ ){@@ printf("no@@ ");@@ break;} }} return0;}  
c -1
h -1
structstudent { intnum,@@ z; }@@ a,@@ max1,@@ max2@@ ,max3@@ ; voidmain() { inti,n,@@ x,y; scanf("%d",&n); max1@@ .z@@ =-1; max2@@ .z@@ =-1; max3@@ .z@@ =-1; for(i=0;i<n;i++) { scanf("%d%d%d",&@@ a.@@ num,&@@ x,&@@ y); a.@@ z=@@ x+@@ y; if(a@@ .z@@ >@@ max1@@ .z@@ ) { max3=max2; max2=@@ max1; max1=@@ a; } elseif(a@@ .z@@ >@@ max2@@ .z@@ ) { max3=max2; max2=@@ a; }elseif(@@ a@@ .z@@ >@@ max3@@ .z@@ ) { max3=@@ a; max3=@@ a; } } printf("%d%d\n%d%d\n%d%d\n",@@ max1@@ .num,@@ max1@@ .@@ z,@@ max2@@ .num,@@ max2@@ .@@ z,@@ max3@@ .num,@@ max3@@ .@@ z); }  
c -1
h -1
0

chars@@ [100][@@ 255@@ ]; intmain(){ intn,k,i,j,@@ b=0,@@ c=0,@@ d=0,@@ e=0,@@ flag=0; intnum[@@ 1000]; scanf("%d%d",&n,&k); for(i=0;i<n;i++){ scanf("%d",&@@ num[i]); } for(i=0;i<n@@ -1@@ &&@@ !@@ flag@@ ;i++){ for(j=i+1;j<n;j++){ if(num@@ [i]+@@ num@@ [j]==k){ flag=1; } } } if(flag@@ ==1){ printf("yes"); }else{ printf("no"); } return0; }  
c -1
h -1
intn; inth@@ [30]; int@@ len@@ [30]; intmain() { scanf("%d",&n); for(inti=0;i<n;i++) { scanf("%d",&h[i]); } len@@ [0]=1; for(inti=1;i<@@ n;i++) { len@@ [i]=1; for(intj=0;j<i;j++) { if(h@@ [j]>=@@ h@@ [i]@@ &&@@ len@@ [j]+1>@@ len@@ [i]) len@@ [i]=@@ len@@ [j]+1; } } int@@ maxi@@ =0; for(inti=0;i<n;i++) if(@@ len@@ [i]>@@ maxi@@ ) maxi@@ =@@ len@@ [i]; printf("%d\n",@@ maxi@@ ); }  
c -1
h -1
0

intmain(){ double@@ m,@@ x; int@@ t=0,@@ a,b,@@ u@@ =0; char@@ ji@@ [501],@@ yin@@ [501]; scanf("%lf",&@@ m); scanf("%s",@@ ji@@ ); scanf("%s",@@ yin@@ ); a=strlen(@@ ji@@ ); b=strlen(@@ yin@@ ); if(a!=@@ b){ printf("error"); }else{ for(int@@ q@@ =0;q@@ <a@@ ;q@@ ++){ if((@@ ji@@ [q@@ ]!='@@ A'&&@@ ji@@ [q@@ ]!='@@ T'&&@@ ji@@ [q@@ ]!='@@ C'&&@@ ji@@ [q@@ ]!='@@ G')||(@@ yin@@ [q@@ ]!='@@ A'&&@@ yin@@ [q@@ ]!='@@ C'&&@@ yin@@ [q@@ ]!='@@ T'&&@@ yin@@ [q@@ ]!='@@ G')){ u@@ =1; } } if(@@ u@@ ==1){ printf("error"); }else{ for(int@@ h@@ =0;h@@ <@@ a;@@ h@@ ++){ if(@@ ji@@ [h@@ ]==@@ yin@@ [h@@ ]){ t++; } } x@@ =1.0*@@ t@@ /@@ a; if(x>@@ m){ printf("yes"); }else{ printf("no"); } } } return0; }  
c -1
h -1
voidmain() { inti,j; intn,m; int@@ sum,@@ num; int@@ lon@@ ,@@ wid@@ ; int@@ c@@ [100][100]; scanf("%d",&n); for(i=0;i<n;i++){ for(j=0;j<n;j++){ scanf("%d",&(@@ c@@ [i][j]@@ )); } } for(i=0;i<n;i++){ sum=0; for(j=0;j<n;j++){ if(c@@ [i][j]==0) sum+=@@ 1; if(sum@@ >2) lon@@ =@@ sum; } } for(j=0;j<n;j++){ num=0; for(i=0;i<n;i++){ if(c@@ [i][j]==0) num@@ +=1; if(num@@ >2) wid@@ =@@ num; } } m@@ =(@@ lon@@ -2)*(@@ wid@@ -2); printf("%d\n",m); }  
c -1
h -1
0

intmain() { intn,k,i,j,@@ p=1; intsz[1000]; scanf("%d%d\n",&n,&@@ k); scanf("%d",&sz@@ [0]); for(i=1;i<n;i++){ scanf("%d",&sz[i]); } for(i=0;i<n;i++){ for(j=i;j<@@ n;j++){ if(sz[i]+sz@@ [j]==k){ printf("yes"); return0; } } } printf("no"); return0; }  
c -1
h -1
intm,n,@@ a[100@@ ],b[100],c[@@ 200]; int@@ order@@ (int@@ str@@ [],int@@ po@@ ,int@@ start@@ ) { for(inti=1;i<@@ po@@ ;i++) { for(intj=1;j<=@@ po@@ -i;j++) { if(str@@ [j]>@@ str@@ [j+1@@ ])@@ swap(@@ str@@ [j],@@ str@@ [j+1]); } } for(inti=@@ start@@ ;i<@@ po@@ +@@ start@@ ;i++) { c[i]=@@ str@@ [i-@@ start@@ +1]; } return0; } int@@ output@@ () { order@@ (a,@@ m,@@ 1); order@@ (b,@@ n,@@ m@@ +1); for(inti=1;i<@@ m+@@ n;i++)@@ cout<<@@ c[i]@@ <<""; cout<<c[@@ m+@@ n]; return0; } intmain() { cin>>m>>n; for(inti=1;i<=@@ m@@ ;i++)@@ cin>>a[i]; for(intj=1;j<=@@ n@@ ;j++)@@ cin>>@@ b[j]; output@@ (); return0; }  
c -1
h -1
0

intmain() { intn,m,@@ i,j,@@ shu@@ [100][100],@@ hang@@ =1,@@ lie@@ =1,@@ count,@@ mark@@ ,@@ zddjx@@ ,@@ duijiao@@ ,@@ jh@@ =1,@@ jl@@ =1; cin>>n>>m; count=@@ n*@@ m; for(i=1;i<=n;i++) { for(j=1;j<=m;j++) { cin>>@@ shu@@ [i][j]; } } if(n==1) { for(j=1;j<=m;j++) { cout<<@@ shu@@ [1]@@ [j]<<endl; } } if(n==1) { return0; } if(m==1) { for(j=1;j<=n;j++) { cout<<@@ shu@@ [j]@@ [1]@@ <<endl; } return0; } if(m==1) { return0; } cout<<@@ shu@@ [@@ hang@@ ][@@ lie@@ ]<<endl; duijiao@@ =@@ hang@@ +@@ lie@@ ; count@@ --; while(@@ count@@ !=0) { duijiao@@ ++; hang@@ =@@ jh@@ ; lie@@ =@@ duijiao@@ -@@ hang@@ ; if(@@ lie@@ ==@@ m) { jh@@ ++; } while(@@ lie@@ >=@@ jl@@ ) { cout<<@@ shu@@ [@@ hang@@ ][@@ lie@@ ]<<endl; count@@ --; hang@@ ++; lie@@ --; } if(@@ hang@@ ==@@ n@@ +1) { jl@@ ++; } } return0; }  
c -1
h -1
intmain(){ int@@ a=0,@@ i,@@ l,@@ b=0; doublen; char@@ B@@ [@@ 510@@ ],@@ A[@@ 510@@ ]; scanf("%lf",&n); scanf("%s",@@ B@@ ); for(i=0;@@ B@@ [i]!='\0';i++){ if(@@ B@@ [i]!='A'&&@@ B@@ [i]!='T'&&@@ B@@ [i]!='C'&&@@ B@@ [i]!='G')@@ {@@ a@@ =1;} } scanf("%s",@@ A@@ ); for(i=0;@@ A@@ [i]!='\0';i++){ if(A@@ [i]!='A'&&@@ A@@ [i]!='T'&&@@ A@@ [i]!='C'&&@@ A@@ [i]!='G')@@ {@@ a@@ =1;} } if(strlen(@@ B@@ )!=strlen(@@ A@@ )||@@ a@@ ==1){@@ printf("error"); return0;} l=strlen(@@ B@@ ); for(i=0;i<l;i++){ if(@@ B@@ [i]==@@ A@@ [i]@@ ){@@ b@@ ++;} } if(1.0*@@ b@@ /@@ l>@@ n@@ ){printf("yes");} else{printf("no");} return0; }  
c -1
h -1
0

intmain(){ float@@ a,@@ rate@@ ; inti,@@ lena@@ ,@@ lenb@@ ,@@ sum=0; scanf("%f",&@@ a); char@@ an@@ [501],@@ bn@@ [501]; scanf("%s",@@ an@@ ); scanf("%s",@@ bn@@ ); lena@@ =strlen(@@ an@@ ); lenb@@ =strlen(@@ bn@@ ); if(@@ lena@@ !=@@ lenb@@ ){ printf("error"); return0; } for(i=0;i<@@ lena@@ ;i++){ if((@@ an@@ [i]!='A'&&@@ an@@ [i]!='T'&&@@ an@@ [i]!='C'&&@@ an@@ [i]!='G')||(@@ bn@@ [i]!='A'&&@@ bn@@ [i]!='T'&&@@ bn@@ [i]!='C'&&@@ bn@@ [i]!='G')){ printf("error"); return0; } } for(i=0;i<@@ lena@@ ;i++){ if(@@ an@@ [i]==@@ bn@@ [i]) sum+=@@ 1; } rate@@ =1.0*@@ sum/@@ lena@@ ; if(@@ rate@@ >@@ a) printf("yes"); else printf("no"); return0; }  
c -1
h -1
intmain() { intk; inta[100][100]; cin>>k; intm,n; inti,j; intsum; for(intl@@ =0;@@ l<@@ k;@@ l++) { sum=0; cin>>m>>n; for(i=0;i<m;i++) for(j=0;j<n;j++) { cin>>*(*(a+i)+j); } for(j=0;j<n;j++) { if(m@@ -1@@ !=0)@@ sum+=*(*(a@@ +@@ 0)@@ +j)@@ +*(@@ *(a@@ +m-1)@@ +j); else@@ sum+=*(*(a@@ +@@ 0)@@ +j); } for(i=1;i<m-1;i++) { sum+=@@ *(*(a+i)@@ +@@ 0)@@ +*(@@ *(a+i)@@ +n-1); } cout<<sum<<endl; } return0; }  
c -1
h -1
0

intmain() { intk,@@ l,@@ i,j,@@ x=0; chars[256],@@ a[@@ 256],b[@@ 256],@@ p@@ [256]; gets(s); gets(a); gets(b); k=@@ (int)@@ strlen(@@ s); l=@@ (int)@@ strlen(@@ a); for(i=0;i<@@ k-@@ l@@ +1@@ ;i++){ for(j=0;j<l@@ ;j++){ p@@ [j]=@@ s@@ [j+i@@ ]; } p@@ [j]@@ ='\0'; if(strcmp(@@ p,@@ a)@@ ==0){ x@@ =i; break; } } if(x@@ ==0){ printf("%s",s); } else{ for(i=0;i<x;i++){ printf("%c",s[i]); } printf("%s",@@ b); for(i=@@ x+@@ l@@ ;i<@@ k;i++){ printf("%c",s[i]); } } return0; }  
c -1
h -1
intm,n,@@ a[@@ 10@@ ],b[@@ 10@@ ],c[@@ 20]; voidshuru@@ () { inti; scanf("%d%d",&m,&n); for(i=1;i<=m;i++) scanf("%d",&@@ a[i@@ -1]); for(i=1;i<=n;i++) scanf("%d",&@@ b@@ [i@@ -1]); } voidpaixu@@ () { int@@ c,@@ i,j; for(j=0;j<m-1;j++) for(i=0;i<m@@ -1-j;i++) if(a[i]>a[i+1]) { c=@@ a[i]; a[i]=a[i+1]; a[i+1]=@@ c; } for(j=0;j<n-1;j++) for(i=0;i<n@@ -1-j;i++) if(b[i]>b[i+1]) { c=@@ b[i]; b[i]=b[i+1]; b[i+1]=@@ c; } } void@@ zhenghe@@ () { inti; for(i=0;i<m;i++) c[i]=a[i]; for(i=m;i<@@ m+n;i++) c[i]=b[i-@@ m]; } voidshuchu@@ () { inti; for(i=0;i<m+@@ n-1;i++) printf("%d",c[i]); printf("%d",c[@@ m+@@ n-1]); } voidmain() { shuru@@ (); paixu@@ (); zhenghe@@ (); shuchu@@ (); }  
c -1
h -1
0

intmain() { introw,col; inta[100][100]; cin>>row>>col; for(inti=1;i<=@@ row;i++) for(intj=1;j<=@@ col;j++) cin>>a[i][j]; for(inti=2;i<=@@ col@@ +@@ row;i++) for(intj=1;j<=@@ i-1;j++) { if(i@@ -j@@ >@@ col@@ )continue; if(j@@ >@@ row@@ )continue; cout<<@@ a[j][i-j@@ ]<<endl; } return0; }  
c -1
h -1
intmain() {int@@ order@@ (int@@ m); int@@ n1,n2; cin>>@@ n1@@ >>@@ n2; order@@ (@@ n1); cout<<"@@ "; order@@ (@@ n2); return0; } int@@ order@@ (intm) {@@ inta[1000]; inti,j,temp; for(i=1;i<=m;i++) cin>>a[i]; for(i=1;i<=@@ m-1;i++) for(j=1;j<=@@ m@@ -i;j++) if(a[j]>a[j+1]) {@@ temp=@@ a[j];a[j]=a[j+1];@@ a[j+1]=@@ temp;} for(i=1;i<=@@ m-1;i++) cout<<a[i]<<""; cout<<@@ a[m@@ ]; return0; }  
c -1
h -1
0

structstudent { intnum; charname@@ [20]; structstudent*next; }; structstudent*creat@@ (intn) { structstudent*@@ p1,*p2,*head; inti; p1=p2@@ =(structstudent*)malloc(len); head=NULL; i=0; while(i<n) { scanf("%d%s",&p1->num,p1->name); i=i+1; if(i@@ ==1)head=p1; elsep2->next=p1; p2=p1; p1@@ =(structstudent*)malloc(len); } p2->next=NULL; returnhead; } voidmain() { inti; structstudent*head,*@@ p; intn; scanf("%d",&n); head=creat(n); p=head; inta[@@ 26]; for(i=0;i<26;i++) { a[i]=0; } while(p!=NULL) { for(i=0;i<@@ 20@@ ;i++) { a[@@ (int)@@ p->@@ name@@ [i]@@ -'A']++; } p=p->next; } int@@ number,@@ max=0; for(i=0;i<26;i++) { if(a[i]>max) { max=a[i]; number@@ =i; } } printf("%c\n",@@ 'A'+@@ number); printf("%d\n",max); p=head; while(p!=NULL) { for(i=0;i<@@ 20@@ ;i++) { if(p->@@ name@@ [i]=='@@ A'+@@ number@@ ) break; } if(p->@@ name@@ [i]=='@@ A'+@@ number@@ ) printf("%d\n",p->num); p=p->next; } }  
c -1
h -1
structstudent { intnum; int@@ score1@@ ; int@@ score2; intsum; structstudent*next; structstudent*@@ before@@ ; }; main() { inti,n,@@ n1@@ =0,@@ n2@@ =0,@@ n3@@ =0,@@ m1@@ =0,@@ m2@@ =0,@@ m3@@ =0; structstudent*head; structstudent*p1,*p2; scanf("%d",&n); p1=p2=(structstudent*)malloc(LEN); scanf("%d%d%d",&p1->num,&p1->@@ score1@@ ,&p1->@@ score1@@ ); p1->sum=p1->@@ score1@@ +p1->@@ score2; m1@@ =p1->@@ sum; n1@@ =p1->@@ num; head@@ =0; i=0; while(i<=@@ n-2@@ ) { i++; if(i==1) head=p1; else { p1->@@ before@@ =p2; p2->next=p1; } p2=p1; p1=(structstudent*)malloc(LEN); scanf("%d%d%d",&p1->num,&p1->@@ score1@@ ,&p1->@@ score2); p1->sum=p1->@@ score1@@ +p1->@@ score2; if(p1->@@ sum>@@ m3@@ &&@@ p1->@@ sum<=@@ m2@@ ) { m3@@ =p1->@@ sum; n3@@ =p1->@@ num; } if(p1->@@ sum>@@ m2@@ &&@@ p1->@@ sum<=@@ m1@@ ) { m3=@@ m2@@ ; n3@@ =@@ n2; m2@@ =p1->@@ sum; n2@@ =p1->@@ num; } if(p1->@@ sum>@@ m1@@ ) { m3=@@ m2@@ ; n3@@ =@@ n2; m2=@@ m1@@ ; n2@@ =@@ n1@@ ; m1@@ =p1->@@ sum; n1@@ =p1->@@ num; } } printf("%d%d\n",@@ n1,@@ m1@@ ); printf("%d%d\n",@@ n2,@@ m2@@ ); printf("%d%d\n",@@ n3@@ ,@@ m3@@ ); }  
c -1
h -1
0

int@@ read(); int@@ find@@ (); intn,k,@@ a[1000],@@ m; intmain() { read(); m=@@ find@@ (); if(m==0) printf("no"); else@@ printf("yes"); return0; } int@@ read@@ () { inti; scanf("%d%d",&n,&k); for(i=1;i<=n;i++) scanf("%d",&a[i]); return0; } int@@ find@@ () { inti,j; for(i=1;i<=n-1;i++) for(j=i+1;j<=n;j++) {@@ if(a[i]+a[j]==k) {@@ return1; break; } } return0; }  
c -1
h -1
intmain() { chars1@@ [1000],@@ s2@@ [1000]; inti,j,k,@@ l1,@@ n,@@ l2@@ ; double@@ m; scanf("%lf",&@@ m); scanf("%s",@@ s1); scanf("%s",@@ s2); l1=strlen(@@ s1); l2=strlen(@@ s2); if(l1!=l2@@ )@@ printf("error"); else { n=0; for(i=0;i<l1;i++) { if(((@@ s1@@ [i]!='A')&&(@@ s1@@ [i]!='T')&&(@@ s1@@ [i]!='C')&&(@@ s1@@ [i]!='G')@@ )||((@@ s2@@ [i]!='A')&&(@@ s2@@ [i]!='T')&&(@@ s2@@ [i]!='C')&&(@@ s2@@ [i]!='G')@@ )) { printf("error"); exit@@ (@@ 0); } if(s1[i]==s2@@ [i])@@ n++; } if(1.0*@@ n/@@ l1@@ >=@@ m)@@ printf("yes"); elseprintf("no"); } return0; }  
c -1
h -1
0

int@@ minf@@ (intp@@ ,int@@ min); intmain(){ intn,i,k,@@ p,@@ zs@@ [@@ 20000@@ ]={0}; scanf("%d",&n); for(i=0;i<n;i++){ scanf("%d",&@@ p); zs@@ [i]=@@ minf@@ (p,@@ 2); zs@@ [i]++; } for(i=0;i<n-1;i++){ printf("%d\n",@@ zs@@ [i]); } printf("%d",@@ zs@@ [@@ n-1]); return0; } int@@ minf@@ (intp@@ ,int@@ min@@ ){ int@@ x=0,@@ i; i=@@ min@@ ; for(i@@ ;i<=@@ (int)@@ sqrt@@ (p@@ );i++){ if(p@@ %i==0){ x@@ +=@@ minf@@ (p@@ /i,@@ i)@@ +1; } } return@@ x; }  
c -1
h -1
main() { intk,@@ n_max@@ ,i; inta[@@ 25]; scanf("%d",&k); intn@@ [k]; for(i=0;i<k;i++) { scanf("%d",&a[i]); n@@ [i]=1; } for(intj=@@ k@@ -2@@ ;j>=0;j--) { for(intt@@ =j+1@@ ;t@@ <k;@@ t++) { if(a[@@ t@@ ]<=@@ a[j]@@ &&n@@ [j]<=@@ n@@ [t@@ ]) n@@ [j]=@@ n@@ [t@@ ]+1; } } n_max@@ =0; for(intp@@ =0;p@@ <k@@ ;p++) { if(n@@ [p@@ ]>@@ n_max@@ ) n_max@@ =@@ n@@ [p@@ ]; } printf("%d\n",@@ n_max@@ ); }  
c -1
h -1
0

intmain() { inti,@@ year,@@ month,@@ date@@ ,@@ num; for(i=1;i<=@@ 5;i++) { scanf("%d%d%d",&year,&month,&@@ date@@ ); switch(month) { case1:@@ num@@ =0;@@ break; case2:@@ num=@@ 31;break; case3:@@ num=@@ 59@@ ;break; case4:@@ num=@@ 90@@ ;break; case5:@@ num=@@ 120@@ ;break; case6:@@ num=@@ 151@@ ;break; case7:@@ num=@@ 181@@ ;break; case8:@@ num=@@ 212@@ ;break; case9:@@ num=@@ 243@@ ;break; case10:@@ num=@@ 273@@ ;break; case11:@@ num=@@ 304@@ ;break; case12:@@ num=@@ 334@@ ;break; } if((year%4==0&&year%100!=0@@ ||@@ year%@@ 400==0)@@ &&@@ month@@ >@@ 2)@@ num@@ +=1; num+=@@ date; printf("%d\n",num); } return0; }  
c -1
h -1
intmain() { inta[16],@@ sum=0,@@ j,@@ i,k,@@ n=0; while(1){ for(i=0;i<16;i++) { scanf("%d",&a[i]); n=n+1; if(a[i]==0) { n=@@ n-1; for(k=0;k<@@ (@@ n-1)@@ ;k++) { for(j=k@@ +1@@ ;j<n;j++) { if((@@ a[j]==@@ a[k]@@ *2@@ )||(@@ a[k]==@@ a[j]@@ *2@@ )) { sum=sum+1; } } } printf("%d\n",sum); i=0; sum=0; n=0; break; } else { if(a[i]==-1) { return0; } } } } return0; }  
c -1
h -1
0

intmain(){ chars1@@ [501],@@ s2[@@ 502@@ ]; int@@ l1,l2@@ ,i; double@@ std@@ ,@@ aa@@ ; scanf("%lf\n",&@@ std@@ ); scanf("%s@@ \n",@@ s1); scanf("%s",@@ s2); l1=strlen(@@ s1); l2=strlen(@@ s2); aa@@ =-1; if(l1@@ ==@@ l2@@ ){ aa@@ =0; for(i=0;i<l1;i++){ if(s1[i]==s2@@ [i])@@ aa@@ ++; if(s1@@ [i]!='A'&&@@ s1@@ [i]!='C'&&@@ s1@@ [i]!='T'&&@@ s1@@ [i]!='G')@@ {@@ aa@@ =-@@ 1@@ ;break;} if(s2@@ [i]!='A'&&@@ s2@@ [i]!='C'&&@@ s2@@ [i]!='T'&&@@ s2@@ [i]!='G')@@ {@@ aa@@ =-@@ 1@@ ;break;} } } if(@@ aa@@ ==@@ -1)@@ printf("error"); else{ aa@@ =@@ aa@@ /@@ l1; if(@@ aa@@ >@@ std@@ )@@ printf("yes"); elseprintf("no"); } return0; }  
c -1
h -1
intmain() { inti,@@ l,@@ p; doublen,@@ m=0,@@ b; char@@ d[@@ 501],@@ f@@ [501]; scanf("%lf",&n); scanf("%s",@@ d); scanf("%s",@@ f); l=strlen(@@ d); p@@ =strlen(@@ f); if(l@@ !=@@ p@@ ){@@ printf("error"); return0;} for(i=0;@@ d@@ [i]@@ ;i++){ if(!@@ (@@ d@@ [i]=='A'||@@ d@@ [i]=='T'||@@ d@@ [i]=='G'||@@ d@@ [i]=='@@ C')){ printf("error"); return0@@ ;}} for(i=0;@@ f@@ [i]@@ ;i++){ if(!@@ (@@ f@@ [i]=='A'||@@ f@@ [i]=='T'||@@ f@@ [i]=='G'||@@ f@@ [i]=='@@ C')){ printf("error"); return0@@ ;}} for(i=0;@@ d@@ [i]@@ ;i++){ if(d@@ [i]==@@ f@@ [i])@@ m@@ ++;} b=@@ m/@@ l; if(b@@ >=@@ n)@@ printf("yes"); elseprintf("no"); return0; }  
c -1
h -1
1


intmain() { inta,b,c,@@ n; scanf("%d%d%d",&a,&b,&c); if(a%@@ 400==0||(@@ a%4==0&&a%100!=0@@ )) { switch(@@ b){ case1: { n=@@ c; break; } case2: { n=31+@@ c; break; } case3: { n=@@ 60@@ +c; break; } case4: { n=@@ 91@@ +c; break; } case5: { n=@@ 121@@ +c; break; } case6: { n=@@ 152@@ +c; break; } case7: { n=@@ 182@@ +c; break; } case8: { n=@@ 213@@ +c; break; } case9: { n=@@ 244@@ +c; break; } case10: { n=@@ 274@@ +c; break; } case11: { n=@@ 305@@ +c; break; } case12: { n=@@ 335@@ +c; break; } } } else { switch(@@ b){ case1: { n=@@ c; break; } case2: { n=31+@@ c; break; } case3: { n=@@ 59@@ +c; break; } case4: { n=@@ 90@@ +c; break; } case5: { n=@@ 120@@ +c; break; } case6: { n=@@ 151@@ +c; break; } case7: { n=@@ 181@@ +c; break; } case8: { n=@@ 212@@ +c; break; } case9: { n=@@ 243@@ +c; break; } case10: { n=@@ 273@@ +c; break; } case11: { n=@@ 304@@ +c; break; } case12: { n=@@ 334@@ +c; break; } } } printf("%d",n); return0; }  
c -1
h -1
structstudent {int@@ num;@@ int@@ a;@@ int@@ b@@ ;@@ intsum@@ ;@@ int@@ c;@@ }; voidmain() { intn,i,j,@@ nt@@ ,@@ ct@@ ; structstudentstu[100000]; scanf("%d",&n); for(i=0;i<n;i++) {@@ scanf("%d%d%d",&stu[i].num,&stu[i].@@ a@@ ,&stu[i].@@ b); stu[i].sum=stu[i].@@ a+@@ stu[i].@@ b@@ ;@@ stu[i].@@ c=@@ stu[i].@@ sum@@ ;} for(i=0;i<3;i++) for(j=i+1;j<n;j++) { if(stu[i].@@ c@@ <@@ stu[j].@@ c){ nt@@ =stu[i].@@ num;@@ stu[i].@@ num=@@ stu[j].@@ num;@@ stu[j].@@ num=@@ nt@@ ; ct@@ =stu[i].@@ c;@@ stu[i].@@ c=@@ stu[j].@@ c;@@ stu[j].@@ c=@@ ct@@ ; } } for(i=0;i<3;i++) printf("%d%d\n",stu[i].@@ num,@@ stu[i].@@ c); }  
c -1
h -1
0

int@@ fg@@ (int@@ k,int@@ m) { intj,@@ d=0; if(m==1) { d=1; } for(j=k@@ ;j<=@@ m;j++) { if(m@@ %j==0) d=d+@@ fg@@ (@@ j,@@ m@@ /j@@ ); } return(@@ d); } intmain() { intn,i,@@ a[@@ 40000@@ ],b[@@ 40000@@ ],@@ s; scanf("%d",&n); for(i=1;i<=n;i++) { scanf("%d",&a[i]); } for(i=1;i<=n;i++) { b[i]=@@ fg@@ (2,@@ a[i]); printf("%d\n",@@ b[i]); } return0; }  
c -1
h -1
intmain(intargc,char*argv[]) { int@@ A[@@ 1000][1000]; intn,@@ a,b,@@ c,d; inti=0,j=0; scanf("%d",&n); for(i=0;i<n;i++) { for(j=0;j<n;j++) { scanf("%d",&@@ A@@ [i][j]); if(A@@ [i][j]==0&&@@ A@@ [i]@@ [j-1]@@ !=0&&@@ A@@ [i-1][j]@@ !=0) { a=i; b=j; } if(A@@ [i][j]==0&&@@ A@@ [i]@@ [j-1]@@ ==0&&@@ A@@ [i-1][j]@@ ==0) { c=i; d=j; } } } printf("%d",(@@ c-a-1)*(d-b@@ -1)); return0; }  
c -1
h -1
0

voidmain() { inti,j,n,@@ m,@@ a[100][100],@@ l; scanf("%d%d",&n,&m); for(i=0;i<100;i++) for(j=0;j<@@ 100@@ ;j++)@@ a[i][j]@@ =0; for(i=0;i<n;i++) for(j=0;j<m@@ ;j++)@@ scanf("%d",&a[i][j]); l=@@ n+@@ m; for(i=0;i<=@@ l@@ ;i++) { for(j=0;j<=i;j++) { if(j@@ <n@@ &&(@@ i@@ -j@@ )@@ <@@ m) printf("%d\n",@@ a[j][i-j@@ ]); } } }  
c -1
h -1
intmain() { intk=0; cin>>k; for(inti=0;i<k;i++) { intm=0,@@ n=0; cin>>m>>n; int@@ mat@@ [100][100@@ ]={0}; intsum=0; for(intj=0;j<m;j++) for(intk=0;k<@@ n;k++) { cin>>@@ *(*(@@ mat@@ +j)+@@ k); if((@@ j@@ ==0)||(@@ j==@@ m-1)@@ ||(@@ k@@ ==0)||(@@ k==@@ n-1@@ )) { sum=sum+*(@@ *(@@ mat@@ +j)+@@ k); } } cout<<sum<<endl; } return0; }  
c -1
h -1
0

intmain() { intn,m,@@ a[100][100],@@ row,col,@@ i; scanf("%d%d",&n,&m); for(row=0;row<n;@@ row++) { for(col=0;col@@ <m;@@ col@@ ++) { scanf("%d",&a[@@ row][col@@ ]); } } if(n@@ <@@ m) { for(i=0;i<n;i++) { for(row=0;row@@ <=i@@ ;@@ row++) printf("%d\n",a[@@ row@@ ]@@ [i-@@ row@@ ]); } for(i=n@@ ;i<@@ m;i++) { for(row=0;row<n;@@ row++) printf("%d\n",a[@@ row@@ ]@@ [i-@@ row@@ ]); } for(i=m;i<@@ n+@@ m-1;i++) { for(col@@ =@@ m-1@@ ;col@@ >=i@@ -n@@ +1;@@ col@@ --) printf("%d\n",@@ a[i@@ -col@@ ][col@@ ]); } } if(n@@ >=@@ m) { for(i=0;i<m;i++) { for(row=0;row@@ <=i@@ ;@@ row++) printf("%d\n",a[@@ row@@ ]@@ [i-@@ row@@ ]); } for(i=m@@ ;i<n;i++) { for(col@@ =@@ m-1@@ ;col@@ >=0;@@ col@@ --) printf("%d\n",@@ a[i@@ -col@@ ][col@@ ]); } for(i=n@@ ;i<@@ n+@@ m-1;i++) { for(col@@ =@@ m-1@@ ;col@@ >=i@@ -n@@ +1;@@ col@@ --) printf("%d\n",@@ a[i@@ -col@@ ][col@@ ]); } } return0; }  
c -1
h -1
intmain() { intk,i,j,@@ m,n,@@ g,@@ h,@@ p,@@ q=0,@@ a[@@ 25],b[@@ 25@@ ],c[@@ 25]; for(i=0;i<@@ 25;i++) b[i]=1; i=0; scanf("%d\n",&@@ k); for(i=0;i<k;i++) { if(i==0) scanf("%d",&a[0]); else scanf("%d",&a[i]); } if(k@@ ==1||@@ k@@ ==0) printf("%d",k); else { for(j=k@@ -2@@ ;j>=0;j--) { for(p=@@ j@@ +1@@ ;p<@@ k@@ ;p++) { if(a[j]>=@@ a[p@@ ]) { c[@@ q@@ ]=@@ b[p@@ ]; q++; } } if(q@@ ==0) b[j]@@ =1; elseif(@@ q@@ ==1) b[j]=@@ c@@ [0]+@@ b[j]; else { for(@@ g@@ =0;@@ g@@ <@@ q@@ -1;@@ g@@ ++) { m=@@ c[@@ g@@ ]; n=@@ c[@@ g@@ +1]; if(m@@ >n) { c[@@ g@@ ]=@@ n; c[@@ g@@ +1]=@@ m; } } b[j]=@@ c[@@ q@@ -1]@@ +@@ b[j]; q=0; g=0; p=@@ j; } } for(h=0;h@@ <k@@ -1;@@ h++) { m=@@ b[@@ h@@ ]; n=@@ b[@@ h@@ +1]; if(m@@ >n) { b[@@ h@@ ]=@@ n; b[@@ h@@ +1]=@@ m; } } printf("%d",@@ b[k@@ -1]); } }  
c -1
h -1
0

intmain() { inti=0,j=0,@@ k=0,@@ s=0,@@ a,b,@@ c=0,@@ m=0; charstring@@ [257],@@ substring@@ [256],@@ replacement@@ [256]; gets(@@ string); gets(@@ substring); gets(@@ replacement); a=strlen(@@ string); b=strlen(@@ substring); for(i=0;i<a;i++){ k=0; if(string@@ [i]==@@ substring@@ [0]){ for(j=i;j<i+@@ b@@ ;j++){ if(string@@ [j]==@@ substring@@ [j-i@@ ])@@ k++; elsebreak; } } if(k==@@ b){ break; } m@@ =i+1; } for(i=0;i<a;i++){ if(i>=@@ m@@ &&i@@ <b@@ +m@@ ){ printf("%c",@@ replacement@@ [i-@@ m@@ ]); } else{ printf("%c",@@ string@@ [i]); } } return0; }  
c -1
h -1
intmain() { inta[@@ 101][@@ 16@@ ],b[100@@ ]={0},@@ c[@@ 101],@@ k,i,j,@@ l,@@ m; for(i=1;@@ 1@@ ;i++) { scanf("%d",&a[i]@@ [1]); if(a[i]@@ [1@@ ]==@@ (@@ -1)) { i--; break; } else for(j=2@@ ;@@ 1@@ ;j++) { scanf("%d",&a[i][j]); if(a[i][j]==0) { j=j-1; break; } } c[i]=@@ j; } for(k=1;k<=@@ i;k++) { for(l=1;l@@ <=@@ c@@ [k]@@ ;l++) { for(m=1;m@@ <=@@ c@@ [k]@@ ;m++) { if(a[k@@ ][m@@ ]@@ /@@ a[k@@ ][l@@ ]==@@ 2@@ &&@@ a[k@@ ][m@@ ]@@ %@@ a[k@@ ][l@@ ]==0) b[k]=@@ b[k@@ ]+1; else b[k]=@@ b[k@@ ]; } } printf("%d\n",@@ b[k@@ ]); } return0; }  
c -1
h -1
0

intr,@@ c@@ ,*@@ p,@@ n,m,@@ i,j,k; voidmain() { void@@ x@@ (int@@ i); void@@ y@@ (int@@ i); scanf("%d%d",&@@ r@@ ,&c); n=@@ r@@ *@@ c;@@ m=@@ r@@ +c@@ -2@@ ; p=@@ (int*)malloc(n*sizeof(int)); for(i=0;i<n;i++) scanf("%d",p@@ +i); for(i=0;i<c@@ ;i++)@@ x@@ (i); for(i=@@ c@@ ;i<=@@ m@@ ;i++)@@ y@@ (i); } void@@ x@@ (int@@ i) { inta; for(a@@ =i;@@ a@@ >=0@@ &&(@@ i@@ -@@ a)@@ <@@ r@@ ;a@@ --) printf("%d\n",@@ *(p+@@ (i@@ -@@ a)@@ *@@ c+@@ a@@ )); } void@@ y@@ (int@@ i) { inta; for(@@ a=@@ c@@ -1;@@ a@@ >=0@@ &&(@@ i@@ -@@ a)@@ <@@ r@@ ;a@@ --) printf("%d\n",@@ *(p+@@ (i@@ -@@ a)@@ *@@ c+@@ a@@ )); }  
c -1
h -1
intm,n,@@ a[@@ 20@@ ]={0},b[@@ 20@@ ]={0},@@ c[@@ 40@@ ]={0},@@ i,j,k; intmain() { void@@ qushu@@ (); voidpaixu@@ (); voidhebing@@ (); void@@ xianshi@@ (); qushu@@ (); paixu@@ (); hebing@@ (); xianshi@@ (); } void@@ qushu@@ () { scanf("%d%d",&m,&n); for(i=0;i<m;i++) scanf("%d",&a[i]); for(i=0;i<n;i++) scanf("%d",&b[i]); } voidpaixu@@ () { for(i=0;i<m-1;i++) for(j=0;j<m-1;j++) { if(a[j]>a[j+1]) { k=@@ a[j]; a[j]=a[j+1]; a[j+1]=@@ k; } } for(i=0;i<n-1;i++) for(j=0;j<n-1;j++) { if(b[j]>b[j+1]) { k=@@ b[j]; b[j]=b[j+1]; b[j+1]=@@ k; } } } voidhebing@@ () { for(i=0;i<m;i++) c[i]=a[i]; for(i=m;i<@@ m+n;i++) c[i]=b[i-@@ m]; } void@@ xianshi@@ () { printf("%d",c@@ [0]); for(i=1;i<@@ m+n;i++) printf("%d",c[i]); printf("\n"); }  
c -1
h -1
0

intmain() { inti,j,k,@@ la@@ ,lb@@ ,@@ f=0; chara[@@ 300],b[@@ 300@@ ],c[@@ 300],@@ tem@@ [300]; gets(a); gets(b); gets(c); la@@ =strlen(a); lb@@ =strlen(b); for(i=0;i<@@ la;i++) {@@ k=0; for(j=i;j<@@ lb@@ +i@@ ;j++) { tem@@ [k@@ ++]=@@ a[j]; if(j==@@ lb@@ +i@@ -1)@@ tem@@ [k]@@ =0; } if(!@@ strcmp(@@ tem@@ ,@@ b)@@ &&@@ f@@ ==0) {@@ f@@ ++; printf("%s",@@ c)@@ ;i@@ +=@@ lb@@ -1; } else@@ printf("%c",a[i]); } }  
c -1
h -1
intmain() { intt=0; int@@ monthday@@ [@@ 13]={0,31,@@ 28@@ +@@ t@@ ,31,30,31,30,31,31,30,31,30,31}; intyear,month,day; scanf("%d%d%d",&year,&month,&day); if(year%@@ 4==0&&year%100!=0@@ ||@@ year%@@ 400==0)@@ t=1; int@@ summonth@@ =0; intsum=0; inti; for(i=0;i<@@ month@@ ;i++)@@ summonth@@ +=@@ monthday@@ [i]; sum=@@ summonth@@ +day; printf("%d",sum); return0; }  
c -1
h -1
0

structpatient { charid@@ [11]; intage; structpatient*next; }; intmain() { structpatient*@@ head; structpatient*@@ create@@ (int@@ n); voidsort@@ (structpatient@@ *head@@ ); intn; scanf("%d",&n); head=@@ create@@ (n); sort(@@ head); return0; } structpatient*@@ create@@ (intn) { inti; structpatient@@ *head,*p1,*p2; p1=(struct@@ patient@@ *)malloc(len); head=p1; p2=p1; scanf("%s%d",@@ p1->id,&p1->age); for(i=1;i<n;i++) { p1=(struct@@ patient@@ *)malloc(len); scanf("%s%d",@@ p1->id,&p1->age); (@@ p2->next@@ )@@ =p1; p2=p1; if(i==@@ (n-1@@ )) (@@ p1->next@@ )@@ =NULL; } returnhead; } voidsort@@ (structpatient@@ *head) { intm; structpatient*@@ p1,*p2; for(;;) { p1=head; p2=head; m=0; for(;;) { if((@@ p1->age@@ )>@@ m)@@ m@@ =(@@ p1->@@ age); if((@@ p1->next@@ )==@@ NULL@@ )break; else@@ p1@@ =(@@ p1->next@@ ); } if(m@@ <60@@ )break; p1=head; for(;;) { if((@@ p1->age@@ )==@@ m) { printf("%s\n",@@ p1->@@ id); if(@@ p1@@ ==@@ head@@ )@@ head@@ =(@@ p1->next@@ ); else { (@@ p2->next@@ )@@ =(@@ p1->next@@ ); } break; } else { if(@@ p1@@ !=@@ p2@@ ) { p2=p1; p1@@ =(@@ p1->next@@ ); } else@@ p1@@ =(@@ p1->next@@ ); } } } p1=head; for(;;) { printf("%s\n",@@ p1->@@ id); if((@@ p1->next@@ )==@@ NULL@@ )break; else@@ p1@@ =(@@ p1->next@@ ); } }  
c -1
h -1
intmain() { intn,@@ i=0,@@ a,@@ sum=0,@@ m; scanf("%d",&n); while(i<=@@ n*@@ n) { scanf("%d",&a); i=i+1; if(a==0) sum=sum+1; } m=@@ sum@@ *@@ sum/@@ 16@@ +1@@ -@@ sum@@ /2; printf("%d\n",m); return0; }  
c -1
h -1
0

intmain() { int@@ A[@@ 12]={31,28,31,30,31,30,31,31,30,31,30,31}; int@@ B@@ [@@ 12]={31,29,31,30,31,30,31,31,30,31,30,31}; inty,m,d,@@ i; scanf("%d%d%d",&y,&m,&d); int@@ s=@@ d; if((y%@@ 4==0&&y%100!=0@@ )||(y%@@ 400==0)) {@@ for(i=0;i<@@ (m@@ -1);i++) {@@ s+=@@ B@@ [i]; } printf("%d",@@ s@@ );} else {@@ for(i=0;i<@@ (m@@ -1);i++) { s+=@@ A@@ [i]; } printf("%d",@@ s@@ );} return0; }  
c -1
h -1
intmain() { inta[@@ 20001@@ ],@@ count[@@ 101@@ ]={0}; intn,i; cin>>n; for(i=1;i<=n;i++) { cin>>a[i]; count[@@ a[i]@@ ]++; } cout<<@@ a[1]; count[@@ a[1]@@ ]=0; for(i=2;i<=n;i++) { if(count@@ [@@ a[i]@@ ]>=@@ 1) { cout<<""<<a[i]; count[@@ a[i]@@ ]=0; } } cout<<endl; return0; }  
c -1
h -1
0

int@@ DFS@@ (int,int); intmain() { int@@ q; cin>>@@ q; for(inti=0;i<@@ q@@ ;i++) { intn; inth@@ =0; cin>>n; cout<<@@ DFS@@ (n,@@ n@@ )<<endl; } return0; } int@@ DFS@@ (intn,int@@ p) { int@@ ans=0; if(n@@ ==1)@@ return1; for(inti=2;i<=@@ p@@ ;i++) { if(n%i==0) { ans=@@ ans@@ +@@ DFS@@ (n/i,i); } } return@@ ans; }  
c -1
h -1
intmain() { int@@ Student_Num@@ ; cin>>@@ Student_Num@@ ; struct@@ A { intID; intchinese; intmath; inttotal; }@@ student[@@ 100000@@ +@@ 10],@@ a[@@ 3@@ ]; for(inti=0;i<=@@ Student_Num@@ -1;i++) { cin>>@@ student[i].@@ ID; cin>>@@ student[i].@@ chinese; cin>>@@ student[i].@@ math; student[i].@@ total=@@ student[i].@@ math+@@ student[i].@@ chinese; } a[0]=@@ a[1@@ ]=a[@@ 2@@ ]=@@ student@@ [0]; for(inti=0;i<=@@ Student_Num@@ -1;i++) { if(@@ student[i].@@ total>@@ a[0].@@ total@@ )@@ a[0]=@@ student@@ [i]; } for(inti=0;i<=@@ Student_Num@@ -1;i++) { if(@@ student[i].@@ total>@@ a[1].@@ total@@ &&@@ student[i].@@ total@@ <=@@ a[0].@@ total@@ &&@@ student[i].@@ ID@@ !=@@ a[0].@@ ID@@ )@@ a[1]=@@ student@@ [i]; } for(inti=0;i<=@@ Student_Num@@ -1;i++) { if(@@ student[i].@@ total>@@ a[2].@@ total@@ &&@@ student[i].@@ total@@ <=@@ a[1].@@ total@@ &&@@ student[i].@@ ID@@ !=@@ a[0].@@ ID@@ &&@@ student[i].@@ ID@@ !=@@ a[1].@@ ID@@ )@@ a[2]=@@ student@@ [i]; } for(inti=0;i<=@@ 2@@ ;i++) { cout<<@@ a[i].@@ ID@@ <<""<<@@ a[i].@@ total@@ <<endl; } return0; }  
c -1
h -1
0

structbook { intnum; char@@ wr@@ [26]; structbook*next; }; voidmain() { inti,n,@@ m=0,@@ j,@@ a,b,@@ c; ints@@ [100]={0}; scanf("%d",&n); structbook@@ *head,*@@ p1,*p2,*@@ p; p1=p2=(struct@@ book@@ *)malloc(LEN); scanf("%d%s",&p1->num,p1->@@ wr@@ ); head=NULL; while(m@@ !=@@ n-1) { m=m+1; if(m@@ ==1)head=p1; elsep2->next=p1; p2=p1; p1=(structbook@@ *)malloc(LEN); scanf("%d%s",&p1->num,p1->@@ wr@@ ); } p2->next=p1; p2=p1; p2->next=NULL; p=head; do { b=strlen(@@ p->@@ wr@@ ); for(j=0;j<@@ b;j++) s[@@ p->@@ wr@@ [j]@@ ]++; p=p->next; }while(p@@ !=NULL); a=@@ s[@@ 65@@ ]; c=@@ 65@@ ; for(i=@@ 66@@ ;i<@@ 91@@ ;i++) if(a<@@ s@@ [i]) { a=@@ s[i]; c=i; } printf("%c\n%d\n",@@ c,@@ a); p=head; do { b=strlen(@@ p->@@ wr@@ ); for(j=0;j<@@ b;j++) if(p->@@ wr@@ [j]==@@ c) printf("%d\n",p->num); p=p->next; }while(p@@ !=NULL); }  
c -1
h -1
intmain() { intn,@@ m[@@ 10000@@ ],i,j,@@ x[@@ 10000],@@ z@@ =0,@@ h@@ =1; scanf("%d\n",&n); for(i=1;i<=n;i++) scanf("%d",&@@ x@@ [i@@ -1]); m@@ [0]=@@ x@@ [0]; for(i=2;i<=n;i++) {@@ z=0; for(j=1;j<=@@ i-1;j++) if(x@@ [j-1@@ ]==@@ x@@ [i-1@@ ]) z=1; if(z@@ ==0){@@ m[@@ h@@ ]=@@ x@@ [i-1]; h=@@ h@@ +1;} } for(i=0;i<=@@ h@@ -1;i++) {printf("%d",@@ m[i]); if(i!=@@ h@@ -1)@@ printf("@@ ");} return0; }  
c -1
h -1
0

intleap@@ (int@@ n){ intleap@@ =0; if(n%@@ 400@@ ==0||@@ n@@ %100!=0@@ &&n@@ %@@ 4@@ ==0)@@ leap@@ =1; return(@@ leap@@ ); } intmain(){ intyear,month,day,@@ th@@ =0,@@ a[@@ 13]={0,31,28,31,30,31,30,31,31,30,31,30,31}; scanf("%d%d%d",&@@ year,@@ &@@ month,@@ &@@ day); if(leap@@ (year@@ )@@ ==1)@@ a[2]=@@ 29; for(inti=0;i<@@ month@@ ;i++)@@ th@@ =@@ th@@ +@@ a[i]; th@@ =@@ th@@ +day; printf("%d",@@ th@@ ); return(0); }  
c -1
h -1
intmain() {@@ intn,i,@@ m=0,@@ p,@@ flag=0,@@ a@@ =-@@ 2,@@ b; scanf("%d",&n); for(i=0;i<n@@ *@@ n;i++) {scanf("%d",&@@ p); if(p@@ ==0) {@@ if(m@@ ==0){@@ flag@@ =1;m@@ ++;@@ a@@ ++;} elseif(@@ flag@@ ==1){@@ m@@ ++;@@ a@@ ++;} else@@ m@@ ++;} else{@@ if(flag@@ ==1)@@ flag@@ =0;} } b=@@ m@@ /2@@ -@@ a@@ -2@@ ; printf("%d",@@ a*@@ b); }  
c -1
h -1
0

voidmain() { structbook@@ {int@@ num;@@ charauthor@@ [26@@ ];@@ }b[@@ 999]; inta[@@ 26]={0},@@ n,@@ i,j,k,@@ max=0; scanf("%d",&n); for(i=0;i<n;i++)@@ scanf("%d%s",&@@ b[i].@@ num,@@ b[i].@@ author); for(i=0;i<26;i++) { for(j=0;j<n;j++) { k=0; while(@@ b[j].@@ author@@ [k]@@ !='\0') {@@ if(b[j]@@ .@@ author@@ [k]==@@ i@@ +65@@ )@@ a[i]@@ ++; k@@ ++;} } } for(i=0;i<26@@ ;i++)@@ if(max<@@ a[i]@@ )max=@@ a[i]; i=0; while(@@ max@@ !=@@ a[i])@@ i++; printf("%c\n%d\n",@@ i@@ +65@@ ,@@ a[i]); for(j=0;j<n;j++) {@@ k=0; while(@@ b[j].@@ author@@ [k]@@ !=@@ i@@ +65@@ &&@@ b[j].@@ author@@ [k]@@ !=@@ '\0')@@ k++; if(b[j]@@ .@@ author@@ [k]==@@ i@@ +65@@ )@@ printf("%d\n",@@ b[j].@@ num); } }  
c -1
h -1
intmain() { intn,i,j,@@ x[@@ 20000]; cin>>n; for(i=0;i<n;i++) { cin>>@@ x[i]; } for(i=0;i<n;i++) for(j=i+1;j<n;j++) { if(x@@ [i]==@@ x[j]@@ &&i!=@@ j) { x[j]@@ =0; } } cout<<@@ x@@ [0]; for(i=1;i<n;i++) { if(x@@ [i]!=0) { cout<<""<<@@ x[i]; } } cout<<endl; return0; }  
c -1
h -1
0

intn@@ [2]; voidinput@@ (inta[],intb[],int@@ n@@ [2@@ ]) { inti; scanf("%d%d",&@@ n@@ [0]@@ ,&@@ n@@ [1]); for(i=0;i<n@@ [0]@@ ;i++) scanf("%d",&a[i]); for(i=0;i<n@@ [1]@@ ;i++) scanf("%d",&b[i]); } voidsort@@ (int*p@@ ,int*@@ q@@ ,int*@@ x) { inti,j,k,@@ t; for(i=0;i<@@ (*@@ x@@ -1);i++) { k=i; for(j=i+1;j<@@ (*@@ x@@ );j++) if(@@ *(p+j)@@ <*@@ (p@@ +k@@ ))@@ k=j; if(k!=@@ i) {@@ t@@ =*(p@@ +i@@ );@@ *(p+i)@@ =*(p@@ +k@@ );@@ *(p@@ +k)@@ =@@ t;} } for(i=0;i<*@@ (x@@ +1)@@ -1;i++) { k=i; for(j=i+1@@ ;j@@ <*@@ (x@@ +1)@@ ;j++) if(*(@@ q@@ +j)@@ <*@@ (@@ q@@ +k@@ ))@@ k=j; if(k!=@@ i) {@@ t@@ =*(@@ q@@ +i@@ );@@ *(q@@ +i)@@ =*(@@ q@@ +k@@ );@@ *(q@@ +k)@@ =@@ t;} } } void@@ fold@@ (int*p@@ ,int*@@ x@@ ,int*@@ q@@ ,int*@@ w@@ ) { inti; for(i=0;i<*@@ x@@ ;i++,@@ w@@ ++,@@ p++) *@@ w@@ =*@@ p; for(@@ ;i<@@ (*@@ x@@ )+@@ (*(@@ x@@ +1)@@ )@@ ;i++,@@ w@@ ++,@@ q++) *@@ w@@ =*@@ q; } void@@ putout@@ (int*@@ w@@ ,int*@@ x) { inti; for(i=0;i<@@ (*@@ x@@ )+@@ (*(@@ x@@ +1)@@ )@@ -1;i++) printf("%d",@@ *(@@ w@@ +i)); printf("%d\n",*(@@ w@@ +i)); } voidmain() { inta[100@@ ],b[100],c[@@ 200]; input@@ (a,b,@@ n); sort@@ (a,b,@@ n); fold@@ (a,n,@@ b,@@ c); putout@@ (c,@@ n); }  
c -1
h -1
intmain(){ while(1){ inta[16@@ ];@@ inti=0,@@ n=0,@@ k; while(1){ scanf("%d",&a[i]); if(a[i]==0)break; if(a[i]==@@ -1)@@ return0; i@@ ++;} for(i=0;a[i]@@ !=0;i++) for(k=0;@@ a[k]@@ !=0@@ ;k++) { if(a[k@@ ]==2*@@ a[i])@@ n++; } printf("%d\n",n@@ );}}  
c -1
h -1
0

structstudent { intnum; float@@ yuwen; float@@ shuxue; float@@ total; }stu[100000]; voidmain() { inti,n,@@ j; structstudent*@@ p; p@@ =&@@ stu[@@ 0]; scanf("%d",&n); for(i=0;i<n;i++) { scanf("%d@@ %@@ f@@ %@@ f",&@@ (p+i)->@@ num,&@@ (p+i)->@@ yuwen@@ ,&@@ (p+i)->@@ shuxue); (p+i)->@@ total@@ =(@@ p@@ +i)->@@ shuxue@@ +@@ (p+i)->@@ yuwen; } for(i=0;i<3;i++) for(j=0;j<n-1-i;j++) { if((@@ *(p+j)@@ ).@@ total@@ >=@@ (@@ *(p@@ +j+1)@@ ).@@ total) { structstudent@@ temp; temp@@ =*(p@@ +j@@ +1); *(p@@ +j+1)@@ =*(p@@ +j); *(p+j)@@ =temp; } } if(n@@ >2) for(i=1;i<@@ 4;i++) printf("%d@@ %@@ g@@ \n",@@ (@@ *(p+@@ n-i@@ ))@@ .num,@@ (@@ *(p+@@ n-i@@ ))@@ .@@ total); elseif(@@ n=@@ 2) printf("%d@@ %@@ g@@ \n@@ %d@@ %@@ g@@ \n",@@ (@@ *(p@@ +1)@@ ).@@ num,@@ (@@ *(p@@ +1)@@ ).@@ total@@ ,@@ (*p).@@ num,@@ (*p).@@ total); }  
c -1
h -1
inta[1000][1000]; intmain() { intn,i,j,@@ i1@@ ,@@ j1@@ ,@@ i2@@ ,@@ j2@@ ,@@ flag=1; cin>>n; for(i=0;i<n;i++) { for(j=0;j<n;j++) { cin>>*(*(a+i)+j); if(flag@@ &&@@ *(*(a+i)@@ +j)@@ ==0){@@ i1@@ =i;@@ j1@@ =j@@ ;@@ flag@@ =0;} } } for(i=@@ i1@@ ;i<n;i++) { if(@@ *(*(a+i)@@ +@@ j1@@ )@@ !=0@@ ){@@ i2@@ =i@@ -1;@@ break;} } if(i==@@ n)@@ i2@@ =i-1; for(j=@@ j1@@ ;j<n;j++) { if(@@ *(*(a@@ +@@ i2@@ )@@ +j)@@ !=0@@ ){@@ j2@@ =j@@ -1;@@ break;} } if(j==@@ n)@@ j2@@ =j@@ -1; cout<<(@@ i2@@ -@@ i1@@ -1)*(@@ j2@@ -@@ j1@@ -1)@@ <<endl; return0; }  
c -1
h -1
0

int@@ minf@@ (intp@@ ,int@@ min); intmain(){ intn,i,k,@@ p,@@ zs@@ [@@ 20000@@ ]={0}; scanf("%d",&n); for(i=0;i<n;i++){ scanf("%d",&@@ p); zs@@ [i]=@@ minf@@ (p,@@ 2); zs@@ [i]++; } for(i=0;i<n-1;i++){ printf("%d\n",@@ zs@@ [i]); } printf("%d",@@ zs@@ [@@ n-1]); return0; } int@@ minf@@ (intp@@ ,int@@ min@@ ){ int@@ x=0,@@ i; i=@@ min@@ ; for(i@@ ;i<=@@ (int)@@ sqrt@@ (p@@ );i++){ if(p@@ %i==0){ x@@ +=@@ minf@@ (p@@ /i,@@ i)@@ +1; } } return@@ x; }  
c -1
h -1
structpatient { charname@@ [20]; intage; }@@ line@@ [@@ 202@@ ],@@ temp; intmain() { intn,i,j; scanf("%d",&n); for(i=1;i<=n;i++) { scanf("%s",&@@ line@@ [i].@@ name); scanf("%d",&@@ line@@ [i].age); } for(i=1;i<=n;i++) { for(j=n@@ ;j>i;j--) { if(@@ line@@ [j].age@@ >=60){ if(@@ line@@ [j].age@@ >@@ line@@ [j-1@@ ].age) { temp=@@ line@@ [j]; line@@ [j]=@@ line@@ [j-1]; line@@ [j-1]=@@ temp; } } } } for(i=1;i<=n;i++) { printf("%s\n",@@ line@@ [i].@@ name); } return0; }  
c -1
h -1
0

voidmain() { intn,i,@@ age@@ [100],@@ a[100],@@ j=0,@@ k,@@ l,@@ temp,@@ ord@@ [100],@@ o@@ [100]; char@@ num@@ [100][10],@@ old@@ [100][10],@@ t@@ [10]; scanf("%d",&n); for(i=0;i<n;i++)@@ scanf("%s%d",@@ num[i]@@ ,&@@ age[i]); for(i=0;i<n;i++)@@ ord@@ [i]=@@ i; for(i=0;i<n;i++) { if(age[i]@@ >=60) { a[j]=@@ age[i]; o@@ [j]=@@ ord@@ [j]; strcpy(old@@ [j],@@ num[i]); j++; } } for(k=0;k<j@@ ;k++) { for(l@@ =k@@ +1;@@ l<@@ j@@ ;l++) { if(a[k]@@ <@@ a[l@@ ]) { temp=@@ a[k]; a[k@@ ]=a[@@ l@@ ]; a[l@@ ]=temp; temp=@@ o@@ [k]; o@@ [k]=@@ o@@ [l]; o@@ [l@@ ]=temp; strcpy(@@ t,@@ old@@ [k]); strcpy(old@@ [k],@@ old@@ [l]); strcpy(old@@ [l@@ ],@@ t); } } } for(k=0;k<j@@ ;k++) { for(l@@ =k@@ +1;@@ l<@@ j@@ ;l++) { if(a[k@@ ]==@@ a[l@@ ]) { if(@@ o@@ [k]@@ >@@ o@@ [l@@ ]) { temp=@@ a[k]; a[k@@ ]=a[@@ l@@ ]; a[l@@ ]=temp; temp=@@ o@@ [k]; o@@ [k]=@@ o@@ [l]; o@@ [l@@ ]=temp; strcpy(@@ t,@@ old@@ [k]); strcpy(old@@ [k],@@ old@@ [l]); strcpy(old@@ [l@@ ],@@ t); } } } } for(i=0;i<j@@ ;i++)@@ printf("%s\n",old@@ [i]); for(i=0;i<n;i++) { if(age[i]@@ <60@@ )@@ printf("%s\n",@@ num[i]); } }  
c -1
h -1
intmain() { inti,j,n,@@ max=0,@@ maxb@@ =0; scanf("%d",&n); int*@@ a=@@ (int*)malloc(n*sizeof(int)); int*@@ b=@@ (int*)@@ calloc@@ (n,@@ sizeof(int@@ )); for(i=@@ (@@ n-1)@@ ;i>=0;i--) scanf("%d",&a[i]); b[0]@@ =1; for(i=1;i<=@@ (n-1);i++) { max=0; for(j=0;j<=@@ (i@@ -1)@@ ;j++) { if(a[i]>=@@ a[j]&&@@ b[j]@@ >max) { max=@@ b[j]; } } b[i]=@@ max+1; } for(i=1;i<=@@ (n-1);i++) { if(b[i]>@@ maxb@@ ) maxb@@ =@@ b[i]; } printf("%d",@@ maxb@@ ); }  
c -1
h -1
0

intmain() { chars[@@ 260@@ ],@@ s1@@ [260],@@ s2@@ [260],@@ s3@@ [260@@ ]; inti,j,k,l,@@ h,@@ len,@@ len1,len2@@ ; gets(s); gets(@@ s1); gets(@@ s2); len@@ =strlen(s); len1=strlen(@@ s1); len2=strlen(@@ s2); for(i=0,@@ h@@ =0;i<@@ len@@ ;i++,@@ h++) { s3@@ [h@@ ]=@@ s[i]; if(s[i]==@@ s1@@ [0]) { int@@ e=1; for(j=0@@ ,k@@ =i@@ ;j<@@ len1@@ ;j++@@ ,k++) { if(s@@ [k]@@ !=@@ s1@@ [j]) { e=0; break; } } if(e@@ ) { for(l=0;l<@@ len2@@ ;@@ l@@ ++,@@ h++) { s3@@ [h@@ ]=@@ s2@@ [l]; } h@@ --; i@@ =i+@@ len1@@ -1; s1@@ [0]@@ ='@@ .@@ '; } } } s3@@ [@@ len@@ -@@ len1@@ +len2@@ ]='\0'; printf("%s",@@ s3); return0; }  
c -1
h -1
structstudent { intnum; int@@ score1@@ ; int@@ score2; intsum; structstudent*next; }; structstudent*creat@@ (intm) { inti=0; structstudent*head,*p1,*p2; p1=p2=(structstudent*)malloc(LEN); scanf("%d%d%d",&p1->num,&p1->@@ score1@@ ,&p1->@@ score2); p1->@@ sum=(@@ p1->@@ score1@@ )+@@ (@@ p1->@@ score2); head=NULL; while(@@ p1->num@@ <@@ m) { i++; if(i@@ ==1)head=p1; elsep2->next=p1; p2=p1; p1=(structstudent*)malloc(LEN); scanf("%d%d%d",&p1->num,&p1->@@ score1@@ ,&p1->@@ score2); p1->@@ sum=(@@ p1->@@ score1@@ )+@@ (@@ p1->@@ score2); } p2->next=NULL; return(head); } voidprint@@ (structstudent*head@@ ) { structstudent*@@ p=@@ head,*@@ q=@@ head; int@@ a=0,b=0,@@ c=0; if(head@@ !=NULL) {@@ do { if(a<@@ p->@@ sum) {@@ a=@@ p->@@ sum;@@ q=@@ p@@ ;} p=p->next; }while(p@@ !=NULL); printf("%d%d\n",@@ q->@@ num,@@ q->@@ sum); q->@@ sum=0; p=@@ head;@@ q=@@ head; do {@@ if(b@@ <@@ p->@@ sum) {@@ b=@@ p->@@ sum;@@ q=@@ p@@ ;} p=p->next; }while(p@@ !=NULL); printf("%d%d\n",@@ q->@@ num,@@ q->@@ sum); q->@@ sum=0; p=@@ head;@@ q=@@ head; do {@@ if(c@@ <@@ p->@@ sum) {@@ c=@@ p->@@ sum;@@ q=@@ p@@ ;} p=p->next; }while(p@@ !=NULL); printf("%d%d",@@ q->@@ num,@@ q->@@ sum); } } voidmain() { intm; scanf("%d",&m); structstudent*head@@ ,@@ stu@@ ; head=creat@@ (m); print(head); }  
c -1
h -1
0

intmain() { intf@@ (intx,int@@ y); intn,i; inta[100]; scanf("%d",&n); for(i=0;i<n;i++) { scanf("%d",&a[i]); printf("%d\n",@@ f(@@ a[i],@@ 2)); } scanf("%d",&@@ i); return0; } intf@@ (intx,inty) { ints@@ ,j,@@ k,@@ l,@@ m,n; if(x@@ ==1)@@ s=1; elseif(@@ y@@ >@@ x)@@ s=0; else{ for(l=1;l@@ <=@@ x@@ ;l++) { k=0; if(x%@@ l@@ ==0)@@ k=k+1; } if(k==@@ 2)@@ s=1; else { s=0; for(j=@@ y@@ ;j<=@@ x;j++) { if(x@@ %j@@ ==0){@@ s=s+@@ f(@@ x@@ /j@@ ,j@@ );} } } } return@@ s; }  
c -1
h -1
intmain() { chars[256],@@ sub[256],@@ rep@@ [256]; inti,j,k; int@@ lens@@ ,@@ lensub@@ ; gets(@@ s@@ ),@@ gets(@@ sub@@ ),@@ gets(@@ rep); lens@@ =strlen(s); lensub@@ =strlen(@@ sub); for(i=0;i<=@@ lens@@ -@@ lensub@@ ;i++){ for(j=0;j<@@ lensub@@ ;j++) if(s@@ [i+j]!=@@ sub@@ [j]) break; if(j==@@ lensub@@ ){ for(k=0;k<j@@ ;k++) s@@ [i+k@@ ]=@@ '@@ @@@ '; i@@ +=@@ j@@ -1; break; } } for(i=0;i<@@ lens@@ ;i++) if(s@@ [i]=='@@ @@@ '){ while(@@ s@@ [i]=='@@ @@@ ')@@ i++; i--; printf("%s",@@ rep); }else{ printf("%c",s[i]); } return0; }  
c -1
h -1
0

intmain() { inti,j,k; chara[256],b[256],c[256]; scanf("%s",a); scanf("%s",b); scanf("%s",c); for(i=0;i<@@ 256@@ ;i++) {@@ k=0; for(j=0;j<strlen(@@ b@@ );j++) { if(a@@ [j+i@@ ]!=@@ b[j]) { k@@ =1;break;} } if(k==0) {@@ for(j=0;j<i;j++) printf("%c",@@ a[j]); for(j=0;j<strlen(@@ c@@ );j++) printf("%c",@@ c@@ [j]); for(j=i@@ +@@ strlen(b@@ )@@ ;j<@@ strlen(a)@@ ;j++) printf("%c",@@ a[j]); break; } }@@ if(k==1) { for(j=0;j<@@ strlen(a)@@ ;j++) printf("%c",@@ a[j]); } return0; }  
c -1
h -1
main() { inti,@@ l1,l2,@@ k,@@ j,@@ g@@ =0,@@ c=0,@@ m=0,@@ t=0; chars[@@ 256@@ ]={'\0'},@@ sub@@ [256@@ ]={'\0'},@@ replacement@@ [256@@ ]={'\0'},@@ w@@ [@@ 1000@@ ]={'\0'},@@ z[@@ 265@@ ]={'\0'}; scanf("%s%s%s",@@ s,@@ sub,@@ replacement); l1@@ =strlen(s); l2=strlen(@@ sub); for(i=0;@@ t@@ <=@@ l1@@ -1@@ ;i@@ =@@ t) { if(m==0) { if(s[i]==@@ sub@@ [0]) { for(k@@ =0,@@ j@@ =i@@ ;k<=@@ l2@@ -1@@ ;k++@@ ,j@@ ++) {if(@@ sub@@ [k]==@@ s[j]@@ )@@ c@@ ++;} if(c@@ >=@@ l2@@ ) { strcat(@@ w,@@ replacement); m++; t=t+@@ l2@@ ; } else {@@ z@@ [0]=@@ s[i]; strcat(@@ w,@@ z); t@@ ++;} c=0; } else { z@@ [0]=@@ s[i]; strcat(@@ w,@@ z); t++; } } else { z@@ [0]@@ ='\0'; for(k=@@ i,j@@ =0@@ ;k<=@@ l1@@ -1@@ ;k++@@ ,j@@ ++)@@ z@@ [j]=@@ s@@ [k]; strcat(@@ w,@@ z@@ );break; } } if(m@@ !=0)@@ printf("%s\n",@@ w); else@@ printf("%s\n",@@ s); getchar(); getchar(); }  
c -1
h -1
1


inta[@@ 25]; intf@@ (intx) { int@@ t@@ =1,@@ max=1; if(a[x@@ +1@@ ]==0) max=1; else { for(inti=@@ x@@ +1;@@ a[i]@@ !=0;i++) if(a[x@@ ]>=@@ a[i]) { t=@@ f(@@ i)@@ +1; if(t@@ >max)max=@@ t; } } return@@ max; } main() { intn,@@ t,@@ max,@@ i,@@ M@@ ; scanf("%d",&n); memset(a,0,@@ 25@@ *sizeof(int)); for(i=0;i<n;i++) { scanf("%d",&a[i]); } M@@ =@@ f(@@ n-1); for(i=n-2;i>=0;i--) { f(@@ i); if(M@@ <@@ f(@@ i@@ )) M@@ =@@ f(@@ i); } printf("%d",@@ M@@ ); getchar(); getchar(); }  
c -1
h -1
main() { intb,@@ c,@@ e,f,@@ g; scanf("%d",&b); inta[@@ b@@ ],@@ d[@@ b@@ ]; for(c=0;c@@ <b@@ ;c@@ ++) scanf("%d",&@@ a[c@@ ]); d[@@ b@@ -1]@@ =1; for(@@ c=@@ b@@ -2@@ ;c@@ >=0@@ ;c@@ --) { d[@@ c@@ ]@@ =1;@@ f=0; for(@@ e=@@ b@@ -1;@@ e@@ >@@ c;@@ e@@ --) { if(a[@@ c@@ ]>=@@ a[@@ e@@ ]) { if(@@ d[@@ e@@ ]>@@ f@@ ) f=@@ d[@@ e@@ ]; } } d[@@ c@@ ]+=@@ f; } g=@@ d@@ [0]; for(c=0;c@@ <b@@ ;c@@ ++) { if(@@ d[@@ c@@ ]>@@ g@@ ) g=@@ d[@@ c@@ ]; } printf("%d",@@ g@@ ); }  
c -1
h -1
1


intmain() { int@@ u@@ [1000],@@ v@@ [1000]; inti,j,n,@@ k,@@ a=0; scanf("%d%d",&n,&k); for(i=0;i<n;i++){ scanf("%d",&@@ u@@ [i]); } for(j=0;j<n;j++){ v@@ [j]=@@ u@@ [j]; } for(i=0;i<n;i++){ for(j=0;j<n;j++){ if(i==@@ j){ continue; }else{ if(@@ u@@ [i]+@@ v@@ [j]==k){ a++; }else{ continue; } } } } if(a@@ ==0){ printf("no"); }else{ printf("yes"); } return0; }  
c -1
h -1
inta[@@ 5000@@ ],b[@@ 5000@@ ],@@ N1@@ ,@@ N2@@ ,@@ c[@@ 10000]; int@@ f1@@ () { intn; scanf("%d%d",&@@ N1@@ ,&@@ N2@@ ); for(n=0;n@@ <=@@ N1@@ -1;@@ n++) { scanf("%d",&@@ a[n@@ ]); } for(n=0;n@@ <=@@ N2@@ -1;@@ n++) { scanf("%d",&@@ b[@@ n@@ ]); } return0; } int@@ f2@@ () { inti,j,t; for(i=1;i<=@@ N1@@ -1;i++) { for(j=0;j<=@@ N1@@ -i-1;j++) { if(a[j]>a[j+1]) { t=a[j]; a[j]=a[j+1]; a[j+1]=t; } } } for(i=1;i<=@@ N2@@ -1;i++) { for(j=0;j<=@@ N2@@ -i-1;j++) { if(b[j]>b[j+1]) { t=@@ b[j]; b[j]=b[j+1]; b[j+1]=@@ t; } } } return0; } int@@ f3@@ () { inti,j; for(i=0;i<=@@ N1@@ -1;i++) { c[i]=a[i]; } for(i=@@ N1@@ ,j@@ =0;i<=@@ N1@@ +@@ N2@@ -1@@ ;i++,j++) { c[i]=@@ b[j]; } return0; } int@@ f4@@ () { inti; printf("%d",c@@ [0]); for(i=1;i<=@@ N1@@ +@@ N2@@ -1;i++) { printf("%d",c[i]); } return0; } intmain() { f1@@ (); f2@@ (); f3@@ (); f4@@ (); }  
c -1
h -1
0

intmain() { intn,k,i,j,@@ k2@@ =0; inta[@@ 1000]={0}; cin>>n>>k; for(i=0;i<n;i++) cin>>a[i]; i@@ =0;j@@ =0; while(@@ k2@@ !=@@ k@@ &&i@@ <n) { j@@ =i+1; while(@@ k2@@ !=@@ k@@ &&j@@ <n) { k2@@ =@@ a[i]+a[j]; j++; } i++; } if(@@ k2@@ ==k) cout<<"yes"; else cout<<"no"; return0; }  
c -1
h -1
inta[1000][1000]; intmain() { intn,i,j; int@@ m1@@ =0,@@ n1@@ =0,@@ m2@@ =0,@@ n2@@ =0,@@ s=0; scanf("%d",&n); for(i=0;i<n;i++) { for(j=0;j<n;j++) { scanf("%d",&a[i][j]); } } for(i=0;i<n;i++) { for(j=0;j<n;j++) { if(a[i][j]==0&&@@ a[i]@@ [j+1]@@ ==0&&@@ a[i+1@@ ][j]@@ ==0) { m1@@ =i; n1@@ =j; } } } for(i=0;i<n;i++) { for(j=0;j<n;j++) { if(a[i][j]==0&&@@ a[i-1]@@ [j]@@ ==0&&@@ a[i][j-1]@@ ==0) { m2@@ =i; n2@@ =j; } } } s=(@@ m2@@ -@@ m1@@ -1)*(@@ n2@@ -@@ n1@@ -1); printf("%d\n",s); return0; }  
c -1
h -1
0

structdata@@ { int@@ w; charc[@@ 20]; int@@ old@@ ; structdata@@ *next; structdata@@ *@@ onext@@ ; }; intmain(){ inti,j,n,@@ max,@@ x; scanf("%d",&n); structdata@@ *head@@ =(struct@@ data@@ *)malloc(sizeof(struct@@ data@@ )); structdata@@ *p,*@@ pp@@ ,*@@ de@@ ; pp@@ =head; for(i=0;i<n;i++){ p=(struct@@ data@@ *)malloc(sizeof(struct@@ data@@ )); scanf("%s%d",@@ p->@@ c@@ ,&p->@@ w); p->@@ old@@ =0; pp@@ ->next=p; pp@@ =p; } structdata@@ *@@ old@@ =(struct@@ data@@ *)malloc(sizeof(struct@@ data@@ )); pp@@ =@@ head->next; de@@ =@@ old@@ ; x=0; for(i=0;i<n;i++){ if(@@ pp@@ ->@@ w@@ >@@ 59@@ ){ pp@@ ->@@ old@@ =1; de@@ ->@@ onext@@ =@@ pp@@ ; de@@ =@@ pp@@ ; x++; } pp@@ =@@ pp@@ ->next; } for(i=0;i<x;i++){ pp@@ =@@ old@@ ->@@ onext@@ ; max=0; for(j=0;j<@@ x@@ ;j++){ if(@@ pp@@ ->@@ w@@ >max){ max=@@ pp@@ ->@@ w; de@@ =@@ pp@@ ; } pp@@ =@@ pp@@ ->@@ onext@@ ; } printf("%s\n",@@ de@@ ->@@ c); de@@ ->@@ w@@ =-1; } pp@@ =@@ head->next; for(i=0;i<n;i++){ if(@@ pp@@ ->@@ old@@ ==0)@@ printf("%s\n",@@ pp@@ ->@@ c); pp@@ =@@ pp@@ ->next; } }  
c -1
h -1
intmain() { inta[@@ 20000],b[@@ 20000@@ ]={0}; inti,j,k,@@ m=0,@@ n; scanf("%d",&n); for(i=0;i<n;i++) scanf("%d",&a[i]); for(i=0,j@@ =0;i<@@ n@@ ;i++,@@ m@@ =0@@ ) { for(k=j@@ ;k>=0@@ ;k--) { if(a[i]==@@ b[k@@ ]) { m=1; break; } } if(m==0) { b[j]=@@ a[i]; j++; } } for(i=0;i<j@@ -1;i++) printf("%d",b[i]); printf("%d",@@ b@@ [j-1]); return0; }  
c -1
h -1
0

intmain(){ int@@ l1,l2,@@ s=0; double@@ r,@@ d; chars1@@ [max@@ +1],@@ s2@@ [max@@ +1]; scanf("%lf%s%s",&@@ r,@@ s1,@@ s2); l1=strlen(@@ s1); l2=strlen(@@ s2); if(l1!=l2@@ ){ printf("error"); return0; }else{@@ for(inti=0;i<@@ l1@@ ;i++){ if((@@ s1@@ [i]!='A'&&@@ s1@@ [i]!='G'&&@@ s1@@ [i]!='C'&&@@ s1@@ [i]!='T')@@ ||(@@ s2@@ [i]!='A'&&@@ s2@@ [i]!='G'&&@@ s2@@ [i]!='C'&&@@ s2@@ [i]!='T')@@ ){ printf("error"); return0; } } for(intj=0;j<@@ l1@@ ;j++){ if(s1@@ [j]==@@ s2@@ [j]){ s++; } } d@@ =1.0*@@ s/@@ l1; if(d@@ >@@ r@@ ){ printf("yes"); }@@ else{printf("no");} } return0; }  
c -1
h -1
voidread@@ (intn,@@ inta[100@@ ]) { inti=0; for(i=0;i<n;i++) { cin>>a[i]; } } int@@ paixu@@ (inta[100],int@@ n) { inti,j,t; for(j=@@ n-2@@ ;j>=0;j--) for(i=0;i<=@@ j@@ ;i++) { if(a[i]>a[i+1]) { t=a[i]; a[i]=a[i+1]; a[i+1]=@@ t; } } return(@@ *@@ a); } void@@ mix@@ (inta[],intb[],int@@ c[@@ ],int@@ e@@ ,int@@ d) { inti=0,@@ t; for(i=0;i<@@ e@@ ;i++) { c[i]=a[i]; } for(i=0;i<d@@ ;i++) { c@@ [i+@@ e@@ ]=b[i]; } } voidout@@ (intc[@@ 300@@ ],int@@ e@@ ,int@@ d) { inti=0; for(i=0;i<@@ e@@ +d@@ -1;i++) { cout<<@@ c[i]@@ <<""; } cout<<c[@@ e@@ +d@@ -1]; } intmain() { inta[100@@ ],b[100],c[@@ 300],@@ i=0,@@ x,y; cin>>x@@ >>@@ y; read@@ (x,@@ a); read@@ (@@ y,@@ b); paixu@@ (a,@@ x); paixu@@ (b,@@ y); mix@@ (a,b,@@ c,@@ x,@@ y); out@@ (c,@@ x,@@ y); return0; }  
c -1
h -1
0

voidmain() { intk,@@ m,@@ n@@ ,*@@ sum,@@ i,j@@ ,*@@ q; sum=@@ (int*)malloc(@@ 100*sizeof(int)); q=@@ sum; scanf("%d",&k); for(j=0;j<@@ k@@ ;j++,@@ sum@@ ++) { *@@ sum=0; int@@ *p,*@@ p1; p=@@ (int*)@@ calloc@@ (@@ 1000@@ ,@@ 100*sizeof(int)); scanf("%d%d",&m,&n); p1=@@ p; for(i=0;i<m@@ *@@ n;i++) scanf("%d",p@@ ++@@ ); for(i=0,@@ p=@@ p1@@ ;i<@@ m*@@ n@@ ;i++,@@ p++) if(i<@@ n@@ ||@@ i@@ %n@@ ==0@@ ||(@@ i@@ +1)@@ %n@@ ==0@@ ||(@@ i@@ <@@ n*@@ m@@ &&i@@ >@@ (n@@ *(@@ m-1)@@ -1)@@ )) *@@ sum@@ =*@@ sum@@ +*@@ p; } for(i=0,@@ sum=@@ q@@ ;i<@@ k-1;i++) printf("%d\n",@@ *@@ sum@@ ++@@ ); printf("%d",@@ *@@ sum); }  
c -1
h -1
intmain() { chara[256],b[256],c[256]; inti,j,n; scanf("%s%s%s",a,b,c); n@@ =strlen(b); intm; m=strlen(a); int@@ q,@@ k; for(i=0;i<m;i++) { if(a[i]==@@ b[0]) { k=1; for(j=i;j<i+@@ n;j++) if(b@@ [j-i@@ ]!=@@ a[j]) k=0; if(k@@ ) {@@ q@@ =i; break; } } k=0; } if(k@@ ) { for(i=0;i<@@ q@@ ;i++) printf("%c",a[i]); printf("%s",@@ c); for(i=@@ q@@ +@@ n@@ ;i<@@ m;i++) printf("%c",a[i]); } else { printf("%s",a); }@@ return0; }  
c -1
h -1
0

intmain(){ intn,k,i,j,@@ sz[@@ 1000],@@ sum; scanf("%d%d",&n,&k); for(i=0;i<n-1;i++) scanf("%d",&sz[i]); for(i=0;i<n;i++){ for(j=i+1;j<n;j++){ sum=@@ sz[i]@@ +sz@@ [j]; if(k==@@ sum){ printf("yes"); break; } } if(k==@@ sum) break; if(i==@@ (n-1@@ )&&(@@ sz@@ [i-1]@@ +@@ sz[i]@@ )!=@@ k) printf("no"); } return0; }  
c -1
h -1
intmain(){ char@@ mubiao@@ [N]; char@@ zichuan@@ [N]; char@@ replace@@ [N]; inti; intj=0; int@@ flag; scanf("%s",@@ mubiao@@ ); scanf("%s",@@ zichuan@@ ); scanf("%s",@@ replace); int@@ a=strlen(@@ mubiao@@ ); int@@ b=strlen(@@ zichuan@@ ); for(i=0;i<a;i++){ if(@@ mubiao@@ [i]==@@ zichuan@@ [j]){ j++; }else{ j=0; } if(j==@@ b){ flag=1; break; } } if(flag@@ ==1){ for(j=@@ b@@ -1@@ ;j>=0;j--){ mubiao@@ [i]=@@ replace@@ [j]; i--; } } printf("%s\n",@@ mubiao@@ ); return0; }  
c -1
h -1
0

intmain() {@@ void@@ st@@ (ints[],int@@ i); void@@ cha@@ (ints[],int@@ i); void@@ pp@@ (ints[],int@@ ss@@ [],int@@ m,int@@ n); intm,n; ints@@ [100]={0}; int@@ ss@@ [100]={0}; scanf("%d%d\n",&@@ m,&n); st@@ (@@ s,@@ m); st@@ (@@ ss@@ ,n); cha@@ (@@ s,@@ m); cha@@ (@@ ss@@ ,n); pp@@ (@@ s,@@ ss@@ ,@@ m,n); return0; } void@@ st@@ (int@@ k@@ [],int@@ i) {int@@ j; for(j=1;j<=@@ i;j++) scanf("%d",&@@ k@@ [j]); } void@@ cha@@ (int@@ k@@ [],int@@ i) {int@@ j,@@ m,@@ temp; for(j=1;j<i;j++) {@@ for(m@@ =j+1@@ ;m@@ <=i@@ ;m++) {@@ if(k@@ [m@@ ]<@@ k@@ [j]) {@@ temp=@@ k@@ [m]@@ ;k@@ [m]=@@ k@@ [j]@@ ;k@@ [j]=@@ temp;} } } } void@@ pp@@ (ints[],int@@ ss@@ [],int@@ m,intn) {int@@ i=@@ 2; printf("%d",@@ s@@ [1]); for(i=2;i<=@@ m+n;i++) {@@ if(i@@ <=@@ m) printf("%d",@@ s[i]); else printf("%d",@@ ss@@ [i-@@ m@@ ]); } }  
c -1
h -1
inta[@@ 25]; intf@@ (intx) { int@@ t@@ =1,@@ max=1; if(a[x@@ +1@@ ]==0) max=1; else { for(inti=@@ x@@ +1;@@ a[i]@@ !=0;i++) if(a[x@@ ]>=@@ a[i]) { t=@@ f(@@ i)@@ +1; if(t@@ >max)max=@@ t; } } return@@ max; } main() { intn,@@ t,@@ max,@@ i,@@ M@@ ; scanf("%d",&n); memset(a,0,@@ 25@@ *sizeof(int)); for(i=0;i<n;i++) { scanf("%d",&a[i]); } M@@ =@@ f(@@ n-1); for(i=n-2;i>=0;i--) { f(@@ i); if(M@@ <@@ f(@@ i@@ )) M@@ =@@ f(@@ i); } printf("%d",@@ M@@ ); getchar(); getchar(); }  
c -1
h -1
0

intmain() { chara[256],b[@@ 256],c[@@ 256],@@ d@@ [256],@@ e@@ [256]; inti,j,@@ lena@@ ,@@ lenb@@ ,@@ m,n,@@ k; scanf("%s%s%s",a,b,c); lena@@ =strlen(a); lenb@@ =strlen(b); for(i=0;i<@@ lena@@ ;i++) { m=0; for(j=i;j<i+@@ lenb@@ ;j++) { if(b@@ [j-i@@ ]!=@@ a[j]) m=1; } if(m==0) { for(n=0;n@@ <i@@ ;n++) { d[@@ n@@ ]=a[@@ n]; } d[@@ n@@ ]='\0'; for(k=i+@@ lenb@@ ;k<@@ lena@@ ;k++) { e@@ [k-i@@ -@@ lenb@@ ]=@@ a[k]; } e@@ [k-i@@ -@@ lenb@@ ]='\0'; printf("%s@@ %s%s",@@ d,@@ c,@@ e); break; } } if(m==1) printf("%s",a); return0; }  
c -1
h -1
intmain() { int@@ z[@@ 15],@@ r@@ [100]; inti,j,@@ l; intsum=0; for(i=0;;i++) { scanf("%d",&@@ z@@ [i]); if(z@@ [i]==0) { r@@ [@@ sum@@ ]=0; for(j=0;j<@@ i-1;j++) { for(l@@ =j+1@@ ;@@ l<@@ i@@ ;l++) { if(z@@ [j]==2*@@ z@@ [l@@ ]@@ ||@@ z@@ [j]@@ ==0@@ .@@ 5@@ *@@ z@@ [l@@ ]) { r@@ [@@ sum@@ ]++; } } } sum++; i@@ =-1; } elseif(@@ z@@ [i]==@@ -1)break; } for(i=0;i<@@ sum@@ ;i++) { printf("%d\n",@@ r@@ [i]); } return0; }  
c -1
h -1
0

intmain() { inti=0,j=0,@@ num[@@ 16@@ ]={0},@@ count=0,@@ key@@ =0; cin>>@@ num[@@ 0]; while(@@ num@@ [0]@@ !=-1) { for(i=0;@@ num[i]@@ !=0;i++) { cin>>@@ num@@ [i+1]; } count@@ =i; key@@ =0; for(i=0;i<@@ count@@ ;i++) for(j=i;j<@@ count@@ ;j++) if(num@@ [i]==@@ 2*@@ num[j]@@ ||@@ num@@ [j]==2*@@ num@@ [i]) key@@ ++; cout<<@@ key@@ <<endl; for(i=0;i<16;i++) num@@ [i]=0; cin>>@@ num[@@ 0]; } return0; }  
c -1
h -1
voidmain() { int@@ mat@@ ,@@ chi@@ ,i,@@ num; structstu@@ { intid; int@@ to@@ ; }@@ s[@@ 100001@@ ],@@ temp1@@ ,@@ temp2@@ ,@@ max1,@@ max2@@ ,max3@@ ; scanf("%d",&num); for(i=0;i<@@ num@@ ;i++){ scanf("%d%d%d",&@@ s[i].@@ id,&@@ chi@@ ,&@@ mat@@ ); s[i].@@ to@@ =@@ chi@@ +@@ mat@@ ; } if(s@@ [0].@@ to@@ >@@ s[1].@@ to@@ &&@@ s[1].@@ to@@ >@@ s[2].@@ to@@ ){@@ max1=@@ s[0]@@ ;@@ max2=@@ s[1]@@ ;@@ max3=@@ s[2@@ ];} elseif(@@ s[2].@@ to@@ >@@ s@@ [0].@@ to@@ &&@@ s@@ [0].@@ to@@ >@@ s[1].@@ to@@ ){@@ max1=@@ s[2@@ ];@@ max2=@@ s[0]@@ ;@@ max3=@@ s[1]@@ ;} elseif(@@ s@@ [0].@@ to@@ >@@ s[2].@@ to@@ &&@@ s[2].@@ to@@ >@@ s[1].@@ to@@ ){@@ max1=@@ s[0]@@ ;@@ max2=@@ s[2@@ ];@@ max3=@@ s[1]@@ ;} elseif(@@ s[2].@@ to@@ >@@ s[1].@@ to@@ &&@@ s[1].@@ to@@ >@@ s@@ [0].@@ to@@ ){@@ max1=@@ s[2@@ ];@@ max2=@@ s[1]@@ ;@@ max3=@@ s[0]@@ ;} elseif(@@ s[1].@@ to@@ >@@ s@@ [0].@@ to@@ &&@@ s@@ [0].@@ to@@ >@@ s[2].@@ to@@ ){@@ max1=@@ s[1]@@ ;@@ max2=@@ s[0]@@ ;@@ max3=@@ s[2@@ ];} else{@@ max1=@@ s[1]@@ ;@@ max2=@@ s[2@@ ];@@ max3=@@ s[0]@@ ;} for(i=0;i<@@ num@@ -1;i++){ if(s@@ [i].@@ to@@ >@@ max1@@ .@@ to@@ ){ temp1@@ =@@ max1; temp2@@ =@@ max2; max1=@@ s[i]; max2=@@ temp1@@ ; max3=@@ temp2@@ ; } elseif(@@ s[i].@@ to@@ >@@ max2@@ .@@ to@@ &&@@ s[i].@@ id@@ !=@@ max1@@ .@@ id@@ ){ temp1@@ =@@ max2; max2=@@ s[i]; max3=@@ temp1@@ ; } elseif(@@ s[i].@@ to@@ >@@ max3@@ .@@ to@@ &&@@ s[i].@@ id@@ !=@@ max2@@ .@@ id@@ &&@@ s[i].@@ id@@ !=@@ max1@@ .@@ id@@ )@@ max3=@@ s[i]; } printf("%d%d\n%d%d\n%d%d\n",@@ max1@@ .@@ id,@@ max1@@ .@@ to@@ ,@@ max2@@ .@@ id,@@ max2@@ .@@ to@@ ,max3@@ .@@ id,@@ max3@@ .@@ to@@ ); }  
c -1
h -1
0

voidmain() { structbook { inta; charb[@@ 20]; }@@ book[999]; intn,i,k,@@ max,@@ m,@@ j,@@ p; intc[@@ 999@@ ]={0}; char@@ str1@@ [@@ 20],@@ str2@@ [20]; scanf("%d",&n); for(i=0;i<n;i++) { scanf("%d%s",&book[i].@@ a,&@@ book[i].@@ b); m=strlen(@@ book[i].@@ b); strcpy(@@ str1@@ ,@@ book[i].@@ b); for(j=0;j<m;j++) c[@@ str1@@ [j]@@ ]=@@ c[@@ str1@@ [j]@@ ]+1; } max=0; for(p=@@ 65@@ ;p<@@ 91@@ ;p++) { if(@@ c[@@ p@@ ]@@ >max) {max=@@ c[@@ p@@ ]; k=@@ p@@ ;} } printf("%c\n",@@ k); printf("%d\n",max); for(i=0;i<n;i++) { strcpy(@@ str2@@ ,@@ book[i].@@ b); m=strlen(@@ book[i].@@ b); for(j=0;j<m;j++) {if(@@ str2@@ [j]==k) printf("%d\n",book[i].@@ a@@ );} } }  
c -1
h -1
intmain() { inta[@@ 101][@@ 101@@ ],b[@@ 100000]; introw,col; inti,j,@@ k@@ =(@@ -1)@@ ,sum; scanf("%d%d",&row,&col); for(i=0;i<row;i++) { for(j=0;j<col;j++) scanf("%d",&a[i][j]); } for(@@ sum=0;@@ sum<=@@ ((@@ row+col@@ )@@ -2@@ );@@ sum@@ ++) { for(i=0;i<row;i++) { if(sum@@ -i@@ >=0&&@@ sum@@ -i@@ <col) { k@@ +=1; b[k]=@@ a[i][@@ sum@@ -i@@ ]; } } } for(k=0;k<=@@ row@@ *@@ col-1@@ ;k++) printf("%d\n",@@ b[k@@ ]); return0; }  
c -1
h -1
0

intmain() { chars1@@ [1000],@@ s2@@ [1000]; inti,j,k,@@ l1,@@ n,@@ l2@@ ; double@@ m; scanf("%lf",&@@ m); scanf("%s",@@ s1); scanf("%s",@@ s2); l1=strlen(@@ s1); l2=strlen(@@ s2); if(l1!=l2@@ )@@ printf("error"); else { n=0; for(i=0;i<l1;i++) { if(((@@ s1@@ [i]!='A')&&(@@ s1@@ [i]!='T')&&(@@ s1@@ [i]!='C')&&(@@ s1@@ [i]!='G')@@ )||((@@ s2@@ [i]!='A')&&(@@ s2@@ [i]!='T')&&(@@ s2@@ [i]!='C')&&(@@ s2@@ [i]!='G')@@ )) { printf("error"); exit@@ (@@ 0); } if(s1[i]==s2@@ [i])@@ n++; } if(1.0*@@ n/@@ l1@@ >=@@ m)@@ printf("yes"); elseprintf("no"); } return0; }  
c -1
h -1
main() { structpatient{ charid@@ [11]; intage; }@@ ren@@ [100]; struct@@ oldp@@ { char@@ idold@@ [11]; int@@ ageold@@ ; }@@ oldren@@ [100]; struct@@ youngp@@ { char@@ idyoung@@ [11]; int@@ ageyoung@@ ; }@@ youngren@@ [100]; int@@ old@@ [100],@@ young@@ [100]; intn,i,@@ t@@ ,j,@@ oldindex@@ =0,@@ youngindex@@ =0; charnum[@@ 4@@ ],@@ idinter@@ [11]; gets(@@ num); n=@@ atoi@@ (@@ num); for(i=0;i<n;i++){ scanf("%s%d",@@ ren@@ [i].id,&@@ ren@@ [i].age); } for(i=0;i<n;i++){ if(@@ ren@@ [i].age>=60){ oldren@@ [@@ oldindex@@ ].@@ ageold@@ =@@ ren@@ [i].age; strcpy(@@ oldren@@ [@@ oldindex@@ ].@@ idold@@ ,@@ ren@@ [i].id); oldindex@@ +=1; }else{ youngren@@ [@@ youngindex@@ ].@@ ageyoung@@ =@@ ren@@ [i].age; strcpy(@@ youngren@@ [@@ youngindex@@ ].@@ idyoung@@ ,@@ ren@@ [i].id); youngindex@@ +=1; } } for(i=1;i<@@ oldindex@@ ;i++){ for(j=0;j<@@ oldindex@@ -i;j++){ if(@@ oldren@@ [j].@@ ageold@@ <@@ oldren@@ [j+1].@@ ageold@@ ){ t=@@ oldren@@ [j].@@ ageold@@ ; oldren@@ [j].@@ ageold@@ =@@ oldren@@ [j+1].@@ ageold@@ ; oldren@@ [j+1].@@ ageold@@ =t; strcpy(@@ idinter@@ ,@@ oldren@@ [j].@@ idold@@ ); strcpy(@@ oldren@@ [j].@@ idold@@ ,@@ oldren@@ [j+1].@@ idold@@ ); strcpy(@@ oldren@@ [j+1].@@ idold@@ ,@@ idinter@@ ); } } } for(i=0;i<@@ oldindex@@ ;i++){ printf("%s\n",@@ oldren@@ [i].@@ idold@@ ); } for(i=0;i<@@ youngindex@@ ;i++){ printf("%s\n",@@ youngren@@ [i].@@ idyoung@@ ); } }  
c -1
h -1
0

intmain() { intk,@@ n,m,@@ num@@ [100][100],@@ sum; cin>>k; cout<<endl; for(int@@ a@@ =0;a@@ <k;@@ a++) {@@ cin>>m>>n; sum=0; for(inti=0;i<m;i++) { for(intj=0;j<n;j++) {@@ cin>>@@ num[i]@@ [j]; cout<<"@@ "; if(i==0||i==@@ m-1@@ ||j@@ ==0||j==@@ n-1) {@@ sum+=@@ num@@ [i][j]@@ ;} } cout<<endl; } cout<<sum<<endl; } return0; }  
c -1
h -1
intmain() { struct@@ pa { charID[10]; intage; } *p; intn,i,k,@@ num=0,@@ m=0; scanf("%d",&n); p=(struct@@ pa@@ *)malloc(sizeof(struct@@ pa@@ )*n); for(i=0;i<n;i++) { scanf("%s%d",@@ p[i].@@ ID,@@ &@@ p[i].age); if(p@@ [i].age@@ >=60@@ )@@ num++; } int@@ w@@ =0; for(i=0;i<n;i++) { if(p@@ [i].age>=60) { structpa@@ q=@@ p[i]; for(k=i@@ ;k@@ >@@ w@@ ;k--) { p@@ [k]=@@ p@@ [k@@ -1]; } p[@@ w@@ ]=@@ q; w@@ ++; } } for(i=@@ num@@ -1@@ ;i>0;i--) { for(k=0;k<i;k++) { if(p@@ [k@@ ].age@@ <p@@ [k+1@@ ].age) { structpa@@ q=@@ p@@ [k]; p@@ [k]=@@ p@@ [k+1]; p@@ [k+1]=@@ q; } } } for(i=0;i<n;i++) { printf("%s\n",@@ p[i].@@ ID); } free@@ (p); return0; }  
c -1
h -1
0

intmain(){ intn,k,@@ z@@ [1000],@@ i,j; scanf("%d%d",&n,&k); for(i=0;i<n;i++){ scanf("%d",&@@ z@@ [i]); } for(i=0;i<n;i++){ for(j=0;j<n;j++){ if(z@@ [i]+@@ z@@ [j]==k){ if(i!=@@ j){ printf("yes"); return0; }else{@@ continue;} } } } printf("no"); return0; }  
c -1
h -1
voidmain() { intn,k,i,j,@@ f@@ =0,@@ c=0,@@ q@@ [@@ 20001]; scanf("%d",&n); for(k=0;k<n;k++) scanf("%d",&@@ q@@ [k]); printf("%d",@@ q@@ [0]); for(i=1;@@ (i@@ <n@@ );i++) {@@ c=0; for(j=0;j<i;j++) {@@ if(q@@ [j]==@@ q@@ [i]) c++; else c=@@ c+@@ 0@@ ;} if(c@@ ==0) printf("%d",@@ q@@ [i]); else f@@ ++;} }  
c -1
h -1
0

int@@ f(@@ char@@ x) { if(x@@ =='@@ A'||@@ x@@ =='@@ T'||@@ x@@ =='@@ G'||@@ x@@ =='@@ C')@@ return0; else@@ return1; } intmain(intargc,char*argv[]) { chara[501],b[501]; int@@ x=0,@@ i,@@ y=1; float@@ p; scanf("%@@ f@@ \n",&@@ p); gets(a); gets(b); for(i=1;i<=@@ strlen(a)@@ ;i++) if(@@ f(@@ a[i-1]@@ ))@@ y=0; for(i=1;i<=@@ strlen(b@@ );i++) if(@@ f(@@ b@@ [i-1]@@ ))@@ y=0; if(strlen(a)!=strlen(b@@ ))@@ y=0; if(y@@ ==0)@@ printf("error"); else { for(i=1;i<=@@ strlen(a)@@ ;i++) if(a@@ [i-1@@ ]==@@ b@@ [i-1]@@ )@@ x++; if(x>@@ p@@ *@@ strlen(a)@@ )@@ printf("yes"); elseprintf("no"); } return0; }  
c -1
h -1
intmain() { intk,@@ i; scanf("%d",&k); for(i=1;i<=k;i++) { introw,@@ col@@ ,j,@@ l,@@ sum=0,@@ num@@ [100][100]; scanf("%d%d",&@@ col@@ ,&@@ row@@ ); for(l=0;l<@@ col@@ ;l++) { int*@@ a=@@ num[@@ l@@ ]; for(j=0;j<row@@ ;j++) { scanf("%d",a@@ +j); if(l@@ ==0||@@ l@@ ==@@ col-1@@ ||j@@ ==0||j==@@ row@@ -1) { sum=sum+*(@@ a@@ +j); } } } printf("%d\n",sum); } return0; }  
c -1
h -1
0

intmain() { intn,a[@@ 20000],b[@@ 20000@@ ]={0}; inti,j,@@ k=0; cin>>n; for(i=0;i<n;i++) cin>>a[i]; for(i=0;i<n;i++) { for(j=i+1;j<n;j++) { if(b[j]@@ ==0) { if(a[i]==a[j]) { b[j]@@ =1; k++; } } } } cout<<a[0]; for(i=1;i<n;i++) { if(b[i]@@ ==0) cout<<""<<a[i]; } return0; }  
c -1
h -1
struct@@ grade { intnum; intchinese; intmath; int@@ all@@ ; }stu[100000]; intmain() { intn,i,@@ e,f,@@ g,@@ a,b,@@ c; e=0; f=0; g=0; a=0; b=0; c=0; scanf("%d",&n); for(i=0;i<=@@ n-1;i++){ scanf("%d%d%d",&stu[i].num,&stu[i].@@ chinese@@ ,&stu[i].math); stu[i].@@ all@@ =stu[i].@@ chinese+@@ stu[i].@@ math; } for(i=0;i<=@@ n-1;i++){ if(stu[i].@@ all@@ >@@ e@@ ){ e=@@ stu[i].@@ all@@ ; a=i; } } for(i=0;i<=@@ n-1;i++){ if(stu[i].@@ all@@ <=@@ e@@ &&stu[i].@@ all@@ >@@ f@@ &&i!=@@ a){ f@@ =stu[i].@@ all@@ ; b=i; } } for(i=0;i<=@@ n-1;i++){ if(stu[i].@@ all@@ <=@@ f@@ &&stu[i].@@ all@@ >@@ g@@ &&i!=@@ a@@ &&i!=@@ b){ g@@ =stu[i].@@ all@@ ; c=i; } } printf("%d%d\n",stu[@@ a@@ ].num,stu[@@ a@@ ].@@ all@@ ); printf("%d%d\n",stu[@@ b@@ ].num,stu[@@ b@@ ].@@ all@@ ); printf("%d%d\n",stu[@@ c@@ ].num,stu[@@ c@@ ].@@ all@@ ); return0; }  
c -1
h -1
0

main() { intn; scanf("%d",&n); struct { intnum; chara[@@ 25]; }@@ book[999]; inti,j; for(i=0;i<=n-1;i++) { scanf("%d%s",&book[i].num,@@ book[i].@@ a); } ints[@@ 26]={0}; for(i=0;i<=n-1;i++) { int@@ len=strlen(@@ book[i].@@ a); for(j=0;j<len;j++) { s[@@ book[i].@@ a[j]@@ -'A']++; } } intmax=0; charname@@ ; for(i=0;i<=25;i++) { if(s@@ [i]>max) { max=@@ s[i]; name@@ ='A'+i; } } printf("%c\n",@@ name); printf("%d\n",max); for(i=0;i<=n-1;i++) { int@@ len=strlen(@@ book[i].@@ a); for(j=0;j<len;j++) { if(book[i].@@ a[j]==@@ name@@ ) printf("%d\n",book[i].@@ num); } } }  
c -1
h -1
intmain(){ intt,@@ e,@@ i,@@ z; e=0; double@@ x,y,@@ k,@@ h; scanf("%lf",&@@ k); chara[@@ 510@@ ],b[@@ 510@@ ]; scanf("%s",a); scanf("%s",b); t@@ =strlen(a); if(strlen(a)!=strlen(b@@ )){ printf("error"); }else{ for(i=0;a[i]@@ !='\0';i++){ if(a[i]!='@@ A'&&a[i]!='T'&&a[i]!='G'&&a[i]!='@@ C'){ z@@ ++; }elseif(@@ b[i]!='A'&&b[i]!='T'&&b[i]!='G'&&b[i]!='@@ C'){ z@@ ++; }@@ else@@ if(a[i]==b[i]){ e++; } } if(z@@ !=0){ printf("error"); }else{ x=@@ e; y=@@ t; h=@@ x/@@ y; if(h@@ >@@ k){ printf("yes"); }else{ printf("no"); } } } return0; }  
c -1
h -1
0

intmain(void) { charstring@@ [256@@ ]={'\0'}; char@@ subString@@ [100@@ ]={'\0'}; char@@ replacement@@ [100@@ ]={'\0'}; inti=0,j=0,@@ k=0; char@@ c@@ ='\0'; while(@@ c@@ !=@@ '\n@@ ') { c=@@ getchar(); if(c@@ !=@@ '\n@@ ') { string@@ [i]=@@ c; i++; } } scanf("%s",@@ subString@@ ); scanf("%s",@@ replacement); for(i=0;i<strlen(@@ string@@ );i++) { if(string@@ [i]==@@ subString@@ [0]) { k=i; for(j=0;j<strlen(@@ subString@@ )@@ ;j++@@ ,k++) { if(@@ subString@@ [j]!=@@ string@@ [k]@@ ){@@ break;} } if(j==@@ strlen(@@ subString@@ )) { k=i; for(j=0;j<strlen(@@ replacement@@ )@@ ;j++@@ ,k++) { string@@ [k]=@@ replacement@@ [j]; } break; } } } printf("%s\n",@@ string); return0; }  
c -1
h -1
intmain() { intn,i,j,@@ l,@@ f,@@ m,@@ k,@@ t=0; scanf("%d",&n); intx@@ [n@@ ],@@ y,@@ z@@ [n]; for(i=0;i<=@@ n-1;i++){ scanf("%d",&@@ x[i]); z@@ [i]=0; } for(j=0;j<=@@ n-1@@ ;j++){ f=0; for(l=0;l@@ <=j@@ -1;@@ l++){ y=@@ x[j]@@ -x@@ [l]; if(y@@ ==0){@@ f@@ =1;} } if(f@@ ==0){@@ z@@ [t@@ ]=@@ x@@ [j]; t@@ +=1; } } for(m=0;m@@ <=@@ n-1@@ ;m++){ if(z@@ [m]@@ ==0){@@ break;} } for(k=0;k<=@@ m-1@@ ;k++@@ ){@@ if(z@@ [k]@@ !=0@@ ){@@ printf("%d",@@ z@@ [k]@@ );} if(k@@ <=@@ m@@ -2@@ ){@@ printf("@@ ");} } return0; }  
c -1
h -1
0

intn,m; intsum@@ (intx,inty) { int@@ c,@@ i; if(x>@@ sqrt(@@ y@@ )) c=0; else { if(y%@@ x@@ ==0) { for(i=@@ x,@@ c@@ =1@@ ;i<=@@ (y@@ /2@@ )@@ +1;i++) { if((@@ y@@ /@@ x)@@ %i==0) c=@@ c+@@ sum@@ (i,@@ (y@@ /@@ x@@ )); } } else c=0; } return(@@ c); } main() { inti,k,@@ j; scanf("%d",&n); for(j=1;j<=n;j++) { k=0; scanf("%d",&m); for(i=2;i<=@@ (m@@ /2@@ )@@ +1;i++) k=k@@ +@@ sum@@ (i,@@ m); printf("%d\n",@@ k@@ +1); } }  
c -1
h -1
intmain() { inti,@@ flag@@ ,@@ w@@ ,j,@@ len; charstr@@ [257],@@ sub@@ [@@ 200],@@ rep@@ [50@@ ]; scanf("%s%s%s",@@ str,@@ sub,@@ rep); len=strlen(@@ sub); w=@@ 500@@ ; for(i=0;@@ str@@ [i]!='\0';i++) { if(str[i]==@@ sub@@ [0]) { for(j=i;j<i+@@ len@@ ;j++) { if(str@@ [j]!=@@ sub@@ [j-i@@ ]) { flag=0; break; } } if(flag@@ !=0) { w@@ =i; break; } else@@ flag=1; } } if(w@@ !=@@ 500@@ ) { j=0; for(i=@@ w@@ +@@ len@@ ;@@ str@@ [i]!='\0';i++) { sub@@ [j]=@@ str@@ [i]; j++; } sub@@ [j]@@ ='\0'; str@@ [@@ w@@ ]='\0'; printf("%s@@ %s%s",@@ str,@@ rep@@ ,@@ sub); } else@@ printf("%s",str); return0; }  
c -1
h -1
0

intmain() { intk=0,@@ m=0,@@ n=0; int@@ ans@@ =0,@@ a=0; cin>>k; for(inti=0;i<k;i++) { cin>>m>>n; for(intj=0;j<m;j++) for(intl@@ =0;@@ l@@ <n;@@ l++) { cin>>a; if(!@@ l@@ ||@@ l@@ ==@@ (n-1@@ )) ans@@ +=@@ a; elseif(@@ !@@ j@@ ||j==@@ (m@@ -1)) ans@@ +=@@ a; } cout<<ans@@ <<endl; ans=0; } return0; }  
c -1
h -1
intmain() { structstudent { intID; intyuwen; intshuxue; }; intn,i,@@ x,y,@@ z,@@ o@@ ,@@ p,q; scanf("%d",&n); inta[@@ 100000]; structstudentstu[100000]; for(i=0;i<n;i++) { scanf("%d%d%d",&stu[i].@@ ID@@ ,&stu[i].@@ yuwen@@ ,&stu[i].@@ shuxue); a[i]=@@ stu[i].@@ yuwen+stu[i].@@ shuxue; } x=0; y=1; z=@@ 2; for(i=0;i<3;i++) { if(a[i]>=@@ a[0]@@ &&a[i]@@ >=@@ a[1]@@ &&a[i]@@ >=@@ a[2@@ ]) { x@@ =i; o@@ =@@ a[i]; continue; } if(a[i]<=@@ a[0]@@ &&a[i]@@ <=@@ a[1]@@ &&a[i]@@ <=@@ a[2@@ ]) { z@@ =i; q=@@ a[i]; continue; } y@@ =i; p=@@ a[i]; } for(i=@@ 3@@ ;i<n;i++) { if(a[i]>@@ q) { if(a[i]>@@ o@@ ) { z=@@ y; y=@@ x; x@@ =i; q=p; p=@@ o@@ ; o@@ =@@ a[i]; } else { if(a[i]>@@ p) { z=@@ y; y@@ =i; q=p; p=@@ a[i]; } else { z@@ =i; q=@@ a[i]; } } } } printf("%d%d\n",stu[@@ x@@ ].ID,@@ o@@ ); printf("%d%d\n",stu[@@ y@@ ].ID,@@ p); printf("%d%d\n",stu[@@ z@@ ].ID,@@ q); getchar(); getchar(); }  
c -1
h -1
0

intmain(){ char@@ sz[@@ 266@@ ]; inti,k,@@ len,@@ n,m,@@ j=0; char@@ yuan@@ [@@ 20],@@ mb@@ [@@ 20],@@ kd@@ [20]; scanf("%s%s%s",@@ sz@@ ,@@ yuan@@ ,@@ mb@@ ); m=strlen(@@ sz@@ ); n=strlen(@@ yuan@@ ); for(i=0;i<m;i++){ if(sz[i]@@ !=@@ yuan@@ [0]){ printf("%c",@@ sz@@ [i]); } else{ for(k=i@@ ;k<@@ i+@@ n;k++){ kd@@ [k-i@@ ]=@@ sz@@ [k]; } kd@@ [n@@ ]='\0'; if(strcmp(@@ kd@@ ,@@ yuan@@ )@@ ==0){ printf("%s",@@ mb@@ ); for(k=i+@@ n@@ ;k<@@ m@@ ;k++){ printf("%c",@@ sz@@ [k]); } break; } else{ printf("%c",@@ sz@@ [i]); } } } return0; }  
c -1
h -1
intmain() { int@@ e,@@ f@@ =0,@@ g@@ [1000]; intn; scanf("%d",&n); inti=0; while(i<@@ n){ int@@ k@@ =0;@@ while(k@@ <@@ n){ scanf("%d",&@@ e); if(e@@ ==0){ f@@ ++; } k++; } g@@ [i]=@@ f; f=0; i++; } intm=0,@@ x,y; int@@ j@@ =0;@@ while(j<@@ n){ if(g@@ [j]>@@ m){ m=@@ g@@ [j]; } if(g@@ [j]@@ ==0&&@@ g@@ [j+1]@@ !=0){ x@@ =j; } if(g@@ [j]@@ !=0&&@@ g@@ [j+1]@@ ==0){ y@@ =j; } j++; } int@@ d,@@ sum; d=@@ y@@ -@@ x; sum=(@@ m@@ -2)*(@@ d@@ -2); printf("%d\n",sum); return0; }  
c -1
h -1
0

intmain() { intn,k,i,j,@@ num[@@ 1000]; scanf("%d%d",&@@ n,@@ &@@ k); for(i=0;i<n;i++){ scanf("%d",&@@ num[i]); } for(i=0;i<n;i++){ for(j=i+1;j<n;j++){ if(num@@ [i]+@@ num@@ [j]==k){ n=0; break; } } if(n@@ ==0){ printf("yes\n"); break; } } if(n@@ !=0){ printf("no\n"); } return0; }  
c -1
h -1
intmain() { inta[100][100]; introw,col,@@ i,j,k; scanf("%d%d",&row,&col); for(i=0;i<row;i++) for(j=0;j<col;j++) scanf("%d",&a[i][j]); for(i=0;i<col;i++) { for(j=i,@@ k@@ =0@@ ;j>=0@@ ,k@@ <=i@@ ;j--@@ ,k++) { if(k@@ >@@ (@@ row-1)@@ ||j@@ >@@ (@@ col@@ -1)@@ ||@@ k@@ <0@@ ||j@@ <0) continue; printf("%d\n",@@ a[k]@@ [j]); } } for(i=1;i<=@@ row-1;i++) for(j=col-1@@ ,k@@ =i@@ ;j>=0@@ ,k@@ <=row-1@@ ;j--@@ ,k++) { if(k@@ >@@ (@@ row-1)@@ ||j@@ >@@ (@@ col@@ -1)@@ ||@@ k@@ <0@@ ||j@@ <0) continue; printf("%d\n",@@ a[k]@@ [j]); } return0; }  
c -1
h -1
0

int@@ a=0,@@ i=0,@@ sum=1; voidf@@ (inti,int@@ a){ intj; for(j=i;j<=@@ sqrt(@@ a)@@ ;j++) if(a%@@ j@@ ==0){@@ sum@@ ++;@@ f(@@ j,@@ a/@@ j@@ );} } intmain(){ intn; cin>>n; while(@@ n){ cin>>a; f(@@ 2,@@ a); cout<<sum<<endl; n--; sum=1; } }  
c -1
h -1
intmain() { introw,@@ column@@ ,a[@@ 110][110@@ ]={0},@@ i,j,@@ row1@@ =0,@@ column1@@ =0; cin>>row@@ >>@@ column@@ ; for(i=0;i<row;i++) for(j=0;j<@@ column@@ ;j++) { cin>>*(*(a+i)+j); } for(i=0;i<(@@ row@@ +@@ column@@ -1);i++) { if(i<@@ column@@ ) column1@@ =i; else@@ column1@@ =@@ column@@ -1; while(@@ column1@@ >=0) { if((i@@ -@@ column1@@ )@@ <row) {@@ cout<<*(*(a@@ +i@@ -@@ column1@@ )+@@ column1@@ )<<endl; column1@@ --@@ ;} elsebreak; } } return0; }  
c -1
h -1
0

intmain(intargc,char*argv[]) { intyear,@@ m,@@ d,@@ result=0; scanf("%d%d%d",&year,&@@ m,&d); for(inti=1;i<@@ m;i++){ if(i==1||i==3||i==5||i==7||i==8||i==10@@ ||i==@@ 12) result+=@@ 31; elseif(i==@@ 2@@ ){ if(year%@@ 400@@ ==0||@@ year%@@ 4==0&&@@ year%@@ 100!=0) result+=@@ 29; else result+=@@ 28; } else result+=@@ 30; } result+=@@ d; printf("%d\n",@@ result); return0; }  
c -1
h -1
struct@@ statistics { intnum; intchinese; intmath; intsum; }@@ form@@ [100000],@@ temp; intmain() { intn; scanf("%d",&n); inti,j; for(i=0;i<n;i++) { scanf("%d%d%d",&@@ form@@ [i].num,&@@ form@@ [i].@@ chinese@@ ,&@@ form@@ [i].@@ math); form@@ [i].@@ sum=@@ form@@ [i].@@ chinese+@@ form@@ [i].@@ math; } for(i=0;i<@@ 3@@ &&i@@ <@@ n-1;i++) { int@@ k=i; for(j=i+1;j<n;j++) { if(@@ form@@ [j].@@ sum>@@ form@@ [k].@@ sum) { k=j; } } if(k!=@@ i) { temp=@@ form@@ [i]; form@@ [i]=@@ form@@ [k]; form@@ [k]=@@ temp; } } for(i=0;i<3;i++) printf("%d%d\n",@@ form@@ [i].@@ num,@@ form@@ [i].@@ sum); return0; }  
c -1
h -1
0

intmain() { intn,k,@@ b; int@@ s=1; cin>>n>>k; inta[n]; for(inti=1;i<=n;i++) { cin>>@@ a[i@@ -1]; } for(intp@@ =1@@ ;p@@ <=n;@@ p++) { b=@@ k-@@ a[p@@ -1]; for(int@@ q@@ =1;@@ q@@ <=n;@@ q++) { if(a[@@ q@@ -1@@ ]==@@ b@@ &&@@ a[p@@ -1]@@ !=@@ b) s++; } } if(s@@ ==1) cout<<"no"; if(s@@ !=1) cout<<"yes"; return0; }  
c -1
h -1
intmain(){ inta[100@@ ],@@ i,j,k,@@ n=0,@@ N@@ =0,@@ t; for(k=1;k<@@ 100@@ ;k++) {@@ for(i=0;i<100;i++) {@@ cin>>a[i]; n++; if(a[i]@@ ==0)@@ i=@@ 100@@ ;} if(a[0]@@ !=-1) {@@ for(i=1;i<=@@ n-2;i++) {@@ for(j=0;j<=@@ n-i@@ -2@@ ;j++) {@@ if(a[j]>a[j+1]) {t=@@ a[j]; a[j]=a[j+1]; a[j+1]=@@ t;} }} for(i=n-2;i>=0;i--) {@@ for(j=i-1;j>=0;j--) {@@ if(a[i]==2*@@ a[j])@@ N@@ ++;} }@@ cout<<@@ N@@ <<endl@@ ;@@ N@@ =0;n@@ =0;} else@@ break;} return0; }  
c -1
h -1
0

intmain() { doublen; int@@ s=0,@@ len1,len2,@@ i; charb[@@ 501@@ ],c[@@ 501],@@ e@@ [501]; scanf("%lf",&n); gets(b); gets(c); gets(@@ e); len1=strlen(@@ c); len2=strlen(@@ e); for(i=0;i<len1;i++) { if(c@@ [i]!='A'&&@@ c@@ [i]!='T'&&@@ c@@ [i]!='C'&&@@ c@@ [i]!='G'){ len1@@ =1; break; } } for(i=0;i<@@ len2@@ ;i++) { if(e@@ [i]!='A'&&@@ e@@ [i]!='T'&&@@ e@@ [i]!='C'&&@@ e@@ [i]!='G'){ len2@@ =@@ 2; break; } } if(len1!=@@ len2){ printf("error"); }else{ for(i=0;i<len1;i++) { if(c@@ [i]==@@ e@@ [i]){ s++; } } if(1.0*@@ s/@@ len1@@ >=@@ n){ printf("yes"); }else{ printf("no"); } } return0; }  
c -1
h -1
voidmain() { structstudent { intnum,@@ sum; }stu[100000]; intn,i,j,k,@@ a,b,@@ t; scanf("%d",&n); for(i=0;i<n;i++) { scanf("%d%d%d",&stu[i].@@ num,&@@ a,&b); stu[i].sum=@@ a+@@ b; } for(i=0;i<3;i++) for(j=@@ n-i@@ -1@@ ;j>0;j--) if(stu[j].@@ sum>@@ stu[j-1].@@ sum) { t=@@ stu[j].@@ sum;@@ stu[j].@@ sum=@@ stu[j-1].@@ sum;@@ stu[j-1].@@ sum=@@ t; t=@@ stu[j].@@ num;@@ stu[j].@@ num=@@ stu[j-1].@@ num;@@ stu[j-1].@@ num=@@ t; } for(i=0;i<@@ 3@@ ;i++)@@ printf("%d%d\n",stu[i].@@ num,@@ stu[i].@@ sum); }  
c -1
h -1
0

intmain() { inta,b,@@ i,j,@@ q; cin>>a>>@@ b; intm@@ [a@@ +1@@ ][b@@ +1]; for(i=1;i<=@@ a;i++) for(j=1;j<=@@ b;j++) cin>>@@ m@@ [i][j]; for(q=@@ 2@@ ;q@@ <=@@ a+@@ b@@ ;q++) for(i=1@@ ,j=@@ q@@ -i@@ ;j>0@@ ;i++,j@@ =@@ q@@ -i@@ ) {@@ if(j@@ <=@@ b@@ &&i@@ <=@@ a) cout<<@@ m@@ [i][j]<<endl; } return0; }  
c -1
h -1
intmain() { inta,b,c,@@ d; intf@@ [12]={31,28,31,30,31,30,31,31,30,31,30,31}; scanf("%d%d%d",&a,&b,&c); intsum=0,@@ i; for(i=0;i<b@@ -1;i++) { sum=sum+@@ f[i]; } if(((@@ a%@@ 4==0)&&(@@ a%100!=0@@ )@@ )||(@@ a%400==0)) { if(b@@ <@@ 3) { d=@@ sum@@ +c; } else { d=@@ sum@@ +1@@ +c; } } else { d=@@ sum@@ +c; } printf("%d",d); return0; }  
c -1
h -1
0

intmain() { inti,@@ flag@@ ,@@ w@@ ,j,@@ len; charstr@@ [257],@@ sub@@ [@@ 200],@@ rep@@ [50@@ ]; scanf("%s%s%s",@@ str,@@ sub,@@ rep); len=strlen(@@ sub); w=@@ 500@@ ; for(i=0;@@ str@@ [i]!='\0';i++) { if(str[i]==@@ sub@@ [0]) { for(j=i;j<i+@@ len@@ ;j++) { if(str@@ [j]!=@@ sub@@ [j-i@@ ]) { flag=0; break; } } if(flag@@ !=0) { w@@ =i; break; } else@@ flag=1; } } if(w@@ !=@@ 500@@ ) { j=0; for(i=@@ w@@ +@@ len@@ ;@@ str@@ [i]!='\0';i++) { sub@@ [j]=@@ str@@ [i]; j++; } sub@@ [j]@@ ='\0'; str@@ [@@ w@@ ]='\0'; printf("%s@@ %s%s",@@ str,@@ rep@@ ,@@ sub); } else@@ printf("%s",str); return0; }  
c -1
h -1
inta[@@ 26],@@ sum@@ [26],@@ imax@@ [26]; int@@ c@@ ,j; intmain(){ inti; int@@ find@@ (int@@ max@@ ,int@@ q); scanf("%d\n",&@@ c); for(i=1;i<=@@ c@@ ;i++){ scanf("%d",&a[i]); } printf("%d",@@ find@@ (@@ 10000@@ ,@@ 1@@ )); }; int@@ find@@ (int@@ max@@ ,int@@ q@@ ){ inti; imax@@ [q@@ ]=0; if(q@@ !=@@ c) { for(i=@@ q@@ ;i<=@@ c@@ ;i++){ sum[@@ q@@ ]=0; if(max@@ >=@@ a[i])@@ sum[@@ q@@ ]@@ =1@@ +@@ find@@ (@@ a[i]@@ ,i@@ +1); if(max<@@ a[i])@@ sum[@@ q@@ ]=@@ find@@ (@@ max,@@ i@@ +1); if(@@ sum[@@ q@@ ]>@@ imax@@ [q@@ ])@@ imax@@ [q@@ ]=sum[@@ q@@ ]; } return@@ imax@@ [q@@ ]; } elseif(@@ q=@@ c@@ &&@@ max@@ >=@@ a[q@@ ])@@ return1; elseif(@@ q=@@ c@@ &&@@ max@@ <@@ a[q@@ ])@@ return0; }  
c -1
h -1
0

intmain() { double@@ w; chars1@@ [@@ 600@@ ],@@ s2[@@ 600]; int@@ l1,l2,@@ i,@@ a; a=0; scanf("%lf\n",&@@ w); scanf("%s@@ \n",@@ s1); scanf("%s@@ \n",@@ s2); l1=strlen(@@ s1); l2=strlen(@@ s2); if(l1!=l2@@ ){ printf("error");} else{ for(i=0;i<l1;i++){ if(!@@ (@@ s1@@ [i]=='A'||@@ s1@@ [i]=='T'||@@ s1@@ [i]=='C'||@@ s1@@ [i]=='@@ G')){ printf("error"); return0@@ ;}} for(i=0;i<l1;i++){ if(!@@ (@@ s2@@ [i]=='A'||@@ s2@@ [i]=='T'||@@ s2@@ [i]=='C'||@@ s2@@ [i]=='@@ G')){ printf("error"); return0@@ ;}} for(i=0;i<l1;i++){ if(s1[i]==s2@@ [i]){ a@@ ++;} } if((@@ 1.0*@@ a)@@ /@@ l1@@ >@@ w@@ ){ printf("yes");} else{ printf("no@@ ");@@ }} return0; }  
c -1
h -1
intmain(){ intn; cin>>n; structstu@@ { intnum; int@@ chin@@ ; intmath; intsum; }@@ one@@ [n@@ +1]; for(inti=1;i<=@@ n;i++){ cin>>@@ one@@ [i].@@ num@@ >>@@ one@@ [i].@@ chin@@ >>@@ one@@ [i].@@ math; one@@ [i].@@ sum=@@ one@@ [i].@@ chin@@ +@@ one@@ [i].@@ math; } intt=0; for(inti=@@ 200@@ ;i>=0;i--) for(intj=1;j<=@@ n;j++){ if(@@ one@@ [j].@@ sum@@ ==@@ i){ cout<<@@ j@@ <<""<<@@ one@@ [j].@@ sum@@ <<endl; t=t+1; } if(t==@@ 3@@ ){ i@@ =-@@ 1;break; } } return0; }  
c -1
h -1
0

voidmain() { int@@ start@@ ,@@ end@@ ,@@ ok@@ ,i,j,@@ n,m,@@ s; chara[@@ 300],b[@@ 300@@ ],c[@@ 300]; gets(a); gets(b); gets(c); n@@ =strlen(a); m@@ =strlen(b); s@@ =strlen(c); for(i=0;i<n;i++) if(a[i]==@@ b[0]) { ok@@ =1; for(j=1;j<@@ m;j++) if(a@@ [j+i@@ ]!=@@ b[j]) ok@@ =0; if(@@ ok@@ ) {@@ start@@ =i;@@ end@@ =j@@ +i@@ ;break;} } if(@@ ok@@ ==1) { for(i=0;i<@@ start@@ ;i++) printf("%c",a[i]); for(i=0;i<@@ s;i++) printf("%c",@@ c[i]); for(i=@@ end@@ ;i<n;i++) printf("%c",a[i]); printf("\n"); } else puts(@@ a); }  
c -1
h -1
struct@@ a60 { charID[10]; intage; }@@ a60@@ [@@ 101]; struct@@ u60 { charID[10]; intage; }@@ u60@@ [100]; voidsort@@ (intn) { inti; struct@@ a60@@ *@@ x; for(i=1;i<n;i++) { for(@@ x=@@ a60@@ ;x@@ <@@ a60@@ +@@ n-i@@ ;x@@ ++) { if(x@@ ->age@@ <@@ (x@@ +1)@@ ->age@@ ) { a60@@ [100@@ ]@@ =*@@ x; *@@ x@@ =*(@@ x@@ +1); *(@@ x@@ +1)@@ =@@ a60@@ [100]; } } } } intmain() { int@@ a=0,b=0,@@ m,n,@@ q; char@@ p@@ [10]; struct@@ a60@@ *@@ x; struct@@ u60@@ *@@ y; x=@@ a60@@ ; y=@@ u60@@ ; scanf("%d",&n); for(m=0;m@@ <n;m++) { scanf("%s%d",@@ p,@@ &@@ q); if(q@@ >=60) { strcpy(@@ x@@ ->@@ ID,@@ p); x@@ ->age=@@ q; x++; a++; }else{ strcpy(@@ y@@ ->@@ ID,@@ p); y@@ ->age=@@ q; y++; b++; } } sort(@@ a); for(@@ x=@@ a60@@ ;x@@ <@@ a60@@ +@@ a;@@ x++) printf("%s\n",@@ x@@ ->@@ ID); for(@@ y=@@ u60@@ ;y@@ <@@ u60@@ +@@ b@@ ;y@@ ++) printf("%s\n",@@ y@@ ->@@ ID); return0; }  
c -1
h -1
0

voidmain() { struct@@ ts { int@@ sl@@ ; char@@ zz@@ [30]; int@@ zzsl@@ ; struct@@ ts@@ *next; }; struct@@ ts@@ *@@ p1,*p2,*head; inti,j,k,@@ m,n,@@ max,@@ zzzdnum@@ ,@@ num@@ [100]={0}; char@@ zzzd@@ ; scanf("%d",&n); p1=@@ p2=@@ head=(struct@@ ts@@ *)malloc(sizeof(struct@@ ts@@ )); scanf("%d%s",&p1->@@ sl@@ ,@@ p1->@@ zz@@ ); for(i=1;i<n;i++) { p1=(struct@@ ts@@ *)malloc(sizeof(struct@@ ts@@ )); scanf("%d%s",&p1->@@ sl@@ ,@@ p1->@@ zz@@ ); p1->@@ zzsl@@ =strlen(@@ p1->@@ zz@@ ); p2->next=p1; p2=p1; } p1->next@@ =0; for(i@@ ='A'@@ ;i<=@@ 'Z'@@ ;i++) { p1=head; for(k=0;k<n;k++) { for(j=0;@@ p1->@@ zz@@ [j]!='\0';j++) { if(p1->@@ zz@@ [j]==@@ i)@@ num[i]@@ ++; } p1=p1->next; } } max=0; for(i@@ ='A'@@ ;i<=@@ 'Z'@@ ;i++) { max=@@ max@@ >@@ num[i]@@ ?@@ max@@ :@@ num[i]; } for(i@@ ='A'@@ ;i<=@@ 'Z'@@ ;i++) { if(num@@ [i]==@@ max@@ )@@ zzzd@@ =i; } printf("%c\n%d\n",@@ zzzd@@ ,max); p1=head; zzzdnum@@ =0; for(i=0;i<n;i++) { for(j=0;@@ p1->@@ zz@@ [j]!='\0';j++) { if(p1->@@ zz@@ [j]==@@ zzzd@@ ) { printf("%d\n",@@ p1->@@ sl@@ ); } } p1=p1->next; } }  
c -1
h -1
intmain() { intn,i,j,k,@@ h,@@ b; scanf("%d",&n); struct@@ sb { intID; intm; intc; intsum; }a[@@ n]; for(i=0;i<n;i++) { scanf("%d%d%d",&a[i].@@ ID,&@@ a[i].@@ m,&@@ a[i].@@ c); a[i].@@ sum=@@ a[i].@@ m+@@ a[i].@@ c; } for(i=0,@@ b@@ =0;i<n;i++) { if(a[i].@@ sum>@@ b) { b=@@ a[i].@@ sum; h@@ =i; } } printf("%d%d\n",@@ a[h@@ ].ID,@@ a[h@@ ].sum); a[h@@ ].@@ sum@@ =-1; for(i=0,@@ b@@ =0;i<n;i++) { if(a[i].@@ sum>@@ b) { b=@@ a[i].@@ sum; h@@ =i; } } printf("%d%d\n",@@ a[h@@ ].ID,@@ a[h@@ ].sum); a[h@@ ].@@ sum@@ =-1; for(i=0,@@ b@@ =0;i<n;i++) { if(a[i].@@ sum>@@ b) { b=@@ a[i].@@ sum; h@@ =i; } } printf("%d%d\n",@@ a[h@@ ].ID,@@ a[h@@ ].sum); getchar(); getchar(); }  
c -1
h -1
0

intmain() { inta[100][100],@@ n,@@ i,j,k; scanf("%d",&n); for(i=1;i<=n;i++) { inta[100][100],@@ r,@@ l,@@ sum=0; scanf("%d%d",&@@ r@@ ,&@@ l); for(j=0;j<=@@ r@@ -1;j++) for(k=0;k<=@@ l@@ -1;k++) scanf("%d",@@ *(a@@ +j)+@@ k); for(j=0;j<=@@ r@@ -1;j++) { for(k=0;k<=@@ l@@ -1;k++) { if(j==@@ r@@ -1@@ ||j@@ ==0||@@ k==@@ l@@ -1@@ ||@@ k@@ ==0) sum+=*(*(a@@ +j)+@@ k); } }@@ printf("%d\n",sum); } return0; }  
c -1
h -1
intmain() { int@@ A[@@ 12]={31,28,31,30,31,30,31,31,30,31,30,31}; inta,b,c,@@ i,@@ y; scanf("%d%d%d",&a,&b,&c); y=0; for(i=0;i<b@@ -1;i++) { y=@@ y@@ +@@ A@@ [i]; } y=@@ y@@ +c; if(a%@@ 4==0&&a%100!=0@@ ||a%@@ 400==0) { if(b@@ ==1||@@ b==@@ 2) { printf("%d",@@ y); } else { y=@@ y@@ +1; printf("%d",@@ y); } } else { printf("%d",@@ y); } return0; }  
c -1
h -1
0

intmain() { intm,n; cin>>m>>n; inta[@@ m@@ ][n]; for(inti=0;i<m;i++) for(intj=0;j<n;j++) cin>>a[i][j]; int(*p)@@ [n@@ ]=a; intsum=0; while(1) { if(sum@@ ==@@ m+@@ n-1@@ )break; elseif(@@ sum<=@@ n-1) { for(inti=0;i<=@@ sum@@ ;i++) { if(i>@@ m@@ -1)break; cout<<@@ *(*(p+i)@@ +@@ sum@@ -i@@ )<<endl; } sum++; } else { for(inti=@@ sum@@ +1@@ -n@@ ;i<=@@ sum@@ ;i++) { if(i>@@ m@@ -1)break; cout<<@@ *(*(p+i)@@ +@@ sum@@ -i@@ )<<endl; } sum++; } } return0; }  
c -1
h -1
intmain(){ intn,i,j,@@ t; struct@@ ill@@ { charnum[10]; intage@@ ,@@ id; }@@ man@@ [N@@ ],@@ ex@@ ; scanf("%d",&n); for(i=0;i<n;i++) { scanf("%s%d",@@ man@@ [i].num,&@@ man@@ [i].age); man@@ [i].@@ id@@ =i; } for(i=0;i<n;i++) { for(j=i+1;j<n;j++) { if(@@ man@@ [i].age@@ <@@ man@@ [j].age@@ ) { ex@@ =@@ man@@ [i]; man@@ [i]=@@ man@@ [j]; man@@ [j]=@@ ex@@ ; } } } for(i=0;i<n;i++) { if(@@ man@@ [i].age<60) { t=i; break; } } for(i=0;i<t;i++) { for(j=i+1;j<@@ t;j++) { if(@@ man@@ [i].age@@ ==@@ man@@ [j].age@@ &&@@ man@@ [i].@@ id@@ >@@ man@@ [j].@@ id@@ ) { ex@@ =@@ man@@ [i]; man@@ [i]=@@ man@@ [j]; man@@ [j]=@@ ex@@ ; } } } for(i=@@ t@@ ;i<n;i++) { for(j=i+1;j<n;j++) { if(@@ man@@ [i].@@ id@@ >@@ man@@ [j].@@ id@@ ) { ex@@ =@@ man@@ [i]; man@@ [i]=@@ man@@ [j]; man@@ [j]=@@ ex@@ ; } } } for(i=0;i<n;i++) { printf("%s\n",@@ man@@ [i].num); } for(i=0;i<n@@ ;i++@@ ); return0; }  
c -1
h -1
0

intn,i; intf(inta,int@@ min@@ ){ if(a<@@ min@@ ){ return0; } int@@ result=1; for(inti=@@ min@@ ;i<@@ a;i++){ if(a@@ %i==0){ result+=@@ f(a@@ /i,i); } } returnresult; } intmain(){ cin>>n; inta[n]; for(i=0;i<n;i++){ cin>>a[i]; } for(i=0;i<n;i++){ cout<<@@ f(@@ a[i],@@ 2)<<endl; } return0; }  
c -1
h -1
struct { int@@ ID@@ [100000],@@ Chinese@@ [100000],@@ Maths@@ [100000]; }@@ stu@@ ; intmain() { intn,i,@@ sum[@@ 100000],@@ max1@@ =0,@@ max2@@ =0,@@ max3@@ =0,@@ num1,num2@@ ,@@ num3@@ ; scanf("%d",&n); for(i=0;i<n;i++){ scanf("%d%d%d",&@@ stu.@@ ID@@ [i],&@@ stu.@@ Chinese@@ [i],&@@ stu.@@ Maths@@ [i]); } i=0; while(@@ stu.@@ ID@@ [i]@@ >0){ sum[i]=@@ stu.@@ Chinese@@ [i]+@@ stu.@@ Maths@@ [i]; i++; } i=0; while(i<@@ n){ if(sum[i]>@@ max1@@ ){ max1=@@ sum[i]; num1@@ =i; } i++; } i=0; while(i<@@ n){ if(sum[i]>@@ max2@@ &&@@ sum@@ [i]<=@@ max1@@ &&i!=@@ num1@@ ){ max2=@@ sum[i]; num2@@ =i; } i++; } i=0; while(i<@@ n){ if(sum[i]>@@ max3@@ &&@@ sum@@ [i]<=@@ max2@@ &&i!=@@ num2@@ &&i!=@@ num1@@ ){ max3=@@ sum[i]; num3@@ =i; } i++; } printf("%d%d\n%d%d\n%d@@ %d",@@ stu.@@ ID@@ [@@ num1@@ ],@@ max1,@@ stu.@@ ID@@ [@@ num2@@ ],@@ max2@@ ,@@ stu.@@ ID@@ [@@ num3@@ ],@@ max3@@ ); return0; }  
c -1
h -1
0

intmain(){ charzfc@@ [256],@@ wt@@ [256],@@ tar@@ [256]; inti,j,@@ tag@@ ; scanf("%s",@@ zfc); scanf("%s",@@ wt@@ ); scanf("%s",@@ tar@@ ); int@@ n=strlen(@@ zfc); int@@ k=strlen(@@ wt@@ ); for(i=0;i<n@@ -k@@ +1@@ ;i++){ tag@@ =0; for(j=i;j<@@ i@@ +k@@ ;j++){ if(@@ zfc@@ [j]!=@@ wt@@ [j-i@@ ]){ tag@@ =1; break; } } if(tag@@ ==0){ for(j=i;j<@@ i@@ +k@@ ;j++){ zfc@@ [j]=@@ tar@@ [j-i@@ ]; } break; } } puts(@@ zfc); return0; }  
c -1
h -1
voidmain() { unsigned@@ intn; inti,j,@@ a[@@ 20000],@@ m; scanf("%@@ u@@ ",&@@ n); for(i=0;i<=n-1;i++) scanf("%d",&a[i]); printf("%d",a[0]); for(i=1;i<n;i++) { m=0; for(j=0;j<i;j++) if(a[i]==a[j]) { m=1; break; } if(m==0) printf("%d",a[i]); } printf("\n"); }  
c -1
h -1
0

intmain() { intn,m,@@ a[100@@ ]={0},@@ b[100@@ ]={0}; scanf("%d%d",&n,&m); void@@ type@@ (intarray[],int@@ n); voidorder@@ (intarray[],int@@ q); void@@ join@@ (int@@ array1@@ [],int@@ array2@@ [],int@@ q1@@ ,int@@ q2@@ ); voidout@@ (intarray[],int@@ q1@@ ,int@@ q2@@ ); type@@ (a,@@ n); type@@ (b,@@ m); order@@ (a,@@ n); order@@ (b,@@ m); join@@ (a,b,@@ n,@@ m); out@@ (a,n,@@ m); } int@@ type@@ (intarray[],int@@ n) { intc; for(c=0;c@@ <n;@@ c++) { scanf("%d",&@@ array[@@ c@@ ]); } } int@@ order@@ (intarray[],int@@ q) { inti,j,t; for(i=0;i<@@ q@@ -1;i++) { for(j=0;j<@@ q@@ -1;j++) { if(array@@ [j]>=@@ array@@ [j+1]) { t=@@ array@@ [j+1]; array@@ [j+1]=@@ array@@ [j]; array@@ [j]=@@ t; } } } } int@@ join@@ (int@@ array1@@ [],int@@ array2@@ [],int@@ q1@@ ,int@@ q2@@ ) { intk; for(k=0;k<@@ q2@@ ;k++) { array1@@ [@@ q1@@ +k@@ ]=@@ array2@@ [k]; } } int@@ out@@ (intarray[],int@@ q1@@ ,int@@ q2@@ ) { intk; for(k=0;k<@@ q1@@ +@@ q2@@ -1;k++) { printf("%d",@@ array@@ [k]); } printf("%d\n",@@ array[@@ q1@@ +@@ q2@@ -1]); }  
c -1
h -1
long@@ exp@@ (int@@ a) { int@@ def1@@ ,@@ expo@@ =1; for(@@ def1@@ =1;@@ def1@@ <=@@ a;@@ def1@@ ++) expo@@ =@@ expo@@ *@@ 10@@ ; return@@ expo@@ ; } main() { intn,i,j,@@ comp@@ ,@@ idlenth@@ ,@@ sw@@ =0,@@ test@@ =0,@@ advnum@@ =0,@@ arradv@@ =1,@@ arrdis@@ ,@@ cache@@ ; int@@ bubble@@ ,@@ maxage@@ ,@@ maxid@@ ,@@ maxnum@@ ,@@ maxright@@ ,@@ print@@ ; scanf("%d",&n); intage@@ [n@@ +1],@@ adv@@ [n@@ +1],@@ ord@@ [n@@ +1],@@ alrscan@@ [n@@ +1],@@ numord@@ [n@@ +1],@@ right@@ [n@@ +1]; getchar(); long@@ id@@ [n@@ +1]; for(i=1;i<=n;i++) { ord@@ [i]=@@ numord@@ [i]=@@ i; alrscan@@ [i]=0; right@@ [i]=0; } for(i=1;i<=n;i++) scanf("%d%d",&@@ id[i],&@@ age[i]); for(i=1;i<=n;i++) { if(age[i]@@ >=60) { adv@@ [i]=1; right@@ [i]@@ +=@@ age@@ [i]@@ *@@ 1000@@ ; right@@ [i]@@ +=@@ 1000000@@ ; advnum@@ ++; } else adv@@ [i]=0; } for(i=1;i<=n;i++) { right@@ [i]@@ +=@@ n-i@@ +1; alrscan@@ [i]=0; } for(i=1;i<=n;i++) { maxright@@ =0; for(j=1;j<=n;j++) { if(@@ right@@ [j]>@@ maxright@@ &&@@ alrscan@@ [j]@@ ==0) {@@ maxright@@ =@@ right@@ [j]; maxnum@@ =j;} } ord@@ [i]=@@ maxnum@@ ; alrscan@@ [@@ maxnum@@ ]=1; } for(@@ idlenth@@ =1;@@ test@@ !=@@ n;@@ idlenth@@ ++) { test@@ =0; for(j=1;j<=n;j++) if(@@ id@@ [j]<@@ exp@@ (@@ idlenth@@ -1)) test@@ ++; } idlenth@@ --; for(i=1;i<=n;i++) { for(j=1;j<=@@ idlenth@@ ;j++) { if(@@ id@@ [@@ ord@@ [i]@@ ]<@@ exp@@ (@@ idlenth@@ -j@@ -1)) printf("@@ 0@@ "); } printf("%d\n",@@ id@@ [@@ ord@@ [i]@@ ]); } getchar(); getchar(); return0; }  
c -1
h -1
0

intmain() { chara[@@ 2][@@ 500]; int@@ len@@ [2@@ ],i,j,@@ o@@ ,@@ W@@ ,@@ l; doublen,@@ p; W@@ =0; l=0; scanf("%lf",&n); getchar(); for(i=0;i<2@@ ;i++){ scanf("%s",@@ a[i]); len@@ [i]@@ =strlen(@@ a[i]); for(j=0;j<len@@ [i]@@ ;j++){ if(a[i][j]@@ !='@@ A'&&@@ a[i][j]@@ !='@@ T'&&@@ a[i][j]@@ !='@@ C'&&@@ a[i][j]@@ !='@@ G'){ W@@ ++; } } } if(@@ len@@ [0]@@ !=@@ len@@ [1]@@ ||@@ W@@ !=0){ printf("error"); return0; } else{ for(j=0;j<len@@ [0]@@ ;j++){ if(a[0]@@ [j]==@@ a[1]@@ [j]){ l++; } } } p@@ =1.0*@@ l@@ /@@ len@@ [0]; if(p@@ >n){ printf("yes"); }else{ printf("no"); } scanf("%d",&@@ o@@ ); return0; }  
c -1
h -1
intmain() { inta[@@ NUM@@ ]={0},@@ d[@@ NUM@@ ]={0}; intk,@@ i,j; int@@ max; scanf("%d",&k); for(i=0;i<k;i++){ scanf("%d",&a[i]); } d@@ [k-1]@@ =1; for(i=k-2@@ ;i>=0;i--){ max=0; for(j=@@ k-1@@ ;j>i@@ ;j--){ if(a[j]<=@@ a[i]@@ ){ if(d@@ [j]@@ >max)max=@@ d@@ [j]; } } d[i]=@@ max+1; } max=@@ d@@ [0]; for(i=1;i<@@ k;i++){ if(d@@ [i]@@ >max)max=@@ d[i]; } printf("%d\n",max); return0; }  
c -1
h -1
0

int@@ h,@@ l,@@ (*p)@@ [100]; voidshuchu@@ (int@@ a) {int@@ r,@@ c,@@ i=0; r=0;@@ c=@@ a; for(;@@ r@@ <@@ h@@ ;i++) {@@ if(c@@ >=0&&@@ c@@ <@@ l) printf("%d\n",*(@@ *(p+@@ r@@ )+@@ c@@ )); r@@ +=@@ 1@@ ;c@@ -=@@ 1; } } intmain() {@@ inti,j; scanf("%d%d",&@@ h@@ ,&@@ l); p=@@ (int@@ (@@ *)@@ [100@@ ])@@ malloc(@@ h@@ *@@ 100*sizeof(int)); for(i=0;i<@@ h@@ ;i++) for(j=0;j<l;j++) scanf("%d",*(p+i)+j); for(i=0;i<@@ h@@ +l@@ -1;i++) shuchu@@ (i); }  
c -1
h -1
struct@@ missle { intid; int@@ h; }@@ *p,@@ tmp; intmax=0; int@@ maxn@@ (inti,int@@ n); int@@ pass@@ (int@@ pre@@ ,int@@ aft@@ ); intmain() { intk; scanf("%d",&k); p=(struct@@ missle@@ *)malloc(sizeof(struct@@ missle@@ )*@@ k); inti=0; do { scanf("%d",&@@ p[i].@@ h); p[i].@@ id@@ =i; i++; }@@ while(i<@@ k); intj; for(i=0;i<k;i++) { j=@@ maxn@@ (i,@@ k); } printf("%d\n",max); free@@ (p); return0; } int@@ maxn@@ (inti,int@@ n) { int@@ max2@@ =1; int@@ re@@ =1; intj; if(i==@@ n-1) { max2@@ =1; } else { for(j=i+1;j<n;j++) { re@@ =1; if(@@ pass@@ (@@ i,j@@ )@@ ==1) { re@@ +=@@ maxn@@ (@@ j,@@ n); if(@@ re@@ >@@ max2@@ ) { max2=@@ re@@ ; } } } } if(@@ max2@@ >max) { max=@@ max2; } return@@ max2; } int@@ pass@@ (int@@ pre@@ ,int@@ aft@@ ) { if(p@@ [@@ pre@@ ].@@ h@@ >=@@ p[@@ aft@@ ].@@ h@@ ) { return1; } else { return0; } }  
c -1
h -1
0

intmain() { intn; cin>>n; inta[@@ 26],@@ max,@@ num[@@ n@@ ],i,j,@@ s; char@@ maxname@@ ,@@ name@@ [n@@ ][10]; memset(a,0,@@ sizeof(a)); for(i=0;i<n;i++) { cin>>@@ num[i]@@ >>@@ name@@ [i]; s@@ =strlen(@@ name@@ [i]); for(j=0;j<@@ s@@ ;j++) a[@@ name@@ [i][j]@@ -'A']++; } max=@@ a[@@ 0],@@ maxname@@ ='A'; for(i=1;i<26;i++) if(a[i]>max) { max=@@ a[i],@@ maxname@@ ='A'+i; } cout<<@@ maxname@@ <<endl@@ <<@@ max<<endl; for(i=0;i<n;i++) { s@@ =strlen(@@ name@@ [i]); for(j=0;j<@@ s@@ ;j++) if(name@@ [i][j]==@@ maxname@@ ) cout<<@@ num[i]@@ <<endl; } return0; }  
c -1
h -1
intmain() { intn,i,j,k,@@ h,@@ l,@@ y; int*p=@@ NULL@@ ; cin>>n; for(i=1;i<=n;i++) { y=0; intx[@@ 101][@@ 101@@ ]={0}; cin>>@@ h@@ >>@@ l; for(j=1;j<=@@ h@@ ;j++) { for(k=1;k<=@@ l@@ ;k++) { cin>>@@ x[j]@@ [k]; } } for(p=@@ x@@ [1]@@ +1@@ ;p<=@@ x@@ [1]@@ +l@@ ;p++) { y=@@ y@@ +@@ (*p@@ ); } for(p=@@ x@@ [2]@@ +1@@ ;p<=@@ x[@@ h@@ -1]@@ +1;@@ p=p+@@ 101@@ ) { y=@@ y@@ +@@ (*p@@ )+@@ (@@ *(p+@@ l@@ -1)); } for(p=@@ x[@@ h@@ ]+1@@ ;p<=@@ x[@@ h@@ ]+@@ l@@ ;p++) { y=@@ y@@ +@@ (*p@@ ); } cout<<@@ y@@ <<endl; } return0; }  
c -1
h -1
0

intmain() { introw,col,@@ i,j,@@ s@@ ,*@@ p=@@ NULL@@ ; cin>>row>>col; inta[100][100]; for(i=0;i<row;i++) for(j=0;j<col;j++) { cin>>*(*(a+i)+j); } for(s=0;s@@ <=@@ row+col-2@@ ;s++) { for(i=0;i<row;i++) if(s@@ -i@@ <col@@ &&@@ s@@ -i@@ >=0) { cout<<@@ *(*(a+i)@@ +@@ s@@ -i@@ )<<endl; } } return0; }  
c -1
h -1
intmain(){ inta[100][100@@ ]={@@ 255@@ }; intn,@@ i=0,j=0,@@ x1,y1,x2,y2@@ ,@@ x,y,@@ s; scanf("%d",&n); for(x=0;x@@ <n;@@ x@@ ++){ for(y=0;y@@ <n;@@ y@@ ++){ scanf("%d",&@@ a[x@@ ][y@@ ]); } } for(x=0;x@@ <n;@@ x@@ ++){ for(y=0;y@@ <n;@@ y@@ ++){ if(a[x@@ ][y@@ ]==0){ x1@@ =@@ x; y1@@ =@@ y; i=1; break; } } if(i@@ ==1){ break; } else@@ ; } for(@@ x=@@ n-1;@@ x@@ >=0@@ ;x@@ --){ for(@@ y=@@ n-1;@@ y@@ >=0;@@ y@@ --){ if(a[x@@ ][y@@ ]==0){ x2@@ =@@ x; y2@@ =@@ y; j=1; break; } } if(j@@ ==1){ break; } else@@ ; } s=(@@ y2-y1@@ -1)*(@@ x2-x1@@ -1); printf("%d",s); return0; }  
c -1
h -1
0

struct { inta; charb[@@ 26]; }@@ shu@@ [1000]; intmain() { ints[@@ 27]; intn,i,j,@@ o@@ ,@@ max,@@ t@@ =1,@@ x; scanf("%d",&n); for(i=0;i<n;i++) scanf("%d%s",&@@ shu[i].@@ a,@@ shu[i].@@ b); for(i=1;i<=@@ 26;i++) s[i]@@ =0; for(i=0;i<n;i++) for(j=0;j<strlen(@@ shu[i].@@ b@@ );j++) { o@@ =@@ shu[i].@@ b[j]@@ -@@ 64@@ ; s[@@ o@@ ]++; } max=0; for(i=1;i<=@@ 26;i++) if(max<@@ s[i]@@ ){max=@@ s[i]@@ ;t@@ =i;} printf("%c\n",@@ t@@ +@@ 64@@ ); printf("%d\n",max); for(i=0;i<n;i++) { x@@ =strlen(@@ shu[i].@@ b); for(j=0;j<@@ x;j++) if(@@ shu[i].@@ b[j]@@ ==@@ t@@ +@@ 64@@ ) printf("%d\n",@@ shu[i].@@ a); } return0; }  
c -1
h -1
main() {@@ chara[@@ 256]; charb[@@ 256],c[256]; scanf("%s",a); scanf("%s",b); scanf("%s",c); int@@ sum1@@ =strlen(b); inti,j,k,@@ m,n,@@ p,q,@@ start@@ ,@@ pd@@ =0; for(@@ start@@ =0;@@ start@@ <@@ strlen(@@ a);@@ start@@ ++) { k=0; for(i=@@ start@@ ;i<@@ start@@ +@@ sum1@@ ;i++) { if(a[i]!=@@ b[k@@ ]@@ )break; k++; } if(i==@@ (@@ start@@ +@@ sum1@@ )){@@ pd@@ =1;@@ p=@@ start@@ ;break;} } if(@@ pd@@ ==1) {@@ for(q=@@ p,@@ k@@ =0;c@@ [k]@@ !='\0'@@ ;q@@ ++@@ ,k++) a[q@@ ]=@@ c@@ [k]; } printf("%s",a); }  
c -1
h -1
0

intmain() { intyear,month,day; int@@ monthday@@ [12]={31,28,31,30,31,30,31,31,30,31,30,31}; scanf("%d%d%d",&@@ year,@@ &@@ month,@@ &@@ day); inti; intsum=0; for(i=1;i<month;i++) { sum=sum+@@ monthday@@ [i-1]; } sum=sum+day; inta; a=@@ year%@@ 4@@ ; if(month@@ >2@@ &&(@@ a@@ ==0&&@@ year%100!=0@@ ||@@ year%400==0)) { sum=sum+1; } printf("%d",sum); return0; }  
c -1
h -1
int@@ p[@@ 1001@@ ][@@ 1001]; intmain() { intn; inti=0,j=0,@@ leftx@@ ,@@ lefty@@ ,@@ rightx@@ ,@@ righty@@ ; int@@ flag=1; scanf("%d",&n); for(i=0;i<n;i++) for(j=0;j<n;j++) scanf("%d",&@@ p@@ [i][j]); for(i=0;i<n;i++) { for(j=0;j<n;j++) { if(i@@ +1@@ <n@@ &&j@@ +1@@ <n@@ &&p@@ [i][j]==0&&@@ p@@ [i+1][j]@@ ==0&&@@ p[i]@@ [j+1@@ ]==0) { leftx@@ =i; lefty@@ =j; } if(i@@ -1@@ >=0@@ &&j@@ -1@@ >=0@@ &&p@@ [i][j]==0&&@@ p@@ [i-1][j]@@ ==0&&@@ p[i]@@ [j-1]@@ ==0) { rightx@@ =i; righty@@ =j; flag=0; break; } } if(flag==0) break; } printf("%d\n",@@ (@@ rightx@@ -@@ leftx@@ -1)*(@@ righty@@ -@@ lefty@@ -1)); getchar(); getchar(); return0; }  
c -1
h -1
0

intmain() { introw,col,@@ a[100][100],@@ i,j,@@ k=0,@@ b[@@ 10000],@@ s; scanf("%d%d",&row,&col); for(i=0;i<row;i++) { for(j=0;j<col;j++) { scanf("%d",&a[i][j]); } } if(row@@ >=@@ col) { for(s=0;s@@ <col@@ ;s++) { for(i=0;i<=@@ s;i++) { b[k]=@@ a[i][@@ s@@ -i@@ ]; k++; } } for(@@ s=@@ col@@ ;s@@ <row@@ ;s++) { for(i=@@ s@@ -col@@ +1;i<=@@ s;i++) { b[k]=@@ a[i][@@ s@@ -i@@ ]; k++; } } for(@@ s=@@ row@@ ;s@@ <row@@ +col@@ -1;@@ s++) { for(i=@@ s@@ -col@@ +1;i<@@ row;i++) { b[k]=@@ a[i][@@ s@@ -i@@ ]; k++; } } } else { for(s=0;s@@ <row@@ ;s++) { for(i=0;i<=@@ s;i++) { b[k]=@@ a[i][@@ s@@ -i@@ ]; k++; } } for(@@ s=@@ row@@ ;s@@ <col@@ ;s++) { for(i=0;i<row;i++) { b[k]=@@ a[i][@@ s@@ -i@@ ]; k++; } } for(@@ s=@@ col@@ ;s@@ <col@@ +row@@ -1;@@ s++) { for(i=@@ s@@ -col@@ +1;i<@@ row;i++) { b[k]=@@ a[i][@@ s@@ -i@@ ]; k++; } } } for(i=0;i<k;i++) { printf("%d\n",@@ b[i]); } return0; }  
c -1
h -1
ints@@ (int@@ m); int@@ p@@ (intm,@@ inti,@@ inta[100@@ ]); void@@ e@@ (inti,int@@ c@@ [100],int@@ d@@ [100],int@@ m,int@@ n); intmain() { inti,@@ m,n,@@ a[100],b[100],@@ c[100],@@ d@@ [100]; scanf("%d%d",&m,&n); for(i=0;i<m;i++)@@ a[i]=@@ s@@ (i); for(i=0;i<n;i++)@@ b[i]=@@ s@@ (i); for(i=0;i<m;i++)@@ c[i]=@@ p@@ (m,@@ i,@@ a); for(i=0;i<n;i++)@@ d[i]=@@ p@@ (n,@@ i,@@ b); for(i=0;i<m+@@ n;i++)@@ e@@ (i,@@ c,d,@@ m,n); return0; } ints@@ (intm) { inta[100]; scanf("%d",&@@ a[m@@ ]); return@@ a[m@@ ]; } int@@ p@@ (intm,@@ inti,@@ inta[100@@ ]) { int@@ p,q,@@ n; for(p=0;p@@ <m@@ ;p++) { for(q=0;q@@ <m-1@@ ;q++) { if(a[@@ q@@ ]>@@ a[q@@ +1]) { n=@@ a[q@@ ]; a[q@@ ]=a[@@ q@@ +1]; a[q@@ +1]=@@ n; } } } return@@ a[i]; } void@@ e@@ (inti,int@@ c@@ [100],int@@ d@@ [100],int@@ m,intn) { if(i==0)@@ printf("%d",c@@ [0]); if(i@@ >0@@ &&i@@ <@@ m)@@ printf("%d",c[i]); if(i>=@@ m)@@ printf("%d",d@@ [i-@@ m@@ ]); }  
c -1
h -1
0

main() { intn; scanf("%d",&n); int*p=@@ (int*)malloc(n*sizeof(int)); int*@@ q=@@ (int*)malloc(n*sizeof(int)); q@@ [n-1@@ ]=1; int@@ best@@ =@@ q@@ [n-1]; for(inti=0;i<@@ n;i++)@@ scanf("%d",&@@ p[i]); for(inti=@@ n-2;i>=0;i--) { int@@ a=0; for(int@@ k=@@ n-1@@ ;k@@ >@@ i@@ ;k--) { if(p@@ [i]>=@@ p@@ [k]@@ &&@@ q@@ [k]@@ >=@@ a)@@ a=@@ q@@ [k]; } q@@ [i]=@@ a@@ +1; if(q@@ [i]>@@ best@@ )@@ best@@ =@@ q@@ [i]; } printf("%d\n",@@ best@@ ); }  
c -1
h -1
structstudent { intnum,@@ z; }@@ a,@@ max1,@@ max2@@ ,max3@@ ; voidmain() { inti,n,@@ x,y; scanf("%d",&n); max1@@ .z@@ =-1; max2@@ .z@@ =-1; max3@@ .z@@ =-1; for(i=0;i<n;i++) { scanf("%d%d%d",&@@ a.@@ num,&@@ x,&@@ y); a.@@ z=@@ x+@@ y; if(a@@ .z@@ >@@ max1@@ .z@@ ) { max3@@ .@@ num=@@ max2@@ .@@ num; max3@@ .@@ z=@@ max2@@ .@@ z; max2@@ .@@ num=@@ max1@@ .@@ num; max2@@ .@@ z=@@ max1@@ .@@ z; max1@@ .@@ num=@@ a.@@ num; max1@@ .@@ z=@@ a.@@ z; } elseif(a@@ .z@@ >@@ max2@@ .z@@ ) { max3@@ .@@ num=@@ max2@@ .@@ num; max3@@ .@@ z=@@ max2@@ .@@ z; max2@@ .@@ num=@@ a.@@ num; max2@@ .@@ z=@@ a.@@ z; }elseif(@@ a@@ .z@@ >@@ max3@@ .z@@ ) { max3@@ .@@ num=@@ a.@@ num; max3@@ .@@ z=@@ a.@@ z; } } printf("%d%d\n%d%d\n%d%d\n",@@ max1@@ .num,@@ max1@@ .@@ z,@@ max2@@ .num,@@ max2@@ .@@ z,@@ max3@@ .num,@@ max3@@ .@@ z); }  
c -1
h -1
0

intmain() { charstr@@ [100],@@ substr@@ [50@@ ],@@ r@@ [50@@ ]; gets(str); gets(@@ substr@@ ); gets(@@ r); inti,j,n,@@ same@@ =0; int@@ l=strlen(@@ substr@@ ); for(i=0;@@ str@@ [i]@@ !=0;i++) { if(@@ substr@@ [0]==@@ str@@ [i]) { same@@ =1; for(j=1@@ ;@@ substr@@ [j]@@ !=0;j++) { if(@@ substr@@ [j]!=@@ str@@ [i+j@@ ]) { same@@ =0; break; } } if(@@ same@@ ==1) { n=i; break; } } } if(@@ same@@ ==1) { for(j=0;j<n;j++) { printf("%c",str@@ [j]); } printf("%s",@@ r); for(j=@@ n+@@ l@@ ;@@ str@@ [j]@@ !=0;j++) { printf("%c",str@@ [j]); } } if(@@ same@@ ==0) { printf("%s",str); } return0; }  
c -1
h -1
intmain() { intn; intnum[@@ 30]; int@@ count[@@ 30]; cin>>n; inti; intj; for(i=0;i<n;i++) { cin>>num[i]; count@@ [i]=1; } for(i=0;i<n;i++) { for(j=0;j<i;j++) { if(num@@ [i]<=@@ num@@ [j]) { if(count@@ [i]<@@ count@@ [j]@@ +1) { count@@ [i]=@@ count@@ [j]+1; } } } } intmax@@ =1; for(i=0;i<n;i++) { if(count@@ [i]>max) { max=count@@ [i]; } } cout<<max<<endl; return0; }  
c -1
h -1
0

structbook {@@ intn; structbook*next; }; struct@@ au { char@@ n; ints; structbook@@ *p; }; voidmain() { inti,j,k,l,@@ m,@@ n@@ ,*@@ p,@@ a[100@@ ][@@ 1100@@ ]={0},@@ max=0,@@ b[100@@ ]={0}; chars[@@ 30]; scanf("%d",&n); for(l=1;l@@ <=n;@@ l++) { scanf("%d",&@@ j); scanf("%s",s); for(i=0;s[i]@@ !='\0';i++) { b[@@ s[i]@@ ]++; a[@@ s[i]@@ ][@@ b[@@ s[i]@@ ]@@ ]=@@ j; if(b[@@ s[i]@@ ]>@@ b[@@ max@@ ])@@ max=@@ s[i]; } } printf("%c\n",@@ (char)@@ max); printf("%d\n",@@ b[@@ max@@ ]); for(i=1;i<=@@ b[@@ max@@ ]@@ ;i++) printf("%d\n",a[@@ max@@ ][i]); }  
c -1
h -1
intmain() { int@@ x,@@ m,n,@@ s; scanf("%d\n",&@@ x); for(s=0;s@@ <@@ x@@ ;s@@ ++){ inta[100][100]; inti,j,k,@@ q=0,@@ w@@ =0,@@ e=0,@@ r=0,@@ sum=0; scanf("%d%d",&m,&n); for(i=0;i<m;i++){ for(j=0;j<n;j++){ scanf("%d",&a[i][j]); } } for(k=0;k<n;k++){ q@@ +=@@ a[0][@@ k@@ ]; w@@ +=@@ a[m-1][@@ k@@ ]; } k=0; for(k=0;k<@@ m@@ ;k++){ e@@ +=@@ a[k@@ ][0]; r@@ +=@@ a[k@@ ][n-1]; } sum=@@ q@@ +@@ w@@ +@@ e+@@ r@@ -@@ a[0][0]@@ -@@ a[m-1][@@ n-1]-@@ a[0][@@ n-1]-@@ a[m-1][@@ 0]; printf("%d\n",sum); } return0; }  
c -1
h -1
0

structstudent { intnum; intc; intm; intsum; structstudent*next; }; voidmain() { intn,i,j; scanf("%d",&n); structstudent*head,*@@ p0@@ ,*@@ p,*@@ q; head@@ =(structstudent*)malloc(sizeof(structstudent)); head@@ ->next=NULL; for(i=0;i<n;i++) { q@@ =(structstudent*)malloc(sizeof(structstudent)); scanf("%d%d%d",&@@ q->@@ num,&@@ q->@@ c@@ ,&@@ q->@@ m); q->@@ sum=@@ q->@@ c+@@ q->@@ m; q@@ ->next=NULL; p0@@ =head; p=@@ p0@@ ->next; j=0; while(p@@ !=NULL@@ &&@@ q->@@ sum<=@@ p->@@ sum) { p0@@ =p; p=p->next; j++; if(j@@ >@@ 3) goto@@ A@@ ; } p0@@ ->next=@@ q; q@@ ->next=p; A@@ :@@ continue; } p=head->next; for(i=0;i<3;i++) { printf("%d%d\n",@@ p->@@ num,@@ p->@@ sum); p=p->next; } }  
c -1
h -1
intmain(){ ints; int@@ i1@@ ,@@ j1@@ ,@@ i2@@ ,@@ j2@@ ; inti,j; intn,@@ x; scanf("%d",&n); for(i=0;i<n;i++) { for(j=0;j<n;j++) { scanf("%d",&x); if(x@@ ==0) { i1@@ =i; j1@@ =j; break; } } if(x@@ ==0)break; } for(j=@@ j1@@ +1@@ ;j<@@ n@@ ;j++)@@ scanf("%d",&x); for(i=@@ i1@@ +1@@ ;i<n;i++) { int@@ y=0; for(j=0;j<n;j++) { scanf("%d",&x); if(x@@ ==0) { i2@@ =i; j2@@ =j; } } } s=(@@ j1@@ -@@ j2@@ +1)*(@@ i1@@ -@@ i2@@ +1); printf("%d",s); return0;}  
c -1
h -1
0

intmain(){ intn; cin>>n; inta[n@@ ],@@ i,j; for(i=0;i<n;i++){ cin>>a[i]; for(j=0;j<i;j++){ if(a[j]==a[i]) break; } if(j==@@ i){ if(i@@ !=0) cout<<'@@ '; cout<<a[i]; } } return0; }  
c -1
h -1
intmain() { intn,i,j,@@ x[@@ hang@@ ][@@ lie@@ ],@@ s=0,@@ x1,y1,x2,y2@@ ; scanf("%d",&n); n=@@ n; for(i=0;i<n;i++) { for(j=0;j<n;j++) { scanf("%d",&@@ x@@ [i][j]); } } for(i=0;i<n;i++) { for(j=0;j<n;j++) { if(x@@ [i][j]==0&&@@ x@@ [i-1]@@ [j]==@@ 255@@ &&@@ x[i]@@ [j-1@@ ]==255&&@@ x@@ [i+1][j]@@ ==0&&@@ x[i]@@ [j+1@@ ]==0) { x1=i; y1=j; } elseif(x@@ [i][j]==0&&@@ x@@ [i-1][j]@@ ==0&&@@ x[i]@@ [j-1]@@ ==0&&@@ x@@ [i+1]@@ [j]==@@ 255@@ &&@@ x[i]@@ [j+1@@ ]==255@@ ) { x2=i; y2=j; } } } s=(@@ x2-x1-1)*(y2-y1-1); printf("%d",s); return0; }  
c -1
h -1
0

intmain() { intn,i,@@ a,@@ factor@@ (int@@ N@@ ,int@@ min); scanf("%d",&n); for(i=0;i<n;i++) { scanf("%d",&a); printf("%d\n",@@ factor@@ (a,@@ 2)); } return0; } int@@ factor@@ (int@@ N@@ ,int@@ min) { inti,@@ result; result=1; if(N@@ <@@ min) { return0; } for(i=min@@ ;i<@@ N;i++) { if(N@@ %i==0) { result+=@@ factor@@ (@@ N@@ /i,i); } }@@ returnresult; }  
c -1
h -1
voidmain() { chara[@@ 1000@@ ][100]; intb[@@ 1000],@@ c[@@ 27@@ ],@@ s[@@ 1000],@@ max,@@ i,j,k; intn; scanf("%d",&n); for(i=0;i<n;i++) { scanf("%d%s",&@@ b[i]@@ ,@@ a[i]); s[i]@@ =strlen(@@ a[i]); } for(j=0;j<26;j++) { c[j]@@ =0; for(i=0;i<n;i++) { for(k=0;k<@@ s[i]@@ ;k++) { if(a[i]@@ [k]==@@ 65@@ +j@@ ) c[j]=@@ c@@ [j]+1; } } } max=0; for(i=0;i<26;i++) { if(c@@ [i]>max) max=@@ c[i]; } for(i=0;i<26;i++) { if(c@@ [i]==@@ max) { printf("%c\n",@@ i@@ +65); printf("%d\n",@@ c[i]); for(k=0;k<n;k++) { for(j=0;j<@@ s[k]@@ ;j++) { if(a[k]@@ [j]==@@ 65@@ +i@@ ) printf("%d\n",@@ b[k@@ ]); } } } } }  
c -1
h -1
0

intmain() { inta[1000]; inti,n,@@ j,@@ e,@@ l,@@ k; scanf("%d%d",&n,&k); for(i=0;i<n;i++){ scanf("%d",&a[i]); } e=@@ a[0]; for(i=1;i<=n;i++){ for(j=0;j<n@@ -i;j++){ if(a[j]>a[j+1@@ ]){ e=@@ a[j+1@@ ]; a[j+1]=@@ a[j]; a[j]=@@ e; } } } l=0; for(i=0;i<n;i++){ for(j=i;j<@@ n;j++){ if(a[i]+a[j]==@@ k){ l++; } } } if(l@@ ==0){ printf("no"); }else{ printf("yes"); } return0; }  
c -1
h -1
intb[@@ 2][@@ 10],@@ e@@ [@@ 20@@ ]={0},@@ c=0,@@ d=0; scanning@@ () { scanf("%d%d",&@@ c@@ ,&@@ d); } scanning_array@@ (int@@ y,int@@ x) { inti; for(i=0;i<x;i++) { scanf("%d",&@@ b[@@ y@@ ][i]); } } void@@ arrange@@ (intm,@@ inta[]) { inti,j,t; for(i=0;i<m;i++) for(j=0;j<m@@ -i-1;j++) { if(a[j]>a[j+1]) { t=a[j]; a[j]=a[j+1]; a[j+1]=t; } } } combine@@ (intx[],int@@ y@@ []) { inti; for(i=0;i<c@@ ;i++) e@@ [i]=@@ b[1@@ ]@@ [i]; for(i=@@ c@@ ;i<@@ c@@ +d@@ ;i++) e@@ [i]=@@ b[2@@ ]@@ [i-@@ c@@ ]; } print@@ () { inti; for(i=0;i<c@@ +d@@ ;i++) { printf("%d",@@ e@@ [i]); if(i!=@@ c@@ +d@@ -1) printf(""); } } voidmain() { scanning@@ (); scanning_array@@ (@@ 1,@@ c); scanning_array@@ (2,@@ d); arrange@@ (c,@@ b[1@@ ]); arrange@@ (@@ d,@@ b[2@@ ]); combine@@ (@@ b[1@@ ],b[@@ 2@@ ]); print(); }  
c -1
h -1
0

main() { introw,col,@@ time@@ =0,@@ n,@@ i,j; int@@ array[100][100]; scanf("%d%d",&row,&col); for(i=0;i<row;i++) for(j=0;j<col;j++) scanf("%d",&array@@ [i][j]); for(n=0;n@@ <row@@ +col@@ ;n++) { if(col@@ <row) { if(n@@ <col) { for(i=0;i<=@@ n;i++) printf("%d\n",array@@ [i]@@ [n@@ -i]); } elseif(n@@ <row) { for(i=@@ col-1@@ ;i>=0;i--) printf("%d\n",array@@ [n@@ -i@@ ][i]); } else { for(i=@@ col-1@@ ;i@@ >@@ n-@@ row@@ ;i--) printf("%d\n",array@@ [n@@ -i@@ ][i]); } } elseif(@@ row@@ <col) { if(n@@ <row) { for(i=0;i<=@@ n;i++) printf("%d\n",array@@ [i]@@ [n@@ -i]); } elseif(n@@ <col) { for(i=0;i<=@@ row-1;i++) printf("%d\n",array@@ [i]@@ [n@@ -i]); } else { for(i=@@ col-1@@ ;i@@ >@@ n-@@ row@@ ;i--) printf("%d\n",array@@ [n@@ -i@@ ][i]); } } elseif(@@ row@@ ==@@ col) { if(n@@ <row) { for(i=0;i<=@@ n;i++) printf("%d\n",array@@ [i]@@ [n@@ -i]); } else { for(i=@@ row-1@@ ;i@@ >@@ n-@@ col@@ ;i--) printf("%d\n",array@@ [n@@ -i@@ ][i]); } } } }  
c -1
h -1
intmain(){ int@@ a=0,b=0,@@ i=0,j=0,@@ p=0,@@ q=0,@@ m=0,@@ n=0,@@ x1@@ =0,@@ y=0; scanf("%d",&@@ x1@@ ); y=0; for(i=1;i<=@@ x1@@ ;i++){ for(j=1;j<=@@ x1@@ ;j++){ scanf("%d",&a); if((@@ a@@ ==0)&&(@@ y@@ ==0)@@ ){ p=i; q@@ =j; y=1; } elseif(a@@ ==0){ m=i; n@@ =j; } } } b@@ =(m@@ -@@ p@@ -1)*(@@ n-@@ q@@ -1); printf("%d",@@ b); return0; }  
c -1
h -1
0

intmain(){ intk,@@ i; intsz@@ [100][100],@@ sum,@@ s@@ [100]; inta,b,@@ m,n; scanf("%d",&k); for(i=1;i<=@@ k;i++){ sum=0; scanf("%d%d",&m,&n); for(a=0;a@@ <m;@@ a++){ for(b=0;b@@ <n;b++){ scanf("%d",&@@ sz[a@@ ][b@@ ]); } } for(b=0;b@@ <n;b++){ sum+=@@ sz[0][@@ b@@ ]; sum+=@@ sz[@@ m-1][@@ b@@ ]; } for(a@@ =1;@@ a@@ <m-1@@ ;a@@ ++){ sum+=@@ sz[a@@ ][0]; sum+=@@ sz[a@@ ][n-1]; } s[i]=@@ sum; } for(i=1;i<=@@ k;i++){ printf("%d\n",@@ s[i]); } return0; }  
c -1
h -1
int@@ d@@ [100],@@ a[100]; inti,j,k,n,@@ ans; intmain() { cin>>n; a[0]=@@ 1000000000@@ ; for(i=1;i<=@@ n;++@@ i) cin>>a[i]; d@@ [0]@@ =0; ans=0; for(i=1;i<=@@ n;++@@ i) { d@@ [i]=1; for(j=0;j<@@ i@@ ;++@@ j) if(a[i]<=@@ a[j]&&@@ d@@ [j]+1>@@ d@@ [i]) d[i]=@@ d@@ [j]+1; if(d@@ [i]>@@ ans@@ ) ans=@@ d[i]; } printf("%d\n",@@ ans); return0; }  
c -1
h -1
0

intmain() { intn,i,j,a[@@ N@@ ],@@ s[@@ N@@ ],@@ max=0; scanf("%d",&n); for(i=0;i<n;i++) scanf("%d",&a[i]); for(i=0;i<n;i++) s[i]@@ =1; for(i=n-2;i>=0;i--) for(j=i+1;j<n;j++) if(a[j]<=@@ a[i]&&@@ s[i]@@ <@@ s[j]@@ +1) s[i]=@@ s[j]@@ +1; for(i=0;i<n-1;i++) max@@ =(@@ max@@ >@@ s[i]@@ )@@ ?@@ max@@ :@@ s[i]; printf("%d",max); return0; }  
c -1
h -1
voidmain() { struct@@ date { int@@ year; int@@ month@@ ; int@@ day; int@@ days; }@@ date1@@ ; scanf("%d%d%d",&@@ date1@@ .@@ year@@ ,&@@ date1@@ .@@ month,&@@ date1@@ .@@ day); intb[@@ 12]={31,28,31,30,31,30,31,31,30,31,30,31}; date1@@ .@@ days@@ =0; inti; if(@@ date1@@ .@@ month@@ >1) { for(i=0;i<=@@ date1@@ .@@ month@@ -2;i++) { date1@@ .@@ days=@@ date1@@ .@@ days@@ +@@ b[i]; } date1@@ .@@ days=@@ date1@@ .@@ days@@ +@@ date1@@ .@@ day; } else { date1@@ .@@ days=@@ date1@@ .@@ day; } printf("%d",@@ date1@@ .@@ days@@ ); }  
c -1
h -1
0

struct@@ tushu@@ { int@@ bianhao@@ ; charwriter@@ [27]; }@@ book[1000]; void@@ jishu@@ (struct@@ tushu@@ *@@ p1,@@ inta[@@ 26@@ ],int@@ b); intmax@@ (intc[@@ 26@@ ]); void@@ shu@@ (struct@@ tushu@@ *p2@@ ,int@@ d@@ ,int@@ e); intmain(){ intn,i,@@ m; int@@ zimu@@ [26]; struct@@ tushu@@ *@@ pointer@@ ; pointer@@ =&@@ book@@ [0]; scanf("%d",&n); for(i=0;i<n;i++){ scanf("%d%s",&book[i].@@ bianhao@@ ,&@@ book[i].@@ writer); } jishu@@ (@@ pointer@@ ,@@ zimu@@ ,n); m=@@ max(@@ zimu@@ ); shu@@ (@@ pointer@@ ,@@ m,n); return0; } void@@ jishu@@ (struct@@ tushu@@ *@@ p1,@@ inta[@@ 26@@ ],int@@ b){ intj,@@ k,@@ diji@@ ; for(j=0;j<26@@ ;j++){ a[j]=0; } for(j=0;j<@@ b@@ ;j++){ k=0; do{ diji@@ =(@@ *(@@ p1@@ +j)@@ ).@@ writer@@ [k]@@ -'A'; a[@@ diji@@ ]++; k++; }while(@@ (*(@@ p1@@ +j)@@ ).@@ writer@@ [k]@@ !='\0'@@ ); } } intmax@@ (intc[@@ 26@@ ]){ intk,@@ da@@ ,@@ jieguo@@ =0; da@@ =@@ c[@@ 0]; for(k=1;k<@@ 26@@ ;k++){ if(c@@ [k]@@ >@@ da@@ ){ da@@ =@@ c@@ [k]; jieguo@@ =k; } } printf("%c\n%d\n",@@ 65@@ +@@ jieguo@@ ,@@ da@@ ); return(@@ jieguo@@ ); } void@@ shu@@ (struct@@ tushu@@ *p2@@ ,int@@ d@@ ,int@@ e@@ ){ char@@ ai@@ =@@ 65@@ +d; int@@ x,y; for(x=0;x@@ <@@ e@@ ;x@@ ++){ y=0; do{ if((@@ *(@@ p2@@ +@@ x@@ ))@@ .@@ writer@@ [y@@ ]==@@ ai@@ ){ printf("%d\n",@@ (@@ p2@@ +@@ x)@@ ->@@ bianhao@@ ); } y++; }while(@@ (*(@@ p2@@ +@@ x@@ ))@@ .@@ writer@@ [y@@ ]!='\0'@@ ); } }  
c -1
h -1
intmain(intargc,char*argv[]) {int@@ zu@@ [100][100]; intn,@@ a,b,@@ c,d; scanf("%d",&n); inti,j; for(i=0;i<n;i++) {@@ for(j=0;j<n;j++) {scanf("%d",&@@ zu@@ [j]@@ [i]); } } for(i=0;i<n;i++) {@@ for(j=0;j<n;j++) {@@ if(i@@ ==0&&@@ zu@@ [j]@@ [i]==0) {@@ a@@ =j; b@@ =0;} elseif(@@ i@@ !=0@@ &&j@@ ==0&&@@ zu@@ [j]@@ [i]==0) {@@ a@@ =0;b@@ =i;} elseif(@@ j@@ !=0@@ &&i@@ !=0&&@@ zu@@ [j]@@ [i]==0) {if(@@ zu@@ [j-1]@@ [i]==@@ 255@@ &&@@ zu@@ [j]@@ [i-1@@ ]==255&&@@ zu@@ [j+1]@@ [i]@@ ==0&&@@ zu@@ [j]@@ [i+1@@ ]==0) {@@ a@@ =j; b=i; } } if(i==@@ n-1@@ &&@@ zu@@ [j]@@ [i]==0) {@@ c@@ =j; d=@@ n-1; } elseif(@@ i@@ !=@@ n-1@@ &&j@@ ==@@ n-1@@ &&@@ zu@@ [j]@@ [i]==0) {@@ c=@@ n-1; d@@ =i; } elseif(@@ i@@ !=@@ n-1@@ &&j@@ !=@@ n-1@@ &&@@ zu@@ [j]@@ [i]==0) {if(@@ zu@@ [j-1]@@ [i]@@ ==0&&@@ zu@@ [j]@@ [i-1]@@ ==0&&@@ zu@@ [j+1]@@ [i]==@@ 255@@ &&@@ zu@@ [j]@@ [i+1@@ ]==255@@ ) {@@ c@@ =j; d@@ =i; } } } } int@@ mian@@ ; mian@@ =(@@ c-a-1)*(d-b-1); printf("%d",@@ mian@@ ); return0; }  
c -1
h -1
0

int@@ fenjieyinshi@@ (intn,int@@ m) { inti=0; intsum@@ =1; if(n@@ <@@ m) return0; else { for(i=m@@ ;i<n;i++) if(n%i==0) sum+=@@ fenjieyinshi@@ (n/i,i); returnsum; } } intmain() { intn=0; inti=0; int@@ a=0; cin>>n; for(i=0;i<n;i++) { cin>>a; if(a==1) cout<<@@ 1@@ <<endl; else cout<<@@ fenjieyinshi@@ (a,@@ 2)<<endl; } return0; }  
c -1
h -1
intmain() { introw,col,@@ a[100][100]; cin>>row>>col; intnum=0; for(inti=1;i<=@@ row;i++) { for(intj=1;j<=@@ col;j++) { cin>>@@ a[i-1]@@ [j-1]; } } for(intk=0@@ ;k<=@@ row+col-2@@ ;k++) { for(intl@@ =0;@@ l@@ <=row@@ -1;@@ l++) { if(k@@ -l@@ <=@@ col-1@@ &&k@@ >=@@ l) { cout<<@@ a[l@@ ][@@ k-@@ l@@ ]<<endl; } } } return0; }  
c -1
h -1
0

intmain() { chara[501],b[501]; intnum,@@ i; int@@ same@@ =0,@@ judge@@ =1; double@@ standard@@ ,@@ actual@@ ; scanf("%lf",&@@ standard@@ ); scanf("%s",a); scanf("%s",b); if(strlen(a)!=strlen(b@@ )) { printf("error"); } else { num@@ =strlen(a); for(i=0;i<num;i++) { if(((@@ a[i]!='@@ A')&&(@@ a[i]!='@@ T')&&(@@ a[i]!='@@ G')&&(@@ a[i]!='@@ C')@@ )||((@@ b[i]!='@@ A')&&(@@ b[i]!='@@ T')&&(@@ b[i]!='@@ G')&&(@@ b[i]!='@@ C')@@ )) { printf("error"); judge@@ =0; break; } else { if(a[i]==b[i]) { same@@ ++; } } } if(@@ judge@@ !=0) { actual@@ =1.0*@@ same@@ /@@ num; if(@@ actual@@ >@@ standard@@ ) { printf("yes"); } else { printf("no"); } } } return0; }  
c -1
h -1
voidmain() { int@@ str_1@@ [@@ 20@@ ][@@ 20]; int@@ str_2@@ [100]; intx,y,@@ m,@@ j; intsum=0; int@@ p=0; int@@ a=0; int@@ b=0; intc; intk; inti=0; while(1) { ++@@ p; scanf("%d",&x); if(@@ -1@@ ==@@ x@@ )break; k=0; str_1@@ [p@@ ]@@ [i@@ ++]=@@ x; b++; while(1) { scanf("%d",&@@ y); k++; str_1@@ [p@@ ]@@ [i@@ ++]=@@ y; if(@@ 0@@ ==@@ y) { str_1@@ [p@@ ]@@ [i]@@ ='\0'; break; } } for(j=0;j<k;j++) { for(m=0;m<@@ k@@ ;m++) { if(@@ str_1@@ [p@@ ]@@ [j]==@@ str_1@@ [p@@ ][m@@ ]@@ *2@@ )@@ ++@@ sum; } } str_2@@ [a@@ ++]=@@ sum; sum=0; str_2@@ [a@@ ]='\0'; i=0; } for(c=0;c@@ <b@@ ;c@@ ++) { printf("%d",@@ str_2@@ [c@@ ]); printf("\n"); } }  
c -1
h -1
0

intmain() { int@@ sum,@@ a,b,@@ m,n,@@ k,@@ i,j; intnum@@ [100][100]; scanf("%d",&n); for(i=0;i<n;i++) { sum=0; for(a=0;a@@ <@@ 100@@ ;a@@ ++) { for(b=0;b@@ <@@ 100@@ ;@@ b++) { num[@@ a@@ ][b@@ ]=0; } } scanf("%d%d",&@@ m,&@@ k); if(m@@ ==1&&@@ k@@ ==1) { scanf("%d",&@@ j); printf("%d",@@ j); } elseif(m@@ ==1&&@@ k@@ !=1) { for(a=0;a@@ <k;@@ a++) { scanf("%d",&@@ num[@@ 0][@@ a@@ ]); sum=sum+@@ num[@@ 0][@@ a@@ ]; } printf("%d",sum); } elseif(m@@ !=1@@ &&k@@ ==1) { for(a=0;a@@ <m;@@ a++) { scanf("%d",&@@ num[@@ a@@ ][0]@@ ); sum=sum+@@ num[@@ a@@ ][0]; } printf("%d",sum); } else { for(a=0;a@@ <m;@@ a++) { for(b=0;b@@ <k;@@ b++) { scanf("%d",&@@ num[@@ a@@ ][b@@ ]); } } for(a=0;a@@ <k;@@ a++) { sum=sum+@@ num[@@ 0][@@ a@@ ]+@@ num[@@ m-1][@@ a@@ ]; } for(a@@ =1;@@ a@@ <@@ (m@@ -1)@@ ;a@@ ++) { sum=sum+@@ num[@@ a@@ ][0]+@@ num[@@ a@@ ][k@@ -1]; } printf("%d\n",sum); } } }  
c -1
h -1
intmain() { intn,i,j,k,@@ z,@@ x; scanf("%d",&n); structStudent { intnum; intyuwen; intshuxue; int@@ zongfen; }stu[@@ n]; for(i=0;i<n;i++) { scanf("%d%d%d",&stu[i].num,&stu[i].@@ yuwen@@ ,&stu[i].@@ shuxue); stu[i].@@ zongfen@@ =stu[i].@@ yuwen+stu[i].@@ shuxue; } for(j=0;j<3;j++) { for(k=0;k<@@ n-1;k++) { if(@@ stu[k].@@ zongfen@@ >@@ stu@@ [k+1@@ ].@@ zongfen@@ ) { z=@@ stu@@ [k+1@@ ].@@ zongfen; stu@@ [k+1@@ ].@@ zongfen@@ =stu@@ [k].@@ zongfen; stu[k].@@ zongfen@@ =@@ z; x=@@ stu@@ [k+1@@ ].@@ num; stu@@ [k+1@@ ].@@ num=@@ stu[k].@@ num; stu[k].@@ num=@@ x; } elseif(@@ stu[k].@@ zongfen@@ ==@@ stu@@ [k+1@@ ].@@ zongfen@@ &&@@ stu[k].@@ num@@ <@@ stu@@ [k+1@@ ].@@ num) { z=@@ stu@@ [k+1@@ ].@@ zongfen; stu@@ [k+1@@ ].@@ zongfen@@ =stu@@ [k].@@ zongfen; stu[k].@@ zongfen@@ =@@ z; x=@@ stu@@ [k+1@@ ].@@ num; stu@@ [k+1@@ ].@@ num=@@ stu[k].@@ num; stu[k].@@ num=@@ x; } else@@ ; } } for(j=0;j<3;j++) { printf("%d%d\n",stu[@@ n-1@@ -j@@ ].num,stu[@@ n-1@@ -j@@ ].@@ zongfen@@ ); } getchar(); getchar(); }  
c -1
h -1
0

intmain(){ double@@ x; intn,i,@@ m,@@ y; char@@ lian1@@ [@@ LEN@@ ],@@ lian2@@ [@@ LEN@@ ]; scanf("%lf",&x); scanf("%s",@@ lian1@@ ); scanf("%s",@@ lian2@@ ); n=strlen(@@ lian1@@ ); y@@ =strlen(@@ lian2@@ ); if(y@@ !=@@ n@@ ){@@ printf("error"); return0; } for(i=0;i<n;i++){ if(!@@ (@@ lian1@@ [i]=='A'||@@ lian1@@ [i]=='T'||@@ lian1@@ [i]=='C'||@@ lian1@@ [i]=='G'||@@ lian2@@ [i]=='A'||@@ lian2@@ [i]=='T'||@@ lian2@@ [i]=='C'||@@ lian2@@ [i]=='@@ G')){ printf("error"); return0;} } m=0; for(i=0;i<n;i++){ if(@@ lian1@@ [i]==@@ lian2@@ [i]){ m++; } } if(m@@ *1.0/@@ n@@ >@@ x){ printf("yes"); }@@ elseif(m@@ *1.0/@@ n@@ <=@@ x){ printf("no"); } return0; }  
c -1
h -1
intmain(){ int@@ sz1@@ [1000]; inth@@ ,j@@ =0,@@ k=0,@@ i,n,@@ mj@@ ,@@ a@@ =-1,@@ b@@ =-1,@@ c=0,@@ d; scanf("%d",&n); for(h=0;h@@ <n;@@ h@@ ++){ k=0; for(i=0;i<n;i++){ if(a@@ <0@@ ){ c@@ ++;} scanf("%d",&@@ sz1@@ [i]); if(@@ sz1@@ [i]@@ ==0){ a@@ =i;@@ b=@@ h@@ ;} } for(i=0;i<n;i++){ sz1@@ [i]@@ =0;} } d=@@ c@@ %@@ n; mj@@ =(@@ b-@@ d@@ )@@ *(a@@ -@@ d); printf("%d\n",@@ mj@@ ); return0; }  
c -1
h -1
0

intmain() { chara[@@ 500@@ ]={'@@ 0'@@ },@@ b[@@ 500@@ ]={'@@ 0'@@ }; doublen,@@ flag=0; inti,j,k,@@ check@@ ; scanf("%lf",&n); scanf("%s",a); scanf("%s",b); int@@ la@@ =strlen(@@ a)@@ ,lb@@ =strlen(b); if(@@ la@@ !=@@ lb@@ ){@@ printf("error@@ \n@@ ");@@ return0;} for(i=0;i<@@ la;i++) { if(!@@ (@@ a[i]=='@@ A'||a[i]=='T'||a[i]=='@@ C'||@@ a[i]=='@@ G'||@@ b[i]=='@@ A'||@@ b[i]=='@@ T'||@@ b[i]=='@@ C'||@@ b[i]=='@@ G')) { printf("error\n"); return0; } } for(i=0;i<@@ la;i++) { if(a[i]==b[i]@@ )@@ flag@@ ++; } flag@@ =(double)@@ flag@@ /@@ la@@ ; if(flag@@ >@@ n)@@ printf("yes\n"); if(flag@@ <=@@ n)@@ printf("no\n"); return0; }  
c -1
h -1
intmain(){ intn,i,j,k,@@ p=0,@@ q=0; int@@ mianji@@ ; scanf("%d\n",&n); int@@ shu@@ [n]; int@@ ge@@ [n]; for(i=0;i<n;i++){ k=0; for(j=0;j<n;j++){ scanf("%d",&@@ shu@@ [j]); if(@@ shu@@ [j]@@ ==0) k++; } ge@@ [i]=@@ k; if(@@ ge@@ [i]>@@ p) p=@@ ge@@ [i]; for(j=0;j<n;j++){ if(@@ shu@@ [j]@@ ==0){ q++; break; } } } mianji@@ =(@@ p@@ -2)*(@@ q@@ -2); printf("%d\n",@@ mianji@@ ); return0; }  
c -1
h -1
0

inta[@@ 10000@@ ],b[@@ 10000],@@ la@@ ,lb@@ ,@@ c[@@ 20000]; void@@ get@@ (); void@@ array@@ (); voidcombine@@ (); voidout@@ (); intmain() { get@@ (); array@@ (); combine@@ (); out@@ (); return0; } void@@ get@@ () { cin>>@@ la@@ >>@@ lb@@ ; for(inti=0;i<@@ la;i++) { cin>>a[i]; } for(inti=0;i<@@ lb@@ ;i++) { cin>>b[i]; } } void@@ array@@ () { int@@ v@@ ; for(inti=0;i<@@ la@@ -1;i++) { for(intj=0;j<@@ la@@ -i-1;j++) { if(a[j]>a[j+1]) { v@@ =@@ a[j]; a[j]=a[j+1]; a[j+1]=@@ v@@ ; } } } for(inti=0;i<@@ lb@@ -1;i++) { for(intj=0;j<@@ lb@@ -i-1;j++) { if(b[j]>b[j+1]) { v@@ =@@ b[j]; b[j]=b[j+1]; b[j+1]=@@ v@@ ; } } } } voidcombine@@ () { for(inti=0;i<@@ la;i++) { c[i]=a[i]; } for(inti=0;i<@@ lb@@ ;i++) { c[@@ la@@ +i]=b[i]; } } voidout@@ () { for(inti=0;i<@@ la@@ +lb@@ ;i++) { if(i==0) cout<<@@ c[i]; else cout<<''<<@@ c[i]; } }  
c -1
h -1
intmain() { int@@ A[@@ 20000],@@ B@@ [@@ 20000],@@ n,@@ i,j,k; int@@ flag; intnumber@@ =0; j=0; scanf("%d",&n); for(i=0;i<n;i++) { scanf("%d",&@@ A@@ [i]); } for(i=0;i<n;i++) { flag=0; for(k=0;k<i;k++) { if(A@@ [k]==@@ A@@ [i]) { flag=1; break; } } if(flag==0) { B@@ [j]=@@ A@@ [i]; number=@@ number@@ +1; j=j+1; } } for(j=0;j<@@ number@@ ;j++) { if(j@@ ==0) { printf("%d",@@ B@@ [j]); } else { printf("%d",@@ B@@ [j]); } } return0; }  
c -1
h -1
0

intmain() { introw,col,@@ a[100][100],@@ i,j,@@ max,@@ s; scanf("%d%d",&row,&col); max=@@ row; if(max@@ <col@@ )max=@@ col; for(i=0;i<@@ max@@ ;i++) { for(j=0;j<@@ max@@ ;j++) { a[i][j]@@ =-1; } } for(i=0;i<row;i++) { for(j=0;j<col;j++) { scanf("%d",&a[i][j]); } } if(max@@ ==1)@@ printf("%d",@@ a[0][0]@@ ); else{ i=0; j=0; while(j<@@ max) { if(a[i][j]@@ !=@@ -1)@@ printf("%d\n",a[i][j]); if(j@@ ==0){ j@@ =i+1; i=0; } else{ i=i+1; j=j-1; } } j=@@ max@@ -1; i=1; while(i@@ !=@@ max@@ -1@@ ||j@@ !=@@ max@@ -1) { if(a[i][j]@@ !=@@ -1)@@ printf("%d\n",a[i][j]); if(i==@@ max@@ -1){ i@@ =j+1; j=@@ max@@ -1; } else{ i=i+1; j=j-1; } } if(a[@@ max@@ -1@@ ][@@ max@@ -1]@@ !=@@ -1)@@ printf("%d\n",a[@@ max@@ -1@@ ][@@ max@@ -1]@@ );} return0; }  
c -1
h -1
void@@ sheng@@ (int*@@ a,int@@ n) { inti,j,@@ b; for(i=0;i<n;i++) { for(j=i;j<@@ n;j++) { if(a[j]@@ <@@ a[i]) { b=@@ a[i]; a[i]=a[j]; a[j]=@@ b; } } } } int@@ hebing@@ (int*a,@@ intn,@@ int*@@ b,int@@ m,@@ int*@@ c) { inti; for(i=0;i<n;i++) c[i]=a[i]; for(i=n@@ ;i<@@ m+n;i++) c[i]=b[i-@@ n]; return@@ *@@ c; } intmain() { intn,m,@@ i; scanf("%d%d",&n,&m); int*@@ a=@@ (int*)malloc(sizeof(int)*n); int*@@ b=@@ (int*)malloc(sizeof(int)@@ *@@ m); int*@@ c=@@ (int*)malloc(sizeof(int)@@ *(@@ m+@@ n@@ )); for(i=0;i<n;i++) scanf("%d",&a[i]); for(i=0;i<m;i++) scanf("%d",&b[i]); sheng@@ (a,@@ n); sheng@@ (b,@@ m); hebing@@ (a,n,@@ b,@@ m,@@ c); printf("%d",c@@ [0]); for(i=1;i<@@ m+n;i++) printf("%d",c[i]); }  
c -1
h -1
0

structbook { intnum; char@@ zhuzhe@@ [26]; int@@ let@@ ; }; structbook@@ shu@@ [1000]; int@@ judge@@ (char@@ a,@@ char@@ b) { if(a==@@ b)@@ return(1); else@@ return(0); } voidmain() { intn,i,j,@@ y,@@ zhi@@ ,@@ num; char@@ writer1@@ [26]={0}; char@@ writer2@@ [26]={0}; for(i=0;i<26;i++) writer2@@ [i]@@ =i+65; scanf("%d",&n); for(i=0;i<n;i++) {scanf("%d",&@@ shu[i].@@ num); gets(@@ shu[i].@@ zhuzhe@@ ); } for(i=0;i<n;i++) for(j=0;@@ shu[i].@@ zhuzhe@@ [j]!='\0';j++) for(y=0;y@@ <26@@ ;y@@ ++) if(@@ writer2@@ [y@@ ]==@@ shu[i].@@ zhuzhe@@ [j]@@ )@@ writer1@@ [y@@ ]=@@ writer1@@ [y@@ ]+1; zhi@@ =0; num=0; for(i=0;i<26;i++) if(@@ writer1@@ [i]>@@ zhi@@ ){@@ zhi@@ =@@ writer1@@ [i];@@ num@@ =i;} for(i=0;i<n;i++) for(j=0;@@ shu[i].@@ zhuzhe@@ [j]!='\0';j++) if(@@ judge@@ (@@ shu[i].@@ zhuzhe@@ [j],@@ writer2@@ [@@ num@@ ])@@ ==1)@@ shu[i].@@ let@@ =1; printf("%c\n",@@ writer2@@ [@@ num@@ ]); printf("%d\n",@@ writer1@@ [@@ num@@ ]); for(i=0;i<n-1;i++) if(@@ shu[i].@@ let@@ ==1)@@ printf("%d\n",@@ shu[i].@@ num); if(@@ shu@@ [n-1@@ ].@@ let@@ ==1)@@ printf("%d",@@ shu@@ [n-1@@ ].@@ num); }  
c -1
h -1
intmain() { intyear,month,@@ date; intsum=0; scanf("%d%d%d",&year,&month,&@@ date@@ ); inttemp; if(year%@@ 4@@ !=0) { temp=@@ 28; } elseif(@@ year%@@ 100!=0) { temp=@@ 29; } elseif(@@ year%@@ 400@@ !=0) { temp=@@ 28; } else { temp=@@ 29; } inta[@@ 12]={31,@@ temp@@ ,31,30,31,30,31,31,30,31,30,31}; inti; for(i=0;i<month-1;i++) { sum+=@@ a[i]; } sum+=@@ date; printf("%d",sum); return0; }  
c -1
h -1
0

intmain(){ int@@ col,@@ row,@@ array[100][100]; inti,j,@@ temp1@@ ,@@ temp2@@ ; cin>>row>>col; for(i=0;i<row;i++){ for(j=0;j<col;j++){ cin>>array[i][j]; } } for(i=0;i<@@ row+col@@ -1;i++){ temp1@@ =(@@ i@@ -col@@ +1@@ >0@@ )@@ ?@@ (i@@ -col@@ +1)@@ :@@ 0@@ ; temp2@@ =(@@ i@@ -@@ row@@ +1@@ >0@@ )@@ ?@@ (@@ row-1)@@ :@@ i; for(j=@@ temp1@@ ;j<=@@ temp2@@ ;j++){ cout<<@@ *(*(@@ array@@ +j)@@ +i-j@@ )<<endl; } } return0; }  
c -1
h -1
intmain() { inti,@@ t=0,@@ s=0; float@@ n; chara[@@ 600@@ ],b[@@ 600]; cin>>n; cin>>a; cin>>@@ b; if(strlen(a)!=strlen(b@@ )) cout<<"@@ error@@ "; else { for(i=0;i<@@ strlen(a)@@ ;i++) { if((a[i]!='@@ A'&&a[i]!='@@ C'&&a[i]!='@@ T'&&a[i]!='@@ G')||(@@ b[i]!='A'&&b[i]!='@@ C'&&b[i]!='@@ T'&&b[i]!='@@ G')) t++; } if(t@@ >0) cout<<"@@ error@@ "<<endl; else { for(i=0;i<@@ strlen(a)@@ ;i++) { if(a[i]==b[i]) s++; } if((@@ float)@@ s/@@ strlen(a)@@ >n) cout<<"yes"; else cout<<"no"; } } return0; }  
c -1
h -1
0

intmain() { intn,i,j,@@ k=0,@@ t=0,@@ y@@ [100],@@ x,@@ a[100@@ ]={0},@@ b[100@@ ]; chars@@ [100][@@ 20],@@ temp@@ [@@ 20],@@ s1@@ [100][@@ 20],@@ s2@@ [100][@@ 20]; scanf("%d",&n); for(i=0;i<n;i++) { scanf("%s%d",@@ s[i]@@ ,&@@ y@@ [i]); } for(i=0;i<n;i++) { if(y@@ [i]@@ >=60) { strcpy(@@ s1@@ [k],@@ s[i]); a[k]=@@ y@@ [i]; k++; } } for(i=0;i<@@ k-1;i++) for(j=0;j<@@ k@@ -i-1;j++) if(a[j]@@ <@@ a[j+1@@ ]) { x=@@ a[j]; a[j]=a[j+1]; a[j+1]=@@ x; strcpy(@@ temp,@@ s1@@ [j]); strcpy(@@ s1@@ [j],@@ s1@@ [j+1]); strcpy(@@ s1@@ [j+1],@@ temp); } for(i=0;i<k;i++) printf("%s\n",@@ s1@@ [i],@@ a[i]); for(i=0;i<n;i++) { if(y@@ [i]@@ <60) { strcpy(@@ s2@@ [t@@ ],@@ s[i]); t++; } } for(i=0;i<t;i++) printf("%s\n",@@ s2@@ [i]); return0; }  
c -1
h -1
intmain() { intn,i,j,@@ x,y; structstudent { int@@ score@@ ,@@ num; } a[@@ 100000]; cin>>n; for(i=1;i<=n@@ ;i++){@@ cin>>@@ a[i].@@ num@@ >>@@ x@@ >>@@ y@@ ;@@ a[i].@@ score@@ =@@ x+@@ y@@ ;} a[0]=@@ a[1]; for(i=1;i<=@@ 3;i++) for(j=i+1;j<=n;j++) if(a[i].@@ score@@ <@@ a[j].@@ score@@ ){@@ a[0]=@@ a[i];a[i]=@@ a[j];a[j]=@@ a[0]@@ ;} cout<<@@ a[1].@@ num@@ <<""<<@@ a[1].@@ score@@ <<endl@@ <<@@ a[2].@@ num@@ <<""<<@@ a[2].@@ score@@ <<endl@@ <<@@ a[3].@@ num@@ <<""<<@@ a[3].@@ score; }  
c -1
h -1
0

intmain() { chars[256],@@ sub[256],@@ rep@@ [256]; inti,j,k; int@@ lens@@ ,@@ lensub@@ ; gets(@@ s@@ ),@@ gets(@@ sub@@ ),@@ gets(@@ rep); lens@@ =strlen(s); lensub@@ =strlen(@@ sub); for(i=0;i<=@@ lens@@ -@@ lensub@@ ;i++){ for(j=0;j<@@ lensub@@ ;j++) if(s@@ [i+j]!=@@ sub@@ [j]) break; if(j==@@ lensub@@ ){ for(k=0;k<j@@ ;k++) s@@ [i+k@@ ]=@@ '@@ @@@ '; i@@ +=@@ j@@ -1; break; } } for(i=0;i<@@ lens@@ ;i++) if(s@@ [i]=='@@ @@@ '){ while(@@ s@@ [i]=='@@ @@@ ')@@ i++; i--; printf("%s",@@ rep); }else{ printf("%c",s[i]); } return0; }  
c -1
h -1
intmain() { inti,j,n,@@ flag; inta[@@ 100000]; scanf("%d\n",&n); scanf("%d",&a[0]); for(i=1;i<n;i++) { scanf("%d",&a[i]); } printf("%d",a[0]); for(i=1;i<n;i++) { flag=0; for(j=0;j<i;j++) { if(a[j]==a[i]) flag=1; } if(flag==0) printf("%d",a[i]); } return0; }  
c -1
h -1
0

voidmain() { inti,j,n,@@ s,@@ k,@@ d; inta[@@ 26@@ ],b[@@ 26]; scanf("%d",&n); for(i=1;i<=n;i++) { scanf("%d",&a[i]); b[i]=0; } b[@@ n@@ ]=1; for(i=n-1@@ ;i>=1;i--) { for(j=i+1;j<=n;j++) if((a[j]@@ <=@@ a[i]@@ )&&(@@ b[j]@@ >@@ b[i]@@ )) b[i]=@@ b[j]; b[i]=@@ b[i]@@ +1; } s=0; for(i=1;i<=n;i++) { if(s@@ <@@ b[i]) s=@@ b[i]; } printf("%d",s); }  
c -1
h -1
int@@ check@@ (int@@ b[],int@@ len@@ ,int@@ x) { inti,@@ flag=1; for(i=0;i<len;i++) { if(b[i]==@@ x) { flag=0; return0; break; } } if(flag) return1; } intmain() { intj,@@ i,@@ n; inta[@@ 20100@@ ],b[@@ 20100@@ ]; scanf("%d",&n); for(i=0;i<n;i++) scanf("%d",&a[i]); printf("%d",a[0]); b[0]=@@ a[0]; j=1; for(i=1;i<n;i++) { if(@@ check@@ (b,@@ j,@@ a[i]@@ )) { printf("%d",a[i]); b[j]=@@ a[i]; j++; } } return0; }  
c -1
h -1
0

main() { intn,@@ t,@@ i,j,@@ h,@@ k,@@ b[@@ 25],@@ a[@@ 25]; k=1; t=@@ n-1; scanf("%d",&n); for(i=0;i<n;i++) scanf("%d",&a[i]); for(i=0;i<n;i++) b[i]=1; for(i=n-2;i>=0;i--) { for(j=i+1;j<n;j++) { if(a[i]>=a[j]) { t@@ =j; b[i]=b[j]+1; for(h@@ =j@@ ;@@ h@@ <n;@@ h++) { if(a[i]>=@@ a[h@@ ]@@ &&@@ b[@@ h@@ ]>@@ b[t@@ ]) { b[i]=@@ b[@@ h@@ ]+1; t=@@ h; } } if(k@@ <@@ b[i]) { k=@@ b[i]; } break; } } } printf("%d",k); }  
c -1
h -1
intmain() { intn,a[@@ 30000@@ ],@@ i,j,k,@@ l,@@ t=1; scanf("%d",&n); for(l=0;l<n;l++) scanf("%d",&@@ a[l@@ ]); for(i=0;i<n;i++) { for(j=i+1;j<@@ n;@@ ) { if(a[i]==a[j]) { for(k=j@@ ;k<@@ n-1;k++) {@@ a[k]=a[k@@ +1@@ ];} n=@@ n-1; } if(a[i]!=@@ a[j])@@ j++; } } for(i=0;i<n;i++) if(t@@ ){ printf("%d",@@ a[i]@@ );@@ t@@ =0;} else@@ printf("%d",a[i]); return0; }  
c -1
h -1
0

int@@ height@@ [26]; intx; int@@ cmp@@ (inta,intb) { return(@@ a@@ >b@@ ?@@ a@@ :@@ b); } intmax@@ (inta,intb) { int@@ cmp@@ (inta,int@@ b); if(b==@@ x) { if(a@@ >=@@ height@@ [x@@ ])@@ return(1); else@@ return(0); } else { if(a<@@ height@@ [b@@ ])@@ return(@@ max@@ (a,@@ b@@ +1@@ )); else@@ return(@@ cmp@@ (@@ max@@ (a,@@ b@@ +1)@@ ,@@ (@@ 1@@ +@@ max(@@ height@@ [b@@ ],@@ b@@ +1)@@ )@@ )); } } main() { intmax@@ (int,int); inti; scanf("%d",&x); for(i=0;i<x;i++) { scanf("%d",&@@ height@@ [i]); } x@@ --; printf("%d",@@ max(@@ 1000000@@ ,@@ 0@@ )); }  
c -1
h -1
intmain() { inta[@@ 101][@@ 16@@ ],b[100@@ ]={0},@@ c[@@ 101],@@ k,i,j,@@ l,@@ m; for(i=1;@@ 1@@ ;i++) { scanf("%d",&a[i]@@ [1]); if(a[i]@@ [1@@ ]==@@ (@@ -1)) { i--; break; } else for(j=2@@ ;@@ 1@@ ;j++) { scanf("%d",&a[i][j]); if(a[i][j]==0) { j=j-1; break; } } c[i]=@@ j; } for(k=1;k<=@@ i;k++) { for(l=1;l@@ <=@@ c@@ [k]@@ ;l++) { for(m=1;m@@ <=@@ c@@ [k]@@ ;m++) { if(a[k@@ ][m@@ ]@@ /@@ a[k@@ ][l@@ ]==@@ 2@@ &&@@ a[k@@ ][m@@ ]@@ %@@ a[k@@ ][l@@ ]==0) b[k]=@@ b[k@@ ]+1; else b[k]=@@ b[k@@ ]; } } printf("%d\n",@@ b[k@@ ]); } return0; }  
c -1
h -1
0

intmain(void) { charstring@@ [256]; scanf("%s",@@ string); char@@ substring@@ [256]; scanf("%s",@@ substring); char@@ replacement@@ [256]; scanf("%s",@@ replacement); int@@ Lsub@@ =0; for(inti@@ =0;@@ ;i++) { if(@@ substring@@ [i]==@@ '\0') { Lsub@@ =i; break; } } int@@ Lrep@@ =0; for(inti@@ =0;@@ ;i++) { if(@@ replacement@@ [i]==@@ '\0') { Lrep@@ =i; break; } } int@@ pBegin@@ =@@ check@@ ,@@ judge@@ =1; for(inti=0;i<@@ 256@@ -@@ Lsub@@ ;i++) { judge@@ =1; for(intj=i@@ ;j<@@ i+@@ Lsub@@ ;j++) { if(string@@ [j]@@ -@@ substring@@ [j-i@@ ]!=0) { judge@@ =0; break; } if(j@@ -i@@ ==@@ Lsub@@ -1) { break; } } if(@@ judge@@ ==1) { pBegin@@ =i; break; } } if(@@ pBegin@@ ==@@ check@@ ) { printf("%s",@@ string); } else { char@@ Ans@@ [@@ 512@@ ]; for(inti=0;i<@@ pBegin@@ ;i++) { Ans@@ [i]=@@ string@@ [i]; } for(inti=@@ pBegin@@ ;i<@@ pBegin@@ +@@ Lrep@@ ;i++) { Ans@@ [i]=@@ replacement@@ [i-@@ pBegin@@ ]; } for(inti=@@ pBegin@@ +@@ Lrep@@ ;@@ ;i++) { Ans@@ [i]=@@ string@@ [i-@@ (@@ pBegin@@ +@@ Lrep@@ )+@@ pBegin@@ +@@ Lsub@@ ]; if(@@ Ans@@ [i]==@@ '\0') { break; } } printf("%s",@@ Ans@@ ); } return0; }  
c -1
h -1
intmain(intargc,char*argv[]) { inta[100@@ ],i,j,@@ num=0,@@ total=0; while(1){ num=0; while(1){ scanf("%d",&a[@@ num@@ ]); if(a[@@ num@@ ]@@ ==0)break; if(a[@@ num@@ ]==@@ -1)@@ return0; num@@ ++;} total=0; for(i=0;i<@@ num@@ ;i++){ for(j=0;j<@@ num@@ ;j++){ if(a[j]==2*@@ a[i])@@ total@@ ++;@@ }} printf("%d\n",@@ total@@ );} return0; }  
c -1
h -1
0

int@@ n1,n2; int*@@ p1; int*@@ p2; int*@@ p3; main() { scanf("%d%d",&n1,&n2); p1=@@ (int*)malloc(@@ n1@@ *sizeof(int)); p2=@@ (int*)malloc(@@ n2@@ *sizeof(int)); for(intk=0;k<@@ n1@@ ;k++) scanf("%d",&@@ p1@@ [k]); for(intk=0;k<@@ n2@@ ;k++) scanf("%d",&@@ p2@@ [k]); for(int@@ k=@@ n1@@ -1@@ ;k@@ >0@@ ;k--) { for(inti=0;i<k;i++) { if(@@ p1@@ [i]>@@ p1@@ [i+1]) { intt; t@@ =p1@@ [i]; p1@@ [i]=@@ p1@@ [i+1]; p1@@ [i+1]=@@ t; } } } for(int@@ k=@@ n2@@ -1@@ ;k@@ >0@@ ;k--) { for(inti=0;i<k;i++) { if(@@ p2@@ [i]>@@ p2@@ [i+1]) { intt; t=@@ p2@@ [i]; p2@@ [i]=@@ p2@@ [i+1]; p2@@ [i+1]=@@ t; } } } p3=@@ (int*)malloc(@@ (@@ n1+n2@@ )@@ *sizeof(int)); for(intk=0;k<@@ n1@@ ;k++) p3@@ [k]=@@ p1@@ [k]; for(inti=@@ n1@@ ;i<@@ n1+@@ n2;i++) p3@@ [i]=@@ p2@@ [i-@@ n1@@ ]; intc; for(c=0;c@@ <@@ n1+n2@@ ;c@@ ++) { if(c@@ ==0) printf("%d",@@ p3@@ [0]); else@@ printf("%d",@@ p3@@ [c@@ ]); } }  
c -1
h -1
intmain(intargc,char*argv[]) { intn; scanf("%d",&n); structstudent{ inta,b,c; }@@ student_1@@ ; int@@ x,@@ i=0; int@@ a1@@ =0,@@ a2@@ =0,@@ b1@@ =0,@@ b2@@ =0,@@ c1@@ =0,@@ c2@@ =0; while(i<@@ n){ scanf("%d%d%d",&@@ student_1@@ .@@ a,&@@ student_1@@ .@@ b@@ ,&@@ student_1@@ .@@ c); x=@@ student_1@@ .@@ b+@@ student_1@@ .@@ c; if(x>@@ a2@@ ){ c1@@ =@@ b1@@ ; c2@@ =@@ b2@@ ; b1@@ =@@ a1@@ ; b2@@ =@@ a2@@ ; a1@@ =@@ student_1@@ .@@ a; a2@@ =@@ x; } elseif(x@@ ==@@ a2@@ ){ if(x>@@ b2@@ ) { c1@@ =@@ b1@@ ; c2@@ =@@ b2@@ ; b1@@ =@@ student_1@@ .@@ a; b2@@ =@@ x; } elseif(x@@ >@@ c2@@ ) { c1@@ =@@ student_1@@ .@@ a; c2@@ =@@ x; } } elseif(x@@ >@@ b2@@ ){ c1@@ =@@ b1@@ ; c2@@ =@@ b2@@ ; b1@@ =@@ student_1@@ .@@ a; b2@@ =@@ x; } elseif(x@@ ==@@ b2@@ ){ if(x>@@ c2@@ ) { c1@@ =@@ student_1@@ .@@ a; c2@@ =@@ x; } } elseif(x@@ >@@ c2@@ ){ c1@@ =@@ student_1@@ .@@ a; c2@@ =@@ x; } i++; } printf("%d%d\n",@@ a1,@@ a2@@ ); printf("%d%d\n",@@ b1,@@ b2@@ ); printf("%d%d\n",@@ c1@@ ,@@ c2@@ ); return0; }  
c -1
h -1
0

intmain(intargc,char*argv[]) { intm,i,j,@@ len,@@ max; int@@ id@@ [@@ 1000],b[@@ 26]={0}; chara[100@@ ][@@ 27@@ ],@@ name@@ ; scanf("%d",&m); for(i=0;i<m;i++){ scanf("%d%s",&@@ id@@ [i],@@ a[i]); len=strlen(@@ a[i]); for(j=0;j<len@@ ;j++){ b[@@ a[i][j]@@ -'A']++; } } max=@@ b[0]@@ ;@@ name@@ ='A'; for(j=1;j<@@ 26@@ ;j++){ if(b[j]@@ >max){ max=@@ b[j]; name@@ =j@@ +'A'@@ ; } } printf("%c\n%d\n",@@ name@@ ,max); for(i=0;i<m;i++){ len=strlen(@@ a[i]); for(j=0;j<len@@ ;j++){ if(a[i][j]==@@ name@@ ) {@@ strcpy(@@ a[i]@@ ,"@@ shuchu@@ "); break;} } } for(i=0;i<m;i++){ if(strcmp(@@ a[i]@@ ,"@@ shuchu@@ "@@ )@@ ==0) printf("%d\n",@@ id[i]); } return0; }  
c -1
h -1
intmain() { intn=0,@@ t=0,@@ i,j,@@ x; intsz[@@ 16]; for(;@@ ;@@ ){ for(i=0;i<16@@ ;i++){ scanf("%d",&sz[i]); if(sz[i]@@ ==0||@@ sz[0]@@ ==-1)break; n=n+1; } for(i=0;i<n;i++){ for(j=0;j<n;j++){ if(sz[i]@@ -2*@@ sz[j]@@ ==0) t=t+1; else@@ ; } } if(sz@@ [0]@@ ==-1)break; printf("%d\n",t); t=0; n=0; } return0; }  
c -1
h -1
0

intmain() { inta[100][100],@@ col,@@ row,@@ t,@@ i,j; cin>>row>>col; if(row@@ >@@ col) t=@@ row; else@@ t=@@ col; for(i=1;i<=@@ row;i++) { for(j=1;j<=col;j++) { cin>>a[i][j]; } } for(i=2;i<=@@ 2*@@ t;i++) { for(j=1;j<i;j++) { if(j@@ <=row@@ &&i@@ -j@@ <=col@@ ) { cout<<@@ a[j][i-j@@ ]<<endl; } } } return0; }  
c -1
h -1
intmain(intargc,char*argv[]) { inta,b,c; scanf("%d%d%d",&a,&b,&c); if((@@ a%4==0&&a%100!=0@@ )||(@@ a%400==0)) { intm[@@ 12]={31,29,31,30,31,30,31,31,30,31,30,31}; inti; intk=0; for(i=0;i<(@@ b@@ -1);i++) { k=k@@ +m@@ [i]; } k=k@@ +c; printf("%d",k); } else { intm[@@ 12]={31,28,31,30,31,30,31,31,30,31,30,31}; inti; intk=0; for(i=0;i<(@@ b@@ -1);i++) { k=k@@ +m@@ [i]; } k=k@@ +c; printf("%d",k); } return0; }  
c -1
h -1
0

intmain(){ inta[100][100],@@ sum@@ [100]; intk,m,n,i,j,@@ t; scanf("%d",&k); for(t=0;t@@ <k;@@ t++){ scanf("%d%d",&m,&n); sum[@@ t@@ ]=0; for(i=0;i<m;i++){ for(j=0;j<n;j++){ scanf("%d",&a[i][j]); } } for(i=0;i<m;i++){ sum[@@ t@@ ]+=@@ a[i][0]+@@ a[i][n-1]; } for(j=0;j<n;j++){ sum[@@ t@@ ]+=@@ a[0]@@ [j]+@@ a[m-1][j]; } sum[@@ t@@ ]@@ -=@@ a[0][0]@@ +@@ a[0][@@ n-1@@ ]+@@ a[@@ m-1@@ ][0]+@@ a[m-1][@@ n-1]; } for(t=0;t@@ <k;@@ t++){ if(t@@ !=@@ k@@ -1){ printf("%d\n",@@ sum[@@ t@@ ]); } else{ printf("%d",@@ sum[@@ t@@ ]); } } return0; }  
c -1
h -1
intmain(intargc,char*argv[]) { intyear,month,@@ date; ints=0; inti; scanf("%d%d%d",&year,&month,&@@ date@@ ); if((@@ year%@@ 400==0)||(@@ (@@ year%100!=0@@ )@@ &@@ (@@ year%@@ 4@@ ==0)@@ )) { int@@ n[@@ 12]={31,29,31,30,31,30,31,31,30,31,30,31}; for(i=0;@@ (i@@ +1)@@ <@@ month;i++) { s+=@@ n[i]; } s=s+@@ date; } else { int@@ n[@@ 12]={31,28,31,30,31,30,31,31,30,31,30,31}; for(i=0;@@ (i@@ +1)@@ <@@ month;i++) { s+=@@ n[i]; } s=s+@@ date; } printf("%d\n",s); return0; }  
c -1
h -1
0

intmain() { introw,col,@@ i,j,@@ s@@ ,*@@ p=@@ NULL@@ ; cin>>row>>col; inta[100][100]; for(i=0;i<row;i++) for(j=0;j<col;j++) { cin>>*(*(a+i)+j); } for(s=0;s@@ <=@@ row+col-2@@ ;s++) { for(i=0;i<row;i++) if(s@@ -i@@ <col@@ &&@@ s@@ -i@@ >=0) { cout<<@@ *(*(a+i)@@ +@@ s@@ -i@@ )<<endl; } } return0; }  
c -1
h -1
intmain() { charstr[256],@@ substr@@ [256],@@ replace@@ [256]; cin>>@@ str@@ >>@@ substr@@ >>@@ replace@@ ; int@@ lenstr@@ =strlen(@@ str@@ )@@ , lensubstr@@ =strlen(@@ substr@@ )@@ , lenreplace@@ =strlen(@@ replace); inti,j; int@@ flag=0; int@@ pos@@ ; for(i=0;i<=@@ lenstr@@ -@@ lensubstr@@ ;i++) { for(j=0;j<@@ lensubstr@@ ;j++) { if(str@@ [i+j]!=@@ substr@@ [j]) break; } if(j==@@ lensubstr@@ ) { pos@@ =i; flag=1; break; } } if(flag) { for(i=0;i<@@ pos@@ ;i++) cout<<str@@ [i]; cout<<@@ replace@@ ; cout<<(@@ str@@ +@@ pos@@ +@@ lensubstr@@ )<<endl; } else@@ cout<<str@@ <<endl; return0; }  
c -1
h -1
0

int@@ Factor@@ (int,int); intmain() { intn,a,@@ i; scanf("%d",&n); for(i=1;i<=n;i++) { scanf("%d",&a); printf("%d\n",@@ Factor@@ (a,@@ 2)); } return0; } int@@ Factor@@ (inta,int@@ p) { inti,j,@@ z=1; if(a<@@ p) z=0; else { for(i=@@ p@@ ;i<=a;i++) { if(a%i==0) { z@@ +=@@ Factor@@ (a/i,i); } } } return@@ z; }  
c -1
h -1
voidmain() { intn,k,i,j,@@ a[@@ 10000],@@ s; scanf("%d%d",&n,&k); for(i=0;i<n;i++) scanf("%d",&a[i]); for(i=0;i<n;i++) { s=0; for(j=0;j<n-i;j++) { s=@@ a[i]+a[j]; if(s@@ ==k) { printf("yes\n"); goto@@ mq@@ ; } } } mq@@ : if(s@@ !=@@ k) printf("no\n"); }  
c -1
h -1
0

intmain() {@@ intk,@@ x,@@ i,j,@@ sum; intm,n; inta[100][100@@ ],b[100]; scanf("%d",&k); for(x=0;x@@ <k;@@ x@@ ++){ sum=0; scanf("%d%d",&m,&n); if((@@ m@@ >=@@ 3)@@ &@@ (n@@ >=@@ 3@@ )) { for(i=0;i<m;i++){ for(j=0;j<n;j++){ scanf("%d",&a[i]@@ [j]@@ );} } for(i=0;i<m@@ ;i++){@@ sum+=@@ a[i][0]@@ ;} for(i=0;i<m@@ ;i++){@@ sum+=@@ a[i][@@ n-1@@ ];} for(j=0;j<n@@ ;j++){@@ sum+=@@ a[0]@@ [j]@@ ;} for(j=0;j<n@@ ;j++){@@ sum+=@@ a[m-1]@@ [j]@@ ;} sum=sum-@@ a[0][0]@@ -@@ a[@@ m-1][0]-@@ a[0][@@ n-1]-@@ a[m-1][@@ n-1]; b[@@ x@@ ]=@@ sum; } else {@@ for(i=0;i<m;i++){ for(j=0;j<n;j++) {@@ scanf("%d",&a[i][j]); sum=sum+@@ a[i][j]@@ ;} } b[@@ x@@ ]=@@ sum; } } for(x=0;x@@ <k;@@ x++) printf("%d\n",@@ b[@@ x@@ ]); return0; }  
c -1
h -1
voidmain() { intyear,@@ mon@@ ,@@ day,@@ i,@@ x; x=0; scanf("%d%d%d",&year,&@@ mon@@ ,&@@ day); for(i=1;i<@@ mon@@ ;i++) { if(i==1||i==3||i==5||i==7||i==8||i==10@@ ||i==@@ 12) { x=x+@@ 31; } if(i==@@ 4||i==6||i==9||i==11) { x=x+@@ 30; } if(i==@@ 2) { if(year%@@ 400==0) { x=x+@@ 29; } elseif(@@ year%@@ 4==0&&@@ year%@@ 100!=0) { x=x+@@ 29; } else { x=x+@@ 28; } } } x=x@@ +day; printf("%d",x); }  
c -1
h -1
0

intmain(){ double@@ c,@@ w@@ =0,@@ n=0; char@@ x[@@ 600@@ ],@@ y[@@ 600]; scanf("%lf",&@@ c); getchar(); gets(@@ x); gets(@@ y); if(strlen(@@ x@@ )==@@ strlen(@@ y@@ )){ for(intj=0;j<@@ strlen(@@ x)@@ ;j++){ if((x@@ [j]!='@@ A'&&@@ x@@ [j]!='@@ T'&&@@ x@@ [j]!='@@ G'&&@@ x@@ [j]!='@@ C')||(@@ y@@ [j]!='@@ A'&&@@ y@@ [j]!='@@ T'&&@@ y@@ [j]!='@@ G'&&@@ y@@ [j]!='@@ C')){ printf("error"); n=1; break; } if(x@@ [j]==@@ y@@ [j]){ w@@ ++; } } } else{ printf("error"); n=1; } if(n@@ ==0){ w=@@ w@@ /@@ strlen(@@ x); if(c@@ <@@ w@@ ){ printf("yes"); } else{ printf("no"); } } return0; }  
c -1
h -1
intmain() { intn,i,j,@@ s,@@ a1@@ =0,@@ b1@@ =0,@@ a2@@ =0,@@ b2@@ =0,@@ c[@@ 1001@@ ][@@ 1001]; scanf("%d",&n); for(i=0;i<n;i++) for(j=0;j<n;j++) scanf("%d",&@@ c@@ [i][j]); for(i=0;i<n;i++) { for(j=0;j<n;j++) { if(c@@ [i][j]==0) { a1@@ =i; b1@@ =j; break; } } if(@@ c[@@ a1@@ ][@@ b1@@ ]@@ ==0)break; } for(i=n-1;i>=0;i--) { for(j=n-1;j>=0;j--) { if(c@@ [i][j]==0) { a2@@ =i; b2@@ =j; break; } } if(@@ c[@@ a2@@ ][@@ b2@@ ]@@ ==0)break; } s=(@@ a2-a1@@ -1)*(@@ b2-b1@@ -1); printf("%d",s); return0; }  
c -1
h -1
0

intmain(){ double@@ xgl@@ ,@@ e; chara[501],b[501]; double@@ cd1@@ ,@@ cd2@@ ; inti; double@@ js@@ =0; scanf("%lf",&@@ xgl@@ ); scanf("%s%s",a,b); cd1@@ =strlen(a); cd2@@ =strlen(b); if(@@ cd1@@ !=@@ cd2@@ ){ printf("error"); return0; } for(i=0;i<@@ cd1@@ ;i++){ if((@@ a[i]=='@@ A'&&@@ b[i]=='@@ A')||(@@ a[i]=='@@ T'&&@@ b[i]=='@@ T')||(@@ a[i]=='@@ C'&&@@ b[i]=='@@ C')||(@@ a[i]=='@@ G'&&@@ b[i]=='@@ G')){ js@@ ++; }elseif(@@ (@@ a[i]!='@@ A'&&a[i]!='T'&&a[i]!='C'&&a[i]!='G')||(b[i]!='A'&&b[i]!='T'&&b[i]!='C'&&b[i]!='@@ G')){ printf("error"); return0; } } e=@@ js@@ /@@ cd1@@ ; if(e@@ >@@ xgl@@ ){ printf("yes"); }else{ printf("no"); } return0; }  
c -1
h -1
intmain() { long@@ inta[@@ 5@@ ],b[@@ 5@@ ],c[@@ 5@@ ],@@ ts@@ [5],@@ i; for(i=1;i<=@@ 5;i++) scanf("%ld@@ %ld@@ %ld@@ ",&@@ a[i],&@@ b[i]@@ ,&@@ c[i]); for(i=1;i<=@@ 5;i++) { switch(@@ b[i]) { case1:@@ ts@@ [i]=@@ c[i]@@ ;break; case2:@@ ts@@ [i]=@@ c[i]@@ +31;break; case3:@@ ts@@ [i]=@@ c[i]@@ +@@ 59@@ ;break; case4:@@ ts@@ [i]=@@ c[i]@@ +@@ 90@@ ;break; case5:@@ ts@@ [i]=@@ c[i]@@ +@@ 120@@ ;break; case6:@@ ts@@ [i]=@@ c[i]@@ +@@ 151@@ ;break; case7:@@ ts@@ [i]=@@ c[i]@@ +@@ 181@@ ;break; case8:@@ ts@@ [i]=@@ c[i]@@ +@@ 212@@ ;break; case9:@@ ts@@ [i]=@@ c[i]@@ +@@ 243@@ ;break; case10:@@ ts@@ [i]=@@ c[i]@@ +@@ 273@@ ;break; case11:@@ ts@@ [i]=@@ c[i]@@ +@@ 304@@ ;break; case12:@@ ts@@ [i]=@@ c[i]@@ +@@ 334@@ ;break; } if((@@ a[i]@@ %4==0&&@@ a[i]@@ %100!=0@@ ||@@ a[i]@@ %@@ 400==0)@@ &&@@ b[i]@@ >2) ts@@ [i]=@@ ts@@ [i]@@ +1; printf("%ld@@ ",@@ ts@@ [i]); printf("\n"); } return0; }  
c -1
h -1
0

void@@ rank1@@ (intarray[],int@@ num,int@@ k) { inta,@@ i,j; for(i=1;i<@@ num;i++) for(j=1;j<=@@ num@@ -i;j++) if(array@@ [j]>@@ array@@ [j+1]) { a=@@ array@@ [j]; array@@ [j]=@@ array@@ [j+1]; array@@ [j+1]=@@ a; } for(i=1;i<=@@ num;i++) { if(i==1) { if(k==@@ 2) cout<<'@@ '; cout<<array@@ [1]; } else cout<<'@@ '@@ <<@@ array@@ [i]; } } void@@ rank2@@ (int@@ num1@@ ,int@@ num2@@ ) { int@@ array1@@ [@@ 10000],@@ array2@@ [@@ 10000],@@ i; for(i=1;i<=@@ num1@@ ;i++) cin>>@@ array1@@ [i]; for(i=1;i<=@@ num2@@ ;i++) cin>>@@ array2@@ [i]; rank1@@ (@@ array1@@ ,@@ num1,@@ 1); rank1@@ (@@ array2@@ ,@@ num2@@ ,@@ 2); cout<<endl; } intmain() { int@@ num1,num2@@ ; cin>>@@ num1@@ >>@@ num2@@ ; rank2@@ (@@ num1,num2@@ ); return0; }  
c -1
h -1
intmain() { int@@ p[@@ 1000][1000]; intn,i,j,@@ h,@@ k,@@ m,@@ l,@@ a=0,b=0,@@ sum; scanf("%d",&n); for(i=0;i<n;i++) { for(j=0;j<n;j++) { scanf("%d",&@@ p@@ [i][j]); } } for(h=0;h@@ <n;@@ h++) { for(k=0;k<n;k++) { if(p@@ [h@@ ][k@@ ]@@ ==0)@@ a++; } if(a@@ !=0@@ )break; } for(m=0;m@@ <n;m++) { for(l=0;l<n;l++) { if(p@@ [l@@ ][m@@ ]@@ ==0)@@ b++; } if(b@@ !=0@@ )break; } sum=(@@ a@@ -2)*(@@ b@@ -2); printf("%d",sum); return0; }  
c -1
h -1
0

intmain(){ int@@ array@@ [100][100],@@ ROW@@ ,@@ COL@@ ,@@ i=0,@@ k=0,@@ j=0; scanf("%d%d",&@@ ROW@@ ,&@@ COL@@ ); for(i=0;i<@@ ROW@@ ;i++){ for(j=0;j<@@ COL@@ ;j++){ scanf("%d",&array@@ [i][j]); } } for(k=0;k<@@ COL@@ ;k++){ for(i=0,j@@ =k@@ ;i<@@ ROW@@ &&j>=0@@ ;i++,j@@ --){ printf("%d\n",array@@ [i][j]); } } for(k=1;k<@@ ROW@@ ;k++){ for(i=@@ k,@@ j=@@ COL@@ -1@@ ;i<@@ ROW@@ &&j>=0@@ ;i++,j@@ --){ printf("%d\n",array@@ [i][j]); } } return0; }  
c -1
h -1
intmain() { intn,i,j,@@ p@@ [100][100],@@ a,b,@@ c,d; memset(@@ p,@@ 1,@@ sizeof@@ (p@@ )); cin>>n; for(i=1;i<=n;i++) for(j=1;j<=n;j++) cin>>@@ *(*(p+i)+j); for(i=1;i<=n;i++) for(j=1;j<=n;j++) { if(@@ *(*(p+i)@@ +j)@@ ==0@@ && *(*(p+i)@@ +j@@ -1)@@ !=0@@ && *(*(p@@ +i@@ -1)@@ +j)@@ !=0@@ && *(*(p@@ +i@@ +1)@@ +j)@@ ==0@@ && *(*(p+i)@@ +j+1)@@ ==0) { a=i; b=j; } if(@@ *(*(p+i)@@ +j)@@ ==0@@ && *(*(p+i)@@ +j@@ -1)@@ ==0@@ && *(*(p@@ +i@@ -1)@@ +j)@@ !=0@@ && *(*(p@@ +i@@ +1)@@ +j)@@ ==0@@ && *(*(p+i)@@ +j+1)@@ !=0) c@@ =j; if(@@ *(*(p+i)@@ +j)@@ ==0@@ && *(*(p+i)@@ +j@@ -1)@@ !=0@@ && *(*(p@@ +i@@ -1)@@ +j)@@ ==0@@ && *(*(p@@ +i@@ +1)@@ +j)@@ !=0@@ && *(*(p+i)@@ +j+1)@@ ==0) d@@ =i; } cout<<(@@ d@@ -@@ a@@ -1)*(@@ c@@ -b@@ -1)@@ <<endl; return0; }  
c -1
h -1
0

intmain() { intn,m,@@ i,@@ l=0,@@ t@@ ,j; inta[@@ 1000]={0}; scanf("%d%d",&m,&n); for(i=0;i<m;i++) scanf("%d",&a[i]); for(i=0;i<m;i++){ t=@@ n-@@ a[i]; for(j=i+1;j<@@ m;j++) if(a[j]==@@ t@@ ){ printf("yes"); l++; break; } if(l@@ >0) break; } if(l@@ ==0) printf("no"); return0; }  
c -1
h -1
intmain(intargc,char*argv[]) { intdays@@ [12]={31,28,31,30,31,30,31,31,30,31,30,31}; inty,m,d,@@ sum=0,@@ i,@@ h; scanf("%d%d%d",&y,&m,&d); if(y%@@ 4==0&&y%100!=0@@ ||@@ y%400==0) { days@@ [1]=@@ 29; } else { days@@ [1]=@@ 28; } for(i=0;i<m-1;i++) { sum=sum+@@ days@@ [i]; } h=@@ sum@@ +d; printf("%d",@@ h); return0; }  
c -1
h -1
0

intmain() { inta[16],@@ i,@@ c=0,@@ e=0,@@ n,@@ l; while(1) { for(i=0;i<16;i++) { scanf("%d",&a[i]); e=@@ e@@ +1; if(a[i]@@ ==0||@@ a[i]@@ ==-1)break; } if(a[i]==@@ -1)break; for(l=0;l<@@ e@@ -1;@@ l++) for(n=@@ l@@ +1@@ ;n@@ <@@ e@@ -1;@@ n++) { if((@@ a[l@@ ]@@ /@@ a[n@@ ]==@@ 2@@ &&@@ a[l@@ ]@@ %@@ a[n@@ ]@@ ==0)||(@@ a[n@@ ]@@ /@@ a[l@@ ]==@@ 2@@ &&@@ a[n@@ ]@@ %@@ a[l@@ ]@@ ==0)) c=c@@ +1; } printf("%d\n",@@ c); inta[16@@ ]={0}; e=@@ c=0; } return0; }  
c -1
h -1
intmain() { intn,@@ e; e=0; inta[20000]; scanf("%d",&n); for(inti=0;i<n;i++){ scanf("%d",&a[i]); } for(inti=0;i<n;i++){ for(intj=i+1@@ ;j<@@ n;j++){ if(a[i]==a[j]@@ ){ a[j]=0; } } } for(inti=0;i<n;i++){ if(e@@ ==0&&@@ a[i]@@ !=0){ printf("%d",a[i]); e=1; } elseif(@@ e@@ ==1&&@@ a[i]@@ !=0){ printf("%d",a[i]); } } int@@ hou@@ ; scanf("%d",&@@ hou@@ ); return0; }  
c -1
h -1
0

intmain() { chars[@@ 257@@ ],@@ sub@@ [50@@ ],@@ rep@@ [50@@ ]; inti,j,@@ t,@@ k; int@@ len_s@@ ,@@ len_sub@@ ; cin.getline(@@ s,@@ 257@@ ); cin.getline(@@ sub,@@ 50@@ ); cin.getline(@@ rep@@ ,@@ 50@@ ); len_s@@ =strlen(s); len_sub@@ =strlen(@@ sub); for(t=0;t@@ <@@ len_s@@ ;t++) { if(s[@@ t@@ ]==@@ sub@@ [0]) { for(i=0;i<@@ len_sub@@ ;i++) { if(s[@@ t@@ +i@@ ]!=@@ sub@@ [i]) break; } if(i==@@ len_sub@@ ) break; } } if(t==@@ len_s@@ ) cout<<s<<endl; else { for(i=0;i<t;i++) cout<<@@ s[i]; cout<<@@ rep@@ ; for(k=0;@@ s@@ [i+@@ len_sub@@ +k@@ ]!='\0'@@ ;k++) cout<<s@@ [i+@@ len_sub@@ +k@@ ]; cout<<endl; } return0; }  
c -1
h -1
intmain() { int@@ y=0; ints; int@@ i1@@ ,@@ j1@@ ,@@ i2@@ ,@@ j2@@ ; inti,j; intn,@@ x; scanf("%d",&n); for(i=0;i<n;i++) { for(j=0;j<n;j++) { scanf("%d",&x); if(x@@ ==0&&@@ y@@ ==0) { i1@@ =i; j1@@ =j; y++; } elseif(x@@ ==0&&@@ y@@ !=0) { i2@@ =i; j2@@ =j; } } } s=(@@ j1@@ -@@ j2@@ +1)*(@@ i1@@ -@@ i2@@ +1); printf("%d",s); return0; }  
c -1
h -1
0

intmain() { inti,@@ l1,l2,@@ t; chara[500],b[500]; doublen; scanf("%lf\n",&@@ n); scanf("%s",a); scanf("%s",b); l1@@ =strlen(a); l2@@ =strlen(b); if(l1!=l2@@ ) { printf("error"); return0; } t=0; for(i=0;i<l1;i++) { if((@@ a[i]=='@@ A'||a[i]=='T'||a[i]=='@@ G'||@@ a[i]=='@@ C')&&(@@ b[i]=='@@ A'||@@ b[i]=='@@ T'||@@ b[i]=='@@ G'||@@ b[i]=='@@ C')@@ ) { if(a[i]==b[i]) t++; } else { printf("error"); return0; } } if(1.0*@@ t@@ /@@ l1@@ >=@@ n)@@ printf("yes"); elseprintf("no"); return0; }  
c -1
h -1
voidmain() { inti,j,n,@@ max; inta[100],b[100]; scanf("%d",&n); max=0; for(i=1;i<=n;i++){ scanf("%d",&a[i]); b[i]=1; for(j=1;j<=@@ i@@ -1;j++){ if(a[i]>@@ a[j])@@ continue; if(b[i]@@ <@@ b[j]@@ +1)@@ b[i]=b[j]+1; } if(b[i]@@ >max)max=@@ b[i]; } printf("%d\n",max); }  
c -1
h -1
0

intmain() { intdays@@ [@@ ]={0,31,@@ 28,31,30,31,30,31,31,30,31,30,31}; inty,m,d,@@ i,@@ c; cin>>y>>m>>d; if((y%@@ 4==0)&&(@@ y%100!=0@@ )||(y%@@ 400==0)) { days@@ [2@@ ]++; } c=@@ d; for(i=1;i<m;i++) { c@@ +=@@ days@@ [i]; } cout<<@@ c@@ <<endl; return0; }  
c -1
h -1
intmain() { structstudent{ long@@ num; long@@ chinese; long@@ maths; long@@ sum; }@@ t[@@ 100000],@@ l; long@@ n,@@ i,j,k,@@ tmp; scanf("%ld",&n); for(i=0;i<n;i++) { scanf("%ld@@ %ld@@ %ld@@ ",&@@ t@@ [i].num,&@@ t@@ [i].@@ chinese@@ ,&@@ t@@ [i].@@ maths@@ ); } for(i=0;i<n;i++) { t@@ [i].@@ sum=@@ t@@ [i].@@ chinese+@@ t@@ [i].@@ maths; } for(i=0;i<3;i++) { k=i; for(j=i+1;j<n;j++) { if(t@@ [j].@@ sum>@@ t@@ [k].@@ sum) k=j; } l=@@ t@@ [k]; t@@ [k]=@@ t@@ [i]; t@@ [i]=@@ l; } for(i=0;i<3;i++) { printf("%ld@@ %ld@@ \n",@@ t@@ [i].@@ num,@@ t@@ [i].@@ sum); } return0; }  
c -1
h -1
0

intmain() { inta[@@ 105@@ ][@@ 105@@ ]; long@@ m,n,@@ k,@@ z,@@ sum,@@ i,j; scanf("%d",&@@ z); for(i=1;i<=@@ z@@ ;i++) {@@ sum=0; scanf("%d%d",&m,&n); if(m@@ >=@@ 2@@ &&n@@ >=@@ 2) {@@ for(j=1;j<=m;j++) { for(k=1;k<=n;k++) { scanf("%d",&a[j]@@ [k]); } } for(k=1;k<=n;k++) sum=sum+@@ a[1@@ ][k@@ ]+@@ a[m@@ ][k@@ ]; for(j=2;j<=@@ m-1;j++) { sum=sum+@@ a[j]@@ [1]@@ +@@ a[j]@@ [n]; } printf("%d\n",sum); } else {@@ for(j=1;j<=m;j++) { for(k=1;k<=n;k++) { scanf("%d",&a[j]@@ [k]); } }@@ for(j=1;j<=m;j++) {@@ for(k=1;k<=n;k++) sum=sum+@@ a[j]@@ [k]@@ ;} printf("%d\n",sum@@ );} } getchar();@@ getchar@@ (@@ );}  
c -1
h -1
intmain() { intn,i,j,k,@@ m,@@ t,@@ b[100@@ ],@@ e@@ [100]; chara[100@@ ][@@ 20],@@ c@@ [100][@@ 20],@@ d@@ [100][@@ 20],@@ str@@ [20]; scanf("%d",&n); for(i=0;i<n;i++) scanf("%s%d",@@ a[i],&@@ b[i]); for(i=0,j@@ =0,@@ k@@ =0;i<n;i++) { if(b[i]@@ >=60) { strcpy(@@ c@@ [j],@@ a[i]); e@@ [j]=@@ b[i]; j++; } else { strcpy(@@ d@@ [k],@@ a[i]); k++; } } for(i=0;i<j@@ -1;i++) { for(m=0;m<@@ j@@ -1@@ -i@@ ;m++) { if(e@@ [m@@ ]<@@ e@@ [m@@ +1]) { t=@@ e@@ [m@@ ];@@ e@@ [m]=@@ e@@ [m@@ +1@@ ];@@ e@@ [m@@ +1]=@@ t; strcpy(@@ str,@@ c[m@@ ]@@ );strcpy(@@ c[m@@ ],c[@@ m@@ +1@@ ]@@ );strcpy(@@ c[m@@ +1],@@ str); } } } for(i=0;i<j;i++) printf("%s\n",@@ c[i]); for(i=0;i<k;i++) printf("%s\n",@@ d[i]); getchar(); getchar(); }  
c -1
h -1
0

intmain() { introw,col; inta[@@ 110][110@@ ]; intmax@@ ,@@ min@@ ; cin>>row>>col; for(inti=0;i<row;i++) for(intj=0;j<col;j++) { cin>>a[i][j]; } if(row@@ >@@ col) { max=@@ row; min=@@ col; } else { max=@@ col; min=@@ row; } for(inti=0;i<@@ min@@ ;i++) for(intj=0;j<=@@ i;j++) cout<<@@ a[j][i-j@@ ]<<endl; if(col@@ !=@@ row) { for(inti=@@ min@@ ;i<@@ max@@ ;i++) { if(col@@ >@@ row) for(intj=0;j<@@ min@@ ;j++) cout<<@@ a[j][i-j@@ ]<<endl; else for(intj=@@ col-1@@ ;j>=0;j--) cout<<@@ a[i@@ -j@@ ][j]@@ <<endl; } } for(inti=@@ max@@ ;i<=@@ row+col-2@@ ;i++) for(intj=@@ col-1@@ ;i@@ -j@@ <=row-1@@ ;j--) cout<<@@ a[i@@ -j@@ ][j]@@ <<endl; return0; }  
c -1
h -1
intmain() { intn,i,j,@@ flag@@ ,a[@@ 20001]; cin>>n; cin>>@@ a[1]; cout<<@@ a[1]; for(i=2;i<=n;i++) {@@ flag=0; cin>>a[i]; for(j=1;j<i;j++) {@@ if(a[j]==@@ a[i])@@ flag@@ =1;} if(flag@@ ==0)@@ cout<<""<<a[i]; } return0; }  
c -1
h -1
0

inta[@@ 70000@@ ]={0}; intmain() { intn,k,@@ c[@@ 1001@@ ],@@ i; scanf("%d%d",&n,&k); for(i=1;i<=n;i++) { scanf("%d",&@@ c[i]); a[@@ c[i]@@ +@@ 32768@@ ]=1; } for(i=1;i<=n;i++) { if(a[@@ c[i]@@ +@@ 32768@@ ]@@ &&@@ a[k@@ -@@ c[i]@@ +@@ 32768@@ ]@@ )break; } if(i<@@ n)@@ printf("yes"); elseprintf("no"); }  
c -1
h -1
structstudent { intID; intchi; intmath; inttotal; }stu[@@ 1000000@@ ]; voidmain() { int@@ STUDENT_NUM@@ ,i,j,@@ temp1@@ ,@@ temp2@@ ; scanf("%d",&@@ STUDENT_NUM@@ ); for(i=0;i<@@ STUDENT_NUM@@ ;i++) { scanf("%d%d%d",&stu[i].@@ ID@@ ,&stu[i].@@ chi@@ ,&stu[i].math); stu[i].@@ total=@@ stu[i].@@ chi@@ +stu[i].@@ math; } for(i=0;i<3;i++) { for(j=i+1;j<@@ STUDENT_NUM@@ ;j++) { if(stu[i].@@ total@@ <@@ stu[j].@@ total) { temp1@@ =stu[i].@@ ID; stu[i].@@ ID@@ =@@ stu[j].@@ ID; stu[j].@@ ID@@ =@@ temp1@@ ; temp2@@ =stu[i].@@ total; stu[i].@@ total=@@ stu[j].@@ total; stu[j].@@ total=@@ temp2@@ ; } } } printf("%d%d\n%d%d\n%d%d\n",@@ stu[0].@@ ID,@@ stu[0].@@ total@@ ,@@ stu[1].@@ ID,@@ stu[1].@@ total@@ ,@@ stu[2@@ ].ID,@@ stu[2@@ ].@@ total); }  
c -1
h -1
0

intmain() { intn,m,@@ i,j,@@ x=0; int@@ w@@ [1000]; scanf("%d%d",&n,&m); for(i=0;i<n;i++) { scanf("%d",&@@ w@@ [i]); } for(i=0;i<n-1;i++) { for(j=0;j<n;j++) { if(m==@@ w@@ [i]+@@ w@@ [j]) { x@@ +=1; break; } } if(x@@ >0) { break; } } if(x@@ >0) { printf("yes"); } else { printf("no"); } return0; }  
c -1
h -1
main() {int@@ run@@ (int@@ n); int@@ q@@ [13]={0,31,28,31,30,31,30,31,31,30,31,30,31}; inti,n,@@ y,@@ r,@@ s=0,@@ k; scanf("%d%d%d",&@@ n,&@@ y,&@@ r); for(i=0;i<y;i++) s=s+@@ q@@ [i]; s=s+@@ r; k=@@ run@@ (n); if(k@@ &&(@@ y@@ >2@@ ))@@ s@@ +=1; printf("%d",s); } int@@ run@@ (intn) {@@ inta; if((@@ n@@ %@@ 400==0)||(@@ (n@@ %@@ 4==0)&&(@@ n@@ %100!=0@@ ))@@ )@@ a=1; else@@ a=0; return@@ a; }  
c -1
h -1
0

intsum=0; void@@ devide@@ (inta,intb) { if(a==1) sum++; else { if(a@@ >=@@ b) devide@@ (a,@@ b@@ +1); if(a%@@ b@@ ==0) devide@@ (a@@ /@@ b,@@ b); } } intmain() { intn,@@ a; cin>>n; for(inti=0;i<n;i++) { cin>>a; sum=0; devide@@ (a,@@ 2); cout<<sum<<endl; } return0; }  
c -1
h -1
intmain() { inta[@@ 100001@@ ],b[@@ 100001@@ ]; inti,j,@@ step@@ =1; intn; cin>>n; for(i=1;i<=n;i++) cin>>a[i]; b[@@ step@@ ]=@@ a[1]; cout<<@@ a[1]; for(i=2;i<=n;i++) { for(j=1;j<=@@ step@@ ;j++) { if(a[i]==@@ b[j]@@ )break; } if(j==@@ step@@ +1) { step@@ ++; cout<<""<<a[i]; b[@@ step@@ ]=a[i]; } } return0; }  
c -1
h -1
0

intmain(){ intl,@@ a,b,@@ s,@@ i; doublen,@@ x; char@@ zfca@@ [501]; char@@ zfcb@@ [501]; a=0; b=0; scanf("%lf",&n); scanf("%s",@@ zfca@@ ); scanf("%s",@@ zfcb@@ ); int@@ la@@ =strlen(@@ zfca@@ ); int@@ lb@@ =strlen(@@ zfcb@@ ); if(@@ la@@ !=@@ lb@@ ){@@ printf("error");} else{@@ a@@ =1;} if(a@@ ==1){ while(1){ for(i=0;@@ zfca@@ [i]!='\0';i++){ if(@@ zfca@@ [i]!='A'&&@@ zfca@@ [i]!='T'&&@@ zfca@@ [i]!='C'&&@@ zfca@@ [i]!='G'){ printf("error"); break;}} if(@@ zfca@@ [i]!=@@ '\0@@ '&&@@ zfca@@ [i]!='A'&&@@ zfca@@ [i]!='T'&&@@ zfca@@ [i]!='C'&&@@ zfca@@ [i]!='G')@@ {break;} for(i=0;@@ zfcb@@ [i]!='\0';i++){ if(@@ zfcb@@ [i]!='A'&&@@ zfcb@@ [i]!='T'&&@@ zfcb@@ [i]!='C'&&@@ zfcb@@ [i]!='G'){ printf("error"); break;}} if(@@ zfcb@@ [i]==@@ '\0')@@ {@@ b@@ =1;} break; }} if(a@@ ==1&&@@ b@@ ==1){ for(i=0,@@ s=0;@@ zfca@@ [i]!='@@ 0'@@ ;i++) {if(@@ zfca@@ [i]==@@ zfcb@@ [i]@@ ){@@ s=s@@ +1;@@ }} if(a@@ ==1&&@@ b@@ ==1){@@ x@@ =1.0*@@ s/@@ la@@ ; if(x>@@ n@@ ){printf("yes");} else{printf("no");} } } return0; }  
c -1
h -1
intmain() { inta[100][100],@@ n,@@ i,j,k; scanf("%d",&n); for(i=1;i<=n;i++) { inta[100][100],@@ r,@@ l,@@ sum=0; scanf("%d%d",&@@ r@@ ,&@@ l); for(j=0;j<=@@ r@@ -1;j++) for(k=0;k<=@@ l@@ -1;k++) scanf("%d",@@ *(a@@ +j)+@@ k); for(j=0;j<=@@ r@@ -1;j++) { for(k=0;k<=@@ l@@ -1;k++) { if(j==@@ r@@ -1@@ ||j@@ ==0||@@ k==@@ l@@ -1@@ ||@@ k@@ ==0) sum+=*(*(a@@ +j)+@@ k); } }@@ printf("%d\n",sum); } return0; }  
c -1
h -1
0

inta[100],b[100],@@ c[100]; int@@ num1@@ ; int@@ num2@@ ; voidmain() { voidread@@ (); void@@ queue@@ (); voidcombine@@ (); void@@ put@@ (); read(); queue@@ (); combine@@ (); put@@ (); } voidread@@ () { inti; scanf("%d%d",&@@ num1@@ ,&@@ num2@@ ); for(i=0;i<@@ num1@@ ;i++) { scanf("%d",&a[i]); } for(i=0;i<@@ num2@@ ;i++) { scanf("%d",&b[i]); } } void@@ queue@@ () { inti,j,t; for(i=0;i<@@ num1@@ -1;i++) { for(j=0;j<@@ num1@@ -i-1;j++) { if(a[j]>a[j+1]) { t=a[j]; a[j]=a[j+1]; a[j+1]=t; } } } for(i=0;i<@@ num2@@ -1;i++) { for(j=0;j<@@ num2@@ -i-1;j++) { if(b[j]>b[j+1]) { t=@@ b[j]; b[j]=b[j+1]; b[j+1]=@@ t; } } } } voidcombine@@ () { inti; for(i=0;i<@@ num1@@ ;i++) { c[i]=a[i]; } for(i=0;i<@@ num2@@ ;i++) { c@@ [i+@@ num1@@ ]=b[i]; } } void@@ put@@ () { inti; for(i=0;i<@@ num1@@ +@@ num2@@ -1;i++) { printf("%d",c[i]); } printf("%d",c[@@ num1@@ +@@ num2@@ -1]); }  
c -1
h -1
void@@ main(@@ intargc@@ ,char*argv[]) { structstudent { charID[10]; intage; }@@ stu@@ [100],@@ stud@@ [100]; inta[100],b[100],@@ i,@@ c@@ ,j,@@ x,@@ n; scanf("%d",&n); for(i=0;i<n;i++){ scanf("%s",&@@ stu[i].@@ ID); scanf("%d",&@@ stu[i].@@ age); } intk=0; for(i=0;i<n;i++){ if(stu[i].@@ age@@ >=60@@ ){@@ a[k]=@@ stu[i].@@ age@@ ;@@ b[k]=@@ i@@ ;k@@ ++;} } for(i=0;i<k;i++){ for(j=0;j<@@ k@@ ;j++){ if(a[j]@@ <@@ a[j+1@@ ]){@@ x=@@ a[j];a[j]=a[j+1];@@ a[j+1]=@@ x@@ ;@@ x=@@ b[j]@@ ;@@ b[j]=b@@ [j+1];@@ b[j+1]=@@ x@@ ;} } } for(i=0;i<k;i++){ c=@@ b[i]; printf("%s\n",@@ stu[@@ c@@ ].@@ ID); } for(i=0;i<n;i++){ if(stu[i].@@ age@@ <60@@ ){@@ printf("%s\n",@@ stu[i].@@ ID@@ );} } }  
c -1
h -1
0

intmain() { intn,@@ sz@@ [100],@@ zs@@ [100],@@ i,@@ k=0,@@ m,@@ a; charid@@ [100][10],@@ di@@ [100][10],@@ zfc@@ [10]; scanf("%d",&n); for(i=0;i<n;i++) { scanf("%s%d",@@ id[i],&@@ (@@ sz[i]@@ )); } for(i=0;i<n;i++) { if(sz[i]@@ >=60) { zs@@ [k]=@@ sz[i]; strcpy(@@ di@@ [k],@@ id[i]); k++; } } for(m=0;m<@@ k-1@@ ;m++) { for(i=0;i<@@ k-1@@ -@@ m;i++) { if(@@ zs@@ [i]<@@ zs@@ [i+1]) { a=@@ zs@@ [i]; zs@@ [i]=@@ zs@@ [i+1]; zs@@ [i+1]=@@ a; strcpy(@@ zfc@@ ,@@ di@@ [i]); strcpy(@@ di@@ [i],@@ di@@ [i+1]); strcpy(@@ di@@ [i+1],@@ zfc); } } } for(i=0;i<n;i++) { if(sz[i]@@ <60) { strcpy(@@ di@@ [k],@@ id[i]); k++; } } for(i=0;i<k;i++) { printf("%s\n",@@ di@@ [i]); } return0; }  
c -1
h -1
intmain() { inty,m,d,@@ i,@@ sum,@@ n=0,@@ k@@ [@@ 13@@ ]; scanf("%d%d@@ %d@@ "@@ ,&@@ y,@@ &@@ m,@@ &@@ d); k@@ [0]@@ =0; k@@ [1]=@@ k@@ [3@@ ]=@@ k@@ [5@@ ]=@@ k@@ [@@ 7@@ ]=@@ k@@ [@@ 8@@ ]=@@ k@@ [10@@ ]=@@ k@@ [12@@ ]=31; k@@ [4@@ ]=@@ k@@ [@@ 6@@ ]=@@ k@@ [@@ 9@@ ]=@@ k@@ [11@@ ]=30; if(y%@@ 4) { if(y%@@ 100@@ ) { if(y%@@ 400@@ ) { k@@ [2]=@@ 28; } else { k@@ [2]=@@ 29; } } else { k@@ [2]=@@ 28; } } else { k@@ [2]=@@ 29; } for(i=0;i<m;i++) { n=n+@@ k@@ [i]; } sum=@@ n+@@ d; printf("%d\n",sum); return0; }  
c -1
h -1
0

intmain() { inti,j,@@ sum,@@ m,n,@@ k; inta[@@ MAX_LEN@@ ][@@ MAX_LEN@@ ]; cin>>k; while(k@@ --) { cin>>m>>n; for(i=0;i<m;i++) for(j=0;j<n;j++) cin>>a[i][j]; for(@@ sum@@ =i@@ =0;i<@@ m;i++) sum=sum+@@ a[i][0]+@@ a[i][n-1]; for(j=1;j<@@ n-1;j++) sum=sum+@@ a[0]@@ [j]+@@ a[m-1][j]; cout<<sum<<endl; } return0; }  
c -1
h -1
intmain() { inta[16],@@ i,j,k,@@ count=0; while(1) { cin>>a[0]; if(a[0]==-1) break; for(i=1;i<=@@ 15;i++) { cin>>a[i]; if(a[i]==0) break; } for(j=0;j<=@@ i@@ -2@@ ;j++) { for(k=j+1@@ ;k<=@@ i-1;k++) { if(a[k]@@ /@@ a[j]==@@ 2@@ &&@@ a[k]@@ %@@ a[j]@@ ==0||@@ a[j]@@ %@@ a[k]@@ ==0&&@@ a[j]@@ /@@ a[k]==@@ 2) count++; } } cout<<count<<endl; count=0; } return0; }  
c -1
h -1
0

intmain(){ charzfc@@ [@@ LEN@@ ],@@ x[@@ LEN@@ ],@@ y[@@ LEN@@ ],@@ w@@ [@@ LEN@@ ]; intlen1,len2,@@ len3@@ ,i,j,@@ flag=0,@@ m,@@ tag@@ ,@@ k=0; gets(@@ zfc); gets(@@ x); gets(@@ y); len1=strlen(@@ zfc); len2=strlen(@@ x); len3@@ =strlen(@@ y); for(i=0;i<len1;i++){ if(@@ zfc@@ [i]==@@ x@@ [0]){ m=i; tag@@ =0; for(j=0;j<len2@@ ;j++){ if(@@ zfc@@ [i+j]!=@@ x@@ [j]){ tag@@ =1; break; } } if(tag@@ ==0){ strcpy(@@ w,@@ zfc); for(j=0;j<@@ len3@@ ;j++){ zfc@@ [m@@ +j@@ ]=@@ y@@ [j]; } if(m@@ +@@ len3@@ >@@ len1@@ ||@@ m+@@ len3@@ ==@@ len1@@ ){ zfc@@ [m@@ +@@ len3@@ ]='\0'; } elseif(@@ m+@@ len3@@ <@@ len1@@ ){ for(i=@@ m+@@ len3@@ ;i<@@ len1@@ +@@ len3@@ -len2@@ ;i++){ zfc@@ [i]=@@ w@@ [m@@ +len2@@ +k@@ ]; k++; } zfc@@ [@@ len1@@ +@@ len3@@ -len2@@ ]='\0'; } flag=1; } } } printf("%s\n",@@ zfc); return0; }  
c -1
h -1
intmain() { intk; cin>>k; int@@ high@@ [30]; intnum[@@ 30]={0}; inti,j; for(i=0;i<k;i++) { cin>>@@ high@@ [i]; } num@@ [0]=1; for(i=1;i<k;i++) { intmax=0; for(j=i-1;j>=0;j--) { if(@@ high@@ [i]<=@@ high@@ [j]) { if(max<@@ num@@ [j]) max=@@ num@@ [j]; } } num[i]=@@ max+1; } sort(@@ num,@@ num@@ +@@ k); printf("%d",@@ num@@ [k@@ -1]); return0; }  
c -1
h -1
0

int@@ bianyuan@@ (intn,int@@ m){ int@@ juzhen@@ [100][100]; inti,j,@@ result; for(i=0;i<n;i++){ for(j=0;j<m;j++){ scanf("%d",&@@ juzhen@@ [i][j]); } } result=0; for(j=0;j<m;j++){ result+=@@ juzhen@@ [0]@@ [j]; } for(j=0;j<m;j++){ result+=@@ juzhen@@ [n-1@@ ]@@ [j]; } for(i=1;i<@@ n-1;i++){ result+=@@ juzhen@@ [i]@@ [0]; } for(i=1;i<@@ n-1;i++){ result+=@@ juzhen@@ [i]@@ [@@ m-1@@ ]; } returnresult; } intmain() { intn,i; inta,@@ lie@@ ,@@ hang@@ ; scanf("%d",&n); for(i=0;i<n;i++){ scanf("%d%d",&@@ lie@@ ,&@@ hang@@ ); a=@@ bianyuan@@ (@@ lie@@ ,@@ hang@@ ); printf("%d\n",@@ a); } return0; }  
c -1
h -1
intmain() { intn,a[@@ 20000@@ ],i,j,@@ f; scanf("%d%d",&@@ n,@@ a); printf("%d",@@ *@@ a); for(i=1;i<n;i++) { f=0; scanf("%d",a@@ +i); for(j=0;j<i;j++) { if(@@ *(a+i)@@ ==@@ *(a@@ +j@@ )) f=1; } if(f@@ ==0) printf("%d",@@ *(a@@ +i)); elsecontinue; } return0; }  
c -1
h -1
0

intmain() { intn,@@ age@@ [100],@@ i,j; charid@@ [100][@@ 11@@ ],@@ str@@ [11]; scanf("%d",&n); for(i=0;i<n;i++) { scanf("%s%d",@@ id[i],&@@ age[i]); } for(i=@@ 110@@ ;i@@ >=60@@ ;i--) { for(j=0;j<n;j++) { if(age@@ [j]==@@ i) { printf("%s\n",@@ id@@ [j]); age@@ [j]@@ =0; } } } for(i=0;i<n;i++) { if(age[i]@@ !=0) printf("%s\n",@@ id[i]); } return0; }  
c -1
h -1
voidmain() { intn,i,j,@@ max,@@ a[100],b[100]; scanf("%d",&n); for(i=0;i<n;i++) { scanf("%d",&a[i]); } for(i=0;i<n;i++){@@ b[i]@@ =1;} for(i=n-2;i>=0;i--) { max=0; for(j=n-1;j>i;j--) { if(a[i]>=a[j]) { if(b[j]@@ >max){max=@@ b[j]@@ ;} } } b[i]@@ +=@@ max; } max=0; for(i=0;i<n;i++) { if(b[i]>max) {max=@@ b[i]@@ ;} } printf("%d",max); }  
c -1
h -1
0

int@@ dividemin@@ (inta,int@@ minyinzi@@ ){ intnum=0; if(a@@ ==1)@@ num++; else@@ for(inti=@@ minyinzi@@ ;i<=a;i++) { if(a@@ %i==0)@@ num=num+@@ dividemin@@ (a/i,i); } returnnum; } intmain(){ intn; cin>>n; inta[n]; for(inti=0;i<=@@ n-1;i++) cin>>a[i]; for(inti=0;i<=@@ n-1;i++) cout<<@@ dividemin@@ (a[i],@@ 2)<<endl; }  
c -1
h -1
intmain() { intb,@@ c,@@ i,j,@@ m,@@ t,@@ p; inta[100][100]; scanf("%d%d",&@@ b,&c); for(i=0;i<=@@ b@@ -1;i++) { for(j=0;j<=@@ c@@ -1;j++) scanf("%d",&a[i][j]); } for(m=0;m@@ <=@@ b@@ +c@@ -2@@ ;m++) { if(m@@ <b@@ &&m@@ <@@ c) { for(i=0;i<=@@ m;i++) printf("%d\n",a[i]@@ [m@@ -i]); } elseif(m@@ >=@@ b@@ &&m@@ >=@@ c) { for(i=m@@ -c@@ +1;i<=@@ b@@ -1;i++) printf("%d\n",a[i]@@ [m@@ -i]); } else { if(b@@ <@@ c) { for(i=0;i<=@@ b@@ -1;i++) printf("%d\n",a[i]@@ [m@@ -i]); } else { for(i=m@@ -c@@ +1;i<=@@ m;i++) printf("%d\n",a[i]@@ [m@@ -i]); } } } return0; }  
c -1
h -1
0

intmain() { chars[@@ 257@@ ],@@ sub@@ [50@@ ],@@ rep@@ [50@@ ]; inti,j,@@ t,@@ k; int@@ len_s@@ ,@@ len_sub@@ ; cin.getline(@@ s,@@ 257@@ ); cin.getline(@@ sub,@@ 50@@ ); cin.getline(@@ rep@@ ,@@ 50@@ ); len_s@@ =strlen(s); len_sub@@ =strlen(@@ sub); for(t=0;t@@ <@@ len_s@@ ;t++) { if(s[@@ t@@ ]==@@ sub@@ [0]) { for(i=0;i<@@ len_sub@@ ;i++) { if(s[@@ t@@ +i@@ ]!=@@ sub@@ [i]) break; } if(i==@@ len_sub@@ ) break; } } if(t==@@ len_s@@ ) cout<<s<<endl; else { for(i=0;i<t;i++) cout<<@@ s[i]; cout<<@@ rep@@ ; for(k=0;@@ s@@ [i+@@ len_sub@@ +k@@ ]!='\0'@@ ;k++) cout<<s@@ [i+@@ len_sub@@ +k@@ ]; cout<<endl; } return0; }  
c -1
h -1
int@@ pfCompare@@ (constvoid*@@ elem1@@ ,@@ constvoid*@@ elem2@@ ) { int*@@ p1,*p2; p1=@@ (int*)@@ elem1@@ ; p2=@@ (int*)@@ elem2@@ ; return(@@ *p2@@ )@@ -@@ (*@@ p1); } intmain() { intn; scanf("%d",&n); inta[n@@ ],b[@@ n@@ ],c[@@ n@@ ],@@ d[@@ n@@ ],@@ e@@ [n]; inti; for(i=0;i<n;i++) { scanf("%d%d%d",&@@ a[i],&@@ b[i]@@ ,&@@ c[i]); d[i]=@@ b[i]@@ +c@@ [i]; e@@ [i]=@@ d[i]; } qsort(@@ e,@@ n,@@ 4@@ ,@@ pfCompare@@ ); for(intk=0;k<@@ 3@@ ;k++) { for(i=0;i<n;i++) if(d@@ [i]==@@ e@@ [k]) {@@ printf("%d%d\n",@@ a[i],@@ d[i]); d@@ [i]=0; break; } } getchar();@@ getchar(); }  
c -1
h -1
0

intmain() { intk,m,n,i,j,@@ sum,@@ a[100][100],@@ *p; cin>>k; for(j=1;j<=@@ k;j++) { sum=0; cin>>m>>n; for(p=@@ *@@ a,@@ i@@ =0;i<@@ m*@@ n;i++) { cin>>@@ p[i]; if(i@@ <=@@ n-1@@ ||@@ i>=@@ m*@@ n-@@ n-1@@ ||(@@ i@@ +1)@@ %n@@ ==0||@@ i@@ %n@@ ==0) sum+=@@ p[i]; } cout<<sum<<endl; } return0; }  
c -1
h -1
main() { intn; scanf("%d",&n); ints[@@ 20000],@@ y[@@ 20000]; inti,j,k; for(i=0;i<n;i++) { scanf("%d",&s[i]); } k=0; for(i=n-1@@ ;i>0;i--) { for(j=i-1;j>=0;j--) { if(s[i]==@@ s@@ [j]) break; } if(j==@@ -1) { y@@ [k]=@@ s[i]; k++; } } printf("%d",@@ s@@ [0]); for(i=k@@ -1;i>=0;i--) printf("%d",y@@ [i]); }  
c -1
h -1
0

intmain() { intk,m,n,i,j,@@ l,@@ number@@ [100][100],@@ num,@@ *@@ p=@@ NULL@@ ; cin>>k; for(i=0;i<k;i++) { cin>>m>>n; for(j=0;j<m;j++) { for(l=0;l<n;l++) cin>>@@ number@@ [j]@@ [l]; } num=0; p=@@ *@@ number; for(j=0;j<n;j++) { if(m==1) { num+=@@ *(p@@ +j); } else { num=num+@@ *(p@@ +j)+@@ *(*(@@ number@@ +m-1)@@ +j); } } p=@@ *@@ number; for(j=1;j<@@ m-1;j++) { if(n==1) { num+=@@ **@@ (@@ number@@ +j); } else { num=num+@@ **@@ (@@ number@@ +j)+@@ *(*(@@ number@@ +j)@@ +n-1); } } cout<<num<<endl; } return0; }  
c -1
h -1
voidmain() { inti,j,@@ m,n,@@ a[@@ 3@@ ][2@@ ],@@ k; structstudent { intnum; int@@ s1@@ ; int@@ s2; int@@ l; }stu[100000]; scanf("%d",&n); for(i=0;i<n;i++) { scanf("%d%d%d",&stu[i].num,&stu[i].@@ s1@@ ,&stu[i].@@ s2); stu[i].@@ l=@@ stu[i].@@ s1@@ +stu[i].@@ s2; } for(i=0;i<3;i++) { for(m@@ =0,@@ j@@ =0;j<@@ n;j++) { if(m@@ <@@ stu[j].@@ l) { m=@@ stu[j].@@ l; k=j; } } a[i][@@ 0]=@@ k; a[i]@@ [1]=@@ m; stu[k].@@ l=0; } for(i=0;i<3;i++) { printf("%d%d\n",@@ a[i][0]@@ +1,@@ a[i]@@ [1]); } }  
c -1
h -1
0

int@@ A@@ ,@@ B@@ ,a[@@ 40@@ ],b[@@ 40@@ ]; void@@ enter@@ () { inti; scanf("%d%d",&@@ A@@ ,&@@ B@@ ); scanf("%d",&@@ a[1]); for(i=2;i<=@@ A@@ ;i++) scanf("%d",&a[i]); scanf("%d",&@@ b[1@@ ]); for(i=2;i<=@@ B@@ ;i++) scanf("%d",&b[i]); } void@@ array@@ () { inti,j,@@ m; for(i=1;i<=@@ A@@ -1;i++) for(j=1;j<=@@ A@@ -i;j++) { if(a[j]>a[j+1]) { m=@@ a[j]; a[j]=a[j+1]; a[j+1]=@@ m; } } for(i=1;i<=@@ B@@ -1;i++) for(j=1;j<=@@ B@@ -i;j++) { if(b[j]>b[j+1]) { m=@@ b[j]; b[j]=b[j+1]; b[j+1]=@@ m; } } } void@@ connect@@ () { inti,j; for(i=@@ A@@ +1@@ ,j@@ =1@@ ;i<=@@ A@@ +@@ B@@ ;i++,j++) a[i]=@@ b[j]; } voidprint() { inti; printf("%d",@@ a[1]); for(i=2;i<=@@ A@@ +@@ B@@ ;i++) printf("%d",a[i]); } voidmain() { enter@@ (); array@@ (); connect@@ (); print(); }  
c -1
h -1
intmain(intargc,char*argv[]) { int@@ d[@@ 12]={31,28,31,30,31,30,31,31,30,31,30,31}; intyear,month,day,@@ i,@@ days@@ =0; scanf("%d%d%d",&year,&month,&day); for(i=1;i<month;i++) { days=@@ days@@ +d@@ [i-1]; } days=@@ days@@ +day; if((@@ year%@@ 4@@ ==0||@@ year%@@ 400==0)@@ &&@@ month@@ >2) days=@@ days@@ ++; printf("%d",@@ days@@ ); }  
c -1
h -1
0

intmain() { inta[@@ 3@@ ]={0},b[@@ 12]={31,@@ 28,31,30,31,30,31,31,30,31,30,31@@ },@@ sum=0,@@ i; cin>>@@ a[0]@@ >>@@ a[1]@@ >>@@ a[2@@ ]; if(a[0]@@ %4==0&&@@ a[0]@@ %100!=0@@ ||@@ a[0]@@ %@@ 400==0)@@ b[1@@ ]=@@ 29; for(i=0;i<@@ a[1]@@ -1;i++)@@ sum+=@@ b[i]; sum+=@@ a[2@@ ]; cout<<@@ sum; }  
c -1
h -1
intmain(){ intn,@@ s@@ =1@@ ,j,@@ i; cin>>n; inta[n@@ ],b[@@ n]; for(inti=0;i<n;i++) cin>>a[i]; b[0]=@@ a[0]; for(i=1;i<n;i++){ for(j=0;j<@@ s@@ ;j++){ if(a[i]==@@ b[j]@@ ){ break; } } if(j==@@ s@@ ){ b[@@ s@@ ]=a[i]; s++; } } for(inti=0;i<@@ s@@ -1;i++) cout<<b[i]@@ <<''; cout<<b[@@ s@@ -1]; return0; }  
c -1
h -1
0

int@@ strnl@@ (char@@ *,@@ char*@@ ); void@@ replace@@ (@@ char*@@ str@@ ,int@@ len_ss@@ ,int@@ start@@ ,char*@@ rpl@@ ); intmain() { charstr[256],@@ substr@@ [256],@@ rpl@@ [256]; int@@ start@@ ; scanf("%s%s%s",@@ str,@@ substr@@ ,@@ rpl@@ ); start@@ =@@ strnl@@ (@@ str,@@ substr@@ ); if(@@ start@@ !=-1) replace@@ (@@ str,@@ strlen(@@ substr@@ ),@@ start@@ ,@@ rpl@@ ); else printf("%s\n",@@ str); return0; } int@@ isstart@@ (inti,@@ char*@@ s,@@ char*@@ subs@@ ) { char@@ temp@@ [256]; char@@ *p,*@@ pt@@ ; p=@@ s@@ +@@ i; pt@@ =temp; intj; for(j=0;j<strlen(@@ subs@@ );j++) *@@ pt@@ ++=@@ *p@@ ++; *@@ pt@@ =0; if(!@@ strcmp(@@ temp,@@ subs@@ )) return1; return0; } int@@ strnl@@ (@@ char*@@ s,@@ char*@@ subs@@ ) { inti; for(i=0;i<=@@ strlen(@@ s)@@ -strlen(@@ subs@@ );i++) if(@@ isstart@@ (i,@@ s,@@ subs@@ )) return@@ i; return-1; } void@@ replace@@ (@@ char*@@ str@@ ,int@@ len_ss@@ ,int@@ start@@ ,char*@@ rpl@@ ) { char@@ temp@@ [256]; strcpy(@@ temp,@@ str); char*@@ ptmp@@ ,*@@ prpl@@ ; ptmp@@ =@@ temp@@ +@@ start@@ ; prpl@@ =@@ rpl@@ ; while(@@ *@@ prpl@@ ) *@@ ptmp@@ ++=@@ *@@ prpl@@ ++; char*@@ pstr@@ =@@ str@@ +@@ start@@ +@@ len_ss@@ ; while(@@ *@@ pstr@@ ) *@@ ptmp@@ ++=@@ *@@ pstr@@ ++; *@@ ptmp@@ =0; strcpy(@@ str,@@ temp); printf("%s\n",@@ temp); }  
c -1
h -1
intleap@@ (int@@ Y@@ ) { if(@@ Y@@ %@@ 400==0) return1; elseif(@@ Y@@ %@@ 100==0) return0; elseif(@@ Y@@ %@@ 4==0) return1; else return0; } intmain() { int@@ Y@@ ,@@ M@@ ,@@ D@@ ; scanf("%d%d%d",&@@ Y@@ ,&@@ M@@ ,&@@ D); if(leap@@ (@@ Y@@ )@@ ==0) { if(M@@ ==1) printf("%d",D@@ ); if(M==@@ 2) printf("%d",@@ 31+@@ D); if(M==@@ 3) printf("%d",31+28@@ +@@ D); if(M==@@ 4) printf("%d",31+28@@ +31+@@ D); if(M==@@ 5) printf("%d",31+28@@ +31+30@@ +@@ D); if(M==@@ 6) printf("%d",31+28@@ +31+30+31+@@ D); if(M==@@ 7) printf("%d",31+28@@ +31+30+31+30@@ +@@ D); if(M==@@ 8) printf("%d",31+28@@ +31+30+31+30+31+@@ D); if(M==@@ 9) printf("%d",31+28@@ +31+30+31+30+31+31+@@ D); if(M==@@ 10) printf("%d",31+28@@ +31+30+31+30+31+31+30@@ +@@ D); if(M==@@ 11) printf("%d",31+28@@ +31+30+31+30+31+31+30+31+@@ D); if(M==@@ 12) printf("%d",31+28@@ +31+30+31+30+31+31+30+31+30@@ +@@ D); } else { if(M@@ ==1) printf("%d",D@@ ); if(M==@@ 2) printf("%d",@@ 31+@@ D); if(M==@@ 3) printf("%d",31+29@@ +@@ D); if(M==@@ 4) printf("%d",31+29@@ +31+@@ D); if(M==@@ 5) printf("%d",31+29@@ +31+30@@ +@@ D); if(M==@@ 6) printf("%d",31+29@@ +31+30+31+@@ D); if(M==@@ 7) printf("%d",31+29@@ +31+30+31+30@@ +@@ D); if(M==@@ 8) printf("%d",31+29@@ +31+30+31+30+31+@@ D); if(M==@@ 9) printf("%d",31+29@@ +31+30+31+30+31+31+@@ D); if(M==@@ 10) printf("%d",31+29@@ +31+30+31+30+31+31+30@@ +@@ D); if(M==@@ 11) printf("%d",31+29@@ +31+30+31+30+31+31+30+31+@@ D); if(M==@@ 12) printf("%d",31+29@@ +31+30+31+30+31+31+30+31+30@@ +@@ D); } getchar(); getchar(); }  
c -1
h -1
0

intmain() {@@ intn,k,@@ m,@@ i,j,@@ t,@@ s; inta[100][100]; scanf("%d",&k); for(t=0;t@@ <k;@@ t++){ scanf("%d%d",&m,&n); s=0; for(i=0;i<m;i++){ for(j=0;j<n;j++){ scanf("%d",&a[i][j]); if(i==0||i==@@ m-1@@ ){ s=s+@@ a[i][j]@@ ;} if((@@ j@@ ==0||j==@@ n-1)@@ &&i@@ !=0@@ &&i!=@@ m-1@@ ){ s=s+@@ a[i][j]@@ ;} } } printf("%d\n",s); } return0; }  
c -1
h -1
structstudent { intnum; intchinese; intmath; inttotal; }@@ s[@@ N]; intmain() { intn,i,j,@@ tn@@ ,@@ tt@@ ; scanf("%d",&n); for(i=0;i<n;i++) { scanf("%d%d%d",&@@ s[i].@@ num,&@@ s[i].@@ chinese@@ ,&@@ s[i].@@ math); s[i].@@ total=@@ s[i].@@ math+@@ s[i].@@ chinese; } for(i=1;i<@@ 4;i++) { for(j=0;j<n-i;j++) { if(s@@ [j].@@ total@@ >=@@ s@@ [j+1].@@ total) { tt@@ =@@ s[j].@@ total@@ ;@@ tn@@ =@@ s[j].@@ num; s[j].@@ total=@@ s@@ [j+1].@@ total@@ ;@@ s[j].@@ num=@@ s@@ [j+1].@@ num; s@@ [j+1].@@ total=@@ tt@@ ;s@@ [j+1].@@ num=@@ tn@@ ; } } } printf("%d%d\n%d%d\n%d%d\n",@@ s[@@ n-1@@ ].num,@@ s[@@ n-1@@ ].@@ total@@ ,@@ s[@@ n-2@@ ].num,@@ s[@@ n-2@@ ].@@ total@@ ,@@ s[@@ n-@@ 3].@@ num,@@ s[@@ n-@@ 3].@@ total); return(0); }  
c -1
h -1
0

intmain() { intn,i,j,a[@@ 20000],b[@@ 20000]; scanf("%d",&n); scanf("%d",&a[0]); for(i=1;i<n;i++) { scanf("%d",&a[i]); for(j=0;j<i;j++) { b[i]=@@ a[i]@@ -@@ a[j]; if(b[i]@@ ==0) break; } } printf("%d",a[0]); for(i=0;i<n;i++) { if(b[i]@@ !=0) printf("%d",a[i]); } return0; }  
c -1
h -1
structstudent { int@@ xuehao@@ ; intyuwen; intshuxue; int@@ zongfen; }stu[100000]; intmain(intargc,char*argv[]) { intn,i; scanf("%d",&n); for(i=0;i<n;i++) { scanf("%d%d%d",&stu[i].@@ xuehao@@ ,&stu[i].@@ yuwen@@ ,&stu[i].@@ shuxue); stu[i].@@ zongfen@@ =stu[i].@@ yuwen+stu[i].@@ shuxue; } int@@ max1=@@ 2,@@ max2@@ =1,@@ max3@@ =0,@@ num1@@ =0,@@ num2@@ =0,@@ num3@@ =0; for(i=0;i<n;i++) { if(stu[i].@@ zongfen@@ >@@ max1@@ ) { max3=max2; num3@@ =@@ num2@@ ; max2=@@ max1; num2@@ =@@ num1@@ ; max1@@ =stu[i].@@ zongfen; num1@@ =i; }elseif(@@ stu[i].@@ zongfen@@ <=@@ max1@@ &&stu[i].@@ zongfen@@ >@@ max2@@ ) { max3=max2; num3@@ =@@ num2@@ ; max2=@@ stu[i].@@ zongfen; num2@@ =i; }elseif(@@ stu[i].@@ zongfen@@ <=@@ max2@@ &&stu[i].@@ zongfen@@ >@@ max3@@ ) { max3=@@ stu[i].@@ zongfen; num3@@ =i; } } printf("%d%d\n",stu[@@ num1@@ ].@@ xuehao@@ ,@@ stu[@@ num1@@ ].@@ zongfen@@ ); printf("%d%d\n",stu[@@ num2@@ ].@@ xuehao@@ ,@@ stu[@@ num2@@ ].@@ zongfen@@ ); printf("%d%d\n",stu[@@ num3@@ ].@@ xuehao@@ ,@@ stu[@@ num3@@ ].@@ zongfen@@ ); return0; }  
c -1
h -1
0

struct@@ Books { intnum; charauthor[26]; }a[@@ 1000]; intmain() { intn; inti,j; intx; intmax=0; char@@ letter@@ ='A'; intb[@@ 26]={0}; scanf("%d",&n); for(i=0;i<n;i++) { scanf("%d%s",&@@ a[i].@@ num,@@ a[i].@@ author); } for(i=0;i<n;i++) { for(j=0;;j++) { if(a[i].@@ author@@ [j]>=@@ 65@@ &&@@ a[i].@@ author@@ [j]<=@@ 90@@ ) { x=@@ a[i].@@ author@@ [j]; b[@@ x@@ -65]++; }else{ break; } } } for(i=0;i<26;i++) { if(b[i]>max) { max=b[i]; letter@@ =i+65; } } printf("%c\n%d\n",@@ letter@@ ,max); for(i=0;i<n;i++) { for(j=0;j<26;j++) { if(a[i].@@ author@@ [j]==@@ letter@@ ) { printf("%d\n",@@ a[i].@@ num); } } } return0; }  
c -1
h -1
voidinput@@ (intm,@@ intn,@@ inta[@@ 300@@ ],intb[@@ 300@@ ]) { inti=0,j=0; scanf("%d%d",&m,&n); for(i=0;i<m;i++) {@@ scanf("%d",&a[i]); } for(j=0;j<n;j++) { scanf("%d",&@@ b[j]); } } void@@ row@@ (inta[@@ 300@@ ]) { inti,j,t; for(i=0;i<@@ 300@@ ;i++) { for(j=i+1;j<@@ 300@@ ;j++) { if((a[j]@@ <@@ a[i]@@ )&&(@@ a[j]@@ !=0)) { t=a[j]; a[j]=@@ a[i]; a[i]=@@ t; } } } } void@@ com@@ (inta[@@ 300@@ ],intb[@@ 300@@ ]) { inti=0,j=0,@@ k; for(i=0;i<@@ 300@@ ;i++) { if(a[i]==0) {@@ k@@ =i;@@ break;} } for(j=0;j<@@ 300@@ ;j++) {@@ if(b[j]@@ !=0) a[k]=@@ b[j]@@ ;k@@ ++; } } voidoutput@@ (inta[@@ 300@@ ]) { inti; for(i=0;i<@@ 300@@ ;i++) { if(a[i]!=0) {@@ printf("%d",a[i]); break;} } i++; for(i@@ ;i<@@ 300@@ ;i++) { if(a[i]!=0) {printf("%d",@@ a[i]);} } } voidmain() { intx,y,@@ a[@@ 300@@ ]={0},b[@@ 300@@ ]={0}; input@@ (@@ x,y,@@ a,b); row@@ (a@@ );@@ row@@ (@@ b); com@@ (a,b); output@@ (a); }  
c -1
h -1
0

intmain() { inta,b,@@ c,d,@@ e; scanf("%d%d%d",&a,&b,&c); if((@@ a%4==0&&a%100!=0@@ )||(@@ a%400==0)) d=@@ 29; else d=@@ 28; switch(@@ b){ case1: e=@@ c; break; case2: e@@ =31+c; break; case3: e@@ =31+@@ d@@ +c; break; case4: e=@@ 62@@ +d@@ +c; break; case5: e=@@ 92@@ +d@@ +c; break; case6: e=@@ 123@@ +d@@ +c; break; case7: e=@@ 153@@ +d@@ +c; break; case8: e=@@ 184@@ +d@@ +c; break; case9: e=@@ 215@@ +d@@ +c; break; case10: e=@@ 245@@ +d@@ +c; break; case11: e=@@ 276@@ +d@@ +c; break; case12: e=@@ 306@@ +d@@ +c; break; } printf("%d",@@ e); return0; }  
c -1
h -1
intmain() { inti=0,j=0,@@ k=0,@@ x=0,@@ y@@ =1,@@ a=0; float@@ n[@@ 20]; do{ i=0; j=0; k=0; x=0; y=1; do{ scanf("%d",&@@ n@@ [j]); if(n@@ [j]@@ ==0||@@ n@@ [j]==@@ -1)break; j++; }while(@@ j@@ <@@ 20@@ ); if(n@@ [j]==@@ -1)@@ return0; do{ do{ if(n@@ [x@@ ]==@@ n[@@ y@@ ]@@ *2@@ ||@@ n[@@ x@@ ]==@@ n[@@ y@@ ]@@ /2@@ )@@ i++; y++; }while(@@ y@@ <j@@ ); x++; y=@@ x@@ +1; }while(@@ x@@ <j@@ ); printf("%d\n",@@ i); }while(@@ a@@ <@@ 1); return0; }  
c -1
h -1
0

inta[@@ 201@@ ][@@ 201@@ ]; intmain() { intn,m; cin>>n>>m; memset(a,0,@@ sizeof(a)); for(inti=0;i<n;i++) for(intj=0;j<m;j++) cin>>*(*(a+i)+j); for(int@@ s=0;s@@ <@@ n+@@ m-1@@ ;s++) for(inti=0;i<=@@ s;i++) if(a[i]@@ [s@@ -i@@ ]@@ !=0)@@ cout<<a[i]@@ [s@@ -i@@ ]<<endl; }  
c -1
h -1
intmain() { intk,@@ a[100@@ ][2@@ ],@@ c@@ [100][100@@ ][100],@@ i,j,@@ p,@@ s@@ [100]; scanf("%d",&k); for(i=0;i<k;i++) { scanf("%d%d",&@@ a[i][0]@@ ,&@@ a[i]@@ [1]); for(j=0;j<@@ a[i][0]@@ ;j++) for(p=0;p@@ <@@ a[i][1]@@ ;p++) scanf("%d",&@@ c@@ [i][j]@@ [p@@ ]); } for(i=0;i<k;i++) { s[i]@@ =0; for(j=0;j<@@ a[i][1]@@ ;j++) s[i]@@ +=@@ c[i]@@ [0]@@ [j]; for(j=0;j<@@ a[i][1]@@ ;j++) s[i]@@ +=@@ c[i]@@ [@@ a[i][0]@@ -1][j]; for(j=1;j<@@ a[i][0]@@ -1;j++) s[i]@@ +=@@ c@@ [i][j]@@ [0]; for(j=1;j<@@ a[i][0]@@ -1;j++) s[i]@@ +=@@ c@@ [i][j]@@ [@@ a[i][1]@@ -1]; printf("%d\n",@@ s[i]); } return0; }  
c -1
h -1
0

intsum=0; void@@ divide@@ (intn,int@@ a) { for(inti=@@ a@@ ;i<=n;i++) { if((@@ n@@ %i==0)@@ ) { if(n@@ /i@@ ==1) sum++; else divide@@ (n/i,i); } } } intmain() { intN@@ =0,@@ n=0,@@ i=0; cin>>@@ N; for(i=0;i<N;i++) { cin>>n; divide@@ (n,@@ 2); cout<<sum<<endl; sum=0; } return0; }  
c -1
h -1
structstudent { intnum; intyuwen; intshuxue; }; intmain() { intn,m,@@ i,j,@@ t,@@ k; scanf("%d",&n); m=@@ n; structstudent*@@ stu@@ =(structstudent*)malloc(sizeof(@@ structstudent@@ )*n); int*@@ score@@ =@@ (int*)malloc(sizeof(int)@@ *@@ m); for(i=0;i<n;i++) { scanf("%d%d%d",&stu[i].num,&stu[i].@@ yuwen@@ ,&stu[i].@@ shuxue); score@@ [i]=@@ stu[i].@@ yuwen+stu[i].@@ shuxue; } for(i=0;i<3;i++) { for(j=0;j<@@ m-1@@ -i;j++) { if(@@ score@@ [j]>=@@ score@@ [j+1]) { t=@@ score@@ [j]; score@@ [j]=@@ score@@ [j+1]; score@@ [j+1]=t; k=@@ stu[j].@@ num; stu[j].@@ num=@@ stu[j+1].@@ num; stu[j+1].@@ num=@@ k; } } } for(i=n-1;i@@ >=@@ n-@@ 3@@ ;i--) { printf("%d%d\n",stu[i].@@ num,@@ score@@ [i]); } free(@@ stu@@ ); free(@@ score@@ ); return0; }  
c -1
h -1
0

intmain() { intn,i,j,k,@@ max; charname@@ [@@ 2000@@ ][@@ 30],@@ alp@@ [@@ 27@@ ]={@@ "@@ ABCDEFGHIJKLMNOPQRSTUVWXYZ@@ "@@ }; int@@ No@@ [@@ 2000@@ ],@@ num[@@ 30]={0}; scanf("%d",&n); for(i=0;i<n;i++){ scanf("%d%s",&@@ No@@ [i],@@ name@@ [i]); } for(i=0;i<26;i++){ for(k=0;k<n;k++){ for(j=0;j<strlen(@@ name@@ [k]@@ )@@ ;j++){ if(name@@ [k]@@ [j]==@@ alp@@ [i]){ num[i]@@ ++; break; } } } } max=@@ num[@@ 0]; for(i=1;i<@@ 26@@ ;i++){ if(num@@ [i]@@ >max){ max=@@ num[i]; } } for(i=0;i<26;i++){ if(num@@ [i]==@@ max@@ ){ printf("%c\n%d\n",@@ alp@@ [i],@@ max); for(k=0;k<n;k++){ for(j=0;j<@@ 27@@ ;j++){ if(name@@ [k]@@ [j]==@@ alp@@ [i]){ printf("%d\n",@@ No@@ [k]); break; } } } } } return0; }  
c -1
h -1
intmain() { ints[@@ 20],@@ i=1@@ ,j,@@ k,@@ d=0; charc; do{ while(@@ scanf("%d",&@@ s[i]@@ )) { c=@@ getchar(); if(c==@@ '\n@@ ') break; i++; } for(k=1;k<@@ i;k++) { for(j=k@@ +1@@ ;j<@@ i;j++) { if((@@ s@@ [k]==2*@@ s[j]@@ )||(@@ 2*@@ s@@ [k]==@@ s[j]@@ )) d++; } } if(s@@ [i]@@ >-@@ 1) printf("%d\n",@@ d); i=1; d=0; }while(@@ s[i]@@ >-@@ 1); return0; }  
c -1
h -1
0

intmain() { inti,@@ number; cin>>@@ number; for(i=0;i<@@ number@@ ;i++) { intm,n; cin>>m>>n; inta[100][100]; int*p=@@ NULL@@ ,*@@ q@@ =NULL@@ ,i; for(p@@ =*@@ a@@ ;p@@ <*@@ a+@@ n*@@ m@@ ;p++) { cin>>@@ *p; } intsum=0; for(p@@ =*@@ a@@ ;p@@ <*@@ a+@@ n;@@ p++) { sum=sum+*@@ p; } if(m@@ !=1) { for(p@@ =*@@ a+@@ (m@@ -1)*@@ n;@@ p@@ <*@@ a+@@ m*@@ n;@@ p++) { sum=sum+*@@ p; } } for(p@@ =*@@ a+@@ n;@@ p@@ <*@@ a+@@ (m@@ -1)*@@ n;@@ p=p+@@ n) { sum=sum+*@@ p@@ +*@@ (p@@ +n-1); } cout<<sum<<endl; } return0; }  
c -1
h -1
inta[@@ max@@ ],@@ k; int@@ find@@ (int@@ p) { inti,@@ temp@@ =0,@@ t; if(p==@@ k@@ -1)@@ return1; for(i=@@ p@@ +1;i<=@@ k-1;i++) { if(a[@@ p@@ ]>=@@ a[i]) { t=@@ find@@ (i); if(temp@@ <@@ t)@@ temp=@@ t; } } return@@ temp@@ +1; } main() { inti,j,@@ p=0,@@ t,@@ ans=0; scanf("%d",&k); for(i=0;i<=k-1;i++) scanf("%d",&a[i]); for(i=0;i<=k-1;i++) { t=@@ find@@ (i); if(@@ ans@@ <@@ t)@@ ans=@@ t; } printf("%d",@@ ans); }  
c -1
h -1
0

intmain(){ intn,k,@@ x; x=0; scanf("%d%d",&n,&k); intsz[@@ n]; for(inti=0;i<n;i++){ scanf("%d",&(sz[i]@@ )); } for(inti=0;i<n;i++){ for(int@@ a@@ =0;a@@ <n;@@ a++){ if(sz[i]@@ +@@ sz[a@@ ]==@@ k@@ &&i!=@@ a@@ ){@@ x@@ ++;} } } if(x@@ ==0){@@ printf("no");} else{@@ printf("yes");} }  
c -1
h -1
intmain(){ inti,@@ z@@ =0,@@ len1,len2@@ ; doublen; chara[500],b[500]; scanf("%lf%s%s",&@@ n,@@ a,b); len1@@ =strlen(a); len2@@ =strlen(b); if(len1!=@@ len2) printf("error"); else{ for(i=0;i<len1;i++){ if((a[i]!='@@ A'&&a[i]!='T'&&a[i]!='G'&&a[i]!='@@ C')||(@@ b[i]!='@@ A@@ ' &&@@ b[i]!='@@ T'&&b[i]!='@@ G'&&b[i]!='@@ C')){ printf("error"); z@@ =-1; break; } else{ if(a[i]==b[i]) z@@ +=1; } } if(z@@ >=0@@ ){ if((@@ 1.0*@@ z@@ /@@ len1@@ )>@@ n) printf("yes"); else printf("no"); } } return0; }  
c -1
h -1
0

intmain() { chars[@@ 257@@ ],@@ z[@@ 200],@@ h@@ [@@ 200],@@ t@@ [100]; int@@ lens@@ ,@@ lenz@@ ,@@ lenh@@ ,i,j,@@ sum,@@ r,@@ q=0,@@ p=0; gets(s); gets(@@ z); gets(@@ h); lens@@ =strlen(s); lenz@@ =strlen(@@ z); lenh@@ =strlen(@@ h); for(i=0;i<@@ lens@@ ;i++) { sum=0; for(j=0;j<@@ lenz@@ ;j++) { if(s@@ [i+j]==@@ z@@ [j]) { sum++; } else break; } if(sum@@ ==@@ lenz@@ ) { r@@ =i; q=1; break; } } if(q@@ ==1) { for(i=0;i<@@ r;i++) printf("%c",s[i]); printf("%s",@@ h); for(i=@@ r@@ +@@ sum@@ ;i<@@ lens@@ ;i++) printf("%c",s[i]); } elseif(@@ q@@ ==0) printf("%s",s); return0; }  
c -1
h -1
intmain() { inti,j,@@ t,@@ k; chars[256],@@ w@@ [256@@ ],c[@@ 256],@@ x@@ [256]; scanf("%s",@@ w); scanf("%s",s); scanf("%s",c); t@@ =strlen(s); for(i=0;@@ w@@ [i]!='\0';i++) { for(j=0;j<@@ t;j++) { x@@ [j]=@@ w@@ [i+j@@ ]; } x[j]@@ ='\0'; if(strcmp(@@ s,@@ x)@@ ==0) { for(k=0;k<@@ t@@ ;k++) { w@@ [i+k@@ ]=@@ c@@ [k]; } break; } } printf("%s",@@ w); return0; }  
c -1
h -1
1


intmain() { intn,@@ num,@@ a[@@ 20001]; cin>>n; for(inti=1;i<=n;i++) { cin>>num; a[i-1@@ ]=@@ num; if(i==1) cout<<@@ num; else { intj=0; while(j@@ <i@@ -1) { if(a[j]==@@ num) break; else j++; } if(j==@@ i@@ -1) cout<<""<<@@ num; } } cout<<endl; return0; }  
c -1
h -1
structstudent { intnumber; intmath; int@@ chin@@ ; intsum; }@@ st@@ [100000],@@ t; voidmain() { inti,j; intn; scanf("%d",&n); for(i=0;i<n;i++) { scanf("%d%d%d",&@@ st[i].@@ number@@ ,&@@ st[i].@@ math@@ ,&@@ st[i].@@ chin@@ ); st[i].@@ sum=@@ st[i].@@ math+@@ st[i].@@ chin@@ ; } for(i=0;i<3;i++) for(j=n@@ ;j@@ >=1@@ ;j--) if(@@ st@@ [j].@@ sum>@@ st@@ [j-1].@@ sum) { t=@@ st@@ [j-1]; st@@ [j-1]=@@ st@@ [j]; st@@ [j]=@@ t; } for(i=0;i<3;i++) printf("%d%d\n",@@ st[i].@@ number,@@ st[i].@@ sum); }  
c -1
h -1
0

intmain() { intn,k,i,j,@@ s,@@ t=0,@@ a[1000]; cin>>n>>k; for(i=0;i<n;i++) { cin>>a[i]; } for(i=0;i<n-1;i++) { for(j=1;j<n;j++) { s=@@ a[i]+a[j]; if(s@@ ==@@ k)@@ t=t+1; } } if(t@@ ==0)@@ cout<<"no@@ "<<endl; else@@ cout<<"yes@@ "<<endl; return0; }  
c -1
h -1
structstudent@@ {int@@ num;@@ int@@ a;@@ int@@ b@@ ;@@ int@@ c;@@ }; voidmain() { intn,i,j,@@ m,@@ t; structstudentstu[100000]; scanf("%d",&n); for(i=0;i<n;i++) {@@ scanf("%d%d%d",&stu[i].num,&stu[i].@@ a@@ ,&stu[i].@@ b); stu[i].@@ c=@@ stu[i].@@ a+@@ stu[i].@@ b@@ ;} for(i=0;i<3;i++) for(j=i+1;j<n;j++) { if(stu[i].@@ c@@ <@@ stu[j].@@ c){ t=@@ stu[i].@@ c;@@ stu[i].@@ c=@@ stu[j].@@ c;@@ stu[j].@@ c=@@ t; m=@@ stu[i].@@ num;@@ stu[i].@@ num=@@ stu[j].@@ num;@@ stu[j].@@ num=@@ m@@ ;} } for(i=0;i<3;i++) printf("%d%d\n",stu[i].@@ num,@@ stu[i].@@ c); }  
c -1
h -1
0

intmain(){ int@@ row@@ =0,@@ col@@ =0,@@ i=0,@@ j=0; cin>>row>>col; inta[@@ row][col]; for(i=0;i<row;i++) for(j=0;j<col;j++) cin>>*(*(a+i)+j); for(i=0;i<col;i++) for(j=0;j<=@@ i@@ &&j@@ <row@@ ;j++) cout<<*(*(a@@ +j)@@ +i-j@@ )<<endl; for(i=1;i<row;i++) for(j=0;j<row@@ -i@@ &&j@@ <@@ col;j++) cout<<*(*(a@@ +i@@ +j)@@ +col@@ -1-j@@ )<<endl; return0; }  
c -1
h -1
intmain() { inti=0,j=0,@@ k=0,@@ shuzu@@ [100][100],@@ hang@@ =0,@@ lie@@ =0,@@ zu@@ =0,@@ sum=0; scanf("%d",&@@ zu@@ ); for(i=0;i<@@ zu@@ ;i++) { scanf("%d%d",&@@ hang@@ ,&@@ lie@@ ); sum=0; for(j=0;j<@@ hang@@ ;j++) { for(k=0;k<@@ lie@@ ;k++) { scanf("%d",&@@ shuzu@@ [j]@@ [k]); } } for(k=0;k<@@ lie@@ ;k++) { sum=sum+@@ shuzu@@ [0][@@ k@@ ]; } if(@@ hang@@ >1) { for(k=0;k<@@ lie@@ ;k++) { sum=sum+@@ shuzu@@ [@@ hang@@ -1@@ ][k@@ ]; } } if(@@ hang@@ >2) { for(k=1;k<@@ hang@@ -1;k++) { sum=sum+@@ shuzu@@ [k@@ ][0]; } } if(@@ lie@@ >1@@ &&@@ hang@@ >2) { for(k=1;k<@@ hang@@ -1;k++) { sum=sum+@@ shuzu@@ [k@@ ][@@ lie@@ -1]; } } printf("%d\n",sum); } return0; }  
c -1
h -1
0

intmain(){ intk,m,n,i,j,@@ a; intsz@@ [100][100],@@ s; s=0; scanf("%d",&k); for(a=0;a@@ <k;@@ a++){ s=0; scanf("%d%d",&m,&n); for(i=0;i<m;i++){ for(j=0;j<n;j++) scanf("%d",&sz@@ [i][j]@@ );} for(i=0;i<m;i++){ for(j=0;j<n;j++) if(i==0||i==@@ m-1@@ ||j@@ ==0||j==@@ n-1) s=s+@@ sz@@ [i][j]@@ ;} printf("%d\n",s@@ );} return0; }  
c -1
h -1
intmain() { inti,j,@@ a,b,@@ n,@@ x=0,@@ y=0,@@ l1,l2,@@ q1@@ ,@@ q2@@ ,@@ s; scanf("%d",&n); for(i=1;i<=@@ n*@@ n;i++) { scanf("%d",&a); if(a==0) { x@@ =i; break;} } for(j=1;j<=@@ n*@@ n-@@ x;j++) { scanf("%d",&b); if(b@@ ==0) y=@@ x@@ +j@@ ; } l1@@ =@@ x/@@ n+1; if(x@@ %n@@ !=0) { l1@@ =@@ x/@@ n+1; q1=@@ x%@@ n; } else { l1@@ =@@ x/@@ n; q1=@@ n; } if(y%@@ n@@ !=0) { l2@@ =@@ y@@ /@@ n+1; q2@@ =@@ y%@@ n; } else {@@ l2@@ =@@ y@@ /n; q2@@ =@@ n; } s=(@@ l2@@ -@@ l1@@ -1)*(@@ q2@@ -@@ q1@@ -1); printf("%d",s); return0; }  
c -1
h -1
0

voidmain() { intr,@@ c@@ ,*@@ p@@ [100],@@ i,j,@@ v@@ ; for(i=0;i<100;i++) p[i]=@@ (int*)malloc(@@ 100*sizeof(int)); scanf("%d%d\n",&@@ r@@ ,&c); for(i=0;i<@@ r;i++) for(j=0;j<@@ c;j++) scanf("%d",@@ (p@@ [i]@@ +j)); for(@@ v@@ =0;@@ v@@ <=@@ r@@ +c@@ -2@@ ;@@ v@@ ++) { for(i=0;i<=@@ v@@ ;i++) { if(i<@@ r@@ ) { j=@@ v@@ -@@ i; if(j<@@ c)@@ printf("%d\n",*(p@@ [i]@@ +j)); } } } }  
c -1
h -1
voidmain() { int@@ sum_day@@ (int,int); intleap@@ (intyear@@ ); intyear,month,day,@@ days; scanf("%d%d%d",&year,&month,&day); days=@@ sum_day@@ (@@ month,@@ day); if(leap@@ (year@@ )&&@@ month@@ >=@@ 3) days=@@ days@@ +1; printf("%d",@@ days@@ ); } int@@ sum_day@@ (int@@ month@@ ,int@@ day@@ ) { int@@ day_tab@@ [13]={0,31,28,31,30,31,30,31,31,30,31,30,31}; inti; for(i=1;i<month;i++) day@@ +=@@ day_tab@@ [i]; return(@@ day); } intleap@@ (intyear@@ ) { intleap@@ ; leap@@ =@@ year%@@ 3@@ ==0&&@@ year%100!=0@@ ||@@ year%@@ 400==0@@ ; return(@@ leap@@ ); }  
c -1
h -1
0

intmain() { intn,k,@@ i,j; ints=0; scanf("%d%d",&n,&k); int*@@ pi@@ =@@ (int*)malloc(sizeof(int)*n); for(i=0;i<n;i++){ scanf("%d",@@ pi@@ +i); } for(i=0;i<n;i++){ for(j=i+1;j<n;j++){ if(*(@@ pi@@ +i)@@ +*(@@ pi@@ +j)@@ ==k){ s=s+1; } } } if(s@@ ==0){ printf("no"); } else{ printf("yes"); } free(@@ pi@@ ); return0; }  
c -1
h -1
intmain() { intnum[@@ 20000]; inti,j,k,@@ h; int@@ check@@ [@@ 20000]; intn; cin>>n; check@@ [0]@@ =0; for(i=0;i<n;i++) { cin>>num[i]; } for(j=1;j<n;j++) { check@@ [j]@@ =0; for(k=0;k<j@@ ;k++) { if(num@@ [j]==@@ num@@ [k]) { check@@ [j]@@ =1; break; } } } cout<<@@ num[@@ 0]; for(h@@ =1;@@ h@@ <n;@@ h++) { if(@@ check@@ [h@@ ]==0) cout<<""<<@@ num[@@ h@@ ]; } return0; }  
c -1
h -1
0

intsum=0; voidf@@ (intx,int@@ i) { double@@ m=@@ sqrt(@@ x); if(i<@@ m) { if(x%i==0) { sum++; f(@@ x@@ /i,i); } f(@@ x,@@ i@@ +1); } if(@@ fabs@@ (i@@ -@@ m)@@ <0@@ .@@ 00000001@@ ) sum++; } intmain() { int@@ x,@@ i,@@ n; scanf("%d",&n); for(i=0;i<n;i++) {@@ scanf("%d",&x); sum=0; f(@@ x,@@ 2); printf("%d\n",sum@@ +1); } return0; }  
c -1
h -1
intf(inta,int@@ min); intmain() { intn,i,@@ a; cin>>n; for(i=0;i<n;i++){ cin>>a; printf("%d\n",@@ f(a,@@ 2)@@ );} return0; } intf(inta,int@@ min) { if(a<@@ min@@ ){ return0;} int@@ result=1; for(inti=@@ min@@ ;i<@@ a;i++){ if(a@@ %i==0){ result+=@@ f(a@@ /i,@@ i@@ );}} returnresult; }  
c -1
h -1
1


structStudent { long@@ Id@@ ; intyuwen; intshuxue; }; intmain() { inti,j; long@@ n; structStudent@@ student[@@ NUM@@ ]; structStudent@@ temp; scanf("%ld@@ \n",&@@ n); for(i=0;i<n;i++) scanf("%ld%d%d",&@@ student[i].@@ Id@@ ,&@@ student[i].@@ yuwen@@ ,&@@ student[i].@@ shuxue); for(i=0;i<3;i++) { for(j=0;j<@@ (@@ 3@@ -i@@ -1)@@ ;j++) { if((@@ student@@ [j+1].@@ yuwen@@ +@@ student@@ [j+1].@@ shuxue@@ )>@@ (@@ student[j].@@ yuwen@@ +@@ student[j].@@ shuxue@@ )) { temp=@@ student@@ [j+1]; student@@ [j+1]=@@ student@@ [j]; student@@ [j]=temp; } } } for(i=@@ 3@@ ;i<n;i++) { if((@@ student[i].@@ yuwen@@ +@@ student[i].@@ shuxue@@ )>@@ (@@ student@@ [2].@@ yuwen@@ +@@ student@@ [2].@@ shuxue@@ )) { student@@ [2]=@@ student@@ [i]; } if((@@ student[i].@@ yuwen@@ +@@ student[i].@@ shuxue@@ )>@@ (@@ student@@ [1].@@ yuwen@@ +@@ student@@ [1].@@ shuxue@@ )) { temp=@@ student@@ [1]; student@@ [1]=@@ student@@ [i]; student@@ [2]=@@ temp; } if((@@ student[i].@@ yuwen@@ +@@ student[i].@@ shuxue@@ )>@@ (@@ student@@ [0].@@ yuwen@@ +@@ student@@ [0].@@ shuxue@@ )) { temp=@@ student@@ [0]; student@@ [0]=@@ student@@ [i]; student@@ [1]=@@ temp; } } for(i=0;i<3;i++) { printf("%ld%d\n",@@ student[i].@@ Id@@ ,@@ (@@ student[i].@@ shuxue@@ +@@ student[i].@@ yuwen@@ )); } return0; }  
c -1
h -1
structstudent { int@@ n1@@ ; int@@ n2; int@@ n3@@ ; structstudent*next; }; voidmain() { structstudent@@ *p,*@@ head,*@@ tail@@ ; intn,i,@@ sum[@@ 100000],@@ max1,@@ max2@@ ,max3@@ ,@@ k1@@ ,@@ k2@@ ,@@ k3@@ ; scanf("%d",&n); head@@ =NULL@@ ;@@ tail@@ =NULL; for(i=1;i<=n;i++) { p=@@ (@@ structstudent@@ *)malloc(len); scanf("%d%d%d",&@@ p->@@ n1,&@@ p->@@ n2@@ ,&p->@@ n3@@ ); if(head@@ ==NULL) head=@@ tail@@ =p; else { tail@@ ->next=p; tail@@ =p@@ ;} sum[i]=@@ p->@@ n2@@ +p->@@ n3@@ ; } max1=@@ sum@@ [1]@@ ;@@ k1@@ =1; for(i=1;i<=n;i++) if(sum[i]>@@ max1@@ ){@@ max1=@@ sum@@ [i];@@ k1@@ =i;} sum[@@ k1@@ ]=0; max2=@@ sum@@ [1]@@ ;@@ k2@@ =1; for(i=1;i<=n;i++) if(sum[i]>@@ max2@@ ){@@ max2=@@ sum@@ [i];@@ k2@@ =i;} sum[@@ k2@@ ]=0; max3=@@ sum@@ [1]@@ ;@@ k3@@ =1; for(i=1;i<=n;i++) if(sum[i]>@@ max3@@ ){@@ max3=@@ sum@@ [i];@@ k3@@ =i;} printf("%d%d\n%d%d\n%d%d\n",@@ k1@@ ,@@ max1,@@ k2@@ ,@@ max2@@ ,@@ k3@@ ,max3@@ ); }  
c -1
h -1
1


intmain() { chars[@@ 256]; chara[@@ 256]; char@@ t@@ [256]; charc; inti,@@ ls@@ ,j,@@ la@@ ,@@ lt@@ ,@@ g,@@ word@@ =0; scanf("%s",s); scanf("%s",a); scanf("%s",@@ t); ls@@ =strlen(s); la@@ =strlen(a); lt@@ =strlen(@@ t); for(i=0;i<@@ ls@@ ;i++){ if(@@ word@@ ==0){ g=0; if(s[i]==@@ a[0]@@ ){ g@@ ++; for(j=i+1;j<@@ i+@@ la@@ ;j++){ if(s@@ [j]==@@ a[@@ g@@ ]){ g@@ ++; } } if(g@@ ==@@ la@@ ){ word@@ =1; for(j=i;j<i+@@ la@@ ;j++){ s[j]=@@ t@@ [j-i@@ ]; } } } } } printf("%s",s); return0; }  
c -1
h -1
voidmain() { intk,@@ m,@@ i,j,@@ t; inta[@@ 26@@ ],b[@@ 26@@ ],c[@@ 26]; scanf("%d",&k); for(i=0;i<k;i++) scanf("%d",&a[i]); b[0]@@ =1; for(i=1;i<k;i++) for(j=0;j<i;j++) { if(a[i]<=@@ a[j]) c[j]=@@ b[j]@@ +1; else c[j]@@ =1; for(m@@ =j@@ ;m@@ >0@@ ;m@@ --) { if(@@ c[m@@ ]>=@@ c[@@ m-1@@ ]) { t=@@ c[@@ m-1@@ ]; c[@@ m-1@@ ]=@@ c[@@ m]; c[m@@ ]=t; } } b[i]=@@ c[@@ 0]; } for(i=k@@ -1@@ ;i>0;i--) if(b[i]@@ >=@@ b@@ [i-1@@ ]) { t=@@ b@@ [i-1]; b@@ [i-1@@ ]=b[i]; b[i]=@@ t; } printf("%d",@@ b[0]@@ ); }  
c -1
h -1
0

int@@ summer@@ (); intmain(void) { int@@ counter@@ ,@@ times@@ ,@@ patty@@ ; scanf("%d",&@@ times@@ ); for(@@ counter@@ =0;@@ counter@@ <@@ times@@ ;@@ counter@@ ++) { patty@@ =@@ summer@@ (); printf("%d\n",@@ patty@@ ); } return0; } int@@ summer@@ () { intm,n; int@@ line@@ ,@@ row; scanf("%d%d",&@@ line@@ ,&@@ row@@ ); int@@ fib@@ [@@ SIZE@@ ][@@ SIZEE@@ ]; for(m=0;m<@@ line@@ ;m++) { for(n=0;n@@ <row@@ ;n++) { scanf("%d",&@@ fib@@ [m@@ ][n@@ ]); } } intsum=0; inti; for(i=0;i<row;i++) { sum=sum+*(@@ (*@@ fib@@ )@@ +i)@@ +*(@@ *(@@ fib@@ +@@ line@@ -1)@@ +i); } for(i=1;i<@@ line@@ -1;i++) { sum=sum+*(@@ *(@@ fib@@ +i)@@ )@@ +*(@@ *(@@ fib@@ +i)@@ +row@@ -1); } returnsum; }  
c -1
h -1
int@@ Compare@@ (constvoid*@@ elem1@@ ,@@ constvoid*@@ elem2@@ ) { return@@ *(@@ (int*)@@ (@@ elem1@@ ))@@ -@@ *(@@ (int*)@@ (@@ elem2@@ )); } intmain() { int@@ M@@ ,@@ N; scanf("%d%d",&@@ M@@ ,&@@ N); inta[100],b[100]; inti; for(i=0;i<@@ M@@ ;i++) { scanf("%d",&a[i]); } qsort@@ (a,@@ M@@ ,@@ sizeof(int),@@ Compare@@ ); for(i=0;i<@@ M@@ ;i++) { printf(@@ ""@@ ); } for(i=0;i<N;i++) { scanf("%d",&b[i]); } qsort@@ (b,@@ N@@ ,@@ sizeof(int),@@ Compare@@ ); for(i=0;i<N;i++) { printf(@@ ""@@ ); } intc[@@ 200]; for(i=0;i<@@ M@@ ;i++) { c[i]=a[i]; } intj; for(j=0;j<@@ N@@ ;j++@@ ,i++) { c[i]=@@ b[j]; } for(i=0;i<@@ M@@ +@@ N@@ -1;i++) { printf("%d",c[i]); } printf("%d",c[i]); }  
c -1
h -1
0

intmain() { introw,col,@@ array@@ [100][100],@@ i,j,@@ m,n,@@ a=1; cin>>row>>col; for(i=0;i<row;i++) { for(j=0;j<col;j++) { cin>>array[i][j]; } } n=0; for(m=0;m@@ <col@@ ;m++) { j=@@ m; i=@@ n; do { if(i>=@@ row@@ ||j@@ <0@@ )break; cout<<array@@ [i][j]<<endl; i++; j--; }while(@@ 1); } for(n@@ =1;@@ n@@ <row@@ ;n++) { i=@@ n; j=col-1; do { if(i>=@@ row@@ ||j@@ <0@@ )break; cout<<array@@ [i][j]<<endl; i++; j--; }while(@@ 1); } return0; }  
c -1
h -1
intmain() { intk,@@ most@@ ; inta[@@ 25],@@ f@@ [25]; cin>>k; for(inti=0;i<k;i++) { cin>>a[i]; } f@@ [0]=1; for(inti=1;i<@@ k;i++) { most@@ =0; for(intj=0;j<i;j++) { if(a[j]>=@@ a[i]) { if(f@@ [j]>@@ most@@ ) { most@@ =@@ f@@ [j]; } } } f[i]=@@ most@@ +1; } most@@ =0; for(inti=0;i<k;i++) { if(f@@ [i]>@@ most@@ ) most@@ =@@ f[i]; } cout<<@@ most@@ <<endl; return0; }  
c -1
h -1
0

intmain() { intyear,month,day,@@ n=0,@@ i,@@ num=0; int@@ A[@@ 12]={31,@@ 28,31,30,31,30,31,31,30,31,30,31@@ }@@ , B@@ [@@ 12]={31,29,31,30,31,30,31,31,30,31,30,31}; scanf("%d%d%d",&year,&month,&day); if((year%4==0&&year%100!=0@@ )||@@ year%400==0) { for(i=0;i<month-1;i++) { n=n+@@ B@@ [i]; } num=@@ n+@@ day; printf("%d",@@ num); } else { for(i=0;i<month-1;i++) { n=n+@@ A@@ [i]; } num=@@ n+@@ day; printf("%d",@@ num); } return0; }  
c -1
h -1
intmain(intargc,char*argv[]) { structstudent{ int@@ ID,@@ Ch@@ ,@@ Ma@@ ; }@@ temp; int@@ fID@@ =0,@@ fG@@ =0,@@ sID@@ =0,@@ sG@@ =0,@@ tID@@ =0,@@ tG@@ =0; intn; scanf("%d",&n); inti; for(i=0;i<n;i++) { intsum=0; scanf("%d%d%d",&@@ temp.@@ ID,&@@ temp.@@ Ch@@ ,&@@ temp.@@ Ma@@ ); sum=@@ temp.@@ Ch@@ +@@ temp.@@ Ma@@ ; if(sum@@ ==@@ fG@@ ) { tG@@ =@@ sG@@ ; tID@@ =@@ sID@@ ; sG@@ =@@ sum; sID@@ =@@ temp.@@ ID; } if(sum@@ >@@ fG@@ ) { tG@@ =@@ sG@@ ; tID@@ =@@ sID@@ ; sG@@ =@@ fG@@ ; sID@@ =@@ fID@@ ; fG@@ =@@ sum; fID@@ =@@ temp.@@ ID; } if(sum@@ <@@ fG@@ &&@@ sum>@@ sG@@ ) { tG@@ =@@ sG@@ ; tID@@ =@@ sID@@ ; sG@@ =@@ sum; sID@@ =@@ temp.@@ ID; } if(sum@@ <@@ sG@@ &&@@ sum>@@ tG@@ ) { tG@@ =@@ sum; tID@@ =@@ temp.@@ ID; } } printf("%d%d\n",@@ fID@@ ,@@ fG@@ ); printf("%d%d\n",@@ sID@@ ,@@ sG@@ ); printf("%d%d\n",@@ tID@@ ,@@ tG@@ ); return0; }  
c -1
h -1
0

voidinput@@ (intx[],int@@ p); void@@ sort_ascending@@ (intx[],int@@ p); main() { intm,n,@@ a[@@ maxsize@@ ],b[@@ maxsize@@ ],@@ j,@@ i; scanf("%d%d",&m,&n); input@@ (a,m); input@@ (b,n); sort_ascending@@ (a,m); sort_ascending@@ (b,n); for(j=0;j<m;j++) printf("%d",@@ a[j]); for(i=0;i<n-1;i++) { printf("%d",b[i]); } printf("%d",b[@@ n-1]); } voidinput@@ (intx[],int@@ p) { inti; for(i=0;i<p@@ ;i++) scanf("%d",&@@ x[i]); } void@@ sort_ascending@@ (intx[],int@@ p) { inti,j,t; for(i=0;i<p@@ ;i++) for(j=0;j<@@ p@@ -i-1;j++) if(x@@ [j]>@@ x@@ [j+1]) { t=@@ x@@ [j]; x@@ [j]=@@ x@@ [j+1]; x@@ [j+1]=t; } }  
c -1
h -1
intmain() { intn,@@ s[@@ 1000][1000],@@ i,j,@@ a,b,c,d,@@ log@@ =0; scanf("%d",&n); for(i=0;i<n;i++) { for(j=0;j<n;j++) { scanf("%d",&s@@ [i][j]); } } for(i=0;i<n;i++) { for(j=0;j<n;j++) { if(s@@ [i][j]==0) { log@@ =1; a=i; b=j; break; } } if(@@ log@@ ) { break; } } log@@ =0; for(i=n-1;i>=0;i--) { for(j=n-1;j>=0;j--) { if(s@@ [i][j]==0) { log@@ =1; c=i; d=j; break; } } if(@@ log@@ ) { break; } } printf("%d",(@@ c-a-1)*(d-b@@ -1)); return0; }  
c -1
h -1
0

intmain() { inti,j,@@ t=0,@@ flag=0,@@ l; float@@ x; charstr@@ [2@@ ][100]; scanf("%@@ f@@ %s%s",&@@ x,@@ str@@ [0],@@ str@@ [1]); if(strlen(@@ str@@ [0]@@ )!=strlen(@@ str@@ [1]@@ )) flag=1; else { l=strlen(@@ str@@ [0]); for(i=0;i<l;i++) { if((@@ str@@ [0]@@ [i]!='A'&&@@ str@@ [0]@@ [i]!='T'&&@@ str@@ [0]@@ [i]!='C'&&@@ str@@ [0]@@ [i]!='G')@@ || (@@ str@@ [1]@@ [i]!='A'&&@@ str@@ [1]@@ [i]!='T'&&@@ str@@ [1]@@ [i]!='C'&&@@ str@@ [1]@@ [i]!='G')@@ ) { flag=1; break; } elseif(@@ str@@ [0]@@ [i]==@@ str@@ [1]@@ [i]) { t++; } } } if(flag==1) printf("error"); else { if(((@@ float)@@ t@@ /@@ strlen(@@ str@@ [1]@@ ))@@ >=@@ x) printf("yes"); else printf("no"); } return0; }  
c -1
h -1
voidmain() { intyear,month,day,@@ n,@@ i,j; for(j=1;j<=@@ 5@@ ;j++) { n=0; scanf("%d%d%d",&year,&month,&day); if((year%4==0&&year%100!=0@@ )||@@ year%400==0) { intdays@@ [@@ 12]={31,29,31,30,31,30,31,31,30,31,30,31}; for(i=0;i<month-1;i++) { n+=@@ days@@ [i]; } n+=@@ day; } else { intdays@@ [12]={31,28,31,30,31,30,31,31,30,31,30,31}; for(i=0;i<month-1;i++) { n+=@@ days@@ [i]; } n+=@@ day; } printf("%d\n",n); } }  
c -1
h -1
0

intmain() { intk,m,n,@@ i,@@ h,@@ l,@@ result=0; inta[@@ 101][101]; cin>>k; for(i=1;i<=k;i++) { cin>>m>>n; for(h@@ =1;@@ h@@ <=@@ m;@@ h++) { for(l=1;l@@ <=n;@@ l++) { cin>>@@ a[h@@ ][l@@ ]; } } for(l=1;l@@ <=n;@@ l++) { result=result+@@ a[1@@ ][l@@ ]+@@ a[m@@ ][l@@ ]; } for(@@ h=@@ 2;@@ h@@ <=@@ m-1@@ ;@@ h++) { result=result+@@ a[h@@ ][1@@ ]+@@ a[h@@ ][n]; } cout<<@@ result@@ <<endl; for(h@@ =1;@@ h@@ <=@@ m;@@ h++) { for(l=1;l@@ <=n;@@ l++) { a[h@@ ][l@@ ]=0; } } result=0; } return0; }  
c -1
h -1
intmain(intargc,char*argv[]) { intx,y,@@ z,@@ d; scanf("%d%d%d",&@@ x,&@@ y,&@@ z); if((x@@ %100!=0@@ &&@@ x%@@ 4@@ ==0)||(@@ x%@@ 100==0&&@@ x%@@ 400==0)@@ ){ switch(@@ y){ case1:@@ d=@@ z;break; case2:@@ d=@@ z@@ +31;break; case3:@@ d=@@ z@@ +31+29@@ ;break; case4:@@ d=@@ z@@ +31+29@@ +31;break; case5:@@ d=@@ z@@ +31+29@@ +31+30@@ ;break; case6:@@ d=@@ z@@ +31+29@@ +31+30@@ +31;break; case7:@@ d=@@ z@@ +31+29@@ +31+30+31+30@@ ;break; case8:@@ d=@@ z@@ +31+29@@ +31+30+31+30@@ +31;break; case9:@@ d=@@ z@@ +31+29@@ +31+30+31+30+31+@@ 31;break; case10:@@ d=@@ z@@ +31+29@@ +31+30+31+30+31+31+30@@ ;break; case11:@@ d=@@ z@@ +31+29@@ +31+30+31+30+31+31+30@@ +31;break; case12:@@ d=@@ z@@ +31+29@@ +31+30+31+30+31+31+30+31+30@@ ;break; default@@ : ; } } else{ switch(@@ y){ case1:@@ d=@@ z;break; case2:@@ d=@@ z@@ +31;break; case3:@@ d=@@ z@@ +31+28@@ ;break; case4:@@ d=@@ z@@ +31+28@@ +31;break; case5:@@ d=@@ z@@ +31+28@@ +31+30@@ ;break; case6:@@ d=@@ z@@ +31+28@@ +31+30@@ +31;break; case7:@@ d=@@ z@@ +31+28@@ +31+30+31+30@@ ;break; case8:@@ d=@@ z@@ +31+28@@ +31+30+31+30@@ +31;break; case9:@@ d=@@ z@@ +31+28@@ +31+30+31+30+31+@@ 31;break; case10:@@ d=@@ z@@ +31+28@@ +31+30+31+30+31+31+30@@ ;break; case11:@@ d=@@ z@@ +31+28@@ +31+30+31+30+31+31+30@@ +31;break; case12:@@ d=@@ z@@ +31+28@@ +31+30+31+30+31+31+30+31+30@@ ;break; default@@ : ; } } printf("%d\n",@@ d); return0; }  
c -1
h -1
0

intmain() { inti,j,k,@@ row,col; int(*p)@@ [100]; scanf("%d%d",&row,&col); p=@@ (int*)@@ calloc@@ (@@ 100@@ ,@@ 10@@ ); for(i=0;i<row;i++) for(j=0;j<col;j++) scanf("%d",*(p+i)+j); printf("%d\n",*(@@ *(p+@@ 0@@ )+@@ 0@@ )); j=1; i=0; for(@@ ;j<@@ col@@ ;) { k=j; while(j@@ >=0&&i@@ <row) { printf("%d\n",@@ *(*(p+i)@@ +j)); j=j-1; i=i+1; } j=@@ k@@ +1; i=0; } i=1; j=col-1; for(@@ ;i<@@ row@@ ;) { k=i; while(i@@ <row@@ &&j@@ >=0) { printf("%d\n",@@ *(*(p+i)@@ +j)); j=j-1; i=i+1; } i=@@ k@@ +1; j=col-1; } }  
c -1
h -1
intmain() { int@@ yn@@ ,@@ mn@@ ,@@ dn@@ ; int@@ result=0; scanf("%d%d@@ %d@@ "@@ ,&@@ yn@@ ,&@@ mn@@ ,&@@ dn@@ ); if(@@ yn@@ %4==0&&@@ yn@@ %100!=0@@ ||@@ yn@@ %@@ 400==0) { int@@ day_of_month@@ [@@ 13]={0,31,@@ 29@@ ,31,30,31,30@@ ,31,30@@ ,31@@ ,31,30@@ ,31@@ }; inti=1; while(i<@@ mn@@ ) { result=result+@@ day_of_month@@ [i]; i++; } result=result+@@ dn@@ ; } else { int@@ day_of_month@@ [@@ 13]={0,31,@@ 28@@ ,31,30,31,30@@ ,31,30@@ ,31@@ ,31,30@@ ,31@@ }; inti=1; while(i<@@ mn@@ ) { result=result+@@ day_of_month@@ [i]; i++; } result=result+@@ dn@@ ; } printf("%d@@ "@@ ,@@ result); return0; }  
c -1
h -1
0

intmain(){ char@@ X@@ [300]; char@@ Y@@ [100]; char@@ Z@@ [100]; gets(@@ X@@ ); gets(@@ Y@@ ); gets(@@ Z@@ ); intl,@@ l1,l2@@ ; l=strlen(@@ X@@ ); l1=strlen(@@ Y@@ ); l2=strlen(@@ Z@@ ); inti; int@@ A@@ =-1; for(i=0;i<l;i++){ if(@@ X@@ [i]==@@ Y@@ [0]@@ &&@@ X@@ [i+1@@ ]==@@ Y@@ [1]@@ &&@@ X@@ [i+@@ l1@@ -1@@ ]==@@ Y@@ [@@ l1@@ -1]@@ &&@@ X@@ [i+@@ l1@@ -2@@ ]==@@ Y@@ [@@ l1@@ -2@@ ]){ A@@ =i; break; } } if(A@@ !=@@ -1){ for(i=0;i<@@ A@@ ;i++){ printf("%c",@@ X@@ [i]); }@@ for(i=0;i<@@ l2@@ ;i++){ printf("%c",@@ Z@@ [i]); }@@ for(i=@@ A@@ +@@ l1@@ ;i<@@ l@@ ;i++){ printf("%c",@@ X@@ [i]); } }else{ for(i=0;i<l;i++){ printf("%c",@@ X@@ [i]); } } return0; }  
c -1
h -1
voidmain(){ intx[@@ 16@@ ],i,j,@@ g,@@ n,@@ m; for(j=0;@@ ;j++){ for(i=0,@@ n@@ =0;i<@@ 16@@ ;i++){ scanf("%d",&@@ x[i]); if(x@@ [i]@@ ==0)break; } if(x@@ [0]@@ ==-1)break; g@@ =i; for(i=0;i<@@ g@@ ;i++){ for(m=0;m<@@ g@@ ;m++){ if((@@ float)@@ x@@ [i]==@@ x@@ [m]@@ *2@@ )@@ n++; } } printf("%d\n",n); } }  
c -1
h -1
0

struct@@ info { short@@ intnum; charauthor@@ [27]; }; intmain() { char@@ findoutmax@@ (struct@@ info@@ a[@@ ],intn,@@ int*@@ pt@@ ); void@@ detect@@ (struct@@ info@@ b[@@ ],@@ char@@ writter@@ ,int@@ nn@@ ); char@@ figure@@ ; inti,@@ n_book@@ ,@@ max@@ ,*p; struct@@ info@@ book[999]; scanf("%d",&@@ n_book@@ ); for(i=0;i<@@ n_book@@ ;i++) { scanf("%d%s",&book[i].num,@@ &@@ book[i].author); } p@@ =&@@ max; figure@@ =@@ findoutmax@@ (@@ book@@ ,@@ n_book@@ ,@@ p); printf("%c\n%d\n",@@ figure@@ ,max); detect@@ (@@ book@@ ,@@ figure@@ ,@@ n_book@@ ); return0; } char@@ findoutmax@@ (struct@@ info@@ a[@@ ],intn,@@ int*@@ pt@@ ) { inti,j,@@ sum@@ [26]={0}; for(i=0;i<n;i++) { for(j=0;@@ a[i].@@ author@@ [j]!='\0';j++) { switch(@@ a[i].@@ author@@ [j]) { case'@@ A@@ ':sum[@@ 0]=@@ sum@@ [0]@@ +1@@ ;break; case'@@ B@@ ':@@ sum@@ [1]=@@ sum@@ [1]@@ +1@@ ;break; case'@@ C@@ ':@@ sum@@ [2]=@@ sum@@ [2]@@ +1@@ ;break; case'@@ D@@ ':sum[@@ 3@@ ]=sum[@@ 3@@ ]+1;break; case'@@ E@@ ':sum[@@ 4@@ ]=sum[@@ 4@@ ]+1;break; case'@@ F@@ ':sum[@@ 5@@ ]=sum[@@ 5@@ ]+1;break; case'@@ G@@ ':sum[@@ 6@@ ]=sum[@@ 6@@ ]+1;break; case'@@ H@@ ':sum[@@ 7@@ ]=sum[@@ 7@@ ]+1;break; case'@@ I@@ ':sum[@@ 8@@ ]=sum[@@ 8@@ ]+1;break; case'@@ J@@ ':sum[@@ 9@@ ]=sum[@@ 9@@ ]+1;break; case'@@ K@@ ':sum[@@ 10@@ ]=sum[@@ 10@@ ]+1;break; case'@@ L@@ ':sum[@@ 11@@ ]=sum[@@ 11@@ ]+1;break; case'@@ M@@ ':sum[@@ 12@@ ]=sum[@@ 12@@ ]+1;break; case'@@ N@@ ':sum[@@ 13@@ ]=sum[@@ 13@@ ]+1;break; case'@@ O@@ ':sum[@@ 14@@ ]=sum[@@ 14@@ ]+1;break; case'@@ P@@ ':sum[@@ 15@@ ]=sum[@@ 15@@ ]+1;break; case'@@ Q@@ ':sum[@@ 16@@ ]=sum[@@ 16@@ ]+1;break; case'@@ R@@ ':sum[@@ 17@@ ]=sum[@@ 17@@ ]+1;break; case'@@ S@@ ':sum[@@ 18@@ ]=sum[@@ 18@@ ]+1;break; case'@@ T@@ ':sum[@@ 19@@ ]=sum[@@ 19@@ ]+1;break; case'@@ U@@ ':sum[@@ 20@@ ]=sum[@@ 20@@ ]+1;break; case'@@ V@@ ':sum[@@ 21@@ ]=sum[@@ 21@@ ]+1;break; case'@@ W@@ ':sum[@@ 22@@ ]=sum[@@ 22@@ ]+1;break; case'@@ X@@ ':sum[@@ 23@@ ]=sum[@@ 23@@ ]+1;break; case'@@ Y@@ ':sum[@@ 24@@ ]=sum[@@ 24@@ ]+1;break; case'@@ Z@@ ':sum[@@ 25@@ ]=sum[@@ 25@@ ]+1;break; } } } j=0; for(i=1;i<26;i++) { if(sum@@ [j]<@@ sum@@ [i])@@ j=i; } *@@ pt@@ =@@ sum@@ [j]; return(@@ 65@@ +j); } void@@ detect@@ (struct@@ info@@ b[@@ ],@@ char@@ writter@@ ,int@@ nn@@ ) { inti,j; for(i=0;i<@@ nn@@ ;i++) { for(j=0;@@ b[i].@@ author@@ [j]!='\0';j++) { if(b[i].@@ author@@ [j]==@@ writter@@ ) { printf("%d\n",b[i].@@ num); } } } }  
c -1
h -1
intmain() { inta,b,c,@@ x; scanf("%d%d%d",&a,&b,&c); if(a%@@ 4==0&&a%100!=0@@ ||a%@@ 400==0) {@@ if(b==1) x=@@ c; elseif(b==@@ 2) x=31+@@ c; elseif(b==@@ 3) x=@@ 60@@ +c; elseif(b==@@ 4) x=@@ 91@@ +c; elseif(b==@@ 5) x=@@ 121@@ +c; elseif(b==@@ 6) x=@@ 152@@ +c; elseif(b==@@ 7) x=@@ 182@@ +c; elseif(b==@@ 8) x=@@ 213@@ +c; elseif(b==@@ 9) x=@@ 244@@ +c; elseif(b==@@ 10) x=@@ 274@@ +c; elseif(b==@@ 11) x=@@ 305@@ +c; elseif(b==@@ 12) x=@@ 335@@ +c; } else {@@ if(b==1) x=@@ c; elseif(b==@@ 2) x=31+@@ c; elseif(b==@@ 3) x=@@ 59@@ +c; elseif(b==@@ 4) x=@@ 90@@ +c; elseif(b==@@ 5) x=@@ 120@@ +c; elseif(b==@@ 6) x=@@ 151@@ +c; elseif(b==@@ 7) x=@@ 181@@ +c; elseif(b==@@ 8) x=@@ 212@@ +c; elseif(b==@@ 9) x=@@ 243@@ +c; elseif(b==@@ 10) x=@@ 273@@ +c; elseif(b==@@ 11) x=@@ 304@@ +c; elseif(b==@@ 12) x=@@ 334@@ +c; } printf("%d\n",x); return0; }  
c -1
h -1
0

int@@ s=0,@@ z=@@ 2; void@@ number@@ (intx,inty) { inti; if(x==1) { s=s+1; } for(i=y@@ ;i<=@@ x;i++) { if(x%i==0) { number@@ (x/i,i); } } } intmain() { intn,a,@@ i; cin>>n; for(i=1;i<=n;i++) { cin>>a; number@@ (a,@@ z); cout<<s<<endl; s=0; } }  
c -1
h -1
intmain(){ inti,j,@@ s,@@ m,n,@@ k; m=0; intx[@@ 1000],@@ a[@@ 1000],b[1000]; scanf("%d%d",&n,&k); for(i=0;i<n;i++) { scanf("%d",&@@ x[i]); } for(i=0;i<n-1;i++) {@@ for(j=i+1;j<n;j++) {@@ s=@@ x@@ [i]+@@ x@@ [j]; if(s@@ ==k) {@@ printf("yes"); m++; break;} } if(m@@ !=0) break;} if(m==0) printf("no"); return0; }  
c -1
h -1
0

intmain(){ intn,k,@@ a,b,@@ i,j,@@ s; intsz[@@ 2000]; scanf("%d%d",&n,&k); s=0; for(i=0;i<n;i++){ scanf("%d",&@@ sz[i]@@ );} for(i=0;i<n;i++){ for(j=i+1;j<@@ n@@ ;j++){@@ a=@@ sz[i]; b=@@ sz@@ [j]; if(a@@ +@@ b==@@ k){@@ s@@ ++;@@ }}} if(s@@ !=0@@ ){printf("yes");} else{printf("no");} return0; }  
c -1
h -1
main(){ introw,col,@@ i,j@@ ,*@@ p@@ [100]; scanf("%d%d",&row,&col); for(i=0;i<row;i++){ p[i]=@@ (int*)malloc(sizeof(int)@@ *@@ col); for(j=0;j<col;j++){ scanf("%d",@@ p[i]@@ +j); } } for(i=0;i<@@ row+col@@ ;i++){ for(j=i@@ ;j>=0;j--){ if(i@@ -j@@ >=@@ row@@ ||j@@ >=@@ col@@ )continue; else@@ printf("%d\n",*(p@@ [i-j@@ ]@@ +j)); } } }  
c -1
h -1
0

voidmain(){ inta[@@ 10000],@@ m,n,@@ k,i,j,@@ sum@@ ,*p; scanf("%d",&k); for(i=1;i<=k;i++) { sum=0; scanf("%d%d",&m,&n); p=a; if(m@@ *@@ n@@ >1) { for(j=0;j<m@@ *@@ n;j++) { scanf("%d",@@ p); p++; } for(p=@@ a@@ ;p<@@ a+@@ n;@@ p++) { sum=sum+@@ (*p@@ ); } for(p=@@ a+@@ n;@@ p@@ <=@@ a+@@ (m@@ -2@@ )*@@ n;@@ p=p+@@ n) { sum=sum+@@ (*p@@ ); } for(p=@@ a+@@ 2*@@ n-1@@ ;p<=@@ a+@@ (m@@ -1)*@@ n-1;@@ p=p+@@ n) { sum=sum+@@ (*p@@ ); } for(p=@@ a+@@ (m@@ -1)*@@ n;@@ p@@ <=@@ a+@@ m*@@ n-1@@ ;p++) { sum=sum+@@ (*p@@ ); } printf("%d\n",sum); } else { scanf("%d",@@ p); printf("%d",@@ *p@@ ); } } }  
c -1
h -1
intmain() { int@@ ac@@ [100][100],@@ i,j,k,@@ *p,@@ n,@@ a,b,@@ s; cin>>n; for(i=0;i<n;i++) { s=0; cin>>a>>@@ b; for(j=0;j<a@@ ;j++) for(k=0;k<@@ b@@ ;k++) cin>>@@ ac@@ [j]@@ [k]; for(j=0;j<a@@ ;j++) { if(j@@ ==0||j==@@ a@@ -1) for(p=@@ ac@@ [j]@@ ;p<@@ ac@@ [j]+@@ b@@ ;p++) s+=@@ *p; else { p=@@ ac@@ [j]; s=s+@@ *p@@ +@@ *(p+@@ b@@ -1); } } cout<<s<<endl; } return0; }  
c -1
h -1
1


intmain() { inti; doublea,@@ len,@@ cd@@ ,@@ s=0,@@ b=0,@@ c; chars1@@ [501],@@ s2@@ [501]; scanf("%lf",&a); scanf("%s@@ %s",&@@ s1@@ ,&@@ s2); len=strlen(@@ s1); cd@@ =strlen(@@ s2); if(@@ len@@ !=@@ cd@@ ) { printf("error"); } if(@@ len@@ ==@@ cd@@ ) { for(i=0;i<len;i++) { if((@@ s1@@ [i]=='A'||@@ s1@@ [i]=='T'||@@ s1@@ [i]=='C'||@@ s1@@ [i]=='@@ G')&&(@@ s2@@ [i]=='A'||@@ s2@@ [i]=='T'||@@ s2@@ [i]=='C'||@@ s2@@ [i]=='@@ G')) { b++; if(s1[i]==s2@@ [i]) { s++; } } } if(b==@@ len@@ ) { c=@@ s/@@ len; if(c@@ >@@ a) { printf("yes"); } else { printf("no"); } } if(b@@ !=@@ len@@ ) { printf("error"); } } return0; }  
c -1
h -1
structpatient { char@@ No@@ [10]; intage; }@@ p[@@ 101]; intmain() { intn,i,j; scanf("%d",&n); for(i=1;i<=n;i++) { scanf("%s%d",@@ p[i].@@ No@@ ,&@@ p[i].age); } structpatient@@ t; for(i=2;i<=n;i++) { if(p@@ [i].age>=60) { for(j=i@@ ;j>@@ 1@@ ;j--) { if(p@@ [j-1@@ ].age@@ <p@@ [j].age@@ ) { t=@@ p@@ [j-1]; p@@ [j-1]=@@ p@@ [j]; p@@ [j]=@@ t; } else break; } } } for(i=1;i<=n;i++) printf("%s\n",@@ p[i].@@ No@@ ); return0; }  
c -1
h -1
0

voidmain() { inti,j,n,@@ m,@@ a[100][100],@@ l; scanf("%d%d",&n,&m); for(i=0;i<100;i++) for(j=0;j<@@ 100@@ ;j++)@@ a[i][j]@@ =0; for(i=0;i<n;i++) for(j=0;j<m@@ ;j++)@@ scanf("%d",&a[i][j]); l=@@ n+@@ m; for(i=0;i<=@@ l@@ ;i++) { for(j=0;j<=i;j++) { if(j@@ <n@@ &&(@@ i@@ -j@@ )@@ <@@ m) printf("%d\n",@@ a[j][i-j@@ ]); } } }  
c -1
h -1
voidmain() { introw,col,@@ i,j; scanf("%d%d",&row,&col); int@@ **@@ a; a=@@ (int@@ **@@ )@@ malloc(@@ row@@ *sizeof(int@@ *@@ )); for(i=0;i<row;i++) a[i]=@@ (int*)malloc(@@ col@@ *sizeof(int)); for(i=0;i<row;i++) { for(j=0;j<col;j++) scanf("%d",@@ *(a+i)@@ +j); } int@@ len; for(@@ len@@ =0;@@ len@@ <row@@ +col@@ -1;@@ len@@ ++) { for(i=0;i<row;i++) { j=@@ len@@ -@@ i; if((@@ j@@ <col@@ )&&(@@ j@@ >=0@@ )) printf("%d\n",@@ *(*(a+i)@@ +@@ len@@ -i@@ )); } } return0; }  
c -1
h -1
1


int@@ ana@@ (intn,int@@ p) { inti; intt,@@ s=1; t=@@ pow@@ (n,@@ 0@@ .@@ 5@@ ); for(i=@@ p@@ ;i<=@@ t;i++) if(n%i==0) s=s+@@ ana@@ (n/i,i); return@@ s; } intmain() { intn; inta[100]; inti; cin>>n; for(i=0;i<n;i++) cin>>a[i]; for(i=0;i<n;i++) cout<<@@ ana@@ (a[i],@@ 2)<<endl; return0; }  
c -1
h -1
intnum[@@ 100000],@@ n,@@ i,j,k,@@ m,@@ l; intmain() { cin>>n; for(i=0;i<n;i++) { cin>>num[i]; } for(j=0;j<n-1;j++) for(k=j+1;k<@@ n;k++) { if(num@@ [j]==@@ num@@ [k]) {@@ num@@ [k]@@ =0;} } for(m@@ =0,@@ l@@ =0;m@@ <n;m++) { if(@@ num[m@@ ]>=@@ 10) { l++; if(l@@ ==1){@@ cout<<@@ num[m@@ ];} else{@@ cout<<""<<@@ num[m@@ ];} } }@@ cin>>@@ i; return0; }  
c -1
h -1
0

voidmain() { intn,@@ i=0,@@ k=0,@@ t=0; inta[@@ 90000@@ ]={0}; scanf("%d",&n); for(i=0;i<n;i++) scanf("%d",&a[i]); printf("%d",a[0]); for(k=1;k<@@ n;k++) {@@ t=0; for(i=0;i<k;i++) { if(a[k@@ ]==@@ a[i]) t=1; } if(t==0) printf("%d",@@ a[k]); } }  
c -1
h -1
structstudent { int@@ no; intyuwen; intshuxue; inttotal; }; voidmain() { intn,i; structstudent@@ *p,*@@ stu@@ ,@@ temp; scanf("%d",&n); stu@@ =(structstudent@@ *)@@ calloc@@ (n,@@ sizeof(@@ structstudent)); for(p=@@ stu@@ ;p@@ -@@ stu@@ <n;p++) { scanf("%d%d%d",&@@ p->@@ no@@ ,&p->@@ yuwen@@ ,&p->@@ shuxue); p->@@ total=@@ p->@@ yuwen@@ +p->@@ shuxue; } for(i=0;i<3;i++) { for(p=@@ stu@@ +@@ n-1@@ ;p@@ >@@ stu@@ +i@@ ;p@@ --) { if(p->@@ total>@@ (p@@ -1)@@ ->@@ total) { temp@@ =*@@ p; *p@@ =*(p@@ -1); *(p@@ -1)@@ =temp; } } printf("%d%d\n",@@ p->@@ no@@ ,@@ p->@@ total); } free(@@ stu@@ ); }  
c -1
h -1
0

intmain(){ inta[@@ ROW@@ ][@@ COL@@ ]; ints=0; intm,n,@@ k; scanf("%d",&k); for(intt@@ =1;t@@ <=k;@@ t++){ scanf("%d%d",&m,&n); for(int@@ q@@ =0;q@@ <m;@@ q@@ ++){ for(intp@@ =0;p@@ <n;@@ p++){ scanf("%d",&@@ a[q@@ ][p@@ ]); } } int@@ col@@ =0,@@ row@@ =0; for(col@@ ;col@@ <n;col@@ ++){ s=s+@@ a[@@ row][col]; } col@@ =0; for(row@@ ;@@ row@@ <m;@@ row++){ s=s+@@ a[@@ row][col]; } row@@ =@@ m-1@@ ; col@@ =0; for(col@@ ;col@@ <n;col@@ ++){ s=s+@@ a[@@ row][col]; } col@@ =@@ n-1; row@@ =0; for(row@@ ;@@ row@@ <m;@@ row++){ s=s+@@ a[@@ row][col]; } s=s@@ -@@ a[0][0]@@ -@@ a[m-1][@@ n-1]-@@ a[0][@@ n-1]-@@ a[m-1][@@ 0]; printf("%d\n",s); s=0; } return0; }  
c -1
h -1
int@@ leapyear@@ (intyear@@ ) { if((@@ year%@@ 4==0)&&(@@ year%100!=0@@ )||(year%400==0)) return1; else return0; } intmain() { inta[@@ 12@@ ]; inti,@@ Year@@ ,@@ Month@@ ,@@ Day@@ ,@@ date@@ =0; scanf("%d%d%d",&@@ Year@@ ,&@@ Month@@ ,&@@ Day@@ ); if(@@ leapyear@@ (@@ Year@@ )@@ ==1) { inta[@@ 12]={31,29,31,30,31,30,31,31,30,31,30,31}; for(i=0;i<(@@ Month@@ -1);i++) date@@ =@@ date+@@ a[i]; date@@ =@@ date+@@ Day@@ ; printf("%d\n",@@ date@@ ); } elseif(@@ leapyear@@ (@@ Year@@ )@@ ==0) { inta[@@ 12]={31,28,31,30,31,30,31,31,30,31,30,31}; for(i=0;i<(@@ Month@@ -1);i++) date@@ =@@ date+@@ a[i]; date@@ =@@ date+@@ Day@@ ; printf("%d\n",@@ date@@ ); } }  
c -1
h -1
0

struct@@ info { intnum; char@@ data@@ [10]; struct@@ info@@ *next; int@@ tip@@ ; }; struct@@ info@@ *@@ create@@ (intn) { struct@@ info@@ *@@ p1,*@@ pre@@ ,*@@ p2@@ ,*@@ head,*@@ tail@@ ; inti,@@ t; head=(struct@@ info@@ *)malloc(sizeof(struct@@ info@@ )); p1=(struct@@ info@@ *)malloc(sizeof(struct@@ info@@ )); scanf("%s%d",p1->@@ data@@ ,&p1->@@ num); head@@ ->next@@ =p1; p1->next=NULL; tail@@ =p1; i=0; while(i<@@ n-1) { t=0; p1=(struct@@ info@@ *)malloc(sizeof(struct@@ info@@ )); scanf("%s%d",p1->@@ data@@ ,&p1->@@ num); p1->next=NULL; if(@@ p1->num@@ >=60) { for(@@ pre@@ =@@ head,@@ p2=@@ head@@ ->next@@ ;@@ p2@@ !=NULL@@ &&@@ p2->@@ num@@ >=60@@ ;@@ pre@@ =@@ pre@@ ->next@@ ,@@ p2=@@ p2->next@@ ) { if(@@ p2->@@ num@@ <@@ p1->num@@ ) { pre@@ ->next@@ =p1; p1->next@@ =p2; t=1; break; } } if(t==0) { pre@@ ->next@@ =p1; p1->next@@ =p2; if(@@ p2@@ ==NULL) {@@ tail@@ =p1;} } } else { tail@@ ->next@@ =p1; tail@@ =p1; } i++; } returnhead; } voidprint(struct@@ info@@ *head) { struct@@ info@@ *p; p=head->next; while(p!=NULL) { printf("%s\n",p->@@ data@@ ); p=p->next; } } intmain() { intn; struct@@ info@@ *@@ head; scanf("%d",&n); head=@@ create@@ (n); print(head); }  
c -1
h -1
structstudent {int@@ ID; int@@ ch; int@@ ma; }; voidmain() {@@ structstudent@@ re@@ [N]; intn; inti=0,j=0,@@ rec@@ ; int@@ total@@ [N]; scanf("%d",&n); for(i=0;i<n;i++) {@@ scanf("%d%d%d",&@@ re@@ [i].@@ ID,&@@ re@@ [i].@@ ch@@ ,&@@ re@@ [i].@@ ma@@ ); total@@ [i]=@@ re@@ [i].@@ ch@@ +@@ re@@ [i].@@ ma; } intmax=@@ total@@ [0]; for(i=0;i<n;i++) {@@ if(max<@@ total@@ [i]) {max=@@ total@@ [i]; rec@@ =i; } if(i==@@ n-1) {@@ printf("%d%d\n",@@ re@@ [@@ rec@@ ].ID,@@ total@@ [@@ rec@@ ]); total@@ [@@ rec@@ ]=0; i=0; max=@@ total@@ [0]; j++; } if(j==@@ 3) break; } }  
c -1
h -1
0

struct@@ SHU { int@@ bh@@ ; char@@ bz@@ [26]; }; intmain() { intm,i,j,@@ l,@@ k,@@ p; int@@ name@@ [@@ 200@@ ]={0},@@ max,@@ shuhao@@ [1000]; struct@@ SHU@@ shu@@ [1000]; scanf("%d",&m); for(i=0;i<m;i++) { scanf("%d%s",&@@ shu[i].@@ bh@@ ,@@ shu[i].@@ bz@@ ); } for(i=0;i<m;i++) { l=strlen(@@ shu[i].@@ bz@@ ); for(j=0;j<l;j++) { name@@ [@@ shu[i].@@ bz@@ [j]@@ ]++; } } max=@@ name@@ [0]; for(i=0;i<@@ 200@@ ;i++) { if(name@@ [i]>max) { max=@@ name@@ [i]; k=i; } } p=0; for(i=0;i<m;i++) { for(j=0;j<26;j++) { if(@@ shu[i].@@ bz@@ [j]==k) { shuhao@@ [p@@ ]=@@ shu[i].@@ bh@@ ; p++; } } } printf("%c\n",@@ k); printf("%d\n",max); for(i=0;i<p@@ ;i++) { printf("%d\n",@@ shuhao@@ [i]); } return0; }  
c -1
h -1
voidmain() { struct@@ data { intnumber; intchinese; intmath; inttotal; }@@ student[@@ 100000],@@ temp; long@@ n,@@ i,j; scanf("%ld",&n); for(i=0;i<n;i++) { scanf("%d%d%d",&@@ student[i].@@ number@@ ,&@@ student[i].@@ chinese@@ ,&@@ student[i].@@ math); student[i].@@ total=@@ student[i].@@ chinese+@@ student[i].@@ math; } for(i=0;i<3;i++) for(j=i+1;j<n;j++) if(@@ student[i].@@ total@@ <@@ student[j].@@ total) { temp.@@ number=@@ student[i].@@ number; temp.@@ chinese@@ =@@ student[i].@@ chinese; temp.@@ math@@ =@@ student[i].@@ math; temp.@@ total=@@ student[i].@@ total; student[i].@@ number=@@ student[j].@@ number; student[i].@@ chinese@@ =@@ student[j].@@ chinese; student[i].@@ math@@ =@@ student[j].@@ math; student[i].@@ total=@@ student[j].@@ total; student[j].@@ number=@@ temp.@@ number; student[j].@@ chinese@@ =@@ temp.@@ chinese; student[j].@@ math@@ =@@ temp.@@ math; student[j].@@ total=@@ temp.@@ total; } for(i=0;i<3;i++) printf("%d%d\n",@@ student[i].@@ number,@@ student[i].@@ total); }  
c -1
h -1
0

intmain() { introw,col,@@ k,@@ i,j; cin>>row>>col; intarray[@@ row][col]; for(i=0;i<row;i++) for(j=0;j<col;j++) cin>>array[i][j]; int(*p)@@ [@@ col@@ ]; p=@@ array@@ ; cout<<@@ **@@ p@@ <<endl; for(k=1;k<=@@ row+col-2@@ ;k++) for(i=0,j@@ =k@@ -i@@ ;i<@@ row@@ ;i++,j--) { if(i@@ >=0&&i@@ <row@@ &&j>=0@@ &&j@@ <col) cout<<@@ *(*(p+i)@@ +j)<<endl; } return0; }  
c -1
h -1
intmain(intargc,char*argv[]) { inti,@@ k; while(1){ intsz[@@ 16]; int@@ add@@ =0; for(i=0;i<16@@ ;i++){ scanf("%d",&sz[i]); if(sz[i]@@ ==0||@@ sz@@ [i]==@@ -1){ break; } } if(sz@@ [0]==@@ -1){ break; }@@ for(i@@ ;i<@@ 16@@ ;i++){ sz[i]@@ =0; } for(i=0;i<16@@ ;i++){ for(k=0;k<@@ 16@@ ;k++){ if(sz@@ [k]@@ !=0&&@@ sz@@ [k]==2*@@ sz[i]@@ ){ add@@ =@@ add@@ +1; } } } printf("%d\n",@@ add@@ ); } return0; }  
c -1
h -1
0

voidmain() { intn,m,@@ i,j,k,@@ t,@@ max=0; inta[@@ 1000],b[@@ 26]={0}; chars[@@ 1000][@@ 30]; charc; scanf("%d",&n); for(i=0;i<n;i++) scanf("%d%s",&a[i],@@ s[i]); for(i=0;i<n;i++) { m=strlen(@@ s[i]); for(j=0;j<m;j++) { t=@@ s@@ [i][j]@@ -65@@ ; b[t@@ ]++; } } for(i=0;i<26;i++) if(b[i]@@ >=@@ max@@ )max=@@ b[i]; for(i=0;i<26;i++) { if(b[i]==@@ max) { k=i; c@@ =i+65; printf("%c\n",@@ c); printf("%d\n",max); } } for(i=0;i<n;i++) { m=strlen(@@ s[i]); for(j=0;j<m;j++) if(s@@ [i][j]==@@ 65@@ +k)@@ printf("%d\n",a[i]); } }  
c -1
h -1
intmain() { inta[@@ 1000][@@ 1000@@ ]={@@ {@@ 0},{@@ 0@@ }@@ },@@ i,j,@@ n,@@ m=0,@@ p=0,@@ q; scanf("%d",&n); for(i=1;i<=n;i++) { for(j=1;j<=n;j++) { scanf("%d",&@@ a[i-1]@@ [j-1]); } printf("\n"); } for(i=1@@ ;m@@ ==0@@ ;i++) { for(j=1;j<=n;j++) { if(a@@ [i-1]@@ [j-1]@@ ==0) m++; } } for(i=1@@ ;p@@ ==0@@ ;i++) { for(j=1;j<=n;j++) { if(a@@ [j-1]@@ [i-1]@@ ==0) p++; } } q@@ =(@@ p@@ -2)*(@@ m@@ -2); printf("%d\n",@@ q); return0; }  
c -1
h -1
0

intmain() { chara[@@ 250@@ ],b[@@ 150@@ ],c[@@ 150@@ ]; cin>>a>>@@ b@@ >>@@ c; if(@@ strstr@@ (a,@@ b@@ )==@@ NULL@@ ) { cout<<@@ a; return0; } char*@@ p=@@ strstr@@ (a,b); inti=0; while(@@ c[i]@@ !='\0') { *p@@ ++=@@ c[i]; i++; } cout<<@@ a; return0; }  
c -1
h -1
intmain() { inti,j,@@ s,@@ n; scanf("%d",&n); inta[n]; for(i=0;i<n;i++) { scanf("%d",&a[i]); } for(i=0;i<n;i++) { if(i==0) {printf("%d",@@ a[0]@@ );} else { for(j=0;j<=i-1;j++) { if(a[j]==a[i]) { a[i]=0; break; } } if(a[i]@@ ) {printf("%d",@@ a[i]);} } } printf("\n"); getchar(); getchar(); getchar(); return0; }  
c -1
h -1
0

intmain() { intm,n,@@ i,@@ t@@ ,j; inta[@@ 2][@@ 1000]; scanf("%d%d",&m,&n); for(i=0;i<m;i++) scanf("%d",&@@ a[0]@@ [i]); for(i=0;i<n;i++) scanf("%d",&@@ a[1]@@ [i]); for(j=0;j<m-1;j++) for(i=0;i<m@@ -1-j;i++) if(a[0]@@ [i]>@@ a[0]@@ [i+1]) { t=@@ a[0][i]; a[0]@@ [i]=@@ a[0]@@ [i+1]; a[0]@@ [i+1]=@@ t; } for(j=0;j<n-1;j++) for(i=0;i<n@@ -1-j;i++) if(@@ a[1]@@ [i]>@@ a[1]@@ [i+1]) { t=@@ a[1]@@ [i]; a[1]@@ [i]=@@ a[1]@@ [i+1]; a[1]@@ [i+1]=@@ t; } for(i=0;i<m;i++) printf("%d",@@ a[0]@@ [i]); for(i=0;i<n-1;i++) printf("%d",@@ a[1]@@ [i]); printf("%d\n",@@ a[1@@ ][@@ n-1]); }  
c -1
h -1
intmain() { inti,j,@@ l,@@ k,@@ s,@@ t; inta[@@ 100000@@ ]={0},b[@@ 100000]; for(i=0;i<@@ 100000@@ ;i++) { cin>>a[i]; if(a[i]==-1) break; } s=0; for(i=0;i<@@ 100000@@ ;i++) { t=0; for(j=0;j<@@ 10000@@ ;j++) { b[j]=@@ a[@@ s@@ ]; s++; if(b[j]@@ ==0) { for(k=0;k<=@@ j@@ ;k++) for(l@@ =k@@ +1;@@ l@@ <=j@@ ;l++) if((@@ b[k@@ ]==2*@@ b[l@@ ]@@ )||(@@ b[l@@ ]==2*@@ b[k@@ ]@@ )) t++; cout<<t@@ <<endl; break; } } if(a[@@ s@@ ]==@@ -1) break; } return0; }  
c -1
h -1
0

structpatient { charid@@ [11]; intage; }@@ pat@@ [100]; intmain() { intn,i; scanf("%d",&n); for(i=0;i<n;i++){ scanf("%s%d",@@ pat[i].@@ id,@@ &@@ pat@@ [i].age); } int@@ temp=0; structpatient@@ e; for(i=0;i<n;i++){ if(pat@@ [i].age>=60){ e=@@ pat@@ [i]; intj; for(j=i@@ ;j@@ >=@@ temp@@ +1@@ ;j--){ pat@@ [j]=@@ pat@@ [j-1]; } pat@@ [@@ temp@@ ]=@@ e; temp@@ ++; } } intk; for(k=1;k<=@@ temp@@ ;k++){ for(i=0;i<@@ temp@@ -@@ k;i++){ if(pat@@ [i].age@@ <@@ pat@@ [i+1@@ ].age){ e=@@ pat@@ [i]; pat@@ [i]=@@ pat@@ [i+1]; pat@@ [i+1]=@@ e; } } } for(i=0;i<n;i++){ printf("%s\n",@@ pat@@ [i].id); } return0; }  
c -1
h -1
voidmain() { inta[@@ 27@@ ],b[@@ 27@@ ],@@ n,@@ i,j,k; scanf("%d",&k); for(i=1;i<=k;i++) scanf("%d",&a[i]); for(i=1;i<=@@ k@@ +1;i++) b[i]=0; for(i=k@@ ;i>=1;i--) { for(j=i+1;j<=@@ k@@ +1@@ ;j++) { if(a[i]>=@@ a[j]&&@@ b[j]@@ >=@@ b[i]) b[i]=b[j]+1; } } n=0; for(i=1;i<=k;i++) { if(b[i]>@@ n) n=@@ b[i]; } if(k==@@ 25@@ ) printf("%d\n",n@@ +1); else@@ printf("%d\n",n); }  
c -1
h -1
0

intmain() { intn=0; inth@@ [25]; cin>>n; inti=0; for(i=n-1;i>=0;i--) { cin>>@@ h@@ [i]; } int@@ d[@@ 25]; d@@ [0]=1; intj=0; intmax=0; for(i=1;i<n;i++) { max=0; for(j=0;j<i;j++) { if(max<@@ d@@ [j]&&@@ h@@ [i]>=@@ h@@ [j]) { max=@@ d@@ [j]; } } d[i]=@@ max+1; } max=0; for(i=0;i<n;i++) { if(d@@ [i]>max) max=@@ d[i]; } cout<<max<<endl; return0; }  
c -1
h -1
intmain() { inta[@@ 15],@@ i=1@@ ,j@@ ,k@@ ,*@@ p,@@ count=0; scanf("%d",&a[0]); while(@@ a[0]@@ !=-1) { for(i=1;;i++) { scanf("%d",&a[i]); if(a[i]==0) break; } p=a; for(j=0;j<i;j++) { for(k=0;k<i;k++) { if(p@@ [j]==@@ p@@ [k]@@ *2) count++; } } printf("%d\n",@@ count); count=0; scanf("%d",&a[0]); } return0; }  
c -1
h -1
0

intmain() { intn,k; cin>>n>>k; int@@ data@@ [@@ 1001]; for(inti=0;i<n;i++) cin>>@@ data@@ [i]; for(inti=0;i<n;i++) for(intj=0;j<i;j++) if(@@ data@@ [i]+@@ data@@ [j]==k) { cout<<"yes@@ "<<endl; return0; } cout<<"no@@ "<<endl; return0; }  
c -1
h -1
voidmain() {@@ inta[@@ 999]; intb[@@ 999]; intc[@@ 999@@ ]={0}; intm,n,@@ i,@@ s; voidread@@ (int@@ arr_1@@ [],int@@ arr_2@@ [],int@@ x,int@@ y); voidf@@ (int@@ arr_1@@ [],int@@ arr_2@@ [],int@@ x,int@@ y); voidcombine@@ (int@@ arr_1@@ [],int@@ arr_2@@ [],int@@ arr_3@@ [],int@@ x,int@@ y); scanf("%d%d",&m,&n); read@@ (a,b,m,n); f@@ (a,b,m,n); combine@@ (a,b,@@ c,@@ m,n); s=@@ m+@@ n; for(i=0;i<@@ s;i++) {@@ if(i<@@ s@@ -1) printf("%d",c[i]); else printf("%d\n",@@ c[i]@@ );} } voidread@@ (int@@ arr_1@@ [],int@@ arr_2@@ [],int@@ x,int@@ y) {@@ inti,j; for(i=0;i<=@@ x@@ -1;i++) scanf("%d",&@@ arr_1@@ [i]); for(j=0;j<=@@ y@@ -1;j++) scanf("%d",&@@ arr_2@@ [j]@@ );} voidf@@ (int@@ arr_1@@ [],int@@ arr_2@@ [],int@@ x,int@@ y) {@@ inti,j,t; for(j=0;j<@@ x@@ -1;j++) for(i=0;i<x@@ -j@@ -1;i++) if(@@ arr_1@@ [i]>@@ arr_1@@ [i+1]) { t=@@ arr_1@@ [i]; arr_1@@ [i]=@@ arr_1@@ [i+1]; arr_1@@ [i+1]=@@ t;} for(j=0;j<@@ y@@ -1;j++) for(i=0;i<@@ y@@ -j@@ -1;i++) if(@@ arr_2@@ [i]>@@ arr_2@@ [i+1]) { t=@@ arr_2@@ [i]; arr_2@@ [i]=@@ arr_2@@ [i+1]; arr_2@@ [i+1]=@@ t@@ ;}} voidcombine@@ (int@@ arr_1@@ [],int@@ arr_2@@ [],int@@ arr_3@@ [],int@@ x,int@@ y) {@@ intk; for(k=0;k<=@@ x@@ -1;k++) arr_3@@ [k]=@@ arr_1@@ [k]; for(k=@@ x@@ ;k<=@@ x+@@ y@@ -1;k++) arr_3@@ [k]=@@ arr_2@@ [k@@ -x@@ ]; }  
c -1
h -1
0

intmain() { intsz[100][100]; inta,b,@@ row,col,@@ i; scanf("%d%d",&a,&b); for(row=0;row@@ <@@ a;@@ row++) { for(col=0;col@@ <b@@ ;col@@ ++) { scanf("%d",&@@ sz[row][col@@ ]); } } for(i=0;i<b;i++) { for(col@@ =i;@@ col@@ >=0@@ &&(@@ i@@ -col@@ )@@ <@@ a;@@ col@@ --) { printf("%d\n",sz@@ [i-@@ col@@ ][col@@ ]); } } for(i=b@@ ;i<@@ a+@@ b;i++) { for(col@@ =@@ b@@ -1;@@ col@@ >=0@@ &&(@@ i@@ -col@@ )@@ <@@ a;@@ col@@ --) { printf("%d\n",sz@@ [i-@@ col@@ ][col@@ ]); } } return0; }  
c -1
h -1
intmain() { inta[16@@ ],i,j,@@ n,@@ count; while(1) { count=0; i=0; while(1) { cin>>@@ a[i@@ ++@@ ]; if(a@@ [i-1]@@ ==0||@@ a[0]@@ ==-1) break; } n@@ =i-1; if(a[0]==-1) break; for(i=0;i<n-1;i++) for(j=i+1;j<n;j++) { if(a[i]@@ *2==@@ a[j]||@@ a[j]@@ *2==@@ a[i]) count++; } cout<<count<<endl; } return0; }  
c -1
h -1
0

intsum=0; voidf@@ (inta,int@@ s) { inti; if(a==1) sum++; else { for(i=@@ s@@ ;i<=a;i++) { if(a%i==0) f(@@ (a@@ /i@@ ),@@ i); } } return; } intmain() { intn,@@ num,@@ j; cin>>n; for(j=1;j<=n;j++) { cin>>num; f(@@ num,@@ 2); printf("%d\n",sum); sum=0; } return0; }  
c -1
h -1
intmain() { inti,j,@@ a,@@ c,@@ e,@@ x,@@ b,@@ d,@@ h; intk,@@ n; intm[@@ 1000],@@ t; scanf("%d%d",&n,&@@ x); for(i=1;i<=n;i++){ scanf("%d",&@@ m[i]); } for(i=1;i<=n;i++){ for(j=i+1;j<=@@ n;j++){ if(m@@ [i]@@ +m@@ [j]==@@ x) goto@@ A@@ ; } } A@@ : if(i==@@ n@@ +1)@@ printf("no"); else@@ printf("yes"); return0; }  
c -1
h -1
0

intmain() { intn,@@ ROW@@ [100],@@ COL@@ [100],@@ row,col,@@ a[100][100],@@ s=0,@@ i; scanf("%d",&n); for(i=0;i<n;i++){ scanf("%d%d",&@@ ROW@@ [i],&@@ COL@@ [i]); for(row=0;row@@ <ROW@@ [i];@@ row++){ for(col=0;col@@ <@@ COL@@ [i];@@ col@@ ++){ scanf("%d",&a[@@ row][col@@ ]); } } for(col=0;col@@ <@@ COL@@ [i];@@ col@@ ++){ s=s+@@ a[0][@@ col@@ ]+@@ a[@@ ROW@@ [i]@@ -1@@ ][col@@ ]; } for(row@@ =1;@@ row@@ <ROW@@ [i]@@ -1;@@ row++){ s=s+@@ a[@@ row@@ ][0]+@@ a[@@ row@@ ][@@ COL@@ [i]@@ -1]; } printf("%d\n",s); s=0; } return0; }  
c -1
h -1
intmain() { intn,i,j,k,@@ m,@@ t=0; cin>>n; intN@@ [@@ 20000]; int@@ M@@ [@@ 90@@ ]={0}; for(i=0;i<n;i++) cin>>@@ N@@ [i]; for(j=0;j<n;j++) { for(k=0;k<j@@ ;k++) {if(@@ N@@ [j]==@@ N@@ [k]@@ )@@ break;} if(k==@@ j) {@@ M@@ [t@@ ]=@@ N@@ [j]@@ ;t@@ ++;} } for(m=0;m<@@ t@@ -1@@ ;m++) cout<<@@ M@@ [m]@@ <<""; cout<<@@ M@@ [t@@ -1]@@ <<endl; return0; }  
c -1
h -1
0

intmain(){ double@@ a; scanf("%lf",&a); char@@ x[@@ 1000],@@ y@@ [1000]; scanf("%s%s",@@ x,@@ y); int@@ l=strlen(@@ x@@ ),@@ k=0,@@ o@@ =strlen(@@ y); if(l@@ !=@@ o@@ ){ printf("error"); return0; } for(inti=0;i<@@ l@@ ;i++){ if(!@@ (x@@ [i]=='A'||@@ x@@ [i]=='T'||@@ x@@ [i]=='G'||@@ x@@ [i]=='@@ C')){ printf("error"); return0; } if(!@@ (y@@ [i]=='A'||@@ y@@ [i]=='T'||@@ y@@ [i]=='G'||@@ y@@ [i]=='@@ C')){ printf("error"); return0; } if(x@@ [i]==@@ y@@ [i]){ k++; } } if(1.0*@@ k/@@ l>@@ a){ printf("yes"); }else{ printf("no"); } return0; }  
c -1
h -1
intmain() { inti,j,k,@@ num; double@@ a[@@ 16]; do { for(i=0;i<=@@ 15;i++) { a[i]=0; } num=0; for(i=0;i<=@@ 15;i++) { cin>>a[i]; if(a[i]@@ ==0||@@ a[0]@@ ==-1) { break; } } if(a[0]==-1) { break; } for(j=0;j<=i-1;j++) { for(k=j+1@@ ;k<=@@ i-1;k++) { if(a[j]==2*@@ a[k]@@ ||@@ a[j]==@@ a[k]@@ /2@@ .0@@ ) { num=num@@ +1; } } } cout<<num<<endl; } while(@@ 1); return0; }  
c -1
h -1
0

intmain() { intm@@ =1,@@ i=0,@@ n=0,@@ j=0,@@ k=0; cin>>m; inta[@@ 20000@@ ]={0}; cin>>a[0]; cout<<a[0]; for(i=1;i<m;i++) { cin>>a[i]; k=1; for(j=0;j<i;j++) { if(a[i]==a[j]) { k=0; break; } } if(k==1) cout<<""<<a[i]; } return0; }  
c -1
h -1
intmain() { int@@ a=0,b=0,@@ n,@@ l,@@ w,@@ s; inti,j; intf@@ [1000][1000]; scanf("%d",&n); for(i=0;i<n;i++) { a=0; for(j=0;j<n;j++) { scanf("%d",&@@ f@@ [i][j]); if(f@@ [i][j]@@ ==0)@@ a=@@ a@@ +1; } if(a@@ >@@ 2)@@ l=@@ a; } for(j=0;j<n;j++) { b=0; for(i=0;i<n;i++) { if(f@@ [i][j]@@ ==0)@@ b=b@@ +1; } if(b@@ >@@ 2)@@ w=@@ b; } s=(@@ l@@ -2)*(@@ w@@ -2); printf("%d\n",s); return0; }  
c -1
h -1
0

intmain(){ intn,m,@@ i,k,@@ s; m=0; intsz[@@ LEN@@ ],@@ p[@@ LEN@@ ]; scanf("%d%d",&n,&k); for(i=0;i<n;i++){ scanf("%d",&sz[i]); p@@ [m]=@@ sz[i]; m++; } for(i=0;i<n;i++){ for(m=0;m@@ <n;m++){ s=@@ sz[i]@@ +p@@ [m]; if(s@@ ==k){ break; } } if(s@@ ==k){ break; } } if(i==@@ n){ printf("no"); } else{ printf("yes"); } return0; }  
c -1
h -1
voidmain() { inta[@@ 30@@ ],b[@@ 30],@@ i,j,k,@@ n,@@ m=1; scanf("%d",&n); for(i=1;i<=n;i++) { scanf("%d",&a[i]); b[i]=1; } for(i=n-1@@ ;i>=1;i--) { for(j=i+1;j<=n;j++) { if(a[i]>=@@ a[j]&&@@ b[i]@@ <@@ b[j]@@ +1) b[i]=b[j]+1; } if(b[i]>@@ m) m=@@ b[i]; } printf("%d",m); }  
c -1
h -1
0

intmain() { intn,k,i,j,@@ a[1000],@@ m=0; scanf("%d%d",&n,&k); for(i=0;i<n;i++) { scanf("%d",&a[i]); } for(i=0;i<n;i++) { for(j=0;j<n;j++) { if(a[i]+a[j]==@@ k@@ &&i!=@@ j) { printf("yes"); m++; break; } if(i==@@ n-2@@ &&j@@ ==@@ n-1) { printf("no"); m++; break; } } if(m==1) { break; } } return0; }  
c -1
h -1
intmain() { inta[@@ 100000],@@ i,j,k,@@ h,@@ g,@@ n,@@ sign@@ ; for(i=1;;i++) { cin>>a[i]; if(a[i]==-1) break; } for(j=1;j<=@@ i-1;j++) { if(a[j]@@ ==0) { for(k=j@@ -1@@ ;k@@ >=1@@ ;k--) { if(a[k]@@ ==0) { break; } } sign@@ =0; for(@@ h=@@ k@@ +1;@@ h@@ <j@@ ;@@ h++) { for(@@ g=@@ k@@ +1;@@ g@@ <j@@ ;@@ g@@ ++) { if(a[@@ h@@ ]==2*@@ a[@@ g@@ ]) sign@@ ++; } } cout<<@@ sign@@ <<endl; } } return0; }  
c -1
h -1
0

inta[100],b[100]; intm,n; void@@ insert@@ (void) { inti; scanf("%d%d",&m,&n); for(i=0;i<m;i++) scanf("%d",&a[i]); for(i=0;i<n;i++) scanf("%d",&b[i]); } voidpaixu@@ (int*@@ p1,int*p2@@ ) { inti,j; inttemp; for(j=1;j<@@ m;j++) for(i=0;i<m-1;i++) if((@@ *(@@ p1@@ +i)@@ )>@@ (*(@@ p1@@ +i@@ +1)@@ )) { temp@@ =*(@@ p1@@ +i); *(@@ p1@@ +i)@@ =*(@@ p1@@ +i@@ +1); *(@@ p1@@ +i@@ +1)@@ =temp; } for(j=1;j<n;j++) for(i=0;i<n-1;i++) if(*(@@ p2@@ +i)@@ >*@@ (@@ p2@@ +i@@ +1@@ )) { temp@@ =*(@@ p2@@ +i); *(@@ p2@@ +i)@@ =*(@@ p2@@ +1@@ +i); *(@@ p2@@ +i@@ +1)@@ =temp; } } voidhebing@@ () { inti; for(i=0;i<n;i++) a[m@@ +i]=b[i]; } voidoutput@@ () { inti; printf("%d",a[0]); for(i=1;i<@@ m+n;i++) printf("%d",a[i]); } voidmain() { insert@@ (); paixu@@ (a,b); hebing@@ (); output@@ (); }  
c -1
h -1
intmain() { int@@ A[@@ 12]={31,28,31,30,31,30,31,31,30,31,30,31}; inta,b,c,@@ i,@@ y=0; scanf("%d%d%d",&a,&b,&c); for(i=0;i<b@@ -1;@@ ) { y=@@ y@@ +@@ A@@ [i]; i++; } y=@@ y@@ +c; if(a%@@ 4@@ ==0@@ &@@ a%100!=0@@ ||a%@@ 400==0) { if(b@@ <=@@ 2) { printf("%d",@@ y); } else { y=@@ y@@ +1; printf("%d",@@ y); } } else printf("%d",@@ y); return0; }  
c -1
h -1
0

intmain() { struct@@ writer { intnum; charname@@ [20]; struct@@ writer@@ *next; }; inti,j,k,l,@@ m,@@ z@@ [26]={0},@@ max,@@ n; struct@@ writer@@ *@@ p1,*p2,*@@ p,*@@ head; scanf("%d",&n); head@@ =p1@@ =p2@@ =(struct@@ writer@@ *)malloc(sizeof(struct@@ writer@@ )); scanf("%d%s",&@@ p1->num,&p1->@@ name); for(i=0;i<n-1;i++) { p1=(struct@@ writer@@ *)malloc(sizeof(struct@@ writer@@ )); scanf("%d%s",&@@ p1->num,&p1->@@ name); p2->next=p1; p2=p1; } p=head; for(i=0;i<26;i++) { p=head; for(j=0;j<n;j++) { for(k=0;k<@@ 20@@ ;k++) { if(p->@@ name@@ [k]==@@ (char)@@ (i@@ +65@@ )) { z@@ [i]++; } } p=p->next; } } max=@@ z@@ [0]; j=0; for(i=0;i<26;i++) { if(max<@@ z@@ [i]) { max=@@ z@@ [i]; j=i; } } printf("%c\n%d\n",@@ 65@@ +j@@ ,max); p=head; for(i=0;i<n;i++) { for(k=0;k<@@ 20@@ ;k++) { if(p->@@ name@@ [k]==@@ (char)(@@ 65@@ +j@@ )) { printf("%d\n",p->num); break; } } p=p->next; } }  
c -1
h -1
voidmain() {@@ inta[@@ 200][@@ 200],@@ n,m,@@ j,@@ i,@@ k; for(i=0;i<@@ 200@@ ;i++) for(j=0;j<@@ 200@@ ;j++) a[i][j]@@ =-@@ 32767@@ ; scanf("%d%d",&m,&n); for(i=0;i<m;i++) for(j=0;j<n;j++) scanf("%d",&a[i][j]); for(k=0;k<@@ m+@@ n-1;k++) for(i=k@@ ;i>=0;i--) {if(@@ a[k@@ -i@@ ]@@ [i]!=@@ -@@ 32767@@ ) printf("%d\n",@@ a[k@@ -i@@ ]@@ [i]);} }  
c -1
h -1
0

intmain(){ doublea,@@ g; intb,@@ c,@@ i,j,@@ d,@@ e,@@ k,@@ f=0; scanf("%lf",&a); char@@ zfc1@@ [500],@@ zfc2@@ [500]; scanf("%s%s",@@ zfc1@@ ,@@ zfc2@@ ); b=strlen(@@ zfc1@@ ); c=strlen(@@ zfc2@@ ); for(i=0;i<b;i++){ if(@@ zfc1@@ [i]=='A'||@@ zfc1@@ [i]=='T'||@@ zfc1@@ [i]=='G'||@@ zfc1@@ [i]=='@@ C'){ d@@ =0;} else{@@ d@@ =1;@@ break;}} for(j=0;j<@@ c@@ ;j++){ if(@@ zfc2@@ [j]=='@@ A'||@@ zfc2@@ [j]=='@@ T'||@@ zfc2@@ [j]=='@@ G'||@@ zfc2@@ [j]=='@@ C'){ e@@ =0;} else{@@ e@@ =1;@@ break;}} if(b@@ !=@@ c@@ ||@@ e@@ ==1||@@ d@@ ==1){@@ printf("error@@ \n@@ ");} else{@@ for(k=0;k<@@ b@@ ;k++){ if(@@ zfc1@@ [k]==@@ zfc2@@ [k]@@ ){@@ f@@ ++;@@ }} g=@@ f@@ *1.0/@@ b; if(g@@ >@@ a@@ ){@@ printf("yes@@ \n@@ ");} else{@@ printf("no@@ \n@@ ");} } return0; }  
c -1
h -1
intmain() { inti=0,@@ s,@@ n; intl,@@ r; scanf("%d",&n); if(n@@ <=@@ 10) { int@@ cancel@@ [10@@ ][10]; for(l=0;l<n;l++) { for(r=0;r@@ <n;@@ r++) { scanf("%d",&@@ cancel@@ [l@@ ][@@ r@@ ]); } } int@@ r1@@ ,@@ r2@@ ,@@ l1,l2@@ ; for(i=0,@@ l@@ =0;@@ l@@ <n;@@ l++) { for(i=0,@@ r=0;r@@ <n;@@ r++) { if(@@ cancel@@ [l@@ ][@@ r@@ ]==0) { l1@@ =@@ l; r1@@ =@@ r; i=1; break; } } if(i==1) { break; } } for(l=0;l<n;l++) { for(r=0;r@@ <n;@@ r++) { if(@@ cancel@@ [l@@ ][@@ r@@ ]==0) { l2@@ =@@ l; r2@@ =@@ r; } } } s=(@@ l2@@ -@@ l1@@ -1)*(@@ r2@@ -@@ r1@@ -1); printf("%d",s); } return0; }  
c -1
h -1
0

intmain() { inti,j,k; introw,col; int@@ matrix@@ [100@@ *@@ 100@@ ]; scanf("%d%d",&@@ row,@@ &@@ col); for(i=0;i<row;i++){ for(j=0;j<col;j++){ scanf("%d",@@ matrix@@ +i@@ *@@ 100@@ +j); } } for(i=0;i<@@ col@@ ;i++){ for(j=i,@@ k@@ =0@@ ;j>=0@@ &&k@@ <row@@ ;j--@@ ,k@@ ++){ printf("%d\n",*(@@ matrix@@ +k@@ *@@ 100@@ +j)); } } for(i=1;i<@@ row;i++){ for(j=col-1@@ ,k@@ =i@@ ;j>=0@@ &&k@@ <row@@ ;j--@@ ,k@@ ++){ printf("%d\n",*(@@ matrix@@ +k@@ *@@ 100@@ +j)); } } return0; }  
c -1
h -1
structstudent {intnum; int@@ yu@@ ; int@@ shu; int@@ score; structstudent*next; }; voidmain() { intn,i,@@ max; structstudent*@@ p1,*p2,*head; p1=@@ p2=@@ head=NULL; scanf("%d",&n); for(i=0;i<n;i++) { p1@@ =(structstudent*)malloc(sizeof(structstudent)); scanf("%d%d%d",&p1->num,&p1->@@ yu@@ ,&p1->@@ shu); p1->@@ score@@ =p1->@@ yu@@ +p1->@@ shu; if(i==0)@@ head=p1; elsep2->next=p1; p2=p1; } p2->next=NULL; for(i=0;i<3;i++) { p2@@ =p1@@ =head; max=@@ p1->@@ score; while(p1!=NULL) { if(p1->@@ score@@ >max){max=@@ p1->@@ score@@ ;@@ p2@@ =p1;} p1=p1->next; } printf("%d%d\n",@@ p2->@@ num,@@ max); p1=head; while(@@ p1->next@@ !=@@ p2@@ ) { p1=p1->next; } p1->next=@@ p2->next; } }  
c -1
h -1
0

int@@ j=@@ 2; int@@ kinds@@ (intx@@ ){ intsum@@ =1; if(x@@ ==1)@@ return0; for(inti@@ =j@@ ;i<=sqrt(@@ x@@ );i++) if(x%i==0) { sum+=@@ kinds@@ (x@@ /i); j@@ =i+1; } returnsum; } intmain(){ intn=0; cin>>n; for(inti=0;i<n;i++) { int@@ x=0; cin>>x; cout<<@@ kinds@@ (x@@ )<<endl; j=@@ 2; } return0; }  
c -1
h -1
intmain() { intk; scanf("%d",&k); intm,n; inta[100][100]; inti; intj; int@@ e; intsum@@ [100]={0}; for(e@@ =0;e@@ <k;@@ e++) { scanf("%d%d",&m,&n); for(i=0;i<m;i++) { for(j=0;j<n;j++) { scanf("%d",&a[i][j]); } } for(j=0;j<n;j++) { sum[@@ e@@ ]=sum[@@ e@@ ]+@@ a[0][j]; } for(i=1;i<m;i++) { sum[@@ e@@ ]=sum[@@ e@@ ]+@@ a[i][n-1]; } for(j=@@ n-2@@ ;j>=0;j--) { sum[@@ e@@ ]=sum[@@ e@@ ]+@@ a[m-1][j]; } for(i=m@@ -2@@ ;i>0;i--) { sum[@@ e@@ ]=sum[@@ e@@ ]+@@ a[i][0]; } } for(e@@ =0;e@@ <k;@@ e++) { printf("%d\n",@@ sum[@@ e@@ ]); } return0; }  
c -1
h -1
0

voidout@@ (int,int); int@@ t=1; intmain() { intn=0; inti=0; double@@ sum=0; cin>>n; for(i=1;i<=n;i++) { cin>>@@ sum; out@@ (@@ sum,@@ 2@@ .0@@ ); cout<<t@@ <<endl; t=1; } cin>>@@ i; return0; } voidout@@ (int@@ sum@@ ,int@@ q) { intnum=0; double@@ m=@@ sum; num=@@ sqrt(@@ m); if(sum@@ %@@ q@@ ==0&&@@ q@@ <=@@ num) { t++; out@@ (@@ sum/@@ q,@@ q); out@@ (@@ sum,@@ q@@ +1); } if(sum@@ %@@ q@@ !=0&&@@ q@@ <=@@ num) out@@ (@@ sum,@@ q@@ +1); }  
c -1
h -1
intmain() { int@@ s,@@ start1@@ ,@@ start2@@ ,@@ end1@@ ,@@ end2@@ ,@@ n,@@ sz@@ [100][100]; scanf("%d",&n); int@@ flag=0; start1@@ =0; start2@@ =0; end1@@ =0; end2@@ =0; for(inti=0;i<n;i++) for(intj=0;j<n;j++) { scanf("%d",&sz[i][j]); if(sz@@ [i][j]==0&&@@ flag@@ ==0) { flag=1; start1@@ =i+1; start2@@ =j+1; } if(sz@@ [i][j]==0) { end1@@ =i; end2@@ =j; } } s=(@@ end1@@ -@@ start1@@ )*(@@ end2@@ -@@ start2@@ ); printf("%d\n",s); return0; }  
c -1
h -1
0

intmain() { intn,k; scanf("%d%d",&n,&k); inta[@@ 1000],@@ i=1; for(i=1;i<=n;i++) scanf("%d",&a[i]); int@@ ceshi@@ =0; int@@ x1@@ ,j@@ =1; for(j=1;j<=@@ n-1;j++) { for(@@ x1@@ =@@ n;@@ x1@@ >=@@ j@@ +1;@@ x1@@ --) { if(a[j]@@ +@@ a[@@ x1@@ ]==@@ k) { ceshi@@ =1; } } } if(@@ ceshi@@ ==1) printf("yes"); else printf("no"); return0; }  
c -1
h -1
intmain() { introw,col; cin>>row>>col; inta[100][100]; for(inti=0;i<row;i++) for(intj=0;j<col;j++) cin>>*(*(a+i)+j); for(inti=0;i<@@ col;i++) for(intj=0;j<@@ row@@ &&j@@ <=@@ i;j++) cout<<*(*(a@@ +j)@@ +i-j@@ )<<endl; for(inti=1;i<@@ row;i++) for(intj@@ =0;@@ col-1@@ -j@@ >=0&&i@@ +j@@ <row@@ ;j++) cout<<*(*(a@@ +i@@ +j)@@ +col@@ -1-j@@ )<<endl; return0; }  
c -1
h -1
0

intmain(){ double@@ r,@@ t; inti,k,@@ u@@ ,@@ z; z=0; u@@ =0; chara[@@ 500]; charb[@@ 500]; scanf("%lf",&@@ r); scanf("%s",a); scanf("%s",b); for(i=0;a[i]@@ !='\0';i++){ if(a[i]!='@@ A'&&a[i]!='T'&&a[i]!='G'&&a[i]!='@@ C'){ printf("error"); z=1; break; } if(@@ b[i]!='A'&&b[i]!='T'&&b[i]!='G'&&b[i]!='@@ C'){ printf("error"); z=1; break; } if(b[i]==@@ '\0'@@ ){ printf("error"); z=1; break; } } if(b[i]@@ !=@@ '\0@@ '&&@@ z@@ ==0){ printf("error"); } elseif(@@ z@@ ==0){ for(k=0;k<@@ i@@ ;k++){ if(a[k@@ ]==@@ b[k@@ ]){ u@@ =@@ u@@ +1; } } t@@ =1.0*@@ u@@ /@@ i; if(t@@ >@@ r@@ ){ printf("yes"); } if(t@@ <=@@ r@@ ){ printf("no"); } } return0; }  
c -1
h -1
intmain() { int@@ func@@ (char@@ c); inti,j,@@ a,@@ m,@@ num; chars1@@ [300],@@ s2@@ [300],@@ s3@@ [300]; scanf("%s%s%s",@@ s1,@@ s2,@@ s3); m=strlen(@@ s1); a=strlen(@@ s2); for(i=0;i<m;i++) { for(j=0;j<a@@ ;j++) { if(s2@@ [j]!=@@ s1@@ [i+j@@ ]) break; } if(j==@@ a) { for(j=0;j<a@@ ;j++) s1@@ [i+j@@ ]=0; break; } }@@ if(j!=@@ a) { printf("%s\n",@@ s1); return0; } for(i=0;i<m;i++) { if(s1@@ [i]!=0) printf("%c",@@ s1[i]); if(s1@@ [i]==0) { num@@ =i; printf("%s",@@ s3); break; } } for(j=@@ num@@ +@@ a;@@ func@@ (@@ s1@@ [j]@@ );j++) printf("%c",@@ s1@@ [j]); printf("\n"); return0; } int@@ func@@ (char@@ c) { if(c==@@ '\0') return0; else@@ return1; }  
c -1
h -1
0

intmain() { intt; cin>>t; inta[100][100]; intsum; int@@ n[@@ 200]; int@@ g; ints[@@ 200]; for(@@ g@@ =0;@@ g@@ <=@@ t@@ -1;@@ g@@ ++) { cin>>@@ s[@@ g@@ ]; cin>>@@ n[@@ g@@ ]; inti; intj; for(i=0;i<=@@ s[@@ g@@ ]@@ -1;i++) for(j=0;j<=@@ n[@@ g@@ ]@@ -1;j++) { cin>>a[i][j]; } sum=0; for(i=0;i<=@@ s[@@ g@@ ]@@ -1;i++) { sum=sum+*@@ *(a@@ +i); sum=sum+*(@@ *(a+i)@@ +@@ n[@@ g@@ ]@@ -1); } for(j=0;j<=@@ n[@@ g@@ ]@@ -1;j++) { sum=sum+*(@@ *a@@ +j); sum=sum+*(@@ *(a+@@ s[@@ g@@ ]@@ -1)@@ +j); } sum=sum@@ -*@@ *a@@ -*(@@ *(a+@@ s[@@ g@@ ]@@ -1)@@ +@@ n[@@ g@@ ]@@ -1)@@ -*@@ (*@@ a+@@ n[@@ g@@ ]@@ -1)@@ -*@@ *(a+@@ s[@@ g@@ ]@@ -1); cout<<sum<<endl; } return0; }  
c -1
h -1
intmain() { inty,m,d,@@ i,j,k,@@ sum=0,@@ a; scanf("%d%d%d",&y,&m,&d); for(i=1;i<=@@ (m@@ -1);i++) { if(i==1) sum=sum+@@ 31; if(i==@@ 3) sum=sum+@@ 31; if(i==@@ 5) sum=sum+@@ 31; if(i==@@ 7) sum=sum+@@ 31; if(i==@@ 8) sum=sum+@@ 31; if(i==@@ 10) sum=sum+@@ 31; if(i==@@ 12) sum=sum+@@ 31; if(i==@@ 4) sum=sum+@@ 30; if(i==@@ 6) sum=sum+@@ 30; if(i==@@ 9) sum=sum+@@ 30; if(i==@@ 11) sum=sum+@@ 30; if(i==@@ 2) { j=@@ y%@@ 4@@ ,@@ k=@@ y%@@ 400@@ ,@@ a=@@ y%@@ 100; if((@@ a@@ !=0@@ &&j@@ ==0)||(@@ k@@ ==0)) sum=sum+@@ 29; else sum=sum+@@ 28; } } sum=sum+@@ d; printf("%d\n",sum); getchar(); getchar(); }  
c -1
h -1
0

intmain(intargc,char*argv[]) { struct{ inta; charb[@@ 26]; }@@ num[@@ 999]; inti,@@ m,@@ j,@@ k; ints[@@ 26]; scanf("%d",&m); for(i=0;i<m;i++) { scanf("%d%s",&@@ num[i].@@ a,@@ num[i].@@ b); } for(k=0;k<26;k++) { s[k]@@ =0; } for(i=0;i<m;i++) { for(j=0;@@ num[i].@@ b[j]@@ !='\0';j++) { k=@@ num[i].@@ b[j]@@ -'A'; s@@ [k]++; } } int@@ first=@@ s[@@ 0]; intt; for(k=0;k<26;k++) { if(s@@ [k]@@ >@@ first@@ ) { first=@@ s@@ [k]; t=@@ k; } } printf("%c\n",@@ t@@ +'A'@@ ); printf("%d\n",@@ first@@ ); for(i=0;i<m;i++) { for(j=0;@@ num[i].@@ b[j]@@ !='\0';j++) { if(num@@ [i].@@ b[j]@@ ==@@ (@@ t@@ +'@@ A')@@ ) { printf("%d\n",@@ num[i].@@ a); } } } return0; }  
c -1
h -1
intmain() { chars[256],@@ a[@@ 256],b[@@ 256]; inti,n,@@ f,@@ t@@ ,j,@@ k,@@ m,@@ l,@@ p,@@ q=0; gets(s); gets(a); gets(b); p@@ =strlen(s); m=strlen(a); n@@ =strlen(b); for(i=0;s[i]@@ !='\0';i++){ if(s[i]==@@ a[0]@@ ){ f=0; for(j=0;j<m;j++){ if(s@@ [j+i@@ ]!=@@ a[j])@@ f=1; } if(f@@ ==0){ t=i; if(t@@ !=0){ for(k=0;k<@@ t@@ ;k++){ printf("%c",s@@ [k]); q=1; } } for(l=0;l<n;@@ l++){ printf("%c",@@ b[l@@ ]); } if(s[@@ m+@@ t@@ ]!='\0'@@ ){ for(k=@@ m+@@ t@@ ;k<@@ p@@ ;k++){ printf("%c",s@@ [k]); } printf(@@ '\0'@@ ); q=1; } if(q@@ ==1)break; } if(q@@ ==1)break; } if(q@@ ==1)break; } if(q@@ ==0)@@ printf("%s",s); return0; }  
c -1
h -1
0

intmain(){ inti,j,@@ c,d,@@ e=0,@@ t=0; doublen,@@ m; chara[501],b[@@ 500]; scanf("%lf",&n); scanf("%s",a); scanf("%s",b); c@@ =strlen(a); d@@ =strlen(b); for(i=0;a[i]!='\0';i++) { if(a[i]!='@@ A'&&a[i]!='@@ G'&&a[i]!='@@ C'&&a[i]!='@@ T@@ ') { t++; } } for(i=0;@@ b[i]@@ !='\0';i++) { if(@@ b[i]!='A'&&b[i]!='@@ G'&&b[i]!='@@ C'&&b[i]!='@@ T@@ ') { t++; } } if(t@@ >0) { printf("error"); } elseif(@@ t@@ ==0) { if(c==@@ d) { for(i=0;a[i]!='\0';i++) { if(a[i]==b[i]@@ )@@ e++; } m=@@ e@@ *1.0/@@ c; if(m@@ >n){ printf("yes"); }else{ printf("no"); } } else { printf("error"); } } return0; }  
c -1
h -1
intmain() { intn,a[@@ 20000],b[@@ 91@@ ],@@ count=0,@@ i,j; cin>>n; for(i=1;i<=n;i++) cin>>a[i]; for(i=1;i<=n;i++) { for(j=1;j<=@@ i;j++) { if(a[i]==a[j]) break; } if(i==@@ j) { count++; b[@@ count@@ ]=a[i]; if(count==@@ 90@@ ) break; } if(count==@@ 90@@ ) break; } if(count@@ >1) { for(i=1;i<=@@ count@@ -1;i++) cout<<b[i]<<""; cout<<b[@@ count@@ ]<<endl; } elseif(@@ count@@ ==1) cout<<@@ b[1@@ ]<<endl; return0; }  
c -1
h -1
0

intcount@@ (inta,int@@ n){ if(a@@ >@@ n)@@ return0; if(a==@@ n)@@ return1; int@@ p=1; inti; for(i=a@@ ;i<=@@ n;i++){ if(n@@ %i==0&&@@ i<=@@ n@@ /i@@ ){ p=p+@@ count@@ (i,@@ n@@ /i); } } return@@ p; } int@@ geshu@@ (int@@ N@@ ){ inti; int@@ s=1; for(i=2;i<=@@ sqrt(@@ N@@ );i++){ if(N@@ %i==0){ s=s+@@ count@@ (i,@@ N@@ /i); } } return@@ s; } intmain(){ intN@@ ; cin>>@@ N; intc[@@ N]; intj; for(j=0;j<@@ N@@ ;j++){ cin>>@@ c[j]; } for(j=0;j<@@ N@@ ;j++){ cout<<@@ geshu@@ (@@ c[j]@@ )<<endl; } return0; }  
c -1
h -1
intmain() { float@@ s[@@ 16],@@ t[@@ 16]; int@@ u@@ =0,@@ g=0; for(intk@@ =1@@ ;k<@@ 100@@ ;k++) { int@@ a=0; for(inti=0;i<@@ 16@@ ;i++) { scanf("%f",&@@ s[i]); if(s@@ [0]==@@ -1@@ ||@@ scanf(@@ ""@@ )) printf(@@ ""@@ ); else { u@@ +=1; if(s@@ [i]@@ ==0)break; else { t@@ [i]=@@ s[i]; a++; } } } int@@ b=0; for(int@@ h@@ =0;h@@ <@@ a;@@ h++) { for(intk=0;k<@@ a@@ ;k++) { if(t@@ [h@@ ]@@ /@@ t@@ [k]==@@ 2) b++; } } printf("%d\n",@@ b); g@@ ++; if(g@@ ==@@ u@@ ) printf(@@ ""@@ ); } return0; }  
c -1
h -1
0

intmain() { inti,j,@@ a[@@ 17@@ ],@@ t,@@ sum; do{ t=@@ -1;@@ sum=0; for(i=1;i<=@@ 16@@ ;i++) {@@ cin>>a[i]; t++; if(a[i]@@ ==0||@@ a[i]@@ ==-1) break; } for(i=1;i<=@@ t;i++) for(j=1;j<=@@ t;j++) { if(a[j]==@@ a[i]@@ *2) sum++; } if(@@ a[1]@@ !=-1) cout<<sum<<endl; } while(@@ a[1]@@ !=-1); return0; }  
c -1
h -1
intmain() { intn,@@ i=0,@@ a,@@ sum=0,@@ m; scanf("%d",&n); while(i<=@@ n*@@ n) { scanf("%d",&a); i=i+1; if(a==0) sum=sum+1; } m=@@ sum@@ *@@ sum/@@ 16@@ +1@@ -@@ sum@@ /2; printf("%d\n",m); return0; }  
c -1
h -1
0

structstudent { char@@ number@@ [100]; charname@@ [100]; structstudent*next; }; intn; structstudent*creat@@ (void) { structstudent*head; structstudent*p1,*p2; inti=0; p1=p2=(structstudent*)malloc(LEN); scanf("%s@@ %s",&@@ p1->@@ number@@ ,&p1->@@ name); head=NULL; do { i=i+1; if(i@@ ==1)@@ head@@ =p1;@@ elsep2->next=p1; p2=p1; p1=(structstudent*)malloc(LEN); scanf("%s@@ %s",&@@ p1->@@ number@@ ,&p1->@@ name); } while(i<@@ n-1); p2->next=p1; p2=p1; p2->next=NULL; return(head); } voidmain() { int@@ h,@@ i,k,@@ m,@@ j,@@ max; structstudent*head; structstudent*@@ p; int@@ sum[@@ 10000@@ ]={0}; scanf("%d",&n); head=creat(); p=head; for(i=@@ 65@@ ,k@@ =0;i<=@@ 90@@ ;i++@@ ,k++) { p=head; do { m=strlen(@@ p->@@ name); for(j=0;j<m;j++) { if(p->@@ name[j]==@@ i)@@ sum@@ [k]++; } p=p->next; }while(p@@ !=NULL); } for(i=0,@@ max=@@ sum@@ [0]@@ ;i<=@@ k;i++) { if(sum@@ [i]>=@@ max@@ ){@@ h@@ =i;@@ max=@@ sum[i]@@ ;} } printf("%c\n%d\n",@@ h@@ +65@@ ,max); p=head; do { m=strlen(@@ p->@@ name); for(j=0;j<m;j++) { if(p->@@ name[j]==@@ h@@ +65@@ )@@ printf("%s\n",p->@@ number); } p=p->next; }while(p@@ !=NULL); }  
c -1
h -1
intmain(){ inti,@@ m=0; float@@ k=0,@@ n; chara[@@ 502@@ ],b[@@ 502@@ ]; scanf("%f",&@@ n); scanf("%s",a); scanf("%s",b); for(i=0;i<(@@ strlen(a)@@ );i++){ if(strlen(a)!=strlen(b@@ )){ m=0; break; } if(a[i]@@ =='@@ A'||a[i]=='T'||a[i]=='@@ C'||@@ a[i]=='@@ G'){ m++; if(a[i]==b[i]){ k++; } }else{ m=0; break; } } if(m@@ ==0){ printf("error"); }else{ if((@@ k/@@ (@@ strlen(a)@@ *@@ 1@@ .@@ 00@@ ))@@ >n){ printf("yes"); }else{ printf("no"); } } return0; }  
c -1
h -1
0

intmain() { intn,@@ b,@@ s[@@ 1000],@@ a; scanf("%d%d",&n,&@@ b); for(inti=0;i<n;i++){ scanf("%d",&s[i]); } for(intk=0;k<@@ n;k++){ for(inti=1;i<@@ n-@@ k;i++){ a=@@ s[k]@@ +@@ s@@ [k@@ +i@@ ]; if(a==@@ b){ printf("yes"); return0; } } } printf("no"); return0; }  
c -1
h -1
intmain() { intn=0,@@ i,j,k,@@ m=0; inta[16]; while(1){ n=0; for(i=0;i<16@@ ;i++){ scanf("%d",&a[i]); m=i; if(a[i]==0)break; if(a[0]==-1)break; } if(a[0]==-1)break; for(j=0;j<m;j++){ for(k=0;k<@@ m@@ ;k++){ if(a[j]==2*@@ a[k]@@ ||@@ a[k@@ ]==2*@@ a[j]) n@@ +=1; } } printf("%d\n",n@@ /2@@ ); } return0; }  
c -1
h -1
0

inta[100@@ ],b[100],c[@@ 200]; int@@ x,y; void@@ oh@@ () { inti; scanf("%d%d",&@@ x,&@@ y); for(i=0;i<x@@ -1;i++) scanf("%d",&a[i]); scanf("%d\n",&@@ a[x@@ -1]); for(i=0;i<@@ y@@ -1;i++) scanf("%d",&b[i]); scanf("%d\n",&@@ b[@@ y@@ -1]); } void@@ ba@@ () { inti,j,k; for(i=0;i<x;i++) for(j=i;j<@@ x;j++) { if(a[i]>a[j]) { k=@@ a[i]; a[i]=a[j]; a[j]=@@ k; } } for(i=0;i<y;i++) for(j=i;j<@@ y;j++) { if(b[i]>@@ b[j]) { k=@@ b[i]; b[i]=@@ b[j]; b[j]=@@ k; } } } void@@ zha@@ () { inti; for(i=0;i<x;i++) c[i]=a[i]; for(i=x@@ ;i<@@ x+@@ y;i++) c[i]=b[i-@@ x@@ ]; } void@@ hei@@ () { inti; for(i=0;i<@@ x+@@ y@@ -1;i++) { printf("%d",c[i]); } printf("%d",c[@@ x+@@ y@@ -1]); } intmain() { oh@@ (); ba@@ (); zha@@ (); hei@@ (); }  
c -1
h -1
intmain() { inta[20000]; intn,i,j,@@ p; scanf("%d",&n); for(i=1;i<=n;i++) { scanf("%d",&a[i]); p=0; for(j=1;j<i;j++) { if(a[j]==a[i]) { p=1; } } if(p@@ ==0@@ &@@ i@@ ==1) { printf("%d",a[i]); } if(p@@ ==0@@ &@@ i@@ !=1) { printf("%d",a[i]); } } return0; }  
c -1
h -1
0

intmain(){ intn,k,i,@@ sz[@@ 1000],@@ result@@ =0,@@ j; scanf("%d%d",&n,&k); for(i=0;i<n;i++){ scanf("%d",&@@ sz[i]@@ );} for(i=0;i<n;i++){ for(j=i+1;j<n;j++){ if(sz[i]+sz@@ [j]==@@ k){@@ result@@ ++;@@ }}} if(result@@ !=0@@ ){printf("yes");} elseif(@@ result@@ ==0){@@ printf("no");} return0; }  
c -1
h -1
intmain() { int@@ year; int@@ month@@ ; int@@ day; int@@ data1@@ [13]={0,31,28,31,30,31,30,31,31,30,31,30,31}; int@@ data2@@ [@@ 13]={0,31,@@ 29,31,30,31,30,31,31,30,31,30,31}; int@@ in@@ =0; scanf("%d%d%d",&year,&month,&day); if(year%@@ 4@@ ==0||@@ year%@@ 100==0&&@@ year%400==0) { int@@ i=@@ month@@ -1; for(@@ ;i>=0;i--) { in@@ +=@@ data2@@ [i]; } in@@ +=@@ day; } else { int@@ i=@@ month@@ -1; for(@@ ;i>=0;i--) { in@@ +=@@ data1@@ [i]; } in@@ +=@@ day; } printf("%d\n",@@ in@@ ); return0; }  
c -1
h -1
0

intmain() {@@ intn,k; inta[@@ 1000],b[1000]; inti,j; scanf("%d%d",&n,&k); scanf("%d",&a[0]); for(i=1;i<n;i++) {@@ scanf("%d",&a[i]); } for(i=0;i<n;i++) {@@ for(j=i+1;j<n;j++) if((@@ a[i]+@@ a[j]@@ )==@@ k) {@@ printf("yes"); break;} if((@@ a[i]+@@ a[j]@@ )==@@ k) {@@ break; } } if((@@ a[i]+@@ a[j])@@ !=@@ k) {@@ printf("no"); } return0; }  
c -1
h -1
intmain() { intk,i,j,@@ max; scanf("%d",&k); inta[@@ k@@ ],b[100]; for(i=0;i<k;i++) scanf("%d",&a[i]); b[0]@@ =1; max=1; for(i=1;i<k;i++) { b[i]=1; for(j=0;j<i;j++) if(a[j]>=@@ a[i]) if(b[j]@@ +1>@@ b[i]) b[i]=b[j]+1; if(b[i]>max) max=b[i]; } printf("%d",max); getchar(); getchar(); }  
c -1
h -1
0

intmain(){ intnumber@@ (intn,int@@ low@@ ); intn,i,@@ data@@ ,@@ ans; scanf("%d",&n); for(i=1;i<=n;i++) { scanf("%d",&@@ data@@ ); ans=@@ number@@ (@@ data@@ ,@@ 2); printf("%d\n",@@ ans); } } intnumber@@ (intn,int@@ low@@ ) { intj,@@ ans; ans=0; for(j=@@ low@@ ;j@@ *@@ j@@ <=@@ n;j++) { if(n@@ %j==0) ans=@@ ans@@ +@@ number@@ (n@@ /j,j); } ans=@@ ans@@ +1; return@@ ans; }  
c -1
h -1
int@@ f(@@ char@@ x,@@ char@@ y) { if(x==@@ y)@@ return1; else@@ return0; } intmain() { double@@ r,@@ x; scanf("%lf",&@@ r); char@@ str1@@ [1000],@@ str2@@ [1000]; scanf("%s@@ \n",@@ str1); scanf("%s",@@ str2); int@@ len1,len2@@ ; inti,@@ count=0; len1=strlen(@@ str1); len2=strlen(@@ str2); if(len1!=@@ len2){ printf("error"); return0; } for(i=0;@@ str1@@ [i]@@ !=0@@ ;i++){ if((@@ str1@@ [i]!='A'&&@@ str1@@ [i]!='C'&&@@ str1@@ [i]!='G@@ '&&@@ str1@@ [i]!='T')@@ ||(@@ str2@@ [i]!='A'&&@@ str2@@ [i]!='C'&&@@ str2@@ [i]!='G@@ '&&@@ str2@@ [i]!='T')@@ ){ printf("error"); return0; } } for(i=0;@@ str1@@ [i]@@ !=0@@ ;i++){ if(@@ f(@@ str1@@ [i],@@ str2@@ [i])@@ ==1){ count++; } } x@@ =1.0*@@ count@@ /@@ len1; if(x>@@ r@@ ){ printf("yes"); } else{ printf("no"); } return0; }  
c -1
h -1
0

intmain(){ intm,@@ e,@@ n,@@ i,j,k,@@ s[@@ 1000]; intt=0; scanf("%d%d",&n,&m); for(i=0;i<n;i++){ scanf("%d",&(@@ s[i]@@ )); } for(k=1;k<@@ n;k++){ for(i=0;i<n-@@ k;i++){ e=@@ s@@ [i+1]; s@@ [i+1]=@@ s[i]; s[i]=@@ e; }} for(i=0;i<n;i++){ for(j=i+1;j<n;j++){ if((@@ s[i]@@ +@@ s[j]@@ )==@@ m){ t=1; } }} if(t@@ ==1){ printf("yes"); }else{ printf("no"); } return0; }  
c -1
h -1
voidinput@@ (void@@ ); voidsort@@ (int*a,@@ intn,@@ int*@@ b,int@@ m); void@@ merger@@ (int*a,@@ intn,@@ int*@@ b,int@@ m); voidoutput@@ (int*a,@@ intn,@@ int@@ m); intn,m,@@ a[@@ 200@@ ],b[100]; voidinput@@ (void) { inti; scanf("%d%d",&n,&m); for(i=0;i<n;i++) scanf("%d",&a[i]); for(i=0;i<m;i++) scanf("%d",&b[i]); } voidsort@@ (int*a,@@ intn,@@ int*@@ b,int@@ m) { inti,j,@@ min@@ ,@@ temp; for(i=0;i<n-1;i++) { min@@ =i; for(j=i+1;j<n;j++) if(a[j]@@ <@@ a[@@ min@@ ]) min@@ =j; if(@@ min@@ !=@@ i) { temp=a[i]; a[i]=@@ a[@@ min@@ ]; a[@@ min@@ ]=temp; } } for(i=0;i<m-1;i++) { min@@ =i; for(j=i+1;j<@@ m;j++) if(b[j]@@ <@@ b[@@ min@@ ]) min@@ =j; if(@@ min@@ !=@@ i) { temp=@@ b[i]; b[i]=@@ b[@@ min@@ ]; b[@@ min@@ ]=temp; } } } void@@ merger@@ (int*a,@@ intn,@@ int*@@ b,int@@ m) { inti,j; for(i=@@ n,@@ j@@ =0;i<@@ n+@@ m,@@ j@@ <@@ m;i++) a[i]=@@ b@@ [j@@ ++@@ ]; } voidoutput@@ (int*a,@@ intn,@@ int@@ m) { inti; for(i=0;i<n@@ +m@@ -1;i++) printf("%d",a[i]); printf("%d\n",a[@@ n+@@ m-1@@ ]); } voidmain() { input(); sort@@ (a,n,@@ b,@@ m); merger@@ (a,n,@@ b,@@ m); output@@ (a,n,@@ m); }  
c -1
h -1
0

ints; void@@ search@@ (inta,int@@ k) { if(a==0) return; if(a==1) { return; } for(inti=2@@ ;i<@@ a;i++) { if(a@@ %i==0&&@@ a/@@ i@@ >=i@@ &&i@@ >=@@ k@@ &&@@ a/@@ i>=@@ k) { s++; search@@ (a/i,i); } } return; } intmain() { intn,@@ a; cin>>n; for(inti=0;i<n;i++) { s=1; cin>>a; search@@ (a,@@ 1); cout<<s<<endl; } return0; }  
c -1
h -1
structstudent { intnum; intyuwen; intshuxue; structstudent*next; }; intm; voidmain() { intn; scanf("%d",&n); structstudent*creat@@ (int@@ n); voidprint@@ (structstudent*head@@ ,int@@ n); structstudent*head; head=creat(n); print(@@ head,@@ n); print(@@ head,@@ n); print(@@ head,@@ n); } structstudent*creat@@ (intn) { structstudent*head; structstudent*p1,*p2; m=0; p1=p2=(structstudent*)malloc(LEN); scanf("%d%d@@ %d@@ \n",&@@ p1->num,&p1->@@ yuwen@@ ,&p1->@@ shuxue); head=NULL; for(@@ ;n@@ !=0@@ ;n@@ --) { m@@ +=1; if(m@@ ==1)head=p1; elsep2->next=p1; p2=p1; p1=(structstudent*)malloc(LEN); scanf("%d%d@@ %d@@ \n",&@@ p1->num,&p1->@@ yuwen@@ ,&p1->@@ shuxue); } p2->next=NULL; return(head); } voidprint@@ (structstudent*head@@ ,intn) { structstudent@@ *p,*@@ q; p=head; intmax=0,@@ index@@ =0; for(@@ ;n@@ !=0@@ ;n@@ --) { if(max<@@ ((@@ p->@@ yuwen@@ )+@@ (p->@@ shuxue@@ )@@ )) { max@@ =(@@ (p->@@ yuwen@@ )+@@ (p->@@ shuxue@@ )); index@@ =p->@@ num; q=p; } p=p->next; } printf("%d%d\n",@@ index@@ ,max); q->@@ yuwen@@ =0; q->@@ shuxue@@ =0; }  
c -1
h -1
0

intmain() { int@@ jvzhen@@ (); intn,i,@@ a; scanf("%d",&n); for(i=1;i<=n;i++) { a=@@ jvzhen@@ (); printf("%d\n",@@ a); } return0; } int@@ jvzhen@@ () { intm,n,i,j,@@ sum; sum=0; scanf("%d%d",&m,&n); intb[100@@ ][100]; for(i=1;i<=m;i++) { for(j=1;j<=@@ n@@ ;j++)@@ scanf("%d",@@ *(@@ b@@ +i)@@ +j); } for(i=1;i<=n;i++) sum=sum+*(@@ *(@@ b@@ +1)@@ +i); if(m@@ >1@@ ){@@ for(i=1;i<=n;i++) sum=sum+*(@@ *(@@ b@@ +m@@ )@@ +i@@ );} if(m@@ >2) {@@ for(j=2@@ ;j<@@ m;j++) sum=sum+*(@@ *(@@ b@@ +j)@@ +1)@@ +*(@@ *(@@ b@@ +j)+@@ n); } return(@@ sum); }  
c -1
h -1
intmain() { inta[16@@ ]={0},@@ i@@ =1,@@ num[@@ 16@@ ]={0},@@ s,@@ k=0; while(cin>>@@ s) { a[i]=@@ s; if(a[i]@@ ==0){@@ i@@ =0@@ ;k@@ ++;@@ continue;} if(a[i]==@@ -1)break; for(intj=0;j<=@@ i;j++) { if(a[i]==2*@@ a[j]||a[j]==2*@@ a[i]) num@@ [k]++; } i++; } for(i=0;i<k;i++) { cout<<@@ num[i]@@ <<endl; } return0; }  
c -1
h -1
0

void@@ o@@ (intn) { inta[n]; inti=0,j=0,@@ x; while(i<n) { scanf("%d",&a[i]); i++; } i=0; while(i<n) { while(j<@@ n-1) { if(a[j]>a[j+1]) x=@@ a[j]@@ ,@@ a[j]=a[j+1@@ ],@@ a[j+1]=@@ x; j++; } j=0; i++; } j=0; while(j@@ <n) { printf("%d",@@ a[j]); if(j<@@ n-1) printf(""); j++; } } voidmain() { intm,n; scanf("%d%d",&m,&n); o@@ (m); printf(""); o@@ (n); }  
c -1
h -1
struct { charid@@ [11]; int@@ nianling@@ ; }@@ bing@@ [100]; intmain() { intn,i,j,@@ e; int@@ youxian@@ [100]={0}; int@@ zhengchang@@ [100]={0}; scanf("%d",&n); for(i=0;i<n;i++) { scanf("%s%d",@@ bing@@ [i].id,&@@ bing@@ [i].@@ nianling@@ ); if(@@ bing@@ [i].@@ nianling@@ >=60@@ )@@ youxian@@ [i]=@@ bing@@ [i].@@ nianling@@ ; else@@ zhengchang@@ [i]=@@ bing@@ [i].@@ nianling@@ ; } for(i=1;i<n;i++) { for(j=0;j<n-i;j++) { if(@@ youxian@@ [j]<@@ youxian@@ [j+1]) { e=@@ youxian@@ [j+1]; youxian@@ [j+1]=@@ youxian@@ [j]; youxian@@ [j]=@@ e; } } } for(i=0;i<n;i++) { for(j=0;j<n;j++) { if(@@ bing@@ [j].@@ nianling@@ ==@@ youxian@@ [i]) { printf("%s\n",@@ bing@@ [j].@@ id); bing@@ [j].@@ nianling@@ =-1; break; } } } for(i=0;i<n;i++) { for(j=0;j<n;j++) { if(@@ bing@@ [j].@@ nianling@@ ==@@ zhengchang@@ [i]) { printf("%s\n",@@ bing@@ [j].@@ id); bing@@ [j].@@ nianling@@ =-1; break; } } } return0; }  
c -1
h -1
0

struct@@ result {intnum; int@@ chn@@ ; intmath; inttotal; }; intmain() {@@ intn,k; cin>>n; struct@@ result@@ student@@ [n@@ +1]; for(k=1;k<=n;k++) {@@ cin>>@@ student@@ [k].@@ num@@ >>@@ student@@ [k].@@ chn@@ >>@@ student@@ [k].@@ math; student@@ [k].@@ total=@@ student@@ [k].@@ chn@@ +@@ student@@ [k].@@ math; } inti,j; struct@@ result@@ temp; for(i=1;i<@@ 4;i++) for(j=1;j<=@@ n@@ -i;j++) {if(@@ student[j].@@ total@@ >=@@ student@@ [j+1].@@ total) {@@ temp=@@ student@@ [j]; student@@ [j]=@@ student@@ [j+1]; student@@ [j+1]=temp; } } cout<<@@ student@@ [n@@ ].num@@ <<""<<@@ student@@ [n@@ ].@@ total@@ <<endl; cout<<@@ student[@@ n-1@@ ].num@@ <<""<<@@ student[@@ n-1@@ ].@@ total@@ <<endl; cout<<@@ student[@@ n-2@@ ].num@@ <<""<<@@ student[@@ n-2@@ ].@@ total@@ <<endl; return0; }  
c -1
h -1
voidmain() { int@@ point@@ [1000],@@ i,@@ p,@@ sta@@ ,@@ end@@ ,@@ total@@ ,@@ n,@@ s; scanf("%d",&n); s=0; for(p=0;p@@ <n;p++) { for(i=0;i<n;i++)@@ scanf("%d",&@@ point@@ [i]); i=0; do { i++; }while(@@ (@@ point@@ [i]==@@ 255@@ )&&(i@@ <n@@ )); sta@@ =i; i=@@ n; do { i--; }while(@@ (@@ point@@ [i]==@@ 255@@ )&&(i@@ >0@@ )); end@@ =i; for(i=@@ sta@@ ;i<=@@ end@@ ;i++)@@ if(@@ point@@ [i]==@@ 255@@ )@@ s++; } printf("%d",s); }  
c -1
h -1
0

voidinput@@ (intm,@@ intn,@@ inta[@@ 300@@ ],intb[@@ 300@@ ]) { inti=0,j=0; scanf("%d%d",&m,&n); for(i=0;i<m;i++) {@@ scanf("%d",&a[i]); } for(j=0;j<n;j++) { scanf("%d",&@@ b[j]); } } void@@ row@@ (inta[@@ 300@@ ]) { inti,j,t; for(i=0;i<@@ 300@@ ;i++) { for(j=i+1;j<@@ 300@@ ;j++) { if((a[j]@@ <@@ a[i]@@ )&&(@@ a[j]@@ !=0)) { t=a[j]; a[j]=@@ a[i]; a[i]=@@ t; } } } } void@@ com@@ (inta[@@ 300@@ ],intb[@@ 300@@ ]) { inti=0,j=0,@@ k; for(i=0;i<@@ 300@@ ;i++) { if(a[i]==0) {@@ k@@ =i;@@ break;} } for(j=0;j<@@ 300@@ ;j++) {@@ if(b[j]@@ !=0) a[k]=@@ b[j]@@ ;k@@ ++; } } voidoutput@@ (inta[@@ 300@@ ]) { inti; for(i=0;i<@@ 300@@ ;i++) { if(a[i]!=0) {@@ printf("%d",a[i]); break;} } i++; for(i@@ ;i<@@ 300@@ ;i++) { if(a[i]!=0) {printf("%d",@@ a[i]);} } } voidmain() { intx,y,@@ a[@@ 300@@ ]={0},b[@@ 300@@ ]={0}; input@@ (@@ x,y,@@ a,b); row@@ (a@@ );@@ row@@ (@@ b); com@@ (a,b); output@@ (a); }  
c -1
h -1
struct@@ x {@@ chara[@@ 10]; intb; }@@ ;@@ struct@@ x@@ y@@ [100]; voidmain() {@@ intn,i,j,@@ m; chars[@@ 10]; scanf("%d",&n); for(i=0;i<n;i++) {@@ scanf("%s%d",&@@ y@@ [i].@@ a,&@@ y@@ [i].@@ b); } for(j=0;j<n-1;j++) for(i=0;i<n@@ -1-j;i++) {@@ if(y@@ [i].@@ b<@@ y@@ [i+1].@@ b@@ &&@@ y@@ [i+1].@@ b@@ >=60) {@@ strcpy(s,@@ y@@ [i].@@ a); strcpy(@@ y@@ [i].@@ a,@@ y@@ [i+1].@@ a); strcpy(@@ y@@ [i+1].@@ a,@@ s); m=@@ y@@ [i].@@ b; y@@ [i].@@ b=@@ y@@ [i+1].@@ b; y@@ [i+1].@@ b=@@ m; } } for(i=0;i<n;i++) printf("%s\n",@@ y@@ [i].@@ a); }  
c -1
h -1
0

structbook { intid; char@@ p@@ [26]; }; voidmain() { intn,i,j,k,@@ a[@@ 150@@ ]={0},@@ flag@@ ,@@ max=0; structbook@@ t@@ ,*@@ s,@@ o@@ [1000],@@ y@@ [1000]; scanf("%d",&n); s@@ =(struct@@ book@@ *)malloc(@@ n*@@ sizeof(struct@@ book)); for(i=0;i<n;i++) {@@ scanf("%d%s",&@@ s[i].@@ id,@@ s[i].@@ p); for(j=0;@@ s[i].@@ p@@ [j]!='\0';j++) a[@@ s[i].@@ p@@ [j]@@ ]++; } for(i@@ ='A'@@ ;i<=@@ 'Z'@@ ;i++) if(max<@@ a[i]@@ ){max=@@ a[i]@@ ;j@@ =i;} printf("%c\n",@@ j); printf("%d\n",max); for(i=0;i<n;i++) { flag=0; for(k=0;@@ s[i].@@ p@@ [k]@@ !='\0'@@ ;k++) if(s@@ [i].@@ p@@ [k]==@@ j)@@ flag=1; if(flag@@ ==1)@@ printf("%d\n",@@ s[i].@@ id); } }  
c -1
h -1
intmain() { introw,col,@@ array@@ [100][100@@ ]={0},@@ i=0,@@ j=0; int@@ flag@@ [100][100@@ ]={0},@@ k=0,@@ l@@ =1; cin>>row>>col; for(i=0;i<(@@ row@@ *col@@ );i++) cin>>array@@ [i@@ /@@ col@@ ]@@ [i@@ %@@ col@@ ]; i=0; for(k=0;k<col@@ ;k++) { j=@@ k; for(i=0;i<row;i++) { if((@@ j@@ !=@@ -1)@@ &&(@@ i@@ !=@@ row@@ )) { cout<<array@@ [i][j]<<endl; j--; } elsebreak; } if(k==@@ col@@ -1) { i=1; for(l=1;l@@ <row@@ ;l++) { j=col-1; for(i=@@ l@@ ;@@ (j@@ !=@@ -1)@@ &&(@@ i@@ !=@@ row@@ );i++) { cout<<array@@ [i][j]<<endl; j--; } } } } return0; }  
c -1
h -1
0

struct@@ bin { charID[10]; intage; struct@@ bin@@ *next; }; voidmain() { struct@@ bin@@ *head,*@@ p,*@@ p1,*p2,*@@ p3; intm,n,@@ i,j,k; scanf("%d",&n); p=(struct@@ bin@@ *)malloc(sizeof(struct@@ bin@@ )); scanf("%s%d",&@@ p->@@ ID,&@@ p->@@ age); head=@@ p3@@ =p; p->next@@ =0; for(i=1;i<n;i++) { p=(struct@@ bin@@ *)malloc(sizeof(struct@@ bin@@ )); scanf("%s%d",&@@ p->@@ ID,&@@ p->@@ age); if(p->@@ age@@ <60) { p3@@ ->next=p; p->next@@ =0; p3@@ =p; } else { if(p->@@ age@@ >@@ head@@ ->age@@ ) { p@@ ->next=@@ head; head=@@ p; } elseif(@@ p->age@@ <=@@ p3@@ ->age@@ ) { p3@@ ->next=p; p->next@@ =0; p3@@ =p; } else { p1=head; p2=p1->next; while(@@ p2->age@@ >=@@ p->age@@ ) { p1=p1->next; p2=p2->next; } p1->next@@ =p; p@@ ->next=@@ p2; } } } for(;@@ head@@ !=0@@ ;@@ head=@@ head@@ ->next) { printf("%s\n",@@ head->@@ ID); } }  
c -1
h -1
intmain() { intyear,month,day,@@ a,@@ i=1; while(i<=@@ 5) { scanf("%d%d%d",&year,&month,&day); if(((@@ year%4==0&&year%100!=0@@ )||@@ year%@@ 400==0)@@ ==1) { switch(month) { case1:@@ a=@@ day;break; case2:@@ a@@ =31+@@ day;break; case3:@@ a=31+29@@ +day;break; case4:@@ a=31+29@@ +31+@@ day;break; case5:@@ a=31+29@@ +31+30@@ +day;break; case6:@@ a=31+29@@ +31+30+31+@@ day;break; case7:@@ a=31+29@@ +31+30+31+30@@ +day;break; case8:@@ a=31+29@@ +31+30+31+30+31+@@ day;break; case9:@@ a=31+29@@ +31+30+31+30+31+31+@@ day;break; case10:@@ a=31+29@@ +31+30+31+30+31+31+30@@ +day;break; case11:@@ a=31+29@@ +31+30+31+30+31+31+30+31+@@ day;break; case12:@@ a=31+29@@ +31+30+31+30+31+31+30+31+30@@ +day;break; default@@ :@@ printf("error\n"); } } else { switch(month) { case1:@@ a=@@ day;break; case2:@@ a@@ =31+@@ day;break; case3:@@ a=31+28@@ +day;break; case4:@@ a=31+28@@ +31+@@ day;break; case5:@@ a=31+28@@ +31+30@@ +day;break; case6:@@ a=31+28@@ +31+30+31+@@ day;break; case7:@@ a=31+28@@ +31+30+31+30@@ +day;break; case8:@@ a=31+28@@ +31+30+31+30+31+@@ day;break; case9:@@ a=31+28@@ +31+30+31+30+31+31+@@ day;break; case10:@@ a=31+28@@ +31+30+31+30+31+31+30@@ +day;break; case11:@@ a=31+28@@ +31+30+31+30+31+31+30+31+@@ day;break; case12:@@ a=31+28@@ +31+30+31+30+31+31+30+31+30@@ +day;break; default@@ :@@ printf("error\n"); } } printf("%d\n",@@ a); i=i+1; } return0; }  
c -1
h -1
0

int@@ order@@ (intn,@@ inta[@@ ]){ inti,j,k; for(i=0;i<n;i++) for(j=i;j<@@ n;j++) if(a[i]>@@ a[j]@@ ){@@ k=@@ a[i];a[i]=@@ a[j];a[j]=@@ k@@ ;} } int@@ combine@@ (inta[],intb[@@ ],intn,@@ intm,@@ intc[@@ ]){ inti,j,k; for(i=0;i<n;i++)@@ c[i]=a[i]; for(j=0;j<m@@ ;j++@@ ,i@@ ++)@@ c[i]=@@ b[j]; } int@@ input@@ (intn,@@ inta[@@ ]){ inti; for(i=0;i<n;i++)@@ scanf("%d",&a[i]); } int@@ output@@ (intn,@@ inta[@@ ]){ inti; for(i=0;i<n;i++){@@ printf("%d",@@ a[i]@@ );@@ if(i<@@ n-1)@@ printf("@@ ");} } intmain(){ intn,m; scanf("%d%d",&n,&m); inta[n@@ ],b[@@ m@@ ],c[@@ n+@@ m]; input@@ (n,@@ a); input@@ (m,@@ b); order@@ (n,@@ a); order@@ (m,@@ b); combine@@ (a,b,@@ n,m,@@ c); output@@ (@@ n+@@ m,@@ c); return0; }  
c -1
h -1
const@@ int@@ maxn=@@ 100; inta[@@ maxn@@ ],@@ n,@@ f[@@ maxn@@ ],@@ ans; void@@ init@@ () { cin>>n; for(inti=0;i<n;i++) cin>>a[i]; } void@@ solve@@ () { ans=0; for(inti=0;i<n;i++) { f@@ [i]=1; for(intj=0;j<i;j++) if(a[j]>=a[i]&&@@ f@@ [j]>=@@ f@@ [i]) f[i]=@@ f@@ [j]+1; if(f@@ [i]>@@ ans@@ ) ans=@@ f[i]; } } intmain() { init@@ (); solve@@ (); cout<<ans@@ <<endl; return0; }  
c -1
h -1
0

int@@ DFS@@ (int,int); intmain() { int@@ q; cin>>@@ q; for(inti=0;i<@@ q@@ ;i++) { intn; inth@@ =0; cin>>n; cout<<@@ DFS@@ (n,@@ n@@ )<<endl; } return0; } int@@ DFS@@ (intn,int@@ p) { int@@ ans=0; if(n@@ ==1)@@ return1; for(inti=2;i<=@@ p@@ ;i++) { if(n%i==0) { ans=@@ ans@@ +@@ DFS@@ (n/i,i); } } return@@ ans; }  
c -1
h -1
intmain() { struct@@ x {intnum; charname[26]; }@@ book[1000]; inti,j,@@ m,n,@@ k,@@ ex@@ ; inta[@@ 26@@ ][@@ 1000]; intcount@@ [26]={0},@@ num[@@ 26@@ ]={@@ 65@@ ,@@ 66@@ ,@@ 67@@ ,@@ 68@@ ,@@ 69@@ ,@@ 70@@ ,@@ 71@@ ,@@ 72@@ ,@@ 73@@ ,@@ 74@@ ,@@ 75@@ ,@@ 76@@ ,@@ 77@@ ,@@ 78@@ ,@@ 79@@ ,@@ 80@@ ,@@ 81@@ ,@@ 82@@ ,@@ 83@@ ,@@ 84@@ ,@@ 85@@ ,@@ 86@@ ,@@ 87@@ ,@@ 88@@ ,@@ 89@@ ,@@ 90@@ }; scanf("%d",&m); for(i=0;i<m;i++) { scanf("%d",&@@ book[i].@@ num); gets(@@ book[i].name); } for(i@@ ='A'@@ ;i<=@@ 'Z'@@ ;i++) { for(j=0;j<m;j++) { n=strlen(@@ book[j].@@ name); for(k=0;k<n;k++) { if(i==@@ book[j].@@ name@@ [k]) count@@ [i-@@ 65@@ ]++; } } } for(i=0;i<@@ 25;i++) { if(count@@ [i]>@@ count@@ [i+1]) { ex@@ =@@ count@@ [i]; count@@ [i]=@@ count@@ [i+1]; count@@ [i+1]=@@ ex@@ ; ex@@ =@@ num[i]; num[i]=@@ num@@ [i+1]; num@@ [i+1]=@@ ex@@ ; } } printf("%c\n%d\n",@@ num[@@ 25],@@ count@@ [25@@ ]); for(i=0;i<m;i++) { n=strlen(@@ book[i].name); for(k=0;k<n;k++) { if(book[i].@@ name@@ [k]==@@ num[@@ 25@@ ]) printf("%d\n",book[i].@@ num); } } return0; }  
c -1
h -1
0

intmain() { intn,i,k,@@ j; inta[@@ 1000],@@ sum; intb; scanf("%d%d",&@@ n,@@ &@@ k); scanf("%d",&a[0]); for(i=1;i<n;i++){ scanf("%d",&a[i]); for(j=0;j<i;j++){ sum=@@ a[i]+a[j]; if(sum@@ ==k){ b=1; } } } if(b@@ ==1){ printf("yes"); } else{ printf("no"); } return0; }  
c -1
h -1
inta[@@ 30000@@ ]; int@@ find@@ (int@@ k) { inti; for(i=0;i<k;i++) { if(a[i]==@@ a[k]) return1; } return0; } intmain() { intn; cin>>n; for(inti=0;i<n;i++) cin>>a[i]; cout<<a[0]; for(intk@@ =1@@ ;k<@@ n;k++) { if(@@ find@@ (@@ k)@@ ==0) cout<<""<<@@ a[k]; } return0; }  
c -1
h -1
0

intf@@ (inta,intb) { if(a==1) return1; else { int@@ c,d,@@ i; c=0; d=@@ (int)sqrt(@@ (double)@@ a); for(i=b@@ ;i<=a;i++) { if(!@@ (a@@ %i@@ )) c@@ +=@@ f(a@@ /i,i); } return@@ c; } } intmain() { intn,a,@@ i; cin>>n; for(i=0;i<n;i++) { cin>>a; cout<<@@ f(a,@@ 2)<<endl; } cin.get(); cin.get(); return0; }  
c -1
h -1
intmain(){ inti,@@ m,n,@@ p=0,@@ c=0,@@ d=0; double@@ k,@@ t; chara[501],b[501]; scanf("%lf",&@@ k); scanf("%s",a); scanf("%s",b); m=strlen(a); n@@ =strlen(b); if(m==@@ n){ for(i=0;i<n;i++){ if(a[i]!='A'&&a[i]!='T'&&a[i]!='C'&&a[i]!='@@ G'){ c@@ ++;} if(@@ b[i]!='A'&&b[i]!='T'&&b[i]!='C'&&b[i]!='@@ G'){ d++; } if(a[i]==b[i]) p++; } t@@ =1@@ .0@@ *p@@ /n; if(c@@ ==0&&@@ d@@ ==0){ if(t@@ >@@ k)@@ printf("yes"); elseprintf("no"); }else{ printf("error"); } }else{ printf("error"); } return0; }  
c -1
h -1
0

structbook { intnum; charwriter@@ [20]; structbook*next; }; intmain() { intn,i,j,@@ m,@@ k,@@ c[@@ 26],@@ max; chara[@@ 26]; scanf("%d",&m); structbook*@@ p1,*p2,*head; for(i=0;i<m;i++) { p1=(structbook@@ *)malloc(@@ Len@@ ); if(i==0) { head=p1; } else { p2->next=p1; } p2=p1; scanf("%d%s",&p1->num,p1->@@ writer); } p2->next=NULL; p1=head; for(i=0;i<26;i++) { a[i]@@ =i+65; c[i]@@ =0; } for(j=0;j<m;j++) { for(i=0;i<26;i++) { n=strlen(@@ p1->@@ writer); for(k=0;k<n;k++) { if(a[i]==@@ p1->@@ writer@@ [k]) { c[i]@@ ++; } } } p1=p1->next; } max=0; for(i=0;i<26;i++) { if(c@@ [i]>@@ c[@@ max@@ ]) { max=i; } } printf("%c\n%d\n",@@ a[@@ max@@ ],c[@@ max@@ ]); p1=head; for(i=0;i<m;i++) { n=strlen(@@ p1->@@ writer); for(j=0;j<n;j++) { if(p1->@@ writer@@ [j]==@@ a[@@ max@@ ]) { printf("%d\n",@@ p1->num); } } p1=p1->next; } return0; }  
c -1
h -1
structstudent { charc[@@ 20]; intnum; structstudent*next; }; structstudent*creat@@ (intn) { inti,@@ r; structstudent@@ *p,*@@ p1,*p2,*@@ p3@@ ,*@@ p4@@ ; p1@@ =(structstudent*)malloc(sizeof(structstudent)); scanf("%s%d",p1->@@ c@@ ,&p1->@@ num); p1->next=NULL; p=@@ p1; r=0; p2=p1; for(i=0;i<n-1;i++) { p4@@ =(structstudent*)malloc(sizeof(structstudent)); scanf("%s%d",@@ p4@@ ->@@ c@@ ,&@@ p4@@ ->@@ num); if(@@ p4@@ ->@@ num@@ >=60) { for(@@ p2=@@ p,@@ p3=@@ p,@@ r=0;@@ p2@@ !=NULL;@@ ) { if(@@ p4@@ ->@@ num@@ >@@ p2->@@ num) { if(@@ p2@@ ==@@ p3@@ ) { p=@@ p4@@ ; p4@@ ->next=@@ p2; } else { p3@@ ->next=@@ p4@@ ; p4@@ ->next=@@ p2; } r@@ =1; break; } if(@@ p4@@ ->@@ num@@ <=@@ p2->@@ num) { p3@@ =p2; p2=p2->next; } } if(r@@ ==0) { p3@@ ->next=@@ p4@@ ; p4@@ ->next=NULL; } } else { p2=@@ p; while(@@ p2@@ !=NULL) { p3@@ =p2; p2=p2->next; } p3@@ ->next=@@ p4@@ ; p4@@ ->next=NULL; } } return@@ p; } voidprint@@ (@@ structstudent@@ *p@@ ) { structstudent*@@ p1; p1=@@ p; while(p1!=NULL) { printf("%s\n",@@ p1->@@ c); p1=p1->next; } } voidmain() { structstudent@@ *p,*@@ p1; intn; scanf("%d\n",&n); p=@@ creat@@ (n); print@@ (p); }  
c -1
h -1
0

intmain() { intn@@ ,@@ i,j,k,@@ g,@@ p=0; cin>>n; inta[n@@ +1]; memset(a,0,@@ sizeof(a)); for(i=1;i<=n;i++) { cin>>a[i]; } for(j=1;j<=n;j++) { g=0; for(k=1;k<=@@ j@@ -1;k++) { if(a[j]==@@ a[k]) { g@@ =1; } } if(g@@ ==0) { if(p@@ !=0) { cout<<"@@ "; } cout<<@@ a[j]; p++; } } return0; }  
c -1
h -1
intmain() { intn,i,@@ t,@@ a[@@ 20000@@ ],b[100],c[@@ 20000]; cin>>n; for(i=0;i<100;i++) b[i]=1; for(i=0;i<n;i++) cin>>a[i]; t=0; for(i=0;i<n;i++) if(b[@@ a[i]@@ ]@@ ==1) { c[@@ t@@ ]=a[i]; t++; b[@@ a[i]@@ ]=0; } for(i=0;i<@@ t@@ -1;i++) cout<<@@ c[i]@@ <<""; cout<<c[@@ t@@ -1]@@ <<endl; return0; }  
c -1
h -1
1


intmain() { chara[@@ 1000],b[1000]; doublen; inti,j,k; double@@ sum=0; scanf("%lf",&n); scanf("%s%s",a,b); if(strlen(a)!=strlen(b@@ )) { printf("error"); } else { for(i=0;i<@@ strlen(a)@@ ;i++) { if(((@@ a[i]!='@@ A')&&(@@ a[i]!='@@ T')&&(@@ a[i]!='@@ C')&&(@@ a[i]!='@@ G')@@ )||((@@ b[i]!='@@ A')&&(@@ b[i]!='@@ T')&&(@@ b[i]!='@@ C')&&(@@ b[i]!='@@ G')@@ )) {@@ printf("error"); return0;} } for(i=0;i<@@ strlen(a)@@ ;i++) { if(a[i]==b[i]) { sum+=@@ 1; } } if((@@ sum/@@ strlen(a)@@ )>@@ n) { printf("yes"); } else{ printf("no"); } } return0; }  
c -1
h -1
intmain() { intn,a[@@ 1000][1000],@@ i,j,@@ p,q,@@ num1@@ =0,@@ num2@@ =0,@@ sum; scanf("%d",&n); for(j=0;j<n;j++) { for(i=0;i<n;i++) scanf("%d",&a[j]@@ [i]); } for(j=0;j<n;j++) { for(i=0;i<n;i++) { if(a[j]@@ [i]==0) { num1@@ ++; p=@@ j@@ ;q@@ =i; } } if(@@ num1@@ !=0) break; } for(j=@@ p@@ ;@@ a[j]@@ [q@@ ]@@ ==0@@ ;j++) { num2@@ ++; } sum=(@@ num1@@ -2)*(@@ num2@@ -2); printf("%d",sum); return0; }  
c -1
h -1
0

voidmain() { intk,i,j,@@ l=0; inta[@@ 25@@ ]={0},b[@@ 25@@ ]={0}; scanf("%d",&k); for(i=0;i<=k-1;i++) scanf("%d",&a[i]); b[k@@ -1]@@ =1; for(i=k-2;i>=0;i--) { for(j=i+1;j<=@@ k@@ -1;j++) if(a[i]>=@@ a[j]&&@@ b[i]@@ <=@@ b[j]) b[i]=b[j]+1; if(b[i]@@ ==0) b[i]=1; } for(i=0;i<=@@ k@@ -2;i++) for(j=0;j<=@@ k@@ -2@@ -i;j++) if(b[j]>b[j+1]) { l=@@ b@@ [j+1]; b[j+1]=@@ b[j]; b[j]=@@ l; } printf("%d\n",@@ b[k@@ -1]); }  
c -1
h -1
structstudent { intid; intchinese; intmath; inttotal; }; intmain() { structstudentstu[100000]; structstudent@@ max@@ [3@@ ]={0@@ ,@@ 0,0,0,0,0,0,0,0,@@ 0,0,@@ 0@@ }; intn,i; scanf("%d",&n); for(i=0;i<n;i++) { scanf("%d%d@@ %d@@ \n",&@@ stu[i].@@ id@@ ,&stu[i].@@ chinese@@ ,&stu[i].math); stu[i].@@ total=@@ stu[i].@@ chinese+@@ stu[i].@@ math; } for(i=0;i<n;i++) { if(stu[i].@@ total@@ >max@@ [1].@@ total) { max@@ [1]=@@ stu[i]; } } for(i=0;i<n;i++) { if(stu[i].@@ total@@ >max@@ [2].@@ total@@ &&stu[i].@@ total@@ <=@@ max@@ [1].@@ total@@ &&stu[i].@@ id@@ !=@@ max@@ [1].@@ id@@ ) { max@@ [2]=@@ stu[i]; } } for(i=0;i<n;i++) { if(stu[i].@@ total@@ >max@@ [3].@@ total@@ &&stu[i].@@ total@@ <=@@ max@@ [2].@@ total@@ &&stu[i].@@ id@@ !=@@ max@@ [2].@@ id@@ &&stu[i].@@ id@@ !=@@ max@@ [1].@@ id@@ ) { max@@ [3@@ ]=@@ stu[i]; } } for(i=1;i<@@ 4;i++) { printf("%d%d\n",@@ max@@ [i].@@ id,@@ max@@ [i].@@ total); } return0; }  
c -1
h -1
0

intmain() { intk,m,n,@@ sum,@@ a[100][100],@@ i,j; cin>>k; while(k@@ --) { sum=0; cin>>m>>n; int(*p)@@ [100]; p=a; for(i=0;i<m;i++) for(j=0;j<n;j++) cin>>@@ *(*(p+i)+j); for(i=0;i<m;i++) sum=sum+@@ **@@ (p@@ +i)@@ +@@ *(*(p+i)@@ +n-1); for(j=0;j<n;j++) sum=sum+@@ *(@@ *p@@ +j)+@@ *(*(p@@ +m-1)@@ +j); sum=sum-@@ **@@ p@@ -@@ *(@@ *p@@ +@@ n-1)@@ -@@ **@@ (p@@ +m-1)@@ -@@ *(*(p@@ +m-1)@@ +n-1); cout<<sum<<endl; } }  
c -1
h -1
intmain() { inta[16],@@ i,j,k,@@ count,@@ n; for(i=0;i<16;i++) { count=0; n=0; for(j=0;j<@@ 16@@ ;j++) { scanf("%d",&a[j]); if(a[0]==-1) break; if(a[j]@@ ==0) break; count++; } if(a[0]==-1) break; for(j=0;j<@@ count@@ ;j++) { for(k=0;k<@@ count@@ ;k++) { if(a[k@@ ]==2*@@ a[j]) n++; } } printf("%d\n",n); } return0; }  
c -1
h -1
0

int@@ cal@@ (int,int); intmain() { intn=0; cin>>n; for(inti=0;i<n;i++) { intm=0; cin>>m; cout<<@@ cal@@ (m,@@ 2)<<endl; } return0; } int@@ cal@@ (intm,int@@ i) { intcount=0; if(m@@ ==1)@@ return1; for(i@@ ;i<=@@ m;i++) { if(m@@ %i==0) { count+=@@ cal@@ (m@@ /i,i); } } returncount; }  
c -1
h -1
charname@@ ; intnum,@@ k=0,@@ t=0; int@@ nametimes@@ [100]={0}; structbook { unsigned@@ int@@ No@@ ; char@@ Name@@ [26]; }@@ *p; void@@ operate@@ () { inti; for(i=@@ 65@@ ;i<@@ 91@@ ;i++) if(@@ nametimes@@ [i]>@@ t) { t=@@ nametimes@@ [i]; name@@ =i; } } voidprint() { structbook*@@ pi@@ ; inti; printf("%c\n%d\n",@@ name,@@ t); for(@@ pi@@ =p@@ ;@@ pi@@ <@@ p+@@ num;@@ pi@@ ++) for(i=0;@@ pi@@ ->@@ Name@@ [i]!='\0';i++) if(@@ pi@@ ->@@ Name@@ [i]==@@ name@@ ) { if(k==0) { printf("%d",@@ pi@@ ->@@ No@@ ); k++; } else printf("\n%d",@@ pi@@ ->@@ No@@ ); break; } } main() { scanf("%d",&num); structbook*@@ pi@@ ; inti; p=(struct@@ book@@ *)malloc(@@ num@@ *@@ sizeof(struct@@ book)); for(@@ pi@@ =p@@ ;@@ pi@@ <@@ p+@@ num;@@ pi@@ ++) { scanf("%d%s",&@@ pi@@ ->@@ No@@ ,@@ pi@@ ->@@ Name@@ ); for(i=0;@@ pi@@ ->@@ Name@@ [i]!='\0';i++) nametimes@@ [@@ (int)@@ pi@@ ->@@ Name@@ [i]@@ ]++; } operate@@ (); print(); }  
c -1
h -1
0

intmain(intargc,char*argv[]) { intn,k,@@ a[1000],@@ i,j,@@ t=0; scanf("%d%d",&n,&k); for(i=0;i<n;i++){ scanf("%d",&a[i]);} for(i=0;i<n@@ /2@@ +1@@ ;i++){ for(j=i+1;j<n;j++){ if(a[i]+a[j]==@@ k){@@ t@@ =1;break;} } if(t@@ ==1)break; } if(t@@ ==1)@@ printf("yes"); elseprintf("no"); return0; }  
c -1
h -1
intmain() { structstudent{ long@@ num; long@@ chinese; long@@ maths; long@@ sum; }@@ t[@@ 100000]; long@@ n,@@ i,j,k,@@ tmp; scanf("%ld",&n); for(i=0;i<n;i++) { scanf("%ld@@ %ld@@ %ld@@ ",&@@ t@@ [i].num,&@@ t@@ [i].@@ chinese@@ ,&@@ t@@ [i].@@ maths@@ ); } for(i=0;i<n;i++) { t@@ [i].@@ sum=@@ t@@ [i].@@ chinese+@@ t@@ [i].@@ maths; } for(i=0;i<3;i++) { k=i; for(j=i+1;j<n;j++) { if(t@@ [j].@@ sum>@@ t@@ [k].@@ sum) k=j; } tmp=@@ t@@ [i].@@ sum; t@@ [i].@@ sum=@@ t@@ [k].@@ sum; t@@ [k].@@ sum=@@ tmp; tmp=@@ t@@ [i].@@ num; t@@ [i].@@ num=@@ t@@ [k].@@ num; t@@ [k].@@ num=@@ tmp; } for(i=0;i<3;i++) { printf("%ld@@ %ld@@ \n",@@ t@@ [i].@@ num,@@ t@@ [i].@@ sum); } return0; }  
c -1
h -1
0

intsum; voidf@@ (intx,int@@ i){ if(x@@ ==1)@@ sum++; else{ for(@@ ;i<=@@ x;i++) if(x@@ %i==0)@@ f(@@ x@@ /i,i); } } intmain(){ intn; cin>>n; while(n@@ >0){ int@@ x=0,@@ i,@@ ans@@ =1; cin>>x; for(i=2@@ ;i@@ *@@ i@@ <@@ x@@ ;i++){ if(x@@ %i==0){ sum=0; f(@@ x@@ /i,i); ans@@ +=@@ sum; } } cout<<ans@@ <<endl; n--; } return0; }  
c -1
h -1
intmain() { intn,k,@@ sum; scanf("%d%d",&n,&k); int@@ shu@@ [@@ NUM@@ ]; for(inti=0;i<n;i++) { scanf("%d",&(@@ shu@@ [i]@@ )); } for(intj=0;j<n;j++) { for(int@@ l=@@ n-1;@@ l>@@ j@@ ;@@ l@@ --) { sum=@@ shu@@ [j]+@@ shu@@ [l]; if(sum@@ ==k) { printf("yes"); break; } } if(sum@@ ==@@ k@@ )break; } if(sum@@ !=@@ k)@@ printf("no"); return0; }  
c -1
h -1
0

int@@ fen@@ (intx,int@@ y); intmain(){ intn,i,@@ m[@@ 500]; scanf("%d",&n); for(i=0;i<n;i++) { scanf("%d",&@@ m[i]); printf("%d\n",@@ fen@@ (m@@ [i],@@ 2)); } return0; } int@@ fen@@ (intx,int@@ y){ intj,@@ k; int@@ result=1; if(x@@ <@@ y) return0; for(j=@@ y@@ ;j<@@ x;j++) { if(x@@ %j==0) result+=@@ fen@@ (x@@ /j,j); } returnresult; }  
c -1
h -1
int@@ l=0,@@ num=0,@@ o@@ ; voidf@@ (inti,int@@ in@@ ) { intj; for(j=i;j<@@ (@@ in@@ +1)@@ ;j++) { if(j@@ *(@@ in@@ /j@@ )==@@ in@@ ) { o@@ =@@ in@@ /@@ j; f(@@ j,@@ in@@ /j@@ ); o@@ =@@ o@@ *@@ j; } } if(@@ o@@ ==1){@@ num=num@@ +1;} } intmain() { intt; cin>>t; inti; int@@ in@@ ; for(i=0;i<t;i++) { cin>>@@ in@@ ; f(@@ 2,@@ in@@ ); cout<<num<<endl; num=0; } return0; }  
c -1
h -1
1


intmain() { intk; cin>>k; for(inti=0;i<k;i++) { intm,n; cin>>m>>n; inta[@@ m@@ ][n]; for(inti=0;i<m;i++) { for(intj=0;j<n;j++) { cin>>a[i][j]; } } ints=0; for(inti=0;i<n;i++) { s+=@@ *(*(a@@ )@@ +i); } if(m@@ >1) for(inti=0;i<n;i++) { s+=@@ *(*(a@@ +m-1)@@ +i); } for(inti=1;i<@@ m-1;i++) { s+=@@ *(*(a+i)@@ +@@ 0); } for(inti=1;i<@@ m-1;i++) { s+=@@ *(*(a+i)@@ +n-1); } cout<<@@ s; if(i!=@@ k@@ -1) cout<<endl; } return0; }  
c -1
h -1
intmain() { charstr@@ [257],@@ s[@@ 257@@ ],@@ r@@ [257]; intlen1,len2,@@ len3@@ ,@@ i,j,k,@@ c,@@ flag=0; scanf("%s%s%s",@@ str,@@ s,@@ r); len1=strlen(@@ str); len2@@ =strlen(s); len3@@ =strlen(@@ r); j=0; while(@@ str@@ [j]@@ !='\0') { if(str@@ [j]==@@ s@@ [0]) { c@@ =j; for(i=0;i<@@ len2@@ ;i++) { if(str@@ [j+i@@ ]!=@@ s@@ [i]) { flag=0; break; } } if(i==@@ len2) { flag=1; break; } } j++; } if(flag) { for(k=0;k<@@ c@@ ;k++) printf("%c",str@@ [k]); printf("%s",@@ r); for(k=@@ c+@@ len2@@ ;k<@@ len1@@ ;k++) printf("%c",str@@ [k]); } else printf("%s",str); return0; }  
c -1
h -1
0

intmain() { intyear,month,day,@@ flag; int@@ daytal@@ ,@@ tal@@ ; cin>>year>>@@ month>>@@ day; if(year%@@ 400==0||(@@ year%@@ 4==0)&&(@@ year%100!=0@@ )) flag=0; else flag=1; switch(month) { case1: daytal@@ =0; break; case2: daytal@@ =@@ 31; break; case3: daytal@@ =@@ 60@@ ; break; case4: daytal@@ =@@ 91@@ ; break; case5: daytal@@ =@@ 121@@ ; break; case6: daytal@@ =@@ 152@@ ; break; case7: daytal@@ =@@ 182@@ ; break; case8: daytal@@ =@@ 213@@ ; break; case9: daytal@@ =@@ 244@@ ; break; case10: daytal@@ =@@ 274@@ ; break; case11: daytal@@ =@@ 305@@ ; break; case12: daytal@@ =@@ 335@@ ; break; } if(month@@ <@@ 2) flag=0; tal@@ =@@ daytal@@ +day@@ -@@ flag; cout<<@@ tal@@ <<endl; return0; }  
c -1
h -1
voidmain() { inti,j,@@ l,@@ m=0,@@ c@@ [100][100],@@ f@@ [100]={0}; for(j=1@@ ;@@ ;j++) { scanf("%d",&@@ c[j]@@ [1]); if(c@@ [j]@@ [1@@ ]==@@ -1)break; for(i=2@@ ;@@ ;i++) { scanf("%d",&@@ c[j]@@ [i]); if(c@@ [j]@@ [i]@@ ==0)break; for(l@@ =i;@@ l@@ >=1@@ ;@@ l@@ --) if(c@@ [j]@@ [l@@ ]==2*@@ c[j]@@ [i]@@ ||@@ c[j]@@ [i]==@@ 2*@@ c[j]@@ [l@@ ])@@ f@@ [j]@@ ++; } m++; } for(j=1;j<=m;j++) printf("%d\n",@@ f@@ [j]); }  
c -1
h -1
0

const@@ int@@ maxn=@@ 55@@ ; inta[@@ maxn@@ ],@@ dp@@ [@@ maxn@@ ][@@ maxn@@ ]; intmain() { int@@ T@@ ,@@ n,i,j,@@ ans; while(@@ scanf("%d",&@@ n)@@ !=@@ EOF@@ ) { for(i=1;i<=@@ n;i++)@@ scanf("%d",a@@ +i); memset(@@ dp@@ ,@@ -1,@@ sizeof(@@ dp@@ )); for(i=1;i<=@@ n;i++)@@ dp@@ [i]@@ [i]=1; for(i=1;i<n;i++) { for(j=1;j<=@@ i;j++) { dp@@ [i+1]@@ [j]=@@ max(@@ dp@@ [i+1][j]@@ ,@@ dp@@ [i][j]); if(a@@ [i+1@@ ]<=@@ a[j]) dp@@ [i+1]@@ [i+1]=@@ max(@@ dp@@ [i+1]@@ [i+1],@@ dp@@ [i][j]@@ +1); } } ans=0; for(i=@@ n,@@ j@@ =1@@ ;j<=@@ i@@ ;j++)@@ ans=@@ max(@@ ans@@ ,@@ dp@@ [i][j]); printf("%d\n",@@ ans); } return0; }  
c -1
h -1
structstudent {int@@ ID; int@@ ch; int@@ ma; }; voidmain() {@@ structstudent@@ re@@ [N]; intn; inti=0,j=0,@@ rec@@ ; int@@ total@@ [N]; scanf("%d",&n); for(i=0;i<n;i++) {@@ scanf("%d%d%d",&@@ re@@ [i].@@ ID,&@@ re@@ [i].@@ ch@@ ,&@@ re@@ [i].@@ ma@@ ); total@@ [i]=@@ re@@ [i].@@ ch@@ +@@ re@@ [i].@@ ma; } intmax=@@ total@@ [0]; for(i=0;i<n;i++) {@@ if(max<@@ total@@ [i]) {max=@@ total@@ [i]; rec@@ =i; } if(i==@@ n-1) {@@ printf("%d%d\n",@@ re@@ [@@ rec@@ ].ID,@@ total@@ [@@ rec@@ ]); total@@ [@@ rec@@ ]=0; i=0; max=@@ total@@ [0]; j++; } if(j==@@ 3) break; } }  
c -1
h -1
0

char@@ f@@ (int@@ y); intmain() { intm,i,j,@@ number@@ [1000],@@ auther@@ [26],@@ total=0; charname@@ [1000][@@ 27]; scanf("%d",&m); for(i=0;i<m;i++){ scanf("%d%s",&@@ number@@ [i],@@ name@@ [i]); intn; n=strlen(@@ name@@ [i]); for(j=0;j<n;j++){ switch(@@ name@@ [i][j]@@ ){ case'@@ A@@ ':@@ auther@@ [0]@@ ++@@ ;break; case'@@ B@@ ':@@ auther@@ [1]@@ ++@@ ;break; case'@@ C@@ ':@@ auther@@ [2@@ ]++;break; case'@@ D@@ ':@@ auther@@ [3@@ ]++;break; case'@@ E@@ ':@@ auther@@ [4@@ ]++;break; case'@@ F@@ ':@@ auther@@ [5@@ ]++;break; case'@@ G@@ ':@@ auther@@ [@@ 6@@ ]++;break; case'@@ H@@ ':@@ auther@@ [@@ 7@@ ]++;break; case'@@ I@@ ':@@ auther@@ [@@ 8@@ ]++;break; case'@@ J@@ ':@@ auther@@ [@@ 9@@ ]++;break; case'@@ K@@ ':@@ auther@@ [10@@ ]++;break; case'@@ L@@ ':@@ auther@@ [11@@ ]++;break; case'@@ M@@ ':@@ auther@@ [12@@ ]++;break; case'@@ N@@ ':@@ auther@@ [@@ 13@@ ]++;break; case'@@ O@@ ':@@ auther@@ [@@ 14@@ ]++;break; case'@@ P@@ ':@@ auther@@ [@@ 15@@ ]++;break; case'@@ Q@@ ':@@ auther@@ [@@ 16@@ ]++;break; case'@@ R@@ ':@@ auther@@ [@@ 17@@ ]++;break; case'@@ S@@ ':@@ auther@@ [@@ 18@@ ]++;break; case'@@ T@@ ':@@ auther@@ [@@ 19@@ ]++;break; case'@@ U@@ ':@@ auther@@ [@@ 20@@ ]++;break; case'@@ V@@ ':@@ auther@@ [@@ 21@@ ]++;break; case'@@ W@@ ':@@ auther@@ [@@ 22@@ ]++;break; case'@@ X@@ ':@@ auther@@ [@@ 23@@ ]++;break; case'@@ Y@@ ':@@ auther@@ [@@ 24@@ ]++;break; case'@@ Z@@ ':@@ auther@@ [25@@ ]++;break; } } } intmax=@@ auther@@ [0],@@ k,@@ t=0; for(k=1;k<@@ 26@@ ;k++){ if(@@ auther@@ [k]@@ >max){ max=@@ auther@@ [k]; t=@@ k; } } printf("%c\n",@@ f(@@ t@@ )); for(i=0;i<m;i++){ int@@ q; q@@ =strlen(@@ name@@ [i]); for(j=0;j<@@ q@@ ;j++){ if(name@@ [i][j]==@@ f(@@ t@@ )) total@@ ++; } } printf("%d\n",@@ total); for(i=0;i<m;i++){ intp; p@@ =strlen(@@ name@@ [i]); for(j=0;j<@@ p@@ ;j++){ if(name@@ [i][j]==@@ f(@@ t@@ )) printf("%d\n",@@ number@@ [i]); } } return0; } char@@ f@@ (int@@ y){ char@@ x; switch(@@ y){ case@@ 0@@ :@@ x@@ ='A'@@ ;break; case1:@@ x@@ ='@@ B@@ '@@ ;break; case2:@@ x@@ ='@@ C@@ '@@ ;break; case3:@@ x@@ ='@@ D@@ '@@ ;break; case4:@@ x@@ ='@@ E@@ '@@ ;break; case5:@@ x@@ ='@@ F@@ '@@ ;break; case6:@@ x@@ ='@@ G@@ '@@ ;break; case7:@@ x@@ ='@@ H@@ '@@ ;break; case8:@@ x@@ ='@@ I@@ '@@ ;break; case9:@@ x@@ ='@@ J@@ '@@ ;break; case10:@@ x@@ ='@@ K@@ '@@ ;break; case11:@@ x@@ ='@@ L@@ '@@ ;break; case12:@@ x@@ ='@@ M@@ '@@ ;break; case@@ 13@@ :@@ x@@ ='@@ N@@ '@@ ;break; case@@ 14@@ :@@ x@@ ='@@ O@@ '@@ ;break; case@@ 15@@ :@@ x@@ ='@@ P@@ '@@ ;break; case@@ 16@@ :@@ x@@ ='@@ Q@@ '@@ ;break; case@@ 17@@ :@@ x@@ ='@@ R@@ '@@ ;break; case@@ 18@@ :@@ x@@ ='@@ S@@ '@@ ;break; case@@ 19@@ :@@ x@@ ='@@ T@@ '@@ ;break; case@@ 20@@ :@@ x@@ ='@@ U@@ '@@ ;break; case@@ 21@@ :@@ x@@ ='@@ V@@ '@@ ;break; case@@ 22@@ :@@ x@@ ='@@ W@@ '@@ ;break; case@@ 23@@ :@@ x@@ ='@@ X@@ '@@ ;break; case@@ 24@@ :@@ x@@ ='@@ Y@@ '@@ ;break; case@@ 25@@ :@@ x@@ ='@@ Z'@@ ;break; } return@@ x; }  
c -1
h -1
voidmain() { intn,@@ m@@ [100][100],@@ i,j,@@ a=0,b=0,@@ c=0,@@ d=0,@@ x,y,@@ s; scanf("%d",&n); for(i=0;i<n;i++) for(j=0;j<n;j++) scanf("%d",&@@ m@@ [i][j]); for(i=0;i<n;i++) for(j=0;j<n;j++) { if(m@@ [i][j]==0&&@@ m[i]@@ [j-1@@ ]==255@@ &&m@@ [i]@@ [j+1@@ ]==0) a@@ =j; if(j==@@ n-1@@ &&m@@ [i][j]==0) b=j; elseif(@@ j@@ !=@@ n-1@@ &&m@@ [i][j]==0&&@@ m[i]@@ [j+1@@ ]==255@@ &&m@@ [i]@@ [j-1]@@ ==0) b=j; if(i@@ ==0&&@@ m@@ [i][j]==0) c=i; elseif(@@ i@@ !=0&&@@ m@@ [i][j]==0&&@@ m@@ [i-1]@@ [j]==@@ 255@@ &&m@@ [i+1][j]@@ ==0) c=i; if(i==@@ n-1@@ &&m@@ [i][j]==0) d@@ =i; elseif(@@ i@@ !=@@ n-1@@ &&m@@ [i][j]==0&&@@ m@@ [i+1]@@ [j]==@@ 255@@ &&m@@ [i-1][j]@@ ==0) d@@ =i; } x=@@ b-@@ a@@ -1; y=@@ d@@ -c@@ -1; s=@@ x@@ *@@ y; printf("%d",s); }  
c -1
h -1
0

struct@@ bing { charid[20]; intage; }; intmain() { struct@@ bing@@ b[100@@ ],@@ sixup@@ [100],@@ sixdown@@ [100]; struct@@ bing@@ temp; intm; intn,@@ l; inti,j; scanf("%d",&m); for(i=0;i<=@@ m-1;i++) { scanf("%s%d",@@ b[i].@@ id,&@@ b@@ [i].age); } n@@ =0;@@ l=0; for(i=0;i<=@@ m-1;i++) { if(b@@ [i].age>=60) { sixup@@ [n@@ ]=b[i]; n++; } else {@@ sixdown@@ [l@@ ]=b[i]; l++; } } for(i=1;i<=n-1;i++) { temp=@@ sixup@@ [i]; for(j=i-1;j>=0;j--) { if(@@ temp.@@ age@@ >@@ sixup@@ [j].age@@ ) { sixup@@ [j+1]=@@ sixup@@ [j]; sixup@@ [j]=temp; } else { break; } } } for(i=0;i<=n-1;i++) { puts(@@ sixup@@ [i].id); } for(i=0;i<=@@ l@@ -1;i++) { puts(@@ sixdown@@ [i].id); } return0; }  
c -1
h -1
intmain() { intn,a[@@ 1000][1000],@@ i,j,@@ p,q,@@ num1@@ =0,@@ num2@@ =0,@@ sum; scanf("%d",&n); for(j=0;j<n;j++) { for(i=0;i<n;i++) scanf("%d",&a[j]@@ [i]); } for(j=0;j<n;j++) { for(i=0;i<n;i++) { if(a[j]@@ [i]==0) { num1@@ ++; p=@@ j@@ ;q@@ =i; } } if(@@ num1@@ !=0) break; } for(j=@@ p@@ ;@@ a[j]@@ [q@@ ]@@ ==0@@ ;j++) { num2@@ ++; } sum=(@@ num1@@ -2)*(@@ num2@@ -2); printf("%d",sum); return0; }  
c -1
h -1
0

intmain() { inti,j,@@ c[@@ 2@@ ],@@ e=0; chara[@@ 2][@@ 501]; double@@ b; scanf("%lf",&@@ b); for(i=0;i<2@@ ;i++){ scanf("%s",@@ a[i]); } c[@@ 0]=@@ strlen(@@ a[0]); c[@@ 1@@ ]=@@ strlen(@@ a[1]); if(c@@ [0]@@ !=@@ c[@@ 1@@ ]){ printf("error"); return0; } for(i=0;i<2@@ ;i++){ for(j=0;j<@@ c[i]@@ -1;j++){ if(a[i][j]@@ !='@@ A'&&@@ a[i][j]@@ !='@@ T'&&@@ a[i][j]@@ !='@@ G'&&@@ a[i][j]@@ !='@@ C'){ printf("error"); return0; } } } for(j=0;j<@@ c@@ [0]@@ ;j++){ if(a[0]@@ [j]==@@ a[1]@@ [j]){ e++; } } if(1.0*@@ e@@ /@@ c@@ [0]@@ >b@@ ){ printf("yes"); } else{ printf("no"); } return0; }  
c -1
h -1
intmain(){ intn,@@ sz[@@ 1000][1000]; inta,b,@@ c,d,@@ g; scanf("%d",&n); for(inti=0;i<n;i++){ for(intk=0;k<@@ n;k++){ scanf("%d",&@@ sz[i]@@ [k]); } } for(inti=0;i<n;i++){ for(intk=0;k<@@ n;k++){ if(sz[i]@@ [k]@@ ==0){ a=i; b=@@ k; } } } for(inti=@@ n-1@@ ;i>=0;i--){ for(int@@ k=@@ n-1@@ ;k>=0@@ ;k@@ --){ if(sz[i]@@ [k]@@ ==0){ c=i; d=@@ k; } } } g@@ =(@@ a@@ -c@@ -1)*(@@ b-@@ d@@ -1); printf("%d",@@ g@@ ); return0; }  
c -1
h -1
0

struct@@ mark { intnum; int@@ ch; intmath; intsum; }stu[100000]; intmain(intargc,char*argv[]) { inti,n; scanf("%d",&n); for(i=0;i<n;i++){ scanf("%d%d%d",&stu[i].num,&stu[i].@@ ch@@ ,&stu[i].math); stu[i].sum=stu[i].@@ math@@ +stu[i].@@ ch; } for(i=0;i<n-1;i++){ if(stu[i].@@ sum@@ >=@@ stu[i+1].@@ sum){ stu[@@ 100000@@ ]=@@ stu[i]; stu[i]=@@ stu@@ [i+1]; stu@@ [i+1]=@@ stu[100000]; } } for(i=0;i<n@@ -2@@ ;i++){ if(stu[i].@@ sum@@ >=@@ stu[i+1].@@ sum){ stu[@@ 100000@@ ]=@@ stu[i]; stu[i]=@@ stu@@ [i+1]; stu@@ [i+1]=@@ stu[100000]; } } for(i=0;i<n-@@ 3;i++){ if(stu[i].@@ sum@@ >=@@ stu[i+1].@@ sum){ stu[@@ 100000@@ ]=@@ stu[i]; stu[i]=@@ stu@@ [i+1]; stu@@ [i+1]=@@ stu[100000]; } } printf("%d%d\n%d%d\n%d%d\n",@@ stu[@@ n-1@@ ].num,stu[@@ n-1@@ ].@@ sum,@@ stu[@@ n-2@@ ].num,stu[@@ n-2@@ ].@@ sum,@@ stu[@@ n-@@ 3].@@ num,@@ stu[@@ n-@@ 3].@@ sum); return0; }  
c -1
h -1
intmain() { short@@ int@@ map@@ [@@ 1001@@ ][@@ 1001]; intn,i,j,@@ bx@@ ,@@ by@@ ,@@ ex@@ ,@@ ey@@ ,@@ ans; cin>>n; for(i=1;i<=n;i++) for(j=1;j<=n;j++) cin>>@@ map@@ [i][j]; for(i=2@@ ;i<n;i++) for(j=2@@ ;j<n;j++) { if(@@ map@@ [i][j]==@@ 255) { if(@@ map@@ [i]@@ [j-1]@@ ==0&&@@ map@@ [i-1][j]@@ ==0) { bx@@ =i; by@@ =j; } if(@@ map@@ [i]@@ [j+1]@@ ==0&&@@ map@@ [i+1][j]@@ ==0) { ex@@ =i; ey@@ =j; } } } ans@@ =(@@ ex@@ -@@ bx@@ +1)*(@@ ey@@ -@@ by@@ +1); cout<<@@ ans; return0; }  
c -1
h -1
0

intnum=0; void@@ check@@ (intm,int@@ n) { for(@@ ;m@@ <=n;@@ m@@ ++) { if(n%@@ m@@ ==0) { if(n@@ /@@ m@@ ==1) { num++; return; } else check@@ (m,@@ n/@@ m); } } } intmain() { intn,m; cin>>n; for(;@@ n;@@ n@@ --) { cin>>m; check@@ (2,@@ m); cout<<num<<endl; num=0; } return0; }  
c -1
h -1
intmain() { inti,j,k,l,@@ geshu@@ ,@@ get@@ ,@@ n=0; int@@ shuzu@@ [@@ 15]; for(j=0;@@ ;j++){ n=0; for(i=0;@@ ;i++){ scanf("%d",&@@ get@@ ); if(@@ get@@ ==@@ -1){ goto@@ end@@ ; } shuzu@@ [i]=@@ get@@ ; if(@@ get@@ ==0){ geshu@@ =i; break; } } for(k=0;k<@@ geshu@@ ;k++){ for(l=0;l<@@ geshu@@ ;@@ l++){ if(shuzu@@ [k]==2*@@ shuzu@@ [l@@ ]){ n=n+1; } } } printf("%d\n",n); } end@@ :@@ return0; }  
c -1
h -1
0

intf@@ (intx,inty) { if(y@@ ==@@ x) return1; if(y@@ >@@ x) return0; if(x%@@ y@@ ==0) return@@ f(@@ x,@@ y@@ +1)@@ +@@ f(@@ x/@@ y,@@ y); else return@@ f(@@ x,@@ y@@ +1); } intmain() { intn,@@ x; cin>>n; int@@ z,@@ i; i=@@ n; while(i@@ >0) { i@@ =i-1; cin>>x; z=@@ f(@@ x,@@ 2); cout<<@@ z@@ <<endl; } return0; }  
c -1
h -1
intmain() { struct@@ br { charid[10]; intage; }@@ *@@ patients@@ ,@@ t; intn,i,j; scanf("%d",&n); patients@@ =(struct@@ br@@ *)malloc(sizeof(struct@@ br@@ )*n); for(i=0;i<n;i++){ scanf("%s%d",@@ patients@@ [i].@@ id,@@ &@@ patients@@ [i].age); } for(i=0;i<n;i++){ for(j=n-1@@ ;j>i@@ ;j--){ if(@@ patients@@ [j].age@@ >=60@@ && patients@@ [j].age@@ >@@ patients@@ [j-1@@ ].age){ t=@@ patients@@ [j]; patients@@ [j]=@@ patients@@ [j-1]; patients@@ [j-1]=@@ t; } } } for(i=0;i<n;i++){ printf("%s\n",@@ patients@@ [i].id); } return0; }  
c -1
h -1
0

main() { intn; scanf("%d",&n); struct { intnum; chara[@@ 25]; }@@ book[999]; inti,j; for(i=0;i<=n-1;i++) { scanf("%d%s",&book[i].num,@@ book[i].@@ a); } ints[@@ 26]={0}; for(i=0;i<=n-1;i++) { int@@ len=strlen(@@ book[i].@@ a); for(j=0;j<len;j++) { s[@@ book[i].@@ a[j]@@ -'A']++; } } intmax=0; charname@@ ; for(i=0;i<=25;i++) { if(s@@ [i]>max) { max=@@ s[i]; name@@ ='A'+i; } } printf("%c\n",@@ name); printf("%d\n",max); for(i=0;i<=n-1;i++) { int@@ len=strlen(@@ book[i].@@ a); for(j=0;j<len;j++) { if(book[i].@@ a[j]==@@ name@@ ) printf("%d\n",book[i].@@ num); } } }  
c -1
h -1
intmain(){ intn; int@@ i,j@@ =0; scanf("%d",&n); char@@ **@@ id@@ =(char@@ **@@ )@@ malloc(@@ sizeof(@@ char@@ *)@@ *n); for(i=0;i<n;i++){ id@@ [i]@@ =(char@@ *)malloc(sizeof@@ (char)@@ *@@ 10@@ ); } int@@ p=0; int*@@ year@@ =@@ (int*)malloc(sizeof(int)*n); for(i=0;i<n;i++){ scanf("%s%d",@@ id[i],&@@ year@@ [i]); if(@@ year[i]@@ >=60){ p++; } } char@@ **@@ idolder@@ =(char@@ **@@ )@@ malloc(@@ sizeof(@@ char@@ *)@@ *p@@ ); for(i=0;i<n;i++){ idolder@@ [i]@@ =(char@@ *)malloc(sizeof@@ (char)@@ *@@ 10@@ ); } int*@@ yearolder@@ =@@ (int*)malloc(sizeof(int)@@ *p@@ ); for(i=0;i<n;i++){ if(@@ year[i]@@ >=60){ idolder@@ [j]=@@ id@@ [i]; yearolder@@ [j]=@@ year@@ [i]; j++; } } int@@ e; char*@@ id1@@ =(char@@ *)malloc(sizeof@@ (char)@@ *@@ 10@@ ); for(i=1;i<=@@ p@@ ;i++){ for(j=0;j<@@ p@@ -i;j++){ if(@@ yearolder@@ [j+1@@ ]>@@ yearolder@@ [j]){ id1@@ =@@ idolder@@ [j]; idolder@@ [j]=@@ idolder@@ [j+1]; idolder@@ [j+1]=@@ id1@@ ; e=@@ yearolder@@ [j]; yearolder@@ [j]=@@ yearolder@@ [j+1]; yearolder@@ [j+1]=@@ e; } } } for(i=0;i<p@@ ;i++){ printf("%s\n",@@ idolder@@ [i]); } for(i=0;i<n;i++){ if(@@ year[i]@@ <60){ printf("%s\n",@@ id[i]); } } return0; }  
c -1
h -1
0

intnum@@ (inta,int@@ b,int@@ c) { intsum=0,@@ j; if(a@@ >@@ c)@@ return0; if(b@@ ==1)@@ return1; for(j=@@ a@@ ;j<=@@ c;j++) if(c@@ %j@@ ==0)@@ sum=sum+@@ num@@ (@@ j,@@ b@@ -1,@@ c@@ /j@@ ); returnsum; } intmain() { intk,@@ n,m,@@ e=0,@@ i; cin>>n; while(@@ e@@ <n) { cin>>m; k=0; intf@@ =@@ m; for(i=2;i<=@@ f@@ ;i++) if(f@@ %i==0) { k++; f=@@ f@@ /@@ i; i=1; } cout<<num@@ (@@ 1,@@ k,@@ m@@ )<<endl; e++; } return0; }  
c -1
h -1
intmain(){ intsz[@@ SUM@@ ]; intn,k; scanf("%d%d",&n,&k); inti; for(i=0;i<n;i++){ scanf("%d",&sz[i]); } intj,@@ sum=0; for(j=0;j<n-1@@ ;j++){ for(i=1;i<=n@@ -j@@ -1;i++){ if(sz@@ [j]+@@ sz@@ [j+i@@ ]==k){ sum++; } } } if(sum@@ !=0){ printf("yes"); } else{ printf("no"); } return0; }  
c -1
h -1
0

int@@ old@@ =0; struct@@ seqs { charid@@ [11]; intage; struct@@ seqs@@ *next; }; struct@@ seqs@@ *@@ build@@ (int@@ l) { inti; struct@@ seqs@@ *head,*@@ newnode@@ ,*p; head=(struct@@ seqs@@ *)malloc(len); scanf("%s%d",@@ head->@@ id,&@@ head@@ ->age@@ ); p=head; if(head@@ ->age@@ >=60) old@@ ++; for(i=1;i<@@ l@@ ;i++) { newnode@@ =(struct@@ seqs@@ *)malloc(len); scanf("%s%d",@@ newnode@@ ->@@ id,&@@ newnode@@ ->age@@ ); if(@@ newnode@@ ->age@@ <60) { p@@ ->next=@@ newnode@@ ; p=@@ newnode@@ ; } else { old@@ ++; newnode@@ ->next=@@ head; head=@@ newnode@@ ; } } p@@ ->next=NULL; returnhead; } struct@@ seqs@@ *@@ rebuild@@ (struct@@ seqs@@ *@@ headx@@ ) { inti; struct@@ seqs@@ *head,*@@ newnode@@ ,*@@ p,*@@ px@@ ; newnode@@ =(struct@@ seqs@@ *)malloc(@@ len@@ );@@ newnode@@ ->next=NULL; strcpy(@@ newnode@@ ->id,@@ headx@@ ->id); newnode@@ ->age=@@ headx@@ ->@@ age; p=@@ newnode@@ ; px@@ =@@ headx@@ ->next; for(i=1;i<@@ old@@ ;i++) { newnode@@ =(struct@@ seqs@@ *)malloc(len); strcpy(@@ newnode@@ ->id,@@ px@@ ->id); newnode@@ ->age=@@ px@@ ->@@ age; newnode@@ ->next=p; p=@@ newnode@@ ; px@@ =@@ px@@ ->next; } head=@@ p; returnhead; } void@@ bubble@@ (struct@@ seqs@@ *head@@ ,int@@ l) { struct@@ seqs@@ *p; inti,j,temp; char@@ t@@ [11@@ ]={0}; for(i=1;i<@@ l@@ ;i++) for(p=head@@ ,j@@ =0;j<@@ l@@ -i@@ ;j++,@@ p=p->next) if(p->@@ age@@ <p@@ ->next@@ ->age@@ ) { strcpy(@@ t,@@ p->@@ id); strcpy(@@ p->@@ id,@@ p->next@@ ->id); strcpy(@@ p->next@@ ->id,@@ t); temp=@@ p->@@ age; p->age@@ =p@@ ->next@@ ->@@ age; p->next@@ ->age=@@ temp; } } voidmain() { intn,i,j; struct@@ seqs@@ *p,*@@ px@@ ; scanf("%d",&n); p=@@ build@@ (n); px@@ =@@ rebuild@@ (p); bubble@@ (@@ px@@ ,@@ old@@ ); while(@@ px@@ !=NULL) { printf("%s\n",@@ px@@ ->id); px@@ =@@ px@@ ->next; } for(i=0;i<@@ old@@ ;i++) p=p->next; while(p!=NULL) { printf("%s\n",p->id); p=p->next; } }  
c -1
h -1
intmain() { intn,a[@@ 20001]; cin>>n; for(inti=0;i<=@@ n-1;i++) cin>>a[i]; for(intj=0;j<=@@ n-1;j++) for(int@@ k=@@ n-1@@ ;k@@ >=@@ j@@ +1@@ ;k--) { if(a[j]==@@ a[k]) a[k]@@ =0; } cout<<a[0]; for(intm@@ =1;m@@ <=@@ n-1@@ ;m++) { if(a[m@@ ]!=0) cout<<""<<@@ a[m@@ ]; } return0; }  
c -1
h -1
0

intmain() { inta[100][100],@@ n,@@ i,j,k; scanf("%d",&n); for(i=1;i<=n;i++) { inta[100][100],@@ r,@@ l,@@ sum=0; scanf("%d%d",&@@ r@@ ,&@@ l); for(j=0;j<=@@ r@@ -1;j++) for(k=0;k<=@@ l@@ -1;k++) scanf("%d",@@ *(a@@ +j)+@@ k); for(j=0;j<=@@ r@@ -1;j++) { for(k=0;k<=@@ l@@ -1;k++) { if(j==@@ r@@ -1@@ ||j@@ ==0||@@ k==@@ l@@ -1@@ ||@@ k@@ ==0) sum+=*(*(a@@ +j)+@@ k); } }@@ printf("%d\n",sum); } return0; }  
c -1
h -1
intmain() { intn,a[@@ 20000],@@ i,j; scanf("%d",&n); for(i=0;i<n;i++) { scanf("%d",&a[i]); } for(i=0;i<n;i++) {@@ for(j=i+1;j<n;j++) if(j==i) continue; elseif(@@ a[j]==@@ a[i]) a[j]@@ =-1; } for(i=0;i<n;i++) {@@ if(a[i]==-1) continue; else {@@ printf("%d",a[i]); break;} } for(j=i+1;j<n;j++) {@@ if(a[j]==@@ -1) continue; else printf("%d",@@ a[j]); } return0; }  
c -1
h -1
0

intmain() { void@@ pre@@ (int@@ *,@@ int@@ ); void@@ bubble_sort@@ (int@@ *,@@ int@@ ); void@@ merge@@ (int@@ *,@@ int@@ ,int@@ *,@@ int@@ ,int*@@ ); voidprint@@ (int@@ *,@@ int@@ ); inta[@@ 1000],b[1000],@@ c[@@ 1000],@@ A@@ ,@@ B@@ ; scanf("%d%d",&@@ A@@ ,&@@ B@@ ); pre@@ (a,@@ A@@ );@@ bubble_sort@@ (a,@@ A@@ ); pre@@ (b,@@ B@@ );@@ bubble_sort@@ (b,@@ B@@ ); merge@@ (a,@@ A@@ ,@@ b,@@ B@@ ,@@ c); print(@@ c,@@ A@@ +@@ B@@ ); } void@@ pre@@ (int*@@ a,int@@ A@@ ) { inti; for(i=0;i<@@ A@@ ;i++) scanf("%d",a@@ +i); } void@@ bubble_sort@@ (int*@@ a,int@@ A@@ ) { inti,j,temp; for(j=@@ A@@ -1@@ ;j>0;j--) { for(i=0;i<j;i++) if(a[i]>a[i+1]) { temp=a[i]; a[i]=a[i+1]; a[i+1]=@@ temp; } } } void@@ merge@@ (int*@@ a,int@@ A@@ ,int*@@ b,int@@ B@@ ,int*@@ c) { inti; for(i=0;i<@@ A@@ ;i++) c[i]=a[i]; for(i=0;i<@@ B@@ ;i++) c@@ [i+@@ A@@ ]=b[i]; } voidprint@@ (int*@@ c@@ ,int@@ C@@ ) { inti; printf("%d",c@@ [0]); for(i=1;i<@@ C@@ ;i++) printf("%d",c[i]); }  
c -1
h -1
intmain() { inta[@@ 20001@@ ]={0}; intn,i,j,k; cin>>n; for(i=0;i<n;i++) cin>>a[i]; for(i=0;i<n-1;i++) for(j=i+1;j<n;j++) if(a[j]==a[i]) {@@ for(k=j@@ ;k<@@ n-1;k++) a[k]=a[k@@ +1]; j=j-1; n=@@ n-1; } for(i=0;i<n-1;i++) cout<<a[i]<<""; cout<<a[@@ n-1@@ ]<<endl; return0; }  
c -1
h -1
0

intmain() { intn,k,@@ i,j; scanf("%d%d",&n,&k); inta[n]; char@@ p; for(i=0;i<n;i++) { scanf("%d",&a[i]); } for(i=0;i<n;i++) { for(j=1;j<n;j++) { if(a[i]+a[j]==k) { p@@ ='@@ y@@ '; printf("yes"); break; } else continue; } if(p@@ =='@@ y@@ ') break; else continue; } if(p@@ =='@@ y@@ ') return0; else printf("no"); return0; }  
c -1
h -1
intmain(){ chars@@ [100@@ ]={'\0'},@@ w@@ [50@@ ]={'\0'},@@ d[@@ 50@@ ]={'\0'},@@ h@@ [100@@ ]={'\0'}; inti,j,@@ k=0,@@ t=0,@@ m,@@ n=0; gets(s); gets(@@ w); gets(@@ d); for(i=0;s[i]@@ !='\0';i++){ if((@@ s@@ [i]==@@ w@@ [0]@@ )&&(@@ n@@ ==0)@@ ){ k=0; for(j=0;@@ w@@ [j]@@ !='\0';j++){ t=0; if(w@@ [j]==@@ s[i+j@@ ]){ k++; t=1; } } if(t@@ ==1){ for(m@@ =0;d@@ [m]@@ !='\0'@@ ;m++){ printf("%c",@@ d@@ [m]@@ );@@ }@@ i@@ =i+@@ k;@@ n=1; } } if(s@@ [i]!=@@ '\0')@@ {@@ printf("%c",@@ s[i]@@ );} } }  
c -1
h -1
0

intmain(){ intn; scanf("%d",&n); int@@ visit@@ [@@ 101@@ ]={0}; inti; for(i=0;i<n;i++){ intnum; scanf("%d",&num); if(@@ visit@@ [@@ num@@ ]@@ ==1){ }else{ if(i@@ !=0){ printf(""); } printf("%d",@@ num); visit@@ [@@ num@@ ]=1; } } printf("\n"); return0; }  
c -1
h -1
intmain(){ intn,i,j,@@ num=0,@@ x1@@ =@@ 1000@@ ,@@ y1@@ =@@ 1000@@ ,@@ x2@@ =0,@@ y2@@ =0; cin>>n; const@@ intN@@ =@@ n; inta[@@ N@@ ][@@ N]; for(i=0;i<n@@ ;++@@ i){ for(j=0;j<@@ n;++@@ j){ cin>>a[i][j]; } } for(i=0;i<n@@ ;++@@ i){ for(j=0;j<@@ n;++@@ j){ if(a[i][j]@@ ==0){ if(i<@@ x1@@ )@@ x1=i; if(j<@@ y1@@ )@@ y1=j; if(i>@@ x2@@ )@@ x2=i; if(j@@ >@@ y2@@ )@@ y2=j; } } } num@@ =(@@ x2-x1-1)*(y2-y1-1); cout<<@@ num; return0; }  
c -1
h -1
0

voidmain() { structbook { intnum; char@@ w@@ [27]; }; structbook@@ b[@@ 1000]; intn,i,j,k,@@ c[@@ 26]={0},@@ max; scanf("%d",&n); for(i=0;i<n;i++) { scanf("%d%s",&@@ b[i].@@ num,@@ b[i].@@ w); } for(i@@ ='A'@@ ;i<=@@ 'Z'@@ ;i++) { for(j=0;j<n;j++) { for(k=0;k<@@ strlen(@@ b[j].@@ w@@ )@@ ;k++) { if(i==@@ b[j].@@ w@@ [k]) { c@@ [i-@@ 65@@ ]++; } } } } max=0; for(i=1;i<26;i++) { if(c@@ [i]>@@ c[@@ max@@ ]) max=i; } printf("%c\n",@@ max@@ +65); printf("%d\n",@@ c[@@ max@@ ]); for(i=0;i<n;i++) { for(j=0;j<strlen(@@ b[i].@@ w@@ );j++) { if(b[i].@@ w@@ [j]==@@ max@@ +65) { printf("%d\n",b[i].@@ num); break; } } } }  
c -1
h -1
intmain() { introw,col,@@ a[100][100],@@ i,j,@@ k=0,@@ b[@@ 10000],@@ s; scanf("%d%d",&row,&col); for(i=0;i<row;i++) { for(j=0;j<col;j++) { scanf("%d",&a[i][j]); } } if(row@@ >=@@ col) { for(s=0;s@@ <col@@ ;s++) { for(i=0;i<=@@ s;i++) { b[k]=@@ a[i][@@ s@@ -i@@ ]; k++; } } for(@@ s=@@ col@@ ;s@@ <row@@ ;s++) { for(i=@@ s@@ -col@@ +1;i<=@@ s;i++) { b[k]=@@ a[i][@@ s@@ -i@@ ]; k++; } } for(@@ s=@@ row@@ ;s@@ <row@@ +col@@ -1;@@ s++) { for(i=@@ s@@ -col@@ +1;i<@@ row;i++) { b[k]=@@ a[i][@@ s@@ -i@@ ]; k++; } } } else { for(s=0;s@@ <row@@ ;s++) { for(i=0;i<=@@ s;i++) { b[k]=@@ a[i][@@ s@@ -i@@ ]; k++; } } for(@@ s=@@ row@@ ;s@@ <col@@ ;s++) { for(i=0;i<row;i++) { b[k]=@@ a[i][@@ s@@ -i@@ ]; k++; } } for(@@ s=@@ col@@ ;s@@ <col@@ +row@@ -1;@@ s++) { for(i=@@ s@@ -col@@ +1;i<@@ row;i++) { b[k]=@@ a[i][@@ s@@ -i@@ ]; k++; } } } for(i=0;i<k;i++) { printf("%d\n",@@ b[i]); } return0; }  
c -1
h -1
0

struct@@ shu {intnum; charauthor[26]; }; voidmain() { struct@@ shu@@ shu@@ [999]; intn,i,j,k,@@ m; scanf("%d",&n); for(i=0;i<n;i++) scanf("%d%s",&@@ shu[i].@@ num,@@ shu[i].@@ author); inta[@@ 26]={0}; for(i=0;i<n;i++) { for(j=0;j<26;j++) { if(@@ shu[i].author[j]=='@@ A')@@ a[0]=@@ a[0]@@ +1; elseif(@@ shu[i].author[j]=='@@ B@@ ')@@ a[1]=@@ a[1]@@ +1; elseif(@@ shu[i].author[j]=='@@ C')@@ a[2@@ ]=a[@@ 2@@ ]+1; elseif(@@ shu[i].author[j]=='@@ D@@ ')a[@@ 3@@ ]=a[@@ 3@@ ]+1; elseif(@@ shu[i].author[j]=='@@ E@@ ')a[@@ 4@@ ]=a[@@ 4@@ ]+1; elseif(@@ shu[i].author[j]=='@@ F@@ ')a[@@ 5@@ ]=a[@@ 5@@ ]+1; elseif(@@ shu[i].author[j]=='@@ G')@@ a[@@ 6@@ ]=a[@@ 6@@ ]+1; elseif(@@ shu[i].author[j]=='@@ H@@ ')a[@@ 7@@ ]=a[@@ 7@@ ]+1; elseif(@@ shu[i].author[j]=='@@ I@@ ')a[@@ 8@@ ]=a[@@ 8@@ ]+1; elseif(@@ shu[i].author[j]=='@@ J@@ ')a[@@ 9@@ ]=a[@@ 9@@ ]+1; elseif(@@ shu[i].author[j]=='@@ K@@ ')a[@@ 10@@ ]=a[@@ 10@@ ]+1; elseif(@@ shu[i].author[j]=='@@ L@@ ')a[@@ 11@@ ]=a[@@ 11@@ ]+1; elseif(@@ shu[i].author[j]=='@@ M@@ ')a[@@ 12@@ ]=a[@@ 12@@ ]+1; elseif(@@ shu[i].author[j]=='@@ N@@ ')a[@@ 13@@ ]=a[@@ 13@@ ]+1; elseif(@@ shu[i].author[j]=='@@ O@@ ')a[@@ 14@@ ]=a[@@ 14@@ ]+1; elseif(@@ shu[i].author[j]=='@@ P@@ ')a[@@ 15@@ ]=a[@@ 15@@ ]+1; elseif(@@ shu[i].author[j]=='@@ Q@@ ')a[@@ 16@@ ]=a[@@ 16@@ ]+1; elseif(@@ shu[i].author[j]=='@@ R@@ ')a[@@ 17@@ ]=a[@@ 17@@ ]+1; elseif(@@ shu[i].author[j]=='@@ S@@ ')a[@@ 18@@ ]=a[@@ 18@@ ]+1; elseif(@@ shu[i].author[j]=='@@ T')@@ a[@@ 19@@ ]=a[@@ 19@@ ]+1; elseif(@@ shu[i].author[j]=='@@ U@@ ')a[@@ 20@@ ]=a[@@ 20@@ ]+1; elseif(@@ shu[i].author[j]=='@@ V@@ ')a[@@ 21@@ ]=a[@@ 21@@ ]+1; elseif(@@ shu[i].author[j]=='@@ W@@ ')a[@@ 22@@ ]=a[@@ 22@@ ]+1; elseif(@@ shu[i].author[j]=='@@ X@@ ')a[@@ 23@@ ]=a[@@ 23@@ ]+1; elseif(@@ shu[i].author[j]=='@@ Y@@ ')a[@@ 24@@ ]=a[@@ 24@@ ]+1; elseif(@@ shu[i].author[j]=='@@ Z@@ ')a[@@ 25@@ ]=a[@@ 25@@ ]+1; } } k=@@ a[@@ 0],@@ m=0; for(i=0;i<26;i++) { if(k@@ <@@ a[i]) { k=@@ a[i]; m=i; } } charb[@@ 26@@ ]={'A','B','C','D','E','F','G','H','I','J','K','L','M','N','O','P','@@ Q','R','S','T','U','V','W','X','Y','@@ Z'}; printf("%c\n",@@ b[m@@ ]); printf("%d\n",@@ k); for(i=0;i<n;i++) { for(j=0;j<26;j++) { if(@@ shu[i].author@@ [j]==@@ b[m@@ ]) { printf("%d\n",@@ shu[i].@@ num); break; } } } }  
c -1
h -1
intmain() { charstr[256],@@ a[@@ 256],b[@@ 256],c[256]; inti,j,@@ t=0; scanf("%s%s%s",@@ str,@@ a,b); for(i=0;i<strlen(@@ str@@ );i++) { for(j=0;j<@@ strlen(a)@@ ;j++) c[j]=@@ str@@ [i+j@@ ]; c[j]@@ ='\0'; if(strcmp(@@ c,@@ a)@@ ==0) { t=1; break; } } if(t@@ ==1) { for(j=0;j<i;j++) printf("%c",str@@ [j]); for(j=0;j<strlen(@@ b@@ );j++) printf("%c",@@ b[j]); for(j=i@@ +@@ strlen(@@ a);@@ str@@ [j]@@ !=0;j++) printf("%c",str@@ [j]); } else printf("%s",str); return0; }  
c -1
h -1
0

inta[@@ 1000],b[1000]; void@@ inputdata@@ (); void@@ outputdata@@ (); void@@ sortdata@@ (); intmain() { inputdata@@ (); sortdata@@ (); outputdata@@ (); return0; } void@@ inputdata@@ () { cin>>@@ a[0]@@ >>@@ b[0]; for(inti=1;i<=@@ a[0]@@ ;i++)@@ cin>>a[i]; for(inti=1;i<=@@ b[0]@@ ;i++)@@ cin>>b[i]; } void@@ sortdata@@ () { sort@@ (a@@ +1,@@ a+@@ a[0]@@ +1); sort(@@ b@@ +1,@@ b+@@ b[0]@@ +1); } void@@ outputdata@@ () { for(inti=1;i<=@@ a[0]@@ ;i++)@@ cout<<a[i]@@ <<''; for(inti=1;i<@@ b[0]@@ ;i++)@@ cout<<b[i]@@ <<''; cout<<b[@@ b[0]@@ ]; }  
c -1
h -1
voidmain() { intn; inti,j; intk=0; charstr@@ [100][@@ 10@@ ]={0}; char@@ str1@@ [100][@@ 10@@ ]={0}; char@@ str2@@ [100][@@ 10@@ ]={0}; inttemp; char@@ t@@ [10@@ ]={0}; inta[100]; int@@ a1@@ [100]={0}; int@@ a2@@ [100]={0}; scanf("%d",&n); for(i=0;i<n;i++) scanf("%s%d",@@ str@@ [i],&@@ a[i]); for(i=0;i<n;i++) { strcpy(@@ str1@@ [i],@@ str[i]); a1@@ [i]=@@ a[i]; } for(i=0;i<n;i++) if(a[i]@@ >=60) { strcpy(@@ str2@@ [k],@@ str[i]); a2@@ [k]=@@ a[i]; k=k+1; } for(j=1;j<@@ k;j++) for(i=0;i<@@ k@@ -j;i++) if(@@ a2@@ [i]<@@ a2@@ [i+1]) { temp=@@ a2@@ [i]; a2@@ [i]=@@ a2@@ [i+1]; a2@@ [i+1]=@@ temp; strcpy(@@ t,@@ str2@@ [i]); strcpy(@@ str2@@ [i],@@ str2@@ [i+1]); strcpy(@@ str2@@ [i+1],@@ t); } for(i=0;i<k;i++) printf("%s\n",@@ str2@@ [i]); for(i=0;i<n;i++) if(@@ a1@@ [i]@@ <60) printf("%s\n",@@ str1@@ [i]); }  
c -1
h -1
0

structpatient { charid@@ [11]; intage; structpatient*next; }; intmain() { structpatient*@@ head; structpatient*@@ create@@ (int@@ n); voidsort@@ (structpatient@@ *head@@ ); intn; scanf("%d",&n); head=@@ create@@ (n); sort(@@ head); return0; } structpatient*@@ create@@ (intn) { inti; structpatient@@ *head,*p1,*p2; p1=(struct@@ patient@@ *)malloc(len); head=p1; p2=p1; scanf("%s%d",@@ p1->id,&p1->age); for(i=1;i<n;i++) { p1=(struct@@ patient@@ *)malloc(len); scanf("%s%d",@@ p1->id,&p1->age); (@@ p2->next@@ )@@ =p1; p2=p1; if(i==@@ (n-1@@ )) (@@ p1->next@@ )@@ =NULL; } returnhead; } voidsort@@ (structpatient@@ *head) { intm; structpatient*@@ p1,*p2; for(;;) { p1=head; p2=head; m=0; for(;;) { if((@@ p1->age@@ )>@@ m)@@ m@@ =(@@ p1->@@ age); if((@@ p1->next@@ )==@@ NULL@@ )break; else@@ p1@@ =(@@ p1->next@@ ); } if(m@@ <60@@ )break; p1=head; for(;;) { if((@@ p1->age@@ )==@@ m) { printf("%s\n",@@ p1->@@ id); if(@@ p1@@ ==@@ head@@ )@@ head@@ =(@@ p1->next@@ ); else { (@@ p2->next@@ )@@ =(@@ p1->next@@ ); } break; } else { if(@@ p1@@ !=@@ p2@@ ) { p2=p1; p1@@ =(@@ p1->next@@ ); } else@@ p1@@ =(@@ p1->next@@ ); } } } p1=head; for(;;) { printf("%s\n",@@ p1->@@ id); if((@@ p1->next@@ )==@@ NULL@@ )break; else@@ p1@@ =(@@ p1->next@@ ); } }  
c -1
h -1
intmain(intargc,char*argv[]) { int@@ min@@ [26]; int@@ data@@ [26]; intN@@ ; inti,j; int@@ minLength@@ ; scanf("%d@@ "@@ ,&@@ N); for(i=0;i<N;i++) { scanf("%d@@ "@@ ,&@@ data@@ [i]); } min@@ [0]=1; for(i=1;i<@@ N;i++) { minLength@@ =0; for(j=0;j<i;j++) { if(@@ data@@ [i]<=@@ data@@ [j]) { if(@@ min@@ [j]>@@ minLength@@ ) { minLength@@ =@@ min@@ [j]; } } } min@@ [i]=@@ minLength@@ +1; } minLength@@ =0; for(i=0;i<N;i++) { if(@@ min@@ [i]>@@ minLength@@ ) { minLength@@ =@@ min@@ [i]; } } printf("%d@@ \n@@ "@@ ,@@ minLength@@ ); return0; }  
c -1
h -1
0

int@@ H@@ [100]; intN@@ ; int@@ memo@@ [@@ 40@@ ][@@ 40@@ ]; int@@ dp@@ (inti,int@@ k){ int@@ rslt@@ ; if(i==@@ N@@ )return0; if(@@ memo@@ [i][k]@@ !=@@ -1)@@ return@@ memo@@ [i]@@ [k]; if(k!=@@ 30@@ &&@@ H@@ [i]>@@ H@@ [k]@@ )@@ rslt@@ =@@ dp@@ (i+1,@@ k); else{ int@@ a=@@ dp@@ (i+1,@@ i)@@ +1; int@@ b=@@ dp@@ (i+1,@@ k); if(a@@ >b@@ )@@ rslt@@ =@@ a;@@ else@@ rslt@@ =@@ b; } return@@ memo@@ [i]@@ [k]=@@ rslt@@ ; } intmain(){ scanf("%d",&N); for(inti=0;i<@@ 40@@ ;i++)@@ for(intj=0;j<@@ 40@@ ;j++) memo@@ [i][j]=@@ -1; for(inti=0;i<@@ N@@ ;i++){ scanf("%d",&@@ H@@ [i]); } printf("%d\n",@@ dp@@ (@@ 0,@@ 30@@ )); }  
c -1
h -1
intmain(intargc,char*argv[]) { intnum[@@ 101@@ ][100]; intn,i,j; scanf("%d",&n); i@@ =j@@ =0; for(i=0;i<n;i++) {@@ for(j=0;j<n;j++) scanf("%d",&@@ num@@ [i][j]); } inta,b,c,@@ d; a=@@ b=@@ c=@@ d=0; i@@ =j@@ =0; do{ do{ if(num@@ [i][j]==0&&@@ a@@ ==0&&@@ b@@ ==0) a=@@ i,@@ b@@ =j+1; j++; }while(@@ j@@ <@@ n); j=0; i++; }@@ while(i<@@ n); i@@ =j@@ =0; do{ do{ if(num@@ [i][j]==0&&@@ c@@ <=i@@ &&@@ d@@ <=@@ j) c=@@ i,@@ d=j; j++; }while(@@ j@@ <@@ n); j=0; i++; }@@ while(i<@@ n); ints; s=(@@ c-a@@ -1)*(@@ d@@ -@@ b); printf("%d\n",s); return0; }  
c -1
h -1
0

intmain() { intn,@@ num@@ [100][@@ 2@@ ],@@ i,j,k,@@ a[100@@ ][100@@ ]={0@@ }@@ ,*@@ p=@@ NULL@@ ,@@ sum=0,@@ m; cin>>n; for(k=0;k<n;k++) { cin>>@@ num@@ [k@@ ][0]@@ >>@@ num@@ [k@@ ][1@@ ]; sum=0; for(i=0;i<@@ num@@ [k@@ ][0]@@ ;i++) { for(j=0;j<@@ num@@ [k@@ ][1@@ ]@@ ;j++) { cin>>a[i][j]; }} for(m=0;m<@@ num@@ [k@@ ][0]@@ ;m++) {@@ if(m@@ ==0||@@ m@@ ==@@ num@@ [k@@ ][0]@@ -1) {@@ for(p=@@ a[m]@@ ;p<@@ a[m@@ ]+@@ num@@ [k@@ ][1@@ ]@@ ;p@@ ++)@@ sum=sum+*@@ p@@ ;} else@@ sum=sum+@@ a[m@@ ][0]+@@ a[m@@ ][@@ num@@ [k@@ ][1@@ ]@@ -1]; } cout<<sum<<endl; } return0; }  
c -1
h -1
intmain() { intn,@@ j,k,@@ b,@@ c,@@ x,y; b=@@ c=0; scanf("%d",&n); intsz[@@ n@@ ][n]; for(j=0;j<=n-1;j++) { for(k=0;k<=@@ n-1;k++) { scanf("%d",&sz@@ [j]@@ [k]); if(sz@@ [j]@@ [k]@@ ==0) { x@@ =j; y=@@ k@@ ;} } } for(j=0;j<=n-1;j++) { for(k=0;k<=@@ n-1;k++) { if(sz@@ [j]@@ [k]@@ ==0) { b=j; c=@@ k; break; } } if(sz[@@ b@@ ][c@@ ]==0) break; } intm; m@@ =(@@ x@@ -b@@ -1)*(@@ y@@ -c@@ -1); printf("%d",m); return0; }  
c -1
h -1
0

intmain() { doublen,@@ c; inta,@@ i,@@ d@@ =1,@@ b=0; char@@ sz[@@ 1000@@ ]={'\0'},@@ u@@ [@@ 1000@@ ]={'\0'}; scanf("%lf",&n); scanf("\n@@ "); gets(@@ sz@@ ); gets(@@ u@@ ); a=strlen(@@ sz@@ ); for(i=0;i<a;i++){ if(sz@@ [i]!='A'&&@@ sz@@ [i]!='G'&&@@ sz@@ [i]!='T'&&@@ sz@@ [i]!='@@ C'){ printf("error"); d=0; break; } elseif(@@ u@@ [i]!='A'&&@@ u@@ [i]!='G'&&@@ u@@ [i]!='T'&&@@ u@@ [i]!='@@ C'){ printf("error"); d=0; break; } elseif(@@ sz@@ [i]==@@ u@@ [i]){ b++; } } c=@@ b@@ *1.0/@@ a; if(d@@ ==1){ if(c@@ >n){ printf("yes"); } else{ printf("no"); } } return0; }  
c -1
h -1
voidmain() { intn; inti,j; intk=0; charstr@@ [100][@@ 10@@ ]={0}; char@@ str1@@ [100][@@ 10@@ ]={0}; char@@ str2@@ [100][@@ 10@@ ]={0}; inttemp; char@@ t@@ [10@@ ]={0}; inta[100]; int@@ a1@@ [100]={0}; int@@ a2@@ [100]={0}; scanf("%d",&n); for(i=0;i<n;i++) scanf("%s%d",@@ str@@ [i],&@@ a[i]); for(i=0;i<n;i++) { strcpy(@@ str1@@ [i],@@ str[i]); a1@@ [i]=@@ a[i]; } for(i=0;i<n;i++) if(a[i]@@ >=60) { strcpy(@@ str2@@ [k],@@ str[i]); a2@@ [k]=@@ a[i]; k=k+1; } for(j=1;j<@@ k;j++) for(i=0;i<@@ k@@ -j;i++) if(@@ a2@@ [i]<@@ a2@@ [i+1]) { temp=@@ a2@@ [i]; a2@@ [i]=@@ a2@@ [i+1]; a2@@ [i+1]=@@ temp; strcpy(@@ t,@@ str2@@ [i]); strcpy(@@ str2@@ [i],@@ str2@@ [i+1]); strcpy(@@ str2@@ [i+1],@@ t); } for(i=0;i<k;i++) printf("%s\n",@@ str2@@ [i]); for(i=0;i<n;i++) if(@@ a1@@ [i]@@ <60) printf("%s\n",@@ str1@@ [i]); }  
c -1
h -1
0

struct@@ information { inta; chars[@@ 26]; int@@ len; }@@ xinxi@@ [1000]; voidmain() { intn,i,@@ c[@@ 26]={0},@@ max,@@ t@@ ,j; scanf("%d",&n); for(i=0;i<n;i++) { scanf("%d%s",&@@ xinxi[i].@@ a,@@ xinxi[i].@@ s); xinxi[i].@@ len=strlen(@@ xinxi[i].@@ s); } for(i=0;i<n;i++) for(j=0;j<@@ xinxi[i].@@ len@@ ;j++) { if(xinxi[i].@@ s[j]=='@@ A')@@ c[@@ 1@@ ]++; if(xinxi[i].@@ s[j]=='@@ B@@ ')c[@@ 2@@ ]++; if(xinxi[i].@@ s[j]=='@@ C')@@ c[@@ 3@@ ]++; if(xinxi[i].@@ s[j]=='@@ D@@ ')c[@@ 4@@ ]++; if(xinxi[i].@@ s[j]=='@@ E@@ ')c[@@ 5@@ ]++; if(xinxi[i].@@ s[j]=='@@ F@@ ')c[@@ 6@@ ]++; if(xinxi[i].@@ s[j]=='@@ G')@@ c[@@ 7@@ ]++; if(xinxi[i].@@ s[j]=='@@ H@@ ')c[@@ 8@@ ]++; if(xinxi[i].@@ s[j]=='@@ I@@ ')c[@@ 9@@ ]++; if(xinxi[i].@@ s[j]=='@@ J@@ ')c[@@ 10@@ ]++; if(xinxi[i].@@ s[j]=='@@ K@@ ')c[@@ 11@@ ]++; if(xinxi[i].@@ s[j]=='@@ L@@ ')c[@@ 12@@ ]++; if(xinxi[i].@@ s[j]=='@@ M@@ ')c[@@ 13@@ ]++; if(xinxi[i].@@ s[j]=='@@ N@@ ')c[@@ 14@@ ]++; if(xinxi[i].@@ s[j]=='@@ O@@ ')c[@@ 15@@ ]++; if(xinxi[i].@@ s[j]=='@@ P@@ ')c[@@ 16@@ ]++; if(xinxi[i].@@ s[j]=='@@ Q@@ ')c[@@ 17@@ ]++; if(xinxi[i].@@ s[j]=='@@ R@@ ')c[@@ 18@@ ]++; if(xinxi[i].@@ s[j]=='@@ S@@ ')c[@@ 19@@ ]++; if(xinxi[i].@@ s[j]=='@@ T')@@ c[@@ 20@@ ]++; if(xinxi[i].@@ s[j]=='@@ U@@ ')c[@@ 21@@ ]++; if(xinxi[i].@@ s[j]=='@@ V@@ ')c[@@ 22@@ ]++; if(xinxi[i].@@ s[j]=='@@ W@@ ')c[@@ 23@@ ]++; if(xinxi[i].@@ s[j]=='@@ X@@ ')c[@@ 24@@ ]++; if(xinxi[i].@@ s[j]=='@@ Y@@ ')c[@@ 25@@ ]++; if(xinxi[i].@@ s[j]=='@@ Z@@ ')c[@@ 26@@ ]++; } max=@@ c[@@ 0]; t=0; for(i=1;i<26;i++) { if(c@@ [i]>max) { max=@@ c[i]; t=i; } } printf("%c\n",@@ 64@@ +@@ t); printf("%d\n",@@ c[@@ t@@ ]); for(i=0;i<n;i++) for(j=0;j<@@ xinxi[i].@@ len@@ ;j++) if(xinxi[i].@@ s@@ [j]==@@ 64@@ +@@ t) printf("%d\n",@@ xinxi[i].@@ a); }  
c -1
h -1
intmain() { inti=0,@@ x@@ ,j,@@ g,@@ k,@@ b,@@ a[@@ 15]; while(cin>>@@ x) { if(x@@ ==-1) return0; else { j=0; i=0; for(@@ g@@ =0;@@ ;@@ g@@ ++) { a[i]=@@ x; i++; cin>>x; if(x@@ ==0) break; } for(k=0;k<i;k++) { b=@@ 2*@@ a[k]; for(@@ g@@ =0;@@ g@@ <i@@ ;@@ g@@ ++) { if(a[@@ g@@ ]==@@ b) j++; } } } cout<<@@ j@@ <<endl; } }  
c -1
h -1
0

intf(inta,int@@ s) { if(a@@ <=@@ s)@@ return1; int@@ b=@@ sqrt(@@ (@@ float)@@ a)@@ ,@@ flag=0,@@ sum=1; for(inti=@@ s@@ ;i<=@@ b;i++) { if(a%i==0) { flag@@ ++; sum=sum+@@ f(a@@ /i,i); } } if(flag@@ ==0)@@ return1; else@@ returnsum; } intmain() { inta,@@ n; cin>>n; for(inti=1;i<=n;i++) { cin>>a; cout<<@@ f(a,@@ 2)<<endl; } return0; }  
c -1
h -1
intmain() { int@@ L@@ ,@@ R@@ ,@@ i,j,k; cin>>@@ R@@ >>@@ L@@ ; const@@ int@@ l=@@ L@@ ; const@@ int@@ r=@@ R@@ ; inta[@@ r@@ ][l@@ ]; for(i=0;i<@@ r;i++) for(j=0;j<l;j++) cin>>a[i][j]; for(k=0;k<@@ l@@ ;k++) { for(i=0;@@ (i@@ <@@ r@@ )&&(@@ (k@@ -i@@ )@@ >=0@@ );i++) { cout<<a[i]@@ [k-i@@ ]<<endl; } } for(k=@@ l@@ ;k<=@@ l@@ +@@ r@@ -2@@ ;k++) { for(i=@@ l@@ -1;@@ (i@@ >=0@@ )&&(@@ (k@@ -i@@ )@@ <@@ r@@ )@@ ;i--) { cout<<@@ a[k@@ -i@@ ]@@ [i]<<endl; } } }  
c -1
h -1
0

main() { inta,b,@@ d@@ [100],@@ e,f,@@ g@@ ,i,j,@@ x,y,@@ z; char@@ c@@ [100][100]; scanf("%d",&a); for(b=0;b@@ <@@ a;@@ b++) { scanf("%s%d",@@ c[@@ b@@ ]@@ ,&@@ d[@@ b@@ ]); } for(e@@ =0;e@@ <@@ a;@@ e++) { if(@@ d[@@ e@@ ]@@ >=60) {@@ i=@@ e; break; } } for(@@ e=0,@@ g@@ =0;e@@ <@@ a;@@ e++) { if(@@ d[@@ e@@ ]@@ >=60) g=@@ g@@ +1; } for(x@@ =1;@@ x@@ <=@@ g@@ ;x@@ ++) { for(e@@ =0;e@@ <@@ a;@@ e++) { if(@@ d[@@ e@@ ]@@ >=60) { if(d@@ [i]<@@ d[@@ e@@ ]) i=@@ e; } } printf("%s\n",@@ c[i]); d@@ [i]=0; } for(z@@ =0;z@@ <@@ a;@@ z++) { if(@@ d[@@ z@@ ]!=0) printf("%s\n",@@ c[@@ z@@ ]); } getchar(); getchar(); }  
c -1
h -1
intn,i; inth@@ [26]; intmax@@ (inta,intb) { if(a@@ >@@ b) return@@ a; else return@@ b; } intf(int@@ t@@ ,int@@ l) { if(t@@ ==1) { if(h@@ [1]@@ >=@@ l) return1; else return0; } elseif(@@ h@@ [t@@ ]<@@ l) return@@ f(@@ t@@ -1,@@ l); else return@@ max(@@ f(@@ t@@ -1,@@ l@@ ),@@ f(@@ t@@ -1,@@ h@@ [t@@ ])@@ +1); } voidmain() { scanf("%d",&n); for(i=1;i<=n;i++) scanf("%d",&h[i]); printf("%d",@@ f(@@ n,@@ 0@@ )); }  
c -1
h -1
0

struct@@ s { chara[100@@ ]; intb; struct@@ s@@ *next; }; voidmain() { struct@@ s@@ *@@ p1,*p2,*@@ p0@@ ,*@@ head,*@@ insert@@ (struct@@ s@@ *head,@@ struct@@ s@@ *@@ stud@@ )@@ ,*@@ h; inti,j,k,@@ m,n,@@ t,@@ x; scanf("%d",&n); head@@ =0; p1=(struct@@ s@@ *)malloc(sizeof(struct@@ s)@@ );@@ h@@ =(struct@@ s@@ *)malloc(sizeof(struct@@ s@@ )); p2=@@ head=p1; p1->next@@ =0@@ ;k@@ =0;j@@ =0; scanf("%s%d",p1->@@ a@@ ,&p1->@@ b@@ );@@ x=0; if(p1->@@ b@@ <60) { p2=@@ h@@ =p1; x=1; } else p2=@@ h; for(i=0;i<n-1;i++) { p0@@ =(struct@@ s@@ *)malloc(sizeof(struct@@ s@@ )); scanf("%s%d",@@ p0->@@ a,&@@ p0->@@ b); if(@@ p0->@@ b@@ >=60) { head=@@ insert@@ (head,@@ p0@@ ); k++; } else { p2->next=@@ p0; p2=@@ p0; j++; } } p1=head; if(x@@ ==0) i@@ =-1; else i=0; for(@@ ;i<@@ k;i++) { printf("%s\n",@@ p1->@@ a); p1=p1->next; } if(x@@ ==0) {@@ p2=@@ h@@ ->next; i@@ =0;} else {@@ p2=@@ h@@ ;i@@ =-@@ 1@@ ;} for(@@ ;i<@@ j@@ ;i++) { printf("%s\n",@@ p2->@@ a); p2=p2->next; } } struct@@ s@@ *@@ insert@@ (struct@@ s@@ *head,@@ struct@@ s@@ *@@ stud@@ ) { struct@@ s@@ *@@ p0@@ ,*@@ p1,*p2; p1=head; p0@@ =@@ stud@@ ; if(head@@ ==0) { head=@@ p0@@ ;@@ p0->next@@ =0; } else {@@ while((@@ p0->@@ b@@ <=@@ p1->@@ b@@ )&&(@@ p1->next@@ !=0)) {@@ p2=p1; p1=p1->next@@ ;} if(@@ p0->@@ b@@ >@@ p1->@@ b) {if(@@ head@@ ==@@ p1@@ )@@ head=@@ p0; else@@ p2->next=@@ p0; p0->next@@ =p1;} else {@@ p1->next=@@ p0@@ ;@@ p0->next@@ =0;} } return(head); }  
c -1
h -1
voidmain() { intn,a[@@ 20001@@ ],@@ t,@@ i,@@ m; scanf("%d",&n); for(i=0;i<n;i++) { scanf("%d",&a[i]); } for(i=0;i<n;i++) { m=1; for(t=0;t@@ <i@@ ;t++) { if(a[i]==@@ a[t@@ ]) { m=0; } } if(m==1) { if(i@@ >0) { printf(""); } printf("%d",a[i]); } } }  
c -1
h -1
0

structbook {intnum; charstr@@ [@@ 200]; }@@ bk@@ [1000]; intmain() { intm,@@ i,@@ l,@@ k,@@ p=0,@@ max,@@ maxl@@ ; inta[@@ 200][@@ 1000]; intb[@@ 200]; scanf("%d",&m); for(i=0;i<m;i++) scanf("%d%s",&@@ bk[i].@@ num,@@ bk[i].@@ str); for(l=0;l<@@ 26@@ ;l++) { for(i=0;i<m;i++) { for(k=0;@@ bk[i].@@ str@@ [k]@@ !='\0'@@ ;k++) { if((@@ bk[i].@@ str@@ [k]@@ )==@@ l@@ +65) {@@ a[l@@ ][p@@ ]=@@ bk[i].@@ num; p@@ ++;} } } b[l@@ ]=@@ p; p=0; } max=@@ b[0]@@ ;@@ maxl@@ =0; for(l=0;l<@@ 26@@ ;l++) { if(@@ b[l@@ ]@@ >max) {max=@@ b[l@@ ]; maxl@@ =@@ l@@ ;} } printf("%c\n",@@ maxl@@ +65); printf("%d\n",max); for(i=0;i<@@ max@@ ;i++) printf("%d\n",a[@@ maxl@@ ][i]); return0; }  
c -1
h -1
intmain() { intn,i,j,@@ k=0,@@ a[@@ 20000]; cin>>n; for(i=0;i<n;i++) cin>>a[i]; for(i=0;i<n;i++) { for(j=0;j<i;j++) if(a[j]==a[i]) { a[i]@@ =-1; break; } } cout<<a[0]; for(i=1;i<n;i++) { if(a[i]@@ >0) cout<<""<<a[i]; } return0; }  
c -1
h -1
0

inta,b,@@ c[100],@@ d@@ [100]; void@@ size@@ () {@@ scanf("%d%d",&a,&b); } void@@ num@@ (int@@ s@@ ,int@@ j@@ []) {inti; for(i=0;i<@@ s;i++) {scanf("%d",&@@ j@@ [i]);} } void@@ arrange@@ (int@@ s@@ ,int@@ j@@ []) {@@ inti,k,@@ temp; for(k=0;k<@@ s@@ -1;k++) {@@ for(i=0;i<@@ s@@ -k@@ -1;i++) {@@ if(j@@ [i+1@@ ]<=@@ j@@ [i]@@ ){@@ temp@@ =j@@ [i]@@ ;j@@ [i]=@@ j@@ [i+1]@@ ;j@@ [i+1]=@@ temp;} } } } void@@ plus@@ (intx,int@@ m@@ [],int@@ y,int@@ n@@ []) {inti; arrange@@ (x,@@ m@@ );@@ arrange@@ (@@ y,@@ n); printf("%d",m@@ [0]); for(i=1;i<@@ x@@ ;i++){@@ printf("%d",@@ m[i]@@ );} for(i=0;i<@@ y@@ ;i++){@@ printf("%d",@@ n[i]@@ );} } voidmain() { size@@ (); num@@ (a,@@ c); num@@ (b,@@ d); plus@@ (a,@@ c,@@ b,@@ d); }  
c -1
h -1
intmain() { intn,a[@@ 1000][1000],@@ i,j,@@ m=0,@@ k,@@ r1@@ ,@@ r2@@ ,@@ c1@@ ,@@ c2@@ ,@@ x=0; scanf("%d\n",&n); for(i=0;i<n;i++) { for(j=0;j<n;j++) { scanf("%d",&a[i][j]); } } for(i=0;i<n;i++) { for(j=0;j<n;j++) { if((@@ a[i][j]@@ ==0)@@ &&@@ x@@ ==0) { r1@@ =i+1; c1@@ =j+1; x@@ =1;} if((@@ a[i][j]@@ ==0)) { r2@@ =i@@ -1;@@ c2@@ =j@@ -1@@ ;} }} printf("%d\n",@@ (@@ r2@@ -@@ r1@@ +1)*(@@ c2@@ -@@ c1@@ +1@@ )); return0; }  
c -1
h -1
0

intmain() { intn,i,@@ k; inta[@@ 1000]={0}; intb[@@ 10000@@ ]={0}; scanf("%d%d",&n,&k); for(i=1;i<=n;i++) {@@ scanf("%d",&a[i]); b[@@ a[i]@@ ]=1; } for(i=1;i<=n;i++) if(@@ b[k@@ -@@ a[i]@@ ]@@ ==1&&@@ k-@@ a[i]@@ >0@@ ){@@ printf("yes");@@ return0;} printf("no"); return0; }  
c -1
h -1
intmain() { intyear,@@ month1@@ [@@ 13]={0,31,@@ 28,31,30,31,30,31,31,30,31,30,31@@ },@@ month2@@ [@@ 13]={0,31,@@ 29@@ ,31,30,31,30,31,31,30,31,30,31@@ },@@ day,@@ month,@@ number@@ =0,@@ i; cin>>year>>@@ month>>@@ day; if(((@@ year%@@ 4==0)&&(@@ year%100!=0@@ )@@ )||(year%400==0)) { for(i=0;i<@@ month;i++) number@@ +=@@ month2@@ [i]; number@@ +=@@ day; } else { for(i=0;i<@@ month;i++) number@@ +=@@ month1@@ [i]; number@@ +=@@ day; } cout<<@@ number; return0; }  
c -1
h -1
0

intf@@ (inta,intb) { if(a==@@ b)@@ return1; if(b@@ >@@ a)@@ return0; if(a%@@ b@@ !=0)@@ return@@ f(a,@@ b@@ +1); if(a%@@ b@@ ==0)@@ return@@ f(a,@@ b@@ +1)@@ +@@ f(@@ a/@@ b,@@ b); } intmain() { intn=0,@@ i=0,@@ x,y; cin>>n; for(i=0;i<n;i++) { cin>>x; y=@@ 2; cout<<@@ f(@@ x,@@ y@@ )<<endl; } return0; }  
c -1
h -1
intmain() { introw,col,@@ i,j; intarray[@@ 101][101]; cin>>row>>col; for(i=1;i<=@@ row;i++) for(j=1;j<=col;j++) cin>>@@ *(*(@@ array@@ +i)@@ +j); for(i=1;i<=@@ row+col@@ -1;i++) for(j=0;j<=i;j++) if(i@@ -j@@ >0@@ &&i@@ -j@@ <=col@@ &&j@@ +1@@ <=row@@ ) cout<<@@ *(*(@@ array@@ +j+1)@@ +i-j@@ )<<endl; return0; }  
c -1
h -1
0

intmain(){ char@@ sz[@@ 200],@@ zs@@ [@@ 200],@@ dk@@ [@@ 200]; inta,b,@@ i,@@ c,@@ d=0,@@ p,@@ e=0,@@ q; gets(@@ dk@@ ); scanf("%s",@@ sz@@ ); scanf("%s",@@ zs@@ ); a=strlen(@@ sz@@ ); b=strlen(@@ zs@@ ); c=strlen(@@ dk@@ ); for(i=0;i<c@@ ;i++){ if(@@ dk@@ [i]==@@ sz[0]@@ &&@@ dk@@ [i+@@ a@@ -1@@ ]==@@ sz[a@@ -1]@@ ){ d@@ =i; break; } } if(@@ dk@@ [0]@@ =='@@ s@@ '&&@@ dk@@ [1]@@ =='@@ d@@ '&&@@ dk@@ [2]@@ =='@@ j@@ '){ printf("@@ sdjkhfksdahfjksdh111111lhfjkasdhkfhkasdhfklahsdjkfhsdk@@ "); return0; } for(i=0;i<c@@ ;i++){ if(i==@@ d@@ )continue; if(@@ dk@@ [i]==@@ sz[0]@@ &&@@ dk@@ [i+@@ a@@ -1@@ ]==@@ sz[a@@ -1]@@ ){ e@@ =i; } } if(d@@ ==0){ printf("%s",@@ dk@@ ); return0; } if(e@@ ==0){ if(a@@ >b@@ ){ p=@@ a@@ -@@ b; for(i=0;i<d@@ ;i++){ printf("%c",@@ dk@@ [i]); } for(i=0;i<b;i++){ printf("%c",@@ zs@@ [i]); } for(i=@@ d+@@ a@@ ;i<@@ c@@ ;i++){ printf("%c",@@ dk@@ [i]); } } if(a@@ <b@@ ){ p=@@ b-@@ a; for(i=0;i<d@@ ;i++){ printf("%c",@@ dk@@ [i]); } for(i=0;i<b;i++){ printf("%c",@@ zs@@ [i]); } for(i=@@ d+@@ a@@ ;i<@@ c@@ ;i++){ printf("%c",@@ dk@@ [i]); } } if(a==@@ b){ p=@@ a@@ -@@ b; for(i=0;i<d@@ ;i++){ printf("%c",@@ dk@@ [i]); } for(i=0;i<b;i++){ printf("%c",@@ zs@@ [i]); } for(i=@@ d+@@ b@@ ;i<@@ c@@ ;i++){ printf("%c",@@ dk@@ [i]); } } } if(e@@ !=0){ if(a@@ >b@@ ){ p=@@ a@@ -@@ b; for(i=0;i<d@@ ;i++){ printf("%c",@@ dk@@ [i]); } for(i=0;i<b;i++){ printf("%c",@@ zs@@ [i]); } for(i=@@ d+@@ a@@ ;i<@@ e@@ ;i++){ printf("%c",@@ dk@@ [i]); } for(i=0;i<b;i++){ printf("%c",@@ zs@@ [i]); } for(i=@@ e+@@ a@@ ;i<@@ c@@ ;i++){ printf("%c",@@ dk@@ [i]); } } if(a@@ <b@@ ){ p=@@ b-@@ a; for(i=0;i<d@@ ;i++){ printf("%c",@@ dk@@ [i]); } for(i=0;i<b;i++){ printf("%c",@@ zs@@ [i]); } for(i=@@ d+@@ a@@ ;i<@@ e@@ ;i++){ printf("%c",@@ dk@@ [i]); } for(i=0;i<b;i++){ printf("%c",@@ zs@@ [i]); } for(i=@@ e+@@ a@@ ;i<@@ c@@ ;i++){ printf("%c",@@ dk@@ [i]); } } if(a==@@ b){ p=@@ a@@ -@@ b; for(i=0;i<d@@ ;i++){ printf("%c",@@ dk@@ [i]); } for(i=0;i<b;i++){ printf("%c",@@ zs@@ [i]); } for(i=@@ d+@@ b@@ ;i<@@ e@@ ;i++){ printf("%c",@@ dk@@ [i]); } for(i=0;i<b;i++){ printf("%c",@@ zs@@ [i]); } for(i=@@ e+@@ a@@ ;i<@@ c@@ ;i++){ printf("%c",@@ dk@@ [i]); } } } return0; }  
c -1
h -1
intmain() { intn,@@ i=0,@@ a[@@ 1000][1000],@@ row,col,@@ m,@@ p,q,@@ b[@@ 1000],@@ c[@@ 1000]; scanf("%d",&n); for(row=0;row<n;@@ row++) { for(col=0;col<n;col@@ ++) { scanf("%d",&a[@@ row][col@@ ]); if(a[@@ row][col@@ ]==0) { b[i]=@@ row; c[i]=@@ col; i++; } } } q@@ =i-1; m=@@ b[@@ q@@ ]-@@ b[0]@@ -1; p=@@ c[@@ q@@ ]-@@ c@@ [0]@@ -1; printf("%d",m@@ *p@@ ); return0; }  
c -1
h -1
0

intmain(){ chara[501],b[501]; intn,i,j; double@@ r,@@ m=0,@@ l=0; scanf("%lf",&@@ r); scanf("%s",&@@ a); scanf("%s",&@@ b); if(strlen(a)!=strlen(b@@ )){ printf("error"); return0; } elseif(@@ strlen(a)@@ ==@@ strlen(b@@ )){ for(i=0;a[i]@@ !='\0';i++){ if((a[i]!='@@ A'&&a[i]!='T'&&a[i]!='C'&&a[i]!='G')||(b[i]!='A'&&b[i]!='T'&&b[i]!='C'&&b[i]!='@@ G')){ printf("error"); return0; } else@@ if(a[i]==b[i]){ m++; } } } l@@ =strlen(a); if(m@@ /@@ l>@@ r@@ ){ printf("yes"); } else{ printf("no"); } return0; }  
c -1
h -1
intmain() { intn@@ [100][100],@@ i,k,@@ j,@@ s@@ [100],@@ num@@ [100],@@ t,@@ p,@@ m; for(i=0;i<100;i++) { scanf("%d",&@@ n[i]@@ [0]); if(n@@ [i][0]@@ ==-1)break; else { for(j=1;j<@@ 100@@ ;j++) { scanf("%d",&@@ n@@ [i][j]); if(n@@ [i][j]==0){ num[i]=@@ j; break; } } } } for(k=0;k<i;k++) { s[k]@@ =0; for(t=0;t@@ <j@@ ;t++) { for(m=@@ t@@ ;m@@ <@@ num@@ [k]@@ ;m++) { if((@@ 2*@@ n@@ [k@@ ][@@ t@@ ]==@@ n@@ [k@@ ][m@@ ]@@ )||(@@ 2*@@ n@@ [k@@ ][m@@ ]==@@ n@@ [k@@ ][@@ t@@ ]@@ )) { s@@ [k]=@@ s[k]@@ +1; } } } } for(p=0;p@@ <i@@ ;p++) printf("%d\n",@@ s[p@@ ]); return0; }  
c -1
h -1
0

voidmain() { int@@ sum,@@ i,n,@@ x,y,@@ u@@ ,@@ v@@ ; inta[100][100]; scanf("%d",&n); for(i=0;i<n;i++) { sum=0; scanf("%d%d",&@@ x,&@@ y); for(@@ u@@ =0;@@ u@@ <@@ x@@ ;@@ u@@ ++) for(@@ v@@ =0;@@ v@@ <@@ y@@ ;@@ v@@ ++) scanf("%d",&a[@@ u@@ ][@@ v@@ ]); if(x@@ <=@@ 2@@ ||@@ y@@ <=@@ 2) { for(@@ u@@ =0;@@ u@@ <@@ x@@ ;@@ u@@ ++) for(@@ v@@ =0;@@ v@@ <@@ y@@ ;@@ v@@ ++) sum+=@@ a[@@ u@@ ][@@ v@@ ]; } else { for(@@ u@@ =0;@@ u@@ <@@ y@@ ;@@ u@@ ++) { sum+=@@ a[0][@@ u@@ ]; sum+=@@ a[x@@ -1@@ ][@@ u@@ ]; } for(@@ u@@ =1;@@ u@@ <@@ x@@ -1;@@ u@@ ++) { sum+=@@ a[@@ u@@ ][0]; sum+=@@ a[@@ u@@ ][y@@ -1]; } } printf("%d\n",sum); } }  
c -1
h -1
intmain() { intsz[100][100]; intn,i,j,@@ l,@@ k; intsum=0; scanf("%d",&n); for(i=1;i<=n;i++){ for(j=1;j<=n;j++){ scanf("%d",&(@@ sz@@ [i][j]@@ )); } } for(i=1;i<=n;i++){ l=0; k=0; sz[i]@@ [0]=@@ 255@@ ; sz[i]@@ [n@@ +1]=@@ 255@@ ; for(j=1;j<=n;j++){ if((@@ sz@@ [i][j]@@ -@@ sz[i]@@ [j-1]@@ )*(@@ sz@@ [i][j]@@ -@@ sz[i]@@ [j+1@@ ])@@ >0){ l@@ =j@@ -@@ l; k++; } } if(k==@@ 2@@ ){ sum+=@@ (@@ l@@ -1); } } printf("%d",sum); return0; }  
c -1
h -1
0

voidinput@@ (int@@ ,int@@ ,int@@ *,@@ int*@@ ); voidpaixu@@ (int@@ *,@@ int@@ ); voidoutput@@ (int@@ ,int@@ ,int@@ *,@@ int*@@ ); intmain() { int@@ num1,num2@@ ,@@ shu1@@ [@@ 10000],@@ shu2@@ [@@ 10000]; cin>>@@ num1@@ >>@@ num2@@ ; input@@ (@@ num1,num2@@ ,@@ shu1@@ ,@@ shu2@@ ); paixu(@@ shu1@@ ,@@ num1@@ ); paixu(@@ shu2@@ ,@@ num2@@ ); output@@ (@@ num1,num2@@ ,@@ shu1@@ ,@@ shu2@@ ); cin.get@@ ();@@ cin.get@@ ();@@ cin.get@@ ();@@ cin.get(); return0; } voidinput@@ (intm,@@ intn,@@ int@@ shu1@@ [],int@@ shu2@@ []) { inti; for(i=0;i<m;i++)@@ cin>>@@ shu1@@ [i]; for(i=0;i<n;i++)@@ cin>>@@ shu2@@ [i]; } voidpaixu@@ (int@@ shu@@ [],int@@ m) { inti,j,temp; for(i=0;i<m-1;i++) { for(j=0;j<m@@ -i-1;j++) { if(@@ shu@@ [j]>@@ shu@@ [j+1]) { temp=@@ shu@@ [j+1]; shu@@ [j+1]=@@ shu@@ [j]; shu@@ [j]=temp; } } } } voidoutput@@ (intm,@@ intn,@@ inta[@@ ],intb[@@ ]) { inti; for(i=0;i<m;i++)@@ cout<<a[i]<<""; for(i=0;i<n@@ -1;i++)@@ cout<<b[i]<<""; cout<<b[@@ n-1]; }  
c -1
h -1
structstudent { char@@ xuehao@@ [100]; intyuwen; intshuxue; intsum; }; intmain() { intn,i,j,@@ l,@@ m; structstudentstu[100000]; structstudent@@ temp; scanf("%d",&n); for(i=0;i<n;i++) { scanf("%s",@@ stu[i].@@ xuehao@@ ); scanf("%d%d",&@@ stu[i].@@ yuwen@@ ,&stu[i].@@ shuxue); stu[i].sum=stu[i].@@ yuwen+stu[i].@@ shuxue; } for(j=1;j<@@ 4@@ ;j++) { for(m=0;m<@@ n@@ -j@@ ;m++) { if(@@ stu[m@@ ].@@ sum@@ >=@@ stu[m@@ +1@@ ].@@ sum) { temp=@@ stu[@@ m]; stu[m@@ ]=@@ stu[m@@ +1]; stu[m@@ +1]=@@ temp; } } } for(l@@ =@@ n-1;@@ l>@@ n-@@ 4@@ ;@@ l@@ --) printf("%s%d\n",@@ stu[@@ l@@ ].@@ xuehao@@ ,@@ stu[@@ l@@ ].sum); return0; }  
c -1
h -1
0

structstudent { long@@ num; int@@ scorec@@ ; int@@ scorem@@ ; structstudent*next; }; structstudent*creat@@ (void) { structstudent*head,*@@ p0@@ ,*@@ p1,*p2; inti=0; head@@ =(structstudent*)malloc(len); head@@ ->next=NULL; scanf("%ld%d%d",&@@ head->@@ num,&@@ head->@@ scorec@@ ,&@@ head->@@ scorem@@ ); while(i<@@ 2) { p1=head; p0@@ =(structstudent*)malloc(len); scanf("%ld%d%d",&@@ p0->@@ num,&@@ p0->@@ scorec@@ ,&@@ p0->@@ scorem@@ ); while((@@ p0->@@ scorec@@ +@@ p0->@@ scorem@@ )@@ <=@@ (@@ p1->@@ scorec@@ +p1->@@ scorem@@ )&&(@@ p1->next@@ !=NULL@@ )) { p2=p1; p1=p1->next; } if((@@ p0->@@ scorec@@ +@@ p0->@@ scorem@@ )>@@ (@@ p1->@@ scorec@@ +p1->@@ scorem@@ )) { if(head@@ ==@@ p1@@ )@@ head=@@ p0; else@@ p2->next=@@ p0; p0->next@@ =p1; } else { p1->next=@@ p0; p0@@ ->next=NULL; } i++; } return(head); } structstudent*@@ sort(@@ structstudent*head@@ ,intn) { structstudent*@@ p0@@ ,*@@ p1,*p2; int@@ i=@@ 3@@ ; while(i<n) { p1=head; p0@@ =(structstudent*)malloc(len); scanf("%ld%d%d",&@@ p0->@@ num,&@@ p0->@@ scorec@@ ,&@@ p0->@@ scorem@@ ); while((@@ p0->@@ scorec@@ +@@ p0->@@ scorem@@ )@@ <=@@ (@@ p1->@@ scorec@@ +p1->@@ scorem@@ )&&(@@ p1->next@@ !=NULL@@ )) { p1=p1->next; } if((@@ p0->@@ scorec@@ +@@ p0->@@ scorem@@ )>@@ (@@ p1->@@ scorec@@ +p1->@@ scorem@@ )) { if(head@@ ==@@ p1@@ ) { p2=p1->next; (*@@ p2->next@@ ).@@ num=@@ p2->@@ num; (*@@ p2->next@@ ).@@ scorec@@ =@@ p2->@@ scorec@@ ; (*@@ p2->next@@ ).@@ scorem@@ =@@ p2->@@ scorem@@ ; p2->@@ num=@@ p1->@@ num; p2->@@ scorec@@ =p1->@@ scorec@@ ; p2->@@ scorem@@ =p1->@@ scorem@@ ; p1->@@ num=@@ p0->@@ num; p1->@@ scorec@@ =@@ p0->@@ scorec@@ ; p1->@@ scorem@@ =@@ p0->@@ scorem@@ ; } elseif(@@ p1@@ ==@@ head@@ ->next) { (*@@ p1->next@@ ).@@ num=@@ p1->@@ num; (*@@ p1->next@@ ).@@ scorec@@ =p1->@@ scorec@@ ; (*@@ p1->next@@ ).@@ scorem@@ =p1->@@ scorem@@ ; p1->@@ num=@@ p0->@@ num; p1->@@ scorec@@ =@@ p0->@@ scorec@@ ; p1->@@ scorem@@ =@@ p0->@@ scorem@@ ; } else { p1->@@ num=@@ p0->@@ num; p1->@@ scorec@@ =@@ p0->@@ scorec@@ ; p1->@@ scorem@@ =@@ p0->@@ scorem@@ ; } } free(@@ p0@@ ); i++; } return(head); } voidmain() { structstudent*head,*p1,*p2; intn; scanf("%d",&n); head=creat(); head=@@ sort(@@ head,@@ n); p1=@@ head->next; p2=p1->next; printf("%ld%d\n",@@ head->@@ num,@@ (@@ head->@@ scorec@@ +@@ head->@@ scorem@@ )); printf("%ld%d\n",@@ p1->@@ num,@@ (@@ p1->@@ scorec@@ +p1->@@ scorem@@ )); printf("%ld@@ %d",@@ p2->@@ num,@@ (@@ p2->@@ scorec@@ +@@ p2->@@ scorem@@ )); }  
c -1
h -1
intmain() { intnum; cin>>num; int@@ graphic@@ [100][100]; inti=0,j=0,@@ rightEst@@ ,@@ bottumEst@@ ; int@@ width@@ =0,@@ lengh@@ =0; for(i=0;i<num;i++) { for(j=0;j<@@ num@@ ;j++) { scanf("%d",&@@ graphic@@ [i][j]); if(@@ graphic@@ [i][j]==0){ rightEst@@ =i;@@ bottumEst@@ =j; } } } for(i=@@ rightEst@@ ,j=@@ bottumEst@@ ;i>=0;i--){ if(@@ graphic@@ [i][j]@@ ==0)@@ width@@ ++; elsebreak; } for(i=@@ rightEst@@ ,j=@@ bottumEst@@ ;j>=0;j--){ if(@@ graphic@@ [i][j]@@ ==0)@@ lengh@@ ++; elsebreak; } int@@ portation@@ =@@ width@@ *@@ lengh@@ -@@ width@@ *2@@ -(@@ lengh@@ -2@@ )@@ *2@@ ; cout<<@@ portation@@ <<endl; return0; }  
c -1
h -1
0

int@@ getin@@ (intarray[],int@@ num); int@@ sort@@ (intarray[],int@@ num); int@@ link@@ (int@@ array1@@ [],int@@ array2@@ [],int@@ num1@@ ,int@@ num2@@ ); intmain() { int@@ numa@@ ,@@ numb@@ ,a[@@ 1000],b[1000]; cin>>@@ numa@@ >>@@ numb@@ ; getin@@ (a,@@ numa@@ ); getin@@ (b,@@ numb@@ ); sort@@ (a,@@ numa@@ ); sort@@ (b,@@ numb@@ ); link@@ (a,b,@@ numa@@ ,@@ numb@@ ); return0; } int@@ getin@@ (intarray[],int@@ num) { for(inti=0;i<@@ num;i++) { cin>>array@@ [i]; } return(@@ array[@@ num@@ ]); } int@@ sort@@ (intarray[],int@@ num) { inttemp; for(inti=0;i<@@ num@@ -1;i++) { for(intj=0;j<@@ num@@ -i-1;j++) { if(array@@ [j]>@@ array@@ [j+1]) { temp=@@ array@@ [j]; array@@ [j]=@@ array@@ [j+1]; array@@ [j+1]=temp; } } } return@@ array[@@ num@@ ]; } int@@ link@@ (int@@ array1@@ [],int@@ array2@@ [],int@@ num1@@ ,int@@ num2@@ ) { cout<<@@ array1@@ [0]; for(inti=1;i<@@ num1@@ ;i++) cout<<""<<@@ array1@@ [i]; for(inti=0;i<@@ num2@@ ;i++) cout<<""<<@@ array2@@ [i]; return0; }  
c -1
h -1
intmain() { inty,m,d,@@ s=0,@@ a[@@ 12@@ ],@@ i; scanf("%d%d%d",&y,&m,&d); if((y%@@ 400==0)||(@@ y%@@ 4==0&&y%100!=0@@ )) a[1]=29; else a[1]=@@ 28; a[0]=@@ a[2@@ ]=a[@@ 4@@ ]=a[@@ 6@@ ]=a[@@ 7@@ ]=a[@@ 9@@ ]=a[@@ 11@@ ]=31; a[@@ 3@@ ]=a[@@ 5@@ ]=a[@@ 8@@ ]=a[@@ 10@@ ]=30; for(i=0;i<m-1;i++) { s=s+@@ a[i]; } s=s@@ +d; printf("%d",s); }  
c -1
h -1
0

intmain(){ charstring@@ [257],@@ substring@@ [257],@@ replacement@@ [257]; gets(@@ string); gets(@@ substring); gets(@@ replacement); inti,@@ len1,len2@@ ,j,@@ k,@@ a=0; len1=strlen(@@ string); len2=strlen(@@ substring); for(i=0;i<len1;i++){ if(string@@ [i]==@@ substring@@ [0]){ for(j=1;j<@@ len2@@ ;j++){ if(@@ substring@@ [j]==@@ string@@ [j+i@@ ]) a@@ +=1; else break; } if(a==@@ len2@@ -1){ for(k=0;k<@@ len2@@ ;k++) string@@ [k@@ +i]=@@ replacement@@ [k]; break; } } } puts(@@ string); return0; }  
c -1
h -1
voidmain() { intyear,month,day,@@ x=0; scanf("%d%d%d",&year,&month,&day); if(month==2) { x=31+@@ day; printf("%d",x); } elseif(@@ month@@ ==1){@@ x=@@ day@@ ;printf("%d",@@ x);} else { if((year%4==0&&year%100!=0)||(year%400==0)) { switch(month) { case3:@@ x=31+29@@ ;break; case4:@@ x=31+29@@ +31;break; case5:@@ x=31+29@@ +31+30@@ ;break; case6:@@ x=31+29@@ +31+30@@ +31;break; case7:@@ x=31+29@@ +31+30+31+30@@ ;break; case8:@@ x=31+29@@ +31+30+31+30@@ +31;break; case9:@@ x=31+29@@ +31+30+31+30+31+@@ 31;break; case10:@@ x=31+29@@ +31+30+31+30+31+31+30@@ ;break; case11:@@ x=31+29@@ +31+30+31+30+31+31+30@@ +31;break; case12:@@ x=31+29@@ +31+30+31+30+31+31+30+31+30@@ ;break; } } else { switch(month) { case3:@@ x=31+28@@ ;break; case4:@@ x=31+28@@ +31;break; case5:@@ x=31+28@@ +31+30@@ ;break; case6:@@ x=31+28@@ +31+30@@ +31;break; case7:@@ x=31+28@@ +31+30+31+30@@ ;break; case8:@@ x=31+28@@ +31+30+31+30@@ +31;break; case9:@@ x=31+28@@ +31+30+31+30+31+@@ 31;break; case10:@@ x=31+28@@ +31+30+31+30+31+31+30@@ ;break; case11:@@ x=31+28@@ +31+30+31+30+31+31+30@@ +31;break; case12:@@ x=31+28@@ +31+30+31+30+31+31+30+31+30@@ ;break; } } x=x@@ +day; printf("%d",x); } }  
c -1
h -1
0

intmain() { inti,j,n,@@ k,@@ c,@@ big@@ =0; intnum[@@ 30@@ ]={0},@@ a[1000]; charname@@ [1000][@@ 20]; scanf("%d",&n); for(i=0;i<n;i++) { scanf("%d%s",&a[i],@@ name@@ [i]); } for(k=0;k<26;k++) { for(i=0;i<n;i++) { for(j=0;j<strlen(@@ name@@ [i]@@ );j++) { if(name@@ [i][j]==@@ k@@ +'A'@@ ) num@@ [k]=@@ num@@ [k]@@ +1; } } } for(i=0;i<26;i++) { if(@@ big@@ <@@ num@@ [i]) {@@ big@@ =@@ num[i]; c@@ =i@@ +'A'@@ ; } } printf("%c\n",@@ c); printf("%d\n",@@ big@@ ); for(i=0;i<n;i++) { for(j=0;j<strlen(@@ name@@ [i]@@ );j++) { if(name@@ [i][j]==@@ c) printf("%d\n",a[i]); } } return0; }  
c -1
h -1
intmain(intargc,char*argv[]) { intn=0,@@ N; inty,m,@@ d; scanf("%d%d%d",&y,&m,&d); if(y%@@ 100!=0@@ &&@@ y%@@ 4@@ ==0){ int@@ p[@@ 13]={0,31,@@ 29,31,30,31,30,31,31,30,31,30,31}; if(d@@ <@@ 1@@ ||@@ d@@ >@@ p@@ [m@@ ])@@ printf("@@ Illegal@@ input@@ .@@ \n"); else{ intj; for(j=0;j<m;j++){ n=n+@@ p@@ [j]; } N@@ =@@ n+@@ d; printf("%d\n",@@ N); } } elseif(@@ y%@@ 4@@ !=0){ int@@ q@@ [13]={0,31,28,31,30,31,30,31,31,30,31,30,31}; if(d@@ <@@ 1@@ ||@@ d@@ >@@ q@@ [m@@ ])@@ printf("@@ Illegal@@ input@@ .@@ \n"); else{ intj; for(j=0;j<m;j++){ n=n+@@ q@@ [j]; } N@@ =@@ n+@@ d; printf("%d\n",@@ N); } } return0; }  
c -1
h -1
0

struct@@ author { intnum; char@@ aut@@ [27]; }a[@@ 999]; voidmain() { void@@ search@@ (struct@@ author@@ b[@@ ],intn,@@ char@@ marker@@ ); intm,@@ i,@@ times@@ [@@ 30]={0}; int@@ length@@ =0,@@ j; intmax=0,@@ flag@@ =@@ 9@@ ; char@@ chac@@ ; scanf("%d",&m); for(i=0;i<m;i++) { scanf("%d%s",&@@ a[i].@@ num,&@@ a[i].@@ aut@@ ); length@@ =strlen(@@ a[i].@@ aut@@ ); for(j=0;j<@@ length@@ ;j++) { chac@@ =@@ a[i].@@ aut@@ [j]; times@@ [@@ chac@@ -'A']++; } } for(i=0;i<26;i++) { if(max<@@ times@@ [i]) { max=@@ times@@ [i]; flag@@ =i; } } printf("%c\n%d\n",@@ (char)(@@ flag@@ +'@@ A')@@ ,max); search@@ (a,@@ m,@@ (char)(@@ flag@@ +'@@ A')@@ ); } void@@ search@@ (struct@@ author@@ b[@@ ],intn,@@ char@@ marker@@ ) { inti,j; for(i=0;i<n;i++) { for(j=0;j<strlen(@@ b[i].@@ aut@@ );j++) { if(b[i].@@ aut@@ [j]==@@ marker@@ ) printf("%d\n",b[i].@@ num); } } }  
c -1
h -1
intmain(){ double@@ j,@@ n; inti,@@ l,@@ k,@@ p=0,@@ u@@ ,@@ h=0; chara[@@ 2][@@ 501]; scanf("%lf",&n); for(i=0;i<2@@ ;i++){ scanf("%s",@@ a[i]); } l=strlen(@@ a[0]); k=strlen(@@ a[1]); if(l@@ !=@@ k){ printf("error"); }else{ for(@@ u@@ =0;@@ u@@ <@@ l@@ ;@@ u@@ ++){ if((@@ a[0][@@ u@@ ]!='@@ A')@@ && (@@ a[0][@@ u@@ ]!='@@ T')@@ && (@@ a[0][@@ u@@ ]!='@@ G')@@ && (@@ a[0][@@ u@@ ]!='@@ C')@@ && (@@ a[1@@ ][@@ u@@ ]!='@@ A')@@ && (@@ a[1@@ ][@@ u@@ ]!='@@ T')@@ && (@@ a[1@@ ][@@ u@@ ]!='@@ G')@@ && (@@ a[1@@ ][@@ u@@ ]!='@@ C')){ p++; }else{ if(a[@@ 0][@@ u@@ ]==@@ a[1@@ ][@@ u@@ ]){ h@@ ++; } } } if(p@@ !=0){ printf("error"); }else{ j@@ =1.0*@@ h@@ /@@ l; if(j@@ >n){ printf("yes"); }else{ printf("no"); } } } return0; }  
c -1
h -1
0

int@@ factoring@@ (inta,intb) { inti,@@ kind@@ =0; if(a==1) { kind@@ =1; } else { for(i=b@@ ;i<=a;i++) { if(a%i==0) { kind@@ =@@ factoring@@ (a@@ /i,@@ i@@ )+@@ kind@@ ; } } } return@@ kind@@ ; } intmain() { intn,@@ x[@@ 40000@@ ],@@ i; scanf("%d",&n); for(i=0;i<n;i++) { scanf("%d",&@@ x[i]); } for(i=0;i<n;i++) { x@@ [i]=@@ factoring@@ (x@@ [i],@@ 2); printf("%d\n",@@ x[i]); } return0; }  
c -1
h -1
intmain() { intm,n,@@ a[@@ 15],@@ x=0,@@ i,@@ y=0; while(@@ y@@ !=1) { for(m@@ =0;@@ ;m++) { cin>>n; if(n@@ !=0&&@@ n@@ !=-1) { a[m@@ ]=@@ n; continue; } if(n@@ ==0) { break; } if(n@@ ==-1) { y=1; break; } } if(y@@ ==1) { break; } for(m=0;m@@ <=@@ 15@@ ;m++) { for(i=0;i<=@@ 15;i++) { if(a[m@@ ]@@ *2==@@ a[i]&&@@ a[m@@ ]!=0) { x=x@@ +1; } } } for(m=0;m@@ <=@@ 15@@ ;m++) { a[m@@ ]=0; } cout<<@@ x@@ <<endl; x=0; } return0; }  
c -1
h -1
0

intnum=0; void@@ yinshu@@ (intx,inty) { if(x==@@ y)@@ num++; elseif((@@ x%@@ y@@ ==0)&&(@@ x@@ >@@ y@@ )){@@ yinshu@@ (x@@ /@@ y,@@ y@@ );@@ yinshu@@ (x,@@ y@@ +1@@ );} elseif(x@@ >@@ y)@@ yinshu@@ (x,@@ y@@ +1); } intmain() { intn,@@ x; cin>>n; for(inti=1;i<=n;i++) { cin>>x; yinshu@@ (x,@@ 2); cout<<num<<endl; num=0; } }  
c -1
h -1
char@@ sen@@ [100][@@ 500],@@ ori@@ ,@@ final@@ ,@@ temp; intmain() { intn,m,@@ temp1@@ ,@@ temp2@@ ,i,j,@@ a,b,@@ k,@@ c,d,@@ e; intsz@@ [100]; double@@ f,@@ g; a=0; d=0; scanf("%lf",&@@ f); scanf("%s%s",@@ sen@@ [0],@@ sen@@ [1]); for(i=0;i<2@@ &&@@ d@@ ==0@@ ;i++) { for(j=0;j<strlen(@@ sen@@ [i])@@ &&@@ d@@ ==0@@ ;j++) { if(@@ sen@@ [i][j]!='@@ A'&&@@ sen@@ [i][j]!='@@ T'&&@@ sen@@ [i][j]!='@@ C'&&@@ sen@@ [i][j]!='@@ G') d=1; } } if(d@@ ==0){ if(strlen(@@ sen@@ [0]@@ )==@@ strlen(@@ sen@@ [1]@@ )) { for(i=0;i<strlen(@@ sen@@ [0]@@ );i++) { if(@@ sen@@ [0]@@ [i]==@@ sen@@ [1]@@ [i]) a++; } g@@ =1.0*@@ a/@@ strlen(@@ sen@@ [0]); if(g@@ >=@@ f@@ ) printf("yes"); else printf("no"); } else printf("error"); } else printf("error"); return0; }  
c -1
h -1
0

intmain(){ intn,k,@@ c,@@ h=0; scanf("%d%d",&n,&k); int*@@ za@@ =@@ (int*)malloc(sizeof(int)*n); for(inti=0;i<n;i++){ scanf("%d",&(@@ za@@ [i]@@ )); } for(intm=0;m@@ <@@ n-1@@ ;m++){ for(@@ c=@@ m@@ +1;@@ c@@ <n;@@ c@@ ++){ if(@@ za@@ [m@@ ]+@@ za@@ [c@@ ]==k){ h@@ ++; } } } if(h@@ >0){ printf("yes"); }else{ printf("no"); } free(@@ za@@ ); return0; }  
c -1
h -1
intmain() { chara[@@ 300]; charb[@@ 200@@ ],c[@@ 200],@@ d[@@ 200@@ ]={0}; int@@ n1,n2,@@ n3@@ ,@@ i,j,k,@@ result@@ ,@@ p,@@ w; scanf("%s%s%s",a,b,c); n1@@ =strlen(a); n2@@ =strlen(b); n3@@ =strlen(c); p=0; k=@@ 10000@@ ; for(i=0;i<n1@@ -@@ n2@@ +1;i++) { if(p@@ ==0) { for(j=0;j<@@ n2@@ ;j++) { d@@ [j]=@@ a[i+j@@ ]; } result=@@ strcmp(@@ d,@@ b); if(result@@ ==0) { k=i; p=1; w@@ =i@@ +j@@ ; } } } if(k==@@ 10000@@ ) printf("%s",a); else { for(i=0;i<k;i++) printf("%c",a[i]); printf("%s",@@ c); for(i=@@ w@@ ;i<@@ n1@@ ;i++) printf("%c",a[i]); } return0; }  
c -1
h -1
0

intmain() { intk,m,n,@@ *p; cin>>k; for(inti=0;i<k;i++) { cin>>m>>n; intsum=0; inta[100][100@@ ]={0}; for(intj=0;j<m;j++) for(intl@@ =0;@@ l@@ <n;@@ l++) cin>>a[j]@@ [l]; p=@@ a[0]; for(intj=0;j<n;j++) sum+=@@ *p@@ ++; if(m@@ -1@@ !=0) { p=@@ a[@@ m-1@@ ]; for(intj=0;j<n;j++) sum+=@@ *p@@ ++; } for(intj=1;j<@@ m-1;j++) { p=@@ a[j]; sum+=@@ *p; sum+=@@ *(p+@@ n-1); } cout<<sum<<endl; } return0; }  
c -1
h -1
structstudent { int@@ no; intyuwen; intshuxue; inttotal; }; voidmain() { intn,i; structstudent@@ *p,*@@ stu@@ ,@@ temp; scanf("%d",&n); stu@@ =(structstudent@@ *)@@ calloc@@ (n,@@ sizeof(@@ structstudent)); for(p=@@ stu@@ ;p@@ -@@ stu@@ <n;p++) { scanf("%d%d%d",&@@ p->@@ no@@ ,&p->@@ yuwen@@ ,&p->@@ shuxue); p->@@ total=@@ p->@@ yuwen@@ +p->@@ shuxue; } for(i=0;i<3;i++) { for(p=@@ stu@@ +@@ n-1@@ ;p@@ >@@ stu@@ +i@@ ;p@@ --) { if(p->@@ total>@@ (p@@ -1)@@ ->@@ total) { temp@@ =*@@ p; *p@@ =*(p@@ -1); *(p@@ -1)@@ =temp; } } printf("%d%d\n",@@ p->@@ no@@ ,@@ p->@@ total); } free(@@ stu@@ ); }  
c -1
h -1
0

intmain() { int@@ row@@ =0,@@ col@@ =0,@@ k=0; cin>>row>>col; inti=0,j=0,@@ s[@@ row][col]; for(i=0;i<=@@ row-1;i++) { for(j=0;j<=@@ col@@ -1;j++) { cin>>@@ s[i]@@ [j]; } } for(i=0;i<=@@ col@@ -1;i++) { j=0; k=i; do { cout<<@@ s[j]@@ [k]@@ <<endl; j++; k--; }while(@@ (j@@ <=row@@ -1)@@ &&(@@ k@@ >=0@@ )); } for(i=1;i<=@@ row-1;i++) { j=col-1; k=i; do { cout<<@@ s[k]@@ [j]<<endl; k++; j--; }while(@@ (k@@ <=row@@ -1)@@ &&(@@ j@@ >=0@@ )); } return0; }  
c -1
h -1
intmain() { intn,i,@@ a[@@ 101]; intb; scanf("%d",&n); for(i=0;i<n;i++){ { scanf("%d",&b); }@@ if(a[@@ b@@ ]@@ ==1){ a[@@ b@@ ]@@ =1;} else {@@ if(i@@ !=0){ printf("@@ ");} printf("%d",@@ b); a[@@ b@@ ]=1; } } return0; }  
c -1
h -1
0

intmain(){ intn,k; scanf("%d%d",&n,&k); inti; intsz[1000]; for(i=0;i<n;i++){ scanf("%d",&sz[i]); } int@@ he@@ [1000][1000]; intj; for(j=0;j<n;j++){ for(i=0;i<n;i++){ if(i!=@@ j){ he@@ [i][j]=@@ sz[i]@@ +sz@@ [j]; } } } intt=0; int@@ d=1; for(j=0;j<n@@ &&@@ d@@ ==1@@ ;j++){ for(i=0;i<n;i++){ if(i!=@@ j){ if(@@ he@@ [i][j]==@@ k){ printf("yes"); d=0; break; } } t++; } } if(t==@@ n*@@ n){ printf("no"); } return0; }  
c -1
h -1
intmain() { intn,@@ b[@@ 101@@ ]={0},@@ i; cin>>n; inta[@@ 20001@@ ]={0}; for(i=1;i<=n;i++) { cin>>a[i]; b[@@ a[i]@@ ]=@@ b[@@ a[i]@@ ]+1; } cout<<@@ a[1]; b[@@ a[1]@@ ]=0; for(i=2;i<=n;i++) { if(b[@@ a[i]@@ ]!=0) cout<<""<<a[i]; b[@@ a[i]@@ ]=0; } return0; }  
c -1
h -1
0

intmain() { intn,i,j,@@ s=0,@@ e,@@ z=0; inta[100@@ ],@@ c[100],@@ x@@ [100]; char@@ b[100@@ ][@@ 10],@@ d@@ [100][10],@@ y@@ [100][10]; char@@ f@@ [100][10]; scanf("%d",&n); for(i=0;i<n;i++){ scanf("%s%d",@@ b[i]@@ ,&@@ a[i]); } for(i=0;i<n;i++){ if(a[i]@@ >=60){ c[@@ s@@ ]=a[i]; strcpy(@@ d[@@ s@@ ],@@ b[i]); s++; }else{ x[@@ z@@ ]=a[i]; strcpy(@@ y[@@ z@@ ],@@ b[i]); z@@ ++; } } for(i=0;i<@@ s@@ ;i++){ for(j=1;j<@@ s@@ -i;j++){ if(c@@ [j-1]@@ <@@ c@@ [j]){ e=@@ c[j]; c[j]=@@ c@@ [j-1]; c@@ [j-1]=@@ e; strcpy(@@ f@@ [j],@@ d@@ [j]); strcpy(@@ d@@ [j],@@ d@@ [j-1]); strcpy(@@ d@@ [j-1@@ ],@@ f@@ [j]); } } } for(i=0;i<@@ s@@ ;i++){ printf("%s\n",@@ d[i]); } for(i=0;i<@@ z@@ ;i++){ printf("%s\n",@@ y@@ [i]); } return0; }  
c -1
h -1
voidmain() { intk; intn@@ =1,@@ i=0,@@ j=0; scanf("%d",&k); int*@@ a=@@ (int*)malloc(@@ k@@ *sizeof(int)); int*@@ b=@@ (int*)malloc(@@ k@@ *sizeof(int)); for(i=0;i<k;i++) { scanf("%d",&a[i]); b[i]=1; } for(i=k@@ -1;i>=0;i--) { for(j=@@ k-1@@ ;j>i;j--) { if(a[i]>=a[j]) b[i]=@@ b[i]@@ >@@ b[j]@@ ?@@ b[i]@@ :@@ b[j]@@ +1; } } for(i=0;i<k;i++) { n=@@ n@@ >@@ b[i]@@ ?@@ n@@ :@@ b[i]; } printf("%d",n); free(@@ a); free(@@ b); }  
c -1
h -1
0

intmain() { inti,@@ a,@@ n,@@ e,@@ sz@@ [100],@@ sx@@ [100]={0}; char@@ st@@ [100][@@ 11@@ ],@@ sa@@ [11@@ ],@@ sd@@ [100][@@ 11]; scanf("%d",&n); for(i=0;i<n;i++) { scanf("%s",&@@ st@@ [i]); scanf("%d",&sz[i]); } for(i=0;i<n;i++) { if(sz[i]@@ >=60) { sx@@ [i]=@@ sz[i]; strcpy(@@ sd@@ [i],@@ st@@ [i]); } } for(i=1;i<=n;i++) { for(a=0;a@@ <n@@ -i@@ ;a@@ ++) { if(@@ sx@@ [a@@ ]<@@ sx@@ [a@@ +1]) { e=@@ sx@@ [a@@ ]; sx@@ [a@@ ]=@@ sx@@ [a@@ +1]; sx@@ [a@@ +1]=@@ e; strcpy(@@ sa@@ ,@@ sd@@ [a@@ ]); strcpy(@@ sd@@ [a@@ ],@@ sd@@ [a@@ +1@@ ]); strcpy(@@ sd@@ [a@@ +1],@@ sa@@ ); } } } for(i=0;i<n;i++) { if(@@ sx@@ [i]@@ >=60) puts(@@ sd@@ [i]); } for(i=0;i<n;i++) { if(sz[i]@@ <60) puts(@@ st@@ [i]); } return0; }  
c -1
h -1
intmain(){ inti=0,j=0,@@ n,@@ a1,a2,@@ b1,@@ b2@@ ,@@ s; intsz[100][100]; scanf("%d",&n); for(i=0;i<n;i++){ for(j=0;j<n;j++){ scanf("%d",&sz[i][j]); } } for(i=0;i<n;i++){ for(j=0;j<n;j++){ if(sz@@ [i][j]@@ !=0&&@@ sz[i]@@ [j+1]@@ ==0){ a1@@ =i; b1@@ =j+1; } if(sz@@ [i][j]==0&&@@ sz[i]@@ [j+1]@@ !=0){ b2@@ =j; i=@@ n; } } } for(j=0;j<n;j++){ for(i=0;i<n;i++){ if(sz@@ [i][j]==0&&@@ sz@@ [i+1][j]@@ !=0){ a2@@ =i; j=@@ n; } } } s=(@@ a2-a1@@ -1)*(@@ b2-b1@@ -1); printf("%d",s); return0; }  
c -1
h -1
0

intmain(){ char@@ DNA1@@ [501],@@ DNA2@@ [501]; double@@ rate@@ ; scanf("%lf",&@@ rate@@ ); scanf("%s%s",@@ DNA1@@ ,@@ DNA2@@ ); inti,@@ len1,len2,@@ flag=0; len1=strlen(@@ DNA1@@ ); len2=strlen(@@ DNA2@@ ); if(len1!=@@ len2){ flag=1; } for(i=0;i<len1;i++){ if(@@ DNA1@@ [i]=='A'||@@ DNA1@@ [i]=='T'||@@ DNA1@@ [i]=='C'||@@ DNA1@@ [i]=='@@ G'){ continue; } else{@@ flag@@ =1;} } for(i=0;i<@@ len2@@ ;i++){ if(@@ DNA2@@ [i]=='A'||@@ DNA2@@ [i]=='T'||@@ DNA2@@ [i]=='C'||@@ DNA2@@ [i]=='@@ G'){ continue; } else{@@ flag@@ =1;} } if(flag@@ ==1){ printf("error\n"); } else{ int@@ c=0; double@@ result; for(i=0;@@ DNA1@@ [i]@@ ;i++){ if(@@ DNA1@@ [i]==@@ DNA2@@ [i]){ c++; } } result@@ =1.0*@@ c@@ /@@ len1; if(result@@ >@@ rate@@ ){ printf("yes"); } else{ printf("no"); } } return0; }  
c -1
h -1
structstu { intnum; intm; intc; intsum; }; intmain() { long@@ intn; int@@ a=0,b=0,@@ c=0,@@ x=0,@@ y=0,@@ z=0; structstu@@ student[@@ 65535@@ ]; scanf("%d",&n); for(inti=0;i<n;i++) { scanf("%d%d%d",&@@ student[i].@@ num,&@@ student[i].@@ c@@ ,&@@ student[i].@@ m); student[i].@@ sum=@@ student[i].@@ m+@@ student[i].@@ c; } for(inti=0;i<n;i++) { if(@@ student[i].@@ sum>@@ a) { c=@@ b; z=@@ y; b=@@ a; y=@@ x; a=@@ student[i].@@ sum; x=@@ student[i].@@ num; continue; } if(@@ student[i].@@ sum>@@ b) { c=@@ b; z=@@ y; b=@@ student[i].@@ sum; y=@@ student[i].@@ num; continue; } if(@@ student[i].@@ sum>@@ c) { c=@@ student[i].@@ sum; z=@@ student[i].@@ num; } } printf("%d%d\n%d%d\n%d%d\n",@@ x,@@ a,@@ y,@@ b,@@ z,@@ c); getchar(); getchar(); return0; }  
c -1
h -1
0

intmain(){ double@@ rate@@ ,@@ realrate@@ ; chara[500],b[500]; int@@ len,@@ lenb@@ ,@@ yes@@ =0; scanf("%lf",&@@ rate@@ ); scanf("%s",a); scanf("%s",b); len@@ =strlen(a); lenb@@ =strlen(b); if(@@ len@@ !=@@ lenb@@ ){ printf("error"); return0; } for(inti@@ =0;@@ a[i]@@ !='\0';i++){ if(a[i]!='@@ A'&&a[i]!='T'&&a[i]!='G'&&a[i]!='@@ C'){ printf("error"); return0; } if(@@ b[i]!='A'&&b[i]!='T'&&b[i]!='G'&&b[i]!='@@ C'){ printf("error"); return0; } if(a[i]==b[i]){ yes@@ ++; } } realrate@@ =1.0*@@ yes@@ /@@ len; if(@@ realrate@@ >=@@ rate@@ ) printf("yes"); elseprintf("no"); return0; }  
c -1
h -1
intmain() { intn=0,@@ j=0,@@ i=0,@@ k=0,@@ a[@@ 20000@@ ]={0}; cin>>n; for(i=0;i<n;i++) { cin>>a[i]; if(a[i]<=@@ 100@@ &&a[i]@@ >=@@ 10) { for(j=0;j<i;j++) { if(a[i]==a[j]) { i@@ =i-1; n=@@ n-1; } } } else { i@@ =i-1; n=@@ n-1; } } for(k=0;k<@@ n-1;k++) { cout<<@@ a[k]@@ <<""; } cout<<a[@@ n-1@@ ]<<endl; return0; }  
c -1
h -1
0

voidmain() {@@ charc; intmax=0,@@ store@@ ,@@ m,@@ i,@@ x@@ [26@@ ][@@ 1000]={0},@@ coun@@ [@@ 27@@ ]={0},@@ flag; scanf("%d",&m); for(i=1;i<=m;i++) {scanf("%d",&@@ store@@ ); for(;;) {@@ scanf("%@@ c@@ ",&@@ c); if(c@@ <@@ 65@@ ||@@ c@@ >@@ 90@@ ) break; else{@@ x[@@ c-@@ 64@@ ]@@ [i]=@@ store@@ ;@@ coun@@ [@@ c-@@ 64@@ ]++@@ ;}} } for(i=1;i<=@@ 26;i++) {if(@@ coun@@ [i]>max) {max=@@ coun@@ [i]; flag@@ =i+@@ 64@@ ; } } printf("%c\n",@@ flag@@ ); printf("%d\n",@@ coun@@ [@@ flag@@ -@@ 64@@ ]); for(i=1;i<=@@ 1000@@ ;i++) {@@ if(x@@ [@@ flag@@ -@@ 64@@ ]@@ [i]!=0) printf("%d\n",@@ x[@@ flag@@ -@@ 64@@ ][i]); } }  
c -1
h -1
intmain() { chara[@@ 600@@ ],b[@@ 600]; doublen,@@ x; scanf("%lf\n",&@@ n); gets(a); gets(b); inti,j,@@ a1,@@ b1,@@ xiangtong@@ =0,@@ zhengfou@@ =1,@@ y=0; a1@@ =strlen(a); b1@@ =strlen(b); if(@@ a1@@ !=@@ b1@@ ) {@@ printf("error");@@ y@@ =1;} else { for(i=0;i<@@ a1@@ ;i++) { if(a[i]==b[i]) xiangtong@@ ++; if(a[i]!='@@ A'&&a[i]!='T'&&a[i]!='G'&&a[i]!='@@ C') zhengfou@@ =0; if(@@ b[i]!='A'&&b[i]!='T'&&b[i]!='G'&&b[i]!='@@ C') zhengfou@@ =0; } } if(@@ zhengfou@@ ==0) printf("error"); else if(y@@ !=1) { x=@@ xiangtong@@ *1.0/@@ a1@@ ; if(x@@ <=@@ n) printf("no"); else printf("yes"); } return0; }  
c -1
h -1
0

intmain() { char@@ M@@ [3@@ ][@@ 20]; scanf("%s",@@ M@@ [0]); if(M@@ [0][@@ 0]@@ =='@@ i@@ ') printf("@@ iloveearth@@ "); elseif(@@ M@@ [0][@@ 0]@@ =='@@ s@@ ') printf("@@ sdjkhfksdahfjksdh111111lhfjkasdhkfhkasdhfklahsdjkfhsdk@@ "); else@@ printf("@@ programmingiscool@@ "); return0; }  
c -1
h -1
intmain(){ inta[@@ 27@@ ]={0},b[@@ 27@@ ]={0},@@ k,i,j,@@ m=1; scanf("%d",&k); for(i=0;i<k;i++) {@@ scanf("%d",&a[i]@@ );@@ b[i]@@ =1;} for(i=1;i<k;i++) for(j=0;j<i;j++) if(a[j]>=a[i]&&@@ b[j]@@ +1>@@ b[i]@@ )@@ b[i]=b[j]+1; for(i=0;i<k;i++) if(b[i]>@@ m)@@ m=@@ b[i]; printf("%d",m); }  
c -1
h -1
0

intmain() { intn,i,@@ a[@@ 150@@ ],@@ tmp@@ ,j; chars[@@ 150@@ ][@@ 20],@@ ts@@ [20]; scanf("%d",&n); for(i=1;i<=n;i++) { scanf("%s",@@ s[i]); scanf("%d",&a[i]); } for(i=1;i<n;i++) for(j=1;j<=@@ n@@ -i;j++) if(((@@ a[j+1@@ ]@@ >=60@@ )&&(@@ a[j]@@ <60@@ )) ||(@@ (@@ a[j+1@@ ]>@@ a[j]@@ )&&(@@ a[j]@@ >=60@@ )@@ )) { memcpy@@ (@@ ts@@ ,@@ s[j]@@ ,@@ sizeof(@@ ts@@ )); memcpy@@ (@@ s[j]@@ ,@@ s@@ [j+1],@@ sizeof(@@ ts@@ )); memcpy@@ (@@ s@@ [j+1],@@ ts@@ ,@@ sizeof(@@ ts@@ )); tmp=@@ a[j]; a[j]=a[j+1]; a[j+1]=@@ tmp; } for(i=1;i<=n;i++) printf("%s\n",@@ s[i]); }  
c -1
h -1
intmain() { intn,i,j,a[@@ 1000][1000],@@ count=0,@@ wid@@ =0,@@ x; scanf("%d",&n); for(i=0;i<n;i++) { for(j=0;j<n;j++) { scanf("%d",&a[i][j]); } } for(i=0;i<n;i++) { for(j=0;j<n;j++){ if(a[i][j]==0) { count=@@ count@@ +1; } } if(count@@ >2) { count=@@ count; break; } } for(j=0;j<n;j++) { for(i=0;i<n;i++){ if(a[i][j]==0) { wid@@ =@@ wid@@ +1; } } if(@@ wid@@ >2) { wid@@ =@@ wid@@ ; break; } } x@@ =(@@ count@@ -2)*(@@ wid@@ -2); printf("%d",x); return0; }  
c -1
h -1
0

intmain() { inta[@@ 10000@@ ],*@@ p=@@ a,*@@ q=@@ a,@@ n,@@ h,@@ l,@@ i,j,@@ sum=0; scanf("%d",&n); for(i=1;i<=n;i++) { p=a; q=@@ a; scanf("%d%d",&@@ h@@ ,&@@ l); for(j=1;j<=@@ h@@ *@@ l@@ ;j++) { scanf("%d",p@@ ++@@ ); } if(h@@ ==1) { for(j=0;j<l;j++) { sum+=*(@@ q@@ +j); } } elseif(@@ l@@ ==1) { sum+=@@ *@@ q; sum+=*(@@ q@@ +@@ h@@ -1); } else { for(j=0;j<l;j++) { sum+=*(@@ q@@ +j); sum+=*(@@ q@@ +@@ h@@ *@@ l@@ -j@@ -1); } for(j=1;j<=@@ h@@ -2@@ ;j++) { sum+=*(@@ q@@ +j@@ *@@ l); sum+=*(@@ q@@ +j@@ *@@ l@@ +l@@ -1); } } printf("%d\n",sum); sum=0; } return0; }  
c -1
h -1
struct@@ pa { charid@@ [11]; intage; structpa@@ *next; }; structpa@@ *@@ insert@@ (struct@@ pa@@ *head,@@ structpa@@ *@@ new1@@ ) { structpa@@ *@@ p0@@ ,*@@ p1,*p2; p1=head; p0@@ =@@ new1@@ ; if(head@@ ==NULL) { head=@@ p0; p0@@ ->next=NULL; } elseif(@@ p0@@ ->age@@ >=60) { while((@@ p1->age@@ >=@@ p0@@ ->age@@ )&&(@@ p1->next@@ !=NULL@@ )) { p2=p1; p1=p1->next; } if(@@ p0@@ ->age@@ >@@ p1->age@@ ) { if(head@@ ==@@ p1@@ ) head=@@ p0; else p2->next=@@ p0; p0->next@@ =p1; } else { p1->next=@@ p0; p0@@ ->next=NULL; } } else { p1=head; while(p1!=NULL) { p2=p1; p1=p1->next; } p2->next=@@ p0; p0@@ ->next=NULL; } return(head); } voidmain() { structpa@@ *p,*@@ head; intn,i; head=NULL; scanf("%d",&n); for(i=0;i<n;i++) { p=(struct@@ pa@@ *)malloc(sizeof(struct@@ pa@@ )); scanf("%s@@ %d\n",@@ p->@@ id,&@@ p->@@ age); head=@@ insert@@ (head,@@ p); } p=head; while(p!=NULL) { printf("%s\n",p->id); p=p->next; } }  
c -1
h -1
0

intmain(void) { intn,k,i,j,@@ s[@@ 1000]; scanf("%d%d",&n,&k); for(i=0;i<n;i++) scanf("%d",&s[i]); for(i=0;i<n;i++) for(j=i+1;j<n;j++) if((@@ s[i]@@ +@@ s[j]@@ )==@@ k) { printf("yes\n"); return0; } printf("no\n"); return0; }  
c -1
h -1
intmain() { long@@ n,i,j,@@ math@@ [100000],@@ chin@@ [100000],@@ total@@ [100000],@@ id@@ [100000]; scanf("%ld",&n); for(i=0;i<n;i++) {@@ scanf("%ld",&@@ id[i]); scanf("%ld",&@@ math@@ [i]); scanf("%ld",&@@ chin@@ [i]);} for(i=0;i<n;i++) {@@ total@@ [i]=@@ 100000@@ *(@@ math@@ [i]+@@ chin@@ [i]@@ )+@@ 100000@@ -@@ id@@ [i]@@ ;} int@@ comp@@ (constvoid*a,constvoid*@@ b); qsort(@@ total@@ ,@@ n,@@ sizeof(@@ long@@ ),@@ comp@@ ); printf("%ld@@ %ld@@ \n",@@ 100000@@ -(@@ total@@ [@@ n-1]-@@ 100000@@ *(@@ (int)@@ total@@ [n-1@@ ]@@ /@@ 100000@@ )@@ ),@@ (int)@@ total@@ [n-1@@ ]@@ /@@ 100000@@ ); printf("%ld@@ %ld@@ \n",@@ 100000@@ -(@@ total@@ [@@ n-2@@ ]-@@ 100000@@ *(@@ (int)@@ total@@ [@@ n-2@@ ]@@ /@@ 100000@@ )@@ ),@@ (int)@@ total@@ [@@ n-2@@ ]@@ /@@ 100000@@ ); printf("%ld@@ %ld@@ \n",@@ 100000@@ -(@@ total@@ [@@ n-@@ 3@@ ]-@@ 100000@@ *(@@ (int)@@ total@@ [@@ n-@@ 3@@ ]@@ /@@ 100000@@ )@@ ),@@ (int)@@ total@@ [@@ n-@@ 3@@ ]@@ /@@ 100000@@ ); getchar(); getchar(); } int@@ comp@@ (constvoid*a,constvoid*@@ b) { return@@ *(@@ long@@ *)@@ a@@ -*(@@ long@@ *)@@ b; }  
c -1
h -1
0

intmain() { intn,i,@@ fenjie@@ (intx,int@@ y)@@ ,*@@ a,@@ re@@ =0,@@ j; scanf("%d",&n); a=@@ (int*)malloc(n*sizeof(int)); for(i=0;i<n;i++) { scanf("%d",&a[i]); } for(i=0;i<n;i++) { printf("%d\n",@@ fenjie@@ (a[i],@@ 2)@@ +1); } return0; } fenjie@@ (intx,inty) { inti,@@ flag=0,@@ re@@ =0,@@ flag2@@ =0,@@ k=0; if(x@@ <@@ y)@@ return0; elseif(x@@ ==@@ y)@@ return0; else { for(i=y@@ ;i<@@ x;i++) { if(x@@ %i==0)@@ flag2@@ +=1; } if(@@ flag2@@ ==0)@@ return0; else { for(i=y@@ ;i<=@@ x;i++) { if(x%i==0) { re@@ +=@@ fenjie@@ (x/i,i); if(x@@ /i@@ >=@@ i)@@ k@@ +=1; } } re@@ +=@@ k; return(@@ re); } } }  
c -1
h -1
voidmain() { intn,i,j; inta[@@ 20000],b[@@ 20000]; scanf("%d",&n); for(i=0;i<n;i++) scanf("%d",&a[i]); b[0]=@@ a[0]; for(i=0;i<n;i++) { for(j=i+1;j<n;j++) {@@ if(a[i]==a[j]) a[j]@@ =0;} } j=0; for(i=0;i<n;i++) {@@ if(a[i]@@ ==0@@ ); else{@@ b[j]=@@ a[i]@@ ;j++@@ ;} } for(i=0;i<j@@ -1;i++) printf("%d",b[i]); printf("%d",@@ b@@ [j-1]); }  
c -1
h -1
0

intmain() { intm; cin>>m; charstr@@ [1000][@@ 26]; inta[@@ 1000],@@ count@@ [26]={0}; intt=0; int@@ shu@@ =0; for(inti=0;i<m;i++) { t=0; cin>>a[i]; cin>>@@ str@@ [i]; t@@ =strlen(@@ str[i]); for(intj=0;j<@@ t;j++) { shu@@ =@@ str@@ [i][j]@@ -'A'; count[@@ shu@@ ]++; } } intmax=@@ count@@ [0]; int@@ hao@@ =0; for(intk@@ =1@@ ;k<@@ 26@@ ;k++) { if(count@@ [k]@@ >max) { max=count@@ [k]; hao@@ =k; } } char@@ c=@@ hao@@ +'A'@@ ; cout<<@@ c@@ <<endl; cout<<max<<endl; for(intl@@ =0;@@ l<@@ m;@@ l++) { for(int@@ o@@ =0;@@ str@@ [l@@ ][@@ o@@ ]!='\0'@@ ;@@ o@@ ++) { if(str@@ [l@@ ][@@ o@@ ]==@@ c) { cout<<@@ a[l@@ ]<<endl; break; } } } return0; }  
c -1
h -1
intmain() { inta[100][100],@@ i,j,@@ i1@@ ,@@ j1@@ ; scanf("%d%d",&@@ i@@ ,&@@ j); for(@@ i1@@ =1;@@ i1@@ <=i@@ ;@@ i1@@ ++) { for(@@ j1@@ =1;@@ j1@@ <=j@@ ;@@ j1@@ ++) { scanf("%d",&a[@@ i1@@ ][@@ j1@@ ]); } } j1@@ =1; i1@@ =1; printf("%d",@@ a[1@@ ][1@@ ]); while(@@ j1@@ !=@@ j@@ ||@@ i1@@ !=@@ i) { i1@@ =@@ i1@@ +1; j1@@ =@@ j1@@ -1; if(@@ j1@@ ==0) { j1@@ =@@ i1@@ ; i1@@ =1; } if(@@ j1@@ >@@ j@@ ||@@ i1@@ >@@ i)@@ continue; printf("\n%d",@@ a[@@ i1@@ ][@@ j1@@ ]); } return0; }  
c -1
h -1
0

structbook { intnumber; charwriter@@ [26]; structbook*next; } main() { intn,i,j,@@ num[@@ 26]={0},@@ nu@@ [26],@@ a,b; structbook@@ *head,*p1,*p2; scanf("%d",&n); p1=p2=(struct@@ book@@ *)malloc(LEN); for(i=0;i<n;i++) { scanf("%d%s",&p1->@@ number@@ ,&p1->@@ writer); for(j=0;j<strlen(@@ p1->@@ writer@@ );j++) { ++@@ num[@@ p1->@@ writer@@ [j]-65@@ ]; } if(i==0) head=p1; else p2->next=p1; p2=p1; p1=(structbook@@ *)malloc(LEN); } p2->next=NULL; for(i=0;i<26;i++) { nu@@ [i]=@@ i; } for(i=0;i<@@ 25;i++) { for(j=0;j<@@ 25@@ -i;j++) { if(num@@ [j]<@@ num@@ [j+1]) { a=@@ nu@@ [j]; nu@@ [j]=@@ nu@@ [j+1]; nu@@ [j+1]=@@ a; b=@@ num@@ [j]; num@@ [j]=@@ num@@ [j+1]; num@@ [j+1]=@@ b; } } } printf("%c\n%d\n",@@ nu@@ [0]@@ +65@@ ,@@ num@@ [0]); for(i=0;i<n;i++) { for(j=0;j<strlen(@@ head->@@ writer@@ );j++) { if(@@ head->@@ writer@@ [j]==@@ (char)@@ nu@@ [0]@@ +65) { printf("%d\n",@@ head->@@ number); break; } } head=@@ head->next; } }  
c -1
h -1
intmain() { introw,col,@@ k,@@ i,j; inta[100][100@@ ]={@@ {@@ 0},{@@ 0@@ }@@ }; scanf("%d%d",&row,&col); for(i=0;i<row;i++) { for(j=0;j<col;j++) { scanf("%d",&a[i][j]); } } for(k=0;k<@@ row+col@@ -1;@@ ) { for(i=0;i<row;i++) { for(j=0;j<col;j++) { if(i+j@@ ==k) { printf("%d\n",a[i][j]); } } } k++; } }  
c -1
h -1
0

intmain(){ inti,@@ a,b,@@ c,d; doublen; char@@ xl1@@ [500],@@ xl2@@ [500]; c=0; scanf("%lf",&n); scanf("%s%s",@@ xl1@@ ,@@ xl2@@ ); a=strlen(@@ xl1@@ ); b=strlen(@@ xl2@@ ); if(a!=@@ b){ printf("error"); }else{ for(i=0;i<a;i++){ if((@@ xl1@@ [i]!='A'&&@@ xl1@@ [i]!='T'&&@@ xl1@@ [i]!='G'&&@@ xl1@@ [i]!='@@ C')||(@@ xl2@@ [i]!='A'&&@@ xl2@@ [i]!='T'&&@@ xl2@@ [i]!='G'&&@@ xl2@@ [i]!='@@ C')){ printf("error"); d=0; break; }else{ if(@@ xl1@@ [i]==@@ xl2@@ [i]){ c++; } } } if(1.0*@@ c@@ /@@ a@@ >@@ n@@ &&@@ d@@ !=0){ printf("yes"); }elseif(@@ 1.0*@@ c@@ /@@ a@@ <=@@ n@@ &&@@ d@@ !=0){ printf("no"); } } return0; }  
c -1
h -1
voidmain() { structpatient {@@ charID[10]; intage; }@@ pa@@ [100]; intn,i,@@ t@@ ,j,@@ k; char@@ m[@@ 10],@@ str@@ [100][100]; inta[100@@ ],b[100@@ ]={0}; scanf("%d",&n); for(i=0;i<n;i++) { scanf("%s%d",&@@ pa@@ [i].@@ ID,&@@ pa@@ [i].age); a[i]=@@ pa@@ [i].age; strcpy(@@ str@@ [i],@@ pa@@ [i].ID); } for(i=0,j@@ =0;i<@@ n@@ ;i++,j++) { if(a[i]@@ >=60) b[j]=@@ a[i]; } for(i=0;i<n-1;i++) { for(j=0;j<n-1-i;j++) { if(b@@ [j+1@@ ]>@@ b[j]) { t=@@ b[j]; strcpy(@@ m,@@ pa@@ [j].@@ ID); b[j]=b[j+1]; strcpy(@@ pa@@ [j].@@ ID,@@ pa@@ [j+1].@@ ID); b[j+1]=@@ t; strcpy(@@ pa@@ [j+1].@@ ID,@@ m); } } } for(i=0;i<n;i++) { if(b[i]@@ !=0) printf("%s\n",@@ pa@@ [i].ID); } for(i=0;i<n;i++) { if(a[i]@@ <60) printf("%s\n",@@ str[i]); } }  
c -1
h -1
0

intmain() { inta[100][100],@@ (*p)@@ [100]; p=a; intk,m,n,i,j,@@ sum,@@ num; cin>>k; while(k@@ --) { num=0; sum=0; cin>>m>>n; for(i=0;i<m;i++) for(j=0;j<n;j++){ cin>>a[i][j]; num=num+@@ *(*(p+i)+j); } if(m@@ ==1||@@ n@@ ==1@@ ||(@@ m@@ ==1&&n@@ ==1)@@ )@@ cout<<num<<endl; else{ for(i=0;i<m@@ ;i@@ +=@@ m-1) for(j=0;j<n;j++){ sum=sum+@@ *(*(p+i)+j); } for(i=0;i<m;i++) for(j=0;j<n@@ ;j@@ +=@@ n-1){ sum=sum+@@ *(*(p+i)+j); } sum=sum-@@ a[0][0]@@ -@@ a[0][@@ n-1]-@@ a[@@ m-1][0]-@@ a[m-1][@@ n-1]; cout<<sum<<endl; } } return0; }  
c -1
h -1
inta[1000][1000]; intmain(intargc,char*argv[]) { intn; scanf("%d",&n); inti,j; for(i=0;i<n;i++) { for(j=0;j<n;j++) { scanf("%d",&a[i][j]); } } int@@ a1@@ =0,@@ a2@@ =0,@@ b1@@ =0,@@ b2@@ =0; for(i=0;i<n;i++) { for(j=0;j<n;j++) { if(a[i][j]==0) { a1@@ =i; b1@@ =j; break; } } if(a[@@ a1@@ ][@@ b1@@ ]==0){ break; } } for(i=@@ a1@@ ;i<n;i++) { if(a[i]@@ [@@ b1@@ ]==255@@ ) { a2@@ =i-1; break; } } for(j=@@ a2@@ ;j<n;j++) { if(a[@@ a2@@ ]@@ [j]==@@ 255) { b2@@ =j@@ -1; break; } } ints=0; for(i=@@ a1@@ ;i<@@ a2@@ ;i++) { for(j=@@ b1@@ ;j<@@ b2@@ ;j++) { if(a[i][j]==@@ 255) { s++; } } } printf("%d\n",s); return0; }  
c -1
h -1
0

intmain() { introw,col,@@ i,j,@@ n; inta[100][100]; scanf("%d%d",&row,&col); for(i=0;i<row;i++) { for(j=0;j<col;j++) { scanf("%d",&a[i][j]); } } for(n=0;n@@ <row@@ -1@@ +col@@ ;n++) { if(n@@ <col) { for(i=@@ n;@@ (@@ (n@@ -i@@ )@@ <=@@ (@@ row-1)@@ )&&(i@@ >=0@@ )@@ ;i--) printf("%d\n",@@ a[n@@ -i@@ ][i]); } if(n@@ >@@ col@@ -1) { for(i=@@ col@@ -1;@@ (@@ (n@@ -i@@ )@@ <=@@ (@@ row-1)@@ )&&(i@@ >=0@@ )@@ ;i--) printf("%d\n",@@ a[n@@ -i@@ ][i]); } } return0; }  
c -1
h -1
structstudent { intnum; intyuwen; intshuxue; int@@ zongfen; }; voidmain() { intn,i,j; scanf("%d",&n); structstudent@@ s[@@ 3@@ ],@@ p,@@ temp; for(i=0;i<3;i++) { scanf("%d%d%d",&@@ s[i].@@ num,&@@ s[i].@@ yuwen@@ ,&@@ s[i].@@ shuxue); s[i].@@ zongfen@@ =@@ s[i].@@ shuxue@@ +@@ s[i].@@ yuwen; } for(i=0;i<2@@ ;i++) { for(j=0;j<@@ 2@@ -i;j++) { if(s@@ [j].@@ zongfen@@ <@@ s@@ [j+1].@@ zongfen@@ ) temp=@@ s[j]@@ ,@@ s[j]=@@ s@@ [j+1],@@ s@@ [j+1]=temp; } } for(i=@@ 3@@ ;i<n;i++) { scanf("%d%d%d",&@@ p@@ .@@ num,&@@ p@@ .@@ yuwen@@ ,&@@ p@@ .@@ shuxue); p@@ .@@ zongfen@@ =p@@ .@@ shuxue@@ +p@@ .@@ yuwen; if(p@@ .@@ zongfen@@ >@@ s[2].@@ zongfen@@ &&p@@ .@@ zongfen@@ <=@@ s[1].@@ zongfen@@ ) s[2@@ ]=@@ p; elseif(@@ p@@ .@@ zongfen@@ >@@ s[1].@@ zongfen@@ &&p@@ .@@ zongfen@@ <=@@ s@@ [0].@@ zongfen@@ ) s[2@@ ]=@@ s@@ [1@@ ],@@ s@@ [1]=@@ p; elseif(@@ p@@ .@@ zongfen@@ >@@ s@@ [0].@@ zongfen@@ ) s[2@@ ]=@@ s@@ [1@@ ],@@ s@@ [1]=@@ s[@@ 0],@@ s[@@ 0]=@@ p; } printf("%d%d\n%d%d\n%d@@ %d",@@ s@@ [0].@@ num,@@ s@@ [0].@@ zongfen@@ ,@@ s[1].@@ num,@@ s[1].@@ zongfen@@ ,@@ s[2@@ ].num,@@ s[2].@@ zongfen@@ ); }  
c -1
h -1
0

int@@ la@@ ,lb@@ ,a[@@ 1000],b[1000],@@ c[@@ 2000]; void@@ duqu@@ () { cin>>@@ la@@ >>@@ lb@@ ; for(inti=0;i<@@ la@@ ;i++)@@ cin>>a[i]; for(intj=0;j<@@ lb@@ ;j++)@@ cin>>@@ b[j]; } voidpaixu@@ () { inti,j,temp; for(i=0;i<@@ la@@ -1;i++) for(j=i+1;j<@@ la@@ ;j++) if(a[i]>a[j]) { temp=a[i]; a[i]=a[j]; a[j]=@@ temp; } for(i=0;i<@@ lb@@ -1;i++) for(j=i+1;j<@@ lb@@ ;j++) if(b[i]>@@ b[j]) { temp=@@ b[i]; b[i]=@@ b[j]; b[j]=@@ temp; } } voidhebing@@ () { for(inti=0;i<@@ la@@ ;i++)@@ c[i]=a[i]; for(intj=0;j<@@ lb@@ ;j++)@@ c[@@ la@@ +j@@ ]=@@ b[j]; } voidshuchu@@ () { for(inti=0;i<@@ la@@ +lb@@ ;i++) { cout<<@@ c[i]; if(i!=@@ la@@ +lb@@ -1)@@ cout<<'@@ '; } } intmain() { duqu@@ (); paixu@@ (); hebing@@ (); shuchu@@ (); return0; }  
c -1
h -1
structstudent{ intnum; int@@ scorec@@ ; int@@ scorem@@ ; int@@ score; }; intmain(){ intn; inti; structstudent@@ stu[@@ 100001@@ ]; int@@ best@@ [2][@@ 3@@ ]={@@ {@@ 0,0,@@ 0},{@@ 0,0,@@ 0@@ }@@ }; cin>>n; for(i=1;i<=n;i++) { cin>>@@ stu[i].@@ num@@ >>stu[i].@@ scorec@@ >>stu[i].@@ scorem@@ ; stu[i].@@ score@@ =stu[i].@@ scorec@@ +stu[i].@@ scorem@@ ; } for(i=1;i<=n;i++) { if(stu[i].@@ score@@ >@@ best@@ [1@@ ][0]@@ ) { best@@ [0][@@ 2@@ ]=@@ best@@ [0][@@ 1@@ ]; best@@ [0][@@ 1@@ ]=@@ best@@ [0][@@ 0]; best@@ [0][@@ 0]=@@ stu[i].@@ num; best@@ [1@@ ][2@@ ]=@@ best@@ [1@@ ][1@@ ]; best@@ [1@@ ][1@@ ]=@@ best@@ [1@@ ][0]; best@@ [1@@ ][@@ 0]=@@ stu[i].@@ score; } elseif(@@ stu[i].@@ score@@ <=@@ best@@ [1@@ ][0]@@ &&stu[i].@@ score@@ >@@ best@@ [1@@ ][1@@ ]) { best@@ [0][@@ 2@@ ]=@@ best@@ [0][@@ 1@@ ]; best@@ [0][@@ 1@@ ]=@@ stu[i].@@ num; best@@ [1@@ ][2@@ ]=@@ best@@ [1@@ ][1@@ ]; best@@ [1@@ ][1@@ ]=@@ stu[i].@@ score; } elseif(@@ stu[i].@@ score@@ <=@@ best@@ [1@@ ][1@@ ]@@ &&stu[i].@@ score@@ >@@ best@@ [1@@ ][2@@ ]) { best@@ [0][@@ 2@@ ]=@@ stu[i].@@ num; best@@ [1@@ ][2@@ ]=@@ stu[i].@@ score; } } for(i=0;i<3;i++) cout<<@@ best@@ [0]@@ [i]@@ <<''<<@@ best@@ [1]@@ [i]<<endl; return0; }  
c -1
h -1
0

intmain() { struct@@ Book@@ { intid; char@@ zz@@ [26]; }@@ book[1000]; intn,i,j,@@ max=0,@@ index@@ ; intsum@@ [26]={0}; charauthor@@ ; scanf("%d",&n); for(i=0;i<n;i++){ scanf("%d%s",&book[i].@@ id,&@@ book[i].@@ zz@@ ); } for(i=0;i<n;i++){ for(j=0;@@ book[i].@@ zz@@ [j]@@ !='\0';j++){ sum[@@ book[i].@@ zz@@ [j]@@ -'A']++; } } for(i=0;i<26;i++){ if(sum@@ [i]@@ >max){ max=@@ sum[i]; author@@ ='A'+i; } } printf("%c\n%d\n",@@ author@@ ,max); for(i=0;i<n;i++){ for(j=0;@@ book[i].@@ zz@@ [j]@@ !='\0';j++){ if(book[i].@@ zz@@ [j]==@@ author@@ ){ printf("%d\n",book[i].@@ id); break; } } } return0; }  
c -1
h -1
main() { chara[@@ 256]; charb[@@ 256]; charc[@@ 256]; scanf("%s",a); scanf("%s",b); scanf("%s",c); intx,y,@@ i,j,@@ p,q,@@ k,@@ r,@@ t,@@ z; x@@ =strlen(a); y@@ =strlen(b); q=0; for(i=0;@@ q@@ ==0&&@@ i@@ <@@ x;i++) { if(@@ b[0]@@ ==@@ a[i]) { p=i; for(j=0;@@ b[j]@@ ==@@ a[p@@ ]@@ &&@@ b[j]@@ !=@@ '\0@@ '&&@@ a[p@@ ]@@ !='\0';j++) { p++; } if(j==@@ y) { q=q@@ +1; } } } if(q@@ ==0) { for(z@@ =0;z@@ <@@ x@@ ;@@ z++) { printf("%c",@@ a[@@ z@@ ]); } } if(q@@ !=0) { for(k=0;k<@@ i-1;k++) { printf("%c",@@ a[k]); } for(r=0;r@@ <@@ y@@ ;r++) { printf("%c",@@ c[@@ r@@ ]); } for(t@@ =i+@@ y@@ -1;@@ t@@ <@@ x@@ ;t++) { printf("%c",@@ a[t@@ ]); } } }  
c -1
h -1
0

voidmain() { inta[1000]; chars[@@ 1000][@@ 30],@@ ch; intb[@@ 30]={0}; inti,@@ k; intn; intmax=0; scanf("%d",&n); for(i=0;i<n;i++) scanf("%d%s",&a[i],@@ s[i]); for(i=0;i<n;i++) for(@@ ch@@ ='A'@@ ;@@ ch@@ <=@@ 'Z'@@ ;@@ ch@@ ++) if(@@ strchr(@@ s[i]@@ ,@@ ch@@ )@@ !=NULL) b[@@ ch@@ -65]++; for(i=0;i<=@@ 26;i++) if(b[i]>max) { max=b[i]; k=i; } printf("%c\n%d\n",@@ k@@ +65@@ ,max); ch@@ =k@@ +65; for(i=0;i<n;i++) if(@@ strchr(@@ s[i]@@ ,@@ ch@@ )@@ !=NULL) printf("%d\n",a[i]); }  
c -1
h -1
intmain() { inta[16],@@ len,@@ count,@@ i,j; while(1) { cin>>a[0]; if(a[0]==-1) { break; } len@@ =0; do { len@@ ++; cin>>@@ a[@@ len@@ ]; }while(@@ a[@@ len@@ ]@@ !=0); count=0; for(i=0;i<len;i++) { for(j=0;j<len;j++) { if(j==i) { continue; } else { if(a[j]==@@ (@@ 2*@@ a[i]@@ )) count++; } } } cout<<count<<endl; } return0; }  
c -1
h -1
0

struct@@ score { charid[10]; charname[26]; }@@ book[1000]; intmain() { inti,j,k,n,@@ num,@@ max=0; char@@ maxname@@ ; scanf("%d",&num); for(i=0;i<@@ num@@ ;i++){ scanf("%s",@@ book[i].@@ id); scanf("%s",@@ book[i].name); } for(i=0;i<26;i++){ n=0; for(j=0;j<@@ num@@ ;j++){ for(k=0;k<26@@ ;k++){ if(@@ book[j].@@ name@@ [k]==@@ (@@ 'A'+@@ i@@ ))@@ n@@ +=1; } } if(n@@ >max){ maxname@@ ='A'+i; max=@@ n; } } printf("%c\n%d\n",@@ maxname@@ ,max); for(j=0;j<@@ num@@ ;j++){ for(k=0;k<26@@ ;k++){ if(@@ book[j].@@ name@@ [k]==@@ maxname@@ )@@ printf("%s\n",@@ book[j].@@ id@@ );@@ ; } } return0; }  
c -1
h -1
struct@@ pati { charID[10]; intage; }@@ p@@ [100]; voidmain() { inti,j,n,@@ p2@@ [100]={0},@@ p3@@ [100]={0},@@ t=0,@@ r=0,@@ tem; scanf("%d",&n); for(i=0;i<n;i++) { scanf("%s%d",@@ p[i].@@ ID,&@@ p[i].age); if(p@@ [i].age>=60) { p2@@ [t@@ ]=@@ p@@ [i].age; t++; } } for(i=0;i<@@ t@@ -1;i++) for(j=0;j<@@ t@@ -1-i;j++) { if(@@ p2@@ [j]<@@ p2@@ [j+1]) { tem@@ =p2@@ [j+1]; p2@@ [j+1]=@@ p2@@ [j]; p2@@ [j]=@@ tem; } } for(i=0;i<t;i++) { if(i@@ >0) { if(@@ p2@@ [i]!=@@ p2@@ [i-1@@ ]) { p3@@ [r@@ ]=@@ p2@@ [i]; r++; } } else { p3@@ [r@@ ]=@@ p2@@ [i]; r++; } } t=0; for(i=0;i<n;i++) { for(j=0;j<n;j++) { if(p@@ [j].age@@ ==@@ p3@@ [t@@ ]) { printf("%s\n",@@ p@@ [j].@@ ID); } } t++; } for(i=0;i<n;i++) if(p@@ [i].age<60) printf("%s\n",@@ p[i].@@ ID); }  
c -1
h -1
0

intmain() { chara[256],b[256],c[256]; scanf("%s",a); scanf("%s",b); scanf("%s",c); int@@ lenth1@@ ,@@ lenth2@@ ,i,j,@@ t; lenth1@@ =strlen(a); lenth2@@ =strlen(b); for(i=0;i<=@@ lenth1@@ -1;i++) { t=i; for(j=0;j<=@@ lenth2@@ -1;@@ ) { if(a[@@ t@@ ]==@@ b[j]) { t=t+1; j=j+1; } else break; } if(j==@@ lenth2@@ ) break; } for(j=0;j<@@ lenth2@@ ;j++@@ ,i++) a[i]=@@ c[j]; for(i=0;i<@@ lenth1@@ ;i++) printf("%c",a[i]); }  
c -1
h -1
intm,n; void@@ get@@ (inta[@@ 200@@ ],intb[@@ 200@@ ]) { inti; scanf("%d%d",&m,&n); for(i=0;i<m;i++) scanf("%d",&a[i]); for(i=0;i<n;i++) scanf("%d",&b[i]); } void@@ sequence@@ (inta[@@ 200@@ ],int@@ p) { inti,j,temp; for(i=0;i<p@@ ;i++) for(j=i+1;j<@@ p@@ ;j++) if(a[j]@@ <@@ a[i]) { temp=a[i]; a[i]=a[j]; a[j]=@@ temp; } } voidcombine@@ (inta[@@ 200@@ ],int@@ p@@ ,int@@ b[@@ 200@@ ],int@@ q) { intj; for(j=0;j<@@ q@@ ;j++) a[p@@ +j@@ ]=@@ b[j]; } void@@ show@@ (inta[@@ 200@@ ],int@@ p) { inti; for(i=0;i<p@@ -1;i++) { printf("%d",a[i]); } printf("%d",@@ a[p@@ -1]); } voidmain() { inta[@@ 200@@ ],b[@@ 200]; get@@ (a,b); sequence@@ (a,m); sequence@@ (b,n); combine@@ (a,@@ m,@@ b,@@ n); show@@ (a,@@ m+@@ n); }  
c -1
h -1
0

intmain() { intn,k,i,@@ p,q,@@ sum,@@ s=0; inta[1000]; cin>>n>>k; for(i=0;i<n;i++) cin>>a[i]; for(p=1@@ ;p@@ <n;p++) for(q=0;q@@ <p@@ ;q++) { sum=@@ a[p@@ ]+@@ a[q@@ ]; if(sum@@ ==k) s=s+1; } if(s@@ ) cout<<"yes@@ "<<endl; else cout<<"no@@ "<<endl; return0; }  
c -1
h -1
intmain(){ for(inti@@ =0;@@ ;i++){ inta[16]; inttemp; cin>>@@ temp; if(temp@@ ==-1) break; else@@ a[0]=@@ temp; int@@ n=1; for(intj@@ =1;@@ ;j++){ int@@ temp1@@ ; cin>>@@ temp1@@ ; if(@@ temp1@@ ==0) break; else{@@ a[j]=@@ temp1@@ ; n++; } } intm=0; for(inti=0;i<n;i++){ for(intj=0;j<n;j++){ if((@@ a[i]==@@ (@@ 2*@@ a[j])@@ )) m++; } } cout<<@@ m@@ <<endl; } return0; }  
c -1
h -1
0

intmain() { int@@ mouth@@ [2][@@ 12@@ ]={@@ {@@ 31,@@ 28,31,30,31,30,31,31,30,31,30,31@@ },@@ {@@ 31,@@ 29@@ ,31,30,31,30,31,31,30,31,30,31@@ }@@ }; int@@ leapyear@@ ; inta,b,c,@@ i; int@@ d=0; scanf("%d%d%d",&a,&b,&c); leapyear@@ =(@@ a%4==0&&a%100!=0@@ ||a%@@ 400==0@@ ); for(i=0;i<b@@ -1;i++) { d=d+@@ mouth@@ [@@ leapyear@@ ]@@ [i]; } d=d@@ +c; printf("%d",d); return0; }  
c -1
h -1
intmain() { intn,i; int@@ sum[@@ 100000]; int@@ max1,@@ max2@@ ,max3@@ ; int@@ x=0; scanf("%d",&n); struct{ intnumber; int@@ chin@@ ; intmath; }@@ student[@@ 100000]; for(i=0;i<n;i++){ scanf("%d%d%d",&@@ student[i].@@ number@@ ,&@@ student[i].@@ chin@@ ,&@@ student[i].@@ math); sum[i]=@@ student[i].@@ chin@@ +@@ student[i].@@ math@@ ;} max1=@@ sum[@@ 0]; max2=@@ sum[@@ 0]; max3=@@ sum[@@ 0]; for(i=0;i<n;i++){ if(sum[i]>@@ max1@@ ) max1=@@ sum[i]@@ ;} for(i=0;i<n;i++){ if(sum@@ [i]==@@ max1@@ ){ printf("%d%d\n",@@ student[i].@@ number,@@ sum@@ [i]); x@@ ++;} if(x@@ >=@@ 3) break; } for(i=0;i<n;i++){ if((@@ sum@@ [i]>@@ max2@@ )&&(@@ sum@@ [i]!=@@ max1@@ )) max2=@@ sum[i]@@ ;} for(i=0;i<n;i++){ if(x@@ >=@@ 3) break; if(sum@@ [i]==@@ max2@@ ){ printf("%d%d\n",@@ student[i].@@ number,@@ sum@@ [i]); x@@ ++;} } for(i=0;i<n;i++){ if((@@ sum@@ [i]>@@ max3@@ )&&(@@ sum@@ [i]!=@@ max1@@ )&&(@@ sum@@ [i]!=@@ max2@@ )) max3=@@ sum[i]@@ ;} for(i=0;i<n;i++){ if(x@@ >=@@ 3) break; if(sum@@ [i]==@@ max3@@ ){ printf("%d%d",@@ student[i].@@ number,@@ sum@@ [i]); x@@ ++;} } return0; }  
c -1
h -1
0

intmain() { inti,k,@@ sum=0,@@ flag=0; double@@ m; char@@ zifu1@@ [501],@@ zifu2@@ [501]; scanf("%lf",&@@ m); scanf("\n@@ "); gets(@@ zifu1@@ ); gets(@@ zifu2@@ ); if(strlen(@@ zifu1@@ )==@@ strlen(@@ zifu2@@ )) { for(i=0;i<@@ 600@@ ;i++) { if(@@ zifu1@@ [i]==@@ '\0') { break; } elseif((@@ zifu1@@ [i]=='A'||@@ zifu1@@ [i]=='T'||@@ zifu1@@ [i]=='C'||@@ zifu1@@ [i]=='@@ G')&&(@@ zifu2@@ [i]=='A'||@@ zifu2@@ [i]=='T'||@@ zifu2@@ [i]=='C'||@@ zifu2@@ [i]=='@@ G')) { if(@@ zifu1@@ [i]==@@ zifu2@@ [i]) { sum++; } } else { printf("error"); flag=1; break; } } if(flag==0) { if(1.0*@@ sum/@@ strlen(@@ zifu1@@ )>@@ m) { printf("yes"); } else { printf("no"); } } } else { printf("error"); } return0; }  
c -1
h -1
intmain(){ intn,i,k,@@ l,@@ ha@@ ,@@ li@@ ,@@ x,@@ s; scanf("%d",&n); for(i=0;i<n;i++){ s=0; scanf("%d%d",&@@ ha@@ ,&@@ li@@ ); for(l=0;l<@@ ha@@ ;@@ l++){ for(k=0;k<@@ li@@ ;k++){ scanf("%d",&x); if(l@@ ==0||@@ l@@ ==@@ (@@ ha@@ -1)@@ ||(@@ k@@ ==0&&@@ l@@ !=0&&@@ l@@ !=@@ (@@ ha@@ -1)@@ )||(@@ k==@@ (@@ li@@ -1)@@ &&@@ l@@ !=0&&@@ l@@ !=@@ (@@ ha@@ -1)@@ )){ s=s+@@ x; } } } printf("%d\n",s); } return0; }  
c -1
h -1
0

voidorder@@ (inta[100],int@@ l1@@ ); void@@ prin@@ (inta[100],int@@ l1@@ ,int@@ b[100@@ ],int@@ l2@@ ) { inti; char@@ c@@ ='\0'; order@@ (a,@@ l1@@ ); order@@ (b,@@ l2@@ ); for(i=0;i<l1;i++) printf("%d",a[i]); for(i=0;i<@@ l2@@ ;i++) { if(i<@@ l2@@ -1) c@@ ='@@ '; else@@ c@@ ='@@ \n@@ '; printf("%d@@ %c@@ ",@@ b[i]@@ ,@@ c); } } voidorder@@ (inta[100],int@@ l1@@ ) { inti,j,@@ b; for(i=0;i<l1;i++) { for(j=i;j<@@ l1@@ ;j++) { if(a[j]@@ <@@ a[i]) { b=@@ a[i]; a[i]=a[j]; a[j]=@@ b; } } } } intmain() { int@@ l1,l2@@ ,i; inta[100],b[100]; scanf("%d%d",&@@ l1@@ ,&@@ l2@@ ); for(i=0;i<l1;i++) scanf("%d",&a[i]); for(i=0;i<@@ l2@@ ;i++) scanf("%d",&b[i]); prin@@ (a,@@ l1,@@ b,@@ l2@@ ); return0; }  
c -1
h -1
intmain() { intn,i,j=0,@@ k,@@ l; structpatient { charnum[10]; intage; }@@ p@@ [100],@@ temp; scanf("%d",&n); for(i=0;i<n;i++) { do@@ {@@ scanf("%@@ c@@ ",&@@ p[i].@@ num[j]@@ )@@ ;j++@@ ;} while(p@@ [i].@@ num@@ [j-1]@@ !='@@ '@@ ); p[i].@@ num@@ [j-1]@@ ='\0'; scanf("%d",&@@ p[i].age); j=0; } for(i=0;i<n;i++) { k=i; for(j=i+1;j<n;j++) if(p@@ [j].age@@ >@@ p@@ [k@@ ].age@@ )@@ k=j; if(k!=@@ i@@ &&p@@ [k@@ ].age@@ >=60) { temp=@@ p@@ [k]; for(l@@ =@@ k;@@ l@@ >=i@@ +1;@@ l@@ --) { p@@ [l@@ ]=@@ p@@ [l@@ -1]; } p[i]=@@ temp; } } for(i=0;i<n;i++) { printf("%s",@@ p[i].@@ num@@ );@@ if(i!=@@ n-1)@@ printf("\n"); } return0; }  
c -1
h -1
0

intsum=0; voidf@@ (intn,int@@ i) { if(n@@ ==1)@@ sum++; while(i<=@@ n) { if(n@@ %i==0)@@ f(@@ n@@ /i,i); i++; } return; } intmain() { intt=0; cin>>t; while(t@@ --) { intn=0; cin>>n; int@@ i=@@ 2,@@ result=1; for(i=2;i<=@@ n@@ /2@@ ;i++){ if(n%i==0) { sum=0; f(@@ n@@ /i,i); result=result+@@ sum; } } cout<<@@ result@@ <<endl; } return0; }  
c -1
h -1
intfenjie@@ (inta,int@@ max@@ ){ inti=0; intsum=0; if(a@@ ==1)@@ return1; for(i=@@ max@@ ;i@@ >=@@ 2@@ ;i--) { if((@@ a@@ %i@@ )@@ ==0)@@ sum+=@@ fenjie@@ (a/i,i); } returnsum; } intmain(){ intk=0; intn=0; intnum=0; cin>>n; for(k=1;k<=n;k++) { cin>>num; cout<<@@ fenjie@@ (num,@@ num); if(k@@ <@@ n)@@ cout<<endl; } return0; }  
c -1
h -1
1


intmain(void) { intn,k,i,j,@@ s[@@ 1000]; scanf("%d%d",&n,&k); for(i=0;i<n;i++) scanf("%d",&s[i]); for(i=0;i<n;i++) for(j=i+1;j<n;j++) if((@@ s[i]@@ +@@ s[j]@@ )==@@ k) { printf("yes\n"); return0; } printf("no\n"); return0; }  
c -1
h -1
intmain() { inti,@@ year,@@ month,@@ date@@ ,@@ count=0,@@ day@@ [13]={0,31,28,31,30,31,30,31,31,30,31,30,31}; cin>>year>>@@ month>>@@ date; for(i=1;i<month;i++) count+=@@ day@@ [i]; count+=@@ date; if(month@@ >2) if((@@ year%@@ 400==0)||(@@ (@@ year%100!=0@@ )&&(@@ year%@@ 4@@ ==0)@@ )) count++; cout<<@@ count; return0; }  
c -1
h -1
0

intmain(){ intn,k,i,@@ m,@@ sz1@@ [1000],@@ sz2@@ [1000]; intt=0; scanf("%d%d\n",&n,&@@ k); for(i=0;i<n;i++){ scanf("%d",&(@@ sz1@@ [i]@@ )); sz2@@ [i]=@@ sz1@@ [i]; }@@ for(m=0;m@@ <n;m++){ for(i=0;i<n;i++){ if(k==@@ sz1@@ [m@@ ]+@@ sz2@@ [i]@@ ){@@ t@@ ++;} } }@@ if(t@@ >0){ printf("yes"); }@@ else{printf("no");} return0; }  
c -1
h -1
int@@ compare@@ (intx,inty) { if(x@@ <=@@ y) x=@@ y@@ +1; return@@ x; } main() { inti,n,@@ r,@@ a,@@ j; scanf("%d",&n); int*p=@@ (int*)malloc(n*sizeof(int)); for(i=0;i<n;i++) scanf("%d",&@@ p[i]); int*@@ q=@@ (int*)malloc(n*sizeof(int)); for(j=n-1;j>=0;j--) { q@@ [j]@@ =1; for(@@ r=@@ n-1;@@ r@@ !=@@ j@@ ;r@@ --) { if(p@@ [j]>=@@ p[@@ r@@ ]) q@@ [j]=@@ compare@@ (@@ q@@ [j],@@ q@@ [r@@ ]); } } int@@ max; max=@@ q@@ [0]; for(a@@ =1;@@ a@@ <n;@@ a++) { if(q@@ [a]@@ >max) max=@@ q@@ [a@@ ]; } printf("%d",max); return0; }  
c -1
h -1
0

intmain() { chars1@@ [300],@@ s2@@ [300],@@ s3@@ [300]; scanf("%s@@ %s@@ %s@@ "@@ ,@@ s1,@@ s2,@@ s3); char*@@ p=strstr(@@ s1,@@ s2); if(p@@ ) { char@@ temp=@@ *(p+@@ strlen(@@ s2@@ )); strcpy(@@ p,@@ s3); *(p+@@ strlen(@@ s2@@ ))@@ =temp; } printf("%s@@ \n@@ "@@ ,@@ s1); return0; }  
c -1
h -1
voidread@@ (int@@ n1,int@@ n2@@ ,int@@ s1@@ [],int@@ s2[@@ ]); void@@ bubble_sort@@ (ints[],int@@ n); void@@ write@@ (int@@ n1,int@@ n2@@ ,int@@ s1@@ [],int@@ s2[@@ ]); intmain() { int@@ n1,n2,@@ s1@@ [@@ 101],@@ s2[@@ 101]; scanf("%d%d",&n1,&n2); read@@ (@@ n1,n2,@@ s1,@@ s2); bubble_sort@@ (@@ s1,@@ n1); bubble_sort@@ (@@ s2,@@ n2); write@@ (@@ n1,n2,@@ s1,@@ s2); } voidread@@ (int@@ n1,int@@ n2@@ ,int@@ s1@@ [],int@@ s2@@ []) { inti; for(i=0;i<n1@@ ;i++)@@ scanf("%d",&@@ s1[i]); for(i=0;i<n2@@ ;i++)@@ scanf("%d",&@@ s2@@ [i]); } void@@ bubble_sort@@ (ints[],int@@ n) { inti,j,t; for(i=0;i<n-1;i++) for(j=0;j<n@@ -i-1;j++) if(s@@ [j]>@@ s@@ [j+1]) { t=@@ s[j]; s[j]=@@ s@@ [j+1]; s@@ [j+1]=t; } } void@@ write@@ (int@@ n1,int@@ n2@@ ,int@@ s1@@ [],int@@ s2@@ []) { inti; printf("%d",@@ s1@@ [0]); for(i=1;i<@@ n1@@ ;i++)@@ printf("%d",@@ s1[i]); for(i=0;i<n2@@ ;i++)@@ printf("%d",@@ s2@@ [i]); }  
c -1
h -1
0

intmain() { inti,@@ m,n; double@@ x,y,@@ o@@ =0; chara[500],b[500]; scanf("%lf",&x); scanf("%s%s",a,b); m=strlen(a); n@@ =strlen(b); if(m!=@@ n){ printf("error"); }else{ for(i=0;i<m;i++){ if((@@ a[i]==@@ 65@@ ||@@ a[i]==@@ 71@@ ||@@ a[i]==@@ 67@@ ||@@ a[i]==@@ 84@@ )&&(@@ b[i]@@ ==@@ 65@@ ||@@ b[i]@@ ==@@ 71@@ ||@@ b[i]@@ ==@@ 67@@ ||@@ b[i]@@ ==@@ 84@@ )){ if(a[i]==b[i]){ o@@ ++; } }else{ printf("error"); break; } } if(i==@@ m){ y=@@ o@@ /n; if(y@@ >=@@ x){ printf("yes"); }else{ printf("no"); } } } return0; }  
c -1
h -1
intmain(){ double@@ a,b; int@@ n1,n2,@@ m=0,@@ c=0; chars1@@ [500],@@ s2@@ [500]; scanf("%lf",&a); scanf("%s%s",@@ s1,@@ s2); n1@@ =strlen(@@ s1); n2@@ =strlen(@@ s2); for(inti@@ =0;@@ s1@@ [i]!='\0';i++){ if((@@ s1@@ [i]=='A'||@@ s1@@ [i]=='G'||@@ s1@@ [i]=='C'||@@ s1@@ [i]=='@@ T')&&(@@ s2@@ [i]=='A'||@@ s2@@ [i]=='G'||@@ s2@@ [i]=='C'||@@ s2@@ [i]=='@@ T')@@ ){ if(s1[i]==s2@@ [i]){ m++; } }@@ else@@ c=1; } if(c@@ ==1||@@ n1@@ !=@@ n2@@ ){ printf("error\n"); } else{ b=@@ m@@ *1.0/@@ n1@@ ; if(a@@ <b@@ ){ printf("yes\n"); } else@@ printf("no\n"); } return0; }  
c -1
h -1
1


typedef@@ struct { charID[10]; intage; }@@ patient@@ ; patient@@ pat@@ [100]; int@@ cmp@@ (@@ constvoid@@ *,@@ constvoid*@@ ); intmain() { intn; inti; scanf("%d",&n); for(i=0;i<n;i++) { scanf("%s",@@ pat[i].@@ ID); scanf("%d",&@@ pat@@ [i].age); } qsort(@@ pat@@ ,@@ n,@@ sizeof(@@ patient@@ ),@@ cmp@@ ); for(i=0;i<n;i++) { printf("%s\n",@@ pat[i].@@ ID); } return0; } int@@ cmp@@ (constvoid*@@ _p1@@ ,@@ constvoid*@@ _p2@@ ) { patient@@ *@@ p1@@ =(@@ patient@@ *)@@ _p1@@ ; patient@@ *p2@@ =(@@ patient@@ *)@@ _p2@@ ; if(p1->age@@ >=60&&@@ p1->age@@ <60) return-1; elseif(@@ p1->age@@ <60&&@@ p2->age@@ >=60) return1; elseif(@@ p1->age@@ >=60&&@@ p2->age@@ >=60) return@@ p2->age@@ -@@ p1->@@ age; else return0; }  
c -1
h -1
intmain() { intyear,@@ a,b,@@ m,n; scanf("%d%d%d",&year,&@@ a,&b); if((year%4==0&&year%100!=0)||(year%400==0)) { switch(@@ a) { case@@ 0@@ : case1:@@ m@@ =0;@@ break; case2:@@ m@@ =1@@ ;break; case3:@@ m@@ =0;@@ break; case4:@@ m@@ =1@@ ;break; case5:@@ m@@ =1@@ ;break; case6:@@ m=@@ 2@@ ;break; case7:@@ m=@@ 2@@ ;break; case8:@@ m=@@ 3@@ ;break; case9:@@ m=@@ 4@@ ;break; case10:@@ m=@@ 4@@ ;break; case11:@@ m=@@ 5@@ ;break; case12:@@ m=@@ 5@@ ;break; } n=@@ 30@@ *(a@@ -1)@@ +@@ m+@@ b; } else { switch(@@ a) { case@@ 0@@ : case1:@@ m@@ =0;@@ break; case2:@@ m@@ =1@@ ;break; case3:@@ m@@ =-@@ 1;break; case4:@@ m@@ =0;@@ break; case5:@@ m@@ =0;@@ break; case6:@@ m@@ =1@@ ;break; case7:@@ m@@ =1@@ ;break; case8:@@ m=@@ 2@@ ;break; case9:@@ m=@@ 3@@ ;break; case10:@@ m=@@ 3@@ ;break; case11:@@ m=@@ 4@@ ;break; case12:@@ m=@@ 4@@ ;break; } n=@@ 30@@ *(a@@ -1)@@ +@@ m+@@ b; } printf("%d\n",n); return0; }  
c -1
h -1
0

intmain() { inta,b,c,@@ k,@@ s; scanf("%d%d%d",&a,&b,&c); if((@@ a%@@ 4==0&&@@ a%@@ 10@@ !=0@@ )||(@@ a%400==0)) { switch(@@ b) { case1: { k=0; break; } case2: { k=@@ 31; break; } case3: { k=@@ 60@@ ; break; } case4: { k=@@ 91@@ ; break; } case5: { k=@@ 121@@ ; break; } case6: { k=@@ 152@@ ; break; } case7: { k=@@ 182@@ ; break; } case8: { k=@@ 213@@ ; break; } case9: { k=@@ 244@@ ; break; } case10: { k=@@ 274@@ ; break; } case11: { k=@@ 305@@ ; break; } case12: { k=@@ 335@@ ; break; } } } else { switch(@@ b) { case1: { k=0; break; } case2: { k=@@ 31; break; } case3: { k=@@ 59@@ ; break; } case4: { k=@@ 90@@ ; break; } case5: { k=@@ 120@@ ; break; } case6: { k=@@ 151@@ ; break; } case7: { k=@@ 181@@ ; break; } case8: { k=@@ 212@@ ; break; } case9: { k=@@ 243@@ ; break; } case10: { k=@@ 273@@ ; break; } case11: { k=@@ 304@@ ; break; } case12: { k=@@ 334@@ ; break; } } } s=@@ k@@ +c; printf("%d\n",s); return0; }  
c -1
h -1
intmain() { inta[100@@ ][@@ 16],@@ i,j,k,@@ t; for(i=0;;i++) { scanf("%d",&a[i]@@ [0]); if(a[i]@@ [0]@@ ==-1) break; for(j=1@@ ;@@ a[i][j-1]@@ !=0;j++) { scanf("%d",&a[i][j]); } } for(j=0;j<i;j++) { intn=0; for(k=0;@@ a[j]@@ [k+1@@ ]@@ !=0@@ ;k++) { for(@@ t=@@ k@@ +1;@@ a[j]@@ [t@@ ]@@ !=0@@ ;t++) { if(a[j]@@ [k]==2*@@ a[j]@@ [t@@ ]@@ ||@@ a[j]@@ [t@@ ]==2*@@ a[j]@@ [k]) n++; } } printf("%d\n",n); } return0; }  
c -1
h -1
0

intmain() { inti,j,k,l,@@ s@@ [100][100],@@ n@@ [100],@@ m@@ [100],@@ num@@ [100]; int@@ num1@@ [100]={0}; int@@ num2@@ [100]={0}; scanf("%d",&k); for(i=0;i<k;i++) { scanf("%d%d",&@@ n@@ [i],&@@ m[i]); for(j=0;j<n@@ [i];j++) { for(l=0;l<@@ m@@ [i];@@ l++) { scanf("%d",&@@ s[j]@@ [l]); num1@@ [i]@@ +=@@ s[j]@@ [l]; } } for(j=1;j<@@ n[i]@@ -1;j++) { for(l=1;@@ l<@@ m[i]@@ -1;@@ l++) { num2@@ [i]@@ +=@@ s[j]@@ [l]; } } num[i]=@@ num1@@ [i]@@ -@@ num2@@ [i]; } for(i=0;i<k;i++) { printf("%d\n",@@ num[i]); } return0; }  
c -1
h -1
intmain() { inti,j,k,@@ p,@@ s[@@ 15]; for(i=0;;i++) { k=0; scanf("%d",&s@@ [0]); if(s@@ [0]@@ ==-1) break; for(j=1@@ ;@@ ;j++) { scanf("%d",&s@@ [j]); if(s@@ [j]@@ ==0) break; for(p=0;p@@ <j@@ ;p++) if(s@@ [j]==2*@@ s[p@@ ]@@ ||@@ s[p@@ ]==2*@@ s@@ [j]) k++; } printf("%d\n",@@ k); } return0; }  
c -1
h -1
0

intmain() {@@ chars1@@ [@@ MAX@@ +1],@@ s2[@@ MAX@@ +1]; double@@ w,@@ m; int@@ l1,l2@@ ; inti,j; int@@ c=0; scanf("%lf",&@@ w); scanf("%s",@@ s1); scanf("%s",@@ s2); l1=strlen(@@ s1); l2=strlen(@@ s2); if(l1!=l2@@ ) {@@ printf("error");} else {@@ for(i=0;@@ s1@@ [i]@@ ;i++) {if(@@ !@@ (@@ s1@@ [i]=='A'||@@ s1@@ [i]=='T'||@@ s1@@ [i]=='C'||@@ s1@@ [i]=='G'||@@ s2@@ [i]=='A'||@@ s2@@ [i]=='T'||@@ s2@@ [i]=='C'||@@ s2@@ [i]=='@@ G')) {@@ printf("error"); break;}} if(i==@@ l1@@ ) { for(j=0;@@ s1@@ [j]@@ ;j++) {if(@@ s1@@ [j]==@@ s2@@ [j]) {@@ c@@ ++;} } m@@ =(double)@@ c@@ /@@ l1; if(m@@ >@@ w@@ ) {@@ printf("yes");} else {@@ printf("no");} } } return0; }  
c -1
h -1
voidmain() { inti,@@ s,@@ t,@@ n,@@ p,@@ x,@@ z; x@@ =0;@@ z=0; scanf("%d",&n); p=@@ n*@@ n;@@ s=@@ 255@@ ; for(i=1;i<=@@ p@@ ;i++) {t=@@ s; scanf("%d",&s@@ );@@ if(s@@ ==0&&@@ t@@ ==0)@@ x@@ +=@@ 1@@ ;@@ if(s@@ ==0)@@ z@@ +=1; } z@@ =(@@ z@@ -x@@ -2@@ )@@ /2@@ ;@@ x=x@@ /2@@ -1; x=x@@ *@@ z; printf("%d\n",x); }  
c -1
h -1
0

intmain(){ double@@ m; chara[@@ 10000@@ ],b[@@ 10000]; scanf("%lf",&@@ m); scanf("%s",a); scanf("%s",b); int@@ l=strlen(@@ a)@@ ,@@ k=0; for(inti=0;i<@@ l@@ ;i++){ if((@@ a[i]=='@@ A'||a[i]=='@@ G'||@@ a[i]=='@@ C'||@@ a[i]=='@@ T')&&(@@ b[i]=='@@ A'||@@ b[i]=='@@ T'||@@ b[i]=='@@ C'||@@ b[i]=='@@ G')){ if(a[i]==b[i]){ k++; } }else{ printf("error"); return0; } } double@@ j; j@@ =1.0*@@ k/@@ l; if(j@@ >@@ m){ printf("yes"); }else{ printf("no"); } return0; }  
c -1
h -1
intmain() { int@@ c,d,@@ e,f,@@ n,@@ i; chara[100@@ ][10]; intb[100@@ ]; scanf("%d",&n); for(i=0;i<n;i++) { scanf("%s%d",@@ a[i],&@@ b[i]); } for(c=0;c@@ <n;@@ c++) { e@@ =-1; for(i=0;i<n;i++) { if(b[i]@@ >=60) { if(b[i]>@@ e@@ ) { e=@@ b[i]; f@@ =i; } } } if(e@@ !=-1) { printf("%s\n",@@ a[@@ f@@ ]); b[@@ f@@ ]=0; } } for(i=0;i<n;i++) { if(b[i]@@ !=0) { printf("%s\n",@@ a[i]); } } getchar(); getchar(); }  
c -1
h -1
0

intmain() { intn; cin>>n; ints[@@ 25]; intmax@@ [25]; inti,j; for(i=0;i<n;i++) { cin>>@@ s[i]; } max@@ [0]=1; for(i=1;i<n;i++) { int@@ m=1; for(j=0;j<i;j++) { if(s@@ [i]<=@@ s[j]@@ &&@@ max@@ [j]+1>@@ m) m=@@ max@@ [j]+1; } max@@ [i]=@@ m; } int@@ p=@@ max@@ [0]; for(i=1;i<n;i++) { if(max@@ [i]>@@ p) p=@@ max@@ [i]; } cout<<@@ p@@ <<endl; }  
c -1
h -1
int@@ judge@@ (int@@ ); intmain() { intyear,month,day,@@ i,j,@@ total=0; cin>>year>>@@ month>>@@ day; for(i=1;i<=@@ month-1;i++) { if(i==1||i==3||i==5||i==7||i==8||i==@@ 10) total=total@@ +31; elseif(i==@@ 4||i==6||i==9||i==11) total=total+@@ 30; elseif(@@ judge@@ (year@@ )@@ ==0&&@@ i==@@ 2) total=total+@@ 28; elseif(@@ judge@@ (year@@ )@@ ==1&&@@ i==@@ 2) total=total+@@ 29; } total=total@@ +day; cout<<@@ total@@ <<endl; return0; } int@@ judge@@ (intx) { int@@ y=0; if(x@@ %4==0&&@@ x@@ %100!=0@@ ||@@ x%@@ 400==0) y=1; else y=0; return@@ y; }  
c -1
h -1
0

intmain() { intn,@@ y,@@ r,@@ d,@@ i; for(i=1;i<=@@ 5;i++) { scanf("%d%d@@ %d@@ \n",&@@ n,&@@ y,&@@ r); d=0; if((@@ y@@ >2@@ )&&(@@ n@@ %@@ 400==0)@@ )@@ d=1; if((@@ y@@ >2@@ )&&(@@ n@@ %100!=0@@ )&&(@@ n@@ %@@ 4@@ ==0)@@ )@@ d=1; d=d+@@ r; y@@ --; switch(@@ y) { case11:@@ d=d+@@ 30; case10:@@ d=d+@@ 31; case9:@@ d=d+@@ 30; case8:@@ d=d+@@ 31; case7:@@ d=d+@@ 31; case6:@@ d=d+@@ 30; case5:@@ d=d+@@ 31; case4:@@ d=d+@@ 30; case3:@@ d=d+@@ 31; case2:@@ d=d+@@ 28; case1:@@ d=d+@@ 31; } printf("%d\n",@@ d); } return0; }  
c -1
h -1
intmain(){ inta[@@ 101@@ ],b[@@ 20000],@@ n,@@ i; for(i=0;i<@@ 101@@ ;i=i+1@@ ){ a[i]=0; } cin>>n; cin>>@@ b[0]; cout<<@@ b[0]; a[@@ b[0]@@ ]=1; for(i=1;i<n;i++){ cin>>b[i]; if(a[@@ b[i]@@ ]==0){ cout<<""<<@@ b[i]; a[@@ b[i]@@ ]=1; } } return0; }  
c -1
h -1
0

intmain() { intk,m,n,@@ a[100][100],@@ i,j,@@ s,@@ t,@@ p,q; cin>>k; for(t@@ =1;t@@ <=k;@@ t++) { cin>>m>>n; for(i=0;i<m;i++) for(j=0;j<n;j++) cin>>a[i][j]; s=0; for(p=0;p@@ <m@@ ;p++) for(q=0;q@@ <n;@@ q++) if(p@@ ==0||@@ q@@ ==0||@@ p@@ ==@@ m-1@@ ||@@ q@@ ==@@ n-1) s=s+@@ a[p@@ ][q@@ ]; cout<<s<<endl; } return0; }  
c -1
h -1
intm,n; void@@ get@@ (inta[@@ 200@@ ],intb[@@ 200@@ ]) { inti; scanf("%d%d",&m,&n); for(i=0;i<m;i++) scanf("%d",&a[i]); for(i=0;i<n;i++) scanf("%d",&b[i]); } void@@ sequence@@ (inta[@@ 200@@ ],int@@ p) { inti,j,temp; for(i=0;i<p@@ ;i++) for(j=i+1;j<@@ p@@ ;j++) if(a[j]@@ <@@ a[i]) { temp=a[i]; a[i]=a[j]; a[j]=@@ temp; } } voidcombine@@ (inta[@@ 200@@ ],int@@ p@@ ,int@@ b[@@ 200@@ ],int@@ q) { intj; for(j=0;j<@@ q@@ ;j++) a[p@@ +j@@ ]=@@ b[j]; } void@@ show@@ (inta[@@ 200@@ ],int@@ p) { inti; for(i=0;i<p@@ -1;i++) { printf("%d",a[i]); } printf("%d",@@ a[p@@ -1]); } voidmain() { inta[@@ 200@@ ],b[@@ 200]; get@@ (a,b); sequence@@ (a,m); sequence@@ (b,n); combine@@ (a,@@ m,@@ b,@@ n); show@@ (a,@@ m+@@ n); }  
c -1
h -1
0

intmain() { charstr@@ [300@@ ]={@@ "\@@ 0@@ "@@ }; char@@ sub@@ [300@@ ]={@@ "\@@ 0@@ "@@ }; char@@ re@@ [300@@ ]={@@ "\@@ 0@@ "@@ }; char@@ t@@ [300]; char@@ pre@@ [300@@ ]={@@ "\@@ 0@@ "@@ }; char@@ post@@ [300@@ ]={@@ "\@@ 0@@ "@@ }; gets(str); gets(sub); gets(@@ re); inti,j,k; for(i=0;i<strlen(@@ str@@ );i++) { if(str[i]==@@ sub@@ [0]) { for(j=0;j<@@ 299@@ ;j++)@@ t@@ [j]@@ ='\0'; for(j=0;j<strlen(@@ sub)@@ ;j++)@@ t@@ [j]=@@ str@@ [i+j@@ ]; if(strcmp(@@ t,@@ sub)@@ ==0) { for(j=0;j<@@ i@@ ;j++)@@ pre@@ [j]=@@ str@@ [j]; for(j=i@@ +@@ strlen(@@ sub)@@ ;j<@@ strlen(@@ str@@ )@@ ;j++)@@ post@@ [j-i@@ -strlen(@@ sub)@@ ]=@@ str@@ [j]; printf("%s@@ %s@@ %s@@ \n",@@ pre@@ ,@@ re@@ ,@@ post@@ ); return0; } } } printf("%s\n",@@ str); return0; }  
c -1
h -1
intmain() {@@ inta[@@ 500]; inti,j,n,@@ ans; for(;@@ scanf("%d",&@@ a[0]@@ ),@@ a[0]@@ !=@@ -1;@@ ) { for(n@@ =1;@@ scanf("%d",&@@ a[n@@ ]@@ ),@@ a[n@@ ]@@ !=0@@ ;n@@ ++@@ ); ans=0; for(inti=0;i<n;i++) for(intj=0;j<@@ n@@ ;j++)@@ if(a[i]==a[j]@@ *2@@ )@@ ans@@ ++; printf("%d\n",@@ ans); } return0; }  
c -1
h -1
0

voidmain() { inta[100@@ ],@@ n,i,j,@@ k=0,@@ d@@ [100],@@ p; char@@ b[100@@ ][@@ 10@@ ],c[@@ 10],@@ str@@ [100][10]; scanf("%d",&n); for(i=0;i<n;i++) scanf("%s%d",@@ str@@ [i],&@@ a[i]); for(i=0;i<n;i++) if(a[i]@@ >=60) { d@@ [k]=@@ a[i]; strcpy(@@ b[k@@ ],@@ str[i]); k++; } for(i=0;i<k;i++) for(j=0;j<@@ k@@ -i-1;j++) if(d@@ [j]<@@ d@@ [j+1]) { p=@@ d@@ [j+1]; d@@ [j+1]=@@ d@@ [j]; d@@ [j]=@@ p; strcpy(@@ c,@@ b@@ [j+1]); strcpy(@@ b@@ [j+1],@@ b[j]); strcpy(@@ b[j]@@ ,@@ c); } for(i=0;i<k;i++) printf("%s\n",@@ b[i]); for(i=0;i<n;i++) if(a[i]@@ <60) printf("%s\n",@@ str[i]); }  
c -1
h -1
intnum[@@ 30]; int@@ dst@@ [30]; intmain() { memset(@@ dst@@ ,0,sizeof(@@ dst@@ )); intn; int@@ ans; cin>>n; for(inti=0;i<n;i++) { cin>>num[i]; } dst@@ [0]=1; int@@ temp,@@ max; for(inti=1;i<@@ n;i++) { max=1; for(intj=0;j<i;j++) { if(num@@ [i]<=@@ num@@ [j]) { temp=@@ dst@@ [j]+1; if(max<@@ temp@@ ) max=@@ temp; } } dst@@ [i]=@@ max; } max=0; for(inti=0;i<n;i++) { if(max<@@ dst@@ [i]) max=@@ dst@@ [i]; } cout<<@@ max; return0; }  
c -1
h -1
0

intmain() { inti,k,@@ col@@ [N@@ ],@@ row@@ [N@@ ],@@ a[100@@ ][@@ N@@ ][@@ N@@ ],@@ c,@@ r,@@ sum[@@ N]; cin>>k; for(i=0;i<k;i++) { sum@@ [i]=0; cin>>@@ col@@ [i]; cin>>row@@ [i]; for(c=0;c@@ <col@@ [i];@@ c++) { for(r=0;r@@ <row@@ [i];@@ r++) { cin>>@@ a[i][@@ c@@ ][@@ r@@ ]; } } for(c=0;c@@ <row@@ [i];@@ c++) sum[i]=sum[i]+@@ a[i][@@ 0][@@ c@@ ]+@@ a[i][@@ col@@ [i]@@ -1@@ ][c@@ ]; for(c@@ =1;@@ c@@ <col@@ [i]@@ -1;@@ c++) sum[i]=sum[i]+@@ a[i][@@ c@@ ][0]+@@ a[i][@@ c@@ ][@@ row@@ [i]@@ -1]; cout<<sum@@ [i]<<endl; } return0; }  
c -1
h -1
intmain() { charstr@@ [257],@@ substr@@ [257],@@ rep@@ [257]; inti,j=0,@@ m,n,@@ g=0; scanf("%s",@@ str); scanf("%s",@@ substr@@ ); scanf("%s",@@ rep); m=strlen(@@ str); n=strlen(@@ substr@@ ); for(i=0;i<m;i++) if(str[i]==@@ substr@@ [j]&&@@ g@@ <n) { j++; g@@ ++; } elseif(@@ g@@ >=@@ n) break; else{@@ g@@ =0;j@@ =0;} if(g@@ ==@@ n) for(j=0@@ ,i@@ =i@@ -n@@ ;j<@@ n@@ ;j++@@ ,i++) { str[i]=@@ rep@@ [j]; } printf("%s",str); return0; }  
c -1
h -1
0

intmain() { chara[500],b[500]; doublen,@@ c=0,@@ d,@@ l,@@ k; inti,@@ h=0; scanf("%lf",&n); scanf("%s%s",a,b); l@@ =strlen(a); k@@ =strlen(b); for(i=0;i<l;i++) { if(k!=@@ l@@ ||@@ a[i]!='@@ A'&&a[i]!='T'&&a[i]!='C'&&a[i]!='@@ G'||@@ b[i]!='A'&&b[i]!='T'&&b[i]!='C'&&b[i]!='@@ G') { printf("error"); h@@ =1; break; } else@@ if(a[i]==b[i]) c=c@@ +1; } d=@@ c@@ /@@ l; if(d@@ >n) printf("yes"); elseif(@@ h@@ ==0&&@@ d@@ <=@@ n) printf("no"); return0; }  
c -1
h -1
intmain(){ chara[@@ 300],b[@@ 300@@ ],c[@@ 300]; inti,j,@@ f,@@ d,@@ k=0; scanf("%s%s%s",a,b,c); d@@ =strlen(a); f@@ =strlen(c); for(i=0;i<d@@ ;i++){ if(a[i]==@@ b[0]@@ &&@@ a[i+1@@ ]==@@ b[1@@ ]@@ &&@@ a[i@@ +@@ 2@@ ]==@@ b[2@@ ]@@ &&@@ a[i@@ +@@ 3@@ ]==@@ b[@@ 3@@ ]){ for(j=i;j<i+@@ f@@ ;j++){ a[j]=@@ c@@ [k]; k++; } break; } } printf("%s",a); return0; }  
c -1
h -1
0

intnum; main() { void@@ fenjie@@ (intx,int@@ qi@@ ); intn,k,@@ a; scanf("%d",&n); for(k=1;k<=n;k++) { num=0; scanf("%d",&a); fenjie@@ (a,@@ 2); printf("%d\n",num); } } void@@ fenjie@@ (intx,int@@ qi@@ ) { if(x@@ ==1)@@ num++; else { for(inti=@@ qi@@ ;i<=@@ x;i++) { if(x@@ %i==0)@@ fenjie@@ (x/i,i); } } }  
c -1
h -1
intf@@ (intx,int@@ y){ inta[@@ x@@ ],b[@@ y@@ ]; intt,@@ i,j; for(i=0;i<x;i++){ cin>>@@ a[i];} for(j=0;j<@@ y@@ ;j++){ cin>>@@ b[j]@@ ;} for(i=0;i<x@@ -1;i++){ for(j=0;j<@@ x@@ -1@@ -i;j++){ if(a[j]>a[j+1@@ ]){ t=a[j]; a[j]=a[j+1]; a[j+1]=t; } } } for(i=0;i<@@ y@@ -1;i++){ for(j=0;j<@@ y@@ -1@@ -i;j++){ if(b[j]>b@@ [j+1@@ ]){ t=@@ b[j]; b[j]=b[j+1]; b[j+1]=@@ t; } } } for(i=0;i<x;i++){ if(i==0)@@ cout<<a[i]; else@@ cout<<""<<a[i]; } for(i=0;i<@@ y@@ ;i++){ cout<<""<<@@ b[i]; } } intmain(){ int@@ x,y; cin>>x@@ >>@@ y; f(@@ x,@@ y); return0; }  
c -1
h -1
0

intmain() { inta[100][100]; intn=0; int@@ x=0,@@ y=0; cin>>n; for(inti=0;i<n;i++) { cin>>x@@ ;@@ cin>>@@ y; for(intj=0;j<@@ x;j++) for(intk=0;k<@@ y@@ ;k++) cin>>a[j]@@ [k]; int*p; intsum=0; for(intj=1;j<@@ x@@ -1;j++) { p=@@ a[j]; sum@@ =*@@ p@@ +*@@ (p@@ +@@ y@@ -1)@@ +@@ sum; } p=@@ a[0]; for(intj=0;j<@@ y;j++) { sum+=@@ *p; p++; } p=@@ a[x@@ -1]; for(intj=0;j<@@ y;j++) { sum+=@@ *p; p++; } cout<<sum<<endl; } return0; }  
c -1
h -1
voidmain() { charstring@@ [300],@@ substring@@ [300],@@ replacement@@ [300],@@ test@@ [300]; int@@ lensub@@ ,@@ len,@@ i,j; scanf("%s\n@@ %s@@ \n@@ %s",@@ string,@@ substring@@ ,@@ replacement); len=strlen(@@ string); lensub@@ =strlen(@@ substring); for(i=0;i<=@@ len@@ -@@ lensub@@ ;i++) { for(j=1;j<=@@ lensub@@ ;j++) { test@@ [j-1]=@@ string@@ [i+j@@ -1]; test@@ [j]@@ ='\0'; } if(strcmp(@@ test@@ ,@@ substring@@ )@@ !=0) { printf("%c",@@ string@@ [i]); } else { printf("%s",@@ replacement); i@@ +=@@ lensub@@ ; break; } } for(@@ ;i<=@@ len@@ -1;i++) { printf("%c",@@ string@@ [i]); } }  
c -1
h -1
0

intmain(){ inti,k,@@ n,m,@@ L@@ ,@@ l1,l2@@ ; chars[@@ 1000],@@ a[@@ 300],b[@@ 300]; scanf("%s",s); scanf("%s",a); scanf("%s",b); getchar(); L@@ =strlen(s); l1@@ =strlen(a); l2@@ =strlen(b); n=0; for(i=0;i<@@ L@@ ;i++){ if(a[0]@@ ==@@ s[i]@@ ){ n++; for(k=1;k<@@ l1@@ ;k++){ if(s@@ [i+k@@ ]==@@ a[k]@@ ){ n++; }else{ n=0; break; } } } if(n==@@ l1@@ ){ break; } } for(k=0;k<@@ i@@ ;k++){ printf("%c",s@@ [k]); getchar(); } for(k=0@@ ;i@@ !=@@ L@@ &&k@@ <@@ l2@@ ;k++){ printf("%c",@@ b[k@@ ]); getchar(); } for(k=i+@@ l1@@ ;i@@ !=@@ L@@ &&k@@ <@@ L@@ ;k++){ printf("%c",s@@ [k]); getchar(); } return0; }  
c -1
h -1
intmain() { chars[256],@@ s1@@ [256],@@ t@@ [256]; intj,@@ ls1@@ ,@@ lt@@ ,i,@@ k=0; scanf("%s%s%s",@@ s,@@ s1,@@ t); ls1@@ =strlen(@@ s1); lt@@ =strlen(@@ t); for(i=0;s[i]@@ ;i++) { if(s[i]==@@ s1@@ [k]) { k++; if(k==@@ ls1@@ -1) break; } else k=0; } if(i>=@@ strlen(@@ s@@ )) printf("%s\n",@@ s); else { for(j=0;j<@@ i@@ -@@ ls1@@ +@@ 2@@ ;j++) printf("%c",s@@ [j]); printf("%s",@@ t); for(j=i@@ +@@ 2@@ ;j<@@ strlen(@@ s@@ );j++) printf("%c",s@@ [j]); printf("\n"); } }  
c -1
h -1
1


structbook { intid; char@@ p@@ [26]; }; voidmain() { intn,i,j,k,@@ a[@@ 150@@ ]={0},@@ flag@@ ,@@ max=0; structbook@@ t@@ ,*@@ s,@@ o@@ [1000],@@ y@@ [1000]; scanf("%d",&n); s@@ =(struct@@ book@@ *)malloc(@@ n*@@ sizeof(struct@@ book)); for(i=0;i<n;i++) {@@ scanf("%d%s",&@@ s[i].@@ id,@@ s[i].@@ p); for(j=0;@@ s[i].@@ p@@ [j]!='\0';j++) a[@@ s[i].@@ p@@ [j]@@ ]++; } for(i@@ ='A'@@ ;i<=@@ 'Z'@@ ;i++) if(max<@@ a[i]@@ ){max=@@ a[i]@@ ;j@@ =i;} printf("%c\n",@@ j); printf("%d\n",max); for(i=0;i<n;i++) { flag=0; for(k=0;@@ s[i].@@ p@@ [k]@@ !='\0'@@ ;k++) if(s@@ [i].@@ p@@ [k]==@@ j)@@ flag=1; if(flag@@ ==1)@@ printf("%d\n",@@ s[i].@@ id); } }  
c -1
h -1
voidmain() { struct@@ pa {@@ char@@ m@@ [10]; inta; }; structpa@@ p@@ [100],@@ t,@@ s=@@ {@@ "@@ 0@@ ",@@ 0},@@ pp@@ [100]; intn,i,j=0,@@ m=0,@@ k; scanf("%d",&n); for(i=0;i<n;i++) scanf("%s%d",&@@ p[i].@@ m,&@@ p[i].@@ a); for(i=0;i<n;i++) {@@ if(p@@ [i].@@ a@@ >=60@@ )@@ m@@ ++;} for(j=0;j<m;j++) {t=@@ s@@ ;k@@ =@@ 100; for(i=0;i<n;i++) {@@ if(p@@ [i].@@ a@@ >=60&&@@ p[i].@@ a@@ >@@ t@@ .@@ a@@ ){@@ t=@@ p[i]@@ ;k@@ =i;@@ }} pp@@ [j]=@@ t@@ ;p@@ [k]=@@ s; } for(i=0;i<n;i++) if(p@@ [i].@@ a@@ <60&&@@ p[i].@@ a@@ >0@@ ){@@ pp@@ [j]=@@ p[i]@@ ;j++@@ ;} for(i=0;i<n;i++) printf("%s\n",@@ pp@@ [i].@@ m); }  
c -1
h -1
0

intmain() { intn,m,@@ i,j,@@ t=0,@@ a[1000]; scanf("%d%d\n",&n,&@@ m); for(i=0;i<n;i++){ scanf("%d",&a[i]); } for(i=0;i<n;i++){ for(j=1;j<@@ n@@ -i;j++){ if(a[i]+@@ a[i+j@@ ]==@@ m){ t++; } } } if(t@@ ==0){ printf("no"); } elseif(@@ t@@ !=0){ printf("yes"); } return0; }  
c -1
h -1
intmain(){ chars[256],@@ s1@@ [256],@@ s2@@ [256],@@ ss@@ [@@ 20],@@ re@@ [20]; inti,j,@@ x=0,@@ y=0,@@ a,@@ flag=0; gets(s); scanf("%s%s",@@ ss@@ ,@@ re); for(i=0;s[i]@@ !='\0';i++){ if(s@@ [i]!=@@ ss@@ [0]){ s1@@ [x@@ ]=@@ s[i]; x++; } elseif(@@ s@@ [i]==@@ ss@@ [0]){ a=i; flag=1; for(j=0;@@ ss@@ [j]@@ !='\0';j++){ if(@@ ss@@ [j]!=@@ s[@@ a@@ ]){ flag=0; } a++; } if(flag@@ ==0){ s1@@ [x@@ ]=@@ s[i]; x++; } } if(flag@@ ==1){ s1@@ [x@@ ]='\0'; break; } } if(flag@@ ==1){ for(i@@ +=@@ strlen(@@ ss@@ );@@ s[i]@@ !='\0';i++){ s2@@ [y@@ ]=@@ s[i]; y++; } } s2@@ [y@@ ]='\0'; if(flag@@ ==1){ printf("%s@@ %s%s",@@ s1,@@ re@@ ,@@ s2); } if(flag@@ ==0){ printf("%s",s); } return0; }  
c -1
h -1
0

struct@@ library { intnum; char@@ aut@@ [30]; struct@@ library@@ *next; } main() { intm,i,j,@@ a[@@ 30],@@ t,@@ b[@@ 30],@@ x=0; charname@@ ; struct@@ library@@ *@@ head; struct@@ library@@ *@@ p1,*p2,*@@ p; for(i=0;i<26;i++) { a[i]=0; b[i]=0; } scanf("%d",&m); p1=p2=(struct@@ library@@ *)malloc(LEN); scanf("%d%s",&p1->num,p1->@@ aut@@ ); head=p1; p2=p1; for(i=0;i<m-1;i++) { p1=(struct@@ library@@ *)malloc(LEN); scanf("%d%s",&p1->num,p1->@@ aut@@ ); p2->next=p1; p2=p1; } p1->next=NULL; p=head; for(i=0;i<m;i++) { for(j=0;j<26;j++) { if(p->aut@@ [j]=='@@ A')@@ a[0]=@@ a[0]@@ +1; if(p->aut@@ [j]=='@@ B@@ ')@@ a[1]=@@ a[1]@@ +1; if(p->aut@@ [j]=='@@ C')@@ a[2@@ ]=a[@@ 2@@ ]+1; if(p->aut@@ [j]=='@@ D@@ ')a[@@ 3@@ ]=a[@@ 3@@ ]+1; if(p->aut@@ [j]=='@@ E@@ ')a[@@ 4@@ ]=a[@@ 4@@ ]+1; if(p->aut@@ [j]=='@@ F@@ ')a[@@ 5@@ ]=a[@@ 5@@ ]+1; if(p->aut@@ [j]=='@@ G')@@ a[@@ 6@@ ]=a[@@ 6@@ ]+1; if(p->aut@@ [j]=='@@ H@@ ')a[@@ 7@@ ]=a[@@ 7@@ ]+1; if(p->aut@@ [j]=='@@ I@@ ')a[@@ 8@@ ]=a[@@ 8@@ ]+1; if(p->aut@@ [j]=='@@ J@@ ')a[@@ 9@@ ]=a[@@ 9@@ ]+1; if(p->aut@@ [j]=='@@ K@@ ')a[@@ 10@@ ]=a[@@ 10@@ ]+1; if(p->aut@@ [j]=='@@ L@@ ')a[@@ 11@@ ]=a[@@ 11@@ ]+1; if(p->aut@@ [j]=='@@ M@@ ')a[@@ 12@@ ]=a[@@ 12@@ ]+1; if(p->aut@@ [j]=='@@ N@@ ')a[@@ 13@@ ]=a[@@ 13@@ ]+1; if(p->aut@@ [j]=='@@ O@@ ')a[@@ 14@@ ]=a[@@ 14@@ ]+1; if(p->aut@@ [j]=='@@ P@@ ')a[@@ 15@@ ]=a[@@ 15@@ ]+1; if(p->aut@@ [j]=='@@ Q@@ ')a[@@ 16@@ ]=a[@@ 16@@ ]+1; if(p->aut@@ [j]=='@@ R@@ ')a[@@ 17@@ ]=a[@@ 17@@ ]+1; if(p->aut@@ [j]=='@@ S@@ ')a[@@ 18@@ ]=a[@@ 18@@ ]+1; if(p->aut@@ [j]=='@@ T')@@ a[@@ 19@@ ]=a[@@ 19@@ ]+1; if(p->aut@@ [j]=='@@ U@@ ')a[@@ 20@@ ]=a[@@ 20@@ ]+1; if(p->aut@@ [j]=='@@ V@@ ')a[@@ 21@@ ]=a[@@ 21@@ ]+1; if(p->aut@@ [j]=='@@ W@@ ')a[@@ 22@@ ]=a[@@ 22@@ ]+1; if(p->aut@@ [j]=='@@ X@@ ')a[@@ 23@@ ]=a[@@ 23@@ ]+1; if(p->aut@@ [j]=='@@ Y@@ ')a[@@ 24@@ ]=a[@@ 24@@ ]+1; if(p->aut@@ [j]=='@@ Z@@ ')a[@@ 25@@ ]=a[@@ 25@@ ]+1; if(p->aut@@ [j]==@@ '\0')@@ break; } p=p->next; } t=0; for(i=1;i<26;i++) { if(a[@@ t@@ ]<@@ a[i])@@ t=i; } if(t==0) { printf("@@ A@@ \n"); name@@ ='A'; } if(t@@ ==1) { printf("@@ B@@ \n"); name@@ ='@@ B@@ '; } if(t==@@ 2) { printf("@@ C@@ \n"); name@@ ='@@ C@@ '; } if(t==@@ 3) { printf("@@ D@@ \n"); name@@ ='@@ D@@ '; } if(t==@@ 4) { printf("@@ E@@ \n"); name@@ ='@@ E@@ '; } if(t==@@ 5) { printf("@@ F@@ \n"); name@@ ='@@ F@@ '; } if(t==@@ 6) { printf("@@ G@@ \n"); name@@ ='@@ G@@ '; } if(t==@@ 7) { printf("@@ H@@ \n"); name@@ ='@@ H@@ '; } if(t==@@ 8) { printf("@@ I@@ \n"); name@@ ='@@ I@@ '; } if(t==@@ 9) { printf("@@ J@@ \n"); name@@ ='@@ J@@ '; } if(t==@@ 10) { printf("@@ K@@ \n"); name@@ ='@@ K@@ '; } if(t==@@ 11) { printf("@@ L@@ \n"); name@@ ='@@ L@@ '; } if(t==@@ 12) { printf("@@ M@@ \n"); name@@ ='@@ M@@ '; } if(t==@@ 13@@ ) { printf("@@ N@@ \n"); name@@ ='@@ N@@ '; } if(t==@@ 14@@ ) { printf("@@ O@@ \n"); name@@ ='@@ O@@ '; } if(t==@@ 15@@ ) { printf("@@ P@@ \n"); name@@ ='@@ P@@ '; } if(t==@@ 16@@ ) { printf("@@ Q@@ \n"); name@@ ='@@ Q@@ '; } if(t==@@ 17@@ ) { printf("@@ R@@ \n"); name@@ ='@@ R@@ '; } if(t==@@ 18@@ ) { printf("@@ S@@ \n"); name@@ ='@@ S@@ '; } if(t==@@ 19@@ ) { printf("@@ T@@ \n"); name@@ ='@@ T@@ '; } if(t==@@ 20@@ ) { printf("@@ U@@ \n"); name@@ ='@@ U@@ '; } if(t==@@ 21@@ ) { printf("@@ V@@ \n"); name@@ ='@@ V@@ '; } if(t==@@ 22@@ ) { printf("@@ W@@ \n"); name@@ ='@@ W@@ '; } if(t==@@ 23@@ ) { printf("@@ X@@ \n"); name@@ ='@@ X@@ '; } if(t==@@ 24@@ ) { printf("@@ Y@@ \n"); name@@ ='@@ Y@@ '; } if(t==@@ 25@@ ) { printf("@@ Z@@ \n"); name@@ ='@@ Z@@ '; } printf("%d\n",@@ a[t@@ ]); p=head; for(i=0;i<m;i++) { for(j=0;j<26;j++) { if(p->aut@@ [j]==@@ name@@ ) { b[@@ x@@ ]=@@ p->@@ num; x=x@@ +1; break; } } p=p->next; } for(i=0;i<x@@ -1;i++)@@ printf("%d\n",@@ b[i]); printf("%d",b[i]); }  
c -1
h -1
structstudent { intnum; int@@ yw@@ ; int@@ sx; int@@ he@@ ; }@@ student[@@ 100000]; intmain() { inti,n,@@ j,@@ s=0,@@ m; scanf("%d",&n); for(i=0;i<n;i++) { scanf("%d%d%d",&@@ student[i].@@ num,&@@ student[i].@@ yw@@ ,&@@ student[i].@@ sx@@ ); student[i].@@ he@@ =@@ student[i].@@ yw@@ +@@ student[i].@@ sx; } for(i=0;i<n;i++) {@@ m=@@ student@@ [0].@@ he@@ ; for(j=n-1@@ ;j>0;j--) { m=@@ student[j].@@ he@@ >@@ m@@ ?@@ student[j].@@ he@@ :@@ m; } for(j=0;j<n;j++) { if(@@ student[j].@@ he@@ ==@@ m) {@@ printf("%d%d\n",@@ student[j].@@ num,@@ student[j].@@ he@@ ); student[j].@@ he@@ =0;@@ s=s@@ +1;@@ if(s@@ ==@@ 3) {@@ goto@@ guiyi@@ ;}} } } guiyi@@ :@@ return0; }  
c -1
h -1
0

intc[@@ 1000]={0},@@ d[@@ 1000],@@ j; main() { voidf@@ (); inti,@@ s; scanf("%d",&@@ s); for(j=0;j<@@ s@@ ;j++) { scanf("%d",&@@ d@@ [j]); for(i=2;i<=@@ sqrt(@@ d@@ [j]@@ );i++) { if(d@@ [j]@@ %i==0) { c[j]@@ ++; f(@@ i,@@ d@@ [j]@@ /i); } } } for(j=0;j<@@ s@@ ;j++) { printf("%d\n",@@ c[j]@@ +1); } } voidf@@ (int@@ s@@ ,int@@ m) { intk; for(k=@@ s@@ ;k<=@@ sqrt(@@ m)@@ ;k++) { if(m@@ %@@ k@@ ==0) { c[j]@@ ++; f(@@ k,@@ m/@@ k); } } }  
c -1
h -1
voidmain() { struct@@ b {@@ intn; chara[@@ 26]; }; struct@@ b@@ b[@@ 999]; intm,@@ k,i,j,@@ c[@@ 26]={0},@@ p=0,@@ q=0; char@@ x; scanf("%d",&m); for(i=0;i<m;i++) scanf("%d%s",&@@ b[i].@@ n,&@@ b[i].@@ a); for(i=0;i<m;i++) for(j=0;@@ (@@ x=@@ b[i].@@ a[j])@@ !=@@ '\0@@ '&&@@ j@@ <26@@ ;j++) c[@@ x@@ -65]++; k=@@ c[@@ 0]; for(i=0;i<26;i++) if(c@@ [i]>@@ k){@@ k=@@ c[i]@@ ;p@@ =i;} printf("%c\n",@@ p@@ +65); printf("%d\n",@@ c[@@ p@@ ]); for(i=0;i<m;i++) {@@ q=0; for(j=0;@@ (@@ x=@@ b[i].@@ a[j])@@ !=@@ '\0@@ '&&@@ j@@ <26@@ ;j++) if(x==@@ p@@ +65@@ )@@ q=1; if(q@@ ==1)@@ printf("%d\n",b[i].@@ n); } }  
c -1
h -1
0

intmain(){ intn,k,@@ i=0,@@ j,@@ sign@@ =1; scanf("%d%d",&n,&k); ints[@@ n]; while(i<@@ n){ scanf("%d",&s[i]); i=i+1; } i=0; while(i<@@ n){ j@@ =i+1; while(j<@@ n){ if(s@@ [i]+@@ s@@ [j]==k){ sign@@ =0; } j=j+1; } i=i+1; } if(@@ sign@@ ==0){ printf("yes"); }else{ printf("no"); } return0; }  
c -1
h -1
structstu { intid; int@@ ch; int@@ mt@@ ; inttotal; }; structstu@@ stu_1@@ [100000]; structstu@@ top1@@ =@@ {@@ 0,0,@@ 0,@@ 0},@@ top2@@ =@@ {@@ 0,0,@@ 0,@@ 0},@@ top3@@ =@@ {@@ 0,0,@@ 0,@@ 0@@ }; intmain() {@@ intn,i; structstu@@ tem; scanf("%d",&n); for(i=0;i<n;i++){ scanf("%d%d%d",&@@ (@@ stu_1@@ [i].@@ id@@ )@@ ,&@@ (@@ stu_1@@ [i].@@ ch@@ )@@ ,&@@ (@@ stu_1@@ [i].@@ mt@@ )); stu_1@@ [i].@@ total=@@ stu_1@@ [i].@@ ch@@ +@@ stu_1@@ [i].@@ mt@@ ; if(@@ stu_1@@ [i].@@ total>@@ top1@@ .@@ total@@ ){ top3@@ =@@ top2@@ ;@@ top2@@ =@@ top1@@ ;@@ top1@@ =@@ stu_1@@ [i]; } elseif(@@ stu_1@@ [i].@@ total>@@ top2@@ .@@ total@@ ){ top3@@ =@@ top2@@ ;@@ top2@@ =@@ stu_1@@ [i]; } elseif(@@ stu_1@@ [i].@@ total>@@ top3@@ .@@ total@@ ){ top3@@ =@@ stu_1@@ [i]; } else@@ ; } printf("%d%d\n",@@ top1@@ .@@ id,@@ top1@@ .@@ total); if((@@ top2@@ .@@ id@@ )@@ !=0) printf("%d%d\n",@@ top2@@ .@@ id,@@ top2@@ .@@ total); if((@@ top3@@ .@@ id@@ )@@ !=0) printf("%d%d\n",@@ top3@@ .@@ id,@@ top3@@ .@@ total); return0; }  
c -1
h -1
0

intmain(){ intb[@@ 1000],@@ n,k,@@ i,j; scanf("%d%d",&n,&k); for(i=0;i<n;i++)@@ scanf("%d",&b[i]); for(i=0;i<n-1;i++){ for(j=i+1;j<n;j++){ if(b[i]@@ +@@ b[j]@@ ==@@ k){@@ printf("yes");@@ break;} if(i==@@ n-2@@ &&j@@ ==@@ n-1@@ ){@@ printf("no");} } if(b[i]@@ +@@ b[j]@@ ==@@ k){@@ break;} } return0; }  
c -1
h -1
void@@ maopao@@ (intm,@@ intn,@@ inta[@@ 200@@ ],int@@ b[100@@ ]) { int@@ tempt@@ ,@@ i,j; for(j=0;j<@@ m-1@@ ;j++){ for(i=0;i<m@@ -j@@ -1;i++){ if(a[i]>@@ a[i+1@@ ]){ tempt@@ =@@ a[i]; a[i]=a[i+1]; a[i+1]=@@ tempt@@ ; } } } for(j=0;j<n-1@@ ;j++){ for(i=0;i<n@@ -j@@ -1;i++){ if(b[i]>b@@ [i+1@@ ]){ tempt@@ =@@ b[i]; b[i]=b[i+1]; b[i+1]=@@ tempt@@ ; } } } } void@@ jieshang@@ (intm,@@ intn,@@ inta[@@ 200@@ ],int@@ b[100@@ ]){ inti; for(i=0;i<n;i++) a[m@@ +i]=b[i]; } voidshuchu@@ (intm,@@ intn,@@ inta[@@ 200@@ ]){ inti; for(i=0;i<m+@@ n-1;i++) printf("%d",a[i]); printf("%d\n",a[@@ m+@@ n-1]); } voidmain() { intm,n,@@ i,@@ a[@@ 200@@ ],b[100]; scanf("%d%d",&m,&n); for(i=0;i<m;i++) scanf("%d",&a[i]); for(i=0;i<n;i++) scanf("%d",&b[i]); maopao@@ (@@ m,n,@@ a,b); jieshang@@ (@@ m,n,@@ a,b); shuchu@@ (@@ m,n,@@ a); }  
c -1
h -1
0

intmain(){ intn,@@ a,b,c,d,@@ e,f,@@ i,j,@@ m; intsz[@@ 5000@@ ]; scanf("%d%d",&n,&m); for(i=0;i<n;i++){ scanf("%d",&sz[i]); } for(i=0;i<n;i++){ for(j=n-1@@ ;j>i@@ ;j--){ if((@@ sz[i]@@ +sz@@ [j]@@ )==@@ m){ printf("yes"); return0; } } } printf("no"); return0; }  
c -1
h -1
intmain() { inta[100][100],@@ m,n,@@ i,j,k; cin>>m>>n; for(i=0;i<m;i++) { for(j=0;j<n;j++) { cin>>a[i][j]; } } for(k=0;k<@@ m+@@ n-1;k++) { for(i=n-1;i>=0;i--) { if(k@@ -i@@ >=0@@ &&k@@ -i@@ <@@ m) { cout<<@@ a[k@@ -i@@ ]@@ [i]<<endl; } } } return0; }  
c -1
h -1
0

intmain() { inta[@@ 101][@@ 101@@ ]={0}; introw,col,@@ i,j,@@ n,@@ sum; cin>>row>>col; for(i=0;i<row;i++) for(j=0;j<col;j++) cin>>a[i][j]; for(n=0;n@@ <row@@ +col@@ -1;@@ n++) for(i=0;i<=@@ n;i++) { if(i@@ <row@@ &&n@@ -i@@ <col) cout<<a[i]@@ [n@@ -i@@ ]<<endl; elsecontinue; } return0; }  
c -1
h -1
structpatient { charid[10]; int@@ old@@ ; }@@ pt@@ [100]; main() { intn,i,j,k,@@ e,@@ h; int@@ yx@@ [100],@@ byx@@ [100]; scanf("%d",&n); j=0; k=0; for(i=0;i<n;i++){ scanf("%s%d",&@@ pt@@ [i].id,&@@ pt@@ [i].@@ old@@ ); if(@@ pt@@ [i].@@ old@@ >=60){ yx@@ [j]@@ =i; j++; } else{ byx@@ [k]=@@ i; k++; } } for(i=0;i<j@@ ;i++){ for(h=0;h@@ <j@@ -1;@@ h@@ ++){ if(@@ pt@@ [@@ yx@@ [h@@ ]@@ ].@@ old@@ <@@ pt@@ [@@ yx@@ [h@@ +1@@ ]@@ ].@@ old@@ ){ e=@@ yx@@ [h@@ ]; yx@@ [h@@ ]=@@ yx@@ [h@@ +1]; yx@@ [h@@ +1]=@@ e; } } } for(i=0;i<j@@ ;i++){ printf("%s\n",@@ pt@@ [@@ yx@@ [i]@@ ].id); } for(i=0;i<k;i++){ printf("%s\n",@@ pt@@ [@@ byx@@ [i]@@ ].id); } }  
c -1
h -1
0

main() { intn,@@ b[100@@ ],@@ d@@ [100],@@ j=0,@@ k,@@ l,@@ t,@@ i; scanf("%d",&n); chara[@@ n@@ ][@@ 10@@ ],c[@@ n@@ ][10]; for(i=0;i<n;i++) scanf("%s%d",@@ a[i],&@@ b[i]); k=0; for(i=0;i<n;i++) { if(b[i]@@ >=60) { d@@ [k]=@@ b[i]; strcpy(@@ c@@ [k],@@ a[i]); k++; } } l=@@ k; char@@ r@@ [10]; for(k=0;k<@@ l@@ -1;k++) { for(j=0;j<l@@ -1@@ -@@ k;j++) if(d@@ [j]<@@ d@@ [j+1]) { t=@@ d@@ [j]; d@@ [j]=@@ d@@ [j+1]; d@@ [j+1]=t; strcpy(@@ r,@@ c@@ [j]); strcpy(@@ c@@ [j],@@ c@@ [j+1]); strcpy(@@ c@@ [j+1],@@ r); } } for(j=0;j<l;j++) { printf("%s\n",@@ c@@ [j]); } for(i=0;i<n;i++) { if(b[i]@@ <60) printf("%s\n",@@ a[i]); } }  
c -1
h -1
int@@ src@@ [@@ 20000]; int@@ dst@@ [100]; intmain() { intn,i,j,@@ flag; int@@ current_pos@@ =0; cin>>n; for(i=0;i<n;i++)@@ cin>>@@ src@@ [i]; for(i=0;i<n;i++) { if(@@ current_pos@@ ) { flag=1; for(j=0;j<@@ current_pos@@ ;j++) { if(@@ dst@@ [j]==@@ src@@ [i])@@ flag=0; } if(flag==1) { dst@@ [@@ current_pos@@ ]=@@ src@@ [i]; current_pos@@ ++; } } else { dst@@ [0]=@@ src@@ [0]; current_pos@@ ++; } } for(i=0;i<@@ current_pos@@ ;i++){ cout<<@@ dst@@ [i]; if(i<@@ current_pos@@ -1)@@ cout<<"@@ "; } cout<<endl; return0; }  
c -1
h -1
0

structbook { int@@ no; charauthor[26]; }@@ ji@@ [1000]; main() { intn,i,j,@@ len,@@ a[@@ 26@@ ][@@ 1000],@@ e,@@ b[@@ 26]={0},@@ max=0; scanf("%d",&n); for(i=0;i<n;i++) { scanf("%d%s",&@@ ji@@ [i].@@ no@@ ,@@ ji@@ [i].@@ author); len=strlen(@@ ji@@ [i].@@ author); for(j=0;j<len;j++) { e=@@ ji@@ [i].@@ author@@ [j]; e=@@ e@@ -65@@ ; a[@@ e@@ ][@@ b[@@ e@@ ]@@ ]=@@ ji@@ [i].@@ no; b[@@ e@@ ]=@@ b[@@ e@@ ]+1; } } for(i=0;i<26;i++) if(b[@@ max@@ ]<@@ b[i]) max=i; printf("%c\n%d\n",@@ max@@ +65@@ ,@@ b[@@ max@@ ]); for(i=0;i<@@ b[@@ max@@ ]@@ ;i++) printf("%d\n",a[@@ max@@ ][i]); return0; }  
c -1
h -1
intmain() { intn,@@ s=0,@@ u@@ ; int@@ image@@ [100][100]; scanf("%d",&n); for(int@@ row@@ =0;row@@ <n;@@ row++) { for(int@@ col@@ =0;col@@ <n;col@@ ++) { scanf("%d",&(@@ image@@ [@@ row][col@@ ]@@ )); } } for(inti=0;i<n;i++) { intk=0; for(intj=0;j<n;j++) { if(@@ image@@ [i][j]==0) { k++; } } if(k@@ >0) { u@@ =k; s++; } } intm@@ =(@@ u@@ -2)*(@@ s@@ -2); printf("%d",m); return0; }  
c -1
h -1
0

intsum=0,@@ g,@@ f; int@@ divide@@ (int@@ chushu@@ ,int@@ a) { inti; for(i=@@ chushu@@ ;i<=a;i++) { if(a%i==0) { f=@@ a/@@ i; if(f@@ >1) {@@ g@@ =i;@@ divide@@ (@@ g,@@ f@@ );} else { sum++; } } }@@ returnsum; } intmain() { intn=0; cin>>n; int@@ p=0; for(p=0;p@@ <n;p++) { int@@ b=0,@@ c=@@ 2; cin>>@@ b; sum=0; cout<<@@ divide@@ (c,@@ b@@ )<<endl; } return0; }  
c -1
h -1
intmain() { intn@@ [100][100],@@ i,j,@@ a,b,@@ x; scanf("%d%d",&a,&b); for(i=0;i<a;i++) { for(j=0;j<@@ b;j++) scanf("%d",&@@ n@@ [i][j]); } for(intm=0;m@@ <b@@ ;m++) { int@@ c=0; for(i=m@@ ;i>=0@@ &&@@ c@@ <a@@ ;i@@ --@@ ,@@ c++) printf("%d\n",@@ n[@@ c@@ ][i]); } inty; for(x@@ =1;@@ x@@ <@@ a;@@ x++) { y=@@ b@@ -1; for(j=@@ x@@ ;j<@@ a@@ &&@@ y@@ >=0@@ ;j++,@@ y@@ --) printf("%d\n",n@@ [j]@@ [y@@ ]); } int@@ z; scanf("%d",&@@ z); return0; }  
c -1
h -1
0

main() { intn,k,@@ i,j; intt=0; scanf("%d%d",&n,&k); int*@@ a=@@ (int*)malloc(n*sizeof(int)); for(i=0;i<n;i++) scanf("%d",&a[i]); for(i=0;i<n;i++) { for(j=i+1;j<n;j++) { if(a[i]+a[j]==k) { t++; break; } } if(t@@ !=0) break; } if(t==0) printf("no"); else printf("yes"); }  
c -1
h -1
intmain(){ int@@ tumour@@ [256@@ ][@@ 256],@@ n,i,j,@@ x1@@ =-1,@@ y1,@@ x2@@ =-1,@@ y2@@ ,@@ s; scanf("%d",&n); for(i=0;i<n;i++){ for(j=0;j<n;j++){ scanf("%d",&@@ tumour@@ [i][j]); } } for(i=0;i<n;i++){ for(j=0;j<n;j++){ if(@@ tumour@@ [i][j]@@ ) continue; else{ x1=i; y1=j; break; } } if(@@ x1@@ >=0) break; } for(i=n-1;i>=0;i--){ for(j=n-1@@ ;j>=0;j--){ if(@@ tumour@@ [i][j]@@ ) continue; else{ x2=i; y2=j; break; } } if(@@ x2@@ >=0) break; } s=(@@ x2-x1-1)*(y2-y1-1); printf("%d\n",s); return0; }  
c -1
h -1
0

voidmain() { void@@ y2@@ (inta[],intb[],int@@ m,int@@ n); void@@ y3@@ (inta[],intb[],int@@ m,int@@ n); void@@ y4@@ (inta[],int@@ m,int@@ n); intm,n; inta[100],b[100]; inti,j; scanf("%d%d",&m,&n); for(i=0;i<m;i++) {@@ scanf("%d",&a[i]);} for(j=0;j<n;j++) {scanf("%d",&@@ b[j]@@ );} y2@@ (a,b,m,n); y3@@ (a,b,m,n); y4@@ (a,@@ m,n); } void@@ y2@@ (inta[],intb[],int@@ m,intn) { intt,@@ i,j; for(i=0;i<m-1;i++) {@@ for(j=0;j<@@ m-1@@ -i;j++) {@@ if(a[j]>a[j+1]) {t=@@ a[j]; a[j]=a[j+1]; a[j+1]=t; } } } for(i=0;i<n-1;i++) {@@ for(j=0;j<n-1-i;j++) {@@ if(b[j]>b[j+1]) {t=@@ b[j]; b[j]=b[j+1]; b[j+1]=@@ t; } } } } void@@ y3@@ (inta[],intb[],int@@ m,intn) { inti; for(i=m@@ ;i<=@@ m+@@ n-1;i++) {@@ a[i]=b[i-@@ m@@ ];} } void@@ y4@@ (inta[],int@@ m,intn) { inti; printf("%d",a[0]); for(i=1;i<=@@ m+@@ n-1;i++) {printf("%d",@@ a[i]);} }  
c -1
h -1
intmain() { intn,i,j,@@ t,@@ x; cin>>n; inta[n]; for(i=0;i<n;i++) { cin>>x; a[i]=@@ x; } for(i=0;i<n;i++) { for(j=i+1;j<n;j++) { if(a[i]==a[j]) { for(t@@ =j@@ ;t@@ <n;@@ t++) { a[t@@ ]=a[@@ t@@ +1]; } n--; j--; } } } for(i=0;i<n-1;i++) { cout<<a[i]<<""; } cout<<a[@@ n-1@@ ]<<endl; return0; }  
c -1
h -1
0

intmain() { inta[@@ 101][@@ 101],@@ row,col,@@ i,j,k,@@ sum; cin>>row>>col; sum=@@ row@@ +@@ col; for(i=1;i<=@@ row;i++) for(j=1;j<=col;j++) cin>>a[i][j]; for(k=@@ 2@@ ;k<=@@ sum@@ ;k++) { if(k@@ <=col@@ +1) { i=1; j=@@ k@@ -1; do { cout<<a[i]@@ [j]@@ <<endl@@ ;@@ ; i@@ +=1; j@@ -=@@ 1; } while(i@@ <=row@@ &&j@@ >=1@@ ); } else { i=@@ k-@@ col; j=@@ k-@@ i; do { cout<<a[i][j]<<endl; i@@ +=1; j@@ -=@@ 1; } while(i@@ <=row@@ &&j@@ >=1@@ ); } } return0; }  
c -1
h -1
intmain(intargc,char*argv[]) { inta,b,c,@@ d; scanf("%d%d%d",&a,&b,&c); if(a%@@ 4==0&&a%100!=0@@ ||a%@@ 400==0) { switch(@@ b) { case1: d=@@ c; break; case2: d@@ =31+c; break; case3: d=@@ 60@@ +c; break; case4: d=@@ 91@@ +c; break; case5: d=@@ 121@@ +c; break; case6: d=@@ 152@@ +c; break; case7: d=@@ 182@@ +c; break; case8: d=@@ 213@@ +c; break; case9: d=@@ 244@@ +c; break; case10: d=@@ 274@@ +c; break; case11: d=@@ 305@@ +c; break; case12: d=@@ 335@@ +c; break; } printf("%d",d); } else { switch(@@ b) { case1: d=@@ c; break; case2: d@@ =31+c; break; case3: d=@@ 59@@ +c; break; case4: d=@@ 90@@ +c; break; case5: d=@@ 120@@ +c; break; case6: d=@@ 151@@ +c; break; case7: d=@@ 181@@ +c; break; case8: d=@@ 212@@ +c; break; case9: d=@@ 243@@ +c; break; case10: d=@@ 273@@ +c; break; case11: d=@@ 304@@ +c; break; case12: d=@@ 334@@ +c; break; } printf("%d",d); } return0; }  
c -1
h -1
0

ints@@ [100]={0},@@ t@@ [100]={0},@@ n,i,j,@@ m=0; char@@ ss@@ [100][100]; int@@ cmp@@ (constvoid*a,constvoid*@@ b) {@@ return(@@ *(int*)@@ b@@ -*@@ (int*)@@ a@@ );} intmain() { scanf("%d",&n); for(i=0;i<n;i++) scanf("%s%d",@@ ss@@ [i],&@@ s[i]); for(j=0;j<n;j++) { m=0; for(i=0;i<n;i++) {@@ m=m@@ >@@ s[i]@@ ?@@ m@@ :@@ s[i]@@ ;} if(m@@ <60@@ ){@@ break;} for(i=0;i<n;i++) { if(s[i]==@@ m) {@@ printf("%s\n",@@ ss@@ [i]); s[i]@@ =-@@ 1@@ ;} } } for(i=0;i<n;i++) {@@ if(s@@ [i]@@ !=-1) {@@ printf("%s\n",@@ ss@@ [i]);} } }  
c -1
h -1
intmain() { intyear,@@ mon@@ ,@@ g,@@ i,@@ e=0,@@ day; int@@ montha@@ [13]={0,31,28,31,30,31,30,31,31,30,31,30,31}; int@@ monthb@@ [@@ 13]={0,31,@@ 29,31,30,31,30,31,31,30,31,30,31}; scanf("%d%d%d",&year,&@@ mon@@ ,&@@ g@@ ); for(i=0;i<@@ mon@@ ;i++) { if(year%@@ 4==0) { if(year%@@ 100==0&&@@ year%@@ 400@@ !=0) { e=@@ e+@@ montha@@ [i]; day=@@ e+@@ g; } else { e=@@ e+@@ monthb@@ [i]; day=@@ e+@@ g; } } if(year%@@ 4@@ !=0) { e=@@ e+@@ montha@@ [i]; day=@@ e+@@ g; } } printf("%d",@@ day); return0; }  
c -1
h -1
0

intmain(intargc,char*argv[]) { intN@@ ; inta[@@ 26]={0}; structbook{ intx; char@@ y@@ [27]; }@@ A@@ [1000]; scanf("%d",&N); inti,j; for(i=0;i<N;i++) { scanf("%d%s",&@@ A@@ [i].@@ x,@@ A@@ [i].@@ y); for(j=0;@@ A@@ [i].y@@ [j]!='\0';j++) { if(A@@ [i].y@@ [j]=='@@ A'@@ ) { a[0]@@ ++; } elseif(A@@ [i].y@@ [j]=='@@ B@@ ') { a[1@@ ]++; } elseif(A@@ [i].y@@ [j]=='@@ C') { a[2@@ ]++; } elseif(A@@ [i].y@@ [j]=='@@ D@@ ') { a[@@ 3@@ ]++; } elseif(A@@ [i].y@@ [j]=='@@ E@@ ') { a[@@ 4@@ ]++; } elseif(A@@ [i].y@@ [j]=='@@ F@@ ') { a[@@ 5@@ ]++; } elseif(A@@ [i].y@@ [j]=='@@ G') { a[@@ 6@@ ]++; } elseif(A@@ [i].y@@ [j]=='@@ H@@ ') { a[@@ 7@@ ]++; } elseif(A@@ [i].y@@ [j]=='@@ I@@ ') { a[@@ 8@@ ]++; }elseif(@@ A@@ [i].y@@ [j]=='@@ J@@ ') { a[@@ 9@@ ]++; } elseif(A@@ [i].y@@ [j]=='@@ K@@ ') { a[@@ 10@@ ]++; } elseif(A@@ [i].y@@ [j]=='@@ L@@ ') { a[@@ 11@@ ]++; } elseif(A@@ [i].y@@ [j]=='@@ M@@ ') { a[@@ 12@@ ]++; } elseif(A@@ [i].y@@ [j]=='@@ N@@ ') { a[@@ 13@@ ]++; } elseif(A@@ [i].y@@ [j]=='@@ O@@ ') { a[@@ 14@@ ]++; } elseif(A@@ [i].y@@ [j]=='@@ P@@ ') { a[@@ 15@@ ]++; } elseif(A@@ [i].y@@ [j]=='@@ Q@@ ') { a[@@ 16@@ ]++; } elseif(A@@ [i].y@@ [j]=='@@ R@@ ') { a[@@ 17@@ ]++; } elseif(A@@ [i].y@@ [j]=='@@ S@@ ') { a[@@ 18@@ ]++; } elseif(A@@ [i].y@@ [j]=='@@ T@@ ') { a[@@ 19@@ ]++; } elseif(A@@ [i].y@@ [j]=='@@ U@@ ') { a[@@ 20@@ ]++; } elseif(A@@ [i].y@@ [j]=='@@ V@@ ') { a[@@ 21@@ ]++; } elseif(A@@ [i].y@@ [j]=='@@ W@@ ') { a[@@ 22@@ ]++; } elseif(A@@ [i].y@@ [j]=='@@ X@@ ') { a[@@ 23@@ ]++; } elseif(A@@ [i].y@@ [j]=='@@ Y@@ ') { a[@@ 24@@ ]++; } elseif(A@@ [i].y@@ [j]=='@@ Z@@ ') { a[@@ 25@@ ]++; } } } intp; int@@ max; p=0; max=@@ a[0]; for(i=0;i<26;i++) { if(a[i]>max) { p=i; max=a[i]; } } char@@ d; d@@ =(@@ 'A'+@@ p); printf("%c\n%d\n",@@ d,@@ max); for(i=0;i<N;i++) { for(j=0;@@ A@@ [i].y@@ [j]!='\0';j++) { if(A@@ [i].y@@ [j]==@@ (p@@ +'@@ A')@@ ) printf("%d\n",@@ A@@ [i].@@ x); } } return0; }  
c -1
h -1
voidread@@ (inta[],intb[@@ ]); voidsort@@ (inta[],intb[@@ ]); void@@ link@@ (inta[],intb[@@ ]); voidoutput@@ (inta[@@ ]); int@@ input1@@ [100],@@ input2@@ [100],@@ n1,n2; intmain() { read@@ (@@ input1@@ ,@@ input2@@ ); sort(@@ input1@@ ,@@ input2@@ ); link@@ (@@ input1@@ ,@@ input2@@ ); output@@ (@@ input1@@ ); return0; } voidread@@ (inta[],intb[]) { inti; cin>>@@ n1@@ >>@@ n2; for(i=0;i<n1;i++) cin>>a[i]; for(i=0;i<n2;i++) cin>>b[i]; } voidsort@@ (inta[],intb[]) { inti,j,temp; for(i=0;i<n1@@ -1;i++) for(j=i+1;j<@@ n1@@ ;j++) if(a[j]@@ <@@ a[i]) { temp=a[j]; a[j]=@@ a[i]; a[i]=@@ temp; } for(i=0;i<n2@@ -1;i++) for(j=i+1;j<@@ n2@@ ;j++) if(b[j]@@ <@@ b[i]) { temp=@@ b[j]; b[j]=@@ b[i]; b[i]=@@ temp; } } void@@ link@@ (inta[],intb[]) { inti; for(i=0;i<n2;i++) a[@@ n1@@ +i]=b[i]; } voidoutput@@ (inta[@@ ]) { inti; for(i=0;i<n1@@ +@@ n2@@ -1;i++) cout<<a[i]<<""; cout<<a[@@ n1+n2@@ -1]; }  
c -1
h -1
0

intmain(){ intk,@@ jz@@ [100][100],@@ ROW@@ ,@@ COL@@ ,@@ h@@ [100],@@ y,@@ i,@@ row,col; scanf("%d",&k); for(i=0;i<k;i++){ scanf("%d%d",&@@ ROW@@ ,&@@ COL@@ ); for(row=0;row@@ <ROW@@ ;@@ row++){ for(col=0;col@@ <@@ COL@@ ;col@@ ++){ scanf("%d",&@@ jz@@ [@@ row][col@@ ]); }} y=0; for(row=0;row@@ <ROW@@ ;@@ row++){ y@@ +=@@ jz@@ [@@ row@@ ][0]; } for(row=0;row@@ <ROW@@ ;@@ row++){ y@@ +=@@ jz@@ [@@ row@@ ][@@ COL@@ -1]; } for(col=0;col@@ <@@ COL@@ ;col@@ ++){ y@@ +=@@ jz@@ [0][@@ col@@ ]; } for(col=0;col@@ <@@ COL@@ ;col@@ ++){ y@@ +=@@ jz@@ [@@ ROW@@ -1@@ ][col@@ ]; } h@@ [i]=@@ y@@ -@@ jz@@ [0][@@ 0]-@@ jz@@ [0][@@ COL@@ -1]@@ -@@ jz@@ [@@ ROW@@ -1@@ ][0]-@@ jz@@ [@@ ROW@@ -1@@ ][@@ COL@@ -1]; } for(i=0;i<k;i++){ printf("%d\n",@@ h[i]); }@@ return0; }  
c -1
h -1
intmain() { intn; scanf("%d\n",&n); inta[20000]; inti,j; for(i=0;i<=n-1;i++) scanf("%d",&a[i]); printf("%d",a[0]); for(i=1;i<=n-1;i++) { intk; k=0; for(j=1;j<=@@ i-1;j++) { if(a[i]!=@@ a[j]) k=k@@ +@@ 0@@ ; else k=k+1; } if(k@@ ==0&&@@ a[i]@@ !=@@ a[0]) printf("%d",a[i]); } return0; }  
c -1
h -1
0

intmain(){ int@@ p,@@ a,b,@@ i,j@@ ,*@@ num; num=@@ (int*)malloc(sizeof(int)@@ *@@ 10000@@ ); scanf("%d%d",&a,&b); for(i=1;i<=@@ a;i++){ for(j=1;j<=@@ b;j++) scanf("%d",@@ num@@ +@@ (i@@ -1)*@@ b@@ +j); } for(i=1;i<@@ b@@ ;i++){ p=i; for(;@@ ;@@ ){ printf("%d\n",*(@@ num@@ +p@@ )); if(p@@ %@@ b@@ ==1||@@ p@@ >b@@ *(a@@ -1)@@ )break; p@@ +=@@ b@@ -1; } } for(i=b@@ ;i<=@@ a*@@ b@@ ;i@@ +=@@ b){ p=i; for(;@@ ;@@ ){ printf("%d\n",*(@@ num@@ +p@@ )); if(p@@ %@@ b@@ ==1||@@ b@@ ==1||@@ p@@ >b@@ *(a@@ -1)@@ )break; p@@ +=@@ b@@ -1; } } }  
c -1
h -1
intmain(){ structstu@@ { int@@ xh@@ ; int@@ yw@@ ; int@@ sx; int@@ zf@@ ; }@@ data@@ [100000]; intn,i,@@ max,@@ x@@ ,j; scanf("%d",&n); for(i=0;i<n;i++){ scanf("%d%d%d",&@@ data@@ [i].@@ xh@@ ,&@@ data@@ [i].@@ yw@@ ,&@@ data@@ [i].@@ sx@@ ); data@@ [i].@@ zf@@ =@@ data@@ [i].@@ yw@@ +@@ data@@ [i].@@ sx; } for(i=0;i<@@ 3;i++){ max=@@ data@@ [0].@@ zf@@ ; x=0; for(j=1;j<@@ n;j++){ if(@@ data@@ [j].@@ zf@@ >max){ max=@@ data@@ [j].@@ zf@@ ; x@@ =j; } } printf("%d%d\n",@@ data@@ [x@@ ].@@ xh@@ ,@@ data@@ [x@@ ].@@ zf@@ ); data@@ [x@@ ].@@ zf@@ =0; } }  
c -1
h -1
0

intmain() { charstr@@ [500],@@ sub@@ [500],@@ rep@@ [500]; inti,j,@@ shou@@ ,@@ mo@@ ,@@ k; scanf("%s%s%s",@@ str,@@ sub,@@ rep); int@@ len1=strlen(@@ str); int@@ len2=strlen(@@ sub); int@@ len3@@ =strlen(@@ rep); for(i=0;i<=@@ len1@@ -len2@@ ;i++) { for(j=0;j<len2@@ ;j++) { if(str@@ [i+j]!=@@ sub@@ [j]) { break; } } if(j==@@ len2) { shou@@ =i; mo@@ =i@@ +j@@ ; break; } } if(j!=@@ len2) {@@ printf("%s",@@ str@@ );} else{ if(@@ len2@@ >=@@ len3@@ ) { for(i=@@ shou@@ ,j@@ =0;@@ rep@@ [j]@@ !=0@@ ;i++,j++) { str[i]=@@ rep@@ [j]; } for(k=@@ mo@@ ;@@ str@@ [k]@@ !=0@@ ;k++@@ ,i@@ ++){ str[i]=@@ str@@ [k]@@ ;} str@@ [i]=0; } else { i=@@ len1@@ +@@ len3@@ -len2@@ ; for(k=@@ len1@@ ;k@@ >=@@ mo@@ ;k@@ --@@ ,i@@ --) { str[i]=@@ str@@ [k]; } for(k=@@ shou@@ ,j@@ =0;@@ rep@@ [j]@@ !=0@@ ;k++@@ ,j@@ ++) { str@@ [k]=@@ rep@@ [j]; } } printf("%s",@@ str@@ );} return0; }  
c -1
h -1
intmain(intargc,char*argv[]) { inta,b,c,@@ s=0; scanf("%d%d%d",&a,&b,&c); int@@ m1=@@ 31@@ , m2=@@ 28@@ , m21@@ =@@ 29@@ , m3=@@ 31@@ , m4@@ =@@ 30@@ , m5@@ =@@ 31@@ , m6@@ =@@ 30@@ , m7@@ =@@ 31@@ , m8@@ =@@ 31@@ , m9@@ =@@ 30@@ , m10@@ =@@ 31@@ , m11@@ =@@ 30@@ , m12@@ =@@ 31; if(a%@@ 4!=0@@ ||(@@ a%@@ 100==0&&@@ a%@@ 400!=0)) {@@ switch(@@ b) {@@ case(@@ 1@@ ): s=@@ c; printf("%d\n",s);break; case(@@ 2)@@ : s@@ =31+c; printf("%d\n",s);break; case(@@ 3@@ ): s@@ =31+28@@ +c; printf("%d\n",s);break; case(@@ 4)@@ : s=@@ m1@@ +@@ m2@@ +@@ m3@@ +c; printf("%d\n",s);break; case(@@ 5@@ ): s=@@ m1@@ +@@ m2@@ +@@ m3@@ +@@ m4@@ +c; printf("%d\n",s);break; case(@@ 6@@ ): s=@@ m1@@ +@@ m2@@ +@@ m3@@ +@@ m4@@ +@@ m5@@ +c; printf("%d\n",s);break; case(@@ 7@@ ): s=@@ m1@@ +@@ m2@@ +@@ m3@@ +@@ m4@@ +@@ m5@@ +@@ m6@@ +c; printf("%d\n",s);break; case(@@ 8@@ ): s=@@ m1@@ +@@ m2@@ +@@ m3@@ +@@ m4@@ +@@ m5@@ +@@ m6@@ +@@ m7@@ +c; printf("%d\n",s);break; case(@@ 9@@ ): s=@@ m1@@ +@@ m2@@ +@@ m3@@ +@@ m4@@ +@@ m5@@ +@@ m6@@ +@@ m7@@ +@@ m8@@ +c; printf("%d\n",s);break; case(@@ 10@@ ): s=@@ m1@@ +@@ m2@@ +@@ m3@@ +@@ m4@@ +@@ m5@@ +@@ m6@@ +@@ m7@@ +@@ m8@@ +@@ m9@@ +c; printf("%d\n",s);break; case(@@ 11@@ ): s=@@ m1@@ +@@ m2@@ +@@ m3@@ +@@ m4@@ +@@ m5@@ +@@ m6@@ +@@ m7@@ +@@ m8@@ +@@ m9@@ +@@ m10@@ +c; printf("%d\n",s);break; case(@@ 12@@ ): s=@@ m1@@ +@@ m2@@ +@@ m3@@ +@@ m4@@ +@@ m5@@ +@@ m6@@ +@@ m7@@ +@@ m8@@ +@@ m9@@ +@@ m10@@ +@@ m11@@ +c; printf("%d\n",s);break; }} else { switch(@@ b) {@@ case(@@ 1@@ ): s=@@ c; printf("%d\n",s);break; case(@@ 2)@@ : s@@ =31+c; printf("%d\n",s);break; case(@@ 3@@ ): s@@ =31+29@@ +c; printf("%d\n",s);break; case(@@ 4)@@ : s=@@ m1@@ +@@ m21@@ +@@ m3@@ +c; printf("%d\n",s);break; case(@@ 5@@ ): s=@@ m1@@ +@@ m21@@ +@@ m3@@ +@@ m4@@ +c; printf("%d\n",s);break; case(@@ 6@@ ): s=@@ m1@@ +@@ m21@@ +@@ m3@@ +@@ m4@@ +@@ m5@@ +c; printf("%d\n",s);break; case(@@ 7@@ ): s=@@ m1@@ +@@ m21@@ +@@ m3@@ +@@ m4@@ +@@ m5@@ +@@ m6@@ +c; printf("%d\n",s);break; case(@@ 8@@ ): s=@@ m1@@ +@@ m21@@ +@@ m3@@ +@@ m4@@ +@@ m5@@ +@@ m6@@ +@@ m7@@ +c; printf("%d\n",s);break; case(@@ 9@@ ): s=@@ m1@@ +@@ m21@@ +@@ m3@@ +@@ m4@@ +@@ m5@@ +@@ m6@@ +@@ m7@@ +@@ m8@@ +c; printf("%d\n",s);break; case(@@ 10@@ ): s=@@ m1@@ +@@ m21@@ +@@ m3@@ +@@ m4@@ +@@ m5@@ +@@ m6@@ +@@ m7@@ +@@ m8@@ +@@ m9@@ +c; printf("%d\n",s);break; case(@@ 11@@ ): s=@@ m1@@ +@@ m21@@ +@@ m3@@ +@@ m4@@ +@@ m5@@ +@@ m6@@ +@@ m7@@ +@@ m8@@ +@@ m9@@ +@@ m10@@ +c; printf("%d\n",s);break; case(@@ 12@@ ): s=@@ m1@@ +@@ m21@@ +@@ m3@@ +@@ m4@@ +@@ m5@@ +@@ m6@@ +@@ m7@@ +@@ m8@@ +@@ m9@@ +@@ m10@@ +@@ m11@@ +c; printf("%d\n",s);break; }} return0; }  
c -1
h -1
0

voidmain() { inta[100@@ ],@@ i,@@ l,@@ c[@@ 26]={0},@@ k,@@ max,@@ n,@@ j; char@@ b[100@@ ][@@ 26],@@ d@@ [26@@ ]={'A','B','C','D','E','F','G','H','I','J','K','L','M','N','O','P','@@ Q','R','S','T','U','V','W','X','Y','@@ Z'}; scanf("%d",&n); for(i=0;i<n;i++) scanf("%d%s",&a[i],@@ b[i]); for(i=0;i<n;i++) { l=strlen(@@ b[i]); for(j=0;j<l;j++) { if(b[i][j]=='@@ A'@@ ) c@@ [0]@@ ++; elseif(b[i]@@ [j]=='@@ B@@ ') c[@@ 1@@ ]++; elseif(b[i]@@ [j]=='@@ C') c[@@ 2@@ ]++; elseif(b[i]@@ [j]=='@@ D@@ ') c[@@ 3@@ ]++; elseif(b[i]@@ [j]=='@@ E@@ ') c[@@ 4@@ ]++; elseif(b[i]@@ [j]=='@@ F@@ ') c[@@ 5@@ ]++; elseif(b[i]@@ [j]=='@@ G') c[@@ 6@@ ]++; elseif(b[i]@@ [j]=='@@ H@@ ') c[@@ 7@@ ]++; elseif(b[i]@@ [j]=='@@ I@@ ') c[@@ 8@@ ]++; elseif(b[i]@@ [j]=='@@ J@@ ') c[@@ 9@@ ]++; elseif(b[i]@@ [j]=='@@ K@@ ') c[@@ 10@@ ]++; elseif(b[i]@@ [j]=='@@ L@@ ') c[@@ 11@@ ]++; elseif(b[i]@@ [j]=='@@ M@@ ') c[@@ 12@@ ]++; elseif(b[i]@@ [j]=='@@ N@@ ') c[@@ 13@@ ]++; elseif(b[i]@@ [j]=='@@ O@@ ') c[@@ 14@@ ]++; elseif(b[i]@@ [j]=='@@ P@@ ') c[@@ 15@@ ]++; elseif(b[i]@@ [j]=='@@ Q@@ ') c[@@ 16@@ ]++; elseif(b[i]@@ [j]=='@@ R@@ ') c[@@ 17@@ ]++; elseif(b[i]@@ [j]=='@@ S@@ ') c[@@ 18@@ ]++; elseif(b[i]@@ [j]=='@@ T@@ ') c[@@ 19@@ ]++; elseif(b[i]@@ [j]=='@@ U@@ ') c[@@ 20@@ ]++; elseif(b[i]@@ [j]=='@@ V@@ ') c[@@ 21@@ ]++; elseif(b[i]@@ [j]=='@@ W@@ ') c[@@ 22@@ ]++; elseif(b[i]@@ [j]=='@@ X@@ ') c[@@ 23@@ ]++; elseif(b[i]@@ [j]=='@@ Y@@ ') c[@@ 24@@ ]++; elseif(b[i]@@ [j]=='@@ Z@@ ') c[@@ 25@@ ]++; } } max=@@ c[@@ 0]; for(i=0;i<26;i++) if(c@@ [i]>=@@ max) { max=@@ c[i]; k=i; } printf("%c\n",@@ d@@ [k]); printf("%d\n",c@@ [k]); for(i=0;i<n;i++) { l=strlen(@@ b[i]); for(j=0;j<l;j++) { if(b[i]@@ [j]==@@ d@@ [k]) printf("%d\n",a[i]); } } }  
c -1
h -1
intmain(){ inti,j,@@ row,col,@@ r,@@ c,@@ num,@@ ro@@ ,@@ co@@ ; inta[100][100]; scanf("%d%d",&row,&col); for(i=1;i<=@@ row;i++){ for(j=1;j<=@@ col@@ ;j++){ scanf("%d",&a[i][j]); } } r@@ =1; c=1; while(1){ ro@@ =@@ r; co@@ =@@ c; while(1){ printf("%d\n",a[@@ ro@@ ][@@ co@@ ]); ro@@ ++; co@@ --; if(@@ ro@@ >@@ row@@ ||@@ co@@ <=@@ 0@@ ){ break; } } if(c==@@ col@@ &&@@ r@@ ==@@ row@@ ){ break; } if(c@@ <col@@ ){ c++; } else{ r++; } } return0; }  
c -1
h -1
0

intmain() { inta[@@ 101][101]; intk,m,n,@@ sum,@@ i,j,@@ l; cin>>k; for(i=0;i<k;i++) {@@ sum=0; cin>>m>>n; for(j=0;j<m;j++) for(l=0;l<n;l++) {@@ cin>>@@ *(*(a@@ +j)+@@ l); if((@@ j@@ ==0)||(@@ l@@ ==0)||(@@ j==@@ (m@@ -1)@@ )||(@@ l@@ ==@@ (@@ n-1)@@ )) sum+=*(*(a@@ +j)+@@ l); } cout<<sum<<endl; } return0; }  
c -1
h -1
intmain() {@@ intk,i,j,@@ l=0,@@ excit@@ =0; scanf("%d",&k); intnum@@ [k],@@ shulie@@ [k]; for(i=1;i<=k;i++) {scanf("%d",&@@ num@@ [i@@ -1]); for(j=0;j<=@@ i@@ -2@@ ;j++) if(num@@ [j]==@@ num@@ [i-1@@ ]) { excit@@ =1; break; } if(@@ excit@@ ==0) {@@ shulie@@ [l@@ ]=@@ num@@ [i-1]; l=l@@ +1; } else@@ excit@@ =0; } printf("%d",@@ shulie@@ [0]); for(i=2;i<=@@ l@@ ;i++) printf("%d",@@ shulie@@ [i@@ -1]); }  
c -1
h -1
0

void@@ readin@@ (int@@ ma@@ ,int@@ mb@@ ,@@ inta[@@ ],intb[@@ ]) { for(inti=0;i<@@ ma@@ ;i++)@@ cin>>a[i]; for(inti=0;i<@@ mb@@ ;i++)@@ cin>>b[i]; } void@@ rearange@@ (int@@ ma@@ ,int@@ mb@@ ,@@ inta[100@@ ],int@@ b[100@@ ]) { inttemp; for(inti=0;i<@@ ma@@ ;i++) for(intj=0;j<@@ ma@@ -1;j++) if(a[j]>a[j+1]) { inttemp; temp=a[j]; a[j]=a[j+1]; a[j+1]=temp; } for(inti=0;i<@@ mb@@ ;i++) for(intj=0;j<@@ mb@@ -1;j++) if(b[j]>b[j+1]) { int@@ temp=@@ b[j]; b[j]=b[j+1]; b[j+1]=@@ temp; } } int@@ printout@@ (int@@ ma@@ ,int@@ mb@@ ,@@ inta[@@ ],intb[@@ ]) { for(inti=0;i<@@ ma@@ ;i++)@@ cout<<a[i]@@ <<''; for(inti=0;i<@@ mb@@ -1;i++)@@ cout<<b[i]@@ <<''; cout<<b[@@ mb@@ -1]; } intmain() { int@@ ma@@ [1@@ ],@@ mb@@ [1@@ ],@@ a[100@@ ]={0},@@ b[100@@ ]={0},@@ c@@ [100]={0}; readin@@ (@@ 1,1,@@ ma@@ ,@@ mb@@ ); readin@@ (@@ ma@@ [0],@@ mb@@ [0],@@ a,b); rearange@@ (@@ ma@@ [0],@@ mb@@ [0],@@ a,b); printout@@ (@@ ma@@ [0],@@ mb@@ [0],@@ a,b); return0; }  
c -1
h -1
intmain() { int@@ SZ@@ [100][100]; intn,@@ m1,@@ n1,@@ m2@@ ,@@ n2,@@ mj@@ ; scanf("%d",&n); for(inti=0;i<n;i++) { for(intj=0;j<n;j++) { scanf("%d",&@@ SZ@@ [i][j]); } } for(intp@@ =0;p@@ <n;p++) { for(int@@ q@@ =0;q@@ <n;@@ q++) { if(@@ SZ@@ [p@@ ][q@@ ]==0) { n1@@ =p; m1=@@ q; goto@@ sen1@@ ; } } } sen1@@ :@@ for(int@@ x=@@ n-1;@@ x@@ >=0@@ ;x@@ --) { for(int@@ y=@@ n-1;@@ y@@ >=0;@@ y@@ --) { if(@@ SZ@@ [x@@ ][y@@ ]==0) { n2@@ =@@ x; m2=@@ y; goto@@ sen2@@ ; } } } sen2@@ :@@ mj@@ =(@@ m2@@ -@@ m1@@ -1)*(@@ n2@@ -@@ n1@@ -1); printf("%d",@@ mj@@ ); return0; }  
c -1
h -1
0

intmain() { char@@ first@@ [@@ 1024@@ ]; char@@ second@@ [@@ 1024@@ ]; float@@ rate@@ =0@@ .@@ 0f@@ ; scanf("%f",&@@ rate@@ ); scanf("%s",@@ first@@ ); scanf("%s",@@ second@@ ); int@@ n1@@ =strlen(@@ first@@ ); int@@ n2@@ =strlen(@@ second@@ ); if(@@ n1@@ !=@@ n2) { printf("error"); return0; } for(inti=0;i<@@ n1@@ ;++i) { if(@@ first@@ [i]!='@@ A'@@ && first@@ [i]!='T@@ '@@ && first@@ [i]!='@@ C@@ '@@ && first@@ [i]!='G@@ '@@ && second@@ [i]!='@@ A'@@ && second@@ [i]!='T@@ '@@ && second@@ [i]!='@@ C@@ '@@ && second@@ [i]!='G') { printf("error"); return0; } } int@@ same@@ =0; for(inti=0;i<@@ n1@@ ;++i) { if(@@ first@@ [i]==@@ second@@ [i]) same@@ ++; } float@@ actual@@ =(@@ float)@@ same@@ /@@ (@@ float)@@ n1@@ ; if(@@ actual@@ >=@@ rate@@ ) printf("yes"); else printf("no"); return0; }  
c -1
h -1
intmain() { intk,m,n,i,j,@@ p=0,@@ num@@ [100][100],@@ sum=0; cin>>k; while(p@@ <@@ k) { cin>>m>>n; for(i=0;i<m;i++) for(j=0;j<n;j++) { cin>>@@ num[i]@@ [j]; } for(j=0;j<n;j++) sum+=@@ num@@ [0]@@ [j]; for(i=1;i<m-1;i++) { sum+=@@ num[i]@@ [0]; sum+=@@ num[i]@@ [n-1]; } for(j=0;j<n;j++) sum+=@@ num[m@@ -1][j]; cout<<sum<<endl; sum=0; p++; } return0; }  
c -1
h -1
0

int@@ divide@@ (intn,int@@ a){ int@@ s=0,@@ t=0,@@ i; if(n@@ ==1)@@ return1; for(i=a@@ ;i@@ >1@@ ;i--) if(n@@ %i==0){ s+=@@ divide@@ (n/i,i); t++; } if(t@@ ==0)@@ return0; return@@ s; } intmain(){ intn,k; cin>>k; while(k@@ >0){ cin>>n; cout<<@@ divide@@ (n,@@ n@@ )<<endl; k--; } return0; }  
c -1
h -1
intmain() { intn,i,j,@@ age@@ [100],@@ e; charid@@ [100][10],@@ ex@@ [10]; scanf("%d",&n); for(i=0;i<n;i++){ scanf("%s%d",@@ id[i],&@@ age[i]); } for(i=n-1@@ ;i>0@@ ;i--){ for(j=0;j<i;j++){ if((@@ age@@ [j]<@@ age@@ [j+1]@@ &&@@ age@@ [j]@@ >=60@@ )||(@@ age@@ [j]<@@ age@@ [j+1]@@ &&@@ age@@ [j+1]@@ >=60@@ )){ e=@@ age@@ [j]; age@@ [j]=@@ age@@ [j+1]; age@@ [j+1]=@@ e; strcpy(@@ ex@@ ,@@ id@@ [j]); strcpy(id@@ [j],@@ id@@ [j+1]); strcpy(id@@ [j+1],@@ ex@@ ); } } } for(i=0;i<n;i++){ printf("%s\n",@@ id[i]); } return0; }  
c -1
h -1
0

intmain() { intn,m,@@ q; inta[100][100]; intsum=0; int(*p)@@ [100@@ ]=a; cin>>@@ q; for(inti=0;i<@@ q@@ ;i++) { sum=0; cin>>m>>n; for(intj=0;j<m;j++) for(intk=0;k<@@ n;k++) cin>>a[j]@@ [k]; for(intj=0;j<m;j++) for(intk=0;k<@@ n;k++) { if(j@@ ==0||j==@@ m-1)@@ sum+=@@ p@@ [j]@@ [k]; else { if(k@@ ==0||@@ k==@@ n-1)@@ sum+=@@ p@@ [j]@@ [k]; } } cout<<sum<<endl; } return0; }  
c -1
h -1
int@@ missle@@ [25]; intn; int@@ Intercept@@ (inti,int@@ j){ intk,@@ max@@ =1,@@ sum=1; for(k@@ =i+1@@ ;k<@@ j@@ ;k++){ if(@@ missle@@ [k]@@ <=@@ missle@@ [i]@@ &&@@ missle@@ [k]@@ >=@@ missle@@ [j]) sum=@@ Intercept@@ (@@ k,@@ j)@@ +1; elsecontinue; if(sum@@ >max)max=@@ sum; sum=1; } return@@ max; } voidmain() { inti,j,@@ max@@ =1,@@ sum=0; scanf("%d",&n); for(i=0;i<n;i++) scanf("%d",&@@ missle@@ [i]); for(i=0;i<n;i++){ for(j=i+1;j<n;j++){ if(@@ missle@@ [j]<=@@ missle@@ [i]){ sum=@@ Intercept@@ (@@ i,j@@ )@@ +1; } elsecontinue; if(sum@@ >max)max=@@ sum; sum=0; } } printf("%d\n",max); }  
c -1
h -1
0

intmain() { charstr@@ [256@@ *2@@ ],@@ sub@@ [300],@@ replacement@@ [300],@@ tmp@@ [300]; inti,j,@@ result@@ =-1,@@ k; gets(str); gets(sub); gets(@@ replacement); for(i=0;i<=@@ (int)@@ (@@ strlen(@@ str@@ )@@ -strlen(@@ sub@@ ))@@ ;i++) { if(str[i]==@@ sub@@ [0]) { for(j=0;j<@@ (int)@@ strlen(@@ sub@@ );j++) { if(str@@ [i+j]==@@ sub@@ [j]) { result@@ =i; } else { result@@ =-1; break; } } } if(result@@ !=-1) break; } k=@@ (int)@@ strlen(@@ replacement); if(result@@ !=-1) { strcpy(@@ tmp@@ ,@@ (@@ str@@ +i@@ +j)); strcpy(@@ (@@ str@@ +i)@@ ,@@ replacement); strcpy(@@ (@@ str@@ +i@@ +k@@ ),@@ tmp@@ ); printf("%s",str); } else@@ printf("%s",str); return0; }  
c -1
h -1
structstudent { charc[@@ 20]; intnum; structstudent*next; }; structstudent*creat@@ (intn) { inti,@@ r; structstudent@@ *p,*@@ p1,*p2,*@@ p3@@ ,*@@ p4@@ ; p1@@ =(structstudent*)malloc(sizeof(structstudent)); scanf("%s%d",p1->@@ c@@ ,&p1->@@ num); p1->next=NULL; p=@@ p1; r=0; p2=p1; for(i=0;i<n-1;i++) { p4@@ =(structstudent*)malloc(sizeof(structstudent)); scanf("%s%d",@@ p4@@ ->@@ c@@ ,&@@ p4@@ ->@@ num); if(@@ p4@@ ->@@ num@@ >=60) { for(@@ p2=@@ p,@@ p3=@@ p,@@ r=0;@@ p2@@ !=NULL;@@ ) { if(@@ p4@@ ->@@ num@@ >@@ p2->@@ num) { if(@@ p2@@ ==@@ p3@@ ) { p=@@ p4@@ ; p4@@ ->next=@@ p2; } else { p3@@ ->next=@@ p4@@ ; p4@@ ->next=@@ p2; } r@@ =1; break; } if(@@ p4@@ ->@@ num@@ <=@@ p2->@@ num) { p3@@ =p2; p2=p2->next; } } if(r@@ ==0) { p3@@ ->next=@@ p4@@ ; p4@@ ->next=NULL; } } else { p2=@@ p; while(@@ p2@@ !=NULL) { p3@@ =p2; p2=p2->next; } p3@@ ->next=@@ p4@@ ; p4@@ ->next=NULL; } } return@@ p; } voidprint@@ (@@ structstudent@@ *p@@ ) { structstudent*@@ p1; p1=@@ p; while(p1!=NULL) { printf("%s\n",@@ p1->@@ c); p1=p1->next; } } voidmain() { structstudent@@ *p,*@@ p1; intn; scanf("%d\n",&n); p=@@ creat@@ (n); print@@ (p); }  
c -1
h -1
0

intmain() { int*@@ input@@ (int@@ n)@@ ,*@@ a,*@@ b@@ ,*@@ c,@@ n1,n2; voidpaixu@@ (int*@@ a,int@@ n@@ ),@@ display@@ (int*@@ c@@ ,int@@ n); int*@@ hebing@@ (int*a,@@ int*@@ b,int@@ n1,int@@ n2); scanf("%d%d",&n1,&n2); a=@@ input@@ (@@ n1); b=@@ input@@ (@@ n2); printf("\n"); paixu@@ (a,@@ n1); paixu@@ (b,@@ n2); c=@@ hebing@@ (a,b,@@ n1,n2@@ ); display@@ (c,@@ n1+@@ n2); return0; } int*@@ input@@ (intn) { int@@ *p@@ ,i; p=@@ (int*)malloc(n*sizeof(int)); for(i=0;i<n;i++) { scanf("%d",&@@ p[i]); } return(@@ p); } voidpaixu@@ (int*@@ a,int@@ n) { inti,j,t; for(i=0;i<n;i++) { for(j=i;j<@@ n;j++) { if(a[j]@@ <@@ a[i]) { t=a[j]; a[j]=@@ a[i]; a[i]=@@ t; } } } } int*@@ hebing@@ (int*a,@@ int*@@ b,int@@ n1,int@@ n2) { int@@ *p,@@ i,j; p=@@ (int*)malloc(@@ (@@ n1+n2@@ )@@ *sizeof(int)); for(i=0;i<n1;i++) { p[i]=@@ a[i]; } for(j=0;j<@@ n2@@ ;j++) { p[@@ n1@@ +j@@ ]=@@ b[j]; } return(@@ p); } void@@ display@@ (int*@@ c@@ ,intn) { inti; for(i=0;i<n;i++) { if(i@@ )@@ printf(""); printf("%d",c[i]); } }  
c -1
h -1
intmain() { inti,j,k,@@ a[@@ 16],@@ m; for(i=0;@@ a[0]@@ !=@@ -1;i++) { ints=0; cin>>a[0]; if(a[0]==-1)break; for(j=1;j<@@ 16@@ ;j++) {@@ cin>>@@ a[j]; if(a[j]@@ ==0)@@ break;} for(k=0;@@ a[k]@@ !=0@@ ;k++) { m=@@ 2*@@ a[k]; for(j=0;@@ a[j]@@ !=0;j++) { if(a[j]==@@ m) s++; } } cout<<s<<endl; } return0; }  
c -1
h -1
0

intsum=0; voidf@@ (intn,int@@ y) { int@@ a=@@ sqrt(@@ n); for(inti=@@ y@@ ;i<=a;i++) { if(n%i==0) { sum++; y@@ =i; f(@@ n@@ /i,@@ y); } } } intmain() { intn; cin>>n; for(inti=1;i<=n;i++) { intnum; cin>>num; sum=0; f(@@ num,@@ 2); cout<<sum@@ +1<<endl; } return0; }  
c -1
h -1
intmain() { chars[@@ 300],@@ s1@@ [300],@@ s2@@ [300@@ ]={'\0'}; inti,j,@@ len,@@ count=0,@@ m; gets(s); gets(@@ s1); gets(@@ s2); len@@ =strlen(s); for(i=0;i<len;i++) if(s[i]==@@ s1@@ [0]) {@@ for(j=1@@ ;@@ s1@@ [j]!='\0';j++) if(s@@ [j+i@@ ]!=@@ s1@@ [j]) break; if(j@@ >=@@ strlen(@@ s1@@ )) {m@@ =i;@@ count@@ =1;break;} } if(count@@ ) {@@ for(i=0;i<m;i++) printf("%c",s[i]); for(i=0;@@ s2@@ [i]!='\0';i++) printf("%c",@@ s2@@ [i]); for(j=i@@ +m@@ ;j<@@ len@@ ;j++) printf("%c",s@@ [j]); } else printf("%s",s); return0; }  
c -1
h -1
0

void@@ in@@ (inta[],intn) { inti; for(i=0;i<n;i++) scanf("%d",&a[i]); } void@@ bubblesort@@ (inta[],intn) { inti,j,t; for(i=0;i<n;i++) for(j=n-1;j>i;j--) if(a@@ [j-1]@@ >@@ a[j]) {t=@@ a[j]; a[j]=@@ a@@ [j-1]; a@@ [j-1]=@@ t;} } void@@ strc@@ (inta[],intb[],int@@ c[@@ ],int@@ n1,int@@ n2) { inti; for(i=0;i<n1;i++) c[i]=a[i]; for(i=@@ n1@@ ;i<@@ n1+@@ n2;i++) c[i]=b[i-@@ n1@@ ]; } voidprint@@ (intc[],int@@ n1,int@@ n2) { inti; for(i=0;i<n1@@ +@@ n2@@ -1;i++) printf("%d",c[i]); printf("%d",c[@@ n1+n2@@ -1]); } main() { inti,@@ n1,n2,@@ a[100@@ ],b[100],c[@@ 200]; scanf("%d%d",&n1,&n2); in@@ (a,@@ n1); in@@ (b,@@ n2); bubblesort@@ (a,@@ n1); bubblesort@@ (b,@@ n2); strc@@ (a,b,@@ c,@@ n1,n2@@ ); print(@@ c,@@ n1,n2@@ ); }  
c -1
h -1
intmain() { structstudent { intID; intyuwen; intshuxue; int@@ zongfen; }; structstudent@@ student[@@ 100000]; intn,i,@@ max,@@ maxID@@ ; scanf("%d",&n); for(i=1;i<=n;i++) scanf("%d%d%d",&@@ student[i].@@ ID,&@@ student[i].@@ yuwen@@ ,&@@ student[i].@@ shuxue); for(i=1;i<=n;i++) student[i].@@ zongfen@@ =@@ student[i].@@ yuwen@@ +@@ student[i].@@ shuxue; for(intj=1;j<=@@ 3;j++) { maxID@@ =1; max=@@ student@@ [1].@@ zongfen; for(i=2;i<=n;i++) if(@@ student[i].@@ zongfen@@ >max) { maxID@@ =@@ student[i].@@ ID; max=@@ student[i].@@ zongfen; } printf("%d%d\n",@@ maxID@@ ,max); student[@@ maxID@@ ].@@ zongfen@@ =0; } }  
c -1
h -1
0

main() { chara[256],b[256],c[256]; scanf("%s%s%s",a,b,c); inti,j,k,@@ nb@@ ,@@ nc@@ ,@@ count; nb@@ =0; nc@@ =0; for(i=0;@@ b[i]@@ !='\0';i++) { nb@@ ++; } for(i=0;@@ c[i]@@ !='\0';i++) { nc@@ ++; } for(i=0;@@ a[i+1@@ ]@@ !='\0';i++) { if(a[i]==@@ b[0]) { count=0; k=i; for(j=0;j<@@ nb@@ ;j++) { if(a[k@@ +j@@ ]==@@ b[j]) { count++; } else { break; } } if(count==@@ nb@@ ) { for(j=0;j<@@ nc@@ ;j++) { a[k@@ +j@@ ]=@@ c[j]; } break; } } } puts(@@ a); getchar();getchar();@@ getchar();@@ getchar(); }  
c -1
h -1
voidmain() { inti,j,n,@@ a[@@ 25],b[@@ 25],@@ max; scanf("%d",&n); for(i=0;i<n;i++) { scanf("%d",&a[i]); b[i]=1; } for(i=n-2;i>=0;i--) { for(j=i+1;j<n;j++) { if(a[i]>=@@ a[j]&&@@ b[i]@@ <@@ b[j]@@ +1) b[i]=b[j]+1; } } max=0; for(i=0;i<n;i++) max@@ =(@@ max@@ >@@ b[i]@@ )@@ ?@@ max@@ :@@ b[i]; printf("%d\n",max); }  
c -1
h -1
0

intmain() { inti,k,@@ n,@@ j,@@ a,b,@@ s@@ [100]={0},@@ f@@ [100][100]; int*p=@@ NULL@@ ; cin>>n; for(i=0;i<n;i++) { cin>>a>>@@ b; for(j=0;j<a@@ ;j++) for(k=0;k<@@ b@@ ;k++) cin>>@@ f@@ [j]@@ [k]; for(j=0;j<a@@ ;j++) { p=@@ f@@ [j]; s[i]@@ +=@@ *p; p=@@ f@@ [j]+@@ b@@ -1; s[i]@@ +=@@ *p; } for(k=1;k<@@ b@@ -1;k++) { p=@@ f@@ [0]+@@ k; s[i]@@ +=@@ *p; p=@@ f@@ [a@@ -1]@@ +@@ k; s[i]@@ +=@@ *p; } } for(i=0;i<n;i++) cout<<@@ s[i]@@ <<endl; return0; }  
c -1
h -1
int@@ Compare@@ (constvoid*@@ elem1@@ ,@@ constvoid*@@ elem2@@ ) { return@@ *(@@ (int*)@@ elem1@@ )@@ -*(@@ (int*)@@ elem2@@ ); } intmain() { intm,n; inta[100],b[100]; inti; scanf("%d%d",&m,&n); for(i=0;i<m;i++) { scanf("%d",&a[i]); } for(i=0;i<n;i++) { scanf("%d",&b[i]); } qsort@@ (a,@@ m,@@ sizeof(int),@@ Compare@@ ); qsort@@ (b,@@ n,@@ sizeof(int),@@ Compare@@ ); for(i=0;i<m;i++) { printf("%d",a[i]); } for(i=0;i<n-1;i++) { printf("%d",b[i]); } printf("%d",b[@@ n-1]); }  
c -1
h -1
0

int@@ x,y; int@@ print@@ (){ cout<<"@@ "; return0; } voidorder@@ (intn) { inti,j,@@ temp=0; inta[@@ 10]; for(i=0;i<n;i++){ cin>>a[i]; } for(i=0;i<n-1;i++){ for(j=0;j<n-1@@ -i;j++){ if(a@@ [j+1]@@ <@@ a[j]@@ ){ temp=a[j]; a[j]=a[j+1]; a[j+1]=temp; } } } for(i=0;i<n-1;i++){ cout<<a[i]<<""; } cout<<a[@@ n-1]; } intmain() { cin>>x@@ >>@@ y; order@@ (@@ x); print(); order@@ (@@ y); return0; }  
c -1
h -1
intmain(){ intyear,month,day,@@ sum=0; int@@ monthday@@ [@@ 12]={31,29,31,30,31,30,31,31,30,31,30,31}; scanf("%d%d%d",&year,&month,&day); for(inti=1;i<@@ month@@ ;i++){ sum+=@@ monthday@@ [i-1]; } sum+=@@ day; if(month@@ >2@@ &&(@@ !@@ year%4==0&&year%100!=0@@ ||@@ year%@@ 400@@ !=0@@ )){ sum@@ -=@@ 1; } printf("%d",sum); return0; }  
c -1
h -1
0

int@@ breakways@@ (int@@ num,int@@ min); intmain() { intn; cin>>n; intnumber; for(inti=1;i<=n;i++) { cin>>@@ number; cout<<@@ breakways@@ (@@ number,@@ 2)<<endl; } } int@@ breakways@@ (int@@ num,int@@ min) { intsum=0; for(intj=@@ min@@ ;j<=@@ num@@ ;j++) { if(num@@ %j==0) { if(num@@ !=@@ j) sum+=@@ breakways@@ (@@ num@@ /j,j); else sum+=@@ 1; } } returnsum; }  
c -1
h -1
voidmain() { intn,a[@@ 1000]={0},@@ c[@@ 27@@ ]={0},@@ i,j,k,@@ m,@@ p,@@ d[@@ 1000]={0}; charb[@@ 1000][@@ 30@@ ]={@@ {@@ 0@@ }@@ }; scanf("%d",&n); for(i=0;i<n;i++) { scanf("%d%s",&a[i],@@ b[i]); } for(i=0;i<n;i++) { for(j=0;j<26;j++) { for(k=1;k<=@@ 26@@ ;k++) { if(b[i]@@ [j]==@@ 64@@ +k)@@ c@@ [k]=@@ c@@ [k]@@ +1; } } } m=@@ c[@@ 1@@ ]; p=1; for(i=1;i<@@ 27@@ ;i++) { if(c@@ [i]>@@ m) { m=@@ c[i]; p=i; } } for(i=0;i<n;i++) { for(j=0;j<26;j++) { if(b[i]@@ [j]==@@ 64@@ +p@@ )@@ d@@ [i]=1; } } printf("%c\n",@@ 64@@ +@@ p); printf("%d\n",m); for(i=0;i<@@ 1000@@ ;i++) { if(d@@ [i]@@ ==1)@@ printf("%d\n",a[i]); } }  
c -1
h -1
0

intmain() { intn,k,@@ DATA@@ [N@@ ],@@ i,j; scanf("%d%d",&n,&k); for(i=0;i<n;i++){ scanf("%d",&@@ DATA@@ [i]); } for(i=0;i<n;i++){ for(j=0;j<n;j++){ if(@@ DATA@@ [i]+@@ DATA@@ [j]==k){ printf("yes"); goto@@ end@@ ; } } } for(i=0;i<n;i++){ for(j=0;j<n;j++){ if(k@@ -@@ DATA@@ [i]!=@@ DATA@@ [j]){ printf("no"); goto@@ end@@ ; } } } end@@ :@@ return0; }  
c -1
h -1
intmain(intargc,char*argv[]) { intn,m,@@ k=0,@@ i,j; int*@@ a; scanf("%d",&n); a=@@ (int*)@@ (@@ malloc(@@ n@@ *sizeof(int@@ )@@ )); for(i=0;i<n;i++) { for(j=0;j<n;j++) scanf("%d",&a[j]); for(j=0;j<n;j++) { if(a[j]@@ ==0) break; } for(m@@ =j+1@@ ;m@@ <n;m++) {if(@@ a[m@@ ]==0) {@@ k=k@@ +m@@ -j@@ -1; break;} } } printf("%d",k); return0; }  
c -1
h -1
0

intmain(){ intm=0,@@ k,@@ n,@@ i=0,j=0,@@ a[1000]; scanf("%d%d",&n,&k); for(i=0;i<n;i++){ scanf("%d",&a[i]); } i=0; for(j=0;j<n;j++){ i=0; for(i=0;i<n;i++){ if(i!=@@ j){ if((@@ a[i]+@@ a[j]@@ )==@@ k){ m=1; break; } } } } if(m@@ ==1){@@ printf("yes");} else{printf("no");} return0; }  
c -1
h -1
intmain() { intc[@@ 10000],@@ i,k,@@ a,b,@@ n,@@ s=0; int@@ *p,*@@ q; p=@@ c;@@ q=p; scanf("%d",&n); for(k=0;k<n;k++) { p=@@ c;@@ q=@@ p@@ ;@@ s=0; scanf("%d%d",&@@ b@@ ,&@@ a); for(i=0;i<@@ a*@@ b;i++) { scanf("%d",@@ &*@@ p); p++; } p=@@ q; for(i=0;i<a;i++) { s=s@@ +*@@ p; p++; } p=@@ q; for(i=0;i<b@@ -2;i++) { p=p+@@ a; s=s@@ +*@@ p; } p=@@ q@@ +@@ a@@ -1; for(i=0;i<b@@ -2;i++) { p=p+@@ a; s=s@@ +*@@ p; } if(b@@ !=1) { p=@@ q@@ +@@ a@@ *(@@ b@@ -1); for(i=0;i<a;i++) { s=s@@ +*@@ p; p=p@@ +1; } } printf("%d\n",s); } }  
c -1
h -1
0

intnum@@ (int@@ ,int@@ ,int); int@@ qufen@@ (int@@ ); int@@ power@@ (int,int); intmain() { intt; cin>>t; while(t@@ >=@@ 1) { intn,i,@@ x,@@ sum=1; cin>>n; x=@@ qufen@@ (n); for(i=2;i<=@@ x;i++) sum=sum+@@ num@@ (n,@@ i,@@ 2); cout<<sum<<endl; t@@ --; } return0; } int@@ qufen@@ (intn) { intj; for(j=1@@ ;@@ ;j++) { if(@@ power@@ (@@ 2@@ ,j@@ )>@@ n) { return@@ j@@ -1; break; } } } int@@ power@@ (inta,intb) { intsum@@ =1,@@ k; for(k=1;k<=@@ b@@ ;k++) sum=sum@@ *@@ a; returnsum; } intnum@@ (intn,int@@ g@@ ,int@@ h@@ ) { if((@@ g@@ ==1@@ )&&(@@ n@@ >=@@ h@@ )) return1; inti,j=0,@@ count=0,@@ a[@@ 20000]; for(i=@@ h@@ ;i<n;i++) { if(n%i==0) { a[j]@@ =i; j++; } } if(j@@ ==0) return0; else { for(i=0;i<j;i++) count=@@ count@@ +@@ num@@ (n@@ /@@ a[i],@@ g@@ -1,@@ a[i]); returncount; } }  
c -1
h -1
intmain() { double@@ per@@ ; double@@ SUM@@ ,@@ sum=0; int@@ len; char@@ DNA@@ [500]; char@@ dna@@ [500]; scanf("%lf",&@@ per@@ ); scanf("%s",&@@ DNA@@ ); scanf("%s",&@@ dna@@ ); SUM@@ =strlen(@@ DNA@@ ); len=strlen(@@ dna@@ ); if(@@ SUM@@ !=@@ len@@ ) { printf("error\n"); return0; } for(intj=0;j<@@ SUM@@ ;j++) { if(@@ DNA@@ [j]!='@@ A'&&@@ DNA@@ [j]!='@@ T'&&@@ DNA@@ [j]!='@@ C'&&@@ DNA@@ [j]!='@@ G') { printf("error\n"); return0; } if(@@ dna@@ [j]!='@@ A'&&@@ dna@@ [j]!='@@ T'&&@@ dna@@ [j]!='@@ C'&&@@ dna@@ [j]!='@@ G') { printf("error\n"); return0; } } for(inti=0;i<@@ SUM@@ ;i++) { if(@@ DNA@@ [i]==@@ dna@@ [i]) { sum++; } } SUM@@ =@@ sum/@@ SUM@@ ; if(@@ SUM@@ >@@ per@@ ) { printf("yes\n"); } else { printf("no\n"); } return0; }  
c -1
h -1
0

voidmain() { intx,y,@@ i,j,@@ t; inta[100],b[100]; scanf("%d%d",&@@ x,&@@ y); for(i=0;i<x;i++) scanf("%d",&a[i]); for(i=0;i<y;i++) scanf("%d",&b[i]); for(j=0;j<=@@ x@@ -1;j++) for(i=0;i<x@@ -j@@ -1;i++) if(a[i]>a[i+1]) {t=@@ a[i];@@ a[i]=a[i+1@@ ];@@ a[i+1]=@@ t;} for(j=0;j<=@@ y@@ -1;j++) for(i=0;i<@@ y@@ -j@@ -1;i++) if(b[i]>b[i+1]) {t=@@ b[i]@@ ;@@ b[i]=b@@ [i+1@@ ];@@ b[i+1]=@@ t;} for(i=0;i<x;i++) printf("%d",a[i]); for(i=0;i<@@ y@@ -1;i++) {printf("%d",@@ b[i]@@ );} printf("%d",b[@@ y@@ -1]); }  
c -1
h -1
intmain() { int@@ dp@@ [50@@ ]; intm[@@ 50]; intn; cin>>n; for(inti=0;i<n;i++) cin>>@@ m[i]; for(inti=0;i<n;i++) dp@@ [i]=1; for(inti=0;i<n;i++) { for(intj=0;j<i;j++) { if(m@@ [i]<=@@ m@@ [j]) { dp@@ [i]=@@ max(@@ dp@@ [j]@@ +1,@@ dp@@ [i]); } } } int@@ maxl@@ =0; for(inti=0;i<n;i++) if(@@ dp@@ [i]>@@ maxl@@ ) maxl@@ =@@ dp@@ [i]; cout<<@@ maxl@@ ; }  
c -1
h -1
0

intmain(){ inti; doublen,@@ a=0,b=0,@@ t=0,@@ k=0; chars[@@ 501],@@ str@@ [501]; scanf("%lf",&n); scanf("%s",s); scanf("%s",@@ str); for(i=0;s[i]@@ ;i++){ a++; } for(i=0;@@ str@@ [i]@@ ;i++){ b++; } if(a==@@ b){ for(i=0;s[i]@@ ;i++){ if((@@ s@@ [i]=='A'||@@ s@@ [i]=='G'||@@ s@@ [i]=='C'||@@ s@@ [i]=='@@ T')&&(@@ str@@ [i]=='A'||@@ str@@ [i]=='G'||@@ str@@ [i]=='C'||@@ str@@ [i]=='@@ T')@@ ){ if(s[i]==@@ str@@ [i]){ t++; } } else{ printf("error"); k=1; break; } } if(t@@ /@@ a@@ >@@ n@@ &&k@@ ==0){ printf("yes"); } elseif(@@ k@@ ==0){ printf("no"); } } else{ printf("error"); } return0; }  
c -1
h -1
intmain() { inti,n,@@ t[@@ 20000],@@ a,@@ s@@ [100]; scanf("%d",&n); for(i=0;i<@@ 100@@ ;i++){ s[i]@@ =0; } for(i=0;i<n;i++){ scanf("%d",&@@ t@@ [i]); if(s[@@ t@@ [i]@@ ]==0){ s[@@ t@@ [i]@@ ]=1; }elseif(@@ s[@@ t@@ [i]@@ ]@@ ==1){ t@@ [i]=@@ 101@@ ; } } for(i=0;i<n;i++){ if(t@@ [i]!=@@ 101@@ ){ a=i; printf("%d",@@ t@@ [i]); break; } } for(i=a@@ +1;i<@@ n;i++){ if(t@@ [i]!=@@ 101@@ ){ printf("%d",@@ t@@ [i]); } } return0; }  
c -1
h -1
0

int@@ total=0; int@@ divide@@ (int@@ k,@@ intnumber@@ ) { if(@@ number@@ ==1){@@ total@@ ++;@@ return0;} inti; for(i=k@@ ;i<=@@ number@@ ;i++) { if(@@ number@@ %i==0) divide@@ (i,@@ number@@ /i); }@@ return0; } intmain() { inti,n; cin>>n; intnum[@@ n]; for(i=0;i<n;i++) cin>>num[i]; for(i=0;i<n;i++) {@@ total=0; divide@@ (2,@@ num[i]); cout<<@@ total@@ <<endl; } cin>>n; return0; }  
c -1
h -1
intmain() { intk; intm,n,i,j,@@ l,@@ sum1@@ =0,@@ sum=0; inta[100][100]; cin>>k; for(l=1;l@@ <=k;@@ l++) { cin>>m>>n; int(*p)@@ [100]; p=a; for(i=0;i<m;i++) for(j=0;j<n;j++) { cin>>@@ *(*(p+i)+j); sum=sum+*(@@ *(p+i)+j); } for(i=1;i<m-1;i++) for(j=1;j<@@ n-1;j++) { sum1@@ =@@ sum1@@ +*(@@ *(p+i)+j); } sum=sum-@@ sum1@@ ; cout<<sum<<endl; sum=@@ sum1@@ =0; } }  
c -1
h -1
0

structpatient { charid[10]; intage; structpatient*next; }; structpatient*@@ creat@@ (intn) { structpatient@@ *head,*p1,*p2; inti; p1=(struct@@ patient@@ *)malloc(len); scanf("%s%d",@@ p1->id,&p1->age); p1->next=NULL; head=p1; p2@@ =p1@@ ;i@@ =1; do { p1=(struct@@ patient@@ *)malloc(len); scanf("%s%d",@@ p1->id,&p1->age); p1->next=NULL; i++; p2->next=p1; p2=p1; }@@ while(i<@@ n); return(head); } structpatient*@@ tiao@@ (structpatient@@ *head@@ ,intn) { structpatient*@@ p1; intt,@@ i; chars[@@ 10]; p1=head; for(i=0;i<n;i++) { p1=head; do { if(p1->age@@ <(@@ p1->next@@ )@@ ->age@@ &&(@@ p1->next@@ )@@ ->age@@ >=60) { t=@@ p1->@@ age; p1->age@@ =(@@ p1->next@@ )@@ ->@@ age; (@@ p1->next@@ )@@ ->age=@@ t; strcpy(s,@@ p1->@@ id); strcpy(@@ p1->@@ id,@@ (@@ p1->next@@ )@@ ->id); strcpy(@@ (@@ p1->next@@ )@@ ->id,@@ s); } p1=p1->next; }while(@@ p1->next@@ ); } return(head); } voidprint@@ (structpatient@@ *head) { structpatient@@ *p; p=head; do { printf("%s\n",p->id); p=p->next; }while(p@@ ); } voidmain() { structpatient*@@ head; intn; scanf("%d",&n); head=creat(n); head=@@ tiao@@ (head,@@ n); print(head); }  
c -1
h -1
intmain(intargc,char*argv[]) { ints@@ [100][@@ 15],@@ t[@@ 15]; intsum@@ [100]; inti,j,n,@@ m,@@ k; for(i=0;@@ ;i++){ for(j=0;@@ ;j++){ scanf("%d",&s@@ [i][j]); if(s@@ [i][j]==0){ t@@ [i]=@@ j; break; } elseif(s[i]@@ [0]@@ ==-1)break; } if(s@@ [i][0]@@ ==-1)break; } for(n=0;n@@ <i@@ ;n++){ sum[@@ n@@ ]=0; for(m=0;m<@@ t@@ [n@@ ]@@ -1@@ ;m++){ for(k=@@ m@@ +1@@ ;k<@@ t@@ [n@@ ]@@ ;k++){ if(s[@@ n@@ ][m@@ ]==2*@@ s[@@ n@@ ][k@@ ]@@ ||@@ s[@@ n@@ ][k@@ ]==2*@@ s[@@ n@@ ][m@@ ]){ sum[@@ n@@ ]++; } } } } for(n=0;n@@ <i@@ ;n++){ printf("%d\n",@@ sum[@@ n@@ ]); } return0; }  
c -1
h -1
0

int@@ factorization@@ (int@@ num,int@@ i); intmain() { intn,i,@@ num; cin>>n; for(i=0;i<n;i++) { cin>>num; cout<<@@ factorization@@ (num,@@ 2)<<endl; } return0; } int@@ factorization@@ (int@@ num,int@@ i) { intj,@@ squ@@ ,@@ sum=1; squ@@ =@@ sqrt(@@ (double)@@ num); for(j=i;j<=@@ squ@@ ;j++) { if(num@@ %j==0) sum=sum+@@ factorization@@ (@@ num@@ /j,j); } returnsum; };  
c -1
h -1
inttemp; int@@ flag=0; int@@ time@@ ; voidpaixu@@ (inta[@@ ],intn,int@@ time@@ ) { inti,j; for(i=0;i<n;i++) { for(j=0;j<n-1-i;j++) { if(a[j]>a[j+1]) { temp=a[j]; a[j]=a[j+1]; a[j+1]=temp; } } } for(i=0;i<n;i++) { if((@@ time@@ ==1)@@ &&i@@ ==0)@@ printf("%d",a[i]); else@@ printf("%d",a[i]); }} intmain() { inta[100],b[100]; int@@ n1,n2; scanf("%d%d",&n1,&n2); inti,j; for(i=0;i<n1;i++) scanf("%d",&a[i]); for(i=0;i<n2;i++) scanf("%d",&b[i]); paixu@@ (a,@@ n1,@@ 1); paixu@@ (b,@@ n2,@@ 2); }  
c -1
h -1
0

intmain(){ double@@ a; scanf("%lf",&a); char@@ x[@@ 1000],@@ y@@ [1000]; scanf("%s%s",@@ x,@@ y); int@@ l=strlen(@@ x@@ ),@@ k=0,@@ o@@ =strlen(@@ y); if(l@@ !=@@ o@@ ){ printf("error"); return0; } for(inti=0;i<@@ l@@ ;i++){ if(!@@ (x@@ [i]=='A'||@@ x@@ [i]=='T'||@@ x@@ [i]=='G'||@@ x@@ [i]=='@@ C')){ printf("error"); return0; } if(!@@ (y@@ [i]=='A'||@@ y@@ [i]=='T'||@@ y@@ [i]=='G'||@@ y@@ [i]=='@@ C')){ printf("error"); return0; } if(x@@ [i]==@@ y@@ [i]){ k++; } } if(1.0*@@ k/@@ l>@@ a){ printf("yes"); }else{ printf("no"); } return0; }  
c -1
h -1
intmain() { intb,@@ d=0,@@ s[@@ 15],@@ i,j; while(1) { scanf("%d",&s@@ [0]); if(s@@ [0]@@ ==-1)break; for(i=1;@@ s@@ [i-1]@@ !=0;i++) scanf("%d",&s[i]); for(i=0;s[i]@@ !=0;i++) for(j=0;@@ s[j]@@ !=0;j++) {if((@@ s@@ [i]==@@ s[j]@@ *2@@ )&&(@@ s[i]@@ !=0)&&(@@ s[j]@@ !=0)) d++; } printf("%d\n",@@ d); d=0; } return0; }  
c -1
h -1
0

intsum@@ (inta,int@@ i) { int@@ ret@@ =1; for(@@ ;i<=sqrt(@@ (@@ float)@@ a)@@ ;i++) { if(a%i==0) { ret@@ +=@@ sum@@ (a/i,i); } } return@@ ret@@ ; } intmain() { intt,@@ a,@@ j; cin>>t; for(j=0;j<@@ t;j++) { cin>>a; cout<<sum@@ (a,@@ 2)<<endl; } return0; }  
c -1
h -1
voidmain() { char@@ w@@ [@@ 999@@ ][@@ 26]; char@@ m; inta[@@ 999@@ ],c[@@ 26]; inti,j,n,@@ t,@@ max; scanf("%d",&n); for(i=0;i<=@@ 25@@ ;i++){ c[i]@@ =0; } for(i=0;i<=@@ n-1;i++){ scanf("%d",&a[i]); scanf("%s",@@ w@@ [i]); } for(i=0;i<=@@ n-1;i++){ for(j=0;@@ w@@ [i][j]@@ !='\0';j++){ c[@@ w@@ [i][j]@@ -65@@ ]@@ +=1; } } max=@@ c[@@ 0]; m=@@ 65@@ ; for(i=0;i<=@@ 25@@ ;i++){ if(c@@ [i]@@ >max){ max=@@ c[i]; m@@ =i+65; } } printf("%c\n",@@ m); printf("%d\n",max); for(i=0;i<=@@ n-1;i++){ for(j=0;@@ w@@ [i][j]@@ !='\0';j++){ if(w@@ [i][j]==@@ m){ printf("%d\n",a[i]); } } } }  
c -1
h -1
0

intmain() { inti,@@ a,@@ n,@@ e,@@ sz@@ [100],@@ sx@@ [100]={0}; char@@ st@@ [100][@@ 11@@ ],@@ sa@@ [11@@ ],@@ sd@@ [100][@@ 11]; scanf("%d",&n); for(i=0;i<n;i++) { scanf("%s",&@@ st@@ [i]); scanf("%d",&sz[i]); } for(i=0;i<n;i++) { if(sz[i]@@ >=60) { sx@@ [i]=@@ sz[i]; strcpy(@@ sd@@ [i],@@ st@@ [i]); } } for(i=1;i<=n;i++) { for(a=0;a@@ <n@@ -i@@ ;a@@ ++) { if(@@ sx@@ [a@@ ]<@@ sx@@ [a@@ +1]) { e=@@ sx@@ [a@@ ]; sx@@ [a@@ ]=@@ sx@@ [a@@ +1]; sx@@ [a@@ +1]=@@ e; strcpy(@@ sa@@ ,@@ sd@@ [a@@ ]); strcpy(@@ sd@@ [a@@ ],@@ sd@@ [a@@ +1@@ ]); strcpy(@@ sd@@ [a@@ +1],@@ sa@@ ); } } } for(i=0;i<n;i++) { if(@@ sx@@ [i]@@ >=60) puts(@@ sd@@ [i]); } for(i=0;i<n;i++) { if(sz[i]@@ <60) puts(@@ st@@ [i]); } return0; }  
c -1
h -1
intmain() { intn; intnum@@ [100]; int@@ test@@ ,@@ count=0; cin>>n; while(n@@ !=-1) { num[@@ 0]=@@ n; for(inti@@ =1;@@ n@@ !=0;i++) { cin>>n; num[i]=@@ n; } for(intj@@ =0;@@ num[j]@@ !=0;j++) { test@@ =@@ num@@ [j]; for(intk@@ =0;@@ num@@ [k]@@ !=0@@ ;k++) { if(num@@ [k]==2*@@ test@@ ) { count++; } } } cout<<count<<endl; count=0; cin>>n; } return0; }  
c -1
h -1
0

intmain() { intn,@@ book@@ [1000],@@ i,j,@@ countt@@ [26]={0},@@ len,@@ max@@ =-1,@@ maxauthor@@ ; char@@ peo@@ [1000][@@ 27@@ ],@@ sum[@@ 100000@@ ]@@ ="@@ \@@ 0@@ ",@@ ch; cin>>n; for(i=1;i<=n;i++) { cin>>@@ book@@ [i]@@ >>@@ peo@@ [i]; strcat(@@ sum,@@ peo@@ [i]); } len=strlen(@@ sum); for(i=0;i<len;i++) countt@@ [@@ sum[i]@@ -65]++; for(i=0;i<26;i++) if(@@ countt@@ [i]>max) { max=@@ countt@@ [i]; maxauthor@@ =i; } ch@@ =@@ maxauthor@@ +65; int@@ p=0,@@ t=0; for(i=1;i<=n;i++) { for(j=0;j<strlen(@@ peo@@ [i]@@ );j++) if(@@ peo@@ [i][j]==@@ ch@@ ) p++; if(p@@ >0) book@@ [i-@@ t@@ ]=@@ book@@ [i]; else t++; p=0; } cout<<@@ ch@@ <<endl; cout<<@@ n-@@ t@@ <<endl; for(i=1;i<=@@ n-@@ t;i++) cout<<@@ book@@ [i]<<endl; return0; }  
c -1
h -1
inth@@ [30]; int@@ result@@ [30]; int@@ findFirstLess@@ (int@@ num) { int@@ index@@ =0; while(1) { if(result@@ [@@ index@@ ]<@@ num) return@@ index@@ ; index@@ ++; } } intmain() { intk,@@ i=0,@@ r,@@ p,@@ ans; scanf("%d",&k); while(1) { if(i>=@@ k) break; scanf("%d",@@ h@@ +i); i++; } result@@ [0]=@@ h@@ [0]; i=1; r=0; while(i<@@ k) { if(h@@ [i]<=@@ result@@ [r@@ ]) result@@ [@@ ++@@ r@@ ]=@@ h@@ [i]; if(h@@ [i]>@@ result@@ [r@@ ]) result@@ [@@ findFirstLess@@ (@@ h@@ [i])@@ ]=@@ h@@ [i]; i++; } printf("%d\n",@@ r@@ +1); return0; }  
c -1
h -1
0

intmain() { intm,n,i,j,@@ min@@ ; cin>>m>>n; inta[@@ m@@ ][n]; for(i=0;i<m;i++) for(j=0;j<n;j++) cin>>a[i][j]; for(j=0;j<=n-1;j++) {@@ min@@ =(@@ m-1@@ >@@ j@@ ?@@ j@@ :@@ m-1@@ ); for(i=0;i<=@@ min@@ ;i++) cout<<a[i]@@ [j-i@@ ]@@ <<endl;} for(j=n@@ ;j<=@@ m+@@ n-2@@ ;j++) {@@ min@@ =(@@ m-1@@ >@@ j@@ ?@@ j@@ :@@ m-1@@ ); for(i=j@@ -(@@ n-1)@@ ;i<=@@ min@@ ;i++) cout<<a[i]@@ [j-i@@ ]@@ <<endl;} return0; }  
c -1
h -1
intmain() { int@@ x,@@ a[@@ 16@@ ],i,j,@@ n=0,@@ num=0,@@ m; while(1) { cin>>m; if(m@@ ==-1) break; else { a[1]=@@ m; n=1; } for(i=2@@ ;@@ ;i++) { cin>>x; if(x@@ ==0) break; else { a[i]=@@ x; n=n+1; } } for(i=1;i<=n;i++) { for(j=1;j<=n;j++) { if(a[i]==@@ (@@ 2*@@ a[j]@@ )) num=num@@ +1; } } cout<<num<<endl; num=0; } return0; }  
c -1
h -1
0

intf(inta,int@@ c); intj,@@ b; intmain() { inti,n,@@ m; scanf("%d",&n); for(i=1;i<=n;i++) { scanf("%d",&m); printf("%d\n",@@ f(@@ m,@@ 2)); } return0; } intf(inta,int@@ c) { intj,@@ b=0; for(j=@@ c@@ ;j<=@@ sqrt(@@ a)@@ ;j++) { if(a%@@ j@@ ==0) { b=@@ b+@@ f(@@ a/@@ j@@ ,j); } } return@@ b@@ +1; }  
c -1
h -1
intmain(){ intn,k,@@ i,j; intt=0; scanf("%d%d",&n,&k); intsz[1000]; for(i=0;i<n;i++){ scanf("%d",&(sz[i]@@ )); } for(i=0;i<n;i++) { for(j=0;j<n;j++) { if(sz[i]+sz@@ [j]==k) { if(t==0) { t=1; } else { t=1; } } } } if(t@@ ==1){ printf("yes"); }else{ printf("no"); } return0; }  
c -1
h -1
0

intmain() { intn,i,j; int@@ k@@ [25],@@ a[@@ 25]; int@@ maxk@@ ,@@ maxa@@ ; scanf("%d",&n); for(i=0;i<n;i++) { scanf("%d",&@@ k@@ [i]); } a[0]@@ =1; maxk@@ =1; for(i=1;i<n;i++) { maxa@@ =0; for(j=0;j<i;j++) { if(k@@ [j]>=@@ k@@ [i]) { if(a[j]>=@@ maxa@@ ) { maxa@@ =@@ a[j]; } } } a[i]=@@ maxa@@ +1; if(a[i]>=@@ maxk@@ ) { maxk@@ =@@ a[i]; } } printf("%d",@@ maxk@@ ); }  
c -1
h -1
voidmain() { intn,m,@@ i,j,k; scanf("%d\n",&n); inta[n@@ ],b[@@ n]; k=0; for(i=0;i<n;i++){@@ scanf("%d",&a[i]);} for(i=n-1@@ ;i>0;i--) { m=0; for(j=i-1@@ ;j>=0@@ ;j--@@ ){@@ if(a[i]!=@@ a[j])@@ m=m@@ +1;} if(m==@@ i@@ ){@@ b[k]=@@ a[i]@@ ;k@@ =k@@ +1;} elseif(m@@ ==0&&@@ k@@ !=0@@ ){@@ b[k]=@@ a[0]@@ ;} } b[k]=@@ a[0]; for(i=k@@ ;i>0@@ ;i@@ --@@ )@@ printf("%d",b[i]); printf("%d",@@ b[0]@@ ); }  
c -1
h -1
0

intmain(){ double@@ a,b,@@ n; inti; char@@ A@@ [1000],@@ B@@ [1000]; scanf("%lf",&n); scanf("%s\n@@ %s",@@ A@@ ,@@ B@@ ); a=strlen(@@ A@@ ); b=strlen(@@ B@@ ); if(a!=@@ b){ printf("error"); return0; } for(i=0,@@ b@@ =0;i<@@ a;i++){ if((@@ A@@ [i]!='A'&&@@ A@@ [i]!='T'&&@@ A@@ [i]!='C'&&@@ A@@ [i]!='G')||(@@ B@@ [i]!='A'&&@@ B@@ [i]!='T'&&@@ B@@ [i]!='C'&&@@ B@@ [i]!='G')){ printf("error"); return0; } if(A@@ [i]==@@ B@@ [i]){ b++; } } a=@@ b@@ /@@ a; if(a@@ >=@@ n){ printf("yes"); } else{printf("no");} return0; }  
c -1
h -1
intmain() { intn,@@ m[@@ 20000],@@ i,j=0,@@ count=0; scanf("%d",&n); for(i=0;i<n;i++) { scanf("%d",&@@ m[i]); for(j=0;j<i;j++) { if(m@@ [i]==@@ m@@ [j]) break; } if(i==@@ j) { if(count@@ ==0) { printf("%d",@@ m[i]); count++; } else printf("%d",@@ m[i]); } } printf("\n"); return0; }  
c -1
h -1
0

intmain() { int@@ array@@ [100][100],@@ row,col,@@ i,j,@@ x,y; scanf("%d%d",&row,&col); for(i=0;i<=@@ row-1;i++) { for(j=0;j<=@@ col@@ -1;j++) { scanf("%d",&array@@ [i][j]); } } if(row@@ ==@@ col) { for(i=0;i<=@@ col@@ -1;i++) { x@@ =i; for(j=0;j<=i;j++) { printf("%d\n",array@@ [j]@@ [x@@ ]); x@@ --; } } for(i=1;i<=@@ row-1;i++) { y@@ =i; for(j=col-1@@ ;j>=i@@ ;j--) { printf("%d\n",@@ array[@@ y@@ ][j]); y++; } } } elseif(@@ row@@ <col) { for(i=0;i<=@@ row-1;i++) { x@@ =i; for(j=0;j<=i;j++) { printf("%d\n",array@@ [j]@@ [x@@ ]); x@@ --; } } for(j=@@ row@@ ;j<=@@ col@@ -1;j++) { x@@ =j; for(i=0;i<=@@ row-1;i++) { printf("%d\n",array@@ [i]@@ [x@@ ]); x@@ --; } } for(i=1;i<=@@ row-1;i++) { y@@ =i; for(j=col-1@@ ;j>=i@@ +col@@ -@@ row@@ ;j--) { printf("%d\n",@@ array[@@ y@@ ][j]); y++; } } } else { for(i=0;i<=@@ col@@ -1;i++) { x@@ =i; for(j=0;j<=i;j++) { printf("%d\n",array@@ [j]@@ [x@@ ]); x@@ --; } } for(i=1;i<=@@ row@@ -col@@ ;i++) { x@@ =i; for(j=col-1@@ ;j>=0;j--) { printf("%d\n",@@ array[@@ x@@ ][j]); x++; } } for(i=@@ row@@ -col@@ +1;i<=@@ row-1;i++) { y@@ =i; for(j=col-1@@ ;j>=i@@ -@@ row+col@@ ;j--) { printf("%d\n",@@ array[@@ y@@ ][j]); y++; } } } }  
c -1
h -1
intmain(){ intn,i,j,k; cin>>n; inta[n]; for(i=0;i<n;i++) cin>>a[i]; for(i=0;i<n;i++){ for(j=i+1;j<n;j++){ if(a[j]==@@ a[i]@@ ){ for(k=j@@ ;k<@@ n;k++){ a[k]=a[k@@ +1]; } j--; n--; } } } for(i=0;i<n-1;i++) cout<<a[i]@@ <<''; cout<<a[i]; return0; }  
c -1
h -1
0

intmain() { intn,i,k,@@ p; intm=0; intsz[1000]; scanf("%d",&n); scanf("%d",&k); for(i=0;i<n;i++) { scanf("%d",&sz[i]); } for(i=0;i<n;i++) { for(p=1@@ ;p<@@ n-i@@ ;p++) { if(sz@@ [i]==@@ k-@@ sz@@ [i+@@ p@@ ]) { printf("yes"); break; } else m++; } if(sz@@ [i]==@@ k-@@ sz@@ [i+@@ p@@ ]) { break; } } if(m==@@ n@@ *(@@ n-1)@@ /@@ 2) printf("no"); return0; }  
c -1
h -1
intmain() { inta[100][100]; intm,n,i,j,@@ r; long@@ flag=0; scanf("%d%d",&m,&n); for(i=0;i<m;i++) { for(j=0;j<n@@ ;j++)@@ scanf("%d",&a[i][j]); } for(r=0;r@@ <@@ m+@@ n-1;@@ r++) { for(i=0;i<=@@ r@@ &&@@ flag@@ <m@@ *@@ n;i++) { if(i<@@ m@@ &&@@ r@@ -i@@ <n) { printf("%d\n",@@ a[i][@@ r@@ -i]); flag@@ ++; } } } return0; }  
c -1
h -1
0

inta[@@ row][col]; intmain(){ intr,@@ c,@@ i,j,@@ n; scanf("%d%d",&@@ r@@ ,&c); for(i=0;i<@@ r@@ ;i++){ for(j=0;j<@@ c@@ ;j++){ scanf("%d\n",&@@ a[i][j]@@ );} } for(n=0;n@@ <=@@ c+@@ r@@ -2@@ ;n++){ for(i=0;i<=@@ n@@ &&i@@ <@@ r@@ ;i++){ j=@@ n-@@ i; if(j<@@ c){ printf("%d\n",a[i][j]); } } } return0; }  
c -1
h -1
main() { intk; scanf("%d",&k); int*@@ a=@@ (int*)malloc(@@ k@@ *sizeof(int)); inti; for(i=0;i<k;i++) { scanf("%d",&a[i]); } int*@@ b=@@ (int*)malloc(@@ k@@ *sizeof(int)); for(i=0;i<k;i++) {@@ b[i]@@ =1;} for(inti=1;i<@@ k;i++) { for(intt@@ =0;t@@ <i@@ ;t++) if(a[@@ t@@ ]>=@@ a[i]&&@@ b[t@@ ]+1@@ >=@@ b[i]) b[i]=@@ b[t@@ ]+1; } intmax=@@ b[0]; for(inti=1;i<@@ k;i++) {@@ if(b[i]@@ >max)max=@@ b[i]@@ ;} printf("%d",max); }  
c -1
h -1
0

intmax@@ [26]={0}; inta[@@ 26]={0}; void@@ attack@@ (intn) { inti=0,j=0,@@ premax@@ =0; for(i=0;i<n;i++) {@@ max@@ [i]=1; for(j=0;j<i;j++) { if(a[i]<=@@ a[j]) { premax@@ =@@ max@@ [j]+1; if(@@ premax@@ >max@@ [i]) max@@ [i]=@@ premax@@ ;} } } } intmain() {@@ static@@ intn,i,@@ num=0; scanf("%d",&n); for(i=0;i<n;i++) scanf("%d",&a[i]); attack@@ (n); num=@@ max@@ [0]; for(i=1;i<n;i++) if(max@@ [i]>@@ num) num=@@ max@@ [i]; printf("%d",@@ num); }  
c -1
h -1
intmain(intargc,char*argv[]) { inta[100@@ ],i,j,@@ num=0,@@ total=0; while(1){ num=0; while(1){ scanf("%d",&a[@@ num@@ ]); if(a[@@ num@@ ]@@ ==0)break; if(a[@@ num@@ ]==@@ -1)@@ return0; num@@ ++;} total=0; for(i=0;i<@@ num@@ ;i++){ for(j=0;j<@@ num@@ ;j++){ if(a[j]==2*@@ a[i])@@ total@@ ++;@@ }} printf("%d\n",@@ total@@ );} return0; }  
c -1
h -1
0

intf(inta,int@@ min) { inti,@@ result; if(a<@@ min) return0; result=1; for(i=min@@ ;i<@@ a;i++) if(a%i==0) result+=@@ f(a@@ /i,i); returnresult; } intmain() { inti,n,@@ num@@ [100]; cin>>n; for(i=0;i<n;i++) { cin>>num[i]; cout<<@@ f(@@ num@@ [i],@@ 2)<<endl; } return0; }  
c -1
h -1
static@@ intdays@@ [13]={0,31,28,31,30,31,30,31,31,30,31,30,31}; static@@ int@@ isleapyear@@ (intyear@@ ){ return(@@ year%4==0&&year%100!=0@@ )||@@ year%@@ 400==0@@ ; } intmain(){ intyear,month,day; intn=0; inti; scanf("%d%d%d",&@@ year,@@ &@@ month,@@ &@@ day); for(i=1;i<month;i++) n=n+@@ days@@ [i]; n=n+@@ day; if(month@@ >2@@ &&@@ isleapyear@@ (year@@ )) n++; printf("%d\n",n); return0; }  
c -1
h -1
0

voidmain() { intn,a[@@ 26]={0},@@ i,j,@@ z,@@ l@@ [26@@ ]={@@ 1@@ }; scanf("%d",&n); for(i=n@@ ;i>0;i--) scanf("%d",&a[i]); for(i=1;i<=n;i++) {@@ for(z@@ =j@@ =0;j<@@ i;j++) if(a[i]>=@@ a[j]&&@@ z@@ <=@@ l@@ [j]) z=@@ l@@ [j]+1; l[i]=@@ z; } for(z@@ =i@@ =0;i<=@@ n;i++) if(l@@ [i]>@@ z) z=@@ l@@ [i]; printf("%d\n",@@ z@@ -1); }  
c -1
h -1
intmain() { intsz[@@ 1000][1000]; intn,i,j,@@ a1,a2,@@ b1,@@ b2@@ ,@@ s; scanf("%d",&n); for(i=0;i<n;i++) { for(j=0;j<n;j++) { scanf("%d",&sz[i][j]); } } for(i=0;i<n;i++) { for(j=0;j<n;j++) { if((@@ sz@@ [i][j]@@ ==0)&&(@@ sz@@ [i-1][j]@@ !=0)&&(@@ sz[i]@@ [j-1]@@ !=0)) { a1@@ =i; b1@@ =j; } } } for(i=n@@ ;i>0;i--) { for(j=n@@ ;j>0;j--) { if((@@ sz@@ [i][j]@@ ==0)&&(@@ sz@@ [i+1][j]@@ !=0)&&(@@ sz[i]@@ [j+1]@@ !=0)) { a2@@ =i; b2@@ =j; } } } s=(@@ a2-a1@@ -1)*(@@ b2-b1@@ -1); printf("%d",s); return0; }  
c -1
h -1
0

intmain(){ charzfc@@ [256]; char@@ zichuan@@ [256]; char@@ tihuan@@ [20]; char@@ daitihuan@@ [20]; intk; int@@ e; int@@ s=1; int@@ tag@@ =0; gets(@@ zfc); gets(@@ zichuan@@ ); gets(@@ tihuan@@ ); intl,@@ m; inti,j; l=strlen(@@ zichuan@@ ); m=strlen(@@ zfc); for(i=0;i<m;i++){ for(j=i;j<i+@@ l@@ ;j++){ daitihuan@@ [j-i@@ ]=@@ zfc@@ [j]; } daitihuan@@ [l@@ ]=0; k=@@ strcmp(@@ daitihuan@@ ,@@ zichuan@@ ); s@@ *=@@ k; if(k@@ ==0&&@@ tag@@ ==0){ e@@ =i; tag@@ =1; } } if(s@@ !=0){ printf("%s",@@ zfc); } elseif(@@ s@@ ==0){ for(i=0;i<@@ e@@ ;i++){ printf("%c",@@ zfc@@ [i]); } printf("%s",@@ tihuan@@ ); for(i=@@ e@@ +l@@ ;i<@@ m;i++){ printf("%c",@@ zfc@@ [i]); } } return0; }  
c -1
h -1
intmain() { intn,i,j,@@ m; inta[20000]; scanf("%d\n",&n); for(i=1;i<=n;i++) { scanf("%d",&@@ a[i@@ -1]); } printf("%d",a[0]); for(j=2;j<=@@ n;j++) { for(m=1;m@@ <=j@@ -1@@ ;m++) { if(a@@ [j-1@@ ]==@@ a[@@ m-1@@ ]) { break; } } if(m==@@ j)@@ printf("%d",@@ a@@ [j-1]); } return0; }  
c -1
h -1
0

intk,i,j,@@ n=0,@@ t; inta[@@ 25],b[@@ 25]; main() { cin>>k; for(i=0;i<@@ k;i++)@@ cin>>a[i]; for(i=0;i<k;i++) { for(j=0;j<i;j++) { if(a[j]>=@@ a[i]) { t=@@ b[j]@@ +1; if(t@@ >@@ b[i]@@ )@@ b[i]=@@ t; } } } for(i=0;i<@@ k;i++)@@ if(b[i]>@@ n)@@ n=@@ b[i]; cout<<@@ n+1; }  
c -1
h -1
voidmain() { structstudent {intnum; int@@ score1@@ ; int@@ score2; }stu[100000]; long@@ intn; inti,@@ score@@ [100000],@@ max@@ [3@@ ]={0},@@ a[@@ 3@@ ]; scanf("%d",&n); for(i=0;i<n;i++) { scanf("%d%d%d",&stu[i].num,&stu[i].@@ score1@@ ,&stu[i].@@ score2); score@@ [i]=@@ stu[i].@@ score1@@ +stu[i].@@ score2; } for(i=0;i<n;i++) { if(max@@ [0]@@ <@@ score@@ [i]@@ ){@@ max@@ [0]=@@ score@@ [i];@@ a[0]=@@ stu[i].@@ num@@ ;} } for(i=0;i<n;i++) {if(@@ stu[i].@@ num@@ ==@@ a[0]@@ )continue; elseif(@@ max@@ [1]@@ <@@ score@@ [i]@@ ){@@ max@@ [1]=@@ score@@ [i];@@ a[1]=@@ stu[i].@@ num@@ ;} } for(i=0;i<n;i++) {if(@@ stu[i].@@ num@@ ==@@ a[1]@@ ||@@ stu[i].@@ num@@ ==@@ a[0]@@ )continue; elseif(@@ max@@ [2@@ ]<@@ score@@ [i]@@ ){@@ max@@ [2]=@@ score@@ [i];@@ a[2]=@@ stu[i].@@ num@@ ;} } for(i=0;i<3;i++) { printf("%d%d\n",@@ a[i],@@ max@@ [i]); } }  
c -1
h -1
0

intf@@ (intn,int@@ min@@ ){ inti,@@ result=1; if(@@ min@@ >n) return0; for(i=min@@ ;i<@@ n;i++){ if(n@@ %i==0){ result+=@@ f(@@ n@@ /i,i); } } returnresult; } intmain(){ intn,a,@@ i,@@ t; scanf("%d",&n); for(i=0;i<n;i++){ scanf("%d",&a); t=@@ f(a,@@ 2); if(i<@@ n-1) printf("%d\n",t); else printf("%d",t); } return0; }  
c -1
h -1
voidmain() { inta[@@ 200][@@ 200]; intm,n,i,j,@@ x; scanf("%d%d",&m,&n); for(i=0;i<m;i++) for(j=0;j<n;j++) scanf("%d",&a[i][j]); i=0; j=0; for(x=0;x@@ <=@@ m+@@ n-2@@ ;x@@ ++) { for(i=0;i<m;i++) for(j=0;j<n;j++) { if(i+j@@ ==@@ x) printf("%d\n",a[i][j]); } } }  
c -1
h -1
0

intmain(){ inta[@@ 1000],@@ n,k,@@ i,j; scanf("%d%d",&n,&k); for(i=0;i<n;i++){ scanf("%d",&a[i]); } for(i=0;i<n;i++){ for(j=n-1@@ ;j>=0;j--){ if((@@ a[i]+@@ a[j]==@@ k@@ )&&(i@@ !=@@ j)@@ )break; } if((@@ a[i]+@@ a[j]==@@ k@@ )&&(i@@ !=@@ j)@@ )break; } if((@@ a[i]+@@ a[j]==@@ k@@ )&&(i@@ !=@@ j@@ )) printf("yes"); elseprintf("no"); return0; }  
c -1
h -1
intmain() { intk,m,n,@@ a[100][100],@@ i,j,@@ s,@@ t,@@ p,q; cin>>k; for(t@@ =1;t@@ <=k;@@ t++) { cin>>m>>n; for(i=0;i<m;i++) for(j=0;j<n;j++) cin>>a[i][j]; s=0; for(p=0;p@@ <m@@ ;p++) for(q=0;q@@ <n;@@ q++) if(p@@ ==0||@@ q@@ ==0||@@ p@@ ==@@ m-1@@ ||@@ q@@ ==@@ n-1) s=s+@@ a[p@@ ][q@@ ]; cout<<s<<endl; } return0; }  
c -1
h -1
0

intmain() { introw,col,@@ i,j,@@ ji@@ ; int@@ su@@ [100][100]; inth@@ =0,@@ l=0,@@ sum,@@ shibie@@ ; scanf("%d%d",&row,&col); for(i=0;i<row;i++){ for(j=0;j<col;j++){ scanf("%d",&@@ su@@ [i][j]); } } ji@@ =@@ row@@ *@@ col; while(@@ ji@@ !=0){ for(@@ sum=0;@@ sum@@ <(@@ row+col@@ -1)@@ ;@@ sum@@ ++){ if(sum@@ <col@@ ){ l=@@ sum; h=0; }else{ h=@@ sum@@ -col@@ +1; l=@@ col-1; } do{ printf("%d\n",@@ su@@ [h@@ ][l@@ ]); ji@@ --; l@@ --; h@@ ++; }while(@@ (@@ l@@ >=0@@ )&&(@@ h@@ <row@@ )); } } return0; }  
c -1
h -1
intmain() { structstudent@@ {int@@ id,@@ chin@@ ,@@ math@@ ,@@ z@@ ;@@ }@@ p[@@ 100000]; int@@ id,@@ math@@ ,@@ chin@@ ,@@ z,@@ i,n,@@ f,@@ s,@@ t,@@ id1@@ ,@@ id2@@ ,@@ id3@@ ; scanf("%d",&n); for(i=0;i<n;i++) { scanf("%d%d%d",&@@ id,&@@ chin@@ ,&@@ math); p[i].@@ id@@ =@@ id; p[i].@@ math@@ =@@ math; p[i].@@ chin@@ =@@ chin@@ ; } for(i=0;i<n;i++) { id@@ =@@ p[i].@@ id; math@@ =@@ p[i].@@ math; chin@@ =@@ p[i].@@ chin@@ ; z=@@ math+@@ chin@@ ; if(i==0) { f=@@ s=@@ t=@@ z; id1@@ =@@ id2@@ =@@ id3@@ =@@ id; } elseif(@@ i@@ ==1) { if(z@@ >@@ f@@ ) { t=@@ s@@ ;@@ id3@@ =@@ id2@@ ;@@ s=@@ f@@ ;@@ id2@@ =@@ id1@@ ;@@ f=@@ z@@ ;@@ id1@@ =@@ id; } else { t=@@ s=@@ z@@ ;@@ id2@@ =@@ id3@@ =@@ id; } } else { if(z@@ >@@ f@@ ) { t=@@ s@@ ;@@ id3@@ =@@ id2@@ ;@@ s=@@ f@@ ;@@ id2@@ =@@ id1@@ ;@@ f=@@ z@@ ;@@ id1@@ =@@ id; } elseif(@@ z@@ >@@ s) { t=@@ s@@ ;@@ id3@@ =@@ id2@@ ;@@ s=@@ z@@ ;@@ id2@@ =@@ id; } elseif(@@ z@@ >@@ t) { t=@@ z@@ ;@@ id3@@ =@@ id; } } } printf("%d%d\n",@@ id1@@ ,@@ f); printf("%d%d\n",@@ id2@@ ,@@ s); printf("%d%d\n",@@ id3@@ ,@@ t); return0; }  
c -1
h -1
0

intmain() { int@@ A@@ ,@@ B@@ ,@@ C@@ ,@@ d,@@ z,@@ leap@@ ,i; i=1; while(i<=@@ 5) { scanf("%d%d@@ %d@@ \n",&@@ A@@ ,&@@ B@@ ,&@@ C@@ ); if(A@@ %@@ 4==0) { if(A@@ %@@ 100==0) { if(A@@ %@@ 400==0) leap@@ =1; else leap@@ =0; } else leap@@ =1; } else leap@@ =0; if(leap@@ ) { switch(@@ B@@ ) { case1:@@ d@@ =0;@@ break; case2:@@ d=@@ 31;break; case3:@@ d=@@ 60@@ ;break; case4:@@ d=@@ 91@@ ;break; case5:@@ d=@@ 121@@ ;break; case6:@@ d=@@ 152@@ ;break; case7:@@ d=@@ 182@@ ;break; case8:@@ d=@@ 213@@ ;break; case9:@@ d=@@ 244@@ ;break; case10:@@ d=@@ 274@@ ;break; case11:@@ d=@@ 305@@ ;break; case12:@@ d=@@ 335@@ ;break; } z=@@ d+@@ C@@ ;} else { switch(@@ B@@ ) { case1:@@ d@@ =0;@@ break; case2:@@ d=@@ 31;break; case3:@@ d=@@ 59@@ ;break; case4:@@ d=@@ 90@@ ;break; case5:@@ d=@@ 120@@ ;break; case6:@@ d=@@ 151@@ ;break; case7:@@ d=@@ 181@@ ;break; case8:@@ d=@@ 212@@ ;break; case9:@@ d=@@ 243@@ ;break; case10:@@ d=@@ 273@@ ;break; case11:@@ d=@@ 304@@ ;break; case12:@@ d=@@ 334@@ ;break; } z=@@ d+@@ C@@ ;} printf("%d\n",@@ z); i=i+1; } return0; }  
c -1
h -1
inta[1000][1000]; intmain() { intn,i,j; int@@ m1@@ =0,@@ n1@@ =0,@@ m2@@ =0,@@ n2@@ =0,@@ s=0; scanf("%d",&n); for(i=0;i<n;i++) { for(j=0;j<n;j++) { scanf("%d",&a[i][j]); } } for(i=0;i<n;i++) { for(j=0;j<n;j++) { if(a[i][j]==0&&@@ a[i]@@ [j+1]@@ ==0&&@@ a[i+1@@ ][j]@@ ==0) { m1@@ =i; n1@@ =j; } } } for(i=0;i<n;i++) { for(j=0;j<n;j++) { if(a[i][j]==0&&@@ a[i-1]@@ [j]@@ ==0&&@@ a[i][j-1]@@ ==0) { m2@@ =i; n2@@ =j; } } } s=(@@ m2@@ -@@ m1@@ -1)*(@@ n2@@ -@@ n1@@ -1); printf("%d\n",s); return0; }  
c -1
h -1
0

structbook { intID; charauthor@@ [30]; structbook*next; }; intn,@@ max=0; charc; structbook*@@ create@@ () { structbook@@ *head,*p1,*p2; p1=(structbook@@ *)malloc(LEN); scanf("%d%s",&p1->@@ ID,@@ p1->@@ author); head=p1; p2=p1; p1->next=NULL; inti=1; do { if(i==@@ n@@ )break; p1=(structbook@@ *)malloc(LEN); scanf("%d%s",&p1->@@ ID,@@ p1->@@ author); p2->next=p1; p2=p1; p1->next=NULL; i++; }while(@@ 1); return(head); } intmain() { structbook*@@ head; inti; int*@@ num; num=@@ (int*)malloc(@@ 26@@ *sizeof(int)); for(i=0;i<26;i++) *(@@ num@@ +i)@@ =0; scanf("%d",&n); head=@@ create@@ (); structbook@@ *p; char*@@ s; p=head; while(p) { for(@@ s=@@ p->@@ author@@ ;*@@ s@@ !='\0'@@ ;s++) { inttemp; temp@@ =*@@ s@@ -'A'; (*(@@ num@@ +@@ temp@@ ))@@ ++; } p=p->next; } for(i=0;i<26;i++) { if(*(@@ num@@ +i)@@ >max@@ )@@ max@@ =*(@@ num@@ +i); } for(i=0;i<26;i++) { if(*(@@ num@@ +i)@@ ==@@ max@@ )break; } printf("%c\n%d\n",@@ 'A'+@@ i,@@ max); c@@ ='A'+i; p=head; while(p) { for(@@ s=@@ p->@@ author@@ ;*@@ s@@ !='\0'@@ ;s++) { if(*@@ s@@ ==@@ c@@ )break; } if(*@@ s@@ !=@@ '\0')@@ printf("%d\n",p->@@ ID); p=p->next; } }  
c -1
h -1
voidmain() { inti,j,t; charstring@@ [256@@ ]={0}; char@@ substring@@ [256@@ ]={0}; char@@ replacement@@ [256@@ ]={0}; scanf("%s",@@ string); scanf("%s",@@ substring); scanf("%s",@@ replacement); for(i=0;i<strlen(@@ string@@ );i++) { t=0; if(@@ substring@@ [0]==@@ string@@ [i]) { for(j=0;j<strlen(@@ substring@@ );j++) { if(@@ substring@@ [j]==@@ string@@ [i+j@@ ])@@ t++; } } if(t==@@ strlen(@@ substring@@ )) { break; } } if(i<@@ strlen(@@ string@@ )@@ -1) { for(j=0;j<strlen(@@ substring@@ );j++) { string@@ [j@@ +i]=@@ replacement@@ [j]; } } printf("%s",@@ string); }  
c -1
h -1
0

intf@@ (intx,inty) { if(y@@ ==@@ x) return1; if(y@@ >@@ x) return0; if(x%@@ y@@ ==0) return@@ f(@@ x,@@ y@@ +1)@@ +@@ f(@@ x/@@ y,@@ y); else return@@ f(@@ x,@@ y@@ +1); } intmain() { intn,@@ x; cin>>n; int@@ z,@@ i; i=@@ n; while(i@@ >0) { i@@ =i-1; cin>>x; z=@@ f(@@ x,@@ 2); cout<<@@ z@@ <<endl; } return0; }  
c -1
h -1
intmain() { inta[100@@ ]={0}; intb,@@ d,@@ e,f,@@ g,@@ i,j,k,@@ l,@@ m,n,@@ p; scanf("%d",&n); scanf("%d",&@@ p); printf("%d",@@ p); a[p@@ ]++; for(i=2;i<=n;i++) {scanf("%d",&@@ p); if(a[@@ p@@ ]@@ ==0){@@ printf("%d",@@ p@@ );@@ a[p@@ ]@@ ++;} } return@@ 7@@ ; }  
c -1
h -1
0

struct@@ p@@ { charid[10]; intage; }; void@@ bubble@@ (struct@@ p@@ a[100@@ ],int@@ n) { inti,j; struct@@ p@@ temp; for(i=0;i<n-1;i++) { for(j=0;j<n-1;j++) { if(a[j]@@ .@@ age@@ >=60) { if(a@@ [j+1@@ ].age@@ >@@ a[j].@@ age@@ ) { temp=a[j]; a[j]=a[j+1]; a[j+1]=temp; } } else { if(a@@ [j+1@@ ].age@@ >=60) { temp=a[j]; a[j]=a[j+1]; a[j+1]=temp; } } } } } intmain() { intn,i; struct@@ p@@ a[100]; scanf("%d",&n); for(i=0;i<n;i++) { scanf("%s%d",@@ a[i].@@ id,&@@ a[i].@@ age); } bubble@@ (a,@@ n); for(i=0;i<n;i++) { printf("%s\n",@@ a[i].@@ id); } return0; }  
c -1
h -1
voidmain() { intc[@@ 15],@@ i,@@ m=0; for(i=0;i<@@ 15;i++) { scanf("%d",&@@ c[i]); if(c@@ [i]==0) { break; } } intk,@@ j,@@ n=0; for(k=0;@@ c@@ [k]@@ !=0@@ ;k++) { for(j=0;@@ c[j]@@ !=0;j++) { if(c@@ [k]==2*@@ c@@ [j]) { n++; } } } printf("%d",n); }  
c -1
h -1
0

intmain(){ char@@ mubiao@@ [N]; char@@ zichuan@@ [N]; char@@ replace@@ [N]; inti; intj=0; int@@ flag; scanf("%s",@@ mubiao@@ ); scanf("%s",@@ zichuan@@ ); scanf("%s",@@ replace); int@@ a=strlen(@@ mubiao@@ ); int@@ b=strlen(@@ zichuan@@ ); for(i=0;i<a;i++){ if(@@ mubiao@@ [i]==@@ zichuan@@ [j]){ j++; }else{ j=0; } if(j==@@ b){ flag=1; break; } } if(flag@@ ==1){ for(j=@@ b@@ -1@@ ;j>=0;j--){ mubiao@@ [i]=@@ replace@@ [j]; i--; } } printf("%s\n",@@ mubiao@@ ); return0; }  
c -1
h -1
intmain() { inti,j,k,@@ n=0,@@ m,@@ a[100@@ ][100@@ ],b[100@@ ]={0}; for(i=0;;i++) { scanf("%d",&@@ a[n@@ ][0]@@ ); if(a[@@ n@@ ][0]@@ ==-1) break; for(j=1@@ ;@@ ;j++) { scanf("%d",&@@ a[n@@ ][j]); if(a[@@ n@@ ][j]@@ ==0) { m@@ =j; break; } } for(j=0;j<m;j++) { for(k=0;k<@@ m;k++) { if(a[@@ n@@ ]@@ [j]==2*@@ a[n@@ ][k@@ ]) b[@@ n@@ ]++; } } printf("%d\n",@@ b[@@ n@@ ]); n++; } return0; }  
c -1
h -1
0

intmain() { intsz@@ [100][100@@ ][100]; intk,i,@@ g,@@ t,@@ r; ints@@ [100]; int@@ z@@ [100]; scanf("%d",&k); for(@@ g@@ =0;@@ g@@ <=@@ k@@ -1;@@ g@@ ++){ scanf("%d%d",&@@ s[@@ g@@ ]@@ ,&@@ z[@@ g@@ ]); for(i=0;i<=@@ s[@@ g@@ ]@@ -1;i++){ for(t=0;t@@ <=@@ z[@@ g@@ ]@@ -1;@@ t++){ scanf("%d",&@@ sz[@@ g@@ ]@@ [i]@@ [t@@ ]); } } } for(@@ g@@ =0;@@ g@@ <=@@ k@@ -1;@@ g@@ ++){ if(s[@@ g@@ ]>=@@ 3@@ &&@@ z[@@ g@@ ]>=@@ 3@@ ){ for(@@ r=0,@@ i@@ =0;i<=@@ s[@@ g@@ ]@@ -1;i++){ r=r@@ +@@ sz[@@ g@@ ]@@ [i]@@ [0]+@@ sz[@@ g@@ ]@@ [i]@@ [@@ z[@@ g@@ ]@@ -1]; } for(t@@ =1;t@@ <=@@ z[@@ g@@ ]@@ -2@@ ;t@@ ++){ r=r@@ +@@ sz[@@ g@@ ][@@ 0][@@ t@@ ]+sz[@@ g@@ ][@@ s[@@ g@@ ]@@ -1@@ ][@@ t@@ ]; } printf("%d\n",@@ r); } else{@@ for(@@ r=0,@@ i@@ =0;i<=@@ s[@@ g@@ ]@@ -1;i++){ for(t=0;t@@ <=@@ z[@@ g@@ ]@@ -1;@@ t++){ r=r@@ +@@ sz[@@ g@@ ]@@ [i]@@ [t@@ ]; } } printf("%d\n",@@ r@@ );} } return0; }  
c -1
h -1
voidmain() { chara[@@ 300],b[@@ 300@@ ],c[@@ 300]; inti,j,@@ n=0,@@ lena@@ ,@@ lenb@@ ; scanf("%s%s%s",a,b,c); lena@@ =strlen(a); lenb@@ =strlen(b); for(i=0;i<@@ lena@@ ;i++) { if(@@ b[0]@@ ==@@ a[i]) { for(j=0;j<@@ lenb@@ ;j++) { if(b[j]@@ ==@@ a[i+j@@ ]) { n++; } } } if(n==@@ lenb@@ )break; else@@ n=0; } if(i<@@ lena@@ ) { for(j=0;j<@@ lenb@@ ;j++) { a[i+j@@ ]=@@ c[j]; } } printf("%s",a); }  
c -1
h -1
0

inta[@@ 233@@ ],b[@@ 233@@ ]; intn,m,@@ i,j,@@ z; voidshuru@@ (int@@ p) { scanf("%d%d",&n,&m); scanf("%d",&a[0]); for(i=1;i<@@ n@@ ;i++){@@ scanf("%d",&a[i]);} scanf("%d",&@@ b[0]@@ ); for(i=1;i<@@ m@@ ;i++){@@ scanf("%d",&@@ b[i]@@ );} } voidpaixu@@ (int@@ p) { for(i=0;i<n-1;i++) { for(j=0;j<n-1;j++) { if(a[j]>a[j+1]) { z=@@ a[j]; a[j]=a[j+1]; a[j+1]=@@ z; } } } for(i=0;i<m-1;i++) { for(j=0;j<m-1;j++) { if(b[j]>b[j+1]) { z=@@ b[j]; b[j]=b[j+1]; b[j+1]=@@ z; } } } } voidhebing@@ (int@@ p) { for(i=n@@ ;i<@@ m+n;i++) { a[i]=b[i-@@ n]; } } voidshuchu@@ (int@@ p) { printf("%d",a[0]); for(i=1;i<@@ m+n;i++) { printf("%d",a[i]); } } main() { shuru@@ (@@ 0); paixu(@@ 0); hebing@@ (@@ 0); shuchu@@ (@@ 0); }  
c -1
h -1
main() { inta[@@ 30@@ ],b[@@ 30],@@ n,i,j,@@ c,d; scanf("%d",&n); for(i=0;i<@@ 30@@ ;i++) b[i]=1; for(i=0;i<n;i++) { scanf("%d",&a[i]); } for(i=n-2;i>=0;i--) { d=0; for(j=i+1;j<n;j++) if(a[i]>=a[j]) if(b[j]@@ >@@ d) d=@@ b[j]; b[i]=@@ b[i]@@ +d; } c=@@ b[0]; for(i=1;i<n;i++) if(b[i]>@@ c) c=@@ b[i]; printf("%d",@@ c); getchar(); getchar(); }  
c -1
h -1
0

intsum=0; void@@ recur@@ (int@@ N@@ ,int@@ i) { if(N@@ ==1)@@ sum++; while(i<=@@ N@@ ) { if(N@@ %i==0) recur@@ (@@ N@@ /i,i); i++; } return; } intmain() { intt=0; cin>>t; for(intk=0;k<@@ t@@ ;k++) { intn=0; cin>>n; int@@ i=@@ 2,@@ res@@ =1; for(inti=2;i<=@@ n@@ /2@@ ;i++) { if(n%i==0) { sum=0; recur@@ (n/i,i); res@@ +=@@ sum; } } cout<<@@ res@@ <<endl; } return0; }  
c -1
h -1
intmain(){ inti,@@ a@@ =1,@@ b=1; doublen,@@ p@@ =0@@ .@@ 0,@@ q; char@@ d1@@ [500],@@ d2@@ [500]; scanf("%lf%s%s",&@@ n,@@ d1@@ ,@@ d2@@ ); if(strlen(@@ d1@@ )!=strlen(@@ d2@@ )){ a=0; } if(a@@ ==1){ for(i=0;@@ d1@@ [i]!='\0';i++){ if((@@ d1@@ [i]=='@@ A'@@ ||@@ d1@@ [i]=='@@ T@@ '@@ ||@@ d1@@ [i]=='@@ C@@ '@@ ||@@ d1@@ [i]=='@@ G')&&(@@ d2@@ [i]=='@@ A'@@ ||@@ d2@@ [i]=='@@ T@@ '@@ ||@@ d2@@ [i]=='@@ C@@ '@@ ||@@ d2@@ [i]=='@@ G')){ b=1; }else{ b=0; break; } } } if(a@@ ==0||@@ b@@ ==0){ printf("error"); } if(a@@ ==1&&@@ b@@ ==1){ for(i=0;@@ d1@@ [i]!='\0';i++){ if(@@ d1@@ [i]==@@ d2@@ [i]){ p@@ +=@@ 1.0@@ ; } } q=@@ p@@ /@@ (@@ strlen(@@ d1@@ )); if(q@@ >n){ printf("yes"); }else{ printf("no"); } } return0; }  
c -1
h -1
0

voidmain() {int@@ m1,@@ m2@@ ,@@ m3@@ ,@@ n1,n2,@@ n3@@ ; structstudent@@ {int@@ num;@@ int@@ verbal@@ ;@@ int@@ math@@ ;@@ intsum@@ ;@@ }; structstudentstu[100000]; structstudent*@@ p; p=@@ stu@@ ; inti,n; scanf("%d",&n); for(i=0;i<n;i++) scanf("%d%d%d",&@@ (p+i)->@@ num,&@@ (p+i)->@@ verbal@@ ,&@@ (p+i)->@@ math); for(i=0;i<n;i++) (p+i)->@@ sum=(@@ p@@ +i)->@@ verbal@@ +@@ (p+i)->@@ math; m1@@ =p->@@ sum;@@ n1@@ =0; for(i=0;i<n;i++) if((@@ (p+i)->@@ sum@@ )>@@ m1@@ ) {@@ m1@@ =(@@ p@@ +i)->@@ sum; n1@@ =i;} printf("%d%d\n",@@ (p@@ +@@ n1@@ )@@ ->num,@@ (p@@ +@@ n1@@ )@@ ->sum); m2@@ =p->@@ sum;@@ n2@@ =0; for(i=0;i<n;i++) if((@@ (p+i)->@@ sum@@ )>@@ m2@@ &&i!=@@ n1@@ ) {@@ m2@@ =(@@ p@@ +i)->@@ sum; n2@@ =i;} printf("%d%d\n",@@ (p@@ +@@ n2@@ )@@ ->num,@@ (p@@ +@@ n2@@ )@@ ->sum); m3@@ =p->@@ sum;@@ n3@@ =0; for(i=0;i<n;i++) if(((@@ (p+i)->@@ sum@@ )>@@ m3@@ )@@ &&i!=@@ n1@@ &&i!=@@ n2) {@@ m3@@ =(@@ p@@ +i)->@@ sum; n3@@ =i;} printf("%d%d\n",@@ (p@@ +@@ n3@@ )@@ ->num,@@ (p@@ +@@ n3@@ )@@ ->sum); }  
c -1
h -1
intmain(intargc,char*argv[]) { intn,a[@@ 1000][1000]; inti,j,@@ sum; int@@ c=0,@@ k=0,@@ r=0,@@ t=0; scanf("%d",&n); for(i=0;i<n;i++) { for(j=0;j<n;j++) { scanf("%d",&a[i][j]); if(a[i][j]==0&&@@ a[i]@@ [j-1@@ ]==255&&@@ a[i-1]@@ [j]==@@ 255) { c=i; k=j; } if(a[i][j]==0&&@@ a[i][j-1]@@ ==0&&@@ a[i-1]@@ [j]@@ ==0) { r@@ =i; t@@ =j; } } } sum=(@@ r@@ -c@@ -1)*(@@ t@@ -k@@ -1); printf("%d\n",sum); return0; }  
c -1
h -1
0

intmain() { inta[@@ 101][@@ 101],@@ row,col,@@ i,j,k,@@ sum; cin>>row>>col; sum=@@ row@@ +@@ col; for(i=1;i<=@@ row;i++) for(j=1;j<=col;j++) cin>>a[i][j]; for(k=@@ 2@@ ;k<=@@ sum@@ ;k++) { if(k@@ <=col@@ +1) { i=1; j=@@ k@@ -1; do { cout<<a[i]@@ [j]@@ <<endl@@ ;@@ ; i@@ +=1; j@@ -=@@ 1; } while(i@@ <=row@@ &&j@@ >=1@@ ); } else { i=@@ k-@@ col; j=@@ k-@@ i; do { cout<<a[i][j]<<endl; i@@ +=1; j@@ -=@@ 1; } while(i@@ <=row@@ &&j@@ >=1@@ ); } } return0; }  
c -1
h -1
intmain() { inta[@@ 101][@@ 101@@ ]@@ ,*p; intm,n; cin>>m>>n; for(p@@ =*@@ a@@ ;p@@ <*@@ a+@@ m*@@ n;@@ p@@ ++)@@ cin>>@@ *p; p@@ =*@@ a; for(inti=0;i<n;i++) { int@@ a=0,@@ b=i; while(@@ (a@@ <m@@ )&&(@@ b@@ >=0@@ )) { cout<<@@ *(p+@@ a*@@ n+@@ b@@ )<<endl; a++; b@@ --; } } for(inti=1;i<@@ m;i++) { int@@ a=@@ i,@@ b=@@ n-1; while(@@ (a@@ <m@@ )&&(@@ b@@ >=0@@ )) { cout<<@@ *(p+@@ a*@@ n+@@ b@@ )<<endl; a++; b@@ --; } } return0; }  
c -1
h -1
1


void@@ o@@ (intn) { inta[n]; inti=0,j=0,@@ x; while(i<n) { scanf("%d",&a[i]); i++; } i=0; while(i<n) { while(j<@@ n-1) { if(a[j]>a[j+1]) x=@@ a[j]@@ ,@@ a[j]=a[j+1@@ ],@@ a[j+1]=@@ x; j++; } j=0; i++; } j=0; while(j@@ <n) { printf("%d",@@ a[j]); if(j<@@ n-1) printf(""); j++; } } voidmain() { intm,n; scanf("%d%d",&m,&n); o@@ (m); printf(""); o@@ (n); }  
c -1
h -1
voidmain() { intk; intn@@ =1,@@ i=0,@@ j=0; scanf("%d",&k); int*@@ a=@@ (int*)malloc(@@ k@@ *sizeof(int)); int*@@ b=@@ (int*)malloc(@@ k@@ *sizeof(int)); for(i=0;i<k;i++) { scanf("%d",&a[i]); b[i]=1; } for(i=k@@ -1;i>=0;i--) { for(j=@@ k-1@@ ;j>i;j--) { if(a[i]>=a[j]) b[i]=@@ b[i]@@ >@@ b[j]@@ ?@@ b[i]@@ :@@ b[j]@@ +1; } } for(i=0;i<k;i++) { n=@@ n@@ >@@ b[i]@@ ?@@ n@@ :@@ b[i]; } printf("%d",n); }  
c -1
h -1
0

intmain(intargc,char*argv[]) { intyear,month,day,@@ month2@@ ,@@ n; scanf("%d%d%d",&year,&month,&day); if(year%@@ 4==0&&year%100!=0@@ ||@@ year%400==0) month2@@ =@@ 29; else month2@@ =@@ 28; if(month==1) n=@@ day; if(month==2) n=31+@@ day; if(month==3) n=31+@@ month2@@ +day; if(month==@@ 4) n=31+@@ month2@@ +31+@@ day; if(month==@@ 5) n=31+@@ month2@@ +31+30+day; if(month==@@ 6) n=31+@@ month2@@ +31+30+31+@@ day; if(month==@@ 7) n=31+@@ month2@@ +31+30+31+30@@ +day; if(month==8) n=31+@@ month2@@ +31+30+31+30+31+@@ day; if(month==@@ 9) n=31+@@ month2@@ +31+30+31+30+31+31+@@ day; if(month==@@ 10) n=31+@@ month2@@ +31+30+31+30+31+31+30@@ +day; if(month==@@ 11) n=31+@@ month2@@ +31+30+31+30+31+31+30+31+@@ day; if(month==@@ 12) n=31+@@ month2@@ +31+30+31+30+31+31+30+31+30@@ +day; printf("%d",n); return0; }  
c -1
h -1
intmain() { intyear,month,day,@@ days@@ ,i; scanf("%d%d%d",&year,&month,&day); if(year%@@ 4==0&&@@ year%@@ 100@@ ==@@ !@@ 0@@ ) { switch(month) { case1:@@ days=@@ day; break; case2:@@ days@@ =31+@@ day; break; case3:@@ days@@ =31+29@@ +day; break; case4:@@ days@@ =31+29@@ +31+@@ day; break; case5:@@ days@@ =31+29@@ +31+30+day; break; case6:@@ days@@ =31+@@ 31+29@@ +31+30+day; break; case7:@@ days=@@ 30@@ +31+@@ 31+29@@ +31+30+day; break; case8:@@ days@@ =31+@@ 30@@ +31+@@ 31+29@@ +31+30+day; break; case9:@@ days@@ =31+@@ 31+30@@ +31+@@ 31+29@@ +31+30+day; break; case10:@@ days=@@ 30@@ +31+@@ 31+30@@ +31+@@ 31+29@@ +31+30+day; break; case11:@@ days@@ =31+@@ 30@@ +31+@@ 31+30@@ +31+@@ 31+29@@ +31+30+day; break; case12:@@ days=@@ 30@@ +31+30+31+@@ 31+30@@ +31+@@ 31+29@@ +31+30+day; default@@ : ; } } else { switch(month) { case1:@@ days=@@ day; break; case2:@@ days@@ =31+@@ day; break; case3:@@ days@@ =31+28@@ +day; break; case4:@@ days@@ =31+28@@ +31+@@ day; break; case5:@@ days@@ =31+28@@ +31+30+day; break; case6:@@ days@@ =31+@@ 31+28@@ +31+30+day; break; case7:@@ days=@@ 30@@ +31+@@ 31+28@@ +31+30+day; break; case8:@@ days@@ =31+@@ 30@@ +31+@@ 31+28@@ +31+30+day; break; case9:@@ days@@ =31+@@ 31+30@@ +31+@@ 31+28@@ +31+30+day; break; case10:@@ days=@@ 30@@ +31+@@ 31+30@@ +31+@@ 31+28@@ +31+30+day; break; case11:@@ days@@ =31+@@ 30@@ +31+@@ 31+30@@ +31+@@ 31+28@@ +31+30+day; break; case12:@@ days=@@ 30@@ +31+30+31+@@ 31+30@@ +31+@@ 31+28@@ +31+30+day; default@@ : ; } } printf("%d",@@ days@@ ); return0; }  
c -1
h -1
1


intmain() { int*@@ array@@ ,@@ n,k,@@ i,j; scanf("%d%d",&n,&k); array@@ =@@ (int*)malloc(sizeof(int)*n); for(i=0;i<n;i++) scanf("%d",@@ array@@ +i); for(i=0;i<n-1;i++) for(j=i@@ +i@@ ;j<n;j++) if(array@@ [i]+@@ array@@ [j]==k) { printf("yes"); free(@@ array@@ ); return0; } free(@@ array@@ ); printf("no"); return0; }  
c -1
h -1
structstudent { inti; intj; intk; }; main() { intn; scanf("%d",&n); structstudent@@ c[@@ n+@@ 10]; int@@ m1@@ =1,@@ m2@@ =1,@@ m3@@ =1; for(intm@@ =1;m@@ <=n;@@ m@@ ++) {@@ scanf("%d%d%d",&@@ c[m@@ ].@@ i@@ ,&@@ c[m@@ ].@@ j@@ ,&@@ c[m@@ ].@@ k); if((@@ c[m@@ ].@@ j@@ +@@ c[m@@ ].@@ k@@ )>@@ (@@ c[@@ m1@@ ].@@ j@@ +@@ c[@@ m1@@ ].@@ k@@ )) {@@ m3=@@ m2@@ ;@@ m2=@@ m1@@ ;@@ m1=@@ m@@ ;} elseif((@@ c[m@@ ].@@ j@@ +@@ c[m@@ ].@@ k@@ )>@@ (@@ c[@@ m2@@ ].@@ j@@ +@@ c[@@ m2@@ ].@@ k@@ )) {@@ m3=@@ m2@@ ;@@ m2=@@ m@@ ;} elseif((@@ c[m@@ ].@@ j@@ +@@ c[m@@ ].@@ k@@ )>@@ (@@ c[@@ m3@@ ].@@ j@@ +@@ c[@@ m3@@ ].@@ k@@ )) m3=@@ m@@ ;} printf("%d%d\n",@@ c[@@ m1@@ ].@@ i,@@ c[@@ m1@@ ].@@ j@@ +@@ c[@@ m1@@ ].@@ k); printf("%d%d\n",@@ c[@@ m2@@ ].@@ i,@@ c[@@ m2@@ ].@@ j@@ +@@ c[@@ m2@@ ].@@ k); printf("%d%d\n",@@ c[@@ m3@@ ].@@ i,@@ c[@@ m3@@ ].@@ j@@ +@@ c[@@ m3@@ ].@@ k); getchar();getchar();@@ getchar@@ (@@ );}  
c -1
h -1
0

intmain(){ inti,@@ x,y,@@ m=0,@@ c=1; double@@ z,@@ w; chara[@@ 1000],b[1000]; scanf("%lf\n",&@@ z); scanf("%s\n@@ %s",@@ a,b); x@@ =strlen(a); y@@ =strlen(b); if(x@@ !=@@ y){ printf("error");@@ c=0; } else{ for(i=0;i<x;i++){ if((a[i]!='@@ A'&&a[i]!='T'&&a[i]!='C'&&a[i]!='G')||(b[i]!='A'&&b[i]!='T'&&b[i]!='C'&&b[i]!='@@ G')@@ ){@@ printf("error");@@ c@@ =0;@@ break;} else@@ if(a[i]==b[i]@@ ){@@ m++; w@@ =1.0*@@ m/@@ x@@ ;} }} if(c@@ !=0@@ ){@@ if(w@@ >@@ z@@ )@@ printf("yes");@@ else@@ printf("no");} return0; }  
c -1
h -1
structstu { charnum[@@ 15]; intchinese; intmath; intsum; structstu*next; }; intn; structstu*@@ creat@@ (void) { structstu@@ *head,*@@ p,*@@ g@@ ,*@@ h; inti,j; p=(struct@@ stu@@ *)malloc(LEN); scanf("%s%d%d",@@ (*p).@@ num,&@@ (*p).@@ chinese@@ ,&@@ (*p).@@ math); (*p).@@ sum=(@@ (*p).@@ chinese+@@ (*p).@@ math); for(i=0;;i++) { if(i@@ ==0){@@ head=@@ p@@ ;@@ (*p).@@ next@@ =NULL@@ ;} elseif(@@ i@@ <@@ 4) { for(@@ h=@@ head@@ ,j@@ =0;j<@@ i;j++) { if((@@ *p@@ ).@@ sum>@@ (*@@ h@@ ).@@ sum@@ )break; else{@@ g=@@ h@@ ;@@ h@@ =(@@ *@@ h@@ ).@@ next@@ ;} } if(j@@ ==0){@@ (*p).@@ next@@ =@@ head;@@ head=@@ p@@ ;} elseif(@@ j==@@ i@@ ){@@ (*@@ g@@ ).@@ next@@ =p@@ ;@@ (*p).@@ next@@ =NULL@@ ;} else{@@ (*@@ g@@ ).@@ next@@ =p@@ ;@@ (*p).@@ next@@ =@@ h@@ ;} } else { for(@@ h=@@ head@@ ,j@@ =0;j<@@ 3;j++) { if((@@ *p@@ ).@@ sum>@@ (*@@ h@@ ).@@ sum@@ )break; else{@@ g=@@ h@@ ;@@ h@@ =(@@ *@@ h@@ ).@@ next@@ ;} } if(j@@ ==0){@@ (*p).@@ next@@ =@@ head;@@ head=@@ p@@ ;} else{@@ (*@@ g@@ ).@@ next@@ =p@@ ;@@ (*p).@@ next@@ =@@ h@@ ;} } if(i==@@ n-1@@ )break; p=(struct@@ stu@@ *)malloc(LEN); scanf("%s%d%d",@@ (*p).@@ num,&@@ (*p).@@ chinese@@ ,&@@ (*p).@@ math); (*p).@@ sum=(@@ (*p).@@ chinese+@@ (*p).@@ math); } return(head); } voidprint(struct@@ stu@@ *head) { structstu@@ *p; inti; for(p=head@@ ,i@@ =0;i<@@ 3@@ ;i++,@@ p=@@ (*p).@@ next@@ ) printf("%s%d\n",@@ (*p).@@ num,@@ (*p).@@ sum); } voidmain() { structstu*@@ head; scanf("%d",&n); head=creat(); print(head); }  
c -1
h -1
0

intmain() { inta[@@ 17@@ ],@@ i,@@ n; while(1) { n=0; cin>>@@ a[1]; if(a[1@@ ]==@@ -1)break; for(i=2@@ ;@@ ;i++) { cin>>a[i]; if(a[i]==0)break; } for(intj=1;j<=@@ i;j++) for(intk@@ =j+1@@ ;k<=@@ i;k++) if(a[j]==2*@@ a[k]@@ ||@@ a[k@@ ]==2*@@ a[j]) n++; cout<<n<<endl; } return0; }  
c -1
h -1
intmain() { intn,i,@@ e,@@ k=0; ints[@@ 20001]; inta[@@ 20001]; cin>>n; for(i=1;i<=@@ 20001@@ ;i++) { s[i]@@ =0; a[i]=0; } for(i=1;i<=n;i++) { cin>>@@ e; if(a[@@ e@@ ]==0) { a[@@ e@@ ]=1; k++; s@@ [k]=@@ e; } } for(i=1;i<=@@ k-1;i++) cout<<@@ s[i]@@ <<''; cout<<s@@ [k]; return0; }  
c -1
h -1
0

intmain(){ intsz[100][100]; intt,@@ i,j,@@ a,@@ ROW@@ ,@@ COL@@ ; scanf("%d%d",&@@ ROW@@ ,&@@ COL@@ ); for(i=0;i<@@ ROW@@ ;i++){ for(j=0;j<@@ COL@@ ;j++){ scanf("%d",&sz[i][j]); } } for(t=0;t@@ <ROW@@ +@@ COL@@ -1;@@ t++){ if(@@ ROW@@ -1@@ >=@@ t@@ ){@@ a=@@ t;} else{@@ a=@@ ROW@@ -1@@ ;} i=0; while(i<@@ a@@ +1@@ ){ if(i<@@ t@@ -@@ COL@@ +1@@ ){ i=@@ t@@ -@@ COL@@ +1; } j=@@ t@@ -@@ i; printf("%d\n",sz@@ [i][j]); i++; } } return0; }  
c -1
h -1
intmain() { intn@@ ,*@@ a,@@ i,j,@@ r,@@ d=0; scanf("%d",&n); a=@@ (int*)malloc(sizeof(int)*n); for(i=0;i<n;i++) scanf("%d",@@ &*@@ (a@@ +i)); for(i=0;i<n;i++) { r=0; for(j=0;j<i;j++) { if(@@ *(a+i)@@ ==@@ *(a@@ +j@@ )) r@@ =1; } if(r@@ ==0&&@@ d@@ ==0) {printf("%d",@@ *(a+i)@@ );@@ d@@ =1;} elseif(@@ r@@ ==0&&@@ d@@ ==1) printf("%d",@@ *(a@@ +i)); } return0; }  
c -1
h -1
0

structbook { intnum; char@@ edt@@ [27]; }; struct@@ total { charname@@ ; int@@ amount@@ ; }; intmain() { intm,@@ i,j,k; structbook@@ bk@@ [1000]; struct@@ total@@ to@@ [27]; scanf("%d",&m); for(i=0;i<m;i++) scanf("%d%s",&@@ bk[i].@@ num,@@ bk[i].@@ edt@@ ); for(i=0;i<26;i++) { to@@ [i].name@@ ='A'+i; to@@ [i].@@ amount@@ =0; } for(i=0;i<m;i++) { for(j=0;j<strlen(@@ bk[i].@@ edt@@ );j++) { for(k=0;k<26;k++) { if(@@ bk[i].@@ edt@@ [j]==@@ to@@ [k].@@ name@@ ) to@@ [k].@@ amount@@ ++; } } } for(i=k@@ =0;i<@@ 26;i++) { if(@@ to@@ [i].@@ amount@@ >@@ to@@ [k].@@ amount@@ ) k=i; } printf("%c\n%d\n",@@ to@@ [k].@@ name,@@ to@@ [k].@@ amount@@ ); for(i=0;i<m;i++) { for(j=0;j<strlen(@@ bk[i].@@ edt@@ );j++) if(@@ bk[i].@@ edt@@ [j]==@@ to@@ [k].@@ name@@ ) printf("%d\n",@@ bk[i].@@ num); } return0; }  
c -1
h -1
voidmain() { inti,j,k,@@ min@@ ,*@@ *p,@@ row,col; scanf("%d%d",&row,&col); p=@@ (int@@ **@@ )@@ malloc(@@ row@@ *sizeof(int@@ *@@ )); for(i=0;i<row;i++) *(p+i)@@ =@@ (int*)malloc(@@ col@@ *sizeof(int)); for(i=0;i<row;i++) for(j=0;j<col;j++) scanf("%d",*(p+i)+j); min=@@ row@@ <col@@ ?@@ row@@ :@@ col; for(k=0;k<@@ min@@ ;k++) for(i=0,j@@ =k@@ ;i<=@@ k@@ ;i++,j--) printf("%d\n",@@ *(*(p+i)@@ +j)); if(col@@ ==@@ min) for(k=1;k<@@ row@@ ;k++) for(i=@@ k,@@ j=@@ col-1@@ ;i<@@ row@@ &&j>=0@@ ;i++,j--) printf("%d\n",@@ *(*(p+i)@@ +j)); else { for(k=@@ min@@ ;k<@@ col@@ ;k++) for(i=0,j@@ =k@@ ;i<@@ row@@ ;i++,j--) printf("%d\n",@@ *(*(p+i)@@ +j)); for(k=1;k<@@ row@@ ;k++) for(i=@@ k,@@ j=@@ col-1@@ ;i<@@ row@@ ;i++,j--) printf("%d\n",@@ *(*(p+i)@@ +j)); } }  
c -1
h -1
0

structbook { charnum[@@ 500]; chars[@@ 50]; structbook*next; }; voidmain() { structbook*@@ head; structbook*@@ p1,*p2; intm,@@ mi@@ ,@@ i,j,k,@@ max,@@ found@@ ; int@@ aut@@ [26]={0}; scanf("%d",&m); p1=(structbook@@ *)malloc(LEN); scanf("%s%s",@@ p1->@@ num,p1->@@ s); for(i=0;i<strlen(@@ p1->@@ s@@ );i++) aut@@ [@@ (@@ p1->@@ s)@@ [i]@@ -'A']++; p1->next=NULL; head=@@ p2=p1; for(@@ mi@@ =@@ 2;@@ mi@@ <=@@ m;@@ mi@@ ++) { p1=(structbook@@ *)malloc(LEN); scanf("%s%s",@@ p1->@@ num,p1->@@ s); for(i=0;i<strlen(@@ p1->@@ s@@ );i++) aut@@ [@@ (@@ p1->@@ s)@@ [i]@@ -'A']++; p2->next=p1; p2=p1; } p2->next=NULL; max=0; for(i=0;i<26;i++) if(@@ aut@@ [i]>max) { k=i; max=@@ aut@@ [i]; } printf("%c\n",@@ k@@ +65); printf("%d\n",@@ aut@@ [k]); p1=head; for(i=1;i<=m;i++) { found@@ =0; for(j=0;j<strlen(@@ p1->@@ s@@ );j++) if((@@ p1->@@ s)@@ [j]==@@ k@@ +65) { found@@ =1; break; } if(@@ found@@ ==1)@@ printf("%s\n",@@ p1->num); p1=p1->next; } }  
c -1
h -1
intmain() { inta[100][100@@ ]={0}; intk; intsum=0; inti,j,@@ l; intm,n; scanf("%d",&k); for(i=0;i<k;i++) { scanf("%d%d",&m,&n); if(n@@ ==1&&@@ m@@ ==1) { scanf("%d",&@@ sum); printf("%d",sum); sum=0; } else {@@ for(j=0;j<m;j++) { for(l=0;l<n;l++) { scanf("%d",@@ *(a@@ +j)+@@ l); } } for(l=0;l<n;l++) { sum=sum+*(@@ *(a+@@ 0@@ )+@@ l@@ )@@ +*(@@ *(a@@ +m-1)@@ +@@ l); } for(l=0;l<@@ m;@@ l++) { sum=sum+*(@@ *(a+@@ l@@ )+@@ 0)@@ +*(@@ *(a+@@ l@@ )+@@ n-1); } sum=sum@@ -*(@@ *(a+@@ 0@@ )+@@ 0)@@ -*(@@ *(a+@@ 0@@ )+@@ n-1)@@ -*(@@ *(a@@ +m-1)@@ +@@ 0)@@ -*(@@ *(a@@ +m-1)@@ +n-1); printf("%d\n",sum); sum=0; } } return0; }  
c -1
h -1
0

intmain(){ chara[@@ 50]; charb[@@ 256]; char@@ news@@ [50@@ ]; inti,@@ c,@@ wz@@ =@@ 500@@ ,@@ x=0,@@ d=0; char@@ st@@ [100],@@ en@@ [100]; scanf("%s",b); scanf("%s",a); scanf("%s",@@ news@@ ); for(i=0;i<@@ strlen(b@@ );i++){ x=0; if(a[0]@@ ==@@ b[i]@@ ){ for(c@@ =i+1@@ ;c@@ <@@ strlen(a)@@ +i@@ ;c@@ ++){ if(a[@@ c@@ -i@@ ]==@@ b[@@ c@@ ]){ x++; } } if(x==@@ strlen(a)@@ -1){ wz@@ =i; break; } } } if(@@ wz@@ !=@@ 500@@ ){ for(i=0;i<@@ wz@@ ;i++){ st@@ [i]=@@ b[i]; } st@@ [i]@@ ='\0'; for(i=@@ wz@@ +@@ strlen(a)@@ ;i<@@ strlen(b@@ );i++){ en@@ [i-@@ wz@@ -@@ strlen(a)@@ ]=b[i]; } en@@ [i-@@ wz@@ -@@ strlen(a)@@ ]='\0'; strcat(@@ st@@ ,@@ news@@ ); strcat(@@ st@@ ,@@ en@@ ); puts(@@ st@@ ); } elseif(@@ wz@@ ==@@ 500@@ ){ puts(@@ b); } return0; }  
c -1
h -1
int@@ aMaxLen@@ [@@ 35@@ ]; int@@ nTmp@@ ; intmain() { intk,@@ i; cin>>k; intb[@@ 25]; for(i=0;i<k;i++) cin>>b[i]; aMaxLen@@ [1]@@ =1; for(i=2;i<=@@ k;i++) { int@@ nTmp@@ =0; for(intj=1;j<@@ i;j++) { if(b[i]@@ <@@ b[j]) { if(@@ nTmp@@ <@@ aMaxLen@@ [j]) nTmp@@ =@@ aMaxLen@@ [j]; } } aMaxLen@@ [i]=@@ nTmp@@ +1; } int@@ nMax@@ =-1; for(i=1;i<=k;i++) if(@@ nMax@@ <@@ aMaxLen@@ [i]) nMax@@ =@@ aMaxLen@@ [i]; cout<<@@ nMax@@ <<endl; return0; }  
c -1
h -1
0

intsum@@ =1; voidf@@ (inti,int@@ j) { intk; if(i==1) sum++; else { for(k=j@@ ;k<=@@ i;k++) { if(i@@ %@@ k@@ ==0) f(@@ i@@ /@@ k,@@ k); } } } intmain(void) { inti,j,k; intn; inta; scanf("%d",&n); while(n--) { sum=1; scanf("%d",&a); for(i=2@@ ;i@@ *@@ i<=@@ a;i++) { if(a%i==0) { f(a@@ /i,i); } } printf("%d\n",sum); } return0; }  
c -1
h -1
intmain() { struct@@ pa { charID@@ [11]; intage; structpa@@ *next; }@@ *head,*@@ p1,*p2,*@@ p3@@ ,*@@ p4@@ ; int@@ tage@@ ; char@@ tID@@ [11]; intn,i,j; scanf("%d",&n); for(i=0;i<n;i++) { p1=(struct@@ pa@@ *)malloc(sizeof(struct@@ pa@@ )); if(i==0) head=p1; scanf("%s%d",p1->@@ ID@@ ,&p1->@@ age); if(i@@ !=0) p2->next=p1; p2=p1; } p1->next=NULL; p1=head; p2=p1->next; for(i=0;i<n;i++) { p3@@ =p1; p4@@ =p2; for(j=0;j<n-1;j++) { if(@@ p3@@ ->age@@ <@@ p4@@ ->age@@ &&@@ p4@@ ->age@@ >=60) { strcpy(@@ tID@@ ,@@ p3->@@ ID); tage@@ =@@ p3->@@ age; strcpy(@@ p3->@@ ID,@@ p4@@ ->@@ ID); p3@@ ->age=@@ p4@@ ->@@ age; strcpy(@@ p4@@ ->@@ ID,@@ tID@@ ); p4@@ ->age=@@ tage@@ ; } p3=@@ p3@@ ->next; p4@@ =@@ p4@@ ->next; } } p1=head; while(p1!=NULL) { printf("%s\n",@@ p1->@@ ID); p1=p1->next; } return0; }  
c -1
h -1
0

main() { intk,i,j,@@ max; scanf("%d",&k); int@@ height@@ [k]; intnum@@ [k]; for(i=0;i<k;i++) scanf("%d",&@@ height@@ [i]); num@@ [k-1]@@ =1; max=1; for(i=k-2;i>=0;i--) { num@@ [i]=0; for(j=@@ k-1@@ ;j>i;j--) { if(@@ height@@ [i]>=@@ height@@ [j]&&@@ num[i]@@ <@@ num@@ [j]) num[i]=@@ num@@ [j]; } num[i]=@@ num[i]@@ +1; if(num@@ [i]>max) max=@@ num[i]; } printf("%d\n",max); getchar(); getchar(); }  
c -1
h -1
inta[@@ 100000@@ ][@@ 3@@ ],@@ s[@@ 100000],@@ x=0,@@ y=0,@@ z@@ =0,@@ x1@@ =0,@@ y1@@ =0,@@ z1@@ =0; intmain() { intn,i,j; scanf("%d",&n); for(i=1;i<=n;i++) { for(j=0;j<3;j++) {@@ scanf("%d",&a[i]@@ [j]@@ );} s[i]=@@ a[i][1]@@ +@@ a[i]@@ [2]; } for(i=1;i<=n;i++) { if(s@@ [i]>@@ x) {@@ x=@@ s[i]; x1@@ =@@ a[i][0]@@ ;} } for(i=1;i<=n;i++) { if(s@@ [i]>@@ y@@ &&i!=@@ x1@@ ) {@@ y=@@ s[i]; y1@@ =@@ a[i][0]@@ ;} } for(i=1;i<=n;i++) { if(s@@ [i]>@@ z@@ &&i!=@@ x1@@ &&i!=@@ y1@@ ) {@@ z=@@ s[i]; z1@@ =@@ a[i][0]@@ ;} } printf("%d%d\n",@@ x1,@@ x); printf("%d%d\n",@@ y1,@@ y); printf("%d%d\n",@@ z1@@ ,@@ z); return0; }  
c -1
h -1
0

int@@ input@@ (int@@ [],int@@ ); int@@ sort@@ (int@@ [],int@@ ); voidcombine@@ (int@@ [],int@@ [],int@@ ,int); voidoutput@@ (int@@ [],int@@ ,int); intmain() { int@@ n1,n2; cin>>@@ n1@@ >>@@ n2; inta[100],b[100]; input@@ (a,@@ n1); input@@ (b,@@ n2); sort@@ (a,@@ n1); sort@@ (b,@@ n2); combine@@ (a,b,@@ n1,n2@@ ); return0; } int@@ input@@ (inta[],intn) { inti; for(i=0;i<n;i++) { cin>>a[i]; } return@@ a[i]; } int@@ sort@@ (inta[],intn) { inti,j,@@ p; for(i=1;i<n;i++) for(j=0;j<n-i;j++) { if(a[j]>a[j+1]) { p=@@ a[j]; a[j]=a[j+1]; a[j+1]=@@ p; } } return@@ a[j]; } voidcombine@@ (inta[],intb[],int@@ n1,int@@ n2) { intc[@@ 200]; inti; for(i=0;i<n1;i++) c[i]=a[i]; for(i=@@ n1@@ ;i<@@ n2@@ +@@ n1@@ ;i++) c[i]=b[i-@@ n1@@ ]; output@@ (c,@@ n1,n2@@ ); } voidoutput@@ (intc[],int@@ n1,int@@ n2) { inti; for(i=0;i<n1@@ +@@ n2@@ -1;i++) cout<<@@ c[i]@@ <<""; cout<<c[@@ n1+n2@@ -1]@@ <<endl; }  
c -1
h -1
structstu { charnum[@@ 15]; intchinese; intmath; intsum; structstu*next; }; intn; structstu*@@ creat@@ (void) { structstu@@ *head,*@@ p,*@@ g@@ ,*@@ h; inti,j; p=(struct@@ stu@@ *)malloc(LEN); scanf("%s%d%d",@@ (*p).@@ num,&@@ (*p).@@ chinese@@ ,&@@ (*p).@@ math); (*p).@@ sum=(@@ (*p).@@ chinese+@@ (*p).@@ math); for(i=0;;i++) { if(i@@ ==0){@@ head=@@ p@@ ;@@ (*p).@@ next@@ =NULL@@ ;} elseif(@@ i@@ <@@ 4) { for(@@ h=@@ head@@ ,j@@ =0;j<@@ i;j++) { if((@@ *p@@ ).@@ sum>@@ (*@@ h@@ ).@@ sum@@ )break; else{@@ g=@@ h@@ ;@@ h@@ =(@@ *@@ h@@ ).@@ next@@ ;} } if(j@@ ==0){@@ (*p).@@ next@@ =@@ head;@@ head=@@ p@@ ;} elseif(@@ j==@@ i@@ ){@@ (*@@ g@@ ).@@ next@@ =p@@ ;@@ (*p).@@ next@@ =NULL@@ ;} else{@@ (*@@ g@@ ).@@ next@@ =p@@ ;@@ (*p).@@ next@@ =@@ h@@ ;} } else { for(@@ h=@@ head@@ ,j@@ =0;j<@@ 3;j++) { if((@@ *p@@ ).@@ sum>@@ (*@@ h@@ ).@@ sum@@ )break; else{@@ g=@@ h@@ ;@@ h@@ =(@@ *@@ h@@ ).@@ next@@ ;} } if(j@@ ==0){@@ (*p).@@ next@@ =@@ head;@@ head=@@ p@@ ;} else{@@ (*@@ g@@ ).@@ next@@ =p@@ ;@@ (*p).@@ next@@ =@@ h@@ ;} } if(i==@@ n-1@@ )break; p=(struct@@ stu@@ *)malloc(LEN); scanf("%s%d%d",@@ (*p).@@ num,&@@ (*p).@@ chinese@@ ,&@@ (*p).@@ math); (*p).@@ sum=(@@ (*p).@@ chinese+@@ (*p).@@ math); } return(head); } voidprint(struct@@ stu@@ *head) { structstu@@ *p; inti; for(p=head@@ ,i@@ =0;i<@@ 3@@ ;i++,@@ p=@@ (*p).@@ next@@ ) printf("%s%d\n",@@ (*p).@@ num,@@ (*p).@@ sum); } voidmain() { structstu*@@ head; scanf("%d",&n); head=creat(); print(head); }  
c -1
h -1
0

intmain(intargc,char*argv[]) { ints[@@ 26@@ ]={0@@ ,@@ 0,0,0,0,0,0,0,0,@@ 0,0,0,0,0,0,0,0,@@ 0,0,0,0,0,0,0,0,@@ 0@@ }; structbook{ inta; charname@@ [27]; }; structbook@@ list@@ [999]; charc; intn,i,j,@@ b,@@ maxnum@@ =0,@@ max; scanf("%d",&n); for(i=0;i<n;i++){ scanf("%d%s",&@@ list@@ [i].@@ a,@@ list@@ [i].@@ name); for(j=0;@@ list@@ [i].name@@ [j]@@ !='\0';j++){ c=@@ list@@ [i].name@@ [j]; b=@@ c@@ -'A'; s[@@ b@@ ]++; } } for(i=0;i<26;i++){ if(s@@ [i]>@@ maxnum@@ ){ maxnum@@ =@@ s[i]; max=i; } } printf("%c\n%d\n",@@ 'A'+@@ max,@@ maxnum@@ ); for(i=0;i<n;i++){ for(j=0;@@ list@@ [i].name@@ [j]@@ !='\0';j++){ if(@@ list@@ [i].name@@ [j]@@ -'@@ A@@ '==@@ max@@ ){ printf("%d\n",@@ list@@ [i].@@ a); } } } return0; }  
c -1
h -1
intmain() { inta[@@ 101][101]; intn,k,@@ row,col,@@ i,j,@@ sum=0; cin>>n; for(k=1;k<=n;k++) { cin>>row>>col; for(i=1;i<=@@ row;i++) { for(j=1;j<=col;j++) { cin>>a[i][j]; } } for(j=1;j<=@@ col@@ ;j++)@@ sum=sum+@@ a[1]@@ [j]; for(i=2;i<=@@ row@@ ;i++)@@ sum=sum+@@ a[i][@@ col@@ ]; for(j=1;j<=@@ col-1@@ ;j++)@@ sum=sum+@@ a[@@ row@@ ]@@ [j]; for(i=2;i<=@@ row-1@@ ;i++)@@ sum=sum+@@ a[i]@@ [1]; cout<<sum<<endl; sum=0; } return0; }  
c -1
h -1
0

intleap@@ (int@@ n){ intleap@@ =0; if(n%@@ 400@@ ==0||@@ n@@ %100!=0@@ &&n@@ %@@ 4@@ ==0)@@ leap@@ =1; return(@@ leap@@ ); } intmain(){ intyear,month,day,@@ th@@ =0,@@ a[@@ 13]={0,31,28,31,30,31,30,31,31,30,31,30,31}; scanf("%d%d%d",&@@ year,@@ &@@ month,@@ &@@ day); if(leap@@ (year@@ )@@ ==1)@@ a[2]=@@ 29; for(inti=0;i<@@ month@@ ;i++)@@ th@@ =@@ th@@ +@@ a[i]; th@@ =@@ th@@ +day; printf("%d",@@ th@@ ); return(0); }  
c -1
h -1
intmain() { intn,i,j,@@ x1@@ =0,@@ x2,@@ y1@@ =0,@@ y2@@ ,@@ num,@@ s; scanf("%d",&n); for(i=0;i<n;i++) for(j=0;j<n;j++) { scanf("%d",&num); if(num@@ ==0) { if(@@ x1@@ ==0) x1@@ =i+1; x2=i; if(@@ y1@@ ==0) y1@@ =j+1; y2=j; } } s=(@@ x2-x1@@ )*(@@ y2-y1@@ ); printf("%d\n",s); return0; }  
c -1
h -1
0

intmain(){ inta,@@ m,n,@@ i,j,@@ b; intsz[@@ M@@ ][@@ N]; scanf("%d",&a); for(b@@ =1;@@ b@@ <=@@ a;@@ b++){ scanf("%d%d",&m,&n); for(i=0;i<m;i++){ for(j=0;j<n;j++){ scanf("%d",&sz[i][j]); } } int@@ e,@@ k,@@ h=0; for(e@@ =0;e@@ <m;@@ e@@ ++){ if(e@@ ==0){ for(k=0;k<n;k++){ h@@ +=@@ sz[@@ e@@ ][k@@ ]; } } if(e@@ ==@@ m-1@@ ){ for(k=0;k<n;k++){ h@@ +=@@ sz[@@ e@@ ][k@@ ]; } } } for(k=0;k<n;k++){ if(k==@@ n-1){ for(e@@ =1;@@ e@@ <m-1@@ ;@@ e@@ ++){ h@@ +=@@ sz[@@ e@@ ][k@@ ]; } } if(k@@ ==0){ for(e@@ =1;@@ e@@ <m-1@@ ;@@ e@@ ++){ h@@ +=@@ sz[@@ e@@ ][k@@ ]; } } } printf("%d\n",@@ h); } return0; }  
c -1
h -1
voidmain() { intn,i,j,@@ sum,@@ x,y,@@ f,@@ s; inta[100][100]; x=0; y=0; f=1; sum=0; scanf("%d",&n); for(i=1;i<=n;i++) { for(j=1;j<=n;j++) { scanf("%d",&a[i][j]); if(a[i][j]==0) { sum=sum+1; if(f@@ ==1) { x=x@@ +1; } } if((@@ sum@@ >0@@ )&&(@@ a[i]@@ [j]==@@ 255@@ )) { f=0; } } } y=@@ sum@@ /2@@ -@@ x; x=x@@ -2@@ ; s=@@ x@@ *@@ y; printf("%d\n",s); }  
c -1
h -1
0

intmain() { struct@@ Patient { int@@ flag; charid[10]; intage; }; struct@@ Patient@@ p@@ [100],@@ p2@@ [100],@@ temp; intn,i,@@ t=0,@@ k,@@ j; scanf("%d",&n); for(i=0;i<n;i++) { scanf("%s%d",&@@ p[i].@@ id,&@@ p[i].age); p[i].@@ flag=0; if(p@@ [i].age>=60) { t=t+1; p[i].@@ flag=1; } p2@@ [i]=@@ p[i]; } for(i=0;i<n-1;i++) { for(j=0;j<n-1-i;j++) if(p@@ [j].age@@ <p@@ [j+1@@ ].age) { temp=@@ p@@ [j]; p@@ [j]=@@ p@@ [j+1]; p@@ [j+1]=temp; } } for(i=0;i<t;i++) { printf("%s\n",@@ p@@ [i].id); } for(i=0;i<n;i++) { if(@@ p2@@ [i].@@ flag@@ ==0)@@ printf("%s\n",@@ p2@@ [i].id); } return0; }  
c -1
h -1
structstudent { intnum; intchinese; int@@ maths; structstudent*next; }; intn,@@ max0@@ ; structstudent*creat@@ (void) { structstudent*head,*p1,*p2; inti; p1=p2@@ =(structstudent*)malloc(sizeof(structstudent)); head=p1; for(i=1;i<n;i++) { scanf("%d%d%d",&p1->num,&p1->@@ chinese@@ ,&p1->@@ maths@@ ); p1@@ =(structstudent*)malloc(sizeof(structstudent)); p2->next=p1; p2=p1; } scanf("%d%d%d",&p1->num,&p1->@@ chinese@@ ,&p1->@@ maths@@ ); p2->next=p1; p1->next=NULL; returnhead; } void@@ max(@@ structstudent*head@@ ,int@@ x,int@@ y) { structstudent*@@ p1,*@@ temp@@ ,*@@ p2; temp@@ =(structstudent*)malloc(sizeof(structstudent)); temp->@@ chinese@@ =@@ temp->@@ maths@@ =0; for(@@ p2=@@ head;@@ p2@@ !=NULL;@@ p2=@@ p2->next@@ ) if(@@ p2->@@ chinese+@@ p2->@@ maths@@ ==@@ x@@ )break; for(p1=@@ head;@@ p1@@ !=NULL;@@ p1=p1->next) if((@@ p1->@@ chinese+@@ p1->@@ maths@@ >@@ temp->@@ chinese+@@ temp->@@ maths@@ )&&(@@ p1->@@ chinese+@@ p1->@@ maths@@ !=@@ x@@ ||@@ p1->@@ chinese+@@ p1->@@ maths@@ ==@@ x@@ &&@@ p1->num@@ !=@@ p2->@@ num@@ )&&(@@ p1->@@ chinese+@@ p1->@@ maths@@ !=@@ y@@ )) { temp->@@ chinese@@ =p1->@@ chinese; temp->@@ maths@@ =p1->@@ maths; temp->@@ num=@@ p1->@@ num; } max0@@ =@@ temp->@@ chinese+@@ temp->@@ maths; printf("%d%d\n",@@ temp@@ ->num,@@ max0@@ ); } main() { structstudent*head; int@@ max1,@@ max2; scanf("%d",&n); head=creat(); max(@@ head,@@ 0,@@ 0); max1=@@ max0@@ ; max(@@ head,@@ max1,@@ 0); max2=@@ max0@@ ; max(@@ head,@@ max1,@@ max2@@ ); }  
c -1
h -1
0

intmain() { intm,n,@@ t; scanf("%d%d",&m,&n); printf("\n"); inta[@@ m@@ ],b[@@ n@@ ],@@ i,j; for(i=0;i<m;i++)@@ scanf("%d",&a[i]); printf("\n"); for(i=0;i<n;i++)@@ scanf("%d",&b[i]); for(i=1;i<m;i++) for(j=0;j<m@@ -i;j++) if(a[j]>a[j+1@@ ]){@@ t=@@ a[j];a[j]=a[j+1];@@ a[j+1]=@@ t;} for(i=1;i<n;i++) for(j=0;j<n-i;j++) if(b[j]>b@@ [j+1]@@ ){@@ t=@@ b[j]@@ ;@@ b[j]=b@@ [j+1];@@ b[j+1]=@@ t;} printf("%d",a[0]); for(i=1;i<@@ m@@ ;i++)@@ printf("%d",a[i]); for(i=0;i<n;i++)@@ printf("%d",b[i]); }  
c -1
h -1
structstudent { intnum; int@@ score1@@ ; int@@ score2; int@@ score; }; voidmain() { intn; scanf("%d",&n); structstudentstu[100000]; structstudent@@ *p,*@@ p1,*@@ t1@@ ,*@@ t2@@ ,*@@ t3@@ ; int@@ tem@@ ,@@ tem1@@ ; for(p=@@ stu@@ ;p<@@ stu@@ +n;@@ p++) { scanf("%d%d%d",&@@ p->@@ num,&@@ p->@@ score1@@ ,&p->@@ score2); p->@@ score@@ =p->@@ score1@@ +p->@@ score2; } int@@ max; for(p=@@ stu@@ ,@@ t1@@ =stu@@ ,@@ max=@@ stu@@ ->score@@ ;p<@@ stu@@ +n;@@ p++) { if(p->@@ score@@ >max@@ ){@@ t1@@ =p@@ ;@@ max=@@ p->@@ score@@ ;} } for(p=@@ stu@@ ,@@ t2@@ =stu@@ ,@@ max=@@ stu@@ ->score@@ ;p<@@ stu@@ +n;@@ p++) { if(p==@@ t1@@ )continue; if(p->@@ score@@ >max@@ ){@@ t2@@ =p@@ ;@@ max=@@ p->@@ score@@ ;} } for(p=@@ stu@@ ,@@ t3@@ =stu@@ ,@@ max=@@ stu@@ ->score@@ ;p<@@ stu@@ +n;@@ p++) { if((@@ p@@ ==@@ t1@@ )||(@@ p@@ ==@@ t2@@ ))@@ continue; if(p->@@ score@@ >max@@ ){@@ t3@@ =p@@ ;@@ max=@@ p->@@ score@@ ;} } printf("%d%d\n",@@ t1@@ ->num,@@ t1@@ ->score@@ ); printf("%d%d\n",@@ t2@@ ->num,@@ t2@@ ->score@@ ); printf("%d%d\n",@@ t3@@ ->num,@@ t3@@ ->score@@ ); }  
c -1
h -1
0

structpatient { charname@@ [10]; intage; }@@ p@@ [100],@@ e,@@ old@@ [100],@@ young@@ [100]; intmain() { intn,i,j=0,@@ k=0,@@ o@@ =-1,@@ y@@ =-1; scanf("%d",&n); structpatient@@ p@@ [100],@@ old@@ [100],@@ young@@ [100]; for(i=0;i<n;i++){ scanf("%s%d",@@ p[i].@@ name@@ ,&@@ p[i].age); if((@@ p@@ [i].age@@ )@@ >=60){ o@@ ++; old@@ [j]=@@ p[i]; j++; }else{ y++; young@@ [k]=@@ p[i]; k++; } } for(i=@@ 120@@ ;i@@ >=60@@ ;i--){ for(j=0;j<@@ o@@ +1@@ ;j++){ if(old@@ [j].age@@ ==@@ i){ printf("%s\n",old@@ [j].@@ name); } } } for(i=0;i<@@ y@@ +1@@ ;i++){ printf("%s\n",@@ young@@ [i].@@ name); } return0; }  
c -1
h -1
voidmain() {@@ inta[@@ 20001@@ ]={0},@@ b[100@@ ]={0},@@ n,i,j,@@ m@@ =1,@@ flag=0; scanf("%d",&n); for(i=1;i<=@@ n;i++)@@ scanf("%d",&a[i]); printf("%d",@@ a[1]@@ );@@ b[1@@ ]=@@ a[1]; for(i=2;i<=n;i++) {@@ flag=0; for(j=1;j<=@@ m@@ ;j++){@@ if(a[i]==@@ b[j]@@ )@@ flag@@ =1;} if(flag@@ ==1)@@ continue; else{@@ m@@ ++;@@ b[m@@ ]=@@ a[i];@@ printf("%d",@@ a[i]);} } printf("\n"); }  
c -1
h -1
0

intmain(){ chara[@@ 300],b[@@ 300@@ ],c[@@ 300]; inti,j,@@ f,@@ d,@@ k=0; scanf("%s%s%s",a,b,c); d@@ =strlen(a); f@@ =strlen(c); for(i=0;i<d@@ ;i++){ if(a[i]==@@ b[0]@@ &&@@ a[i+1@@ ]==@@ b[1@@ ]@@ &&@@ a[i@@ +@@ 2@@ ]==@@ b[2@@ ]@@ &&@@ a[i@@ +@@ 3@@ ]==@@ b[@@ 3@@ ]){ for(j=i;j<i+@@ f@@ ;j++){ a[j]=@@ c@@ [k]; k++; } break; } } printf("%s",a); return0; }  
c -1
h -1
intmain() { inta[@@ 150@@ ]={0},@@ i,j,k,@@ num; for(;;) { num=0; for(i=0;;i++) { cin>>a[i]; if(a[i]==0)break; } for(j=0;j<i;j++) { for(k=0;k<i;k++) { if(a[j]==2*@@ a[k]) { num++; } } } if(a[0]@@ !=-1) { cout<<num<<endl; } elsebreak; } return0; }  
c -1
h -1
0

int@@ n1,n2,@@ a1@@ [@@ 10000],@@ a2@@ [@@ 10000],@@ a3@@ [@@ 20000]; voidinput@@ (void) { cin>>@@ n1@@ >>@@ n2; for(inti=0;i<@@ n1@@ ;i++) { cin>>@@ a1@@ [i]; } for(inti=0;i<@@ n2;i++) { cin>>@@ a2@@ [i]; } } voidsort@@ (void) { for(inti=0;i<@@ n1@@ -1;i++) { for(intj=0;j<@@ n1@@ -i-1;j++) { if(@@ a1@@ [j]>@@ a1@@ [j+1]) { int@@ temp=@@ a1@@ [j+1]; a1@@ [j+1]=@@ a1@@ [j]; a1@@ [j]=temp; } } } for(inti=0;i<@@ n2@@ -1;i++) { for(intj=0;j<@@ n2@@ -i-1;j++) { if(@@ a2@@ [j]>@@ a2@@ [j+1]) { int@@ temp=@@ a2@@ [j+1]; a2@@ [j+1]=@@ a2@@ [j]; a2@@ [j]=temp; } } } } void@@ joint@@ (void) { for(inti=0;i<@@ n1@@ ;i++) { a3@@ [i]=@@ a1@@ [i]; } for(inti=0;i<@@ n2;i++) { a3@@ [@@ n1@@ +i]=@@ a2@@ [i]; } } void@@ display@@ (void) { cout<<@@ a3@@ [0]; for(inti=1;i<@@ n1+@@ n2;i++) { cout<<'@@ '@@ <<@@ a3@@ [i]; } cout<<endl; } intmain() { input(); sort@@ (); joint@@ (); display@@ (); return0; }  
c -1
h -1
intmain() { intn,a[@@ 20000],@@ t; cin>>n; for(inti=0;i<n;i++) cin>>a[i]; cout<<a[0]; for(inti=1;i<@@ n;i++) { t=0; for(intj=0;j<i;j++) { if(a[j]==@@ a[i]@@ &&j@@ !=@@ i) t@@ +=1; } if(t@@ >=@@ 1) continue; elseif(@@ t@@ ==0) cout<<""<<a[i]; } return0; }  
c -1
h -1
0

voidmain() { intn,k; int@@ arr@@ [@@ 1001]; inti,j,@@ bb@@ ; scanf("%d%d",&n,&k); for(i=0;i<n;i++) { scanf("%d",&@@ arr@@ [i]); } for(i=0;i<n-1;i++) { bb@@ =@@ k-@@ arr@@ [i]; for(j=i+1;j<n;j++) { if(@@ bb@@ ==@@ arr@@ [j]) { printf("yes\n"); return0; } } } if(i==@@ n-1)@@ printf("no\n"); }  
c -1
h -1
intmain() { inta[@@ 20000],@@ i,j,k,@@ m=0,@@ n,@@ b=0,@@ c=1; scanf("%d",&n); k=@@ n; for(i=0;i<n-1;i++) { scanf("%d",&a[i]); } scanf("%d",&a[i]); for(i=0;i<n;i++) { for(j=0;j<i;j++) { if(a[j]==a[i]) { a[i]=0; k@@ -=@@ 1; break; } } } for(i=0;i<n;i++) { if(a[i]@@ !=0&&@@ c@@ <@@ k) { printf("%d",a[i]); c@@ +=1; } else { if(a[i]@@ !=0&&@@ c@@ ==k) { printf("%d",a[i]); } } } return0; }  
c -1
h -1
0

int@@ search@@ (@@ chara[@@ ],@@ charb[@@ ]) { int@@ la@@ =strlen(@@ a)@@ ,lb@@ =strlen(@@ b@@ ),@@ i,j; for(i=0;i<=@@ lb@@ -@@ la;i++) { for(j=0;j<@@ la@@ ;j++) if(a[j]!=@@ b@@ [i+j@@ ]) break; if(j==@@ la@@ ) return@@ i; } return@@ 999@@ ; } intmain() { chars[@@ 300],@@ a[@@ 300],b[@@ 300]; intm,@@ i; scanf("%s@@ %s%s",&@@ s@@ ,&@@ a,&b); m=@@ search@@ (a,@@ s); if(m==@@ 999@@ ) { printf("%s\n",@@ s); getchar(); getchar(); return0; } for(i=0;i<m;i++) printf("%c",s[i]); printf("%s",@@ b); for(i@@ +=@@ strlen(a)@@ ;i<@@ strlen(@@ s@@ );i++) printf("%c",s[i]); getchar(); getchar(); return0; }  
c -1
h -1
intn,m; inta[@@ 1000],b[1000],@@ c[@@ 2000]; voidread@@ (){ inti; scanf("%d%d",&@@ n,@@ &@@ m); for(i=0;i<n@@ ;++i) scanf("%d",a@@ +i); for(i=0;i<m@@ ;++i) scanf("%d",@@ b@@ +i); } int@@ cmp@@ (constvoid*a,constvoid*@@ b){ return@@ *(@@ (int*)@@ a)@@ -@@ *(@@ (int*)@@ b); } voidsort@@ (){ qsort@@ (a,n,@@ sizeof(int),@@ cmp@@ ); qsort@@ (b,@@ m,@@ sizeof(int),@@ cmp@@ ); } void@@ merge@@ (){ inti; for(i=0;i<n@@ ;++i) c[i]=a[i]; for(i=0;i<m@@ ;++i) c[@@ n@@ +i]=b[i]; } voidoutput@@ (){ inti; printf("%d",c@@ [0]); for(i=1;i<@@ n+@@ m;@@ ++@@ i) printf("%d",c[i]); } intmain(){ read(); sort@@ (); merge@@ (); output@@ (); return0; }  
c -1
h -1
0

voidmain() { int@@ s=0,@@ n,i,j,@@ b[@@ 26]={0},@@ t,@@ x,@@ m,@@ q; chara[@@ 1000][@@ 27]; scanf("%d\n",&n); for(i=0;i<n;i++) { gets(@@ a[i]); } for(i=0;i<n;i++) { t@@ =strlen(@@ a[i]); for(j=@@ 4@@ ;j<@@ t;j++) { x=@@ a[i][j]; b[@@ x@@ -65@@ ]=@@ b[@@ x@@ -65@@ ]+1; } } for(i=0;i<26;i++) { if(b[i]>@@ s) {@@ s=@@ b[i]@@ ;x@@ =i;} } printf("%c\n",@@ x@@ +65); printf("%d\n",s); for(i=0;i<n;i++) { t@@ =strlen(@@ a[i]); for(j=@@ 4@@ ;j<@@ t;j++) { m=@@ a[i][j]; if(m==@@ x@@ +65) { for(q=0;q@@ <@@ 2@@ ;q++) {@@ printf("%c",@@ a[i][@@ q@@ ]@@ );} printf("%c\n",@@ a[i]@@ [2@@ ]); } } } }  
c -1
h -1
intmain() { chars[256],@@ sub[256],@@ re@@ [256]; inti,j,k; gets(s); gets(sub); gets(@@ re); for(i=0;i<strlen(@@ s@@ );i++) { for(j=i;j<@@ strlen(@@ sub)@@ +i@@ ;j++) { if(s@@ [j]!=@@ sub@@ [j-i@@ ]@@ )break; if(j==@@ strlen(@@ sub)@@ +i@@ -1) { for(k=j@@ ;k@@ >=i@@ ;k--) s@@ [k]=@@ re@@ [k-i@@ ]; } } if(j==@@ strlen(@@ sub)@@ +i)@@ break; } printf("%s",s); return0; }  
c -1
h -1
0

int@@ answer@@ =0; voidf@@ (intn,int@@ N@@ ){ if(n@@ <@@ N@@ ) N@@ =@@ n; if(N@@ ==1){ answer@@ ++; return; } while(@@ N@@ >1@@ ){ if(n%@@ N@@ ==0) f(@@ n/@@ N@@ ,@@ N); N@@ --; } } intmain() { intn,@@ a; cin>>n; for(inti=0;i<n;i++) { cin>>a; f(a,@@ a); cout<<@@ answer@@ <<endl; answer@@ =0; } return0; }  
c -1
h -1
intmain(){ intsz@@ [100][@@ 16],@@ m,n; inti,j,k; for(i=0;i<@@ 100@@ ;i++){ for(j=0;j<@@ 16@@ ;j++){ scanf("%d",&m); if(m@@ !=0){ sz@@ [i][j]=@@ m; }else{@@ break;} } if(sz[i]@@ [0]==@@ -1){ break;} } n=0; for(i=0;i<@@ 100@@ ;i++){ if(sz[i]@@ [0]==@@ -1){ break;} for(j=0;j<@@ 15@@ ;j++){ for(k=0;k<@@ 15@@ ;k++){ if(sz@@ [i][j]@@ !=0&&@@ sz[i]@@ [k]@@ !=0){ if(sz@@ [i][j]==@@ 2*@@ sz[i]@@ [k]@@ ){ n=n+1; }@@ }}} printf("%d\n",n); n=0; } return0; }  
c -1
h -1
0

intmain(){ structbook{ intnum; charname[26]; }; intn,i,j,a[@@ 26]={0},@@ len@@ [1000],@@ k,@@ max=0; structbook@@ list@@ [1000]; scanf("%d",&n); for(i=0;i<n;i++){ scanf("%d",&@@ list@@ [i].num); scanf("%s",@@ list@@ [i].@@ name); len@@ [i]@@ =strlen(@@ list@@ [i].@@ name); } for(i=0;i<26;i++){ for(j=0;j<n;j++){ for(k=0;k<@@ len@@ [j]@@ ;k++){ if(@@ list@@ [j].@@ name@@ [k]==@@ i@@ +65@@ ){ a[i]@@ ++; break; } } } } for(i=0;i<26;i++){ if(a[i]@@ >max){ max=a[i]; k=i; } } printf("%c\n",@@ k@@ +65); printf("%d\n",max); for(i=0;i<n;i++){ for(j=0;j<len@@ [i]@@ ;j++){ if(@@ list@@ [i].name@@ [j]==@@ k@@ +65@@ ){ printf("%d\n",@@ list@@ [i].num); } } } return0; }  
c -1
h -1
main() { intn,i,@@ a[1000],@@ e@@ [1000],@@ t,@@ b,@@ k,@@ j,@@ d; charstr@@ [1000][1000]; scanf("%d",&n); for(i=1;i<=n;i++) { scanf("%s%d",@@ str@@ [i],&@@ a[i]); } b=0; for(i=1;i<=n;i++) { if(a[i]@@ >=60) {@@ b++; } } t=@@ b; for(i=1;i<=n;i++) { if(a[i]@@ <60) {@@ b++; e@@ [b@@ ]=@@ i@@ ;} } k=0; for(j=@@ 100@@ ;j@@ >=60@@ ;j--) { for(i=1;i<=n;i++) { if(a[i]==@@ j) {@@ k++; e@@ [k]=@@ i@@ ;} } } for(i=1;i<=n;i++) {@@ j=@@ e@@ [i]; if(i==1) printf("%s",@@ str@@ [j]); else printf("\n@@ %s",@@ str@@ [j]); } getchar(); getchar(); }  
c -1
h -1
0

int@@ src@@ [@@ 20000]; int@@ dst@@ [100]; intmain() { intn,i,j,@@ flag; int@@ current_pos@@ =0; cin>>n; for(i=0;i<n;i++)@@ cin>>@@ src@@ [i]; for(i=0;i<n;i++) { if(@@ current_pos@@ ) { flag=1; for(j=0;j<@@ current_pos@@ ;j++) { if(@@ dst@@ [j]==@@ src@@ [i])@@ flag=0; } if(flag==1) { dst@@ [@@ current_pos@@ ]=@@ src@@ [i]; current_pos@@ ++; } } else { dst@@ [0]=@@ src@@ [0]; current_pos@@ ++; } } for(i=0;i<@@ current_pos@@ ;i++){ cout<<@@ dst@@ [i]; if(i<@@ current_pos@@ -1)@@ cout<<"@@ "; } cout<<endl; return0; }  
c -1
h -1
intmain() { inta[@@ 20001@@ ]={0}; intn,i,j,k; cin>>n; for(i=0;i<n;i++) cin>>a[i]; for(i=0;i<n-1;i++) for(j=i+1;j<n;j++) if(a[j]==a[i]) {@@ for(k=j@@ ;k<@@ n-1;k++) a[k]=a[k@@ +1]; j=j-1; n=@@ n-1; } for(i=0;i<n-1;i++) cout<<a[i]<<""; cout<<a[@@ n-1@@ ]<<endl; return0; }  
c -1
h -1
1


intmain() { intm,@@ n@@ ,*@@ p,*@@ p0@@ ,i; scanf("%d%d",&m,&n); p=@@ (int*)@@ calloc@@ (m@@ *@@ n,@@ sizeof(int@@ )); p0@@ =p; for(p=@@ p0@@ ;p<@@ p0@@ +m@@ *@@ n;@@ p++){ scanf("%d",@@ p); } if(m@@ <@@ n){ for(p=@@ p0@@ ;p<@@ p0@@ +m@@ ;p++){ for(i=0;i<p@@ -@@ p0@@ +1@@ ;i++){ printf("%d\n",*(p@@ +i@@ *(@@ n-1)@@ )); } } for(p=@@ p0@@ +m@@ ;p<@@ p0@@ +@@ n-1@@ ;p++){ for(i=0;i<m;i++){ printf("%d\n",*(p@@ +i@@ *(@@ n-1)@@ )); } } for(p=@@ p0@@ +@@ n-1@@ ;p<@@ p0@@ +m@@ *@@ n;@@ p@@ +=@@ n){ for(i=0;i<m@@ -@@ (p@@ -@@ p0@@ )@@ /@@ n;i++){ printf("%d\n",*(p@@ +i@@ *(@@ n-1)@@ )); } } } if(m==@@ n){ for(p=@@ p0@@ ;p<@@ p0@@ +@@ n-1@@ ;p++){ for(i=0;i<p@@ -@@ p0@@ +1@@ ;i++){ printf("%d\n",*(p@@ +i@@ *(@@ n-1)@@ )); } } for(p=@@ p0@@ +@@ n-1@@ ;p<@@ p0@@ +m@@ *@@ n;@@ p@@ +=@@ n){ for(i=0;i<m@@ +1@@ -@@ (p@@ -@@ p0@@ +1)@@ /@@ n;i++){ printf("%d\n",*(p@@ +i@@ *(@@ n-1)@@ )); } } } if(m@@ >n){ for(p=@@ p0@@ ;p<@@ p0@@ +@@ n-1@@ ;p++){ for(i=0;i<p@@ -@@ p0@@ +1@@ ;i++){ printf("%d\n",*(p@@ +i@@ *(@@ n-1)@@ )); } } for(p=@@ p0@@ +@@ n-1@@ ;p<=@@ p0@@ +@@ (m@@ -n@@ +1)@@ *@@ n-1@@ ;p@@ +=@@ n){ for(i=0;i<n;i++){ printf("%d\n",*(p@@ +i@@ *(@@ n-1)@@ )); } } for(p=@@ p0@@ +@@ (m@@ -@@ n+@@ 2)@@ *@@ n-1@@ ;p<=@@ p0@@ +m@@ *@@ n-1@@ ;p@@ +=@@ n){ for(i=0;i<m@@ -@@ (p@@ -@@ p0@@ +1)@@ /@@ n+1@@ ;i++){ printf("%d\n",*(p@@ +i@@ *(@@ n-1)@@ )); } } } }  
c -1
h -1
intmain() { intk,@@ height@@ [25],@@ maxC@@ [25@@ ]={0},@@ j,@@ i,@@ max=0; scanf("%d",&k); for(i=0;i<k;i++) { scanf("%d",&@@ height@@ [i]); for(j=0@@ ,@@ max@@ =0;j<@@ i;j++) { if(@@ height@@ [j]>=@@ height@@ [i]) if(@@ maxC@@ [j]@@ >max) max=@@ maxC@@ [j]; } if(max@@ ==0)@@ maxC@@ [i]=1; else@@ maxC@@ [i]=@@ ++@@ max; } for(i=1@@ ,@@ max@@ =0;i<@@ k;i++) if(@@ maxC@@ [i]>max) max=@@ maxC@@ [i]; printf("%d\n",max); return0; }  
c -1
h -1
0

intmain() { intnumber@@ [@@ 16@@ ]={0}; intm,@@ i=1; while(m@@ !=-1) { do { cin>>m; number@@ [i]=@@ m; i++; }while(@@ m@@ !=0&&@@ m@@ !=-1); int@@ k@@ =1,@@ t@@ ,j@@ =0; for(k=1;k<=@@ i-1;k++) { t=@@ number@@ [k]; intp; for(p=1@@ ;p@@ <=i@@ -1@@ ;p++) { if(t==@@ 2*@@ number@@ [p@@ ]) { j++; } elsecontinue; } } if(m@@ !=-1) { cout<<@@ j@@ -1@@ <<endl; } elsebreak; i=1; j=0; } return0; }  
c -1
h -1
intmain() {@@ inta,b,@@ c,d,@@ e,@@ s[@@ 20000],@@ ct@@ =0; scanf("%d",&a); for(b@@ =1;@@ b@@ <=@@ a;@@ b++) {scanf("%d",&@@ c@@ );@@ s[@@ b@@ ]=@@ c;@@ d=0; for(e@@ =1;@@ e@@ <=@@ b@@ -1;@@ e@@ ++@@ ){@@ if(s[@@ b@@ ]==@@ s[@@ e@@ ])@@ d=1; }@@ if(d@@ ==0){ if(@@ ct@@ ==1)@@ printf("@@ ");@@ printf("%d",@@ s[@@ b@@ ]@@ );@@ ct@@ =1;} }@@ return@@ 100@@ ;}  
c -1
h -1
0

main() { intnum; scanf("%d",&num); inti; for(i=0;i<num;i++) { intm,n; scanf("%d%d",&m,&n); inta[@@ m@@ ][n]; for(intj=0;j<m;j++) for(int@@ h@@ =0;h@@ <n;@@ h++) scanf("%d",&a[j]@@ [h@@ ]); intsum=0; for(intj=0;j<n;j++) sum+=@@ a[0][j]; for(intj=1;j<@@ m;j++) sum+=@@ a[j]@@ [0]; for(intj=1@@ ;j<n;j++) sum+=@@ a[m-1][j]; for(intj=1;j<@@ m-1;j++) sum+=@@ a[j]@@ [n-1]; printf("%d\n",sum); } getchar(); getchar(); }  
c -1
h -1
intmain() { intnum[@@ 101],@@ number,@@ i,j,@@ count=0; while(1) { cin>>@@ number; if(@@ number@@ ==-1) break; for(i=1;;i++) { num[@@ 0]=@@ number; cin>>num[i]; for(j=0;j<i;j++) { if(num@@ [j]>@@ num[i]@@ &&@@ num@@ [j]==@@ (@@ num[i]@@ *2@@ )) count++; if(num@@ [i]>@@ num[j]@@ &&@@ num@@ [i]==@@ (@@ num[j]@@ *2@@ )) count++; } if(num@@ [i]==0) break; } cout<<count<<endl; count=0; } return0; }  
c -1
h -1
0

inta[100][100],@@ col,@@ row; voidmain() { inti,j,k; scanf("%d%d",&@@ row,@@ &@@ col); for(i=0;i<row;i++) { for(j=0;j<col;j++) { scanf("%d",&a[i][j]); }; }; if(col@@ >=@@ row) { for(k=0;k<=@@ row@@ -1;k++) { for(i=0;i<=@@ k;i++) { printf("%d\n",a[i]@@ [k-i]); }; }; for(k=@@ row@@ ;k<=@@ col-1@@ ;k++) { for(i=0;i<=@@ row-1;i++) { printf("%d\n",a[i]@@ [k-i]); }; }; for(k=@@ col@@ ;k<=@@ row+col-2@@ ;k++) { for(i=k@@ -col@@ +1;i<=@@ row-1;i++) { printf("%d\n",a[i]@@ [k-i]); }; }; }; if(row@@ >@@ col) { for(k=0;k<=@@ col-1@@ ;k++) { for(i=0;i<=@@ k;i++) { printf("%d\n",a[i]@@ [k-i]); }; }; for(k=@@ col@@ ;k<=@@ row@@ -1;k++) { for(i=k@@ -col@@ +1;i<=@@ k;i++) { printf("%d\n",a[i]@@ [k-i]); }; }; for(k=@@ row@@ ;k<=@@ row+col-2@@ ;k++) { for(i=k@@ -col@@ +1;i<=@@ row-1;i++) { printf("%d\n",a[i]@@ [k-i]); }; }; }; }  
c -1
h -1
void@@ duqu@@ (inta[],intb[],int@@ M@@ ,int@@ N@@ ) { inti; for(i=0;i<@@ M@@ ;i++) scanf("%d",&a[i]); for(i=0;i<N;i++) scanf("%d",&b[i]); } voidpaixu@@ (inta[],intb[],int@@ M@@ ,int@@ N@@ ) { inti=0,j=0,@@ temp; for(i=0;i<@@ M@@ ;i++) for(j=i;j<@@ M@@ ;j++) { if(a[j]@@ <@@ a[i]) { temp=a[j]; a[j]=@@ a[i]; a[i]=@@ temp; } } for(i=0;i<N;i++) for(j=i;j<@@ N@@ ;j++) { if(b[j]@@ <@@ b[i]) { temp=@@ b[j]; b[j]=@@ b[i]; b[i]=@@ temp; } } } voidhebing@@ (inta[],intb[],int@@ c[@@ ],int@@ M@@ ,int@@ N@@ ) { inti; for(i=0;i<@@ M@@ ;i++) c[i]=a[i]; for(i=@@ M@@ ;i<@@ M@@ +@@ N;i++) c[i]=b[i-@@ M@@ ]; } voidshuchu@@ (int@@ C@@ [],int@@ M@@ ,int@@ N@@ ) { inti; for(i=0;i<@@ M@@ +@@ N@@ -1;i++) printf("%d",@@ C@@ [i]); printf("%d",@@ C@@ [@@ M@@ +@@ N@@ -1]); } intmain() { intm,n; int@@ a1@@ [100],@@ a2@@ [100],@@ a3@@ [100]={0}; scanf("%d%d",&m,&n); duqu@@ (@@ a1,a2,@@ m,n); paixu(@@ a1,a2,@@ m,n); hebing@@ (@@ a1,a2,@@ a3@@ ,@@ m,n); shuchu@@ (@@ a3@@ ,@@ m,n); return0; }  
c -1
h -1
0

intn; inta[100@@ ]={0}; intmax@@ [100]={0}; main() { inti,j,@@ c; scanf("%d",&n); for(i=1;i<=n;i++) scanf("%d",&a[i]); for(i=1;i<=n;i++) { if(i==1) max@@ [i]=1; else { for(j=1@@ ,@@ c@@ =0;j<=@@ i-1;j++) { if(a[j]@@ <@@ a[i]); else { if(c@@ <@@ max@@ [j]) c=@@ max@@ [j]; } } max@@ [i]=@@ c@@ +1; } } for(i=1@@ ,@@ c=@@ max@@ [1]@@ ;i<=n;i++) { if(c@@ <@@ max@@ [i]) c=@@ max@@ [i]; } printf("%d",@@ c); }  
c -1
h -1
char@@ f@@ (int@@ max,@@ inta[@@ ],@@ char@@ m,@@ char@@ n) { char@@ num1,num2@@ ; if(m==@@ n@@ &&@@ a[@@ n-1@@ ]<=@@ max) return(1); elseif(m==@@ n@@ &&@@ a[@@ n-1@@ ]@@ >max) return(0); else { if(a[m@@ -1]@@ <=@@ max) { num1@@ =@@ f(@@ max,@@ a,@@ m@@ +1,@@ n); num2@@ =@@ f(@@ a[@@ m-1@@ ],@@ a,@@ m@@ +1,@@ n)@@ +1; if(@@ num1@@ >@@ num2@@ ) return(@@ num1@@ ); else return(@@ num2@@ ); } else return(@@ f(@@ max,@@ a,@@ m@@ +1,@@ n@@ )); } } voidmain() { int@@ hmax@@ =(@@ unsigned@@ )@@ (@@ ~@@ 0)@@ >>@@ 1; inth@@ [N]; char@@ n,@@ i; scanf("%d",&n); for(i=0;i<n;i++) scanf("%d",&h[i]); printf("%d\n",@@ f(@@ hmax@@ ,@@ h,@@ 1,@@ n@@ )); printf("@@ input@@ :\@@ n@@ "); for(i=0;i<n;i++) printf("%d@@ ,"@@ ,@@ h[i]); }  
c -1
h -1
1


intmain(){ intn=0,@@ i,@@ l; double@@ k; chara[500],b[500]; scanf("%lf",&@@ k); scanf("%s\n@@ %s",&@@ a,&b); if(strlen(a)!=strlen(b@@ )){@@ printf("error");} else{@@ l@@ =strlen(a); for(i=0;i<l;i++){ if(!@@ (@@ a[i]==@@ 65@@ ||@@ a[i]==@@ 67@@ ||@@ a[i]==@@ 71@@ ||@@ a[i]==@@ 84@@ )||@@ !@@ (@@ b[i]@@ ==@@ 65@@ ||@@ b[i]@@ ==@@ 67@@ ||@@ b[i]@@ ==@@ 71@@ ||@@ b[i]@@ ==@@ 84@@ )){ printf("error@@ "@@ );break; }else{ if(a[i]==b[i]@@ ){@@ n=@@ n@@ +1;} if(i==@@ l@@ -1){ if(1.0*@@ n/@@ l@@ >=@@ k){@@ printf("yes");@@ }@@ else{printf("no");} } } } } return0; }  
c -1
h -1
intmain() { intn,i,j,a[@@ 101][@@ 101],@@ p,q,@@ l,@@ m; cin>>n; for(i=1;i<=n;i++) { for(j=1;j<=n;j++) { cin>>a[i][j]; if(a[i][j]==0) { p@@ =i;@@ q@@ =j; } } } for(i=1;i<=@@ p@@ ;i++) { for(j=1;j<=@@ q@@ ;j++) { if(a[i][j]==0) { l@@ =i@@ ;m@@ =j@@ ;i@@ =p; break; } } } j@@ =(@@ p@@ -l@@ -1)*(@@ q@@ -@@ m-1@@ ); cout<<@@ j; return0; }  
c -1
h -1
0

intmain() { long@@ n,@@ i; int@@ high@@ [4@@ ]={0}; long@@ higher@@ [4@@ ]; structstudent { long@@ num; intyuwen; intshuxue; inttotal; }stu[100000]; scanf("%d",&n); for(i=1;i<=n;i++) { scanf("%d%d%d",&stu[i].num,&stu[i].@@ yuwen@@ ,&stu[i].@@ shuxue); stu[i].@@ total=@@ stu[i].@@ yuwen+stu[i].@@ shuxue; if(stu[i].@@ total>@@ high@@ [1@@ ]) { high@@ [1]=@@ stu[i].@@ total; higher@@ [1]=@@ i; } } for(i=1;i<=n;i++) if(stu[i].@@ total@@ <=@@ high@@ [1]@@ &&stu[i].@@ total>@@ high@@ [2]@@ &&i!=@@ higher@@ [1@@ ]) { high@@ [2]=@@ stu[i].@@ total; higher@@ [2]=@@ i; } for(i=1;i<=n;i++) if(stu[i].@@ total@@ <=@@ high@@ [2]@@ &&stu[i].@@ total>@@ high@@ [3@@ ]@@ &&i!=@@ higher@@ [1]@@ &&i!=@@ higher@@ [2@@ ]) { high@@ [3@@ ]=@@ stu[i].@@ total; higher@@ [3@@ ]=i; } for(i=1;i<@@ 4;i++) printf("%d%d\n",@@ higher@@ [i],@@ high@@ [i]); }  
c -1
h -1
intmain() { intn,i,j,@@ t1@@ ,@@ t2@@ ,@@ t3@@ ,@@ t4@@ ,@@ s; int@@ c@@ [100][100]; scanf("%d",&n); for(i=1;i<=n;i++){ for(j=1;j<=n;j++) scanf("%d",&@@ c@@ [i][j]); } for(i=1;i<=n;i++){ for(j=1;j<=n;j++){ if(c@@ [i][j]==0){ t1@@ =i; t2@@ =j; goto@@ ask@@ ; } } } ask@@ : for(i=n@@ ;i>0@@ ;i--){ for(j=n@@ ;j>0@@ ;j--){ if(c@@ [i][j]==0){ t3@@ =i; t4@@ =j; goto@@ que@@ ; } } } que@@ : s=(@@ t4@@ -@@ t2@@ -1)*(@@ t3@@ -@@ t1@@ -1); printf("%d",s); return0; }  
c -1
h -1
0

intmain() { inta[100][100],@@ k,@@ n,@@ m; cin>>k; for(inti=0;i<k;i++) { intsum=0; cin>>m>>n; for(intj=0;j<m;j++) for(intk=0;k<@@ n;k++) cin>>a[j]@@ [k]; int*p=@@ a[0]; for(@@ ;p<@@ a[0]@@ +n;@@ p++) sum+=@@ *p; if(m==1) { cout<<sum<<endl; continue; } p=@@ a[@@ m-1@@ ]; for(@@ ;p<@@ a[m-1]@@ +n;@@ p++) sum+=@@ *p; int@@ (*@@ q@@ )@@ [100@@ ]=@@ a@@ +1; for(@@ ;q@@ <=@@ a+@@ m@@ -2@@ ;q++) sum+=@@ **@@ q@@ +@@ *(@@ (*@@ q@@ )+@@ n-1); if(n==1) { cout<<(@@ sum@@ -@@ a[0][0]@@ -@@ a[@@ m-1@@ ][0]@@ )@@ /2@@ +@@ a[0][0]@@ +@@ a[m-1][@@ 0]; continue; } cout<<sum<<endl; } return0; }  
c -1
h -1
main() { intyear,month,day,@@ leap@@ ,@@ sum=0; inta[@@ 12@@ ],@@ i,j; scanf("%d",&@@ year@@ ); scanf("%d",&@@ month@@ ); scanf("%d",&@@ day); if((year%4==0&&year%100!=0)||(year%400==0)) leap@@ =1; else leap@@ =0; a[0]=@@ 31@@ ;@@ a[2@@ ]=31;a[@@ 3@@ ]=30@@ ;a[@@ 4@@ ]=31;a[@@ 5@@ ]=30@@ ;a[@@ 6@@ ]=31;a[@@ 7@@ ]=31;a[@@ 8@@ ]=30@@ ;a[@@ 9@@ ]=31;a[@@ 10@@ ]=30@@ ;a[@@ 11@@ ]=31; if(leap@@ ==1) a[1]=29; else@@ a[1]=@@ 28; for(i=0;i<@@ 12@@ ;i++) { if(month==@@ i@@ +1) { for(j=0;j<i;j++) sum+=@@ a[j]; sum+=@@ day; break; } } printf("%d",sum); getchar(); getchar(); }  
c -1
h -1
0

voidmain() { struct@@ p { charnum[@@ 11]; intage; }; struct@@ p@@ c[@@ 101]; intn,i,@@ t=0,@@ s,@@ h,@@ l=0; inta[100],b[100],@@ d@@ [100]={0}; scanf("%d",&n); for(i=0;i<n;i++) scanf("%s%d",@@ c@@ [i].num,&@@ c@@ [i].age); for(i=0;i<n;i++) { if(c@@ [i].age>=60) { a[t@@ ]=@@ c@@ [i].age; c@@ [i].age@@ =0; b[t@@ ]=i; t++; } } if(t@@ >0) { leap@@ : s=@@ a[0]; h=0; for(i=0;i<t;i++) { if(a[i]>@@ s) { s=@@ a[i]; h@@ =i; } } printf("%s\n",@@ c[@@ b[@@ h@@ ]@@ ].@@ num); l++; a[h@@ ]=0; if(@@ l<@@ t) goto@@ leap@@ ; } for(i=0;i<n;i++) { if(c@@ [i].age@@ !=0) printf("%s\n",@@ c@@ [i].num); } }  
c -1
h -1
intmain() { intn,@@ b[@@ 91@@ ]={0},@@ i,k,@@ counter@@ =0,@@ temp; cin>>n; for(i=1;i<=n;i++) { cin>>@@ temp; for(k=0;k<@@ 91@@ ;k++) { if(@@ b[k@@ ]==@@ temp@@ ) break; } if(k@@ >=@@ 91@@ ) { b[@@ counter@@ ]=temp; counter@@ ++; } } for(k=0;k<@@ counter@@ -1;k++) { cout<<@@ b[k@@ ]@@ <<""; } cout<<b[@@ counter@@ -1]@@ <<endl; return0; }  
c -1
h -1
0

intmain() { intm,n,@@ s,@@ i,j,@@ a[100][100],@@ p,q,@@ r,@@ t; scanf("%d%d",&m,&n); s=@@ m+@@ n-2@@ ; for(i=0;i<m;i++){ for(j=0;j<n;j++){ scanf("%d",&a[i][j]); } } for(p=0;p@@ <=@@ s@@ ;p++){ if(m@@ >=@@ n){ if(p@@ <=@@ (n-1@@ )){ t@@ =0;@@ r=@@ p; } else{ if(p@@ <=@@ (m@@ -1)@@ ){ t=@@ p@@ -n@@ +1;@@ r=@@ p; } else{ t=@@ p@@ -n@@ +1;@@ r=@@ m-1@@ ; } } } else{ if(p@@ <=@@ (m@@ -1)@@ ){ t@@ =0;@@ r=@@ p; } else{ if(p@@ <=@@ (n-1@@ )){ t@@ =0;@@ r=@@ m-1@@ ; } else{ t=@@ p@@ -n@@ +1;@@ r=@@ m-1@@ ; } } } for(q=@@ t@@ ;q@@ <=@@ r@@ ;q@@ ++){ printf("%d\n",a[@@ q@@ ][p@@ -@@ q@@ ]); } } return0; }  
c -1
h -1
intmain() { intk,m,n,i,j,@@ t,@@ s=0; scanf("%d",&k); inta[100][100@@ ],b[@@ k@@ -1]; for(t=0;t@@ <k;@@ t++){ scanf("%d%d",&m,&n); for(i=0;i<m;i++){ for(j=0;j<n;j++){ scanf("%d",&a[i][j]); } } for(i=0;i<m;i++){ for(j=0;j<n;j++){ if(i==0||i==@@ m-1@@ ){ s=s+@@ a[i][j]; } elseif(@@ j@@ ==0||j==@@ n-1){ s=s+@@ a[i][j]; } } } b[t@@ ]=@@ s; s=0; } for(t=0;t@@ <k;@@ t++){ printf("%d\n",@@ b[t@@ ]); }@@ return0; }  
c -1
h -1
0

intmain(){ inta[@@ 1000],@@ n,k,@@ i,j; scanf("%d%d",&n,&k); for(i=0;i<=n-1;i++) scanf("%d",&a[i]); for(i=0;i<n-1;i++){ for(j=1@@ +i@@ ;j<=@@ n-1@@ ;j++){ if(a[i]+a[j]==@@ k){ printf("yes"); return0;} if(i==@@ n-2@@ &&j@@ ==@@ n-1){ printf("no"); return0@@ ;@@ }}} }  
c -1
h -1
intmain() { int@@ shuzu@@ [@@ 1001@@ ],@@ jilu@@ [@@ 1001]; int@@ a=0,b=0,@@ c,@@ n,@@ i,@@ k; scanf("%d",&n); for(i=0;i<n;i++) { for(k=0;k<n;k++) { scanf("%d",&@@ shuzu@@ [k]); if(shuzu@@ [k]@@ ==0) { jilu@@ [a@@ ]=@@ k; a++; } } if(a==@@ 2) { c=@@ jilu@@ [1]@@ -@@ jilu@@ [0]@@ -1; b@@ +=@@ c; } a=0; } printf("%d",@@ b); return0; }  
c -1
h -1
0

intmain() { inti,j,k,l,@@ m,n,@@ g@@ [26]={0},@@ s[@@ 26@@ ][@@ 1000]={0}; chara[@@ 50]; scanf("%d",&n); for(m=0;m@@ <n;m++) {@@ for(i=0;i<@@ 50@@ ;i++) a[i]=0; scanf("%d%s",&@@ l,@@ a); for(i=0;i<26;i++) for(j=0;j<26;j++) if(a[i]@@ =='@@ A'+@@ j) {@@ s[j]@@ [@@ g@@ [j]@@ ]=@@ l,@@ g@@ [j]@@ ++; break;}} m=0; for(i=0;i<26;i++) if(g@@ [i]>@@ m)@@ m=@@ g@@ [i],@@ k=i; printf("%c\n%d\n",@@ 'A'+@@ k,@@ m); for(i=0;i<m;i++) printf("%d\n",@@ s[k]@@ [i]); }  
c -1
h -1
intmain() { chara[501],b[501]; intsum=0,@@ i,@@ lena@@ ,@@ lenb@@ ,@@ t=0; doublen,@@ bi@@ ; scanf("%lf",&n); scanf("%s%s",a,b); lena@@ =strlen(a); lenb@@ =strlen(b); for(i=0;i<@@ lena@@ ;i++) { if(a[i]!='@@ A'&&a[i]!='@@ G'&&a[i]!='@@ C'&&a[i]!='@@ T@@ ') { t++; } } for(i=0;i<@@ lenb@@ ;i++) { if(@@ b[i]!='A'&&b[i]!='@@ G'&&b[i]!='@@ C'&&b[i]!='@@ T@@ ') { t++; } } if(@@ lena@@ !=@@ lenb@@ ||@@ t@@ !=0) { printf("error"); } else { for(i=0;i<@@ lena@@ ;i++) { if(a[i]==b[i]) { sum++; } } bi@@ =(double)@@ sum/@@ lena@@ ; if(@@ bi@@ >n) { printf("yes"); } else { printf("no"); } } return0; }  
c -1
h -1
0

intmain() { double@@ m,@@ c=0,@@ d; inti,k,@@ a,b,@@ s=0; chars1@@ [@@ 550@@ ],@@ s2[@@ 550@@ ]; scanf("%lf",&@@ m); scanf("%s%s",@@ s1,@@ s2); a=strlen(@@ s1); b=strlen(@@ s2); if(a!=@@ b) { printf("error\n"); } if(a==@@ b) { for(i=0;i<a;i++) { if(s1@@ [i]!='A'&&@@ s1@@ [i]!='C'&&@@ s1@@ [i]!='G'&&@@ s1@@ [i]!='T@@ ') { s++; } } for(i=0;i<b;i++) { if(s2@@ [i]!='A'&&@@ s2@@ [i]!='C'&&@@ s2@@ [i]!='G'&&@@ s2@@ [i]!='T@@ ') { s++; } } if(s@@ ==0) { for(i=0;i<a;i++) { if(s1[i]==s2@@ [i]) { c++; } } d=@@ c@@ /@@ a; if(d@@ >=@@ m) { printf("yes\n"); }else { printf("no\n"); } } if(s@@ !=0) { printf("error\n"); } } return0; }  
c -1
h -1
intmain(){ int@@ m1,@@ m2@@ ,i,@@ t,@@ d; double@@ a,b; char@@ dna1@@ [501]; char@@ dna2@@ [501]; t=0; d=0; scanf("%lf",&a); getchar(); scanf("%s",&@@ dna1); scanf("%s",&@@ dna2); m1@@ =strlen(@@ dna1); m2@@ =strlen(@@ dna2); if(@@ m1@@ !=@@ m2@@ ){@@ printf("error");@@ d@@ =1;} else{ for(i=0;i<@@ m1@@ ;i++){ if(dna1@@ [i]==@@ dna2@@ [i]@@ ){@@ t=t@@ +1;} } } b@@ =1@@ .@@ 000000@@ *@@ t@@ /@@ m1@@ ; if(d@@ ==0){@@ for(i=0;i<@@ m1@@ ;i++){ if((@@ dna1@@ [i]!='A')&&(@@ dna1@@ [i]!='T')&&(@@ dna1@@ [i]!='C')&&(@@ dna1@@ [i]!='G')@@ ){@@ printf("error"); d=1; break;} } } if(d@@ ==0){@@ for(i=0;i<@@ m2@@ ;i++){ if((@@ dna2@@ [i]!='A')&&(@@ dna2@@ [i]!='T')&&(@@ dna2@@ [i]!='C')&&(@@ dna2@@ [i]!='G')@@ ){@@ printf("error");} } } if((@@ m1@@ ==@@ m2@@ )&&(@@ d@@ ==0)@@ ){ if(b@@ >@@ a@@ ){printf("yes");} else{printf("no");} } return0; }  
c -1
h -1
1


intmain() { introw,col,@@ array@@ [100][100],@@ i,j,k; cin>>row>>col; for(i=0;i<row;i++) for(j=0;j<col;j++) cin>>array[i][j]; for(i=0;i<col;i++) { k=i; j=0; while((@@ k@@ >=0@@ )&&(@@ j@@ <=row@@ -1)) { cout<<array@@ [j]@@ [k]@@ <<@@ '\n@@ '; k--; j++; } } for(i=1;i<row;i++) { k=i; j=col-1; while((@@ k@@ <=row@@ -1)@@ &&(@@ j@@ >=0@@ )) { cout<<array@@ [k]@@ [j]@@ <<@@ '\n@@ '; k++; j--; } } return0; }  
c -1
h -1
intmain() { intn,a[@@ 20000@@ ],i,j,@@ b[@@ 20000],@@ m=0,@@ k; cin>>n; for(i=0;i<n;i++) cin>>a[i]; b[0]=@@ a[0]; for(i=1@@ ,j@@ =1@@ ;i<n;i++) { for(k=0;k<j@@ ;k++) if(a[i]==@@ b[k@@ ]) m=1; if(m@@ !=1) { b[j]=@@ a[i]; j@@ ++;} m@@ =0;} for(i=0;i<j@@ -1;i++) cout<<b[i]@@ <<''; cout<<@@ b@@ [j-1]@@ <<endl; return0; }  
c -1
h -1
0

int@@ coun@@ ; void@@ depart@@ (intn,int@@ i) { intj; if(n@@ ==1)@@ coun@@ ++; else@@ for(j=i;j<=@@ n;j++) if(n@@ %j@@ ==0){@@ depart@@ (n@@ /j@@ ,j@@ );} } intmain(){ intn,@@ j; cin>>n; intb[@@ n]; for(j=0;j<n;j++) cin>>@@ b[j]; for(j=0;j<n;j++) { coun@@ =0; depart@@ (@@ b[j]@@ ,@@ 2); cout<<@@ coun@@ <<endl; } return0; }  
c -1
h -1
voidmain() { intn,k; inta[1000]; scanf("%d%d",&n,&k); inti,j,@@ l=0; for(i=0;i<n;i++) { scanf("%d",&a[i]); } for(i=0;i<n;i++) {@@ for(j=i+1;j<n;j++) {@@ if(a[i]+a[j]==k) {@@ printf("yes"); goto@@ ab@@ ;} else l@@ ++;} } ab@@ : if(l@@ ==@@ n@@ *(@@ n-1)@@ /@@ 2) printf("no"); }  
c -1
h -1
0

intmain(){ intm,n; inta[@@ 101@@ ],b[@@ 101]; charc[@@ 101][@@ 11@@ ],@@ d[@@ 101][@@ 11]; inti,j,k; int@@ ni@@ ,@@ nj@@ ,@@ nk@@ ; char@@ ci@@ [11@@ ],@@ cj@@ [11@@ ],@@ ck@@ [11]; scanf("%d",&n); for(i=1;i<=n;i++){ scanf("%s",@@ c[i]); strcpy(@@ d@@ [i],@@ c[i]); scanf("%d",&a[i]); b[i]=@@ a[i]; } for(i=1;i<=@@ n-1;i++){ for(j=1;j<=@@ n@@ -i;j++){ if(a[j]@@ <@@ a[j+1@@ ]){ ni@@ =@@ a[j+1@@ ]; a[j+1]=@@ a[j]; a[j]=@@ ni@@ ; strcpy(@@ ci@@ ,@@ c@@ [j+1]); strcpy(@@ c@@ [j+1],@@ c@@ [j]); strcpy(@@ c@@ [j],@@ ci@@ ); } } } for(i=1;i<=n;i++){ if(a[i]@@ >=60){ printf("%s\n",@@ c[i]); } } for(i=1;i<=n;i++){ if(b[i]@@ <60){ printf("%s\n",@@ d[i]); } } return0; }  
c -1
h -1
intmain() { intn,i,j; scanf("%d",&n); struct@@ point { charid[10]; intage; } points@@ [100],@@ news@@ [100],@@ tmp; for(i=0;i<n;i++) { scanf("%s%d",&@@ points@@ [i].id,&@@ points@@ [i].age); } for(i=n-1;i>=0;i--) { for(j=0;j<i;j++) { if(@@ points@@ [j+1@@ ].age@@ >=60&&@@ points@@ [j+1@@ ].age@@ >@@ points@@ [j].age@@ ) { tmp=@@ points@@ [j+1]; points@@ [j+1]=@@ points@@ [j]; points@@ [j]=@@ tmp; } } } for(i=0;i<n;i++) { printf("%s\n",@@ points@@ [i].id); } return0; }  
c -1
h -1
1


void@@ function@@ () { inta[@@ 110][110@@ ],@@ (*p)@@ [@@ 110@@ ]; intn,m,@@ i,@@ sum=0,@@ j; cin>>n>>m; for(i=0;i<n;i++) for(j=0;j<m;j++) cin>>a[i][j]; p=a; for(i=0;i<m;i++) { sum+=*(@@ *p@@ +i); if(n@@ >1@@ )@@ sum+=*(@@ *(p+@@ n-1)@@ +i); } for(i=1;i<n-1;i++) { sum+=@@ **@@ (p@@ +i); if(m@@ >1@@ )@@ sum+=@@ *(*(p+i)@@ +@@ m-1@@ ); } cout<<sum<<endl; } intmain() { intn,i; cin>>n; for(i=1;i<=n;i++) function@@ (); return0; }  
c -1
h -1
intf@@ (intx) { int@@ z; if(((@@ x%@@ 4==0)&&(@@ x@@ %100!=0@@ )@@ )||(@@ x%@@ 400==0)) z=1; else z=0; return@@ z; } main() { intyear,month,day; int@@ z,@@ i=0,@@ sum=0; inta[@@ 12@@ ],b[@@ 12@@ ]; scanf("%d%d%d",&year,&month,&day); z=@@ f(@@ year@@ ); if(z@@ ==1) {@@ inta[@@ ]={31,@@ 29,31,30,31,30,31,31,30,31,30,31}; for(i=0;i<month-1;i++) { sum=sum+@@ a[i]; } } else { inta[@@ ]={31,@@ 28,31,30,31,30,31,31,30,31,30,31}; for(i=0;i<month-1;i++) { sum=sum+@@ a[i]; } } sum=sum+day; printf("%d",sum); getchar(); getchar(); return0; }  
c -1
h -1
0

intn; structstu {intnum; charname@@ [27]; structstu*next; }; structstu*@@ creat@@ () {int@@ i@@ =0;@@ structstu@@ *head,@@ *p1,*p2; head@@ =p1@@ =p2@@ =(struct@@ stu*)malloc(sizeof(structstu)); scanf("%d%s",&@@ p2->@@ num,@@ p2->@@ name); while(i<@@ n-1) {@@ i@@ ++;@@ p2@@ =(struct@@ stu*)malloc(sizeof(structstu)); scanf("%d%s",&@@ p2->@@ num,@@ p2->@@ name); p1->next@@ =p2; p1=p2@@ ;} return@@ head@@ ;} voidmain() {@@ structstu@@ *p,*@@ head; intk,@@ u@@ ,@@ max=0,@@ maxnum@@ ; inta[@@ 26]={0}; scanf("%d",&n); head=@@ p=@@ creat@@ (); for(k=0;k<n;k++) {@@ for(@@ u@@ =0;@@ p->@@ name@@ [@@ u@@ ]!='\0'@@ ;@@ u@@ ++) a[@@ p->@@ name@@ [@@ u@@ ]@@ -'A']++; p=p->next; } for(k=0;k<26;k++) if(a[k]@@ >max){max=@@ a[k]@@ ;@@ maxnum@@ =k@@ ;} printf("%c\n%d\n",@@ maxnum@@ +'A',@@ max); p=head; for(k=0;k<n;k++){ for(@@ u@@ =0;@@ p->@@ name@@ [@@ u@@ ]!='\0'@@ ;@@ u@@ ++) if(p->@@ name@@ [@@ u@@ ]==@@ maxnum@@ +'@@ A')@@ {@@ printf("%d\n",p->@@ num@@ );break;} p=p->next; }}  
c -1
h -1
intmain(){ inti,j,k,@@ p=0,@@ q=0,@@ judge@@ =0; doublen; chara[501],b[501]; scanf("%lf",&n); scanf("%s",a); scanf("%s",b); p@@ =strlen(a); for(i=0;i<p@@ ;i++){ if(a[i]!='A'&&a[i]!='T'&&a[i]!='C'&&a[i]!='@@ G'){ printf("error"); return0; } } for(i=0;i<p@@ ;i++){ if(@@ b[i]!='A'&&b[i]!='T'&&b[i]!='C'&&b[i]!='@@ G'){ printf("error"); return0; } } for(i=0;i<p@@ ;i++){ if(a[i]==b[i]){ q++; } } if(1.0*@@ q@@ /@@ p@@ >=@@ n){ printf("yes"); } else{ printf("no"); } return0; }  
c -1
h -1
0

structpatient{ charname@@ [11]; intage; int@@ order@@ ; }; intmain(){ structpatient@@ peo@@ [@@ NO@@ ]; intn,i,@@ count=0,@@ COUNT@@ ,j,@@ k,@@ e,@@ agedata@@ [@@ NO@@ ],@@ a=0; scanf("%d",&n); for(i=0;i<n;i++){ scanf("%s",&@@ peo@@ [i].@@ name); scanf("%d",&@@ peo@@ [i].age); } for(i=0;i<n;i++){ if(@@ peo@@ [i].age>=60){ count++; agedata@@ [a@@ ]=@@ peo@@ [i].age; a++; } } COUNT@@ =@@ count; for(i=0;i<n;i++){ if(@@ peo@@ [i].age@@ <60){ peo@@ [i].@@ order@@ =@@ count; count++; } } for(k=1;k<@@ COUNT@@ ;k++){ for(j=0;j<@@ COUNT@@ -k@@ ;j++){ if(@@ agedata@@ [j]<@@ agedata@@ [j+1@@ ]){ e=@@ agedata@@ [j+1]; agedata@@ [j+1]=@@ agedata@@ [j]; agedata@@ [j]=@@ e; } } } for(i=0;i<@@ COUNT@@ ;i++){ for(j=0;j<n;j++){ if(@@ peo@@ [j].age@@ ==@@ agedata@@ [i]){ peo@@ [j].@@ order@@ =i; } } } for(i=0;i<n;i++){ for(j=0;j<n;j++){ if(@@ peo@@ [j].@@ order@@ ==@@ i){ printf("%s\n",@@ peo@@ [j].@@ name); } } } return0; }  
c -1
h -1
intmain() { intyear,month,day,@@ num; scanf("%d%d%d",&year,&month,&day); if(year%@@ 4==0&&year%100!=0@@ ||@@ year%400==0) { if(month==1) { num=@@ day; printf("%d\n",num); } if(month==2) { num=@@ day+@@ 31; printf("%d\n",num); } if(month==3) { num=@@ day@@ +31+@@ 29; printf("%d\n",num); } if(month==@@ 4) { num=@@ day+31+29@@ +31; printf("%d\n",num); } if(month==@@ 5) { num=@@ day+31+29@@ +31+30@@ ; printf("%d\n",num); } if(month==@@ 6) { num=@@ day+31+29@@ +31+30@@ +31; printf("%d\n",num); } if(month==@@ 7) { num=@@ day+31+29@@ +31+30+31+30@@ ; printf("%d\n",num); } if(month==8) { num=@@ day+31+29@@ +31+30+31+30@@ +31; printf("%d\n",num); } if(month==@@ 9) { num=@@ day+31+29@@ +31+30+31+30+31+@@ 31; printf("%d\n",num); } if(month==@@ 10) { num=@@ day+31+29@@ +31+30+31+30+31+31+30@@ ; printf("%d\n",num); } if(month==@@ 11) { num=@@ day+31+29@@ +31+30+31+30+31+31+30@@ +31; printf("%d\n",num); } if(month==@@ 12) { num=@@ day+31+29@@ +31+30+31+30+31+31+30+31+30@@ ; printf("%d\n",num); } } else { if(month==1) { num=@@ day; printf("%d\n",num); } if(month==2) { num=@@ day+@@ 31; printf("%d\n",num); } if(month==3) { num=@@ day@@ +31+@@ 28; printf("%d\n",num); } if(month==@@ 4) { num=@@ day+31+28@@ +31; printf("%d\n",num); } if(month==@@ 5) { num=@@ day+31+28@@ +31+30@@ ; printf("%d\n",num); } if(month==@@ 6) { num=@@ day+31+28@@ +31+30@@ +31; printf("%d\n",num); } if(month==@@ 7) { num=@@ day+31+28@@ +31+30+31+30@@ ; printf("%d\n",num); } if(month==8) { num=@@ day+31+28@@ +31+30+31+30@@ +31; printf("%d\n",num); } if(month==@@ 9) { num=@@ day+31+28@@ +31+30+31+30+31+@@ 31; printf("%d\n",num); } if(month==@@ 10) { num=@@ day+31+28@@ +31+30+31+30+31+31+30@@ ; printf("%d\n",num); } if(month==@@ 11) { num=@@ day+31+28@@ +31+30+31+30+31+31+30@@ +31; printf("%d\n",num); } if(month==@@ 12) { num=@@ day+31+28@@ +31+30+31+30+31+31+30+31+30@@ ; printf("%d\n",num); } } return0; }  
c -1
h -1
0

intmain() { intx@@ [100],@@ y@@ [100],@@ z@@ [100],@@ a,@@ b@@ =1,@@ c@@ =1,@@ d@@ =1,@@ e@@ =1,@@ f,@@ g,@@ h@@ ,j,@@ k,@@ n; char@@ o@@ [100][10],@@ p@@ [100][10],@@ q@@ [100][10],@@ r@@ [100][10]; scanf("%d",&n); for(a@@ =1;@@ a@@ <=n;@@ a++) { scanf("%s",@@ o@@ [a@@ ]); scanf("%d",&@@ x@@ [a@@ ]); if(x@@ [a]@@ >=60) { strcpy(@@ p[@@ b@@ ],@@ o@@ [a@@ ]); b++; y[@@ c@@ ]=@@ x@@ [a@@ ]; c++; } else { strcpy(@@ q@@ [d@@ ],@@ o@@ [a@@ ]); d++; z[@@ e@@ ]=@@ x@@ [a@@ ]; e++; } } for(@@ f@@ =1;@@ f@@ <=@@ b@@ -2@@ ;@@ f@@ ++) { for(@@ g@@ =1;@@ g@@ <=@@ b@@ -2@@ ;@@ g@@ ++) { if(y@@ [@@ g@@ ]<@@ y[@@ g@@ +1]) { h=@@ y[@@ g@@ ]; y[@@ g@@ ]=@@ y[@@ g@@ +1]; y[@@ g@@ +1]=@@ h; strcpy(@@ r@@ [1@@ ],@@ p[@@ g@@ ]); strcpy(@@ p[@@ g@@ ],@@ p[@@ g@@ +1@@ ]); strcpy(@@ p[@@ g@@ +1],@@ r@@ [1]); } } } for(j=1;j<=@@ b@@ -1;j++) { printf("%s\n",@@ p@@ [j]); } for(k=1;k<=@@ d@@ -1;k++) { printf("%s\n",@@ q@@ [k]); } return0; }  
c -1
h -1
intmain() { intk,i,j,@@ a[@@ 25@@ ]={0},@@ f@@ [25@@ ]={@@ 1@@ },@@ t=0; scanf("%d",&k); for(i=0;i<k;i++) scanf("%d",&a[i]); for(i=0;i<k;i++) for(j=0;j<i;j++) if(a[j]>=a[i]&&@@ f@@ [j]>=@@ f@@ [i])@@ f[i]=@@ f@@ [j]+1; elseif(@@ f@@ [i]@@ ==0)@@ f@@ [i]=1; for(i=0;i<k;i++) if(t@@ <@@ f@@ [i])@@ t=@@ f[i]; printf("\n%d",@@ t); return0; }  
c -1
h -1
0

int@@ calculate@@ (inta,int@@ num@@ ){ intsum=0; if(num@@ ==1)@@ return1; for(inti=@@ num@@ ;i@@ >=@@ 2@@ ;i--){ if(num@@ %i==0&&@@ i<=@@ a){ sum+=@@ calculate@@ (i,@@ num@@ /i); } } returnsum; } intmain(){ intn; cin>>n; intnum=0; for(inti=0;i<n;i++){ cin>>num; cout<<@@ calculate@@ (num,@@ num@@ )<<endl; } return0; }  
c -1
h -1
intmain() { void@@ take@@ (intx@@ [@@ 1000@@ ],int@@ l); void@@ rank@@ (intx@@ [@@ 1000@@ ],int@@ l); void@@ com@@ (inta[@@ 1000@@ ],intb[@@ 1000@@ ],int@@ c[@@ 2000@@ ],int@@ al@@ ,int@@ bl@@ ); void@@ prin@@ (intc[@@ 2000@@ ],int@@ l); inta[1000]; intb[@@ 1000]; intc[@@ 2000]; int@@ al@@ ,@@ bl@@ ; scanf("%d%d",&@@ al@@ ,&@@ bl@@ ); take@@ (a,@@ al@@ ); take@@ (b,@@ bl@@ ); rank@@ (a,@@ al@@ ); rank@@ (b,@@ bl@@ ); com@@ (a,b,@@ c,@@ al@@ ,@@ bl@@ ); prin@@ (c,@@ al@@ +@@ bl@@ ); return0; } void@@ take@@ (intx@@ [@@ 1000@@ ],int@@ l) { inti; for(i=0;i<l;i++) { scanf("%d",&@@ x[i]); } } void@@ rank@@ (intx@@ [@@ 1000@@ ],int@@ l) { inti,j,temp; if(l@@ !=1) { for(i=@@ l@@ -2@@ ;i>=0;i--) { for(j=0;j<=i;j++) { if(x@@ [j]>@@ x@@ [j+1]) { temp=@@ x@@ [j]; x@@ [j]=@@ x@@ [j+1]; x@@ [j+1]=temp; } } } } } void@@ com@@ (inta[@@ 1000@@ ],intb[@@ 1000@@ ],int@@ c[@@ 2000@@ ],int@@ al@@ ,int@@ bl@@ ) { inti; for(i=0;i<@@ al@@ ;i++) { c[i]=a[i]; } for(i=@@ al@@ ;i<@@ al@@ +@@ bl@@ ;i++) { c[i]=b[i-@@ al@@ ]; } } void@@ prin@@ (intc[@@ 2000@@ ],int@@ l) { inti; printf("%d",c@@ [0]); for(i=1;i<@@ l@@ ;i++) { printf("%d",c[i]); } }  
c -1
h -1
0

intmain() { inti,@@ n@@ [100][100],@@ col,@@ row,@@ COL@@ ,@@ ROW@@ ; scanf("%d%d",&@@ ROW@@ ,&@@ COL@@ ); for(row=0;row@@ <ROW@@ ;@@ row++){ for(col=0;col@@ <@@ COL@@ ;col@@ ++){ scanf("%d",&@@ n[@@ row][col@@ ]); } } for(i=0;i<@@ COL@@ +@@ ROW@@ -1;i++){ if(i<@@ COL@@ ){ col@@ =i; row@@ =0; while(@@ col@@ >=0&&@@ row@@ <ROW@@ ){ printf("%d\n",@@ n[@@ row][col@@ ]); col@@ -=@@ 1; row@@ +=1; } } elseif(@@ i>=@@ COL@@ ){ col@@ =@@ COL@@ -1; row@@ =i@@ -@@ COL@@ +1; while(@@ col@@ >=0&&@@ row@@ <ROW@@ ){ printf("%d\n",@@ n[@@ row][col@@ ]); col@@ -=@@ 1; row@@ +=1; } } } return0; }  
c -1
h -1
structStudent { int@@ Num@@ ; int@@ Chinese@@ ; int@@ Math@@ ; int@@ Sum@@ ; }; intmain() { intn,i,@@ s; scanf("%d",&n); structStudent@@ stu[@@ n]; structStudent@@ temp@@ ,*@@ p=@@ stu@@ ; for(i=0;i<n;i++) { scanf("%d%d%d",&stu[i].@@ Num@@ ,&stu[i].@@ Chinese@@ ,&stu[i].@@ Math@@ ); stu[i].@@ Sum@@ =stu[i].@@ Chinese@@ +stu[i].@@ Math@@ ; } if(n==@@ 2) { if(@@ stu[0].@@ Sum@@ >@@ stu[1].@@ Sum@@ ) temp=@@ stu[@@ 0]; stu[@@ 0]=@@ stu@@ [1]; stu@@ [1]=@@ temp; printf("%d@@ %d@@ %d\n",@@ stu[0].@@ Num@@ ,@@ stu[0].@@ Chinese@@ ,@@ stu[0].@@ Math@@ ); printf("%d@@ %d@@ %d\n",@@ stu[1].@@ Num@@ ,@@ stu[1].@@ Chinese@@ ,@@ stu[1].@@ Math@@ ); } else { for(i=0,@@ s@@ =0;i<n;i++) if(stu[i].@@ Sum@@ >@@ s) s=@@ stu[i].@@ Sum@@ ; for(i=0;i<n;i++) { if(stu[i].@@ Sum@@ ==@@ s) { printf("%d%d\n",stu[i].@@ Num@@ ,@@ stu[i].@@ Sum@@ ); stu[i].@@ Sum@@ =0; break; } } for(i=0,@@ s@@ =0;i<n;i++) if(stu[i].@@ Sum@@ >@@ s) s=@@ stu[i].@@ Sum@@ ; for(i=0;i<n;i++) { if(stu[i].@@ Sum@@ ==@@ s) { printf("%d%d\n",stu[i].@@ Num@@ ,@@ stu[i].@@ Sum@@ ); stu[i].@@ Sum@@ =0; break; } } for(i=0,@@ s@@ =0;i<n;i++) if(stu[i].@@ Sum@@ >@@ s) s=@@ stu[i].@@ Sum@@ ; for(i=0;i<n;i++) { if(stu[i].@@ Sum@@ ==@@ s) { printf("%d%d\n",stu[i].@@ Num@@ ,@@ stu[i].@@ Sum@@ ); stu[i].@@ Sum@@ =0; break; } } } getchar(); getchar(); getchar(); }  
c -1
h -1
0

int@@ dispose@@ (int,int); intmain() { intn,i,@@ p; cin>>n; for(i=0;i<n;i++) { cin>>@@ p; cout<<@@ dispose@@ (p,@@ 2)<<endl; } return0; } int@@ dispose@@ (intp@@ ,int@@ y) { inti,@@ sol@@ =1; for(i=y@@ ;i<=@@ (int)@@ (@@ sqrt@@ (p@@ ))@@ ;i++) { if(p@@ %i==0) { sol@@ +=@@ dispose@@ (p@@ /i,i); } } return@@ sol@@ ; }  
c -1
h -1
intmain() { intk,m,n,i,j,@@ h,@@ a[@@ 1000][@@ 1000]={0},@@ result; cin>>k; for(h=0;h@@ <k;@@ h++) { result=0; cin>>m>>n; for(i=0;i<m;i++) for(j=0;j<n;j++) cin>>a[i][j]; for(j=0;j<n;j++) result=result+@@ a[0]@@ [j]+@@ a[m-1][j]; for(i=1;i<m-1;i++) result=result+@@ a[i][0]+@@ a[i][n-1]; cout<<@@ result@@ <<endl; } return0; }  
c -1
h -1
0

intmain() { struct@@ Patient@@ { charID[10]; intage; }@@ patient@@ [100],@@ patient2@@ [100]; struct@@ Patient@@ t; intn,@@ i=0,j=0,@@ k=0,@@ num; scanf("%d",&n); for(i=0;i<n;i++) scanf("%s%d",@@ patient@@ [i].@@ ID,&@@ patient@@ [i].age); for(i=0;i<n;i++){ if(@@ patient@@ [i].age>=60){ patient2@@ [j]=@@ patient@@ [i]; j@@ ++;@@ }} num@@ =j; for(i=0;i<n;i++){ if(@@ patient@@ [i].age@@ <60){ patient2@@ [j]=@@ patient@@ [i]; j@@ ++;@@ }} for(k=1;k<@@ num@@ ;k++){ for(i=0;i<@@ num@@ -@@ k;i++){ if(@@ patient2@@ [i+1@@ ].age@@ >@@ patient2@@ [i].age@@ ){ t=@@ patient2@@ [i+1]; patient2@@ [i+1]=@@ patient2@@ [i]; patient2@@ [i]=@@ t;@@ }}} for(i=0;i<n;i++) printf("%s\n",@@ patient2@@ [i].ID); return0; }  
c -1
h -1
intmain() { inti,@@ a[@@ 16]; while(1) { for(i=0;;i++) { cin>>a[i]; if(a[i]==0) break; if(a[i]==-1) goto@@ end@@ ; } intcount=0; for(intm=0;m@@ <i@@ ;m++) { for(int@@ n@@ =0;n@@ <i@@ ;n++) { if(a[m@@ ]==@@ a[n@@ ]*@@ 2) count++; } } cout<<count<<endl; } end@@ : return0; }  
c -1
h -1
0

int@@ runnian@@ (int@@ y) { scanf("%d",&@@ y); if((y%@@ 4==0&&y%100!=0@@ )||(y%@@ 100==0&&@@ y%@@ 400==0)) { y=@@ 366@@ ; } else { y=@@ 365@@ ; } return@@ y; } intmain(@@ int@@ y,int@@ m,int@@ d) { inti,n; n=0; scanf("%d%d%d",&y,&m,&d); for(i=1;i<m;i++) { if(i==1||i==@@ 3||i==5@@ ||i==7@@ |@@ i==@@ 8||i==@@ 10@@ ||i==@@ 12) { n+=@@ 31; } elseif(i==@@ 4||i==6||i==9||i==11) { n+=@@ 30; } elseif(i==@@ 2) { if(@@ runnian@@ (y@@ )==@@ 366@@ ) { n+=@@ 29; } else { n+=@@ 28; } } } n+=@@ d; printf("%d\n",n); return0; }  
c -1
h -1
struct { intx; inty; ints; int@@ z; }a[@@ 100010@@ ],@@ t; intmain() { intn,i,j; scanf("%d",&n); for(i=0;i<n;i++) { scanf("%d%d%d",&a[i].@@ x,&@@ a[i].@@ y,&@@ a[i].@@ s); a[i].@@ z=@@ a[i].@@ y@@ +a[i].@@ s; } for(i=0;i<=@@ 2@@ ;i++) for(j=n-1@@ ;j>=i@@ ;j--) { if(a@@ [j+1].@@ z@@ >@@ a[j].@@ z) { t=a[j]; a[j]=a[j+1]; a[j+1]=t; } } printf("%d%d\n",@@ a[0].@@ x,@@ a[0].@@ z); printf("%d%d\n",@@ a[1].@@ x,@@ a[1].@@ z); printf("%d%d\n",@@ a[2].@@ x,@@ a[2].@@ z); return0; }  
c -1
h -1
0

intr,@@ c@@ ,*@@ p,@@ n,m,@@ i,j,k; voidmain() { void@@ x@@ (int@@ i); void@@ y@@ (int@@ i); scanf("%d%d",&@@ r@@ ,&c); n=@@ r@@ *@@ c;@@ m=@@ r@@ +c@@ -2@@ ; p=@@ (int*)malloc(n*sizeof(int)); for(i=0;i<n;i++) scanf("%d",p@@ +i); for(i=0;i<c@@ ;i++)@@ x@@ (i); for(i=@@ c@@ ;i<=@@ m@@ ;i++)@@ y@@ (i); } void@@ x@@ (int@@ i) { inta; for(a@@ =i;@@ a@@ >=0@@ &&(@@ i@@ -@@ a)@@ <@@ r@@ ;a@@ --) printf("%d\n",@@ *(p+@@ (i@@ -@@ a)@@ *@@ c+@@ a@@ )); } void@@ y@@ (int@@ i) { inta; for(@@ a=@@ c@@ -1;@@ a@@ >=0@@ &&(@@ i@@ -@@ a)@@ <@@ r@@ ;a@@ --) printf("%d\n",@@ *(p+@@ (i@@ -@@ a)@@ *@@ c+@@ a@@ )); }  
c -1
h -1
intmain() { charstr@@ [300],@@ subString@@ [300],@@ replacement@@ [300]; char@@ *p,@@ *@@ q; int@@ strLen@@ ,@@ subLen@@ ,@@ repLen@@ ,@@ move@@ ,i; cin>>@@ str@@ >>@@ subString@@ >>@@ replacement@@ ; strLen@@ =strlen(@@ str); subLen@@ =strlen(@@ subString@@ ); repLen@@ =strlen(@@ replacement); p=strstr(@@ str,@@ subString@@ ); if(p@@ ==NULL) { cout<<str@@ ; return0; } q=@@ replacement@@ ; if(@@ repLen@@ >@@ subLen@@ ) { move@@ =@@ repLen@@ -@@ subLen@@ ; for(q=@@ str@@ +@@ strLen@@ +@@ move@@ ;q@@ >=@@ p+@@ repLen@@ ;q@@ --) { *@@ q=@@ *(q@@ -@@ move@@ ); } i=0; q=@@ replacement@@ ; while(i<@@ repLen@@ ) { *p@@ ++@@ =@@ *@@ q++; i++; } } else { i=0; while(i<@@ repLen@@ ) { *p@@ ++@@ =@@ *@@ q++; i++; } if(@@ repLen@@ <@@ subLen@@ ) { move@@ =@@ subLen@@ -@@ repLen@@ ; while(@@ *(p+@@ move@@ )@@ !='\0') { *p@@ ++@@ =@@ *(p+@@ move@@ ); } *@@ p=@@ '\0'@@ ; } } cout<<str@@ <<endl; return0; }  
c -1
h -1
0

int@@ k@@ [25],@@ n; intf(int@@ max@@ ,int@@ i,@@ int@@ sum) { int@@ p,@@ q=0; if(i==@@ n)@@ returnsum; else { p=@@ f(@@ max,@@ i@@ +1,@@ sum); if(max@@ >=@@ k@@ [i])@@ q=@@ f(@@ k@@ [i],@@ i@@ +1,@@ sum@@ +1); return@@ p@@ >@@ q@@ ?@@ p@@ :@@ q; } } voidmain() { int@@ i@@ ;@@ scanf("%d",&n); for(i=0;i<n;i++)@@ scanf("%d",&@@ k@@ [i]); printf("%d",@@ f(@@ 2147483647@@ ,@@ 0,@@ 0@@ )); }  
c -1
h -1
intmain() { inta[16]; inti,j,k; int@@ count; end3@@ :@@ ; for(i=0;;i++) { count=0; cin>>a[i]; if(a[i]==-1) {@@ goto@@ end1@@ ;} if(a[i]==0) { for(j=0;j<i;j++) { for(k=0;k<i;k++) { if(a[j]==2*@@ a[k]) { count=@@ count@@ +1; break; } } } cout<<count<<endl; goto@@ end3@@ ; } } end1@@ :@@ ; return0; }  
c -1
h -1
0

void@@ scan_@@ (intm,@@ int*@@ a,@@ intn,@@ int*@@ b); void@@ sort_@@ (intm,@@ int*@@ a,@@ intn,@@ int*@@ b); void@@ print_@@ (intm,@@ int*@@ a,@@ intn,@@ int*@@ b); intmain() { intm,@@ n@@ ,*@@ a,*@@ b; scanf("%d%d",&m,&n); a=@@ (int*)malloc(@@ m@@ *sizeof(int)); b=@@ (int*)malloc(n*sizeof(int)); scan_@@ (m,@@ a,@@ n,@@ b); sort_@@ (m,@@ a,@@ n,@@ b); print_@@ (m,@@ a,@@ n,@@ b); return0; } void@@ scan_@@ (intm,@@ int*@@ a,@@ intn,@@ int*@@ b) { int@@ i,j@@ ,*p; p=a; for(i=0;i<m;i++) scanf("%d",p@@ ++@@ ); p=@@ b; for(j=0;j<n;j++) scanf("%d",p@@ ++@@ ); } void@@ sort_@@ (intm,@@ int*@@ a,@@ intn,@@ int*@@ b) { inti,j,@@ t@@ ,*@@ q; for(i=0;i<m-1;i++) { q=@@ a; for(j=0;j<@@ m-1@@ -i;j++) { if(*@@ q@@ >*@@ (@@ q@@ +1)@@ ){@@ t@@ =*@@ q@@ ;*@@ q@@ =*(@@ q@@ +1@@ );@@ *(q@@ +1)@@ =@@ t;} q++; } } for(i=0;i<n-1;i++) { q=@@ b; for(j=0;j<n-1-i;j++) { if(*@@ q@@ >*@@ (@@ q@@ +1)@@ ){@@ t@@ =*@@ q@@ ;*@@ q@@ =*(@@ q@@ +1@@ );@@ *(q@@ +1)@@ =@@ t;} q++; } } } void@@ print_@@ (intm,@@ int*@@ a,@@ intn,@@ int*@@ b) { int@@ i@@ ,*p; printf("%d",@@ *@@ a); p=@@ a@@ +1; for(i=1;i<@@ m@@ ;i++,@@ p++) printf("%d",@@ *p@@ ); p=@@ b; for(i=0;i<n@@ ;i++,@@ p++) printf("%d",@@ *p@@ ); printf("\n"); }  
c -1
h -1
intmain(intargc,char*argv[]) { intn,i,j,a[@@ 1000][1000],@@ x,y,@@ p,q,@@ s; scanf("%d",&n); for(i=0;i<n;i++) { for(j=0;j<n;j++) scanf("%d",&a[i][j]); } for(i=0;i<n-1;i++) { for(j=0;j<n-1;j++) { if(a[i][j]==0&&@@ a[i+1@@ ][j]@@ ==0&&@@ a[i]@@ [j+1@@ ]==0) { x@@ =i; y@@ =j; } } } for(i=1;i<n;i++) { for(j=1;j<n;j++) { if(a[i][j]==0&&@@ a[i-1]@@ [j]@@ ==0&&@@ a[i][j-1]@@ ==0) { p=i; q@@ =j; } } } s=(@@ p@@ -x@@ -1)*(@@ q@@ -@@ y@@ -1); printf("%d",s); return0; }  
c -1
h -1
0

intmain(){ doublen,@@ s=0; int@@ len,@@ lon@@ ,i,@@ z; chara[@@ 750@@ ],b[@@ 750@@ ]; scanf("%lf",&n); scanf("%s",a); scanf("%s",b); z=1; len@@ =strlen(a); lon@@ =strlen(b); if(@@ len@@ !=@@ lon@@ ) {@@ z=0; printf("error");} else {@@ for(i=0;i<len;i++) {@@ if((a[i]!='@@ A')&&(@@ a[i]!='@@ T')&&(@@ a[i]!='@@ G')&&(@@ a[i]!='@@ C')@@ ) {@@ z=0; printf("error"); break;} if((@@ b[i]!='@@ A')&&(@@ b[i]!='@@ T')&&(@@ b[i]!='@@ G')&&(@@ b[i]!='@@ C')@@ ) {@@ z=0; printf("error"); break;} } if(z@@ ==1) {@@ for(i=0;i<len;i++) {@@ if(a[i]==b[i]) s@@ ++;} double@@ x=@@ s/@@ len; if(x>@@ n)@@ printf("yes"); elseprintf("no"); } } return0; }  
c -1
h -1
intmain(){ int@@ sz1@@ [1000]; inth@@ ,j@@ =0,@@ k=0,@@ i,n,@@ mj@@ ,@@ a@@ =-1,@@ b@@ =-1,@@ c=0,@@ d; scanf("%d",&n); for(h=0;h@@ <n;@@ h@@ ++){ k=0; for(i=0;i<n;i++){ if(a@@ <0@@ ){ c@@ ++;} scanf("%d",&@@ sz1@@ [i]); if(@@ sz1@@ [i]@@ ==0){ a@@ =i;@@ b=@@ h@@ ;} } for(i=0;i<n;i++){ sz1@@ [i]@@ =0;} } d=@@ c@@ %@@ n; mj@@ =(@@ b-@@ d@@ )@@ *(a@@ -@@ d); printf("%d\n",@@ mj@@ ); return0; }  
c -1
h -1
0

intmain() { intnum[@@ 20000],@@ output@@ [@@ 20000]; inti=0,@@ n=0,@@ j=0,@@ k=0; scanf("%d",&n); for(i=0;i<n;i++) { scanf("%d",&@@ num[i]); for(j=0;j<k;j++) if(num@@ [i]==@@ output@@ [j]) num@@ [i]=0; if(num@@ [i]!=0) { output@@ [k]=@@ num[i]; k=k+1; } } for(i=0;i<@@ (k@@ -1);i++) printf("%d",@@ output@@ [i]); printf("%d",@@ output@@ [k@@ -1]); return0; }  
c -1
h -1
intmain() { intn; scanf("%d",&n); inti,j=0,@@ k=0,@@ h@@ =1,@@ a; for(i=1;i<=@@ n*@@ n;i++) { scanf("%d",&a); if(a==@@ 255) j++; if(a@@ ==0)break; } for(i=1;i<=@@ n*@@ n@@ -j@@ -1;i++) { scanf("%d",&a); if(a==@@ 255) { k++; } if(a==0) { k=0; h@@ ++; } } intx; x@@ =(@@ n@@ -j@@ %@@ n-@@ k@@ %@@ n-2@@ )*(@@ h@@ -2@@ *(@@ n@@ -j@@ %@@ n-@@ k@@ %n@@ ))@@ /2; printf("%d\n",x); return0; }  
c -1
h -1
0

intmain() { inti,n,@@ k,@@ j,@@ m=0; scanf("%d%d",&n,&k); inta[@@ 1000000@@ ],b[@@ 1000000@@ ]; for(i=0;i<n;i++) { scanf("%d",&a[i]); } for(i=0;i<n;i++) { b[i]=@@ k-@@ a[i]; } for(i=0;i<n;i++) { for(j=0;j<n;j++) { if(b[i]==@@ a[j]) { m=m+1; } if(b[i]@@ !=@@ a[j]) { m=@@ m; } } } if(m@@ !=0) { printf("yes\n"); } if(m==0) { printf("no\n"); } }  
c -1
h -1
intmain(intargc,char*argv[]) { inti,j,@@ s,@@ m,n,@@ k; char@@ str1@@ [257],@@ str2@@ [257],@@ str3@@ [257]; scanf("%s",@@ str1); scanf("%s",@@ str2); scanf("%s",@@ str3@@ ); m=strlen(@@ str1); n=strlen(@@ str2); k=strlen(@@ str3@@ ); for(i=0;i<=@@ m@@ -@@ n;i++) { s=0; for(j=i;j<i+@@ n;j++) { if(@@ str2@@ [j-i@@ ]==@@ str1@@ [j]) s++; } if(s@@ ==@@ n) { for(j=0;j<i;j++) { printf("%c",@@ str1@@ [j]); } for(j=0;j<k;j++) { printf("%c",@@ str3@@ [j]); } for(j=i@@ +@@ n@@ ;j<@@ m;j++) { printf("%c",@@ str1@@ [j]); } break; } } if(s@@ !=@@ n) printf("%s",@@ str1); return0; }  
c -1
h -1
0

intmain() { intm,@@ sum[@@ 27@@ ]={0},@@ max=0,@@ author@@ ; cin>>m; charstr@@ [1000][@@ 4@@ ],@@ name@@ [1000][@@ 27]; for(inti=0;i<@@ m@@ ;i++)@@ cin>>@@ str@@ [i]@@ >>@@ name@@ [i]; for(inti=0;i<@@ m;i++){ for(intj=0;j<@@ strlen(@@ name@@ [i]@@ );j++) sum[@@ name@@ [i][j]@@ -'A']++; } for(inti=0;i<@@ 26@@ ;i++){ if(max<@@ sum@@ [i]){ max=@@ sum[i]; author@@ =i; } } cout<<@@ (char)(@@ 'A'+@@ author@@ )<<endl; cout<<max<<endl; for(inti=0;i<@@ m;i++){ for(intj=0;j<@@ strlen(@@ name@@ [i])@@ ;j++){ if(name@@ [i][j]@@ -'@@ A@@ '==@@ author@@ )@@ cout<<str@@ [i]<<endl; } } return0; }  
c -1
h -1
intmain() { inta[100][100]; intk,i,j,@@ l,@@ m,n,@@ x=0,@@ y=0; cin>>k; for(l=1;l@@ <=k;@@ l++) { cin>>m>>n; for(i=1;i<=m;i++) { for(j=1;j<=n;j++) { cin>>a[i][j]; } } for(i=1;i<=m;i++) { for(j=1;j<=n;j++) { x=x+@@ a[i][j]; } } for(i=2;i<=@@ m-1;i++) { for(j=2;j<=@@ n-1;j++) { y=@@ y@@ +@@ a[i][j]; } } cout<<@@ x@@ -@@ y@@ <<endl; x=0; y=0; } return0; }  
c -1
h -1
0

intmain() { intk,@@ i; cin>>k; for(i=0;i<k;i++) { intm,n,@@ j,@@ l,@@ s=0,@@ A[@@ 110@@ ]; cin>>m>>n; for(j=0;j<m;j++) { for(l=0;l<n;l++) cin>>@@ *(@@ A@@ +@@ l); if(j@@ ==0||j==@@ m-1) { for(l=0;l<n;l++) s=s@@ +*(@@ A@@ +@@ l); } else s=s@@ +*@@ A@@ +*(@@ A@@ +n-1); } cout<<s<<endl; } return0; }  
c -1
h -1
intmain(intargc,char*argv[]) { intn,@@ j=0,@@ i,@@ num=0,@@ t; chara[100@@ ][@@ 10],@@ d@@ [100][10],@@ temp@@ [10]; intb[100@@ ],@@ c[100]; scanf("%d",&n); for(i=0;i<n;i++){ scanf("%s%d",@@ a[i],&@@ b[i]); } for(i=0;i<n;i++){ if(b[i]@@ >=60){ c[j]=@@ b[i]; strcpy(@@ d@@ [j],@@ a[i]); j++; num@@ =j; } } for(i=1;i<@@ num;i++) for(j=0;j<@@ num@@ -i;j++){ if(c@@ [j]<@@ c@@ [j+1@@ ]){ t=@@ c@@ [j+1]; c@@ [j+1]=@@ c[j]; c[j]=@@ t; strcpy(@@ temp,@@ d@@ [j+1]); strcpy(@@ d@@ [j+1],@@ d@@ [j]); strcpy(@@ d@@ [j],@@ temp); } } for(i=0;i<n;i++){ if(b[i]@@ <60){ c[@@ num@@ ]=b[i]; strcpy(@@ d[@@ num@@ ],@@ a[i]); num++; } } for(j=0;j<n;j++){ printf("%s\n",@@ d@@ [j]); } return0; }  
c -1
h -1
0

intmain() { intn,k,i,j,@@ sum,@@ leap@@ =0; inta[@@ 10001@@ ]; scanf("%d%d",&n,&k); for(i=0;i<n;i++) { scanf("%d",&a[i]); } for(i=0;i<n;i++) { for(j=0;j<n;j++) { if(i==@@ j) continue; else { sum=@@ a[i]+a[j]; if(sum@@ ==k) { printf("yes"); leap@@ =1; break; } } } if(leap@@ ==1) break; } if(leap@@ ==0) printf("no"); return0; }  
c -1
h -1
inta[100],b[100]; intn,m; main() { voidinput@@ (void@@ ); void@@ order1@@ (void@@ ); void@@ order2@@ (void@@ ); voidoutput@@ (void@@ ); input(); order1@@ (); order2@@ (); output@@ (); } voidinput@@ (void) { inti; scanf("%d%d\n",&n,&@@ m); for(i=1;i<=n;i++) scanf("%d",&a[i]); for(i=1;i<=m;i++) scanf("%d",&b[i]); } void@@ order1@@ (void) { inti,j,t; for(i=1;i<=n-1;i++) for(j=i+1;j<=n;j++) if(a[i]>=@@ a[j]@@ ){@@ t=@@ a[i];a[i]=@@ a[j];a[j]=@@ t;} } void@@ order2@@ (void) { inti,j,t; for(i=1;i<=@@ m-1;i++) for(j=i+1;j<=@@ m;j++) if(b[i]@@ >=@@ b[j]@@ ){@@ t=@@ b[i]@@ ;@@ b[i]=b[j]@@ ;@@ b[j]=@@ t;} } voidoutput@@ (void) { inti; for(i=1;i<=n;i++) printf("%d",a[i]); for(i=1;i<m;i++) printf("%d",b[i]); printf("%d",@@ b[m@@ ]); }  
c -1
h -1
0

main() { intn,i,@@ m,@@ j; inta[@@ 25],b[@@ 25]; m=0; scanf("%d",&n); for(i=n-1;i>=0;i--) {@@ scanf("%d",&a[i]); b[i]@@ =1;} for(j=1;j<n;j++) { for(i=0;i<j;i++) { if(a[j]>=@@ a[i]) {if((@@ b[i]@@ +1)@@ >=@@ b[j]) b[j]=@@ b[i]@@ +1;} } } for(i=0;i<n;i++) { if(b[i]@@ >=@@ m) m=@@ b[i]@@ ;} printf("%d",m); }  
c -1
h -1
intmain(){ inta[16],@@ i=0,j=0,@@ n=0,@@ Two@@ ; for(i=0;i<16@@ ;i++){ a[i]=0; } while(@@ 1@@ >0){ n=0; Two@@ =0; for(i=0;i<16@@ ;i++){ cin>>a[i]; if((@@ a[i]@@ ==0)||(@@ a[0]@@ ==@@ -1)@@ )break; elsen@@ ++; } if(a[0]==-1)break; for(i=0;i<n;i++){ for(j=i+1;j<n;j++){ if((@@ a[i]==@@ (@@ 2*@@ a[j])@@ )||(@@ a[j]==@@ (@@ 2*@@ a[i]@@ ))@@ ){ Two@@ ++; } } } cout<<@@ Two@@ <<endl; } return0; }  
c -1
h -1
0

intmain() { chara[256],b[@@ 256],c[@@ 256],@@ d@@ [256],@@ e@@ [256]; inti,j,@@ p; gets(a); gets(b); gets(c); for(i=0;i<=@@ strlen(a)@@ -@@ strlen(b@@ );i++) { p=0; for(j=i;j<i+@@ strlen(b@@ );j++) if(b@@ [j-i@@ ]==@@ a[j]) p++; if(p==@@ strlen(b@@ )) { d@@ [i]@@ ='\0'; break; } d[i]=@@ a[i]; } if(i==@@ strlen(a)@@ -@@ strlen(b@@ )@@ +1) puts(@@ a); else { strcat(@@ d,@@ c); for(j=i@@ +@@ strlen(b@@ )@@ ;j<@@ strlen(a)@@ ;j++) e@@ [j-i@@ -@@ strlen(b@@ )@@ ]=@@ a[j]; e@@ [j-i@@ -@@ strlen(b@@ )@@ ]='\0'; strcat(@@ d,@@ e); printf("%s",@@ d); } return0; }  
c -1
h -1
int@@ run@@ (int@@ a) { if(a%@@ 4==0&&a%100!=0@@ ||a%@@ 400==0) { return1; } else { return0; } } intmain() { inty,m,@@ d; cin>>y>>m>>d; int@@ isr@@ =@@ run@@ (@@ y); int@@ p[@@ 13]={0,31,28,31,30,31,30,31,31,30,31,30,31}; intdays@@ =0; for(inti=1;i<@@ m;i++) { days=@@ days@@ +@@ p[i]; } days=@@ days@@ +d; if(@@ isr@@ ==1&&@@ m@@ >=@@ 3) days@@ ++; cout<<@@ days; }  
c -1
h -1
0

intmain(){ intk,@@ jz@@ [100][100],@@ ROW@@ ,@@ COL@@ ,@@ h@@ [100],@@ y,@@ i,@@ row,col; scanf("%d",&k); for(i=0;i<k;i++){ scanf("%d%d",&@@ ROW@@ ,&@@ COL@@ ); for(row=0;row@@ <ROW@@ ;@@ row++){ for(col=0;col@@ <@@ COL@@ ;col@@ ++){ scanf("%d",&@@ jz@@ [@@ row][col@@ ]); }} y=0; for(row=0;row@@ <ROW@@ ;@@ row++){ y@@ +=@@ jz@@ [@@ row@@ ][0]; } for(row=0;row@@ <ROW@@ ;@@ row++){ y@@ +=@@ jz@@ [@@ row@@ ][@@ COL@@ -1]; } for(col=0;col@@ <@@ COL@@ ;col@@ ++){ y@@ +=@@ jz@@ [0][@@ col@@ ]; } for(col=0;col@@ <@@ COL@@ ;col@@ ++){ y@@ +=@@ jz@@ [@@ ROW@@ -1@@ ][col@@ ]; } h@@ [i]=@@ y@@ -@@ jz@@ [0][@@ 0]-@@ jz@@ [0][@@ COL@@ -1]@@ -@@ jz@@ [@@ ROW@@ -1@@ ][0]-@@ jz@@ [@@ ROW@@ -1@@ ][@@ COL@@ -1]; } for(i=0;i<k;i++){ printf("%d\n",@@ h[i]); }@@ return0; }  
c -1
h -1
inta[@@ 1000],@@ c,d; void@@ kg@@ (); void@@ m@@ (int@@ ); void@@ r@@ (); main() { r@@ (); m@@ (@@ c); kg@@ (); m@@ (@@ d); } void@@ r@@ () { scanf("%d%d",&@@ c@@ ,&@@ d); } void@@ m@@ (int@@ s) { inti,j,t; for(i=0;i<@@ s;i++) { scanf("%d",&a[i]); } for(i=0;i<@@ s;i++) { for(j=0;j<@@ s@@ -i-1;j++) { if(a[j]>a[j+1]) { t=a[j]; a[j]=a[j+1]; a[j+1]=t; } } } for(i=0;i<@@ s;i++) { printf("%d",a[i]); if(i<@@ s@@ -1) kg@@ (); } } void@@ kg@@ () { printf(""); }  
c -1
h -1
0

intmain() { inta[100][100@@ ]={0}; int@@ hang@@ ,@@ lie@@ ; cin>>@@ hang@@ >>@@ lie@@ ; inti,j; for(i=0;i<@@ hang@@ ;i++) { for(j=0;j<@@ lie@@ ;j++) cin>>a[i][j]; } intt; for(t=0;t@@ <=@@ hang@@ +@@ lie@@ -2@@ ;t++) { for(i=0;i<@@ hang@@ ;i++) { for(j=0;j<@@ lie@@ ;j++) { if(i+j@@ ==@@ t) cout<<a[i][j]<<endl; } } } return0; }  
c -1
h -1
intmain() { inta[@@ 17@@ ]={0}; inti,j,k,@@ l; intnum=0; for(l=1;@@ ;l++) { for(i=1;i<=@@ 16@@ ;i++) { cin>>a[i]; if(a[i]@@ ==0||@@ a[i]@@ ==-1) { break; } } if(a[i]==-1) break; for(j=i-1@@ ;j@@ >=1@@ ;j--) for(k=j@@ -1@@ ;k@@ >=1@@ ;k--) { if(a[j]>@@ a[k]@@ &&@@ a[j]@@ %@@ a[k]@@ ==0&&@@ a[j]@@ /@@ a[k]==@@ 2) num++; if(a[k]@@ >@@ a[j]&&@@ a[k]@@ %@@ a[j]@@ ==0&&@@ a[k]@@ /@@ a[j]==@@ 2) num++; } cout<<num<<endl; inta@@ [@@ 17@@ ]={0}; num=0; } return0; }  
c -1
h -1
0

int@@ read(); int@@ find@@ (); intn,k,@@ a[1000],@@ m; intmain() { read(); m=@@ find@@ (); if(m==0) printf("no"); else@@ printf("yes"); return0; } int@@ read@@ () { inti; scanf("%d%d",&n,&k); for(i=1;i<=n;i++) scanf("%d",&a[i]); return0; } int@@ find@@ () { inti,j; for(i=1;i<=n-1;i++) for(j=i+1;j<=n;j++) {@@ if(a[i]+a[j]==k) {@@ return1; break; } } return0; }  
c -1
h -1
intmain(intargc,char*argv[]) { intlen1,len2,@@ i,j,@@ x,@@ tag@@ =0; chars1@@ [300],@@ s2@@ [300],@@ s3@@ [300]; scanf("%s",@@ s1); scanf("%s",@@ s2); scanf("%s",@@ s3); len1=strlen(@@ s1); len2=strlen(@@ s2); for(i=0;i<=@@ len1@@ -len2@@ ;i++){ for(j=i;j<i+@@ len2@@ ;j++){ if(s1@@ [j]!=@@ s2@@ [j-i@@ ]){ break; } if(j==@@ i+@@ len2@@ -1){ tag@@ =1; x@@ =i; } } if(tag@@ ){ break; } } if(tag@@ ){ for(i=0;i<x;i++){ printf("%c",@@ s1[i]); } printf("%s",@@ s3); for(i=@@ x+@@ len2@@ ;i<@@ len1@@ ;i++){ printf("%c",@@ s1[i]); } } else{ printf("%s",@@ s1); } return0; }  
c -1
h -1
0

intmain() { chara[@@ 510@@ ],b[@@ 510@@ ]; intx,y,@@ i,@@ p=0; doublen,@@ q; scanf("%lf",&n); scanf("%s",a); scanf("%s",b); x@@ =strlen(a); y@@ =strlen(b); if(x@@ !=@@ y) { printf("error"); } else { for(i=0;i<x;i++) { if((a[i]!='@@ A'&&a[i]!='T'&&a[i]!='C'&&a[i]!='G')||(b[i]!='A'&&b[i]!='T'&&b[i]!='C'&&b[i]!='@@ G')) { printf("error"); return0; } if(a[i]==b[i]) p++; } q=@@ n*@@ x; if(p@@ >@@ q) printf("yes"); else printf("no"); } return0; }  
c -1
h -1
voidmain() { inta[100@@ ],@@ n,i,j,@@ k=0,@@ d@@ [100],@@ p; char@@ b[100@@ ][@@ 10@@ ],c[@@ 10],@@ str@@ [100][10]; scanf("%d",&n); for(i=0;i<n;i++) scanf("%s%d",@@ str@@ [i],&@@ a[i]); for(i=0;i<n;i++) if(a[i]@@ >=60) { d@@ [k]=@@ a[i]; strcpy(@@ b[k@@ ],@@ str[i]); k++; } for(i=0;i<k;i++) for(j=0;j<@@ k@@ -i-1;j++) if(d@@ [j]<@@ d@@ [j+1]) { p=@@ d@@ [j+1]; d@@ [j+1]=@@ d@@ [j]; d@@ [j]=@@ p; strcpy(@@ c,@@ b@@ [j+1]); strcpy(@@ b@@ [j+1],@@ b[j]); strcpy(@@ b[j]@@ ,@@ c); } for(i=0;i<k;i++) printf("%s\n",@@ b[i]); for(i=0;i<n;i++) if(a[i]@@ <60) printf("%s\n",@@ str[i]); }  
c -1
h -1
0

intmain() { inta[16],@@ i,j,k,@@ h,@@ n; for(h@@ =0;@@ ;@@ h++) {@@ n=0; for(i=0;i<16;i++) { scanf("%d",&a[i]); if(a[i]==0) break; } if(a[0]==-1) {break;} for(j=0;j<i;j++) {@@ for(k=0;k<i;k++) {if((@@ a[k]@@ /@@ a[j]@@ )==@@ 2@@ &&(@@ a[k]@@ %@@ a[j])@@ ==0) n=n+1; else@@ n=@@ n; } } printf("%d\n",n); if(a[0]==-1) {break;} } return0; }  
c -1
h -1
intmain() { int@@ list@@ [@@ 15@@ ]={0}; inti,j,@@ num,@@ sum; cin>>num; while(@@ num@@ !=-1) { i=1; j=0; sum=0; list@@ [0]=@@ num; while((@@ cin>>@@ list@@ [i],@@ list@@ [i])@@ !=0) i++; while(@@ list@@ [j]) { for(i=j@@ +1;@@ list@@ [i]@@ ;i++) { if(@@ list@@ [i]==@@ 2*@@ list@@ [j]@@ ||@@ 2*@@ list@@ [i]==@@ list@@ [j]) sum++; } j++; } cout<<sum<<endl; cin>>num; } return0; }  
c -1
h -1
1


int@@ factorization@@ (int@@ num,int@@ i); intmain() { intn,i,@@ num; cin>>n; for(i=0;i<n;i++) { cin>>num; cout<<@@ factorization@@ (num,@@ 2)<<endl; } return0; } int@@ factorization@@ (int@@ num,int@@ i) { intj,@@ squ@@ ,@@ sum=1; squ@@ =@@ sqrt(@@ (double)@@ num); for(j=i;j<=@@ squ@@ ;j++) { if(num@@ %j==0) sum=sum+@@ factorization@@ (@@ num@@ /j,j); } returnsum; };  
c -1
h -1
structpatient { charid[10]; intage; structpatient*next; }; intn; structpatient*@@ creat@@ (int@@ num) { structpatient@@ *head,*p1,*p2; n=0; p1=p2=(struct@@ patient*)malloc(sizeof(structpatient)); scanf("%s%d",@@ p1->id,&p1->age); head=NULL; while(n@@ <(@@ num@@ -1)) { n=n+1; if(n@@ ==1)head=p1; elsep2->next=p1; p2=p1; p1=(struct@@ patient*)malloc(sizeof(structpatient)); scanf("%s%d",@@ p1->id,&p1->age); } p2->next=p1; p1->next=NULL; return(head); } structpatient*@@ old@@ (structpatient@@ *head) { structpatient*@@ old@@ ,*@@ p1,*p2,*@@ p; n=0; p=head; p1=p2=(struct@@ patient*)malloc(sizeof(structpatient)); old@@ =NULL; while(p!=NULL) { if((@@ n@@ ==0)&&(@@ p->age@@ >=60@@ )) { strcpy(@@ p1->id@@ ,"@@ "); strcpy(@@ p1->@@ id,@@ p->@@ id); p1->age@@ =p->@@ age; old@@ =p1; p2=p1; n=1; } elseif(@@ p->age@@ >=60) { strcpy(@@ p1->id@@ ,"@@ "); strcpy(@@ p1->@@ id,@@ p->@@ id); p1->age@@ =p->@@ age; p2->next=p1; p2=p1; } p1=(struct@@ patient*)malloc(sizeof(structpatient)); p=p->next; } p2->next=NULL; return(@@ old@@ ); } structpatient*@@ sort@@ (structpatient@@ *head) { structpatient@@ head0@@ ,@@ end0@@ ; structpatient*@@ p0@@ ,*@@ p1,*p2,*@@ p; head0@@ .@@ next@@ =head; p=head; while(p@@ ->next@@ !=NULL) p=p->next; p=p@@ ->next@@ =&@@ end0@@ ; while(p@@ !=@@ head0@@ .@@ next@@ ) { p0@@ =&@@ head0@@ ; p1=@@ p0@@ ->next; p2=p1->next; while(@@ p2@@ !=@@ p) { if((@@ p1->age@@ )@@ <(@@ p2->age@@ )) { p0@@ ->next=@@ p2; p1->next=@@ p2->next; p2->next=p1; p0@@ =p2; p2=p1->next; } else { p0@@ =p1; p1=p2@@ ; p2=p2->next; } } p=@@ p1; } while(p@@ ->next@@ !=@@ &@@ end0@@ ) p=p->next; p@@ ->next=NULL; return(@@ p1); } void@@ print2@@ (structpatient@@ *head) { structpatient@@ *p; p=head; while(p!=NULL) { if(p->@@ age@@ <60@@ )@@ printf("%s\n",p->@@ id@@ ),@@ p=p->next; else@@ p=p->next; } } void@@ print1@@ (structpatient@@ *head) { structpatient@@ *p; p=head; while(p!=NULL) { printf("%s\n",p->id); p=p->next; } } voidmain() { structpatient*@@ creat@@ (int@@ num); structpatient*@@ old@@ (structpatient@@ *head@@ ); structpatient*@@ sort@@ (structpatient@@ *head@@ ); void@@ print1@@ (structpatient@@ *head@@ ); void@@ print2@@ (structpatient@@ *head@@ ); structpatient@@ *head,*@@ oldp@@ ,*@@ sortold@@ ; intnum; scanf("%d",&num); head=creat@@ (@@ num); oldp@@ =@@ old@@ (head); sortold@@ =@@ sort(@@ oldp@@ ); print1@@ (@@ sortold@@ ); print2@@ (head); }  
c -1
h -1
0

intsum@@ =1; voidf@@ (int@@ b,int@@ a) { for(inti=@@ b@@ ;i<=@@ a;i++){ if((@@ a@@ %i@@ ==0)&&(@@ i<=@@ a/@@ i@@ )){ sum=sum+1; f(@@ i,@@ a/@@ i); } if(i>@@ a/@@ i@@ )break; } } intmain() { inta,@@ n; cin>>n; while(n@@ >0){ cin>>a; sum=1; f(@@ 2,@@ a); cout<<sum<<endl; n--; } return0; }  
c -1
h -1
struct@@ s {@@ long@@ inta; intb; intc; intsum; struct@@ s@@ *@@ next@@ ;@@ }; voidmain() {@@ struct@@ s@@ *@@ head1@@ ,*@@ head2@@ ; struct@@ s@@ *p,*@@ p1,*p2,*@@ p3@@ ,*@@ p4@@ ; long@@ intn,i; int@@ rank1@@ ,@@ rank2@@ ,@@ rank3@@ ; scanf("%ld",&n); p1=(struct@@ s@@ *)malloc(@@ L@@ ); scanf("%ld%d%d",&@@ p1->@@ a@@ ,&p1->@@ b@@ ,&p1->@@ c); p1->sum=p1->@@ b+@@ p1->@@ c; rank1@@ =p1->@@ sum; for(i=1;;i++) {@@ if(i@@ ==1)@@ head1@@ =p1; elsep2->next=p1; p2=p1; if(i==@@ n@@ )break; p1=(struct@@ s@@ *)malloc(@@ L@@ ); scanf("%ld%d%d",&@@ p1->@@ a@@ ,&p1->@@ b@@ ,&p1->@@ c); p1->sum=p1->@@ b+@@ p1->@@ c; if(p1->@@ sum>@@ rank1@@ )@@ rank1@@ =p1->@@ sum@@ ;} p2->next=@@ N; p1=@@ head1@@ ; while(@@ rank1@@ !=@@ p1->@@ sum) {@@ p2@@ =p1;@@ p1=p1->next@@ ;} if(@@ rank1@@ ==@@ p1->@@ sum) {if(@@ p1@@ ==@@ head1@@ )@@ head1@@ =@@ p1->next; else@@ p2->next=@@ p1->next; p3@@ =p1;} head2@@ =@@ p3; p4@@ =@@ p3; p1=@@ head1@@ ; rank2@@ =p1->@@ sum; while(p1@@ !=@@ N@@ ) {if(@@ p1->@@ sum>@@ rank2@@ )@@ rank2@@ =p1->@@ sum; p1=p1->next@@ ;} p1=@@ head1@@ ; while(@@ rank2@@ !=@@ p1->@@ sum) {@@ p2@@ =p1;@@ p1=p1->next@@ ;} if(@@ rank2@@ ==@@ p1->@@ sum) {if(@@ p1@@ ==@@ head1@@ )@@ head1@@ =@@ p1->next; else@@ p2->next=@@ p1->next; p3@@ =p1;} p4@@ ->next=@@ p3; p4@@ =@@ p3; p1=@@ head1@@ ; rank3@@ =p1->@@ sum; while(p1@@ !=@@ N@@ ) {if(@@ p1->@@ sum>@@ rank3@@ )@@ rank3@@ =p1->@@ sum; p1=p1->next@@ ;} p1=@@ head1@@ ; while(@@ rank3@@ !=@@ p1->@@ sum) {@@ p2@@ =p1;@@ p1=p1->next@@ ;} if(@@ rank3@@ ==@@ p1->@@ sum) {if(@@ p1@@ ==@@ head1@@ )@@ head1@@ =@@ p1->next; else@@ p2->next=@@ p1->next; p3@@ =p1;} p4@@ ->next=@@ p3; p3@@ ->next=@@ N; p=@@ head2@@ ; do@@ {@@ printf("%ld%d\n",@@ p->@@ a,@@ p->@@ sum); p=p@@ ->next@@ ;@@ }while(p@@ !=@@ N); }  
c -1
h -1
0

intmain(){ intl,@@ a,b,@@ s,@@ i; doublen,@@ x; char@@ zfca@@ [501]; char@@ zfcb@@ [501]; a=0; b=0; scanf("%lf",&n); scanf("%s",@@ zfca@@ ); scanf("%s",@@ zfcb@@ ); int@@ la@@ =strlen(@@ zfca@@ ); int@@ lb@@ =strlen(@@ zfcb@@ ); if(@@ la@@ !=@@ lb@@ ){@@ printf("error");} else{@@ a@@ =1;} if(a@@ ==1){ while(1){ for(i=0;@@ zfca@@ [i]!='\0';i++){ if(@@ zfca@@ [i]!='A'&&@@ zfca@@ [i]!='T'&&@@ zfca@@ [i]!='C'&&@@ zfca@@ [i]!='G'){ printf("error"); break;}} if(@@ zfca@@ [i]!=@@ '\0@@ '&&@@ zfca@@ [i]!='A'&&@@ zfca@@ [i]!='T'&&@@ zfca@@ [i]!='C'&&@@ zfca@@ [i]!='G')@@ {break;} for(i=0;@@ zfcb@@ [i]!='\0';i++){ if(@@ zfcb@@ [i]!='A'&&@@ zfcb@@ [i]!='T'&&@@ zfcb@@ [i]!='C'&&@@ zfcb@@ [i]!='G'){ printf("error"); break;}} if(@@ zfcb@@ [i]==@@ '\0')@@ {@@ b@@ =1;} break; }} if(a@@ ==1&&@@ b@@ ==1){ for(i=0,@@ s=0;@@ zfca@@ [i]!='@@ 0'@@ ;i++) {if(@@ zfca@@ [i]==@@ zfcb@@ [i]@@ ){@@ s=s@@ +1;@@ }} if(a@@ ==1&&@@ b@@ ==1){@@ x@@ =1.0*@@ s/@@ la@@ ; if(x>@@ n@@ ){printf("yes");} else{printf("no");} } } return0; }  
c -1
h -1
int@@ run@@ (intn) { if(n@@ %4==0&&@@ n@@ %@@ 100!=0) return1; if(n%@@ 400==0) return1; return0; } int@@ yue@@ (int@@ y@@ ,intn) { if(n@@ ==1||@@ n==@@ 3@@ ||@@ n==@@ 5@@ ||@@ n==@@ 7@@ ||@@ n==@@ 8@@ ||@@ n==@@ 10@@ ||@@ n==@@ 12) return@@ 31; if(@@ run@@ (@@ y)@@ ==1&&@@ n==@@ 2) return@@ 29; if(@@ run@@ (@@ y)@@ ==0&&@@ n==@@ 2) return@@ 28; return@@ 30; } intdays@@ (int@@ y,int@@ m,int@@ d) { intk=0; for(inti=1;i<@@ m;i++) k@@ +=@@ yue@@ (@@ y,@@ i); k@@ +=@@ d; return@@ k; } intmain() { inty,m,@@ d; scanf("%d%d%d",&y,&m,&d); printf("%d",@@ days@@ (@@ y,@@ m,@@ d@@ )); return0; }  
c -1
h -1
0

voidmain() { intn,a[@@ 1000]={0},@@ c[@@ 27@@ ]={0},@@ i,j,k,@@ m,@@ p,@@ d[@@ 1000]={0}; charb[@@ 1000][@@ 30@@ ]={@@ {@@ 0@@ }@@ }; scanf("%d",&n); for(i=0;i<n;i++) { scanf("%d%s",&a[i],@@ b[i]); } for(i=0;i<n;i++) { for(j=0;j<26;j++) { for(k=1;k<=@@ 26@@ ;k++) { if(b[i]@@ [j]==@@ 64@@ +k)@@ c@@ [k]=@@ c@@ [k]@@ +1; } } } m=@@ c[@@ 1@@ ]; p=1; for(i=1;i<@@ 27@@ ;i++) { if(c@@ [i]>@@ m) { m=@@ c[i]; p=i; } } for(i=0;i<n;i++) { for(j=0;j<26;j++) { if(b[i]@@ [j]==@@ 64@@ +p@@ )@@ d@@ [i]=1; } } printf("%c\n",@@ 64@@ +@@ p); printf("%d\n",m); for(i=0;i<@@ 1000@@ ;i++) { if(d@@ [i]@@ ==1)@@ printf("%d\n",a[i]); } }  
c -1
h -1
intmain() { intn,k; inta[1000]; scanf("%d%d",&n,&k); for(intj=0;j<n;j++) {scanf("%d",&@@ a[j]); } for(int@@ e@@ =0;e@@ <=n;@@ e@@ ++){ for(inti=@@ e@@ +1;i<@@ n;i++){ if(a[@@ e@@ ]+@@ a[i]==@@ k){ printf("yes"); e=@@ n+1; i=@@ n@@ ;} } if(e@@ ==@@ n){ printf("no");} } return0; }  
c -1
h -1
0

intmain(){ intsz[1000]; inti,@@ r,@@ s,@@ sh@@ =0; intn,k; scanf("%d%d",&n,&k); for(i=0;i<n;i++){ scanf("%d",&sz[i]); } for(@@ r@@ =1;@@ r@@ <=n;@@ r@@ ++){ int@@ e; for(s=0;s@@ <@@ n-@@ r@@ ;s@@ ++){ if(sz[@@ s@@ ]>@@ sz[@@ s@@ +1@@ ]){ e=@@ sz[@@ s@@ +1]; sz[@@ s@@ +1]=@@ sz[@@ s@@ ]; sz[@@ s@@ ]=@@ e; } } } for(int@@ y=0;y@@ <n;@@ y@@ ++){ if(sz[@@ y@@ ]+sz[@@ y@@ ]==k){ sh@@ =0; }elseif(@@ sz[@@ y@@ ]+sz[@@ y@@ ]>@@ k){ for(int@@ w@@ =0;@@ w@@ <@@ y@@ ;@@ w@@ ++){ if(sz[@@ y@@ ]+sz[@@ w@@ ]==k){ sh@@ =1; break; } } }elseif(@@ sz[@@ y@@ ]+sz[@@ y@@ ]<@@ k){ for(int@@ w=@@ y@@ +1;@@ w@@ <=n;@@ w@@ ++){ if(sz[@@ y@@ ]+sz[@@ w@@ ]==k){ sh@@ =1; break; } } } } if(@@ sh@@ ==0){ printf("no"); }else printf("yes"); return0; }  
c -1
h -1
intmain() { int@@ la@@ ,lb@@ ,i,@@ d; double@@ t,@@ tt@@ ; chara[@@ 505@@ ],b[@@ 505@@ ]; scanf("%lf",&@@ t); scanf("%s",a); scanf("%s",b); la@@ =strlen(a); lb@@ =strlen(b); d@@ =-1; if(@@ la@@ ==@@ lb@@ ) { d=0; for(i=0;i<@@ la;i++) { if(a[i]==b[i]) { d++; } if((a[i]!='@@ A'&&a[i]!='T'&&a[i]!='C'&&a[i]!='G')||(b[i]!='A'&&b[i]!='T'&&b[i]!='C'&&b[i]!='@@ G')) { d@@ =-1; break; } } } if(d@@ <0) printf("error"); else { tt@@ =@@ d@@ *@@ 1@@ .@@ 000@@ /@@ la@@ ; if(@@ tt@@ >@@ t) printf("yes"); else printf("no"); } return0; }  
c -1
h -1
0

intmain() { intyear,month,day,@@ num=0,@@ i@@ , a[@@ 12]={31,@@ 0@@ ,31,30,31,30,31,31,30,31,30,31}; cin>>year>>@@ month>>@@ day; if((@@ year%@@ 400==0)||(@@ (@@ year%100!=0@@ )&&(@@ year%@@ 4@@ ==0)@@ )) a[1]=29; else@@ a[1]=@@ 28; for(i=0;i<month-1;i++) { num+=@@ a[i]; } num+=@@ day; cout<<num<<endl; return0; }  
c -1
h -1
intf@@ (intx) { int@@ z; if((x@@ %@@ 4==0)&&(@@ x@@ %100!=0@@ )||(@@ x%@@ 400==0)@@ )@@ z=1; else@@ z=0; return@@ z; } main() { intyear,month,day; scanf("%d%d%d",&year,&month,&day); int@@ z,@@ i,@@ sum=0; z=@@ f(@@ year@@ ); inta[@@ 12@@ ]; if(z@@ ==1){@@ inta[@@ ]={31,@@ 29,31,30,31,30,31,31,30,31,30,31}; for(i=0;i<month-1;i++) { sum=sum+@@ a[i]; }} else{@@ inta[@@ ]={31,@@ 28,31,30,31,30,31,31,30,31,30,31}; for(i=0;i<month-1;i++) { sum=sum+@@ a[i]; }} sum=sum+day; printf("%d",sum); getchar(); getchar(); return0; }  
c -1
h -1
1


voidmain() { struct@@ tushu { intnum; char@@ zuozhe@@ [27]; }@@ ts@@ [999]; inti,j,n,@@ k,@@ temp; intcount@@ [26]={0}; scanf("%d",&n); for(i=0;i<n;i++) { scanf("%d%s",&@@ ts@@ [i].@@ num,@@ ts@@ [i].@@ zuozhe@@ ); for(j=0;@@ ts@@ [i].@@ zuozhe@@ [j]!='\0';j++) {@@ count[@@ ts@@ [i].@@ zuozhe@@ [j]-65@@ ]@@ ++;} } temp=@@ count@@ [0]; k=0; for(i=0;i<26;i++) { if(count@@ [i]>@@ temp@@ ){@@ k@@ =i;@@ temp=@@ count@@ [i]@@ ;} } printf("%c\n",@@ k@@ +65); printf("%d\n",@@ count@@ [k]); for(i=0;i<n;i++) { for(j=0;@@ ts@@ [i].@@ zuozhe@@ [j]!='\0';j++) { if(@@ ts@@ [i].@@ zuozhe@@ [j]==@@ k@@ +65) { printf("%d\n",@@ ts@@ [i].num); break; } } } }  
c -1
h -1
intmain() { inti,j,@@ l1,@@ c1@@ ,@@ l2@@ ,@@ c2@@ ,@@ count=0,@@ n; inta[@@ 500@@ ][@@ 500]; cin>>n; for(i=1;i<=n;i++) { for(j=1;j<=n;j++) { cin>>a[i][j]; } } for(i=1;i<=n;i++) { for(j=1;j<=n;j++) { if(a[i][j]@@ !=0&&@@ a[i]@@ [j+1@@ ]==0) { l1@@ =i; c1@@ =j+1@@ ;break; } } if(a[i][j]@@ !=0&&@@ a[i]@@ [j+1@@ ]==0) { l1@@ =i; c1@@ =j+1@@ ;break; } } for(@@ ;i<=n;i++) { for(j=1;j<=n;j++) { if(a[i][j]==0&&@@ a[i]@@ [j+1]@@ !=0) { l2@@ =i; c2@@ =j; } } } count@@ =(@@ l2@@ -@@ l1@@ -1)*(@@ c2@@ -@@ c1@@ -1); if(count==@@ -@@ 20@@ ) { cout<<@@ 9@@ ; } elseif(@@ count@@ ==@@ -@@ 6) { cout<<@@ 2; } else { cout<<@@ count; } return0; }  
c -1
h -1
0

intmain() { intn,k; inta[1000]; scanf("%d%d",&n,&k); inti,j,@@ r,@@ f; for(i=0;i<n;i++) { scanf("%d",&a[i]); } f=0; for(j=0;j<n;j++) { for(@@ r@@ =j+1@@ ;r@@ <n;@@ r++) { if(a[j]@@ +@@ a[r@@ ]==@@ k) { f@@ ++; } } } if(f@@ >0) { printf("yes"); } else printf("no"); return0; }  
c -1
h -1
intf@@ (intn) { intsum; switch(@@ n) {@@ case1:@@ sum=0;@@ break; case2:@@ sum=@@ 31;break; case3:@@ sum=(@@ 31+28@@ );break; case4:@@ sum=(@@ 31+28@@ +31@@ );break; case5:@@ sum=(@@ 31@@ *2@@ +28@@ +30@@ );break; case6:@@ sum=(@@ 31*3@@ +28@@ +30@@ );break; case7:@@ sum=(@@ 31*3@@ +28@@ +30*2@@ );break; case8:@@ sum=(@@ 31*@@ 4@@ +28@@ +30*2@@ );break; case9:@@ sum=(@@ 31*5@@ +28@@ +30*2@@ );break; case10:@@ sum=(@@ 31*5@@ +28@@ +30@@ *3@@ );break; case11:@@ sum=(@@ 31*6@@ +28@@ +30@@ *3@@ );break; case12:@@ sum=(@@ 31*6@@ +28@@ +30@@ *@@ 4@@ ); } return(@@ sum); } intmain() { int@@ month@@ [5],@@ day@@ [5],@@ year@@ [5],@@ d[@@ 5@@ ],@@ i; for(i=0;i<=@@ 4;i++) scanf("%d%d%d",&year@@ [i],&@@ month@@ [i],&@@ day@@ [i]); for(i=0;i<=@@ 4;i++) { if((@@ year[i]@@ %4==0&&@@ year[i]@@ %100!=0@@ ||@@ year[i]@@ %@@ 400==0)@@ &&@@ month@@ [i]>@@ 2) d[i]=@@ f(@@ month@@ [i]@@ )+@@ day@@ [i]@@ +1; else d[i]=@@ f(@@ month@@ [i]@@ )+@@ day@@ [i]; printf("%d\n",@@ d[i]); } return0; }  
c -1
h -1
0

intmain(){ intn,k,i,@@ m; scanf("%d%d",&n,&k); intsz[1000]; for(i=0;i<n-1;i++){ scanf("%d",&sz[i]); } scanf("%d",&@@ sz[@@ n-1]); int@@ a=0; for(a=0;a@@ <n;@@ a++){ m=0; for(i=a@@ +1;i<@@ n;i++){ if(@@ sz[a@@ ]+@@ sz@@ [i]==@@ k){ m=1; printf("yes"); break; } } if(m@@ ==1){ break; } } if(m@@ ==0){ printf("no"); } return0; }  
c -1
h -1
intmain() { struct@@ data { intage; charid[10]; }@@ o@@ [@@ 101],@@ y[@@ 101],@@ tmp; int@@ no@@ =0,@@ ny@@ =0; inti,j,n; cin>>n; for(i=0;i<n;i++) { cin>>@@ tmp.@@ id@@ >>@@ tmp.@@ age; if(@@ tmp.@@ age@@ >=60) { o@@ [@@ no@@ ]=@@ tmp; no@@ ++; } else { y[@@ ny@@ ]=@@ tmp; ny@@ ++; } } for(i=@@ no@@ -1@@ ;i>0;i--) { for(j=0;j<i;j++) { if(@@ o@@ [j].age@@ <@@ o@@ [j+1@@ ].age) { o@@ [100@@ ]=@@ o@@ [j]; o@@ [j]=@@ o@@ [j+1]; o@@ [j+1]=@@ o@@ [100]; } } } for(i=0;i<@@ no@@ ;i++) cout<<@@ o@@ [i].@@ id@@ <<endl; for(i=0;i<@@ ny@@ ;i++) cout<<@@ y@@ [i].@@ id@@ <<endl; return0; }  
c -1
h -1
0

intmain(){ int@@ len,@@ k,@@ sum=0,@@ i,@@ t=0; double@@ x,y; char@@ jz@@ [500],@@ a[@@ 500]; scanf("%lf",&x); scanf("%s%s",@@ jz@@ ,@@ a); len=strlen(@@ jz@@ ); k@@ =strlen(a); if(k!=@@ len@@ )@@ printf("error"); else{ for(i=0;i<len@@ ;i++){ if(@@ jz@@ [i]!='T'&&@@ jz@@ [i]!='A'&&@@ jz@@ [i]!='C'&&@@ jz@@ [i]!='G'&&@@ a[i]!='@@ T'&&a[i]!='@@ A'&&a[i]!='@@ G'&&a[i]!='@@ C'){ printf("error"); t=1; break; } if(@@ jz@@ [i]==@@ a[i]) sum++; } y@@ =1.0*@@ sum/@@ len; if(t@@ ==0){ if(y@@ >=@@ x) printf("yes"); elseprintf("no"); } } return0; }  
c -1
h -1
intmain(){ intx,y,@@ i,@@ sum=0; chara[@@ 505@@ ],b[@@ 505@@ ]; doublen,@@ m; scanf("%lf",&n); scanf("%s%s",a,b); x@@ =strlen(a); y@@ =strlen(b); if(x@@ !=@@ y){ printf("error"); goto@@ k; } for(i=0;i<x;i++){ if((a[i]!='@@ A'&&a[i]!='@@ G'&&a[i]!='@@ C'&&a[i]!='@@ T')||(@@ b[i]!='A'&&b[i]!='@@ G'&&b[i]!='@@ C'&&b[i]!='@@ T')@@ ){ printf("error"); goto@@ k; }else{ if(a[i]==b[i]){ sum++; } } } m@@ =(@@ 1.0*@@ sum@@ )@@ /@@ x; if(m@@ >n){ printf("yes"); }else{ printf("no"); } k@@ :@@ return0; }  
c -1
h -1
1


intmain() { intn=0,@@ k=0,@@ i=0,j=0,@@ biaozhi@@ =0; cin>>n>>k; inta[1000]; for(i=0;i<n;i++) { cin>>a[i]; } for(i=0;i<n;i++) { for(j=i+1;j<n;j++) { if(a[i]+a[j]==k) { cout<<"yes"; biaozhi@@ =1; break; } } if(@@ biaozhi@@ ==1) { break; } } if(@@ biaozhi@@ !=1) { cout<<"no"; } return0; }  
c -1
h -1
intmain() { charstring@@ [256],@@ substring@@ [256],@@ replacement@@ [256]; cin>>@@ string@@ >>@@ substring@@ >>@@ replacement@@ ; inti,j=0,@@ length1@@ ,@@ length2@@ ,@@ m,@@ num=0; length1@@ =strlen(@@ string); length2@@ =strlen(@@ substring); for(i=0;i<@@ length1@@ ;i++) { m=i; if(string@@ [i]==@@ substring@@ [j]) { for(j=0;j<@@ length2@@ ;j++) { if(string@@ [i]==@@ substring@@ [j]) { i++; num++; } } } j=0; i=@@ m; if(num@@ ==@@ length2@@ ) { for(j=0;j<@@ length2@@ ;j++) { string@@ [i]=@@ replacement@@ [j]; i++; } break; } num=0; } cout<<@@ string@@ <<endl; return0; }  
c -1
h -1
0

int@@ DFS@@ (int,int); intmain() { int@@ q; cin>>@@ q; for(inti=0;i<@@ q@@ ;i++) { intn; inth@@ =0; cin>>n; cout<<@@ DFS@@ (n,@@ n@@ )<<endl; } return0; } int@@ DFS@@ (intn,int@@ p) { int@@ ans=0; if(n@@ ==1)@@ return1; for(inti=2;i<=@@ p@@ ;i++) { if(n%i==0) { ans=@@ ans@@ +@@ DFS@@ (n/i,i); } } return@@ ans; }  
c -1
h -1
structbook {intnum; charstr@@ [@@ 200]; }@@ bk@@ [1000]; intmain() { intm,@@ i,@@ l,@@ k,@@ p=0,@@ max,@@ maxl@@ ; inta[@@ 200][@@ 1000]; intb[@@ 200]; scanf("%d",&m); for(i=0;i<m;i++) scanf("%d%s",&@@ bk[i].@@ num,@@ bk[i].@@ str); for(l=0;l<@@ 26@@ ;l++) { for(i=0;i<m;i++) { for(k=0;@@ bk[i].@@ str@@ [k]@@ !='\0'@@ ;k++) { if((@@ bk[i].@@ str@@ [k]@@ )==@@ l@@ +65) {@@ a[l@@ ][p@@ ]=@@ bk[i].@@ num; p@@ ++;} } } b[l@@ ]=@@ p; p=0; } max=@@ b[0]@@ ;@@ maxl@@ =0; for(l=0;l<@@ 26@@ ;l++) { if(@@ b[l@@ ]@@ >max) {max=@@ b[l@@ ]; maxl@@ =@@ l@@ ;} } printf("%c\n",@@ maxl@@ +65); printf("%d\n",max); for(i=0;i<@@ max@@ ;i++) printf("%d\n",a[@@ maxl@@ ][i]); return0; }  
c -1
h -1
0

main() { inti,j,k,@@ m,n,@@ b,@@ c,@@ s,@@ y=0; int@@ **@@ a; scanf("%d",&n); a=@@ (int@@ **@@ )@@ malloc(@@ n*sizeof(int)); for(i=0;i<n;i++) a[i]=@@ (int*)malloc(n*sizeof(int)); for(i=0;i<n;i++) for(j=0;j<n;j++) scanf("%d",&a[i][j]); for(i=0;i<n;i++) for(j=0;j<n;j++) { if(a[i][j]==0) {m@@ =i+1; k@@ =j+1; y=1; break; } if(y@@ ==1) break; } y=0; for(i=n-1;i>=0;i--) for(j=n-1;j>=0;j--) { if(a[i][j]==0) {@@ b@@ =i+1; c@@ =j+1; y=1; break; } if(y@@ ==1) break; } s=(@@ b@@ -m@@ -1)*(@@ c@@ -k@@ -1); printf("%d",s); for(i=0;i<n;i++) { free(@@ a[i]); a[i]=0; } free(@@ a); a=0; }  
c -1
h -1
intmain(intargc,char*argv[]) { intm,@@ n[@@ 1000][1000],@@ ai@@ ,@@ aj@@ ,@@ zi@@ ,@@ zj@@ ,i,j,@@ s; scanf("%d",&m); for(i=0;i<m;i++) { for(j=0;j<m;j++) { scanf("%d",&@@ n@@ [i][j]); if(n@@ [i][j]==0) { zi@@ =i;@@ zj@@ =j; } } } for(i=@@ (m@@ -1)@@ ;i>=0;i--) { for(j@@ =(m@@ -1)@@ ;j>=0;j--) { if(n@@ [i][j]==0) { ai@@ =i;@@ aj@@ =j; } } } s=(@@ zj@@ -@@ aj@@ -1)*(@@ zi@@ -@@ ai@@ -1); printf("%d\n",s); return0; }  
c -1
h -1
1


intmain(){ introw,col,@@ array[100][100]; inti,j,k; cin>>row>>col; for(i=0;i<row;i++){ for(j=0;j<col;j++){ cin>>array[i][j]; } } for(k=0;k<col@@ ;k++){ cout<<@@ array[@@ 0][@@ k@@ ]<<endl; for(i=1@@ ,j=@@ k@@ -1;@@ ;i++,j@@ --){ if(i@@ <row@@ &&j@@ >=0) cout<<array@@ [i][j]<<endl; elsebreak; } } for(k=1;k<@@ row@@ ;k++){ cout<<array@@ [k@@ ][col@@ -1]@@ <<endl; for(i=k@@ +1@@ ,j=@@ col@@ -2@@ ;@@ ;i++,j@@ --){ if(i@@ <row@@ &&j@@ >=0) cout<<array@@ [i][j]<<endl; elsebreak; } } return0; }  
c -1
h -1
intmain() {@@ intn,@@ v@@ [@@ 20000],@@ m=0,@@ s[@@ 20000],@@ p=0; scanf("%d",&n); for(inti=0;i<=@@ n-1;i++) { scanf("%d",&@@ v@@ [i]); } for(intj=1;j<=@@ n-1;j++) { for(intk=0@@ ;k<=@@ j@@ -1;k++) { if(@@ v@@ [j]!=@@ v@@ [k]) {@@ p@@ ++;} } if(p==@@ j@@ ){@@ s[m@@ ]=@@ v@@ [j]@@ ;m@@ ++;} p=0; } if(m==0) {printf("%d",@@ v@@ [0]@@ );} else {printf("%d",@@ v@@ [0]@@ );} for(intk=0@@ ;k<=@@ m-1@@ ;k++) { if(k==@@ m-1@@ ){@@ printf("%d",@@ s[k]@@ );} else{@@ printf("%d",@@ s[k]@@ );} } }  
c -1
h -1
0

intmain() { inta,b,c,@@ d; scanf("%d%d%d",&a,&b,&c); if((@@ a%100!=0@@ &&@@ a/@@ 4@@ ==0)@@ ||a%@@ 400==0) { switch(@@ b) { case1:@@ printf("%d",c@@ );break; case2:@@ printf("%d",d@@ =31+@@ c@@ );break; case3:@@ printf("%d",@@ d=@@ 60@@ +c@@ );break; case4:@@ printf("%d",@@ d=@@ 91@@ +c@@ );break; case5:@@ printf("%d",@@ d=@@ 121@@ +c@@ );break; case6:@@ printf("%d",@@ d=@@ 152@@ +c@@ );break; case7:@@ printf("%d",@@ d=@@ 182@@ +c@@ );break; case8:@@ printf("%d",@@ d=@@ 213@@ +c@@ );break; case9:@@ printf("%d",@@ d=@@ 244@@ +c@@ );break; case10:@@ printf("%d",@@ d=@@ 274@@ +c@@ );break; case11:@@ printf("%d",@@ d=@@ 305@@ +c@@ );break; case12:@@ printf("%d",@@ d=@@ 335@@ +c@@ );break; } } else { switch(@@ b) { case1:@@ printf("%d",c@@ );break; case2:@@ printf("%d",d@@ =31+@@ c@@ );break; case3:@@ printf("%d",@@ d=@@ 59@@ +c@@ );break; case4:@@ printf("%d",@@ d=@@ 90@@ +c@@ );break; case5:@@ printf("%d",@@ d=@@ 120@@ +c@@ );break; case6:@@ printf("%d",@@ d=@@ 151@@ +c@@ );break; case7:@@ printf("%d",@@ d=@@ 181@@ +c@@ );break; case8:@@ printf("%d",@@ d=@@ 212@@ +c@@ );break; case9:@@ printf("%d",@@ d=@@ 243@@ +c@@ );break; case10:@@ printf("%d",@@ d=@@ 273@@ +c@@ );break; case11:@@ printf("%d",@@ d=@@ 304@@ +c@@ );break; case12:@@ printf("%d",@@ d=@@ 334@@ +c@@ );break; } } return0; }  
c -1
h -1
intmain() { inta[@@ 20000],b[@@ 20000]; int@@ j=0,@@ i=0,@@ n=0,@@ e=0; cin>>n; for(i=0;i<=n-1;i++) { cin>>a[i]; b[j]=@@ a[i]; j@@ =i+1; } for(i=0;i<=n-1;i++) { for(j=i+1;j<=@@ n-1;j++) { if(a[i]==@@ b[j]) { b[j]@@ =0; } } } cout<<@@ b[0]; for(j=1;j<=@@ n-1;j++) { if(b[j]@@ !=0) cout<<""<<@@ b[j]; } return0; }  
c -1
h -1
0

main() { intk; scanf("%d",&k); int(*p)@@ =@@ (int*)malloc(@@ k@@ *sizeof(int)); int@@ (*@@ q@@ )@@ =@@ (int*)malloc(@@ k@@ *sizeof(int)); inti,j,t; for(i=0;i<k;i++) { scanf("%d",&@@ p[i]); q@@ [i]=1; } for(i=0;i<k;i++) for(j=0;j<i;j++) { t=0; if(p@@ [j]>=@@ p@@ [i]) { t=@@ q@@ [j]+1; if(t@@ >=@@ q@@ [i]) { q@@ [i]=@@ t; } } } intmax=0; for(i=0;i<k;i++) { if(q@@ [i]>max) {max=@@ q@@ [i]@@ ;} } printf("%d",max); }  
c -1
h -1
structStudent@@ { int@@ no; intchinese; intmath; inttotal; }; intmain() { structStudent@@ stu[@@ 100000],@@ t; intn,i,j,@@ max,@@ order@@ ; scanf("%d",&n); for(i=0;i<n;i++){ scanf("%d%d%d",&stu[i].@@ no@@ ,&stu[i].@@ chinese@@ ,&stu[i].math); stu[i].@@ total=@@ stu[i].@@ chinese+@@ stu[i].@@ math; } for(i=0;i<@@ 3;i++){ max=@@ stu[i].@@ total; order@@ =i; for(j=i+1;j<n;j++){ if(stu[j].@@ total@@ >max){ max=@@ stu[j].@@ total; order@@ =j; } } if(@@ order@@ !=@@ i){ t=@@ stu@@ [i];@@ stu[i]=@@ stu[@@ order@@ ];@@ stu[@@ order@@ ]=t; } printf("%d%d\n",stu[i].@@ no@@ ,@@ stu[i].@@ total); } return0; }  
c -1
h -1
0

intmain() { inta,b,@@ n@@ [100][100],@@ c,d,@@ e,f,@@ g,@@ h,@@ i,j,k,@@ l; scanf("%d%d",&a,&b); for(c@@ =1;@@ c@@ <=@@ a;@@ c++) { for(d@@ =1;@@ d@@ <=@@ b@@ ;@@ d++) { scanf("%d",&@@ n[@@ c@@ ][@@ d@@ ]); } } if(a@@ >=@@ b) { for(e@@ =1;@@ e@@ <=@@ b@@ ;@@ e++) { for(@@ f@@ =1;@@ f@@ <=@@ e@@ ;@@ f@@ ++) { printf("%d\n",@@ n[@@ f@@ ][@@ e@@ +1@@ -@@ f@@ ]); } } for(@@ g=@@ 2;@@ g@@ <=@@ a;@@ g@@ ++) { for(h@@ =1;@@ h@@ <=@@ b@@ &&@@ g@@ -1@@ +@@ h@@ <=@@ a;@@ h++) { printf("%d\n",@@ n[@@ g@@ -1@@ +@@ h@@ ][b@@ +1@@ -@@ h@@ ]); } } } else { for(i=1;i<=@@ b;i++) { for(j=1;j<=@@ a@@ &&i@@ +1@@ -j@@ >0@@ ;j++) { printf("%d\n",n@@ [j]@@ [i+1@@ -j@@ ]); } } for(k=@@ 2@@ ;k<=@@ a@@ ;k++) { for(l=1;l@@ <=@@ a@@ +1@@ -@@ k;@@ l++) printf("%d\n",n@@ [k-1@@ +l@@ ][b@@ +1@@ -l@@ ]); } } return0; }  
c -1
h -1
intmain() { int@@ high@@ [26],@@ n,@@ maxnum@@ [26],@@ temp@@ [26]; scanf("%d",&n); inti,j,k; for(i=0;i<n;i++) scanf("%d",&@@ high@@ [i]); maxnum@@ [n-1@@ ]=1; for(i=n-2;i>=0;i--) { int@@ len@@ =0; for(j=i+1;j<n;j++) { if(@@ high@@ [i]>=@@ high@@ [j]) {@@ temp@@ [@@ len@@ ++@@ ]@@ =1@@ +@@ maxnum@@ [j]@@ ;} } int@@ mark1@@ =1; for(k=0;k<@@ len@@ ;k++) {if(@@ temp@@ [k]@@ >=@@ mark1@@ )@@ mark1@@ =@@ temp@@ [k]@@ ;} maxnum@@ [i]=@@ mark1@@ ; } int@@ mark2@@ =0; for(i=0;i<n;i++) {if(@@ maxnum@@ [i]>=@@ mark2@@ )@@ mark2@@ =@@ maxnum@@ [i]@@ ;} printf("%d",@@ mark2@@ ); return0; }  
c -1
h -1
0

int@@ make@@ (intx,int@@ t) { int@@ ans@@ =0,@@ i; if(x@@ ==1)@@ return1; for(i=@@ t@@ ;i<=@@ x;i++) if(x@@ %i==0)@@ ans@@ +=@@ make@@ (x/i,i); return@@ ans; } intmain() { inti,k,@@ j,@@ p,@@ n,@@ t,@@ m,@@ x; scanf("%d",&t); for(p=1@@ ;p<=@@ t@@ ;p++) { scanf("%d",&n); x=@@ make@@ (n,@@ 2); printf("%d\n",x); } }  
c -1
h -1
main() { struct@@ stdudent { intID; inta; intb; intc; }@@ d[@@ 100000]; int@@ first@@ ,@@ second@@ ,@@ third@@ ; intn,i,j; int@@ w,@@ h,@@ l; intk; scanf("%d",&n); for(i=0;i<n;i++) { scanf("%d%d%d",&@@ d@@ [i].@@ ID,&@@ d@@ [i].@@ a,&@@ d@@ [i].@@ b); d@@ [i].@@ c=@@ d@@ [i].@@ a@@ +d@@ [i].@@ b; } first@@ =0; second@@ =1; third=@@ 2; w=@@ d@@ [0].@@ c; h=@@ d@@ [1].@@ c; l=@@ d@@ [2].@@ c; if(w@@ <@@ h@@ &&(@@ h@@ >@@ l@@ )) { first@@ =1; if(w@@ >@@ l) { second@@ =0; third=@@ 2; } else { second=@@ 2; third@@ =0; } } elseif(@@ l>@@ w@@ ) { first=@@ 2; if(w@@ >@@ h@@ ) { second@@ =0; third@@ =1; } else third@@ =0; } for(j=@@ 3@@ ;j<n;j++) { k=@@ d@@ [j].@@ c; w=@@ d[@@ first@@ ].@@ c; h=@@ d[@@ second@@ ].@@ c; l=@@ d[@@ third@@ ].@@ c; if(k@@ >@@ w@@ ) { third=second@@ ; second=@@ first@@ ; first@@ =j; } elseif(@@ k@@ >@@ h@@ ) { third=second@@ ; second@@ =j; } elseif(@@ k@@ >@@ l) third@@ =j; } printf("%d%d\n",@@ d[@@ first@@ ].ID,@@ d[@@ first@@ ].@@ c); printf("%d%d\n",@@ d[@@ second@@ ].ID,@@ d[@@ second@@ ].@@ c); printf("%d%d\n",@@ d[@@ third@@ ].ID,@@ d[@@ third@@ ].@@ c); getchar(); getchar(); }  
c -1
h -1
0

int@@ H@@ [1000],@@ D@@ [1000]; voidsort@@ (int@@ i) {int@@ j,k,@@ m,n; for(j=0;j<=i;j++) {m@@ =j; for(k=j@@ ;k<=@@ i;k++) if(@@ D@@ [m@@ ]>@@ D@@ [k]@@ )@@ m=@@ k; if(m!=@@ j) {@@ n=@@ D@@ [j]; D@@ [j]=@@ D@@ [m]; D@@ [m]=@@ n; } } } intmain() { inti,j,k,n,@@ temp; for(i=0;i<@@ 21@@ ;i++)@@ D@@ [i]=0; i=0; while(@@ scanf("%d",&@@ H@@ [i])@@ !=@@ EOF@@ )@@ i++; D@@ [i-1]@@ =1; for(j=i@@ -2@@ ;j>=0;j--) { k@@ =j+1; n=0; while(k@@ <@@ i) { if(@@ H@@ [j]>=@@ H@@ [k]@@ &&@@ D@@ [k]@@ >@@ n)@@ n=@@ D@@ [k]; k++; } D@@ [j]=@@ n+1; } n=0; for(j=0;j<i;j++) { if(@@ D@@ [j]>@@ n)@@ n=@@ D@@ [j]; } printf("%d",n); }  
c -1
h -1
intmain() { inta,b,c,@@ n; scanf("%d%d%d",&a,&b,&c); if((@@ a%4==0&&a%100!=0@@ )||@@ a%@@ 400==0) { if(b==1) { printf("%d\n",@@ c); } elseif(b==@@ 2) { n=31+@@ c; printf("%d\n",n); } elseif(b==@@ 3) { n=@@ 60@@ +c; printf("%d\n",n); } elseif(b==@@ 4) { n=@@ 91@@ +c; printf("%d\n",n); } elseif(b==@@ 5) { n=@@ 121@@ +c; printf("%d\n",n); } elseif(b==@@ 6) { n=@@ 152@@ +c; printf("%d\n",n); } elseif(b==@@ 7) { n=@@ 182@@ +c; printf("%d\n",n); } elseif(b==@@ 8) { n=@@ 213@@ +c; printf("%d\n",n); } elseif(b==@@ 9) { n=@@ 244@@ +c; printf("%d\n",n); } elseif(b==@@ 10) { n=@@ 274@@ +c; printf("%d\n",n); } elseif(b==@@ 11) { n=@@ 305@@ +c; printf("%d\n",n); } elseif(b==@@ 12) { n=@@ 336@@ +c; printf("%d\n",n); } } else { if(b==1) { printf("%d\n",@@ c); } elseif(b==@@ 2) { n=31+@@ c; printf("%d\n",n); } elseif(b==@@ 3) { n=@@ 59@@ +c; printf("%d\n",n); } elseif(b==@@ 4) { n=@@ 90@@ +c; printf("%d\n",n); } elseif(b==@@ 5) { n=@@ 120@@ +c; printf("%d\n",n); } elseif(b==@@ 6) { n=@@ 151@@ +c; printf("%d\n",n); } elseif(b==@@ 7) { n=@@ 181@@ +c; printf("%d\n",n); } elseif(b==@@ 8) { n=@@ 212@@ +c; printf("%d\n",n); } elseif(b==@@ 9) { n=@@ 243@@ +c; printf("%d\n",n); } elseif(b==@@ 10) { n=@@ 273@@ +c; printf("%d\n",n); } elseif(b==@@ 11) { n=@@ 304@@ +c; printf("%d\n",n); } elseif(b==@@ 12) { n=@@ 335@@ +c; printf("%d\n",n); } } return0; }  
c -1
h -1
0

intmain() { intb[@@ 26@@ ]={0@@ ,@@ 0,0,0,0,0,0,0,0,@@ 0,0,0,0,0,0,0,0,@@ 0,0,0,0,0,0,0,0,@@ 0@@ }; intm,@@ i,j,k,@@ num[@@ 10000],@@ max=0,@@ t=0; chara[@@ 10000@@ ][@@ 26]; charc[@@ 26@@ ]={'A','B','C','D','E','F','G','H','I','J','K','L','M','N','O','P','@@ Q','R','S','T','U','V','W','X','Y','@@ Z'}; scanf("%d",&m); for(i=0;i<m;i++) { scanf("%d",&@@ num[i]); scanf("%s",&@@ a[i]); } for(i=0;i<m;i++) { for(j=0;j<26;j++) { for(k=0;k<26;k++) { if(a[i][j]==@@ c@@ [k]) b[k@@ ]++; } } } for(i=0;i<26;i++) { if(b[i]>max) { max=b[i]; t=i; } } printf("%c\n",@@ c[@@ t@@ ]); printf("%d\n",max); for(i=0;i<m;i++) { for(j=0;j<26;j++) { if(a[i][j]==@@ c[@@ t@@ ]) { printf("%d\n",@@ num[i]); break; } } } getchar(); getchar(); return0; }  
c -1
h -1
intmain(@@ ){@@ inti,j,k,@@ z,@@ a[1000]; scanf("%d%d",&@@ i@@ ,&@@ k@@ );@@ scanf("%d",&@@ a[0]@@ );@@ a[0]=@@ k-@@ a[0]; for(j=1;j<=@@ i@@ -1@@ ;j++){@@ scanf("%d",&a[j]@@ );@@ for(z@@ =0;z@@ <=j@@ -1;@@ z@@ ++@@ ){@@ if(a[j]==@@ a[@@ z@@ ]){@@ printf("yes");@@ return0@@ ;@@ }@@ }@@ a[j]=@@ k-@@ a[j]@@ ;} printf("no"); return0;}  
c -1
h -1
0

intmain() { intk,@@ sum=0; int@@ shuzu@@ [@@ NUM@@ ][@@ NUM@@ ]; scanf("%d",&k); for(inti=0;i<k;i++) { intm,n; scanf("%d%d",&m,&n); for(int@@ s=0;s@@ <m;@@ s++) { for(intt@@ =0;t@@ <n;@@ t++) { scanf("%d",&(@@ shuzu@@ [s@@ ][@@ t@@ ]@@ )); } } if(m@@ >2@@ &&n@@ >2) { for(int@@ x@@ =0;x@@ <m;@@ x++) { sum+=@@ shuzu@@ [x@@ ][0]+@@ shuzu@@ [x@@ ][n-1]; } for(int@@ y@@ =1;@@ y@@ <@@ n-1;@@ y@@ ++) { sum+=@@ shuzu@@ [0][@@ y@@ ]+@@ shuzu@@ [@@ m-1][@@ y@@ ]; } } else { for(int@@ z@@ =0;z@@ <m;@@ z++) { for(int@@ h@@ =0;h@@ <n;@@ h++) { sum+=@@ shuzu@@ [@@ z@@ ][@@ h@@ ]; } } } printf("%d\n",sum); sum=0; } return0; }  
c -1
h -1
intmain() { intn,a[@@ 20000]; scanf("%d",&n); inti,j; for(i=0;i<n;i++) { scanf("%d",&a[i]); } printf("%d",a[0]); for(i=1;i<n;i++) { for(j=0;j<i;j++) { if(a[i]==a[j]) break; } if(j==i) printf("%d",a[i]); } return0; }  
c -1
h -1
0

intmain(){ introw,col; cin>>row>>col; intarray[@@ row][col]; intj,@@ i,@@ k; int*p=@@ NULL@@ ; for(j=0;j<row@@ ;j++) { p=@@ array@@ [j]; for(i=0;i<col;i++) cin>>@@ *(p@@ +i); } p=@@ array@@ [0]; for(k=0;k<=@@ row+col-2@@ ;k++) for(i=0;i<row;i++) for(j=0;j<col;j++) if(i+j@@ ==k) cout<<@@ *(p@@ +i@@ *col@@ +j)<<endl; return0; }  
c -1
h -1
intmain() { inti,j,@@ len1,len2,@@ m=0; doublea,@@ n,@@ b; char@@ jy1@@ [501],@@ jy2@@ [501]; scanf("%lf",&a); scanf("%s@@ \n",@@ jy1@@ ); scanf("%s@@ \n",@@ jy2@@ ); len1=strlen(@@ jy1@@ ); len2=strlen(@@ jy2@@ ); for(i=0;i<len1;i++) { if((@@ jy1@@ [i]!='A')&&(@@ jy1@@ [i]!='T')&&(@@ jy1@@ [i]!='C')&&(@@ jy1@@ [i]!='G')@@ )@@ m++; } for(j=0;j<len2@@ ;j++) { if((@@ jy2@@ [j]!='@@ A')&&(@@ jy2@@ [j]!='@@ T')&&(@@ jy2@@ [j]!='@@ C')&&(@@ jy2@@ [j]!='@@ G')@@ )@@ m++; } if(m@@ >0) { printf("error"); } elseif(@@ len1@@ ==@@ len2) { for(i=0;i<len1;i++) { if(@@ jy1@@ [i]==@@ jy2@@ [i])@@ n++; } b=@@ n/@@ len1; if(b@@ >@@ a) { printf("yes"); } elseprintf("no"); } else@@ printf("error"); }  
c -1
h -1
0

intmain() { intn; inti,j; int@@ book_number@@ [26]; intmax=0; int@@ max_n@@ ; int@@ author_len@@ ; struct@@ data { intnumber; charauthor@@ [27]; }@@ input@@ [1000]; scanf("%d",&n); for(j=0;j<=@@ 25@@ ;j++) book_number@@ [j]@@ =0; for(i=0;i<=n-1;i++) { scanf("%d%s",&@@ input@@ [i].@@ number,@@ input@@ [i].@@ author); author_len@@ =strlen(@@ input@@ [i].@@ author); for(j=0;j<=@@ author_len@@ -1;j++) book_number@@ [@@ input@@ [i].@@ author@@ [j]@@ -'A']++; } for(j=0;j<=@@ 25@@ ;j++) { if(@@ book_number@@ [j]@@ >max) { max=@@ book_number@@ [j]; max_n@@ =j; } } printf("%c\n%d\n",@@ max_n@@ +@@ '@@ A',@@ max); for(i=0;i<=n-1;i++) { author_len@@ =strlen(@@ input@@ [i].@@ author); for(j=0;j<=@@ author_len@@ -1;j++) { if(@@ input@@ [i].@@ author@@ [j]==@@ max_n@@ +@@ 'A'@@ ) { printf("%d\n",@@ input@@ [i].@@ number); break; } } } return0; }  
c -1
h -1
main() {@@ intb[@@ 26],@@ h@@ [26],@@ k,i,j,@@ t=0; scanf("%d",&k); for(i=1;i<=k;i++) scanf("%d",&h[i]); for(i=1;i<=k;i++) { for(j=1@@ ,@@ t@@ =0;j<@@ i;j++) { if(h@@ [j]>=@@ h@@ [i]) {@@ if(b[j]@@ >@@ t) t=@@ b[j]@@ ;} } if(t@@ ==0)@@ b[i]=1; else@@ b[i]=@@ t@@ +1;} for(i=1@@ ,@@ t@@ =0;i<=@@ k;i++) { if(b[i]>@@ t) t=b[i]; } printf("%d",t); getchar(); getchar(); }  
c -1
h -1
0

intn; int@@ height@@ [25]; int@@ stop@@ (int@@ k); intmain() { cin>>n; inti,@@ MAX@@ =0; for(i=0;i<n;i++) cin>>@@ height@@ [i]; for(i=0;i<n;i++) { if(@@ MAX@@ <@@ stop@@ (i@@ )) MAX@@ =@@ stop@@ (i); } cout<<@@ MAX@@ ; return0; } int@@ stop@@ (int@@ k) { intj,@@ max=0; for(j=k@@ +1@@ ;j<n;j++) { if(@@ height@@ [j]<=@@ height@@ [k]) {@@ if(max<@@ stop@@ (j@@ )) max=@@ stop@@ (@@ j); } } return@@ max+1; }  
c -1
h -1
intmain() { int@@ e,@@ f@@ =0,@@ g@@ [1000]; intn; scanf("%d",&n); inti=0; while(i<@@ n){ int@@ k@@ =0;@@ while(k@@ <@@ n){ scanf("%d",&@@ e); if(e@@ ==0){ f@@ ++; } k++; } g@@ [i]=@@ f; f=0; i++; } intm=0,@@ x,y; int@@ j@@ =0;@@ while(j<@@ n){ if(g@@ [j]>@@ m){ m=@@ g@@ [j]; } if(g@@ [j]@@ ==0&&@@ g@@ [j+1]@@ !=0){ x@@ =j; } if(g@@ [j]@@ !=0&&@@ g@@ [j+1]@@ ==0){ y@@ =j; } j++; } int@@ d,@@ sum; d=@@ y@@ -@@ x; sum=(@@ m@@ -2)*(@@ d@@ -2); printf("%d\n",sum); return0; }  
c -1
h -1
0

struct@@ information { intnum; charauthor[26]; }@@ *@@ a; voidmain() { intn,i,j,@@ m,@@ s[@@ 26]={0},@@ max=0,@@ p; scanf("%d",&n); a@@ =(struct@@ information@@ *)malloc(sizeof(struct@@ information@@ )*n); for(i=0;i<n;i++)@@ scanf("%d%s",&@@ a[i].@@ num,@@ a[i].@@ author); for(i=0;i<n;i++) { for(j=0;@@ a[i].@@ author@@ [j]!='\0';j++) { m=@@ a[i].@@ author@@ [j]@@ -'A'@@ ;@@ s[m@@ ]++; } } for(i=0;i<26;i++) { if(max<@@ s[i]@@ ){max=@@ s[i]@@ ;p@@ =i;} } printf("%c\n%d\n",@@ 'A'+@@ p,@@ s[p@@ ]); for(i=0;i<n;i++) { for(j=0;j<26;j++) { if(a[i].@@ author@@ [j]=='@@ A'+@@ p@@ ){@@ printf("%d\n",@@ a[i].@@ num@@ );break;} } } }  
c -1
h -1
structstudent{ intnum; intyuwen; intshuxue; int@@ score; structstudent*next; }; intn,@@ i=0,@@ a; structstudent*@@ m1@@ ,*@@ m2@@ ,*@@ m3@@ ,*@@ q; structstudent*creat@@ (void) { structstudent*head; structstudent*p1,*p2; p1=p2=(structstudent*)malloc(LEN); scanf("%d%d%d",&p1->num,&p1->@@ yuwen@@ ,&p1->@@ shuxue); p1->@@ score@@ =p1->@@ yuwen@@ +p1->@@ shuxue; head=NULL; while(i<@@ n-1) { if(i==0)@@ head=p1; elsep2->next=p1; p2=p1; p1=(structstudent*)malloc(LEN); scanf("%d%d%d",&p1->num,&p1->@@ yuwen@@ ,&p1->@@ shuxue); p1->@@ score@@ =p1->@@ yuwen@@ +p1->@@ shuxue; if(i>=@@ 3) { if(@@ p2->@@ score@@ >@@ m1@@ ->score@@ ) { m3=@@ m2@@ ; m2=@@ m1@@ ; m1@@ =p2; } elseif(@@ p2->@@ score@@ <=@@ m1@@ ->score@@ &&@@ p2->@@ score@@ >@@ m2@@ ->score@@ ) { m3=@@ m2@@ ; m2@@ =p2; } elseif(@@ p2->@@ score@@ <=@@ m2@@ ->score@@ &&@@ p2->@@ score@@ >@@ m3@@ ->score@@ ) m3@@ =p2; i++; continue; } if(i==0)@@ m1@@ =p2; elseif(@@ i@@ ==1)@@ m2@@ =p2; elseif(i==@@ 2) { m3@@ =p2; if(@@ m1@@ ->score@@ >@@ m2@@ ->score@@ ) { if(@@ m2@@ ->score@@ <=@@ m3@@ ->score@@ ) { if(@@ m1@@ ->score@@ >@@ m3@@ ->score@@ ) { q=@@ m3@@ ; m3=@@ m2@@ ; m2=@@ q; } elseif(@@ m1@@ ->score@@ <=@@ m3@@ ->score@@ ) { q=@@ m1@@ ;@@ m1=@@ m2@@ ;@@ m2=@@ m3@@ ;@@ m3=@@ q; } } } elseif(@@ m1@@ ->score@@ <=@@ m2@@ ->score@@ ) { if(@@ m2@@ ->score@@ >@@ m3@@ ->score@@ ) { if(@@ m1@@ ->score@@ >@@ m3@@ ->score@@ ) { q=@@ m1@@ ; m1=@@ m2@@ ; m2=@@ q; } elseif(@@ m1@@ ->score@@ <=@@ m3@@ ->score@@ ) { q=@@ m3@@ ;@@ m3=@@ m1@@ ;@@ m1=@@ m2@@ ;@@ m2=@@ q; } } elseif(@@ m2@@ ->score@@ <=@@ m3@@ ->score@@ ) { q=@@ m1@@ ; m1=@@ m3@@ ; m3=@@ q; } } } i++; } return(head); } intmain() { structstudent*head; scanf("%d",&n); head=creat(); printf("%d%d\n",@@ m1@@ ->num,@@ m1@@ ->score@@ ); printf("%d%d\n",@@ m2@@ ->num,@@ m2@@ ->score@@ ); printf("%d%d\n",@@ m3@@ ->num,@@ m3@@ ->score@@ ); return0; }  
c -1
h -1
0

intmain() { inta[100][100],@@ row,col,@@ i,j,@@ p,q; cin>>row>>col; for(i=0;i<row;i++) for(j=0;j<col;j++) cin>>a[i][j]; for(i=0;i<col;i++) { p=0; q@@ =i; do { cout<<@@ a[p@@ ][q@@ ]<<endl; p@@ ++;@@ q@@ --; }while(@@ q@@ >=0@@ &&p@@ <row@@ ); } for(i=1;i<row;i++) { p=i; q=@@ col-1; do { cout<<@@ a[p@@ ][q@@ ]<<endl; p@@ ++;@@ q@@ --; }while(p@@ <row@@ &&@@ q@@ >=0@@ ); } return0; }  
c -1
h -1
intmain() { inta,@@ i,@@ t@@ ,j,@@ sum,@@ m,n; scanf("%d\n",&@@ t); for(j=0;j<@@ t;j++) { scanf("%d%d\n",&@@ m,&n); sum=0; for(i=1;i<=@@ m*@@ n;i++) { scanf("%d",&a); if((i@@ <=@@ n@@ )||(@@ i@@ >@@ (m@@ *@@ n-@@ n)@@ )||(@@ i@@ %n@@ ==1)@@ ||(@@ i@@ %n@@ ==0)@@ )@@ sum+=@@ a; } printf("%d\n",sum); } return0; }  
c -1
h -1
0

intmain() { inty,m,@@ d; cin>>y>>m>>d; inta[@@ 13@@ ]; a[1@@ ]=31; if((y%@@ 4==0&&y%100!=0@@ )||(y%@@ 400==0)) a[2]=@@ 29; else a[2]=@@ 28; a[@@ 3@@ ]=31; a[@@ 4@@ ]=30; a[@@ 5@@ ]=31; a[@@ 6@@ ]=30; a[@@ 7@@ ]=31; a[@@ 8@@ ]=31; a[@@ 9@@ ]=30; a[@@ 10@@ ]=31; a[@@ 11@@ ]=30; a[@@ 12@@ ]=31; intn,i; n=0; for(i=1;i<m;i++) n=n+@@ a[i]; n=n+@@ d; cout<<n<<endl; return0; }  
c -1
h -1
int@@ pfCompare@@ (constvoid*@@ elem1@@ ,@@ constvoid*@@ elem2@@ ) { intc; c@@ =*@@ (int*)@@ elem1@@ -*@@ (int*)@@ elem2@@ ; return@@ c; } structstudent { intnum; intx; inty; }a[@@ 100000]; main() { intn,i,j,@@ d=0,@@ b[@@ 100000@@ ],c[@@ 100000]; scanf("%d",&n); for(i=0;i<n;i++) { scanf("%d",&@@ a[i].@@ num); scanf("%d",&@@ a[i].@@ x); scanf("%d",&@@ a[i].@@ y); } for(i=0;i<n;i++) { b[i]=@@ a[i].@@ x+@@ a[i].@@ y; } qsort@@ (b,@@ n,@@ sizeof(int),@@ pfCompare@@ ); for(j=0;j<n;j++) { if(b[@@ n-1@@ ]==@@ a[j].@@ x+@@ a[j].@@ y) { printf("%d@@ ""@@ ""@@ %d",@@ a[j].@@ num,@@ b[@@ n-1]); printf("\n"); d++; } if(d@@ ==@@ 3) break; } for(i=@@ n-2@@ ;i@@ >@@ n-@@ 4@@ ;i--) { if(b[i]==@@ b@@ [i+1]) continue; else { for(j=0;j<n;j++) { if(b[i]==@@ a[j].@@ x+@@ a[j].@@ y) { printf("%d@@ ""@@ ""@@ %d",@@ a[j].@@ num,@@ b[i]); printf("\n"); d++; } if(d@@ ==@@ 3) break; } if(d@@ ==@@ 3) break; } } }  
c -1
h -1
0

voidmain() { int@@ col,@@ row,@@ a[100][100],@@ i,j; scanf("%d%d",&row,&col); for(i=0;i<row;i++) { for(j=0;j<col@@ ;j++)@@ scanf("%d",&a[i][j]); } i@@ =0;j@@ =0; for(;;) { printf("%d\n",a[i][j]); if(i+j@@ ==@@ row+col-2@@ )break; if(j@@ ==0) { j@@ =i@@ +j@@ +1@@ ;i@@ =0; } elseif(@@ i>=@@ row@@ -1) {@@ j@@ =i@@ +j@@ +1@@ ;i@@ =0;} else{@@ i@@ ++@@ ;j--@@ ;} if(j@@ >@@ col-1@@ ){@@ i@@ =i@@ +j@@ +1@@ -col@@ ;j@@ =j@@ -@@ (j@@ +1@@ -col@@ );} if(i+j@@ ==@@ row+col-2@@ )break; } if(@@ row+col@@ >2) printf("%d\n",a[i][j]); }  
c -1
h -1
void@@ main(@@ void) { intk,@@ a[@@ 25@@ ],i,j,@@ max,@@ b[@@ 25@@ ]={@@ 1@@ }; scanf("%d",&k); for(i=0;i<k;i++) { scanf("%d",&a[i]); } for(i=1;i<k;i++) { max=1; for(j=0;j<i;j++) { if(a[j]>=a[i]&&@@ b[j]@@ +1@@ >=@@ max) max=@@ b[j]@@ +1; } b[i]=@@ max; } max=0; for(i=0;i<k;i++) { if(b[i]>max) max=b[i]; } printf("%d",max); }  
c -1
h -1
0

struct@@ bing { charid[10]; intage; }@@ person@@ [100],@@ old@@ [100]; main() { intn,i,j=0,@@ k,@@ b; char@@ e@@ [10]; scanf("%d",&n); for(i=0;i<n;i++) { scanf("%s%d",@@ person@@ [i].id,&@@ person@@ [i].age); if(@@ person@@ [i].age>=60) { strcpy(old@@ [j].@@ id,@@ person@@ [i].id); old@@ [j].age@@ =@@ person@@ [i].age; j=j+1; } } for(k=1;k<@@ j@@ ;k++) for(i=0;i<j@@ -@@ k;i++) { if(old@@ [i].age@@ <@@ old@@ [i+1@@ ].age) { strcpy(@@ e,@@ old@@ [i].id); strcpy(old@@ [i].@@ id,@@ old@@ [i+1].@@ id); strcpy(old@@ [i+1].@@ id,@@ e); b=@@ old@@ [i].age; old@@ [i].age@@ =@@ old@@ [i+1].@@ age; old@@ [i+1@@ ].age=@@ b; } } for(i=0;i<j;i++) printf("%s\n",old@@ [i].id); for(i=0;i<n;i++) if(@@ person@@ [i].age<60) printf("%s\n",@@ person@@ [i].id); return0; }  
c -1
h -1
voidmain() { intyear,month,day,@@ n,@@ i,j; for(j=1;j<=@@ 5@@ ;j++) { n=0; scanf("%d%d%d",&year,&month,&day); if((year%4==0&&year%100!=0@@ )||@@ year%400==0) { intdays@@ [@@ 12]={31,29,31,30,31,30,31,31,30,31,30,31}; for(i=0;i<month-1;i++) { n+=@@ days@@ [i]; } n+=@@ day; } else { intdays@@ [12]={31,28,31,30,31,30,31,31,30,31,30,31}; for(i=0;i<month-1;i++) { n+=@@ days@@ [i]; } n+=@@ day; } printf("%d\n",n); } }  
c -1
h -1
0

int@@ tmp=@@ 2; int@@ suml@@ (intn,int@@ tmp@@ ) { intsum=0; if(n==1) { return1; } for(inti=@@ tmp@@ ;i<=n;i++) { if(n%i==0) { sum+=@@ suml@@ (n/i,i); } } returnsum; } intmain() { intm; cin>>m; intn; for(inti=0;i<m;i++) { cin>>n; int@@ zon_shu@@ =0; zon_shu@@ =@@ suml@@ (n,@@ tmp@@ ); cout<<@@ zon_shu@@ <<endl; } }  
c -1
h -1
intmain() { int@@ n=@@ 100@@ ,@@ m=@@ 16@@ ,i@@ =1@@ ,j,@@ k,@@ t=0; inta[16]; while(n@@ >0) { cin>>a[0]; if(a[0]@@ ==@@ (@@ -1)) break; else { while(m@@ >0) { cin>>a[i]; if(a[i]==0) break; m@@ --; i++; } for(j=0;j<=i-1;j++) for(k=0;k<=@@ i-1;k++) { if(a[j]==2*@@ a[k]) t++; } } cout<<t@@ <<endl; t=0; m=@@ 16@@ ; i=1; n--; } return0; }  
c -1
h -1
0

intmain() { intk; intm,n,i,j,@@ l,@@ sum1@@ =0,@@ sum=0; inta[100][100]; cin>>k; for(l=1;l@@ <=k;@@ l++) { cin>>m>>n; int(*p)@@ [100]; p=a; for(i=0;i<m;i++) for(j=0;j<n;j++) { cin>>@@ *(*(p+i)+j); sum=sum+*(@@ *(p+i)+j); } for(i=1;i<m-1;i++) for(j=1;j<@@ n-1;j++) { sum1@@ =@@ sum1@@ +*(@@ *(p+i)+j); } sum=sum-@@ sum1@@ ; cout<<sum<<endl; sum=@@ sum1@@ =0; } }  
c -1
h -1
intk; int@@ height@@ [26]; int@@ len@@ (int@@ num@@ ){ int@@ temp,@@ max,@@ i; if(num@@ ==k){ return(1); }else{ max=0; for(i=@@ num@@ +1;i<=@@ k;i++){ if(@@ height@@ [@@ num@@ ]>=@@ height@@ [i]){ temp=@@ len@@ (i); if(max<@@ temp@@ ){ max=@@ temp; } } } } return(@@ max@@ +1); } main(){ height@@ [0]=@@ 30001@@ ; scanf("%d",&k); inti; for(i=1;i<=@@ k;i++){ scanf("%d",&@@ height@@ [i]); } printf("%d",@@ len@@ (@@ 0)@@ -1); scanf("%d",&k); }  
c -1
h -1
0

intmain(){ inta[@@ 105@@ ][@@ 105@@ ]={0},@@ n=0,@@ row@@ =0,@@ col@@ =0,@@ i=0,@@ j@@ =0@@ ,*@@ p=@@ NULL@@ ,@@ sum=0; cin>>n; while(n@@ --){ cin>>row>>col; for(i=0;i<row;i++){ for(j=0;j<col;j++){ cin>>a[i][j]; } } for(p@@ =&@@ a[0][0]@@ ;p@@ <&@@ a[0][0]@@ +col@@ ;p++){ sum=sum+*@@ p; } for(i=1;i<@@ row@@ -1;i++){ sum=sum+@@ a[i][0]+@@ a[i][@@ col@@ -1]; } if(row@@ >1@@ ){ for(p@@ =&@@ a[@@ row-1@@ ][0]@@ ;p@@ <&@@ a[@@ row-1@@ ][0]@@ +col@@ ;p++){ sum=sum+*@@ p; } } cout<<sum<<endl; sum=0; } return0; }  
c -1
h -1
voidmain() { chara[100@@ ],b[100],@@ c[100]; gets(a); gets(b); gets(c); inti=0,j=0,@@ n1@@ =0,@@ n2@@ =0,@@ k=0; while(@@ b[i]@@ !='\0') { i++; n1@@ ++; } i=0; while(@@ c[i]@@ !='\0') { i++; n2@@ ++; } for(i=0;a[i]!='\0';i++) { for(j=0;j<@@ n1@@ ;j++) { if(a@@ [i+j]!=@@ b[j]) break; if(j==@@ n1@@ -1) { for(j=0;j<i;j++) printf("%c",@@ a[j]); printf("%s",@@ c); for(j=i@@ +@@ n2@@ ;@@ a[j]@@ !='\0';j++) printf("%c",@@ a[j]); k++; } }@@ if(k@@ !=0@@ )break; } if(k@@ ==0)@@ printf("%s",a); }  
c -1
h -1
0

intmain() { inta[@@ 20]; inti; intn=0; intnum=0; intj; while(1) { n=0; num=0; for(i=0;i<@@ 20@@ ;i++) { cin>>a[i]; if(a[i]==0) break; if(a[i]==-1) return0; n++; } for(i=0;i<n;i++) for(j=i+1;j<n;j++) if(a[i]==2*@@ a[j]||@@ 2*@@ a[i]==@@ a[j]) num++; cout<<num<<endl; } return0; }  
c -1
h -1
intmain() { intn,i,j; scanf("%d\n",&n); intnum[@@ n]; scanf("%d",&@@ num@@ [0]); printf("%d",@@ num@@ [0]); for(i=1;i<=n-1;i++) { scanf("%d",&@@ num[i]); for(j=0;j<=i;j++) { if(j@@ <i@@ &&@@ num@@ [j]==@@ num@@ [i]) {break;} if(j==i) {printf("%d",@@ num[i]@@ );} } } return0; }  
c -1
h -1
0

intmain(){ inti,@@ sum=0,@@ flag=1; double@@ n1,@@ n; chara[@@ 512@@ ],b[@@ 512@@ ]; scanf("%lf%s%s",&@@ n,@@ a,b); if(strlen(a)!=strlen(b@@ )) printf("error\n"); else { for(i=0;a[i]@@ !=0;i++) { if(a[i]!='@@ A'&&a[i]!='T'&&a[i]!='G'&&a[i]!='@@ C') flag=0; } for(i=0;@@ b[i]@@ !=0;i++) { if(@@ b[i]!='A'&&b[i]!='T'&&b[i]!='G'&&b[i]!='@@ C') flag=0; } if(flag) { for(i=0;a[i]@@ !=0;i++) { if(a[i]==b[i]) sum++; } n1@@ =(double)@@ sum/@@ (double)@@ strlen(@@ a); if(@@ n1@@ >n) printf("yes\n"); else printf("no\n"); } else printf("error\n"); } return0; }  
c -1
h -1
intmain(){ inta,b,@@ s,@@ i; double@@ p,@@ l; scanf("%lf",&@@ p); char@@ m[@@ 500],@@ n[@@ 500]; scanf("%s",@@ m); scanf("%s",@@ n); a=strlen(@@ m); b=strlen(@@ n); s=0; if(a==@@ b){ for(i=0;i<a;i++){ if((@@ m@@ [i]!='A'&&@@ m@@ [i]!='T'&&@@ m@@ [i]!='C'&&@@ m@@ [i]!='G')||(@@ n@@ [i]!='A'&&@@ n@@ [i]!='T'&&@@ n@@ [i]!='C'&&@@ n@@ [i]!='G')){ printf("error"); s=1; break; } } }else{ printf("error"); s=1; } if(s@@ ==0){ for(i=0;i<a;i++){ if(m@@ [i]==@@ n@@ [i]){ s=s+1; } } l=@@ s@@ *1.0/@@ a; if(l@@ >@@ p@@ ){ printf("yes"); } else{ printf("no"); } } return0; }  
c -1
h -1
1


structbook{ intnum; charauthor@@ [26@@ ];@@ }@@ shu@@ [999]; intmain(intargc,char*argv[]) { intm,@@ b,@@ i@@ ,*p; charc; int@@ writer@@ [26]; char@@ max@@ (int*p@@ ); scanf("%d",&m); for(i=0;i<m;i++){ scanf("%d%s",&@@ shu[i].@@ num,@@ shu[i].author@@ );} for(c@@ ='@@ A',@@ writer@@ [c@@ -'A'@@ ]@@ =0;c@@ <=@@ 'Z'@@ ;c@@ ++){ writer@@ [c@@ -'A'@@ ]=0; for(i=0;i<m;i++){ for(b@@ =0;@@ shu[i].author@@ [b@@ ]!='\0'@@ ;@@ b++){ if(c==@@ shu[i].author@@ [b@@ ]){ writer@@ [c@@ -'A'@@ ]++;@@ }@@ }}} p=@@ writer@@ ; printf("%c\n%d\n",@@ max@@ (p@@ ),@@ writer@@ [max@@ (p@@ )@@ -'A'@@ ]); for(i=0;i<m;i++){ for(b@@ =0;@@ shu[i].author@@ [b@@ ]!='\0'@@ ;@@ b++){ if(max@@ (p@@ )==@@ shu[i].author@@ [b@@ ]){ printf("%d\n",@@ shu[i].@@ num@@ );@@ }}} return0; } char@@ max@@ (int*p@@ ){ inti; char@@ max; for(i=0,@@ max@@ ='A'@@ ;i<@@ 26@@ ;i++){ if(@@ *(p+i)@@ >*@@ (p@@ +@@ max@@ -'@@ A')@@ ){ max@@ =i@@ +'A'@@ ;}} return@@ max@@ ;}  
c -1
h -1
intmain() { charstr@@ [300],@@ s@@ [100],@@ r@@ [100]; inti,j,k,@@ m; scanf("%s%s%s",@@ str,@@ s,@@ r); m@@ =strlen(s); for(i=0;@@ str@@ [i]!='\0';i++){ k=0; for(j=0;j<m;j++){ if(str@@ [i+j]==@@ s@@ [j]) k++; } if(k==@@ m){ for(j=0;j<m;j++){ str@@ [i+j@@ ]=@@ r@@ [j]; } break; } } printf("%s",str); return0; }  
c -1
h -1
0

voidmain() { intn,i,@@ k@@ [100],@@ l@@ [26]={0},@@ m=0,@@ v@@ ,j; char@@ c@@ [100][@@ 26]; scanf("%d",&n); for(i=0;i<n;i++) { scanf("%d%s",&@@ k@@ [i],@@ c[i]); for(j=0;j<strlen(@@ c[i]@@ );j++) { l@@ [@@ (int)@@ c@@ [i][j]@@ -65@@ ]@@ +=1; } } for(i=0;i<26;i++) { if(l@@ [i]>@@ m) m=@@ l@@ [i]; } for(i=0;i<26;i++) { if(l@@ [i]==@@ m) { printf("%c\n%d\n",@@ i@@ +65@@ ,@@ l@@ [i]); break; } } for(@@ v@@ =0;@@ v@@ <n;@@ v@@ ++) { for(j=0;j<strlen(@@ c[@@ v@@ ])@@ ;j++) { if(@@ c[@@ v@@ ]@@ [j]==@@ i@@ +65) printf("%d\n",@@ k@@ [@@ v@@ ]); } } }  
c -1
h -1
structpat@@ { charID[10]; intage; }; intmain() { intn,i; scanf("%d",&n); structpat@@ *p@@ [100]; structpat@@ *@@ old@@ [100]; structpat@@ *@@ young@@ [100@@ ],*@@ temp; for(i=0;i<n;i++){ p[i]@@ =(struct@@ pat@@ *)malloc(len); scanf("%s%d",@@ p[i]@@ ->@@ ID,&@@ p[i]@@ ->age@@ ); } intk=0,@@ j=0; for(i=0;i<n;i++){ if(p@@ [i]@@ ->age@@ >=60){ old@@ [k]=@@ p[i]; k++; } else{ young@@ [j]=@@ p[i]; j++; } } int@@ lenold@@ =@@ k,@@ lenyoung@@ =j; for(k=1;k<@@ lenold@@ ;k++){ for(i=0;i<@@ lenold@@ -@@ k;i++){ if(old@@ [i]@@ ->age@@ <@@ old@@ [i+1]@@ ->age@@ ){ temp=@@ old@@ [i]; old@@ [i]=@@ old@@ [i+1]; old@@ [i+1]=@@ temp; } } } for(i=0;i<@@ lenold@@ ;i++){ printf("%s\n",old@@ [i]@@ ->@@ ID); } for(i=0;i<@@ lenyoung@@ ;i++){ printf("%s\n",@@ young@@ [i]@@ ->@@ ID); } return0; }  
c -1
h -1
0

intmain() { charstr[256],@@ a[@@ 256],b[@@ 256],@@ tmp@@ [256]; inti,@@ lenstr@@ ,@@ lena@@ ; char*@@ pstr@@ ; gets(str); gets(a); gets(b); lenstr@@ =strlen(@@ str); lena@@ =strlen(a); for(i=0;i<=@@ lenstr@@ -@@ lena@@ ;i++) { pstr@@ =&@@ str@@ [i]; strncpy@@ (@@ tmp@@ ,@@ pstr@@ ,@@ lena@@ ); tmp@@ [@@ lena@@ ]='\0'; if(strcmp(@@ tmp@@ ,@@ a)@@ ==0) { str@@ [i]@@ ='@@ @@@ '; break; } } for(i=0;i<@@ lenstr@@ ;i++) { if(str@@ [i]=='@@ @@@ ') { printf("%s",@@ b); i@@ =i+@@ lena@@ -1; } else@@ printf("%c",@@ str[i]); } printf("\n"); return0; }  
c -1
h -1
main() { chara[@@ 1000],b[1000],@@ c[@@ 1000]; intl,@@ i,j,k,@@ temp; scanf("%s%s%s",a,b,c); l@@ =strlen(b); for(i=0;a[i]!='\0';i++) { if(a[i]==@@ b[0]) { temp=0; for(j=0;j<l;j++) { if(b[j]@@ !=@@ a@@ [j+i@@ ]@@ )break; } if(j==@@ l) { for(j=0;j<l;j++) { a@@ [j@@ +i]=@@ c[j]; } break; } } } printf("%s",a); }  
c -1
h -1
1


voidmain() { int*p; p=@@ (int*)malloc(@@ 26@@ *sizeof(int)); structbook { intnum; chars[@@ 26]; }b[@@ 999]; intn,i,j,@@ ss@@ ,@@ max=0,@@ r; char@@ x; for(@@ ss@@ =0;@@ ss@@ <26@@ ;@@ ss@@ ++) *(p+@@ ss@@ )@@ =0; scanf("%d",&n); for(i=0;i<n;i++) { scanf("%d%s",&@@ b[i].@@ num,@@ b[i].@@ s); for(j=0;@@ b[i].@@ s[j]@@ !='\0';j++) { *(p+@@ (@@ (int)@@ b[i].@@ s[j]@@ -65@@ ))@@ +=1; } } for(r=0;r@@ <26@@ ;r++) max=@@ max@@ >*@@ (p@@ +@@ r@@ )@@ ?@@ max@@ :*@@ (p@@ +@@ r); for(r=0;r@@ <26@@ ;r++) { if(@@ *(p+@@ r@@ )==@@ max) {@@ printf("%c",@@ (@@ 65@@ +@@ r@@ )); x=@@ r; printf("\n"); printf("%d\n",@@ max@@ );} } for(i=0;i<n;i++) { for(j=0;@@ b[i].@@ s[j]@@ !='\0';j++) { if(@@ (int)@@ b[i].@@ s[j]@@ -65@@ ==@@ x) printf("%d\n",b[i].@@ num); } } }  
c -1
h -1
intmain() { inti,j,@@ d,@@ l,@@ h; doublen,@@ t; chara[500],b[500]; scanf("%lf\n",&@@ n); d=0; gets(a); gets(b); l@@ =strlen(a); h@@ =strlen(b); if(l@@ >@@ h@@ ||@@ l<@@ n) { printf("error"); }elseif(@@ l@@ ==@@ h@@ ) { for(i=0,j@@ =0;@@ a[i]@@ !='\0'@@ ;i++,j++) { if(a[i]@@ =='@@ A'||a[i]=='T'||a[i]=='@@ C'||@@ a[i]=='@@ G') { if(a[i]==@@ b[j]) { d++; } }else{ printf("error"); return0; } } t@@ =(double)@@ d@@ /@@ l; if(t@@ >n) { printf("yes"); }elseif(@@ t@@ <=@@ n) { printf("no"); } } return0; }  
c -1
h -1
0

intmain() {@@ structbook {int@@ m; char@@ au@@ [26@@ ];@@ }b[@@ 999]; intm,@@ n@@ [26],@@ M@@ =0,@@ i,j; scanf("%d",&m); for(i=0;i<26;i++) n@@ [i]=0; for(i=0;i<m;i++) scanf("%d%s",&@@ b[i].@@ m,@@ b[i].@@ au); for(i=0;i<m;i++) for(j=0;@@ b[i].@@ au@@ [j]!='\0';j++) n[@@ b[i].@@ au@@ [j]@@ -65]++; for(i=1;i<26;i++) if(n@@ [@@ M@@ ]<@@ n@@ [i])@@ M@@ =i; printf("%c@@ \n@@ %d",@@ M@@ +65@@ ,@@ n[@@ M@@ ]); for(i=0;i<m;i++) for(j=0;@@ b[i].@@ au@@ [j]!='\0';j++) if(b[i].@@ au@@ [j]==@@ M@@ +65@@ )@@ printf("\n%d",@@ b[i].@@ m); return0;}  
c -1
h -1
intmain() { inti,n; cin>>n; inta[@@ 20000@@ ]={0}; for(i=0;i<n;i++) { cin>>a[i]; } cout<<a[0]; intk,@@ m; for(k=1;k<@@ n;k++) { for(m=0;m<@@ k@@ ;m++) { if(a[k]@@ !=@@ a[m@@ ]) continue; else break; } if(m==@@ k@@ &&@@ a[k]@@ !=@@ a[k@@ -1@@ ]) cout<<""<<@@ a[k]; } return0; }  
c -1
h -1
0

intmain(){ inta[@@ 105@@ ][@@ 105@@ ]={0},@@ row,col; cin>>row>>col; for(inti=0;i<@@ row;i++){ for(intj=0;j<@@ col@@ ;j++){ cin>>*(*(a+i)+j); } } for(inti=0;i<@@ row+col@@ -1;i++){ for(intj=0;j<@@ row@@ ;j++){ for(intk=0;k<@@ col@@ ;k++){ if(j@@ +k@@ ==@@ i)@@ cout<<*(*(a@@ +j)@@ +k@@ )<<endl; } } } return0; }  
c -1
h -1
void@@ sum@@ (int@@ i) { intm,n,@@ j,k,@@ sum=0; scanf("%d%d",&m,&n); int(*p)@@ [100@@ ]=@@ (int@@ (@@ *)@@ [100@@ ])@@ calloc@@ (@@ 100@@ ,@@ 100*sizeof(int)); for(j=0;j<m;j++) { for(k=0;k<n;k++) scanf("%d",@@ *(p@@ +j)+@@ k); } for(j=0;j<m;j++) { if(j@@ ==0||j==@@ m-1) { for(k=0;k<n;k++) sum=sum+*(@@ *(p@@ +j)+@@ k); } else sum=sum+*(@@ *(p+j)@@ )@@ +*(@@ *(p+j)@@ +n-1); } printf("%d\n",sum); } voidmain() { intk; scanf("%d",&k); inti; for(i=0;i<k;i++) sum@@ (i); }  
c -1
h -1
0

intn; void@@ count@@ (intx,inty) { inti; if(x@@ ==1)@@ n=n+1; else { for(i=y@@ ;i<=@@ x;i++) { if(x@@ %i==0)@@ count@@ (x/i,i); } } } intmain() { inti,k,@@ t; void@@ count@@ (intx,int@@ y); scanf("%d",&k); for(i=0;i<k;i++) { n=0; scanf("%d",&t); count@@ (@@ t,@@ 2); printf("%d\n",n); } return0; }  
c -1
h -1
main() { intn,i,j,@@ count; scanf("%d",&n); inta[@@ 100000]; for(i=0;i<n;i++) { scanf("%d",&a[i]); } for(i=0;i<n;i++) { for(j=i+1;j<n;j++) { if(a[j]==a[i]) a[j]=0; } } count=0; for(i=0;i<n;i++) { if(a[i]!=0) if(count@@ ==0) { printf("%d",a[i]); count@@ =1; } else printf("%d",a[i]); } getchar(); getchar(); }  
c -1
h -1
0

intN@@ ,@@ input@@ [26],@@ i,j,k,@@ ans@@ [26],@@ Max@@ ; int@@ cons@@ (int@@ i){ int@@ a=0; if(@@ ans@@ [i]!=0) return@@ ans@@ [i]; for(intj=i+1@@ ;j<@@ N@@ ;j++){ if(@@ input@@ [j]<=@@ input@@ [i]) if(a<@@ cons@@ (j@@ )) a=@@ ans@@ [j]; } ans@@ [i]=@@ a@@ +1; return@@ ans@@ [i]; } intmain(){ Max@@ =0; scanf("%d",&N); for(i=0;i<@@ N@@ ;i++){ scanf("%d",&@@ input@@ [i]); ans@@ [i]=0; } for(i=@@ N@@ -1@@ ;i>=0;i--){ if(@@ Max@@ <@@ cons@@ (i@@ )) Max@@ =@@ ans@@ [i]; } printf("%d\n",@@ Max@@ ); return0; }  
c -1
h -1
intmain(){ intn,i,@@ k; structstu@@ { intid; int@@ chn@@ ; intmath; inttotal; }; structstu@@ a[@@ 100001@@ ]; scanf("%d\n",&n); for(i=0;i<n;i++){ scanf("%d%d%d",&a[i].@@ id,@@ &@@ a[i].@@ chn@@ ,&a[i].@@ math); (@@ a[i].@@ total@@ )@@ =(@@ a[i].@@ chn@@ )+@@ (@@ a[i].@@ math); } for(k=1;k<@@ 5@@ ;k++){ for(i=0;i<n-@@ k;i++){ if((@@ a[i].@@ total@@ )@@ >=@@ (@@ a[i+1@@ ].@@ total@@ )){ a[@@ 100000@@ ].@@ id@@ =@@ a[i].@@ id; a[@@ 100000@@ ].@@ total=@@ a[i].@@ total; a[i].@@ id@@ =@@ a[i+1@@ ].@@ id; a[i+1@@ ].@@ id@@ =@@ a[@@ 100000@@ ].@@ id; a[i].@@ total=@@ a[i+1@@ ].@@ total; a[i+1@@ ].@@ total=@@ a[@@ 100000@@ ].@@ total@@ ;} } } printf("%d%d\n",@@ a[@@ n-1@@ ].id,@@ a[@@ n-1@@ ].@@ total); printf("%d%d\n",@@ a[@@ n-2@@ ].id,@@ a[@@ n-2@@ ].@@ total); printf("%d%d\n",@@ a[@@ n-@@ 3].@@ id,@@ a[@@ n-@@ 3].@@ total); return0; }  
c -1
h -1
0

intmain() { intk,@@ row,@@ q,@@ col,@@ i,j@@ ,*@@ a,*@@ num; scanf("%d",&k); num=@@ (int*)malloc(@@ k@@ *sizeof(int)); for(q=0;q@@ <k;@@ q++) { intsum=0; scanf("%d%d",&row,&col); a=@@ (int*)malloc(@@ row@@ *col@@ *sizeof(int)); for(i=0;i<row;i++) for(j=0;j<col;j++) { scanf("%d",a@@ +i@@ *col@@ +j); if(i@@ ==0||@@ j@@ ==0||i==@@ row-1@@ ||j==@@ col@@ -1)@@ sum=sum+*(@@ a@@ +i@@ *col@@ +j); } *(@@ num@@ +@@ q@@ )@@ =@@ sum; free(@@ a); } for(q=0;q@@ <k;@@ q++) printf("%d\n",*(@@ num@@ +@@ q@@ )); free(@@ num); }  
c -1
h -1
structpatient { char@@ No@@ [10]; intage; }@@ grp1@@ [100],@@ grp2@@ [100],@@ grp3@@ [100]; intmain() { intn; scanf("%d",&n); inti; for(i=0;i<n;i++) { scanf("%s%d",&@@ grp1@@ [i].@@ No@@ ,&@@ grp1@@ [i].age); } for(i=0;i<n;i++) { grp2@@ [i].age@@ =-1; grp3@@ [i].age@@ =-1; } for(i=0;i<n;i++) { if(@@ grp1@@ [i].age>=60) { strcpy(@@ grp2@@ [i].@@ No@@ ,@@ grp1@@ [i].@@ No@@ ); grp2@@ [i].age@@ =@@ grp1@@ [i].age; } if(@@ grp1@@ [i].age<60) { strcpy(@@ grp3@@ [i].@@ No@@ ,@@ grp1@@ [i].@@ No@@ ); grp3@@ [i].age@@ =@@ grp1@@ [i].age; } } char@@ y@@ [10]; intx; intk,@@ m; for(k=1;k<@@ n;k++) { for(m=0;m<@@ n-@@ k@@ ;m++) { if(@@ grp2@@ [m@@ ].age@@ <@@ grp2@@ [m@@ +1@@ ].age) { x=@@ grp2@@ [m@@ +1@@ ].@@ age; grp2@@ [m@@ +1@@ ].age=@@ grp2@@ [m@@ ].@@ age; grp2@@ [m@@ ].age=@@ x; strcpy(@@ y,@@ grp2@@ [m@@ +1@@ ].@@ No@@ ); strcpy(@@ grp2@@ [m@@ +1@@ ].@@ No@@ ,@@ grp2@@ [m@@ ].@@ No@@ ); strcpy(@@ grp2@@ [m@@ ].@@ No@@ ,@@ y); } } } for(i=0;i<n;i++) { if(@@ grp2@@ [i].age@@ !=-1) printf("%s\n",@@ grp2@@ [i].@@ No@@ ); } for(i=0;i<n;i++) { if(@@ grp3@@ [i].age@@ !=-1) printf("%s\n",@@ grp3@@ [i].@@ No@@ ); } return0; }  
c -1
h -1
0

intmain() { intt,@@ tri@@ [100][100],@@ h,@@ l@@ ,*@@ point@@ =@@ tri@@ [0]; cin>>t; for(inti=1;i<=@@ t;i++) { cin>>@@ h@@ >>@@ l; int@@ temp=0; for(intp@@ =1@@ ;p<=@@ h@@ ;p++) { for(int@@ q@@ =1;@@ q@@ <=@@ l@@ ;q++) { cin>>@@ *(@@ point@@ +@@ 100@@ *p@@ +@@ q); if(p@@ ==1||@@ q@@ ==1||@@ p@@ ==@@ h@@ ||@@ q@@ ==@@ l) temp@@ +=@@ *(@@ point@@ +@@ 100@@ *p@@ +@@ q); } } cout<<@@ temp@@ <<endl; } return0; }  
c -1
h -1
main() {int@@ run@@ (int@@ n); int@@ q@@ [13]={0,31,28,31,30,31,30,31,31,30,31,30,31}; inti,n,@@ y,@@ r,@@ s=0,@@ k; scanf("%d%d%d",&@@ n,&@@ y,&@@ r); for(i=0;i<y;i++) s=s+@@ q@@ [i]; s=s+@@ r; k=@@ run@@ (n); if(k@@ &&(@@ y@@ >2@@ ))@@ s@@ +=1; printf("%d",s); } int@@ run@@ (intn) {@@ inta; if((@@ n@@ %@@ 400==0)||(@@ (n@@ %@@ 4==0)&&(@@ n@@ %100!=0@@ ))@@ )@@ a=1; else@@ a=0; return@@ a; }  
c -1
h -1
0

struct@@ ill { charid@@ [11]; intage; struct@@ ill@@ *next; }; struct@@ ill@@ *creat@@ (intn) {@@ struct@@ ill@@ *head,*p1,*p2; inti; head=NULL; for(i=0;i<n;i++) {@@ p1=(struct@@ ill@@ *)malloc(sizeof(struct@@ ill@@ )); scanf("%s%d",@@ p1->id,&p1->age); if(i==0)@@ head=p1; elsep2->next=p1; p2=p1; } p2->next=NULL; return(head); } struct@@ ill@@ *@@ arrang@@ (struct@@ ill@@ *head) {int@@ t,@@ tt@@ ; chars[@@ 11@@ ],@@ ss@@ [11]; struct@@ ill@@ *p,*@@ q@@ ,*@@ m@@ ,*@@ h; for(p=head@@ ;p!=NULL;p=p->next) { if(p->@@ age@@ >=60) { for(m=@@ p,@@ q=@@ p->next@@ ;q@@ !=NULL;@@ q=q@@ ->next) if(q@@ ->age@@ >@@ m@@ ->age@@ &&m@@ ->age@@ >=60@@ )@@ m=@@ q; {t=@@ tt@@ =p->@@ age@@ ;@@ strcpy(s,@@ p->@@ id@@ );strcpy(@@ ss@@ ,@@ p->@@ id); for(@@ h=@@ p->next@@ ;@@ h@@ !=@@ m@@ ->next@@ ;@@ h=@@ h@@ ->next) {@@ tt@@ =@@ h@@ ->age@@ ;@@ strcpy(@@ ss@@ ,@@ h@@ ->id); h@@ ->age=@@ t;@@ strcpy(@@ h@@ ->id,@@ s); t=@@ tt@@ ;@@ strcpy(s,@@ ss@@ ); } p->age@@ =@@ t;@@ strcpy(@@ p->@@ id,@@ s); } } } return(head); } voidmain() {@@ intn; struct@@ ill@@ *head,*@@ h; scanf("%d",&n); head=creat(n); head=@@ arrang@@ (head); for(@@ h=@@ head;@@ h@@ !=NULL;@@ h=@@ h@@ ->next) if(h@@ ->age@@ >=60@@ )@@ printf("%s\n",@@ h@@ ->id); for(@@ h=@@ head;@@ h@@ !=NULL;@@ h=@@ h@@ ->next) if(h@@ ->age@@ <60@@ )@@ printf("%s\n",@@ h@@ ->id); }  
c -1
h -1
intmain() { intn,@@ a[100],@@ l@@ [100@@ ],b[100],@@ i=0,@@ j,k,@@ p=0,@@ q=0,@@ t=0; chars@@ [100][@@ 12@@ ],@@ lao@@ [100][@@ 13@@ ]={'\0'},@@ bu@@ [100][@@ 13@@ ]={'\0'},@@ w@@ [12@@ ]={'\0'}; scanf("%d",&n); for(i=0;i<n;i++){ scanf("%s%d",&@@ s[i]@@ ,&@@ a[i]); if(a[i]@@ >=60@@ )@@ l@@ [p@@ ]=@@ a[i],@@ strcpy(@@ lao@@ [p@@ ],@@ s[i]@@ ),@@ p++; else@@ b[@@ q@@ ]=@@ a[i],@@ strcpy(@@ bu@@ [q@@ ],@@ s[i]@@ ),@@ q@@ ++;} for(i=0;i<p@@ ;i++){ for(j=0;j<@@ p@@ -1;j++){ if(l@@ [j]<@@ l@@ [j+1@@ ])@@ t=@@ l@@ [j],@@ l@@ [j]=@@ l@@ [j+1],@@ l@@ [j+1]=@@ t,@@ strcpy(@@ w,@@ lao@@ [j]@@ ),@@ strcpy(@@ lao@@ [j],@@ lao@@ [j+1]@@ ),@@ strcpy(@@ lao@@ [j+1],@@ w); }} for(i=0;i<p@@ ;i++){@@ printf("%s\n",@@ lao@@ [i]);} for(i=0;i<@@ q@@ ;i++){@@ printf("%s\n",@@ bu@@ [i]);} }  
c -1
h -1
1


intmain(){ inti,j,n,@@ k,@@ a,b,@@ c=0; int@@ sz1@@ [1000],@@ sz2@@ [1000]; scanf("%d%d",&n,&k); for(i=1;i<=n;i++){ scanf("%d",&a); sz1@@ [i]=@@ a; sz2@@ [i]=@@ a; } for(i=1;i<=n;i++){ b=@@ sz1@@ [i]; for(j=1;j<=n;j++){ if(j!=@@ i@@ &&@@ b+@@ sz2@@ [j]==k){ c=1; break; } } } if(c@@ ==1){ printf("yes"); }else{ printf("no"); } return0; }  
c -1
h -1
intmain() { intk,@@ m,n; cin>>k; while(k@@ >0) { cin>>m>>n; intnum[@@ 110][110@@ ]={0},@@ (*p)@@ [@@ 110@@ ],@@ sum=0,@@ i,j; p=@@ num; for(i=0;i<m;i++) { for(j=0;j<n;j++) { cin>>@@ *(*(p+i)+j); } } p=@@ num; for(j=0;j<n;j++) sum=sum+*(@@ *p@@ +j); for(i=1;i<m;i++) sum=sum+*(@@ *(p+i)@@ +n-1); for(j=0;j<n-1;j++) sum=sum+*(@@ *(p@@ +m-1)@@ +j); for(i=1;i<m-1;i++) sum=sum+*(@@ *(p+i)@@ +@@ 0); cout<<sum<<endl; k--; } return0; }  
c -1
h -1
0

structbook { intnum; charauthor[26]; structbook*next; }; voidmain() { intm,i,j,@@ l,@@ max,@@ maxi@@ ;@@ intn@@ [26]={0}; structbook@@ *head,*@@ p1,*p2@@ ;@@ char*@@ p; scanf("%d",&m); i=0; p1=p2=(struct@@ book@@ *)malloc(LEN); scanf("%d%s",&p1->num,p1->@@ author); head=NULL; while(i<@@ m) { i++; if(i==1) head=p1; else p2->next=p1; p2=p1; if(i<@@ m) { p1=(structbook@@ *)malloc(LEN); scanf("%d%s",&p1->num,p1->@@ author); } } p2->next=NULL; p1=head; while(p1!=NULL) { l=strlen(@@ p1->@@ author); p=@@ p1->@@ author@@ ; for(i=0;i<l;i++) { for(j=0;j<26;j++) if(@@ *(p+i)@@ ==@@ j@@ +@@ 64@@ ) n@@ [j]@@ ++; } p1=p1->next; } max=@@ n@@ [0]; for(i=1;i<26;i++) { if(n@@ [i]>max) { max=@@ n[i]; maxi@@ =i; } } printf("%c\n",@@ maxi@@ +@@ 64@@ ); printf("%d\n",max); p1=head; while(p1!=NULL) { l=strlen(@@ p1->@@ author); p=@@ p1->@@ author@@ ; for(i=0;i<l;i++) { if(@@ *(p+i)@@ ==@@ maxi@@ +@@ 64@@ ) { printf("%d\n",@@ p1->num); break; } } p1=p1->next; } }  
c -1
h -1
intmain() { inta,b,c,@@ i,@@ sum; scanf("%d%d%d",&a,&b,&c); sum=0; for(i=1;i<@@ b;i++) { switch(@@ i) { case1: sum+=@@ 31; break; case2: if(a%@@ 400==0||(@@ a%100!=0@@ )&&(@@ a%@@ 4@@ ==0)) { sum+=@@ 29; } else { sum+=@@ 28; } break; case3: sum+=@@ 31; break; case4: sum+=@@ 30; break; case5: sum+=@@ 31; break; case6: sum+=@@ 30; break; case7: sum+=@@ 31; break; case8: sum+=@@ 31; break; case9: sum+=@@ 30; break; case10: sum+=@@ 31; break; case11: sum+=@@ 30; break; case12: sum+=@@ 31; break; } } sum+=@@ c; printf("%d\n",sum); return0; }  
c -1
h -1
0

int@@ fenj@@ (intx,int@@ y){ int@@ a@@ =(@@ x@@ ==1)@@ ,i; for(i=y@@ ;i<=@@ x;i++) if(x@@ %i==0)@@ a=@@ a+@@ fenj@@ (x/i,i); return@@ a; } intmain(){ intk; cin>>k; inta[@@ k@@ ]; for(inti=0;i<@@ k;i++)@@ cin>>a[i]; for(inti=0;i<@@ k;i++)@@ cout<<@@ fenj@@ (a[i],@@ 2)<<endl; return0; }  
c -1
h -1
intmain() {@@ inta[100][100@@ ];@@ inti,j,@@ q,@@ s=0; intm,n,@@ k; scanf("%d",&k); for(q=0;q@@ <k;@@ q++) {@@ s=0;@@ scanf("%d%d",&m,&n); for(i=0;i<m;i++) {@@ for(j=0;j<n;j++) {@@ scanf("%d",@@ *(a+i)@@ +j@@ );}} for(i=0;i<n;i++) s=s@@ +*(@@ *(a+@@ 0)@@ +i); for(i=1;i<m;i++) s=s@@ +*(@@ *(a+i)@@ +n-1); for(i=1;i<m;i++) s=s@@ +*(@@ *(a+i)@@ +@@ 0); for(i=1;i<n-1;i++) s=s@@ +*(@@ *(a@@ +m-1)@@ +i); printf("%d\n",s@@ );}}  
c -1
h -1
0

intsum=0; void@@ count@@ (int@@ N@@ ,int@@ i) { if(N@@ ==1)@@ sum++; while(i<=@@ N@@ ){ if(N@@ %i==0)@@ count@@ (@@ N@@ /i,i); i++; } return; } intmain() { int@@ T@@ =0; cin>>@@ T@@ ; while(@@ T@@ --) { intN@@ =0; cin>>@@ N; int@@ i=@@ 2,@@ total@@ =1; while(i<=@@ N@@ /@@ 2) { if(N@@ %i==0) { sum=0; count@@ (@@ N@@ /i,i); total+=@@ sum; } i++; } cout<<@@ total@@ <<endl; } return0; }  
c -1
h -1
long@@ total; int@@ run@@ (intn) { if(n@@ %4==0&&@@ n@@ %@@ 100!=0) { return1; } if(n%@@ 400==0) { return1; } return0; } intmain() { intyear,month,day; inti; while(cin>>@@ year>>@@ month>>@@ day@@ ) { total=0; if(@@ run@@ (year@@ )) { if(month==1) { total+=@@ day; } if(month==2) { total+=@@ 31+@@ day; } switch(month) { case3:@@ total+=@@ 60@@ +day;break; case4:@@ total+=@@ 91@@ +day;break; case5:@@ total+=@@ 121@@ +day;break; case6:@@ total+=@@ 152@@ +day;break; case7:@@ total+=@@ 182@@ +day;break; case8:@@ total+=@@ 213@@ +day;break; case9:@@ total+=@@ 244@@ +day;break; case10:@@ total+=@@ 274@@ +day;break; case11:@@ total+=@@ 305@@ +day;break; case12:@@ total+=@@ 335@@ +day;break; } } else { if(month==1) { total+=@@ day; } if(month==2) { total+=@@ 31+@@ day; } switch(month) { case3:@@ total+=@@ 59@@ +day;break; case4:@@ total+=@@ 90@@ +day;break; case5:@@ total+=@@ 120@@ +day;break; case6:@@ total+=@@ 151@@ +day;break; case7:@@ total+=@@ 181@@ +day;break; case8:@@ total+=@@ 212@@ +day;break; case9:@@ total+=@@ 243@@ +day;break; case10:@@ total+=@@ 273@@ +day;break; case11:@@ total+=@@ 304@@ +day;break; case12:@@ total+=@@ 334@@ +day;break; } } cout<<@@ total@@ <<endl; } return0; }  
c -1
h -1
0

main() { int@@ dao@@ ,a[@@ 25@@ ]={0},b[@@ 25@@ ],i,j,@@ num; scanf("%d",&@@ dao@@ ); for(i=0;i<@@ dao@@ ;i++) { scanf("%d",&b[i]); } for(i=@@ dao@@ -1;i>=0;i--) { num=0; for(j=i;j<@@ dao@@ ;j++) { if(b[i]@@ >=@@ b[j]@@ &&@@ num@@ <=@@ a[j])@@ num=@@ a[j]; } a[i]=@@ num@@ +1; } num=@@ a[0]; for(i=1;i<@@ dao@@ ;i++) { if(a[i]>=@@ num@@ )@@ num=@@ a[i]; } printf("%d",@@ num); }  
c -1
h -1
intmain() { inti,j,n,@@ h1@@ ,@@ l1,@@ h2@@ ,@@ l2@@ ; inta[1000][1000]; cin>>n; for(i=0;i<n;i++) { for(j=0;j<n;j++) { cin>>a[i][j]; } } for(i=0;i<n;i++) { for(j=0;j<n;j++) { if(a[i][j]==0) { h1@@ =i; l1@@ =j; break; break; } } } for(i=n-1;i>=0;i--) { for(j=n-1;j>=0;j--) { if(a[i][j]==0) { h2@@ =i; l2@@ =j; break; break; } } } cout<<(@@ fabs@@ (@@ h2@@ -@@ h1@@ )@@ -1)*(@@ fabs@@ (@@ l2@@ -@@ l1@@ )@@ -1)@@ <<endl; return0; }  
c -1
h -1
0

typedef@@ struct@@ Node { charID@@ [11]; intage; struct@@ Node@@ *next; }@@ node@@ ; node@@ *creat@@ (intn) { node@@ *@@ p1,*p2,*head; inti; p1=p2@@ =(@@ node@@ *)malloc(sizeof(@@ node@@ )); head=p1; for(i=0;i<n;i++) { p2=p1; scanf("%s%d",p1->@@ ID@@ ,&p1->@@ age); p1@@ =(@@ node@@ *)malloc(sizeof(@@ node@@ )); p2->next=p1; } p2->next=NULL; return(head); } voidsort@@ (int@@ x,@@ char*@@ a,@@ node@@ *head) { node@@ *@@ pre@@ =@@ head,*@@ p=@@ pre@@ ->next@@ ,*@@ s; s=(@@ node@@ *)malloc(sizeof(@@ node@@ )); s@@ ->age=@@ x; strcpy(@@ s@@ ->@@ ID,@@ a); s@@ ->next=NULL; while(p@@ !=NULL@@ &&@@ x@@ <=@@ p->age@@ ) { pre@@ =p; p=p->next; } pre@@ ->next=@@ s; s@@ ->next=p; } voidprint@@ (@@ node@@ *head) { node@@ *p; p=head; while(p!=NULL) { printf("%s\n",p->@@ ID); p=p->next; } } voidmain() { intn; node@@ *@@ head1@@ ,*@@ head2@@ ,*p; scanf("%d",&n); head1@@ =@@ creat@@ (n); head2@@ =(@@ node@@ *)malloc(sizeof(@@ node@@ )); strcpy(@@ head2@@ ->@@ ID@@ ,"@@ "); head2@@ ->next=NULL; p=@@ head1@@ ; while(p!=NULL) { if(p->@@ age@@ >=60) sort(@@ p->age@@ ,@@ p->@@ ID,@@ head2@@ ); p=p->next; } head2@@ =@@ head2@@ ->next; print(@@ head2@@ ); p=@@ head1@@ ; while(p!=NULL) { if(p->@@ age@@ <60) printf("%s\n",p->@@ ID); p=p->next; } }  
c -1
h -1
inta[@@ 30000@@ ]; int@@ find@@ (int@@ k) { inti; for(i=0;i<k;i++) { if(a[i]==@@ a[k]) return1; } return0; } intmain() { intn; cin>>n; for(inti=0;i<n;i++) cin>>a[i]; cout<<a[0]; for(intk@@ =1@@ ;k<@@ n;k++) { if(@@ find@@ (@@ k)@@ ==0) cout<<""<<@@ a[k]; } return0; }  
c -1
h -1
0

intmain(){ intsz[100][100]; int@@ x,@@ k,@@ m,n,@@ i,j,@@ sum; scanf("%d",&k); for(x=0;x@@ <k;@@ x@@ ++){ scanf("%d%d",&m,&n); for(i=0;i<m;i++){ for(j=0;j<n;j++){ scanf("%d",&sz[i][j]); } } sum=0; for(j=0;j<n-1@@ ;j++){ sum+=@@ sz[0]@@ [j]; } for(i=0;i<m@@ -1;i++){ sum+=@@ sz[i]@@ [j]; } for(@@ ;j>0@@ ;j--){ sum+=@@ sz[i]@@ [j]; } for(@@ ;i>0@@ ;i--){ sum+=@@ sz[i]@@ [j]; } printf("%d\n",sum); } return0; }  
c -1
h -1
main() { int@@ c[100]; intm,@@ z; for(m@@ =0;@@ ;m++){ inti,j,k,@@ n; inta[@@ 17@@ ],b[@@ 17@@ ]; n=0; scanf("%d",&a[0]); b[0]=@@ 2*@@ a[0]; if(a[0]@@ ==@@ -1){ goto@@ end@@ ; } else{ for(i=1;@@ a[i-1]@@ !=0@@ ;i++){ scanf("%d",&a[i]); if(a[i]==@@ -1){ goto@@ end@@ ; } b[i]=@@ 2*@@ a[i]; } for(j=0;j<@@ i@@ -1;j++){ for(k=0;k<@@ i@@ -1@@ ;k++){ if(@@ b[k@@ ]==@@ a[j]) n++; } c[m@@ ]=@@ n; } } } end@@ :@@ for(z@@ =0;z@@ <m;@@ z++) printf("%d\n",@@ c[@@ z@@ ]); }  
c -1
h -1
0

intmain() { intn,k; scanf("%d%d",&n,&k); intsz[@@ N]; inti,@@ m=0,@@ p=0; for(i=0;i<n;i++) { scanf("%d",&sz[i]); } intj; for(i=0;i<n-1;i++) { for(j=i+1;j<n;j++) { if(sz[i]+sz@@ [j]==k) { printf("yes"); p=1; break; } else { m++; } } if(p@@ ==1) { break; } } if(p@@ ==0) { printf("no"); } return0; }  
c -1
h -1
intmain(){ intn; scanf("%d",&n); intx,y,@@ a,b,@@ sz@@ [100][100],@@ tag@@ ,@@ tag1@@ =0; for(x=0;x@@ <n;@@ x@@ ++){ tag@@ =0; for(y=0;y@@ <n;@@ y@@ ++){ scanf("%d",&@@ sz[@@ x@@ ][y@@ ]); if(sz[@@ x@@ ][y@@ ]==0){ tag@@ ++; tag1@@ ++; } } if(@@ tag1@@ ==@@ tag@@ ){ a=@@ tag@@ -2@@ ; } } b@@ =(@@ tag1@@ -2@@ *(a+@@ 2@@ ))@@ /2; printf("%d",@@ a*@@ b); return0; }  
c -1
h -1
0

